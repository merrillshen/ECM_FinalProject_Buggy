

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 10 11:56:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 05/05/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F67K40 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK1
   105  00347E                     __pidataBANK1:
   106                           	callstack 0
   107                           
   108                           ;initializer for determine_color2@F14792
   109  00347E  0991               	dw	2449
   110  003480  009E               	dw	158
   111  003482  012C               	dw	300
   112  003484  06C9               	dw	1737
   113  003486  00A8               	dw	168
   114  003488  00EB               	dw	235
   115  00348A  069C               	dw	1692
   116  00348C  0093               	dw	147
   117  00348E  00EF               	dw	239
   118  003490  09F0               	dw	2544
   119  003492  00FA               	dw	250
   120  003494  014E               	dw	334
   121  003496  096E               	dw	2414
   122  003498  00ED               	dw	237
   123  00349A  00F8               	dw	248
   124  00349C  09F9               	dw	2553
   125  00349E  00B1               	dw	177
   126  0034A0  013C               	dw	316
   127  0034A2  08AD               	dw	2221
   128  0034A4  00E9               	dw	233
   129  0034A6  014F               	dw	335
   130  0034A8  0A10               	dw	2576
   131  0034AA  0116               	dw	278
   132  0034AC  0187               	dw	391
   133  0034AE  0332               	dw	818
   134  0034B0  017E               	dw	382
   135  0034B2  00C1               	dw	193
   136                           
   137                           ;initializer for determine_color1@F14773
   138  0034B4  002F               	dw	47
   139  0034B6  056E               	dw	1390
   140  0034B8  0307               	dw	775
   141  0034BA  0951               	dw	2385
   142  0034BC  067C               	dw	1660
   143  0034BE  031B               	dw	795
   144  0034C0  0686               	dw	1670
   145  0034C2  048A               	dw	1162
   146  0034C4  0257               	dw	599
   147  0034C6  0A6F               	dw	2671
   148  0034C8  05C1               	dw	1473
   149  0034CA  02E1               	dw	737
   150  0034CC  0B25               	dw	2853
   151  0034CE  056F               	dw	1391
   152  0034D0  0313               	dw	787
   153  0034D2  0976               	dw	2422
   154  0034D4  03DF               	dw	991
   155  0034D6  0234               	dw	564
   156  0034D8  08B1               	dw	2225
   157  0034DA  05E3               	dw	1507
   158  0034DC  0314               	dw	788
   159  0034DE  0A8E               	dw	2702
   160  0034E0  0676               	dw	1654
   161  0034E2  0378               	dw	888
   162  0034E4  002F               	dw	47
   163  0034E6  0017               	dw	23
   164  0034E8  0012               	dw	18
   165                           
   166                           	psect	idataBANK2
   167  0038AA                     __pidataBANK2:
   168                           	callstack 0
   169                           
   170                           ;initializer for determine_color3@F14811
   171  0038AA  019F               	dw	415
   172  0038AC  0385               	dw	901
   173  0038AE  0158               	dw	344
   174  0038B0  012B               	dw	299
   175  0038B2  0469               	dw	1129
   176  0038B4  01AA               	dw	426
   177  0038B6  0100               	dw	256
   178  0038B8  0453               	dw	1107
   179  0038BA  01AE               	dw	430
   180  0038BC  0203               	dw	515
   181  0038BE  0567               	dw	1383
   182  0038C0  01F5               	dw	501
   183  0038C2  01DB               	dw	475
   184  0038C4  04CA               	dw	1226
   185  0038C6  01E1               	dw	481
   186  0038C8  01BD               	dw	445
   187  0038CA  03E5               	dw	997
   188  0038CC  0179               	dw	377
   189  0038CE  019F               	dw	415
   190  0038D0  0589               	dw	1417
   191  0038D2  022F               	dw	559
   192  0038D4  0217               	dw	535
   193  0038D6  062C               	dw	1580
   194  0038D8  0279               	dw	633
   195  0038DA  0499               	dw	1177
   196  0038DC  00F4               	dw	244
   197  0038DE  00B7               	dw	183
   198                           
   199                           	psect	smallconst
   200  000E00                     __psmallconst:
   201                           	callstack 0
   202  000E00  00                 	db	0
   203  000E01  4260               	dw	16992
   204  000E03  0DA2               	dw	3490
   205  000E05                     __end_of_tiny:
   206                           	callstack 0
   207  0000                     _PIE4bits	set	3629
   208  0000                     _TX4REG	set	3812
   209  0000                     _RC4REG	set	3811
   210  0000                     _PIR4bits	set	3639
   211  0000                     _RC4STAbits	set	3815
   212  0000                     _SP4BRGH	set	3814
   213  0000                     _SP4BRGL	set	3813
   214  0000                     _TX4STAbits	set	3816
   215  0000                     _BAUD4CONbits	set	3817
   216  0000                     _RX4PPS	set	3605
   217  0000                     _RC0PPS	set	3682
   218  0000                     _ANSELFbits	set	3764
   219  0000                     _RC7PPS	set	3689
   220  0000                     _RE2PPS	set	3700
   221  0000                     _SSP2BUF	set	3797
   222  0000                     _SSP2CON2bits	set	3802
   223  0000                     _SSP2CON2	set	3802
   224  0000                     _SSP2STAT	set	3800
   225  0000                     _RD6PPS	set	3696
   226  0000                     _RD5PPS	set	3695
   227  0000                     _SSP2CLKPPS	set	3612
   228  0000                     _SSP2DATPPS	set	3613
   229  0000                     _ANSELDbits	set	3751
   230  0000                     _SSP2ADD	set	3798
   231  0000                     _SSP2CON1bits	set	3801
   232  0000                     _INTCONbits	set	4082
   233  0000                     _PORTFbits	set	3982
   234  0000                     _LATHbits	set	3968
   235  0000                     _TRISHbits	set	3976
   236  0000                     _LATDbits	set	3964
   237  0000                     _LATFbits	set	3966
   238  0000                     _TRISAbits	set	3969
   239  0000                     _LATAbits	set	3961
   240  0000                     _TRISFbits	set	3974
   241  0000                     _PWM7CONbits	set	4001
   242  0000                     _PWM6CONbits	set	4004
   243  0000                     _T2PR	set	4028
   244  0000                     _T2CLKCONbits	set	4031
   245  0000                     _T2HLTbits	set	4030
   246  0000                     _T2CONbits	set	4029
   247  0000                     _LATGbits	set	3967
   248  0000                     _LATCbits	set	3963
   249  0000                     _LATEbits	set	3965
   250  0000                     _TRISGbits	set	3975
   251  0000                     _TRISCbits	set	3971
   252  0000                     _TRISEbits	set	3973
   253  0000                     _TRISDbits	set	3972
   254  0000                     _LATG	set	3967
   255  0000                     _LATE	set	3965
   256  0000                     _PWM7DCH	set	4000
   257  0000                     _PWM6DCH	set	4003
   258  000E05                     STR_2:
   259  000E05  20                 	db	32
   260  000E06  42                 	db	66	;'B'
   261  000E07  20                 	db	32
   262  000E08  52                 	db	82	;'R'
   263  000E09  3A                 	db	58	;':'
   264  000E0A  25                 	db	37
   265  000E0B  64                 	db	100	;'d'
   266  000E0C  20                 	db	32
   267  000E0D  47                 	db	71	;'G'
   268  000E0E  3A                 	db	58	;':'
   269  000E0F  25                 	db	37
   270  000E10  64                 	db	100	;'d'
   271  000E11  20                 	db	32
   272  000E12  42                 	db	66	;'B'
   273  000E13  3A                 	db	58	;':'
   274  000E14  25                 	db	37
   275  000E15  64                 	db	100	;'d'
   276  000E16  20                 	db	32
   277  000E17  0D                 	db	13
   278  000E18  0A                 	db	10
   279  000E19  00                 	db	0
   280  000E1A                     STR_1:
   281  000E1A  20                 	db	32
   282  000E1B  57                 	db	87	;'W'
   283  000E1C  20                 	db	32
   284  000E1D  52                 	db	82	;'R'
   285  000E1E  3A                 	db	58	;':'
   286  000E1F  25                 	db	37
   287  000E20  64                 	db	100	;'d'
   288  000E21  20                 	db	32
   289  000E22  47                 	db	71	;'G'
   290  000E23  3A                 	db	58	;':'
   291  000E24  25                 	db	37
   292  000E25  64                 	db	100	;'d'
   293  000E26  20                 	db	32
   294  000E27  42                 	db	66	;'B'
   295  000E28  3A                 	db	58	;':'
   296  000E29  25                 	db	37
   297  000E2A  64                 	db	100	;'d'
   298  000E2B  20                 	db	32
   299  000E2C  0D                 	db	13
   300  000E2D  0A                 	db	10
   301  000E2E  00                 	db	0
   302  000E2F                     STR_5:
   303  000E2F  20                 	db	32
   304  000E30  42                 	db	66	;'B'
   305  000E31  52                 	db	82	;'R'
   306  000E32  3A                 	db	58	;':'
   307  000E33  25                 	db	37
   308  000E34  64                 	db	100	;'d'
   309  000E35  20                 	db	32
   310  000E36  00                 	db	0
   311  000E37                     STR_4:
   312  000E37  20                 	db	32
   313  000E38  47                 	db	71	;'G'
   314  000E39  52                 	db	82	;'R'
   315  000E3A  3A                 	db	58	;':'
   316  000E3B  25                 	db	37
   317  000E3C  64                 	db	100	;'d'
   318  000E3D  20                 	db	32
   319  000E3E  00                 	db	0
   320  000E3F                     STR_3:
   321  000E3F  20                 	db	32
   322  000E40  52                 	db	82	;'R'
   323  000E41  52                 	db	82	;'R'
   324  000E42  3A                 	db	58	;':'
   325  000E43  25                 	db	37
   326  000E44  64                 	db	100	;'d'
   327  000E45  20                 	db	32
   328  000E46  00                 	db	0
   329  000E47  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  00340C                     __pcinit:
   335                           	callstack 0
   336  00340C                     start_initialization:
   337                           	callstack 0
   338  00340C                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK2 (54 bytes)
   342                           ; load TBLPTR registers with __pidataBANK2
   343  00340C  0EAA               	movlw	low __pidataBANK2
   344  00340E  6EF6               	movwf	tblptrl,c
   345  003410  0E38               	movlw	high __pidataBANK2
   346  003412  6EF7               	movwf	tblptrh,c
   347  003414  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   348  003416  6EF8               	movwf	tblptru,c
   349  003418  EE02  F082         	lfsr	0,__pdataBANK2
   350  00341C  EE10 F036          	lfsr	1,54
   351  003420                     copy_data0:
   352  003420  0009               	tblrd		*+
   353  003422  CFF5 FFEE          	movff	tablat,postinc0
   354  003426  50E5               	movf	postdec1,w,c
   355  003428  50E1               	movf	fsr1l,w,c
   356  00342A  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK1 (108 bytes)
   359                           ; load TBLPTR registers with __pidataBANK1
   360  00342C  0E7E               	movlw	low __pidataBANK1
   361  00342E  6EF6               	movwf	tblptrl,c
   362  003430  0E34               	movlw	high __pidataBANK1
   363  003432  6EF7               	movwf	tblptrh,c
   364  003434  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   365  003436  6EF8               	movwf	tblptru,c
   366  003438  EE01  F072         	lfsr	0,__pdataBANK1
   367  00343C  EE10 F06C          	lfsr	1,108
   368  003440                     copy_data1:
   369  003440  0009               	tblrd		*+
   370  003442  CFF5 FFEE          	movff	tablat,postinc0
   371  003446  50E5               	movf	postdec1,w,c
   372  003448  50E1               	movf	fsr1l,w,c
   373  00344A  E1FA               	bnz	copy_data1
   374                           
   375                           ; Clear objects allocated to BANK1 (114 bytes)
   376  00344C  EE01  F000         	lfsr	0,__pbssBANK1
   377  003450  0E72               	movlw	114
   378  003452                     clear_0:
   379  003452  6AEE               	clrf	postinc0,c
   380  003454  06E8               	decf	wreg,f,c
   381  003456  E1FD               	bnz	clear_0
   382                           
   383                           ; Clear objects allocated to BANK0 (8 bytes)
   384  003458  EE00  F07A         	lfsr	0,__pbssBANK0
   385  00345C  0E08               	movlw	8
   386  00345E                     clear_1:
   387  00345E  6AEE               	clrf	postinc0,c
   388  003460  06E8               	decf	wreg,f,c
   389  003462  E1FD               	bnz	clear_1
   390                           
   391                           ; Clear objects allocated to COMRAM (4 bytes)
   392  003464  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   393  003466  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   394  003468  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   395  00346A  6A56               	clrf	__pbssCOMRAM& (0+255),c
   396  00346C                     end_of_initialization:
   397                           	callstack 0
   398  00346C                     __end_of__initialization:
   399                           	callstack 0
   400  00346C  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   401  00346E  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   402  003470  0E00               	movlw	low (__Lsmallconst shr (0+16))
   403  003472  6EF8               	movwf	tblptru,c
   404  003474  0E0E               	movlw	high __Lsmallconst
   405  003476  6EF7               	movwf	tblptrh,c
   406  003478  0100               	movlb	0
   407  00347A  EF07  F00D         	goto	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMRAM
   410  000056                     __pbssCOMRAM:
   411                           	callstack 0
   412  000056                     _TxBufReadCnt:
   413                           	callstack 0
   414  000056                     	ds	1
   415  000057                     _TxBufWriteCnt:
   416                           	callstack 0
   417  000057                     	ds	1
   418  000058                     _RxBufReadCnt:
   419                           	callstack 0
   420  000058                     	ds	1
   421  000059                     _RxBufWriteCnt:
   422                           	callstack 0
   423  000059                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  00007A                     __pbssBANK0:
   427                           	callstack 0
   428  00007A                     _nout:
   429                           	callstack 0
   430  00007A                     	ds	2
   431  00007C                     _width:
   432                           	callstack 0
   433  00007C                     	ds	2
   434  00007E                     _prec:
   435                           	callstack 0
   436  00007E                     	ds	2
   437  000080                     _flags:
   438                           	callstack 0
   439  000080                     	ds	2
   440                           
   441                           	psect	bssBANK1
   442  000100                     __pbssBANK1:
   443                           	callstack 0
   444  000100                     _EUSART4TXbuf:
   445                           	callstack 0
   446  000100                     	ds	60
   447  00013C                     _EUSART4RXbuf:
   448                           	callstack 0
   449  00013C                     	ds	20
   450  000150                     _errno:
   451                           	callstack 0
   452  000150                     	ds	2
   453  000152                     _dbuf:
   454                           	callstack 0
   455  000152                     	ds	32
   456                           
   457                           	psect	dataBANK1
   458  000172                     __pdataBANK1:
   459                           	callstack 0
   460  000172                     determine_color2@F14792:
   461                           	callstack 0
   462  000172                     	ds	54
   463  0001A8                     determine_color1@F14773:
   464                           	callstack 0
   465  0001A8                     	ds	54
   466                           
   467                           	psect	dataBANK2
   468  000282                     __pdataBANK2:
   469                           	callstack 0
   470  000282                     determine_color3@F14811:
   471                           	callstack 0
   472  000282                     	ds	54
   473                           
   474                           	psect	cstackBANK2
   475  000200                     __pcstackBANK2:
   476                           	callstack 0
   477  000200                     main@string1:
   478                           	callstack 0
   479                           
   480                           ; 20 bytes @ 0x0
   481  000200                     	ds	20
   482  000214                     main@string2:
   483                           	callstack 0
   484                           
   485                           ; 20 bytes @ 0x14
   486  000214                     	ds	20
   487  000228                     main@string3:
   488                           	callstack 0
   489                           
   490                           ; 20 bytes @ 0x28
   491  000228                     	ds	20
   492  00023C                     main@string0:
   493                           	callstack 0
   494                           
   495                           ; 20 bytes @ 0x3C
   496  00023C                     	ds	20
   497  000250                     main@RedRatio:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x50
   501  000250                     	ds	2
   502  000252                     main@GreenRatio:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x52
   506  000252                     	ds	2
   507  000254                     main@BlueRatio:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x54
   511  000254                     	ds	2
   512  000256                     main@cal:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x56
   516  000256                     	ds	2
   517  000258                     main@motorL:
   518                           	callstack 0
   519                           
   520                           ; 9 bytes @ 0x58
   521  000258                     	ds	9
   522  000261                     main@motorR:
   523                           	callstack 0
   524                           
   525                           ; 9 bytes @ 0x61
   526  000261                     	ds	9
   527  00026A                     main@test:
   528                           	callstack 0
   529                           
   530                           ; 24 bytes @ 0x6A
   531  00026A                     	ds	24
   532                           
   533                           	psect	cstackBANK0
   534  000060                     __pcstackBANK0:
   535                           	callstack 0
   536  000060                     ?_vfprintf:
   537                           	callstack 0
   538  000060                     determine_color_new@out:
   539                           	callstack 0
   540  000060                     vfprintf@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x0
   544  000060                     	ds	2
   545  000062                     determine_color_new@RedRatio:
   546                           	callstack 0
   547  000062                     vfprintf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x2
   551  000062                     	ds	2
   552  000064                     determine_color_new@GreenRatio:
   553                           	callstack 0
   554  000064                     vfprintf@ap:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x4
   558  000064                     	ds	2
   559  000066                     ?_sprintf:
   560                           	callstack 0
   561  000066                     determine_color_new@BlueRatio:
   562                           	callstack 0
   563  000066                     sprintf@s:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x6
   567  000066                     	ds	2
   568  000068                     sprintf@fmt:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x8
   572  000068                     	ds	8
   573  000070                     sprintf@ap:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x10
   577  000070                     	ds	2
   578  000072                     sprintf@f:
   579                           	callstack 0
   580                           
   581                           ; 6 bytes @ 0x12
   582  000072                     	ds	6
   583  000078                     ??_main:
   584                           
   585                           ; 1 bytes @ 0x18
   586  000078                     	ds	2
   587                           
   588                           	psect	cstackCOMRAM
   589  000001                     __pcstackCOMRAM:
   590                           	callstack 0
   591  000001                     ??_getCharFromTxBuf:
   592  000001                     ?_calibrateA:
   593                           	callstack 0
   594  000001                     putCharToRxBuf@byte:
   595                           	callstack 0
   596  000001                     
   597                           ; 1 bytes @ 0x0
   598  000001                     	ds	2
   599  000003                     ??_HighISR:
   600                           
   601                           ; 1 bytes @ 0x2
   602  000003                     	ds	2
   603  000005                     ??_I2C_2_Master_Idle:
   604  000005                     ?_strlen:
   605                           	callstack 0
   606  000005                     ?___xxtofl:
   607                           	callstack 0
   608  000005                     ?___aodiv:
   609                           	callstack 0
   610  000005                     ?___aomod:
   611                           	callstack 0
   612  000005                     putCharToTxBuf@byte:
   613                           	callstack 0
   614  000005                     initDCmotorsPWM@PWMperiod:
   615                           	callstack 0
   616  000005                     fputc@c:
   617                           	callstack 0
   618  000005                     strlen@s:
   619                           	callstack 0
   620  000005                     ___flge@ff1:
   621                           	callstack 0
   622  000005                     ___xxtofl@val:
   623                           	callstack 0
   624  000005                     ___aodiv@dividend:
   625                           	callstack 0
   626  000005                     ___aomod@dividend:
   627                           	callstack 0
   628                           
   629                           ; 8 bytes @ 0x4
   630  000005                     	ds	1
   631  000006                     ??_I2C_2_Master_Read:
   632  000006                     I2C_2_Master_Write@data_byte:
   633                           	callstack 0
   634  000006                     TxBufferedString@string:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x5
   638  000006                     	ds	1
   639  000007                     color_writetoaddr@value:
   640                           	callstack 0
   641  000007                     I2C_2_Master_Read@ack:
   642                           	callstack 0
   643  000007                     fputc@fp:
   644                           	callstack 0
   645  000007                     strlen@a:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x6
   649  000007                     	ds	1
   650  000008                     color_writetoaddr@address:
   651                           	callstack 0
   652  000008                     I2C_2_Master_Read@tmp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x7
   656  000008                     	ds	1
   657  000009                     ??_fputc:
   658  000009                     ??_color_click_init:
   659  000009                     ??___xxtofl:
   660  000009                     ?_color_read_Clear:
   661                           	callstack 0
   662  000009                     ?_color_read_Red:
   663                           	callstack 0
   664  000009                     ?_color_read_Green:
   665                           	callstack 0
   666  000009                     ?_color_read_Blue:
   667                           	callstack 0
   668  000009                     ___flge@ff2:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x8
   672  000009                     	ds	2
   673  00000B                     ??_color_read_Clear:
   674  00000B                     ??_color_read_Red:
   675  00000B                     ??_color_read_Green:
   676  00000B                     ??_color_read_Blue:
   677                           
   678                           ; 1 bytes @ 0xA
   679  00000B                     	ds	2
   680  00000D                     ??___flge:
   681  00000D                     ___xxtofl@sign:
   682                           	callstack 0
   683  00000D                     ___aodiv@divisor:
   684                           	callstack 0
   685  00000D                     ___aomod@divisor:
   686                           	callstack 0
   687                           
   688                           ; 8 bytes @ 0xC
   689  00000D                     	ds	1
   690  00000E                     ___xxtofl@exp:
   691                           	callstack 0
   692  00000E                     color_read_Clear@tmp:
   693                           	callstack 0
   694  00000E                     color_read_Red@tmp:
   695                           	callstack 0
   696  00000E                     color_read_Green@tmp:
   697                           	callstack 0
   698  00000E                     color_read_Blue@tmp:
   699                           	callstack 0
   700  00000E                     fputs@s:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0xD
   704  00000E                     	ds	1
   705  00000F                     ___xxtofl@arg:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0xE
   709  00000F                     	ds	1
   710  000010                     read_colours@m:
   711                           	callstack 0
   712  000010                     calibrateW@m:
   713                           	callstack 0
   714  000010                     fputs@fp:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xF
   718  000010                     	ds	2
   719  000012                     fputs@c:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x11
   723  000012                     	ds	1
   724  000013                     ?_isbtw:
   725                           	callstack 0
   726  000013                     ?___fldiv:
   727                           	callstack 0
   728  000013                     fputs@i:
   729                           	callstack 0
   730  000013                     isbtw@num:
   731                           	callstack 0
   732  000013                     ___fldiv@b:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x12
   736  000013                     	ds	2
   737  000015                     ?_pad:
   738                           	callstack 0
   739  000015                     ___aodiv@counter:
   740                           	callstack 0
   741  000015                     ___aomod@counter:
   742                           	callstack 0
   743  000015                     pad@fp:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x14
   747  000015                     	ds	1
   748  000016                     ___aodiv@sign:
   749                           	callstack 0
   750  000016                     ___aomod@sign:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x15
   754  000016                     	ds	1
   755  000017                     ?_abs:
   756                           	callstack 0
   757  000017                     pad@buf:
   758                           	callstack 0
   759  000017                     abs@a:
   760                           	callstack 0
   761  000017                     isbtw@low:
   762                           	callstack 0
   763  000017                     ___fldiv@a:
   764                           	callstack 0
   765  000017                     ___aodiv@quotient:
   766                           	callstack 0
   767                           
   768                           ; 8 bytes @ 0x16
   769  000017                     	ds	2
   770  000019                     ??_abs:
   771  000019                     pad@p:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x18
   775  000019                     	ds	2
   776  00001B                     ??___fldiv:
   777  00001B                     ??_pad:
   778  00001B                     isbtw@high:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x1A
   782  00001B                     	ds	1
   783  00001C                     pad@i:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1B
   787  00001C                     	ds	2
   788  00001E                     pad@w:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x1D
   792  00001E                     	ds	1
   793  00001F                     ___fldiv@rem:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x1E
   797  00001F                     	ds	1
   798  000020                     ?_dtoa:
   799                           	callstack 0
   800  000020                     dtoa@fp:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x1F
   804  000020                     	ds	2
   805  000022                     dtoa@d:
   806                           	callstack 0
   807                           
   808                           ; 8 bytes @ 0x21
   809  000022                     	ds	1
   810  000023                     ___fldiv@sign:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x22
   814  000023                     	ds	1
   815  000024                     ___fldiv@new_exp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x23
   819  000024                     	ds	2
   820  000026                     ___fldiv@grs:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x25
   824  000026                     	ds	4
   825  00002A                     ??_dtoa:
   826  00002A                     ___fldiv@bexp:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x29
   830  00002A                     	ds	1
   831  00002B                     ___fldiv@aexp:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x2A
   835  00002B                     	ds	1
   836  00002C                     ?___flmul:
   837                           	callstack 0
   838  00002C                     ___flmul@b:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x2B
   842  00002C                     	ds	4
   843  000030                     ___flmul@a:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x2F
   847  000030                     	ds	2
   848  000032                     _dtoa$2272:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x31
   852  000032                     	ds	2
   853  000034                     ??___flmul:
   854  000034                     dtoa@p:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x33
   858  000034                     	ds	2
   859  000036                     dtoa@w:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x35
   863  000036                     	ds	2
   864  000038                     ___flmul@sign:
   865                           	callstack 0
   866  000038                     dtoa@s:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x37
   870  000038                     	ds	1
   871  000039                     ___flmul@aexp:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x38
   875  000039                     	ds	1
   876  00003A                     ___flmul@grs:
   877                           	callstack 0
   878  00003A                     dtoa@n:
   879                           	callstack 0
   880                           
   881                           ; 8 bytes @ 0x39
   882  00003A                     	ds	4
   883  00003E                     ___flmul@bexp:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x3D
   887  00003E                     	ds	1
   888  00003F                     ___flmul@prod:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x3E
   892  00003F                     	ds	3
   893  000042                     dtoa@i:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x41
   897  000042                     	ds	1
   898  000043                     ___flmul@temp:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x42
   902  000043                     	ds	1
   903  000044                     ?_vfpfcnvrt:
   904                           	callstack 0
   905  000044                     vfpfcnvrt@fp:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x43
   909  000044                     	ds	1
   910  000045                     ?___fltol:
   911                           	callstack 0
   912  000045                     ___fltol@f1:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x44
   916  000045                     	ds	1
   917  000046                     vfpfcnvrt@fmt:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x45
   921  000046                     	ds	2
   922  000048                     vfpfcnvrt@ap:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x47
   926  000048                     	ds	1
   927  000049                     ??___fltol:
   928                           
   929                           ; 1 bytes @ 0x48
   930  000049                     	ds	1
   931  00004A                     ??_vfpfcnvrt:
   932                           
   933                           ; 1 bytes @ 0x49
   934  00004A                     	ds	2
   935  00004C                     vfpfcnvrt@ll:
   936                           	callstack 0
   937                           
   938                           ; 8 bytes @ 0x4B
   939  00004C                     	ds	1
   940  00004D                     ___fltol@sign1:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x4C
   944  00004D                     	ds	1
   945  00004E                     ___fltol@exp1:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x4D
   949  00004E                     	ds	1
   950  00004F                     ?_determine_color_new:
   951                           	callstack 0
   952  00004F                     determine_color_new@m:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x4E
   956  00004F                     	ds	2
   957  000051                     ??_determine_color_new:
   958                           
   959                           ; 1 bytes @ 0x50
   960  000051                     	ds	3
   961  000054                     vfprintf@cfmt:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x53
   965  000054                     	ds	2
   966  000056                     
   967                           ; 1 bytes @ 0x55
   968 ;;
   969 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   970 ;;
   971 ;; *************** function _main *****************
   972 ;; Defined at:
   973 ;;		line 19 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  output          2    0        unsigned int 
   978 ;;  test           24  106[BANK2 ] struct RGB_val
   979 ;;  string0        20   60[BANK2 ] unsigned char [20]
   980 ;;  string3        20   40[BANK2 ] unsigned char [20]
   981 ;;  string2        20   20[BANK2 ] unsigned char [20]
   982 ;;  string1        20    0[BANK2 ] unsigned char [20]
   983 ;;  string         20    0        unsigned char [20]
   984 ;;  motorR          9   97[BANK2 ] struct DC_motor
   985 ;;  motorL          9   88[BANK2 ] struct DC_motor
   986 ;;  PWMcycle        2    0        unsigned int 
   987 ;;  cal             2   86[BANK2 ] unsigned int 
   988 ;;  BlueRatio       2   84[BANK2 ] unsigned int 
   989 ;;  GreenRatio      2   82[BANK2 ] unsigned int 
   990 ;;  RedRatio        2   80[BANK2 ] unsigned int 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Locals:         0       0       0     130       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1003 ;;      Totals:         0       2       0     130       0       0       0       0       0       0       0       0       
      +0       0       0
  1004 ;;Total ram usage:      132 bytes
  1005 ;; Hardware stack levels required when called: 10
  1006 ;; This function calls:
  1007 ;;		_Interrupts_init
  1008 ;;		_TxBufferedString
  1009 ;;		___fldiv
  1010 ;;		___flmul
  1011 ;;		___fltol
  1012 ;;		___xxtofl
  1013 ;;		_calibrateA
  1014 ;;		_calibrateW
  1015 ;;		_color_click_init
  1016 ;;		_determine_color_new
  1017 ;;		_initDCmotorsPWM
  1018 ;;		_initUSART4
  1019 ;;		_read_colours
  1020 ;;		_sendTxBuf
  1021 ;;		_sprintf
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text0
  1028  001A0E                     __ptext0:
  1029                           	callstack 0
  1030  001A0E                     _main:
  1031                           	callstack 21
  1032  001A0E                     
  1033                           ;main.c: 21:     initDCmotorsPWM(99);
  1034  001A0E  0E00               	movlw	0
  1035  001A10  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1036  001A12  0E63               	movlw	99
  1037  001A14  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1038  001A16  ECF3  F01B         	call	_initDCmotorsPWM	;wreg free
  1039  001A1A                     
  1040                           ;main.c: 22:     color_click_init();
  1041  001A1A  EC8B  F01C         	call	_color_click_init	;wreg free
  1042  001A1E                     
  1043                           ;main.c: 23:     initUSART4();
  1044  001A1E  EC26  F01D         	call	_initUSART4	;wreg free
  1045  001A22                     
  1046                           ;main.c: 24:     Interrupts_init();
  1047  001A22  EC71  F01D         	call	_Interrupts_init	;wreg free
  1048  001A26                     
  1049                           ;main.c: 27:     TRISFbits.TRISF2=1;
  1050  001A26  8486               	bsf	134,2,c	;volatile
  1051  001A28                     
  1052                           ;main.c: 28:     ANSELFbits.ANSELF2=0;
  1053  001A28  010E               	movlb	14	; () banked
  1054  001A2A  95B4               	bcf	180,2,b	;volatile
  1055  001A2C                     
  1056                           ; BSR set to: 14
  1057                           ;main.c: 29:     TRISFbits.TRISF3=1;
  1058  001A2C  8686               	bsf	134,3,c	;volatile
  1059  001A2E                     
  1060                           ; BSR set to: 14
  1061                           ;main.c: 30:     ANSELFbits.ANSELF3=0;
  1062  001A2E  97B4               	bcf	180,3,b	;volatile
  1063  001A30                     
  1064                           ; BSR set to: 14
  1065                           ;main.c: 34:     motorL.power=0;
  1066  001A30  0E00               	movlw	0
  1067  001A32  0102               	movlb	2	; () banked
  1068  001A34  6F58               	movwf	main@motorL& (0+255),b
  1069  001A36                     
  1070                           ; BSR set to: 2
  1071                           ;main.c: 35:     motorL.direction=1;
  1072  001A36  0E01               	movlw	1
  1073  001A38  6F59               	movwf	(main@motorL+1)& (0+255),b
  1074  001A3A                     
  1075                           ; BSR set to: 2
  1076                           ;main.c: 36:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1077  001A3A  0EA3               	movlw	163
  1078  001A3C  6F5A               	movwf	(main@motorL+2)& (0+255),b
  1079  001A3E  0E0F               	movlw	15
  1080  001A40  6F5B               	movwf	(main@motorL+3)& (0+255),b
  1081  001A42                     
  1082                           ; BSR set to: 2
  1083                           ;main.c: 37:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1084  001A42  0E7D               	movlw	125
  1085  001A44  6F5C               	movwf	(main@motorL+4)& (0+255),b
  1086  001A46  0E0F               	movlw	15
  1087  001A48  6F5D               	movwf	(main@motorL+5)& (0+255),b
  1088  001A4A                     
  1089                           ; BSR set to: 2
  1090                           ;main.c: 38:     motorL.dir_pin=4;
  1091  001A4A  0E04               	movlw	4
  1092  001A4C  6F5E               	movwf	(main@motorL+6)& (0+255),b
  1093  001A4E                     
  1094                           ; BSR set to: 2
  1095                           ;main.c: 39:     motorL.PWMperiod=PWMcycle;
  1096  001A4E  0E00               	movlw	0
  1097  001A50  6F60               	movwf	(main@motorL+8)& (0+255),b
  1098  001A52  0E63               	movlw	99
  1099  001A54  6F5F               	movwf	(main@motorL+7)& (0+255),b
  1100  001A56                     
  1101                           ; BSR set to: 2
  1102                           ;main.c: 41:     motorR.power=0;
  1103  001A56  0E00               	movlw	0
  1104  001A58  6F61               	movwf	main@motorR& (0+255),b
  1105  001A5A                     
  1106                           ; BSR set to: 2
  1107                           ;main.c: 42:     motorR.direction=1;
  1108  001A5A  0E01               	movlw	1
  1109  001A5C  6F62               	movwf	(main@motorR+1)& (0+255),b
  1110                           
  1111                           ;main.c: 43:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1112  001A5E  0EA0               	movlw	160
  1113  001A60  6F63               	movwf	(main@motorR+2)& (0+255),b
  1114  001A62  0E0F               	movlw	15
  1115  001A64  6F64               	movwf	(main@motorR+3)& (0+255),b
  1116                           
  1117                           ;main.c: 44:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1118  001A66  0E7F               	movlw	127
  1119  001A68  6F65               	movwf	(main@motorR+4)& (0+255),b
  1120  001A6A  0E0F               	movlw	15
  1121  001A6C  6F66               	movwf	(main@motorR+5)& (0+255),b
  1122  001A6E                     
  1123                           ; BSR set to: 2
  1124                           ;main.c: 45:     motorR.dir_pin=6;
  1125  001A6E  0E06               	movlw	6
  1126  001A70  6F67               	movwf	(main@motorR+6)& (0+255),b
  1127  001A72                     
  1128                           ; BSR set to: 2
  1129                           ;main.c: 46:     motorR.PWMperiod=PWMcycle;
  1130  001A72  0E00               	movlw	0
  1131  001A74  6F69               	movwf	(main@motorR+8)& (0+255),b
  1132  001A76  0E63               	movlw	99
  1133  001A78  6F68               	movwf	(main@motorR+7)& (0+255),b
  1134  001A7A                     
  1135                           ; BSR set to: 2
  1136                           ;main.c: 49:     struct RGB_val test;;main.c: 50:     test.C = 0;
  1137  001A7A  0E00               	movlw	0
  1138  001A7C  6F7B               	movwf	(main@test+17)& (0+255),b
  1139  001A7E  0E00               	movlw	0
  1140  001A80  6F7A               	movwf	(main@test+16)& (0+255),b
  1141  001A82                     
  1142                           ; BSR set to: 2
  1143                           ;main.c: 51:     test.R = 0;
  1144  001A82  0E00               	movlw	0
  1145  001A84  6F7D               	movwf	(main@test+19)& (0+255),b
  1146  001A86  0E00               	movlw	0
  1147  001A88  6F7C               	movwf	(main@test+18)& (0+255),b
  1148  001A8A                     
  1149                           ; BSR set to: 2
  1150                           ;main.c: 52:     test.G = 0;
  1151  001A8A  0E00               	movlw	0
  1152  001A8C  6F7F               	movwf	(main@test+21)& (0+255),b
  1153  001A8E  0E00               	movlw	0
  1154  001A90  6F7E               	movwf	(main@test+20)& (0+255),b
  1155  001A92                     
  1156                           ; BSR set to: 2
  1157                           ;main.c: 53:     test.B = 0;
  1158  001A92  0E00               	movlw	0
  1159  001A94  6F81               	movwf	(main@test+23)& (0+255),b
  1160  001A96  0E00               	movlw	0
  1161  001A98  6F80               	movwf	(main@test+22)& (0+255),b
  1162  001A9A                     
  1163                           ; BSR set to: 2
  1164                           ;main.c: 56:     LATGbits.LATG1=0;
  1165  001A9A  927F               	bcf	127,1,c	;volatile
  1166  001A9C                     
  1167                           ; BSR set to: 2
  1168                           ;main.c: 57:     TRISGbits.TRISG1=0;
  1169  001A9C  9287               	bcf	135,1,c	;volatile
  1170  001A9E                     
  1171                           ; BSR set to: 2
  1172                           ;main.c: 58:     LATAbits.LATA4=0;
  1173  001A9E  9879               	bcf	121,4,c	;volatile
  1174  001AA0                     
  1175                           ; BSR set to: 2
  1176                           ;main.c: 59:     TRISAbits.TRISA4=0;
  1177  001AA0  9881               	bcf	129,4,c	;volatile
  1178  001AA2                     
  1179                           ; BSR set to: 2
  1180                           ;main.c: 60:     LATFbits.LATF7=0;
  1181  001AA2  9E7E               	bcf	126,7,c	;volatile
  1182  001AA4                     
  1183                           ; BSR set to: 2
  1184                           ;main.c: 61:     TRISFbits.TRISF7=0;
  1185  001AA4  9E86               	bcf	134,7,c	;volatile
  1186  001AA6                     
  1187                           ; BSR set to: 2
  1188                           ;main.c: 64:     TRISDbits.TRISD7 = 0;
  1189  001AA6  9E84               	bcf	132,7,c	;volatile
  1190  001AA8                     
  1191                           ; BSR set to: 2
  1192                           ;main.c: 65:     LATDbits.LATD7 = 0;
  1193  001AA8  9E7C               	bcf	124,7,c	;volatile
  1194  001AAA                     
  1195                           ; BSR set to: 2
  1196                           ;main.c: 68:     TRISHbits.TRISH3 = 0;
  1197  001AAA  9688               	bcf	136,3,c	;volatile
  1198  001AAC                     
  1199                           ; BSR set to: 2
  1200                           ;main.c: 69:     LATHbits.LATH3 = 0;
  1201  001AAC  9680               	bcf	128,3,c	;volatile
  1202  001AAE                     
  1203                           ; BSR set to: 2
  1204                           ;main.c: 71:     char string[20];;main.c: 72:     char string0[20];;main.c: 73:     char
      +                           string1[20];;main.c: 74:     char string2[20];;main.c: 75:     char string3[20];;main.c
      +                          : 76:     unsigned int RedRatio, GreenRatio, BlueRatio;;main.c: 78:     LATGbits.LATG1=1
      +                          ;
  1205  001AAE  827F               	bsf	127,1,c	;volatile
  1206  001AB0                     
  1207                           ; BSR set to: 2
  1208                           ;main.c: 79:     LATAbits.LATA4=1;
  1209  001AB0  8879               	bsf	121,4,c	;volatile
  1210  001AB2                     
  1211                           ; BSR set to: 2
  1212                           ;main.c: 80:     LATFbits.LATF7=1;
  1213  001AB2  8E7E               	bsf	126,7,c	;volatile
  1214  001AB4                     
  1215                           ; BSR set to: 2
  1216                           ;main.c: 82:     unsigned int cal = 0;
  1217  001AB4  0E00               	movlw	0
  1218  001AB6  6F57               	movwf	(main@cal+1)& (0+255),b
  1219  001AB8  0E00               	movlw	0
  1220  001ABA  6F56               	movwf	main@cal& (0+255),b
  1221                           
  1222                           ;main.c: 85:     while(cal==0){
  1223  001ABC  EF11  F00E         	goto	l5330
  1224  001AC0                     l316:
  1225                           
  1226                           ; BSR set to: 2
  1227                           ;main.c: 86:         LATDbits.LATD7 = 1;
  1228  001AC0  8E7C               	bsf	124,7,c	;volatile
  1229  001AC2                     l317:
  1230  001AC2  B48E               	btfsc	142,2,c	;volatile
  1231  001AC4  EF66  F00D         	goto	u5941
  1232  001AC8  EF68  F00D         	goto	u5940
  1233  001ACC                     u5941:
  1234  001ACC  EF61  F00D         	goto	l317
  1235  001AD0                     u5940:
  1236  001AD0                     
  1237                           ;main.c: 88:         if (!PORTFbits.RF2){
  1238  001AD0  B48E               	btfsc	142,2,c	;volatile
  1239  001AD2  EF6D  F00D         	goto	u5951
  1240  001AD6  EF6F  F00D         	goto	u5950
  1241  001ADA                     u5951:
  1242  001ADA  EF83  F00D         	goto	l5300
  1243  001ADE                     u5950:
  1244  001ADE                     
  1245                           ;main.c: 89:             LATDbits.LATD7 = 0;
  1246  001ADE  9E7C               	bcf	124,7,c	;volatile
  1247  001AE0                     
  1248                           ;main.c: 90:             calibrateW(&test);
  1249  001AE0  0E6A               	movlw	low main@test
  1250  001AE2  6E10               	movwf	calibrateW@m^0,c
  1251  001AE4  0E02               	movlw	high main@test
  1252  001AE6  6E11               	movwf	(calibrateW@m+1)^0,c
  1253  001AE8  ECD7  F01A         	call	_calibrateW	;wreg free
  1254  001AEC                     
  1255                           ;main.c: 91:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1256  001AEC  0E19               	movlw	25
  1257  001AEE  0100               	movlb	0	; () banked
  1258  001AF0  6F79               	movwf	(??_main+1)& (0+255),b
  1259  001AF2  0E5A               	movlw	90
  1260  001AF4  6F78               	movwf	??_main& (0+255),b
  1261  001AF6  0EB1               	movlw	177
  1262  001AF8                     u6017:
  1263  001AF8  2EE8               	decfsz	wreg,f,c
  1264  001AFA  D7FE               	bra	u6017
  1265  001AFC  2F78               	decfsz	??_main& (0+255),f,b
  1266  001AFE  D7FC               	bra	u6017
  1267  001B00  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1268  001B02  D7FA               	bra	u6017
  1269  001B04  D000               	nop2	
  1270  001B06                     l5300:
  1271                           
  1272                           ;main.c: 94:         LATDbits.LATD7 = 1;
  1273  001B06  8E7C               	bsf	124,7,c	;volatile
  1274  001B08                     l321:
  1275  001B08  B48E               	btfsc	142,2,c	;volatile
  1276  001B0A  EF89  F00D         	goto	u5961
  1277  001B0E  EF8B  F00D         	goto	u5960
  1278  001B12                     u5961:
  1279  001B12  EF84  F00D         	goto	l321
  1280  001B16                     u5960:
  1281  001B16                     
  1282                           ;main.c: 96:         if (!PORTFbits.RF2){
  1283  001B16  B48E               	btfsc	142,2,c	;volatile
  1284  001B18  EF90  F00D         	goto	u5971
  1285  001B1C  EF92  F00D         	goto	u5970
  1286  001B20                     u5971:
  1287  001B20  EFA6  F00D         	goto	l5308
  1288  001B24                     u5970:
  1289  001B24                     
  1290                           ;main.c: 97:             LATDbits.LATD7 = 0;
  1291  001B24  9E7C               	bcf	124,7,c	;volatile
  1292  001B26                     
  1293                           ;main.c: 98:             calibrateA(&test);
  1294  001B26  0E6A               	movlw	low main@test
  1295  001B28  6E01               	movwf	?_calibrateA^0,c
  1296  001B2A  0E02               	movlw	high main@test
  1297  001B2C  6E02               	movwf	(?_calibrateA+1)^0,c
  1298  001B2E  EC00  F000         	call	_calibrateA	;wreg free
  1299  001B32                     
  1300                           ;main.c: 99:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1301  001B32  0E19               	movlw	25
  1302  001B34  0100               	movlb	0	; () banked
  1303  001B36  6F79               	movwf	(??_main+1)& (0+255),b
  1304  001B38  0E5A               	movlw	90
  1305  001B3A  6F78               	movwf	??_main& (0+255),b
  1306  001B3C  0EB1               	movlw	177
  1307  001B3E                     u6027:
  1308  001B3E  2EE8               	decfsz	wreg,f,c
  1309  001B40  D7FE               	bra	u6027
  1310  001B42  2F78               	decfsz	??_main& (0+255),f,b
  1311  001B44  D7FC               	bra	u6027
  1312  001B46  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1313  001B48  D7FA               	bra	u6027
  1314  001B4A  D000               	nop2	
  1315  001B4C                     l5308:
  1316                           
  1317                           ;main.c: 102:         sprintf(string0," W R:%d G:%d B:%d \r\n",test.whiteR,test.whiteG,t
      +                          est.whiteB);
  1318  001B4C  0E3C               	movlw	low main@string0
  1319  001B4E  0100               	movlb	0	; () banked
  1320  001B50  6F66               	movwf	sprintf@s& (0+255),b
  1321  001B52  0E02               	movlw	high main@string0
  1322  001B54  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1323  001B56  0E1A               	movlw	low STR_1
  1324  001B58  6F68               	movwf	sprintf@fmt& (0+255),b
  1325  001B5A  0E0E               	movlw	high STR_1
  1326  001B5C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1327  001B5E  C274  F06A         	movff	main@test+10,?_sprintf+4
  1328  001B62  C275  F06B         	movff	main@test+11,?_sprintf+5
  1329  001B66  C276  F06C         	movff	main@test+12,?_sprintf+6
  1330  001B6A  C277  F06D         	movff	main@test+13,?_sprintf+7
  1331  001B6E  C278  F06E         	movff	main@test+14,?_sprintf+8
  1332  001B72  C279  F06F         	movff	main@test+15,?_sprintf+9
  1333  001B76  EC08  F01B         	call	_sprintf	;wreg free
  1334  001B7A                     
  1335                           ;main.c: 103:         TxBufferedString(string0);
  1336  001B7A  0E3C               	movlw	low main@string0
  1337  001B7C  6E06               	movwf	TxBufferedString@string^0,c
  1338  001B7E  0E02               	movlw	high main@string0
  1339  001B80  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1340  001B82  ECA5  F01C         	call	_TxBufferedString	;wreg free
  1341  001B86                     
  1342                           ;main.c: 104:         sendTxBuf();
  1343  001B86  EC46  F01D         	call	_sendTxBuf	;wreg free
  1344  001B8A                     
  1345                           ;main.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1346  001B8A  0E05               	movlw	5
  1347  001B8C  0100               	movlb	0	; () banked
  1348  001B8E  6F79               	movwf	(??_main+1)& (0+255),b
  1349  001B90  0E0F               	movlw	15
  1350  001B92  6F78               	movwf	??_main& (0+255),b
  1351  001B94  0EF1               	movlw	241
  1352  001B96                     u6037:
  1353  001B96  2EE8               	decfsz	wreg,f,c
  1354  001B98  D7FE               	bra	u6037
  1355  001B9A  2F78               	decfsz	??_main& (0+255),f,b
  1356  001B9C  D7FC               	bra	u6037
  1357  001B9E  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1358  001BA0  D7FA               	bra	u6037
  1359  001BA2                     
  1360                           ;main.c: 107:         sprintf(string0," B R:%d G:%d B:%d \r\n",test.blackR,test.blackG,t
      +                          est.blackB);
  1361  001BA2  0E3C               	movlw	low main@string0
  1362  001BA4  0100               	movlb	0	; () banked
  1363  001BA6  6F66               	movwf	sprintf@s& (0+255),b
  1364  001BA8  0E02               	movlw	high main@string0
  1365  001BAA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1366  001BAC  0E05               	movlw	low STR_2
  1367  001BAE  6F68               	movwf	sprintf@fmt& (0+255),b
  1368  001BB0  0E0E               	movlw	high STR_2
  1369  001BB2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1370  001BB4  C26C  F06A         	movff	main@test+2,?_sprintf+4
  1371  001BB8  C26D  F06B         	movff	main@test+3,?_sprintf+5
  1372  001BBC  C26E  F06C         	movff	main@test+4,?_sprintf+6
  1373  001BC0  C26F  F06D         	movff	main@test+5,?_sprintf+7
  1374  001BC4  C270  F06E         	movff	main@test+6,?_sprintf+8
  1375  001BC8  C271  F06F         	movff	main@test+7,?_sprintf+9
  1376  001BCC  EC08  F01B         	call	_sprintf	;wreg free
  1377  001BD0                     
  1378                           ;main.c: 108:         TxBufferedString(string0);
  1379  001BD0  0E3C               	movlw	low main@string0
  1380  001BD2  6E06               	movwf	TxBufferedString@string^0,c
  1381  001BD4  0E02               	movlw	high main@string0
  1382  001BD6  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1383  001BD8  ECA5  F01C         	call	_TxBufferedString	;wreg free
  1384  001BDC                     
  1385                           ;main.c: 109:         sendTxBuf();
  1386  001BDC  EC46  F01D         	call	_sendTxBuf	;wreg free
  1387  001BE0                     
  1388                           ;main.c: 110:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1389  001BE0  0E05               	movlw	5
  1390  001BE2  0100               	movlb	0	; () banked
  1391  001BE4  6F79               	movwf	(??_main+1)& (0+255),b
  1392  001BE6  0E0F               	movlw	15
  1393  001BE8  6F78               	movwf	??_main& (0+255),b
  1394  001BEA  0EF1               	movlw	241
  1395  001BEC                     u6047:
  1396  001BEC  2EE8               	decfsz	wreg,f,c
  1397  001BEE  D7FE               	bra	u6047
  1398  001BF0  2F78               	decfsz	??_main& (0+255),f,b
  1399  001BF2  D7FC               	bra	u6047
  1400  001BF4  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1401  001BF6  D7FA               	bra	u6047
  1402  001BF8                     
  1403                           ;main.c: 112:         LATHbits.LATH3 = 1;
  1404  001BF8  8680               	bsf	128,3,c	;volatile
  1405  001BFA                     l325:
  1406  001BFA  B68E               	btfsc	142,3,c	;volatile
  1407  001BFC  EF02  F00E         	goto	u5981
  1408  001C00  EF04  F00E         	goto	u5980
  1409  001C04                     u5981:
  1410  001C04  EFFD  F00D         	goto	l325
  1411  001C08                     u5980:
  1412  001C08                     
  1413                           ;main.c: 114:         if (!PORTFbits.RF3){
  1414  001C08  B68E               	btfsc	142,3,c	;volatile
  1415  001C0A  EF09  F00E         	goto	u5991
  1416  001C0E  EF0B  F00E         	goto	u5990
  1417  001C12                     u5991:
  1418  001C12  EF11  F00E         	goto	l5330
  1419  001C16                     u5990:
  1420  001C16                     
  1421                           ;main.c: 115:             LATHbits.LATH3 = 0;
  1422  001C16  9680               	bcf	128,3,c	;volatile
  1423  001C18                     
  1424                           ;main.c: 116:             cal = 1;
  1425  001C18  0E00               	movlw	0
  1426  001C1A  0102               	movlb	2	; () banked
  1427  001C1C  6F57               	movwf	(main@cal+1)& (0+255),b
  1428  001C1E  0E01               	movlw	1
  1429  001C20  6F56               	movwf	main@cal& (0+255),b
  1430  001C22                     l5330:
  1431                           
  1432                           ;main.c: 85:     while(cal==0){
  1433  001C22  0102               	movlb	2	; () banked
  1434  001C24  5156               	movf	main@cal& (0+255),w,b
  1435  001C26  1157               	iorwf	(main@cal+1)& (0+255),w,b
  1436  001C28  B4D8               	btfsc	status,2,c
  1437  001C2A  EF19  F00E         	goto	u6001
  1438  001C2E  EF1B  F00E         	goto	u6000
  1439  001C32                     u6001:
  1440  001C32  EF60  F00D         	goto	l316
  1441  001C36                     u6000:
  1442  001C36                     l330:
  1443                           
  1444                           ;main.c: 121:         unsigned int output;;main.c: 122:         LATGbits.LATG1=1;
  1445  001C36  827F               	bsf	127,1,c	;volatile
  1446                           
  1447                           ;main.c: 123:         LATAbits.LATA4=1;
  1448  001C38  8879               	bsf	121,4,c	;volatile
  1449                           
  1450                           ;main.c: 124:         LATFbits.LATF7=0;
  1451  001C3A  9E7E               	bcf	126,7,c	;volatile
  1452  001C3C                     
  1453                           ;main.c: 125:         read_colours(&test);
  1454  001C3C  0E6A               	movlw	low main@test
  1455  001C3E  6E10               	movwf	read_colours@m^0,c
  1456  001C40  0E02               	movlw	high main@test
  1457  001C42  6E11               	movwf	(read_colours@m+1)^0,c
  1458  001C44  ECA6  F01A         	call	_read_colours	;wreg free
  1459  001C48  0E6A               	movlw	low main@test
  1460  001C4A  6E4F               	movwf	determine_color_new@m^0,c
  1461  001C4C  0E02               	movlw	high main@test
  1462  001C4E  6E50               	movwf	(determine_color_new@m+1)^0,c
  1463  001C50  EC24  F007         	call	_determine_color_new	;wreg free
  1464  001C54                     
  1465                           ;main.c: 127:         RedRatio = (((float)test.R) / ((float)test.whiteC) )*10000;
  1466  001C54  0E00               	movlw	0
  1467  001C56  6E30               	movwf	___flmul@a^0,c
  1468  001C58  0E40               	movlw	64
  1469  001C5A  6E31               	movwf	(___flmul@a+1)^0,c
  1470  001C5C  0E1C               	movlw	28
  1471  001C5E  6E32               	movwf	(___flmul@a+2)^0,c
  1472  001C60  0E46               	movlw	70
  1473  001C62  6E33               	movwf	(___flmul@a+3)^0,c
  1474  001C64  C272  F005         	movff	main@test+8,___xxtofl@val
  1475  001C68  C273  F006         	movff	main@test+9,___xxtofl@val+1
  1476  001C6C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1477  001C6E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1478  001C70  0E00               	movlw	0
  1479  001C72  ECAC  F015         	call	___xxtofl
  1480  001C76  C005  F017         	movff	?___xxtofl,___fldiv@a
  1481  001C7A  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1482  001C7E  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1483  001C82  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1484  001C86  C27C  F005         	movff	main@test+18,___xxtofl@val
  1485  001C8A  C27D  F006         	movff	main@test+19,___xxtofl@val+1
  1486  001C8E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1487  001C90  6A08               	clrf	(___xxtofl@val+3)^0,c
  1488  001C92  0E00               	movlw	0
  1489  001C94  ECAC  F015         	call	___xxtofl
  1490  001C98  C005  F013         	movff	?___xxtofl,___fldiv@b
  1491  001C9C  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1492  001CA0  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1493  001CA4  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1494  001CA8  EC93  F011         	call	___fldiv	;wreg free
  1495  001CAC  C013  F02C         	movff	?___fldiv,___flmul@b
  1496  001CB0  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1497  001CB4  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1498  001CB8  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1499  001CBC  EC7E  F00F         	call	___flmul	;wreg free
  1500  001CC0  C02C  F045         	movff	?___flmul,___fltol@f1
  1501  001CC4  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  1502  001CC8  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  1503  001CCC  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  1504  001CD0  ECFC  F017         	call	___fltol	;wreg free
  1505  001CD4  C045  F250         	movff	?___fltol,main@RedRatio
  1506  001CD8  C046  F251         	movff	?___fltol+1,main@RedRatio+1
  1507  001CDC                     
  1508                           ;main.c: 128:         GreenRatio = (((float)test.G) / ((float)test.whiteC)) *10000;
  1509  001CDC  0E00               	movlw	0
  1510  001CDE  6E30               	movwf	___flmul@a^0,c
  1511  001CE0  0E40               	movlw	64
  1512  001CE2  6E31               	movwf	(___flmul@a+1)^0,c
  1513  001CE4  0E1C               	movlw	28
  1514  001CE6  6E32               	movwf	(___flmul@a+2)^0,c
  1515  001CE8  0E46               	movlw	70
  1516  001CEA  6E33               	movwf	(___flmul@a+3)^0,c
  1517  001CEC  C272  F005         	movff	main@test+8,___xxtofl@val
  1518  001CF0  C273  F006         	movff	main@test+9,___xxtofl@val+1
  1519  001CF4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1520  001CF6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1521  001CF8  0E00               	movlw	0
  1522  001CFA  ECAC  F015         	call	___xxtofl
  1523  001CFE  C005  F017         	movff	?___xxtofl,___fldiv@a
  1524  001D02  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1525  001D06  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1526  001D0A  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1527  001D0E  C27E  F005         	movff	main@test+20,___xxtofl@val
  1528  001D12  C27F  F006         	movff	main@test+21,___xxtofl@val+1
  1529  001D16  6A07               	clrf	(___xxtofl@val+2)^0,c
  1530  001D18  6A08               	clrf	(___xxtofl@val+3)^0,c
  1531  001D1A  0E00               	movlw	0
  1532  001D1C  ECAC  F015         	call	___xxtofl
  1533  001D20  C005  F013         	movff	?___xxtofl,___fldiv@b
  1534  001D24  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1535  001D28  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1536  001D2C  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1537  001D30  EC93  F011         	call	___fldiv	;wreg free
  1538  001D34  C013  F02C         	movff	?___fldiv,___flmul@b
  1539  001D38  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1540  001D3C  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1541  001D40  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1542  001D44  EC7E  F00F         	call	___flmul	;wreg free
  1543  001D48  C02C  F045         	movff	?___flmul,___fltol@f1
  1544  001D4C  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  1545  001D50  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  1546  001D54  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  1547  001D58  ECFC  F017         	call	___fltol	;wreg free
  1548  001D5C  C045  F252         	movff	?___fltol,main@GreenRatio
  1549  001D60  C046  F253         	movff	?___fltol+1,main@GreenRatio+1
  1550  001D64                     
  1551                           ;main.c: 129:         BlueRatio = (((float)test.B) / ((float)test.whiteC)) *10000;
  1552  001D64  0E00               	movlw	0
  1553  001D66  6E30               	movwf	___flmul@a^0,c
  1554  001D68  0E40               	movlw	64
  1555  001D6A  6E31               	movwf	(___flmul@a+1)^0,c
  1556  001D6C  0E1C               	movlw	28
  1557  001D6E  6E32               	movwf	(___flmul@a+2)^0,c
  1558  001D70  0E46               	movlw	70
  1559  001D72  6E33               	movwf	(___flmul@a+3)^0,c
  1560  001D74  C272  F005         	movff	main@test+8,___xxtofl@val
  1561  001D78  C273  F006         	movff	main@test+9,___xxtofl@val+1
  1562  001D7C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1563  001D7E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1564  001D80  0E00               	movlw	0
  1565  001D82  ECAC  F015         	call	___xxtofl
  1566  001D86  C005  F017         	movff	?___xxtofl,___fldiv@a
  1567  001D8A  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1568  001D8E  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1569  001D92  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1570  001D96  C280  F005         	movff	main@test+22,___xxtofl@val
  1571  001D9A  C281  F006         	movff	main@test+23,___xxtofl@val+1
  1572  001D9E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1573  001DA0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1574  001DA2  0E00               	movlw	0
  1575  001DA4  ECAC  F015         	call	___xxtofl
  1576  001DA8  C005  F013         	movff	?___xxtofl,___fldiv@b
  1577  001DAC  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1578  001DB0  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1579  001DB4  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1580  001DB8  EC93  F011         	call	___fldiv	;wreg free
  1581  001DBC  C013  F02C         	movff	?___fldiv,___flmul@b
  1582  001DC0  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1583  001DC4  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1584  001DC8  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1585  001DCC  EC7E  F00F         	call	___flmul	;wreg free
  1586  001DD0  C02C  F045         	movff	?___flmul,___fltol@f1
  1587  001DD4  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  1588  001DD8  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  1589  001DDC  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  1590  001DE0  ECFC  F017         	call	___fltol	;wreg free
  1591  001DE4  C045  F254         	movff	?___fltol,main@BlueRatio
  1592  001DE8  C046  F255         	movff	?___fltol+1,main@BlueRatio+1
  1593  001DEC                     
  1594                           ;main.c: 130:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1595  001DEC  0E05               	movlw	5
  1596  001DEE  0100               	movlb	0	; () banked
  1597  001DF0  6F79               	movwf	(??_main+1)& (0+255),b
  1598  001DF2  0E0F               	movlw	15
  1599  001DF4  6F78               	movwf	??_main& (0+255),b
  1600  001DF6  0EF1               	movlw	241
  1601  001DF8                     u6057:
  1602  001DF8  2EE8               	decfsz	wreg,f,c
  1603  001DFA  D7FE               	bra	u6057
  1604  001DFC  2F78               	decfsz	??_main& (0+255),f,b
  1605  001DFE  D7FC               	bra	u6057
  1606  001E00  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1607  001E02  D7FA               	bra	u6057
  1608  001E04                     
  1609                           ;main.c: 131:         LATGbits.LATG1=0;
  1610  001E04  927F               	bcf	127,1,c	;volatile
  1611  001E06                     
  1612                           ;main.c: 132:         LATAbits.LATA4=0;
  1613  001E06  9879               	bcf	121,4,c	;volatile
  1614  001E08                     
  1615                           ;main.c: 133:         LATFbits.LATF7=0;
  1616  001E08  9E7E               	bcf	126,7,c	;volatile
  1617  001E0A                     
  1618                           ;main.c: 134:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1619  001E0A  0E05               	movlw	5
  1620  001E0C  0100               	movlb	0	; () banked
  1621  001E0E  6F79               	movwf	(??_main+1)& (0+255),b
  1622  001E10  0E0F               	movlw	15
  1623  001E12  6F78               	movwf	??_main& (0+255),b
  1624  001E14  0EF1               	movlw	241
  1625  001E16                     u6067:
  1626  001E16  2EE8               	decfsz	wreg,f,c
  1627  001E18  D7FE               	bra	u6067
  1628  001E1A  2F78               	decfsz	??_main& (0+255),f,b
  1629  001E1C  D7FC               	bra	u6067
  1630  001E1E  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1631  001E20  D7FA               	bra	u6067
  1632  001E22                     
  1633                           ;main.c: 136:         sprintf(string1," RR:%d ",RedRatio);
  1634  001E22  0E00               	movlw	low main@string1
  1635  001E24  0100               	movlb	0	; () banked
  1636  001E26  6F66               	movwf	sprintf@s& (0+255),b
  1637  001E28  0E02               	movlw	high main@string1
  1638  001E2A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1639  001E2C  0E3F               	movlw	low STR_3
  1640  001E2E  6F68               	movwf	sprintf@fmt& (0+255),b
  1641  001E30  0E0E               	movlw	high STR_3
  1642  001E32  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1643  001E34  C250  F06A         	movff	main@RedRatio,?_sprintf+4
  1644  001E38  C251  F06B         	movff	main@RedRatio+1,?_sprintf+5
  1645  001E3C  EC08  F01B         	call	_sprintf	;wreg free
  1646  001E40                     
  1647                           ;main.c: 137:         TxBufferedString(string1);
  1648  001E40  0E00               	movlw	low main@string1
  1649  001E42  6E06               	movwf	TxBufferedString@string^0,c
  1650  001E44  0E02               	movlw	high main@string1
  1651  001E46  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1652  001E48  ECA5  F01C         	call	_TxBufferedString	;wreg free
  1653  001E4C                     
  1654                           ;main.c: 138:         sendTxBuf();
  1655  001E4C  EC46  F01D         	call	_sendTxBuf	;wreg free
  1656  001E50                     
  1657                           ;main.c: 139:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1658  001E50  0E05               	movlw	5
  1659  001E52  0100               	movlb	0	; () banked
  1660  001E54  6F79               	movwf	(??_main+1)& (0+255),b
  1661  001E56  0E0F               	movlw	15
  1662  001E58  6F78               	movwf	??_main& (0+255),b
  1663  001E5A  0EF1               	movlw	241
  1664  001E5C                     u6077:
  1665  001E5C  2EE8               	decfsz	wreg,f,c
  1666  001E5E  D7FE               	bra	u6077
  1667  001E60  2F78               	decfsz	??_main& (0+255),f,b
  1668  001E62  D7FC               	bra	u6077
  1669  001E64  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1670  001E66  D7FA               	bra	u6077
  1671  001E68                     
  1672                           ;main.c: 141:         sprintf(string2," GR:%d ",GreenRatio);
  1673  001E68  0E14               	movlw	low main@string2
  1674  001E6A  0100               	movlb	0	; () banked
  1675  001E6C  6F66               	movwf	sprintf@s& (0+255),b
  1676  001E6E  0E02               	movlw	high main@string2
  1677  001E70  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1678  001E72  0E37               	movlw	low STR_4
  1679  001E74  6F68               	movwf	sprintf@fmt& (0+255),b
  1680  001E76  0E0E               	movlw	high STR_4
  1681  001E78  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1682  001E7A  C252  F06A         	movff	main@GreenRatio,?_sprintf+4
  1683  001E7E  C253  F06B         	movff	main@GreenRatio+1,?_sprintf+5
  1684  001E82  EC08  F01B         	call	_sprintf	;wreg free
  1685  001E86                     
  1686                           ;main.c: 142:         TxBufferedString(string2);
  1687  001E86  0E14               	movlw	low main@string2
  1688  001E88  6E06               	movwf	TxBufferedString@string^0,c
  1689  001E8A  0E02               	movlw	high main@string2
  1690  001E8C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1691  001E8E  ECA5  F01C         	call	_TxBufferedString	;wreg free
  1692  001E92                     
  1693                           ;main.c: 143:         sendTxBuf();
  1694  001E92  EC46  F01D         	call	_sendTxBuf	;wreg free
  1695  001E96                     
  1696                           ;main.c: 144:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1697  001E96  0E05               	movlw	5
  1698  001E98  0100               	movlb	0	; () banked
  1699  001E9A  6F79               	movwf	(??_main+1)& (0+255),b
  1700  001E9C  0E0F               	movlw	15
  1701  001E9E  6F78               	movwf	??_main& (0+255),b
  1702  001EA0  0EF1               	movlw	241
  1703  001EA2                     u6087:
  1704  001EA2  2EE8               	decfsz	wreg,f,c
  1705  001EA4  D7FE               	bra	u6087
  1706  001EA6  2F78               	decfsz	??_main& (0+255),f,b
  1707  001EA8  D7FC               	bra	u6087
  1708  001EAA  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1709  001EAC  D7FA               	bra	u6087
  1710  001EAE                     
  1711                           ;main.c: 146:         sprintf(string3," BR:%d ",BlueRatio);
  1712  001EAE  0E28               	movlw	low main@string3
  1713  001EB0  0100               	movlb	0	; () banked
  1714  001EB2  6F66               	movwf	sprintf@s& (0+255),b
  1715  001EB4  0E02               	movlw	high main@string3
  1716  001EB6  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1717  001EB8  0E2F               	movlw	low STR_5
  1718  001EBA  6F68               	movwf	sprintf@fmt& (0+255),b
  1719  001EBC  0E0E               	movlw	high STR_5
  1720  001EBE  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1721  001EC0  C254  F06A         	movff	main@BlueRatio,?_sprintf+4
  1722  001EC4  C255  F06B         	movff	main@BlueRatio+1,?_sprintf+5
  1723  001EC8  EC08  F01B         	call	_sprintf	;wreg free
  1724  001ECC                     
  1725                           ;main.c: 147:         TxBufferedString(string3);
  1726  001ECC  0E28               	movlw	low main@string3
  1727  001ECE  6E06               	movwf	TxBufferedString@string^0,c
  1728  001ED0  0E02               	movlw	high main@string3
  1729  001ED2  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1730  001ED4  ECA5  F01C         	call	_TxBufferedString	;wreg free
  1731  001ED8                     
  1732                           ;main.c: 148:         sendTxBuf();
  1733  001ED8  EC46  F01D         	call	_sendTxBuf	;wreg free
  1734  001EDC                     
  1735                           ;main.c: 149:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1736  001EDC  0E05               	movlw	5
  1737  001EDE  0100               	movlb	0	; () banked
  1738  001EE0  6F79               	movwf	(??_main+1)& (0+255),b
  1739  001EE2  0E0F               	movlw	15
  1740  001EE4  6F78               	movwf	??_main& (0+255),b
  1741  001EE6  0EF1               	movlw	241
  1742  001EE8                     u6097:
  1743  001EE8  2EE8               	decfsz	wreg,f,c
  1744  001EEA  D7FE               	bra	u6097
  1745  001EEC  2F78               	decfsz	??_main& (0+255),f,b
  1746  001EEE  D7FC               	bra	u6097
  1747  001EF0  2F79               	decfsz	(??_main+1)& (0+255),f,b
  1748  001EF2  D7FA               	bra	u6097
  1749  001EF4  EF1B  F00E         	goto	l330
  1750  001EF8  EF37  F000         	goto	start
  1751  001EFC                     __end_of_main:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _sprintf *****************
  1755 ;; Defined at:
  1756 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1759 ;;		 -> main@string3(20), main@string2(20), main@string1(20), main@string0(20), 
  1760 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1761 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(21), 
  1762 ;;		 -> STR_1(21), 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  f               6   18[BANK0 ] struct _IO_FILE
  1765 ;;  ap              2   16[BANK0 ] PTR void [1]
  1766 ;;		 -> ?_sprintf(2), 
  1767 ;;  ret             2    0        int 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    6[BANK0 ] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1777 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;Total ram usage:       18 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 9
  1784 ;; This function calls:
  1785 ;;		_vfprintf
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text1
  1792  003610                     __ptext1:
  1793                           	callstack 0
  1794  003610                     _sprintf:
  1795                           	callstack 21
  1796  003610  0E6A               	movlw	low (?_sprintf+4)
  1797  003612  0100               	movlb	0	; () banked
  1798  003614  6F70               	movwf	sprintf@ap& (0+255),b
  1799  003616  0E00               	movlw	high (?_sprintf+4)
  1800  003618  6F71               	movwf	(sprintf@ap+1)& (0+255),b
  1801  00361A  C066  F072         	movff	sprintf@s,sprintf@f
  1802  00361E  C067  F073         	movff	sprintf@s+1,sprintf@f+1
  1803  003622                     
  1804                           ; BSR set to: 0
  1805  003622  0E00               	movlw	0
  1806  003624  6F75               	movwf	(sprintf@f+3)& (0+255),b
  1807  003626  0E00               	movlw	0
  1808  003628  6F74               	movwf	(sprintf@f+2)& (0+255),b
  1809  00362A                     
  1810                           ; BSR set to: 0
  1811  00362A  0E00               	movlw	0
  1812  00362C  6F77               	movwf	(sprintf@f+5)& (0+255),b
  1813  00362E  0E00               	movlw	0
  1814  003630  6F76               	movwf	(sprintf@f+4)& (0+255),b
  1815  003632                     
  1816                           ; BSR set to: 0
  1817  003632  0E72               	movlw	low sprintf@f
  1818  003634  6F60               	movwf	vfprintf@fp& (0+255),b
  1819  003636  0E00               	movlw	high sprintf@f
  1820  003638  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  1821  00363A  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  1822  00363E  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1823  003642  0E70               	movlw	low sprintf@ap
  1824  003644  6F64               	movwf	vfprintf@ap& (0+255),b
  1825  003646  0E00               	movlw	high sprintf@ap
  1826  003648  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  1827  00364A  EC75  F01A         	call	_vfprintf	;wreg free
  1828  00364E  0100               	movlb	0	; () banked
  1829  003650  5174               	movf	(sprintf@f+2)& (0+255),w,b
  1830  003652  2566               	addwf	sprintf@s& (0+255),w,b
  1831  003654  6ED9               	movwf	fsr2l,c
  1832  003656  5175               	movf	(sprintf@f+3)& (0+255),w,b
  1833  003658  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  1834  00365A  6EDA               	movwf	fsr2h,c
  1835  00365C  0E00               	movlw	0
  1836  00365E  6EDF               	movwf	indf2,c
  1837  003660                     
  1838                           ; BSR set to: 0
  1839  003660  0012               	return		;funcret
  1840  003662                     __end_of_sprintf:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _vfprintf *****************
  1844 ;; Defined at:
  1845 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1848 ;;		 -> sprintf@f(6), 
  1849 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1850 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(21), 
  1851 ;;		 -> STR_1(21), 
  1852 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1853 ;;		 -> sprintf@ap(2), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1856 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(21), 
  1857 ;;		 -> STR_1(21), 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2    0[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1867 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;Total ram usage:        8 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 8
  1874 ;; This function calls:
  1875 ;;		_vfpfcnvrt
  1876 ;; This function is called by:
  1877 ;;		_sprintf
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text2
  1882  0034EA                     __ptext2:
  1883                           	callstack 0
  1884  0034EA                     _vfprintf:
  1885                           	callstack 21
  1886  0034EA                     
  1887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1888  0034EA  C062  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1889  0034EE  C063  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1890  0034F2                     
  1891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1892  0034F2  0E00               	movlw	0
  1893  0034F4  0100               	movlb	0	; () banked
  1894  0034F6  6F7B               	movwf	(_nout+1)& (0+255),b
  1895  0034F8  0E00               	movlw	0
  1896  0034FA  6F7A               	movwf	_nout& (0+255),b
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1899  0034FC  EF93  F01A         	goto	l4878
  1900  003500                     l4876:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1904  003500  C060  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1905  003504  C061  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1906  003508  0E54               	movlw	low vfprintf@cfmt
  1907  00350A  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1908  00350C  0E00               	movlw	high vfprintf@cfmt
  1909  00350E  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1910  003510  C064  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1911  003514  C065  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1912  003518  ECD2  F014         	call	_vfpfcnvrt	;wreg free
  1913  00351C  5044               	movf	?_vfpfcnvrt^0,w,c
  1914  00351E  0100               	movlb	0	; () banked
  1915  003520  277A               	addwf	_nout& (0+255),f,b
  1916  003522  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1917  003524  237B               	addwfc	(_nout+1)& (0+255),f,b
  1918  003526                     l4878:
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1922  003526  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1923  00352A  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1924  00352E                     	if	0	;tblptru may be non-zero
  1925  00352E                     	endif
  1926  00352E                     	if	0	;tblptru may be non-zero
  1927  00352E                     	endif
  1928  00352E  0008               	tblrd		*
  1929  003530  50F5               	movf	tablat,w,c
  1930  003532  0900               	iorlw	0
  1931  003534  A4D8               	btfss	status,2,c
  1932  003536  EF9F  F01A         	goto	u5381
  1933  00353A  EFA1  F01A         	goto	u5380
  1934  00353E                     u5381:
  1935  00353E  EF80  F01A         	goto	l4876
  1936  003542                     u5380:
  1937  003542                     
  1938                           ; BSR set to: 0
  1939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1940  003542  C07A  F060         	movff	_nout,?_vfprintf
  1941  003546  C07B  F061         	movff	_nout+1,?_vfprintf+1
  1942  00354A                     
  1943                           ; BSR set to: 0
  1944  00354A  0012               	return		;funcret
  1945  00354C                     __end_of_vfprintf:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _vfpfcnvrt *****************
  1949 ;; Defined at:
  1950 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1953 ;;		 -> sprintf@f(6), 
  1954 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1955 ;;		 -> vfprintf@cfmt(2), 
  1956 ;;  ap              2   71[COMRAM] PTR PTR void 
  1957 ;;		 -> sprintf@ap(2), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  ll              8   75[COMRAM] long long 
  1960 ;;  llu             8    0        unsigned long long 
  1961 ;;  f               4    0        unsigned long long 
  1962 ;;  vp              3    0        PTR void 
  1963 ;;  ct              3    0        unsigned char [3]
  1964 ;;  cp              3    0        PTR unsigned char 
  1965 ;;  i               2    0        int 
  1966 ;;  done            2    0        int 
  1967 ;;  c               1    0        unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  2   67[COMRAM] int 
  1970 ;; Registers used:
  1971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1977 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;Total ram usage:       16 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 7
  1984 ;; This function calls:
  1985 ;;		_dtoa
  1986 ;;		_fputc
  1987 ;; This function is called by:
  1988 ;;		_vfprintf
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text3
  1993  0029A4                     __ptext3:
  1994                           	callstack 0
  1995  0029A4                     _vfpfcnvrt:
  1996                           	callstack 21
  1997  0029A4                     
  1998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1999  0029A4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2000  0029A8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2001  0029AC  CFDE FFF6          	movff	postinc2,tblptrl
  2002  0029B0  CFDD FFF7          	movff	postdec2,tblptrh
  2003  0029B4                     	if	0	;tblptru may be non-zero
  2004  0029B4                     	endif
  2005  0029B4                     	if	0	;tblptru may be non-zero
  2006  0029B4                     	endif
  2007  0029B4  0008               	tblrd		*
  2008  0029B6  50F5               	movf	tablat,w,c
  2009  0029B8  0A25               	xorlw	37
  2010  0029BA  A4D8               	btfss	status,2,c
  2011  0029BC  EFE2  F014         	goto	u4701
  2012  0029C0  EFE4  F014         	goto	u4700
  2013  0029C4                     u4701:
  2014  0029C4  EF90  F015         	goto	l4442
  2015  0029C8                     u4700:
  2016  0029C8                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2018  0029C8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019  0029CC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020  0029D0  2ADE               	incf	postinc2,f,c
  2021  0029D2  0E00               	movlw	0
  2022  0029D4  22DD               	addwfc	postdec2,f,c
  2023  0029D6                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2025  0029D6  0E00               	movlw	0
  2026  0029D8  0100               	movlb	0	; () banked
  2027  0029DA  6F7D               	movwf	(_width+1)& (0+255),b
  2028  0029DC  0E00               	movlw	0
  2029  0029DE  6F7C               	movwf	_width& (0+255),b
  2030  0029E0  C07C  F080         	movff	_width,_flags
  2031  0029E4  C07D  F081         	movff	_width+1,_flags+1
  2032  0029E8                     
  2033                           ; BSR set to: 0
  2034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2035  0029E8  697E               	setf	_prec& (0+255),b
  2036  0029EA  697F               	setf	(_prec+1)& (0+255),b
  2037  0029EC                     
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2040  0029EC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2041  0029F0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2042  0029F4  CFDE FFF6          	movff	postinc2,tblptrl
  2043  0029F8  CFDD FFF7          	movff	postdec2,tblptrh
  2044  0029FC                     	if	0	;tblptru may be non-zero
  2045  0029FC                     	endif
  2046  0029FC                     	if	0	;tblptru may be non-zero
  2047  0029FC                     	endif
  2048  0029FC  0008               	tblrd		*
  2049  0029FE  50F5               	movf	tablat,w,c
  2050  002A00  0A64               	xorlw	100
  2051  002A02  B4D8               	btfsc	status,2,c
  2052  002A04  EF06  F015         	goto	u4711
  2053  002A08  EF08  F015         	goto	u4710
  2054  002A0C                     u4711:
  2055  002A0C  EF1A  F015         	goto	l4420
  2056  002A10                     u4710:
  2057  002A10                     
  2058                           ; BSR set to: 0
  2059  002A10  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  002A14  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  002A18  CFDE FFF6          	movff	postinc2,tblptrl
  2062  002A1C  CFDD FFF7          	movff	postdec2,tblptrh
  2063  002A20                     	if	0	;tblptru may be non-zero
  2064  002A20                     	endif
  2065  002A20                     	if	0	;tblptru may be non-zero
  2066  002A20                     	endif
  2067  002A20  0008               	tblrd		*
  2068  002A22  50F5               	movf	tablat,w,c
  2069  002A24  0A69               	xorlw	105
  2070  002A26  A4D8               	btfss	status,2,c
  2071  002A28  EF18  F015         	goto	u4721
  2072  002A2C  EF1A  F015         	goto	u4720
  2073  002A30                     u4721:
  2074  002A30  EF5A  F015         	goto	l4426
  2075  002A34                     u4720:
  2076  002A34                     l4420:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2080  002A34  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  002A38  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  002A3C  2ADE               	incf	postinc2,f,c
  2083  002A3E  0E00               	movlw	0
  2084  002A40  22DD               	addwfc	postdec2,f,c
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2087  002A42  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2088  002A46  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2089  002A4A  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2090  002A4E  0E02               	movlw	2
  2091  002A50  26DE               	addwf	postinc2,f,c
  2092  002A52  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2093  002A56  0E00               	movlw	0
  2094  002A58  22DD               	addwfc	postdec2,f,c
  2095  002A5A  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2096  002A5E  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2097  002A62  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  2098  002A66  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  2099  002A6A  0E00               	movlw	0
  2100  002A6C  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2101  002A6E  0EFF               	movlw	-1
  2102  002A70  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  2103  002A72  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  2104  002A74  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  2105  002A76  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  2106  002A78  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  2107  002A7A  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  2108  002A7C                     
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2111  002A7C  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2112  002A80  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2113  002A84  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2114  002A88  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2115  002A8C  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2116  002A90  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2117  002A94  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2118  002A98  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2119  002A9C  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2120  002AA0  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2121  002AA4  EC60  F013         	call	_dtoa	;wreg free
  2122  002AA8  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2123  002AAC  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2124  002AB0  EFAB  F015         	goto	l1202
  2125  002AB4                     l4426:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2129  002AB4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2130  002AB8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2131  002ABC  CFDE FFF6          	movff	postinc2,tblptrl
  2132  002AC0  CFDD FFF7          	movff	postdec2,tblptrh
  2133  002AC4                     	if	0	;tblptru may be non-zero
  2134  002AC4                     	endif
  2135  002AC4                     	if	0	;tblptru may be non-zero
  2136  002AC4                     	endif
  2137  002AC4  0008               	tblrd		*
  2138  002AC6  50F5               	movf	tablat,w,c
  2139  002AC8  0A25               	xorlw	37
  2140  002ACA  A4D8               	btfss	status,2,c
  2141  002ACC  EF6A  F015         	goto	u4731
  2142  002AD0  EF6C  F015         	goto	u4730
  2143  002AD4                     u4731:
  2144  002AD4  EF83  F015         	goto	l4436
  2145  002AD8                     u4730:
  2146  002AD8                     
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2149  002AD8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2150  002ADC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2151  002AE0  2ADE               	incf	postinc2,f,c
  2152  002AE2  0E00               	movlw	0
  2153  002AE4  22DD               	addwfc	postdec2,f,c
  2154  002AE6                     
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2157  002AE6  0E00               	movlw	0
  2158  002AE8  6E06               	movwf	(fputc@c+1)^0,c
  2159  002AEA  0E25               	movlw	37
  2160  002AEC  6E05               	movwf	fputc@c^0,c
  2161  002AEE  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2162  002AF2  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2163  002AF6  EC01  F019         	call	_fputc	;wreg free
  2164  002AFA                     l4432:
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2167  002AFA  0E00               	movlw	0
  2168  002AFC  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2169  002AFE  0E01               	movlw	1
  2170  002B00  6E44               	movwf	?_vfpfcnvrt^0,c
  2171  002B02  EFAB  F015         	goto	l1202
  2172  002B06                     l4436:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2176  002B06  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2177  002B0A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2178  002B0E  2ADE               	incf	postinc2,f,c
  2179  002B10  0E00               	movlw	0
  2180  002B12  22DD               	addwfc	postdec2,f,c
  2181  002B14                     
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2184  002B14  0E00               	movlw	0
  2185  002B16  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2186  002B18  0E00               	movlw	0
  2187  002B1A  6E44               	movwf	?_vfpfcnvrt^0,c
  2188  002B1C  EFAB  F015         	goto	l1202
  2189  002B20                     l4442:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2192  002B20  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2193  002B24  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2194  002B28  CFDE FFF6          	movff	postinc2,tblptrl
  2195  002B2C  CFDD FFF7          	movff	postdec2,tblptrh
  2196  002B30                     	if	0	;tblptru may be non-zero
  2197  002B30                     	endif
  2198  002B30                     	if	0	;tblptru may be non-zero
  2199  002B30                     	endif
  2200  002B30  0008               	tblrd		*
  2201  002B32  50F5               	movf	tablat,w,c
  2202  002B34  6E05               	movwf	fputc@c^0,c
  2203  002B36  6A06               	clrf	(fputc@c+1)^0,c
  2204  002B38  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2205  002B3C  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2206  002B40  EC01  F019         	call	_fputc	;wreg free
  2207  002B44                     
  2208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2209  002B44  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210  002B48  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211  002B4C  2ADE               	incf	postinc2,f,c
  2212  002B4E  0E00               	movlw	0
  2213  002B50  22DD               	addwfc	postdec2,f,c
  2214  002B52  EF7D  F015         	goto	l4432
  2215  002B56                     l1202:
  2216  002B56  0012               	return		;funcret
  2217  002B58                     __end_of_vfpfcnvrt:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _dtoa *****************
  2221 ;; Defined at:
  2222 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2225 ;;		 -> sprintf@f(6), 
  2226 ;;  d               8   33[COMRAM] long long 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  n               8   57[COMRAM] long long 
  2229 ;;  i               2   65[COMRAM] int 
  2230 ;;  s               2   55[COMRAM] int 
  2231 ;;  w               2   53[COMRAM] int 
  2232 ;;  p               2   51[COMRAM] int 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2   31[COMRAM] int 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2242 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;Total ram usage:       36 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 6
  2249 ;; This function calls:
  2250 ;;		___aodiv
  2251 ;;		___aomod
  2252 ;;		_abs
  2253 ;;		_pad
  2254 ;; This function is called by:
  2255 ;;		_vfpfcnvrt
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text4
  2260  0026C0                     __ptext4:
  2261                           	callstack 0
  2262  0026C0                     _dtoa:
  2263                           	callstack 21
  2264  0026C0                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2266  0026C0  C022  F03A         	movff	dtoa@d,dtoa@n
  2267  0026C4  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2268  0026C8  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2269  0026CC  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2270  0026D0  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2271  0026D4  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2272  0026D8  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2273  0026DC  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2274  0026E0                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2276  0026E0  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2277  0026E2  EF75  F013         	goto	u4481
  2278  0026E6  EF78  F013         	goto	u4480
  2279  0026EA                     u4481:
  2280  0026EA  0E01               	movlw	1
  2281  0026EC  EF79  F013         	goto	u4490
  2282  0026F0                     u4480:
  2283  0026F0  0E00               	movlw	0
  2284  0026F2                     u4490:
  2285  0026F2  6E38               	movwf	dtoa@s^0,c
  2286  0026F4  6A39               	clrf	(dtoa@s+1)^0,c
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2289  0026F6  5038               	movf	dtoa@s^0,w,c
  2290  0026F8  1039               	iorwf	(dtoa@s+1)^0,w,c
  2291  0026FA  B4D8               	btfsc	status,2,c
  2292  0026FC  EF82  F013         	goto	u4501
  2293  002700  EF84  F013         	goto	u4500
  2294  002704                     u4501:
  2295  002704  EF94  F013         	goto	l4300
  2296  002708                     u4500:
  2297  002708                     
  2298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2299  002708  1E41               	comf	(dtoa@n+7)^0,f,c
  2300  00270A  1E40               	comf	(dtoa@n+6)^0,f,c
  2301  00270C  1E3F               	comf	(dtoa@n+5)^0,f,c
  2302  00270E  1E3E               	comf	(dtoa@n+4)^0,f,c
  2303  002710  1E3D               	comf	(dtoa@n+3)^0,f,c
  2304  002712  1E3C               	comf	(dtoa@n+2)^0,f,c
  2305  002714  1E3B               	comf	(dtoa@n+1)^0,f,c
  2306  002716  6C3A               	negf	dtoa@n^0,c
  2307  002718  0E00               	movlw	0
  2308  00271A  223B               	addwfc	(dtoa@n+1)^0,f,c
  2309  00271C  223C               	addwfc	(dtoa@n+2)^0,f,c
  2310  00271E  223D               	addwfc	(dtoa@n+3)^0,f,c
  2311  002720  223E               	addwfc	(dtoa@n+4)^0,f,c
  2312  002722  223F               	addwfc	(dtoa@n+5)^0,f,c
  2313  002724  2240               	addwfc	(dtoa@n+6)^0,f,c
  2314  002726  2241               	addwfc	(dtoa@n+7)^0,f,c
  2315  002728                     l4300:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2318  002728  0100               	movlb	0	; () banked
  2319  00272A  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  2320  00272C  EF9A  F013         	goto	u4511
  2321  002730  EF9C  F013         	goto	u4510
  2322  002734                     u4511:
  2323  002734  EF9D  F013         	goto	l4304
  2324  002738                     u4510:
  2325  002738                     
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2328  002738  9380               	bcf	_flags& (0+255),1,b
  2329  00273A                     l4304:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2333  00273A  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  2334  00273C  EFAA  F013         	goto	u4520
  2335  002740  517F               	movf	(_prec+1)& (0+255),w,b
  2336  002742  E106               	bnz	u4521
  2337  002744  057E               	decf	_prec& (0+255),w,b
  2338  002746  B0D8               	btfsc	status,0,c
  2339  002748  EFA8  F013         	goto	u4521
  2340  00274C  EFAA  F013         	goto	u4520
  2341  002750                     u4521:
  2342  002750  EFB0  F013         	goto	l1175
  2343  002754                     u4520:
  2344  002754                     
  2345                           ; BSR set to: 0
  2346  002754  0E00               	movlw	0
  2347  002756  6E35               	movwf	(dtoa@p+1)^0,c
  2348  002758  0E01               	movlw	1
  2349  00275A  6E34               	movwf	dtoa@p^0,c
  2350  00275C  EFB4  F013         	goto	l1177
  2351  002760                     l1175:
  2352                           
  2353                           ; BSR set to: 0
  2354  002760  C07E  F034         	movff	_prec,dtoa@p
  2355  002764  C07F  F035         	movff	_prec+1,dtoa@p+1
  2356  002768                     l1177:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2360  002768  C07C  F036         	movff	_width,dtoa@w
  2361  00276C  C07D  F037         	movff	_width+1,dtoa@w+1
  2362  002770                     
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2365  002770  5038               	movf	dtoa@s^0,w,c
  2366  002772  1039               	iorwf	(dtoa@s+1)^0,w,c
  2367  002774  A4D8               	btfss	status,2,c
  2368  002776  EFBF  F013         	goto	u4531
  2369  00277A  EFC1  F013         	goto	u4530
  2370  00277E                     u4531:
  2371  00277E  EFC8  F013         	goto	l4312
  2372  002782                     u4530:
  2373  002782                     
  2374                           ; BSR set to: 0
  2375  002782  A580               	btfss	_flags& (0+255),2,b
  2376  002784  EFC6  F013         	goto	u4541
  2377  002788  EFC8  F013         	goto	u4540
  2378  00278C                     u4541:
  2379  00278C  EFCB  F013         	goto	l4314
  2380  002790                     u4540:
  2381  002790                     l4312:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2385  002790  0636               	decf	dtoa@w^0,f,c
  2386  002792  A0D8               	btfss	status,0,c
  2387  002794  0637               	decf	(dtoa@w+1)^0,f,c
  2388  002796                     l4314:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2392  002796  0E00               	movlw	0
  2393  002798  6E43               	movwf	(dtoa@i+1)^0,c
  2394  00279A  0E1F               	movlw	31
  2395  00279C  6E42               	movwf	dtoa@i^0,c
  2396  00279E                     
  2397                           ; BSR set to: 0
  2398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2399  00279E  0E00               	movlw	0
  2400  0027A0  0101               	movlb	1	; () banked
  2401  0027A2  6F71               	movwf	(_dbuf+31)& (0+255),b
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2404  0027A4  EF50  F014         	goto	l4328
  2405  0027A8                     l4318:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2408  0027A8  0642               	decf	dtoa@i^0,f,c
  2409  0027AA  A0D8               	btfss	status,0,c
  2410  0027AC  0643               	decf	(dtoa@i+1)^0,f,c
  2411  0027AE                     
  2412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2413  0027AE  0E52               	movlw	low _dbuf
  2414  0027B0  2442               	addwf	dtoa@i^0,w,c
  2415  0027B2  6ED9               	movwf	fsr2l,c
  2416  0027B4  0E01               	movlw	high _dbuf
  2417  0027B6  2043               	addwfc	(dtoa@i+1)^0,w,c
  2418  0027B8  6EDA               	movwf	fsr2h,c
  2419  0027BA  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2420  0027BE  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2421  0027C2  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2422  0027C6  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2423  0027CA  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2424  0027CE  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2425  0027D2  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2426  0027D6  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2427  0027DA  0E0A               	movlw	10
  2428  0027DC  6E0D               	movwf	___aomod@divisor^0,c
  2429  0027DE  0E00               	movlw	0
  2430  0027E0  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2431  0027E2  0E00               	movlw	0
  2432  0027E4  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2433  0027E6  0E00               	movlw	0
  2434  0027E8  6E10               	movwf	(___aomod@divisor+3)^0,c
  2435  0027EA  0E00               	movlw	0
  2436  0027EC  6E11               	movwf	(___aomod@divisor+4)^0,c
  2437  0027EE  0E00               	movlw	0
  2438  0027F0  6E12               	movwf	(___aomod@divisor+5)^0,c
  2439  0027F2  0E00               	movlw	0
  2440  0027F4  6E13               	movwf	(___aomod@divisor+6)^0,c
  2441  0027F6  0E00               	movlw	0
  2442  0027F8  6E14               	movwf	(___aomod@divisor+7)^0,c
  2443  0027FA  EC4A  F017         	call	___aomod	;wreg free
  2444  0027FE  C005  F02A         	movff	?___aomod,??_dtoa
  2445  002802  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2446  002806  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2447  00280A  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2448  00280E  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2449  002812  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2450  002816  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2451  00281A  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2452  00281E  C02A  F017         	movff	??_dtoa,abs@a
  2453  002822  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2454  002826  EC35  F01C         	call	_abs	;wreg free
  2455  00282A  5017               	movf	?_abs^0,w,c
  2456  00282C  0F30               	addlw	48
  2457  00282E  6EDF               	movwf	indf2,c
  2458  002830                     
  2459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2460  002830  0634               	decf	dtoa@p^0,f,c
  2461  002832  A0D8               	btfss	status,0,c
  2462  002834  0635               	decf	(dtoa@p+1)^0,f,c
  2463  002836                     
  2464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2465  002836  0636               	decf	dtoa@w^0,f,c
  2466  002838  A0D8               	btfss	status,0,c
  2467  00283A  0637               	decf	(dtoa@w+1)^0,f,c
  2468  00283C                     
  2469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2470  00283C  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2471  002840  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2472  002844  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2473  002848  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2474  00284C  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2475  002850  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2476  002854  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2477  002858  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2478  00285C  0E0A               	movlw	10
  2479  00285E  6E0D               	movwf	___aodiv@divisor^0,c
  2480  002860  0E00               	movlw	0
  2481  002862  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2482  002864  0E00               	movlw	0
  2483  002866  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2484  002868  0E00               	movlw	0
  2485  00286A  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2486  00286C  0E00               	movlw	0
  2487  00286E  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2488  002870  0E00               	movlw	0
  2489  002872  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2490  002874  0E00               	movlw	0
  2491  002876  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2492  002878  0E00               	movlw	0
  2493  00287A  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2494  00287C  EC86  F016         	call	___aodiv	;wreg free
  2495  002880  C005  F03A         	movff	?___aodiv,dtoa@n
  2496  002884  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2497  002888  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2498  00288C  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2499  002890  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2500  002894  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2501  002898  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2502  00289C  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2503  0028A0                     l4328:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2506  0028A0  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2507  0028A2  EF5B  F014         	goto	u4551
  2508  0028A6  5043               	movf	(dtoa@i+1)^0,w,c
  2509  0028A8  E108               	bnz	u4550
  2510  0028AA  0442               	decf	dtoa@i^0,w,c
  2511  0028AC  A0D8               	btfss	status,0,c
  2512  0028AE  EF5B  F014         	goto	u4551
  2513  0028B2  EF5D  F014         	goto	u4550
  2514  0028B6                     u4551:
  2515  0028B6  EF8E  F014         	goto	l4338
  2516  0028BA                     u4550:
  2517  0028BA  503A               	movf	dtoa@n^0,w,c
  2518  0028BC  103B               	iorwf	(dtoa@n+1)^0,w,c
  2519  0028BE  103C               	iorwf	(dtoa@n+2)^0,w,c
  2520  0028C0  103D               	iorwf	(dtoa@n+3)^0,w,c
  2521  0028C2  103E               	iorwf	(dtoa@n+4)^0,w,c
  2522  0028C4  103F               	iorwf	(dtoa@n+5)^0,w,c
  2523  0028C6  1040               	iorwf	(dtoa@n+6)^0,w,c
  2524  0028C8  1041               	iorwf	(dtoa@n+7)^0,w,c
  2525  0028CA  A4D8               	btfss	status,2,c
  2526  0028CC  EF6A  F014         	goto	u4561
  2527  0028D0  EF6C  F014         	goto	u4560
  2528  0028D4                     u4561:
  2529  0028D4  EFD4  F013         	goto	l4318
  2530  0028D8                     u4560:
  2531  0028D8  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2532  0028DA  EF79  F014         	goto	u4570
  2533  0028DE  5035               	movf	(dtoa@p+1)^0,w,c
  2534  0028E0  E106               	bnz	u4571
  2535  0028E2  0434               	decf	dtoa@p^0,w,c
  2536  0028E4  B0D8               	btfsc	status,0,c
  2537  0028E6  EF77  F014         	goto	u4571
  2538  0028EA  EF79  F014         	goto	u4570
  2539  0028EE                     u4571:
  2540  0028EE  EFD4  F013         	goto	l4318
  2541  0028F2                     u4570:
  2542  0028F2  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2543  0028F4  EF84  F014         	goto	u4581
  2544  0028F8  5037               	movf	(dtoa@w+1)^0,w,c
  2545  0028FA  E108               	bnz	u4580
  2546  0028FC  0436               	decf	dtoa@w^0,w,c
  2547  0028FE  A0D8               	btfss	status,0,c
  2548  002900  EF84  F014         	goto	u4581
  2549  002904  EF86  F014         	goto	u4580
  2550  002908                     u4581:
  2551  002908  EF8E  F014         	goto	l4338
  2552  00290C                     u4580:
  2553  00290C  0100               	movlb	0	; () banked
  2554  00290E  B380               	btfsc	_flags& (0+255),1,b
  2555  002910  EF8C  F014         	goto	u4591
  2556  002914  EF8E  F014         	goto	u4590
  2557  002918                     u4591:
  2558  002918  EFD4  F013         	goto	l4318
  2559  00291C                     u4590:
  2560  00291C                     l4338:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2563  00291C  5038               	movf	dtoa@s^0,w,c
  2564  00291E  1039               	iorwf	(dtoa@s+1)^0,w,c
  2565  002920  A4D8               	btfss	status,2,c
  2566  002922  EF95  F014         	goto	u4601
  2567  002926  EF97  F014         	goto	u4600
  2568  00292A                     u4601:
  2569  00292A  EF9F  F014         	goto	l4342
  2570  00292E                     u4600:
  2571  00292E  0100               	movlb	0	; () banked
  2572  002930  A580               	btfss	_flags& (0+255),2,b
  2573  002932  EF9D  F014         	goto	u4611
  2574  002936  EF9F  F014         	goto	u4610
  2575  00293A                     u4611:
  2576  00293A  EFBD  F014         	goto	l4352
  2577  00293E                     u4610:
  2578  00293E                     l4342:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2581  00293E  0642               	decf	dtoa@i^0,f,c
  2582  002940  A0D8               	btfss	status,0,c
  2583  002942  0643               	decf	(dtoa@i+1)^0,f,c
  2584  002944                     
  2585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2586  002944  5038               	movf	dtoa@s^0,w,c
  2587  002946  1039               	iorwf	(dtoa@s+1)^0,w,c
  2588  002948  A4D8               	btfss	status,2,c
  2589  00294A  EFA9  F014         	goto	u4621
  2590  00294E  EFAB  F014         	goto	u4620
  2591  002952                     u4621:
  2592  002952  EFB1  F014         	goto	l4348
  2593  002956                     u4620:
  2594  002956  0E00               	movlw	0
  2595  002958  6E33               	movwf	(_dtoa$2272+1)^0,c
  2596  00295A  0E2B               	movlw	43
  2597  00295C  6E32               	movwf	_dtoa$2272^0,c
  2598  00295E  EFB5  F014         	goto	l4350
  2599  002962                     l4348:
  2600  002962  0E00               	movlw	0
  2601  002964  6E33               	movwf	(_dtoa$2272+1)^0,c
  2602  002966  0E2D               	movlw	45
  2603  002968  6E32               	movwf	_dtoa$2272^0,c
  2604  00296A                     l4350:
  2605  00296A  0E52               	movlw	low _dbuf
  2606  00296C  2442               	addwf	dtoa@i^0,w,c
  2607  00296E  6ED9               	movwf	fsr2l,c
  2608  002970  0E01               	movlw	high _dbuf
  2609  002972  2043               	addwfc	(dtoa@i+1)^0,w,c
  2610  002974  6EDA               	movwf	fsr2h,c
  2611  002976  C032  FFDF         	movff	_dtoa$2272,indf2
  2612  00297A                     l4352:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2615  00297A  C020  F015         	movff	dtoa@fp,pad@fp
  2616  00297E  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2617  002982  0E52               	movlw	low _dbuf
  2618  002984  2442               	addwf	dtoa@i^0,w,c
  2619  002986  6E17               	movwf	pad@buf^0,c
  2620  002988  0E01               	movlw	high _dbuf
  2621  00298A  2043               	addwfc	(dtoa@i+1)^0,w,c
  2622  00298C  6E18               	movwf	(pad@buf+1)^0,c
  2623  00298E  C036  F019         	movff	dtoa@w,pad@p
  2624  002992  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2625  002996  EC66  F019         	call	_pad	;wreg free
  2626  00299A  C015  F020         	movff	?_pad,?_dtoa
  2627  00299E  C016  F021         	movff	?_pad+1,?_dtoa+1
  2628  0029A2  0012               	return		;funcret
  2629  0029A4                     __end_of_dtoa:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _pad *****************
  2633 ;; Defined at:
  2634 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2637 ;;		 -> sprintf@f(6), 
  2638 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2639 ;;		 -> dbuf(32), 
  2640 ;;  p               2   24[COMRAM] int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  w               2   29[COMRAM] int 
  2643 ;;  i               2   27[COMRAM] int 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2   20[COMRAM] int 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2653 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;Total ram usage:       11 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 5
  2660 ;; This function calls:
  2661 ;;		_fputc
  2662 ;;		_fputs
  2663 ;;		_strlen
  2664 ;; This function is called by:
  2665 ;;		_dtoa
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text5
  2670  0032CC                     __ptext5:
  2671                           	callstack 0
  2672  0032CC                     _pad:
  2673                           	callstack 21
  2674  0032CC                     
  2675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2676  0032CC  0100               	movlb	0	; () banked
  2677  0032CE  A180               	btfss	_flags& (0+255),0,b
  2678  0032D0  EF6C  F019         	goto	u4411
  2679  0032D4  EF6E  F019         	goto	u4410
  2680  0032D8                     u4411:
  2681  0032D8  EF78  F019         	goto	l4268
  2682  0032DC                     u4410:
  2683  0032DC                     
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2686  0032DC  C017  F00E         	movff	pad@buf,fputs@s
  2687  0032E0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2688  0032E4  C015  F010         	movff	pad@fp,fputs@fp
  2689  0032E8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2690  0032EC  ECD1  F01B         	call	_fputs	;wreg free
  2691  0032F0                     l4268:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2694  0032F0  BE1A               	btfsc	(pad@p+1)^0,7,c
  2695  0032F2  EF7D  F019         	goto	u4421
  2696  0032F6  EF7F  F019         	goto	u4420
  2697  0032FA                     u4421:
  2698  0032FA  EF85  F019         	goto	l4272
  2699  0032FE                     u4420:
  2700  0032FE  C019  F01E         	movff	pad@p,pad@w
  2701  003302  C01A  F01F         	movff	pad@p+1,pad@w+1
  2702  003306  EF89  F019         	goto	l1164
  2703  00330A                     l4272:
  2704  00330A  0E00               	movlw	0
  2705  00330C  6E1F               	movwf	(pad@w+1)^0,c
  2706  00330E  0E00               	movlw	0
  2707  003310  6E1E               	movwf	pad@w^0,c
  2708  003312                     l1164:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2711  003312  0E00               	movlw	0
  2712  003314  6E1D               	movwf	(pad@i+1)^0,c
  2713  003316  0E00               	movlw	0
  2714  003318  6E1C               	movwf	pad@i^0,c
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2717  00331A  EF9B  F019         	goto	l4278
  2718  00331E                     l4274:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2721  00331E  0E00               	movlw	0
  2722  003320  6E06               	movwf	(fputc@c+1)^0,c
  2723  003322  0E20               	movlw	32
  2724  003324  6E05               	movwf	fputc@c^0,c
  2725  003326  C015  F007         	movff	pad@fp,fputc@fp
  2726  00332A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2727  00332E  EC01  F019         	call	_fputc	;wreg free
  2728  003332                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2730  003332  4A1C               	infsnz	pad@i^0,f,c
  2731  003334  2A1D               	incf	(pad@i+1)^0,f,c
  2732  003336                     l4278:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2735  003336  501E               	movf	pad@w^0,w,c
  2736  003338  5C1C               	subwf	pad@i^0,w,c
  2737  00333A  501D               	movf	(pad@i+1)^0,w,c
  2738  00333C  0A80               	xorlw	128
  2739  00333E  6E1B               	movwf	??_pad^0,c
  2740  003340  501F               	movf	(pad@w+1)^0,w,c
  2741  003342  0A80               	xorlw	128
  2742  003344  581B               	subwfb	??_pad^0,w,c
  2743  003346  A0D8               	btfss	status,0,c
  2744  003348  EFA8  F019         	goto	u4431
  2745  00334C  EFAA  F019         	goto	u4430
  2746  003350                     u4431:
  2747  003350  EF8F  F019         	goto	l4274
  2748  003354                     u4430:
  2749  003354                     
  2750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2751  003354  0100               	movlb	0	; () banked
  2752  003356  B180               	btfsc	_flags& (0+255),0,b
  2753  003358  EFB0  F019         	goto	u4441
  2754  00335C  EFB2  F019         	goto	u4440
  2755  003360                     u4441:
  2756  003360  EFBC  F019         	goto	l4282
  2757  003364                     u4440:
  2758  003364                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2761  003364  C017  F00E         	movff	pad@buf,fputs@s
  2762  003368  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2763  00336C  C015  F010         	movff	pad@fp,fputs@fp
  2764  003370  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2765  003374  ECD1  F01B         	call	_fputs	;wreg free
  2766  003378                     l4282:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2769  003378  C017  F005         	movff	pad@buf,strlen@s
  2770  00337C  C018  F006         	movff	pad@buf+1,strlen@s+1
  2771  003380  EC70  F01C         	call	_strlen	;wreg free
  2772  003384  501E               	movf	pad@w^0,w,c
  2773  003386  2405               	addwf	?_strlen^0,w,c
  2774  003388  6E15               	movwf	?_pad^0,c
  2775  00338A  501F               	movf	(pad@w+1)^0,w,c
  2776  00338C  2006               	addwfc	(?_strlen+1)^0,w,c
  2777  00338E  6E16               	movwf	(?_pad+1)^0,c
  2778  003390  0012               	return		;funcret
  2779  003392                     __end_of_pad:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _strlen *****************
  2783 ;; Defined at:
  2784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2787 ;;		 -> dbuf(32), 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2790 ;;		 -> dbuf(32), 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2    4[COMRAM] unsigned int 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;Total ram usage:        4 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 2
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_pad
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text6
  2815  0038E0                     __ptext6:
  2816                           	callstack 0
  2817  0038E0                     _strlen:
  2818                           	callstack 23
  2819  0038E0  C005  F007         	movff	strlen@s,strlen@a
  2820  0038E4  C006  F008         	movff	strlen@s+1,strlen@a+1
  2821  0038E8  EF78  F01C         	goto	l4178
  2822  0038EC                     l4176:
  2823  0038EC  4A05               	infsnz	strlen@s^0,f,c
  2824  0038EE  2A06               	incf	(strlen@s+1)^0,f,c
  2825  0038F0                     l4178:
  2826  0038F0  C005  FFD9         	movff	strlen@s,fsr2l
  2827  0038F4  C006  FFDA         	movff	strlen@s+1,fsr2h
  2828  0038F8  50DF               	movf	indf2,w,c
  2829  0038FA  A4D8               	btfss	status,2,c
  2830  0038FC  EF82  F01C         	goto	u4271
  2831  003900  EF84  F01C         	goto	u4270
  2832  003904                     u4271:
  2833  003904  EF76  F01C         	goto	l4176
  2834  003908                     u4270:
  2835  003908  5007               	movf	strlen@a^0,w,c
  2836  00390A  5C05               	subwf	strlen@s^0,w,c
  2837  00390C  6E05               	movwf	?_strlen^0,c
  2838  00390E  5008               	movf	(strlen@a+1)^0,w,c
  2839  003910  5806               	subwfb	(strlen@s+1)^0,w,c
  2840  003912  6E06               	movwf	(?_strlen+1)^0,c
  2841  003914  0012               	return		;funcret
  2842  003916                     __end_of_strlen:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _fputs *****************
  2846 ;; Defined at:
  2847 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2850 ;;		 -> dbuf(32), 
  2851 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2852 ;;		 -> sprintf@f(6), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  i               2   18[COMRAM] int 
  2855 ;;  c               1   17[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2   13[COMRAM] int 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;Total ram usage:        7 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 4
  2872 ;; This function calls:
  2873 ;;		_fputc
  2874 ;; This function is called by:
  2875 ;;		_pad
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text7
  2880  0037A2                     __ptext7:
  2881                           	callstack 0
  2882  0037A2                     _fputs:
  2883                           	callstack 21
  2884  0037A2  0E00               	movlw	0
  2885  0037A4  6E14               	movwf	(fputs@i+1)^0,c
  2886  0037A6  0E00               	movlw	0
  2887  0037A8  6E13               	movwf	fputs@i^0,c
  2888  0037AA  EFE2  F01B         	goto	l4172
  2889  0037AE                     l4168:
  2890  0037AE  C012  F005         	movff	fputs@c,fputc@c
  2891  0037B2  6A06               	clrf	(fputc@c+1)^0,c
  2892  0037B4  C010  F007         	movff	fputs@fp,fputc@fp
  2893  0037B8  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2894  0037BC  EC01  F019         	call	_fputc	;wreg free
  2895  0037C0  4A13               	infsnz	fputs@i^0,f,c
  2896  0037C2  2A14               	incf	(fputs@i+1)^0,f,c
  2897  0037C4                     l4172:
  2898  0037C4  5013               	movf	fputs@i^0,w,c
  2899  0037C6  240E               	addwf	fputs@s^0,w,c
  2900  0037C8  6ED9               	movwf	fsr2l,c
  2901  0037CA  5014               	movf	(fputs@i+1)^0,w,c
  2902  0037CC  200F               	addwfc	(fputs@s+1)^0,w,c
  2903  0037CE  6EDA               	movwf	fsr2h,c
  2904  0037D0  50DF               	movf	indf2,w,c
  2905  0037D2  6E12               	movwf	fputs@c^0,c
  2906  0037D4  5012               	movf	fputs@c^0,w,c
  2907  0037D6  A4D8               	btfss	status,2,c
  2908  0037D8  EFF0  F01B         	goto	u4261
  2909  0037DC  EFF2  F01B         	goto	u4260
  2910  0037E0                     u4261:
  2911  0037E0  EFD7  F01B         	goto	l4168
  2912  0037E4                     u4260:
  2913  0037E4  0012               	return		;funcret
  2914  0037E6                     __end_of_fputs:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _fputc *****************
  2918 ;; Defined at:
  2919 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  c               2    4[COMRAM] int 
  2922 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2923 ;;		 -> sprintf@f(6), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  2    4[COMRAM] int 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        9 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 3
  2942 ;; This function calls:
  2943 ;;		_putch
  2944 ;; This function is called by:
  2945 ;;		_pad
  2946 ;;		_vfpfcnvrt
  2947 ;;		_fputs
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text8
  2952  003202                     __ptext8:
  2953                           	callstack 0
  2954  003202                     _fputc:
  2955                           	callstack 24
  2956  003202  5007               	movf	fputc@fp^0,w,c
  2957  003204  1008               	iorwf	(fputc@fp+1)^0,w,c
  2958  003206  B4D8               	btfsc	status,2,c
  2959  003208  EF08  F019         	goto	u4221
  2960  00320C  EF0A  F019         	goto	u4220
  2961  003210                     u4221:
  2962  003210  EF13  F019         	goto	l4156
  2963  003214                     u4220:
  2964  003214  5007               	movf	fputc@fp^0,w,c
  2965  003216  1008               	iorwf	(fputc@fp+1)^0,w,c
  2966  003218  A4D8               	btfss	status,2,c
  2967  00321A  EF11  F019         	goto	u4231
  2968  00321E  EF13  F019         	goto	u4230
  2969  003222                     u4231:
  2970  003222  EF18  F019         	goto	l4158
  2971  003226                     u4230:
  2972  003226                     l4156:
  2973  003226  5005               	movf	fputc@c^0,w,c
  2974  003228  EC86  F01D         	call	_putch
  2975  00322C  EF65  F019         	goto	l1228
  2976  003230                     l4158:
  2977  003230  EE20 F004          	lfsr	2,4
  2978  003234  5007               	movf	fputc@fp^0,w,c
  2979  003236  26D9               	addwf	fsr2l,f,c
  2980  003238  5008               	movf	(fputc@fp+1)^0,w,c
  2981  00323A  22DA               	addwfc	fsr2h,f,c
  2982  00323C  50DE               	movf	postinc2,w,c
  2983  00323E  10DE               	iorwf	postinc2,w,c
  2984  003240  B4D8               	btfsc	status,2,c
  2985  003242  EF25  F019         	goto	u4241
  2986  003246  EF27  F019         	goto	u4240
  2987  00324A                     u4241:
  2988  00324A  EF42  F019         	goto	l4162
  2989  00324E                     u4240:
  2990  00324E  EE20 F004          	lfsr	2,4
  2991  003252  5007               	movf	fputc@fp^0,w,c
  2992  003254  26D9               	addwf	fsr2l,f,c
  2993  003256  5008               	movf	(fputc@fp+1)^0,w,c
  2994  003258  22DA               	addwfc	fsr2h,f,c
  2995  00325A  EE10 F002          	lfsr	1,2
  2996  00325E  5007               	movf	fputc@fp^0,w,c
  2997  003260  26E1               	addwf	fsr1l,f,c
  2998  003262  5008               	movf	(fputc@fp+1)^0,w,c
  2999  003264  22E2               	addwfc	fsr1h,f,c
  3000  003266  50DE               	movf	postinc2,w,c
  3001  003268  5CE6               	subwf	postinc1,w,c
  3002  00326A  50E6               	movf	postinc1,w,c
  3003  00326C  0A80               	xorlw	128
  3004  00326E  6E0D               	movwf	(??_fputc+4)^0,c
  3005  003270  50DE               	movf	postinc2,w,c
  3006  003272  0A80               	xorlw	128
  3007  003274  580D               	subwfb	(??_fputc+4)^0,w,c
  3008  003276  B0D8               	btfsc	status,0,c
  3009  003278  EF40  F019         	goto	u4251
  3010  00327C  EF42  F019         	goto	u4250
  3011  003280                     u4251:
  3012  003280  EF65  F019         	goto	l1228
  3013  003284                     u4250:
  3014  003284                     l4162:
  3015  003284  EE20 F002          	lfsr	2,2
  3016  003288  5007               	movf	fputc@fp^0,w,c
  3017  00328A  26D9               	addwf	fsr2l,f,c
  3018  00328C  5008               	movf	(fputc@fp+1)^0,w,c
  3019  00328E  22DA               	addwfc	fsr2h,f,c
  3020  003290  CFDE F009          	movff	postinc2,??_fputc
  3021  003294  CFDD F00A          	movff	postdec2,??_fputc+1
  3022  003298  C007  FFD9         	movff	fputc@fp,fsr2l
  3023  00329C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3024  0032A0  CFDE F00B          	movff	postinc2,??_fputc+2
  3025  0032A4  CFDD F00C          	movff	postdec2,??_fputc+3
  3026  0032A8  5009               	movf	??_fputc^0,w,c
  3027  0032AA  240B               	addwf	(??_fputc+2)^0,w,c
  3028  0032AC  6ED9               	movwf	fsr2l,c
  3029  0032AE  500A               	movf	(??_fputc+1)^0,w,c
  3030  0032B0  200C               	addwfc	(??_fputc+3)^0,w,c
  3031  0032B2  6EDA               	movwf	fsr2h,c
  3032  0032B4  C005  FFDF         	movff	fputc@c,indf2
  3033  0032B8  EE20 F002          	lfsr	2,2
  3034  0032BC  5007               	movf	fputc@fp^0,w,c
  3035  0032BE  26D9               	addwf	fsr2l,f,c
  3036  0032C0  5008               	movf	(fputc@fp+1)^0,w,c
  3037  0032C2  22DA               	addwfc	fsr2h,f,c
  3038  0032C4  2ADE               	incf	postinc2,f,c
  3039  0032C6  0E00               	movlw	0
  3040  0032C8  22DD               	addwfc	postdec2,f,c
  3041  0032CA                     l1228:
  3042  0032CA  0012               	return		;funcret
  3043  0032CC                     __end_of_fputc:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _putch *****************
  3047 ;; Defined at:
  3048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  c               1    wreg     unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  c               1    0[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_fputc
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text9
  3077  003B0C                     __ptext9:
  3078                           	callstack 0
  3079  003B0C                     _putch:
  3080                           	callstack 24
  3081  003B0C  0012               	return		;funcret
  3082  003B0E                     __end_of_putch:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _abs *****************
  3086 ;; Defined at:
  3087 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  a               2   22[COMRAM] int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2   22[COMRAM] int 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;Total ram usage:        4 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 2
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_dtoa
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text10
  3116  00386A                     __ptext10:
  3117                           	callstack 0
  3118  00386A                     _abs:
  3119                           	callstack 24
  3120  00386A  BE18               	btfsc	(abs@a+1)^0,7,c
  3121  00386C  EF42  F01C         	goto	u4450
  3122  003870  5018               	movf	(abs@a+1)^0,w,c
  3123  003872  E106               	bnz	u4451
  3124  003874  0417               	decf	abs@a^0,w,c
  3125  003876  B0D8               	btfsc	status,0,c
  3126  003878  EF40  F01C         	goto	u4451
  3127  00387C  EF42  F01C         	goto	u4450
  3128  003880                     u4451:
  3129  003880  EF50  F01C         	goto	l1213
  3130  003884                     u4450:
  3131  003884  C017  F019         	movff	abs@a,??_abs
  3132  003888  C018  F01A         	movff	abs@a+1,??_abs+1
  3133  00388C  1E19               	comf	??_abs^0,f,c
  3134  00388E  1E1A               	comf	(??_abs+1)^0,f,c
  3135  003890  4A19               	infsnz	??_abs^0,f,c
  3136  003892  2A1A               	incf	(??_abs+1)^0,f,c
  3137  003894  C019  F017         	movff	??_abs,?_abs
  3138  003898  C01A  F018         	movff	??_abs+1,?_abs+1
  3139  00389C  EF54  F01C         	goto	l1216
  3140  0038A0                     l1213:
  3141  0038A0  C017  F017         	movff	abs@a,?_abs
  3142  0038A4  C018  F018         	movff	abs@a+1,?_abs+1
  3143  0038A8                     l1216:
  3144  0038A8  0012               	return		;funcret
  3145  0038AA                     __end_of_abs:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function ___aomod *****************
  3149 ;; Defined at:
  3150 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  dividend        8    4[COMRAM] long long 
  3153 ;;  divisor         8   12[COMRAM] long long 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  sign            1   21[COMRAM] unsigned char 
  3156 ;;  counter         1   20[COMRAM] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  8    4[COMRAM] long long 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3166 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;Total ram usage:       18 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 2
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_dtoa
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text11
  3181  002E94                     __ptext11:
  3182                           	callstack 0
  3183  002E94                     ___aomod:
  3184                           	callstack 24
  3185  002E94  0E00               	movlw	0
  3186  002E96  6E16               	movwf	___aomod@sign^0,c
  3187  002E98  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3188  002E9A  EF53  F017         	goto	u4350
  3189  002E9E  EF51  F017         	goto	u4351
  3190  002EA2                     u4351:
  3191  002EA2  EF65  F017         	goto	l4236
  3192  002EA6                     u4350:
  3193  002EA6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3194  002EA8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3195  002EAA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3196  002EAC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3197  002EAE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3198  002EB0  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3199  002EB2  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3200  002EB4  6C05               	negf	___aomod@dividend^0,c
  3201  002EB6  0E00               	movlw	0
  3202  002EB8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3203  002EBA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3204  002EBC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3205  002EBE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3206  002EC0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3207  002EC2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3208  002EC4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3209  002EC6  0E01               	movlw	1
  3210  002EC8  6E16               	movwf	___aomod@sign^0,c
  3211  002ECA                     l4236:
  3212  002ECA  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3213  002ECC  EF6C  F017         	goto	u4360
  3214  002ED0  EF6A  F017         	goto	u4361
  3215  002ED4                     u4361:
  3216  002ED4  EF7C  F017         	goto	l4240
  3217  002ED8                     u4360:
  3218  002ED8  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3219  002EDA  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3220  002EDC  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3221  002EDE  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3222  002EE0  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3223  002EE2  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3224  002EE4  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3225  002EE6  6C0D               	negf	___aomod@divisor^0,c
  3226  002EE8  0E00               	movlw	0
  3227  002EEA  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3228  002EEC  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3229  002EEE  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3230  002EF0  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3231  002EF2  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3232  002EF4  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3233  002EF6  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3234  002EF8                     l4240:
  3235  002EF8  500D               	movf	___aomod@divisor^0,w,c
  3236  002EFA  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3237  002EFC  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3238  002EFE  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3239  002F00  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3240  002F02  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3241  002F04  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3242  002F06  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3243  002F08  B4D8               	btfsc	status,2,c
  3244  002F0A  EF89  F017         	goto	u4371
  3245  002F0E  EF8B  F017         	goto	u4370
  3246  002F12                     u4371:
  3247  002F12  EFD3  F017         	goto	l4256
  3248  002F16                     u4370:
  3249  002F16  0E01               	movlw	1
  3250  002F18  6E15               	movwf	___aomod@counter^0,c
  3251  002F1A  EF99  F017         	goto	l4246
  3252  002F1E                     l4244:
  3253  002F1E  90D8               	bcf	status,0,c
  3254  002F20  360D               	rlcf	___aomod@divisor^0,f,c
  3255  002F22  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3256  002F24  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3257  002F26  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3258  002F28  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3259  002F2A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3260  002F2C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3261  002F2E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3262  002F30  2A15               	incf	___aomod@counter^0,f,c
  3263  002F32                     l4246:
  3264  002F32  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3265  002F34  EF9E  F017         	goto	u4381
  3266  002F38  EFA0  F017         	goto	u4380
  3267  002F3C                     u4381:
  3268  002F3C  EF8F  F017         	goto	l4244
  3269  002F40                     u4380:
  3270  002F40                     l4248:
  3271  002F40  500D               	movf	___aomod@divisor^0,w,c
  3272  002F42  5C05               	subwf	___aomod@dividend^0,w,c
  3273  002F44  500E               	movf	(___aomod@divisor+1)^0,w,c
  3274  002F46  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3275  002F48  500F               	movf	(___aomod@divisor+2)^0,w,c
  3276  002F4A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3277  002F4C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3278  002F4E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3279  002F50  5011               	movf	(___aomod@divisor+4)^0,w,c
  3280  002F52  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3281  002F54  5012               	movf	(___aomod@divisor+5)^0,w,c
  3282  002F56  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3283  002F58  5013               	movf	(___aomod@divisor+6)^0,w,c
  3284  002F5A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3285  002F5C  5014               	movf	(___aomod@divisor+7)^0,w,c
  3286  002F5E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3287  002F60  A0D8               	btfss	status,0,c
  3288  002F62  EFB5  F017         	goto	u4391
  3289  002F66  EFB7  F017         	goto	u4390
  3290  002F6A                     u4391:
  3291  002F6A  EFC7  F017         	goto	l4252
  3292  002F6E                     u4390:
  3293  002F6E  500D               	movf	___aomod@divisor^0,w,c
  3294  002F70  5E05               	subwf	___aomod@dividend^0,f,c
  3295  002F72  500E               	movf	(___aomod@divisor+1)^0,w,c
  3296  002F74  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3297  002F76  500F               	movf	(___aomod@divisor+2)^0,w,c
  3298  002F78  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3299  002F7A  5010               	movf	(___aomod@divisor+3)^0,w,c
  3300  002F7C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3301  002F7E  5011               	movf	(___aomod@divisor+4)^0,w,c
  3302  002F80  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3303  002F82  5012               	movf	(___aomod@divisor+5)^0,w,c
  3304  002F84  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3305  002F86  5013               	movf	(___aomod@divisor+6)^0,w,c
  3306  002F88  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3307  002F8A  5014               	movf	(___aomod@divisor+7)^0,w,c
  3308  002F8C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3309  002F8E                     l4252:
  3310  002F8E  90D8               	bcf	status,0,c
  3311  002F90  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3312  002F92  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3313  002F94  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3314  002F96  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3315  002F98  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3316  002F9A  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3317  002F9C  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3318  002F9E  320D               	rrcf	___aomod@divisor^0,f,c
  3319  002FA0  2E15               	decfsz	___aomod@counter^0,f,c
  3320  002FA2  EFA0  F017         	goto	l4248
  3321  002FA6                     l4256:
  3322  002FA6  5016               	movf	___aomod@sign^0,w,c
  3323  002FA8  B4D8               	btfsc	status,2,c
  3324  002FAA  EFD9  F017         	goto	u4401
  3325  002FAE  EFDB  F017         	goto	u4400
  3326  002FB2                     u4401:
  3327  002FB2  EFEB  F017         	goto	l4260
  3328  002FB6                     u4400:
  3329  002FB6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3330  002FB8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3331  002FBA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3332  002FBC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3333  002FBE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3334  002FC0  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3335  002FC2  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3336  002FC4  6C05               	negf	___aomod@dividend^0,c
  3337  002FC6  0E00               	movlw	0
  3338  002FC8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3339  002FCA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3340  002FCC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3341  002FCE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3342  002FD0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3343  002FD2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3344  002FD4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3345  002FD6                     l4260:
  3346  002FD6  C005  F005         	movff	___aomod@dividend,?___aomod
  3347  002FDA  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3348  002FDE  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3349  002FE2  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3350  002FE6  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3351  002FEA  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3352  002FEE  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3353  002FF2  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3354  002FF6  0012               	return		;funcret
  3355  002FF8                     __end_of___aomod:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function ___aodiv *****************
  3359 ;; Defined at:
  3360 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  dividend        8    4[COMRAM] long long 
  3363 ;;  divisor         8   12[COMRAM] long long 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  quotient        8   22[COMRAM] long long 
  3366 ;;  sign            1   21[COMRAM] unsigned char 
  3367 ;;  counter         1   20[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  8    4[COMRAM] long long 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:       26 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 2
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_dtoa
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text12
  3392  002D0C                     __ptext12:
  3393                           	callstack 0
  3394  002D0C                     ___aodiv:
  3395                           	callstack 24
  3396  002D0C  0E00               	movlw	0
  3397  002D0E  6E16               	movwf	___aodiv@sign^0,c
  3398  002D10  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3399  002D12  EF8F  F016         	goto	u4280
  3400  002D16  EF8D  F016         	goto	u4281
  3401  002D1A                     u4281:
  3402  002D1A  EFA1  F016         	goto	l4192
  3403  002D1E                     u4280:
  3404  002D1E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3405  002D20  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3406  002D22  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3407  002D24  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3408  002D26  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3409  002D28  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3410  002D2A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3411  002D2C  6C0D               	negf	___aodiv@divisor^0,c
  3412  002D2E  0E00               	movlw	0
  3413  002D30  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3414  002D32  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3415  002D34  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3416  002D36  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3417  002D38  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3418  002D3A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3419  002D3C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3420  002D3E  0E01               	movlw	1
  3421  002D40  6E16               	movwf	___aodiv@sign^0,c
  3422  002D42                     l4192:
  3423  002D42  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3424  002D44  EFA8  F016         	goto	u4290
  3425  002D48  EFA6  F016         	goto	u4291
  3426  002D4C                     u4291:
  3427  002D4C  EFBA  F016         	goto	l4198
  3428  002D50                     u4290:
  3429  002D50  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3430  002D52  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3431  002D54  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3432  002D56  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3433  002D58  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3434  002D5A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3435  002D5C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3436  002D5E  6C05               	negf	___aodiv@dividend^0,c
  3437  002D60  0E00               	movlw	0
  3438  002D62  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3439  002D64  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3440  002D66  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3441  002D68  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3442  002D6A  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3443  002D6C  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3444  002D6E  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3445  002D70  0E01               	movlw	1
  3446  002D72  1A16               	xorwf	___aodiv@sign^0,f,c
  3447  002D74                     l4198:
  3448  002D74  EE20  F017         	lfsr	2,___aodiv@quotient
  3449  002D78  0E07               	movlw	7
  3450  002D7A                     u4301:
  3451  002D7A  6ADE               	clrf	postinc2,c
  3452  002D7C  06E8               	decf	wreg,f,c
  3453  002D7E  E2FD               	bc	u4301
  3454  002D80  500D               	movf	___aodiv@divisor^0,w,c
  3455  002D82  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3456  002D84  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3457  002D86  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3458  002D88  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3459  002D8A  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3460  002D8C  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3461  002D8E  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3462  002D90  B4D8               	btfsc	status,2,c
  3463  002D92  EFCD  F016         	goto	u4311
  3464  002D96  EFCF  F016         	goto	u4310
  3465  002D9A                     u4311:
  3466  002D9A  EF21  F017         	goto	l4220
  3467  002D9E                     u4310:
  3468  002D9E  0E01               	movlw	1
  3469  002DA0  6E15               	movwf	___aodiv@counter^0,c
  3470  002DA2  EFDD  F016         	goto	l4206
  3471  002DA6                     l4204:
  3472  002DA6  90D8               	bcf	status,0,c
  3473  002DA8  360D               	rlcf	___aodiv@divisor^0,f,c
  3474  002DAA  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3475  002DAC  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3476  002DAE  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3477  002DB0  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3478  002DB2  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3479  002DB4  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3480  002DB6  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3481  002DB8  2A15               	incf	___aodiv@counter^0,f,c
  3482  002DBA                     l4206:
  3483  002DBA  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3484  002DBC  EFE2  F016         	goto	u4321
  3485  002DC0  EFE4  F016         	goto	u4320
  3486  002DC4                     u4321:
  3487  002DC4  EFD3  F016         	goto	l4204
  3488  002DC8                     u4320:
  3489  002DC8                     l4208:
  3490  002DC8  90D8               	bcf	status,0,c
  3491  002DCA  3617               	rlcf	___aodiv@quotient^0,f,c
  3492  002DCC  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3493  002DCE  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3494  002DD0  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3495  002DD2  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3496  002DD4  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3497  002DD6  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3498  002DD8  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3499  002DDA  500D               	movf	___aodiv@divisor^0,w,c
  3500  002DDC  5C05               	subwf	___aodiv@dividend^0,w,c
  3501  002DDE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3502  002DE0  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3503  002DE2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3504  002DE4  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3505  002DE6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3506  002DE8  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3507  002DEA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3508  002DEC  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3509  002DEE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3510  002DF0  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3511  002DF2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3512  002DF4  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3513  002DF6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3514  002DF8  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3515  002DFA  A0D8               	btfss	status,0,c
  3516  002DFC  EF02  F017         	goto	u4331
  3517  002E00  EF04  F017         	goto	u4330
  3518  002E04                     u4331:
  3519  002E04  EF15  F017         	goto	l4216
  3520  002E08                     u4330:
  3521  002E08  500D               	movf	___aodiv@divisor^0,w,c
  3522  002E0A  5E05               	subwf	___aodiv@dividend^0,f,c
  3523  002E0C  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3524  002E0E  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3525  002E10  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3526  002E12  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3527  002E14  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3528  002E16  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3529  002E18  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3530  002E1A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3531  002E1C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3532  002E1E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3533  002E20  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3534  002E22  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3535  002E24  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3536  002E26  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3537  002E28  8017               	bsf	___aodiv@quotient^0,0,c
  3538  002E2A                     l4216:
  3539  002E2A  90D8               	bcf	status,0,c
  3540  002E2C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3541  002E2E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3542  002E30  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3543  002E32  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3544  002E34  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3545  002E36  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3546  002E38  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3547  002E3A  320D               	rrcf	___aodiv@divisor^0,f,c
  3548  002E3C  2E15               	decfsz	___aodiv@counter^0,f,c
  3549  002E3E  EFE4  F016         	goto	l4208
  3550  002E42                     l4220:
  3551  002E42  5016               	movf	___aodiv@sign^0,w,c
  3552  002E44  B4D8               	btfsc	status,2,c
  3553  002E46  EF27  F017         	goto	u4341
  3554  002E4A  EF29  F017         	goto	u4340
  3555  002E4E                     u4341:
  3556  002E4E  EF39  F017         	goto	l4224
  3557  002E52                     u4340:
  3558  002E52  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3559  002E54  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3560  002E56  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3561  002E58  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3562  002E5A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3563  002E5C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3564  002E5E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3565  002E60  6C17               	negf	___aodiv@quotient^0,c
  3566  002E62  0E00               	movlw	0
  3567  002E64  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3568  002E66  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3569  002E68  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3570  002E6A  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3571  002E6C  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3572  002E6E  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3573  002E70  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3574  002E72                     l4224:
  3575  002E72  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3576  002E76  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3577  002E7A  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3578  002E7E  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3579  002E82  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3580  002E86  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3581  002E8A  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3582  002E8E  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3583  002E92  0012               	return		;funcret
  3584  002E94                     __end_of___aodiv:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _sendTxBuf *****************
  3588 ;; Defined at:
  3589 ;;		line 106 in file "serial.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 3
  3610 ;; This function calls:
  3611 ;;		_isDataInTxBuf
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text13
  3618  003A8C                     __ptext13:
  3619                           	callstack 0
  3620  003A8C                     _sendTxBuf:
  3621                           	callstack 27
  3622  003A8C                     
  3623                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3624  003A8C  EC53  F01D         	call	_isDataInTxBuf	;wreg free
  3625  003A90  0900               	iorlw	0
  3626  003A92  B4D8               	btfsc	status,2,c
  3627  003A94  EF4E  F01D         	goto	u5671
  3628  003A98  EF50  F01D         	goto	u5670
  3629  003A9C                     u5671:
  3630  003A9C  EF52  F01D         	goto	l416
  3631  003AA0                     u5670:
  3632  003AA0  010E               	movlb	14	; () banked
  3633  003AA2  852D               	bsf	45,2,b	;volatile
  3634  003AA4                     l416:
  3635  003AA4  0012               	return		;funcret
  3636  003AA6                     __end_of_sendTxBuf:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function _isDataInTxBuf *****************
  3640 ;; Defined at:
  3641 ;;		line 93 in file "serial.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      unsigned char 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 2
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_sendTxBuf
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text14
  3670  003AA6                     __ptext14:
  3671                           	callstack 0
  3672  003AA6                     _isDataInTxBuf:
  3673                           	callstack 27
  3674  003AA6                     
  3675                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  3676  003AA6  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  3677  003AA8  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3678  003AAA  A4D8               	btfss	status,2,c
  3679  003AAC  EF5A  F01D         	goto	u4771
  3680  003AB0  EF5D  F01D         	goto	u4770
  3681  003AB4                     u4771:
  3682  003AB4  0E01               	movlw	1
  3683  003AB6  EF5E  F01D         	goto	u4780
  3684  003ABA                     u4770:
  3685  003ABA  0E00               	movlw	0
  3686  003ABC                     u4780:
  3687  003ABC  0012               	return		;funcret
  3688  003ABE                     __end_of_isDataInTxBuf:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _read_colours *****************
  3692 ;; Defined at:
  3693 ;;		line 85 in file "color.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  m               2   15[COMRAM] PTR struct RGB_val
  3696 ;;		 -> main@test(24), 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;Total ram usage:        2 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 5
  3715 ;; This function calls:
  3716 ;;		_color_read_Blue
  3717 ;;		_color_read_Clear
  3718 ;;		_color_read_Green
  3719 ;;		_color_read_Red
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text15
  3726  00354C                     __ptext15:
  3727                           	callstack 0
  3728  00354C                     _read_colours:
  3729                           	callstack 25
  3730  00354C                     
  3731                           ;color.c: 86:     (m->C) = color_read_Clear();
  3732  00354C  EC81  F01B         	call	_color_read_Clear	;wreg free
  3733  003550  EE20 F010          	lfsr	2,16
  3734  003554  5010               	movf	read_colours@m^0,w,c
  3735  003556  26D9               	addwf	fsr2l,f,c
  3736  003558  5011               	movf	(read_colours@m+1)^0,w,c
  3737  00355A  22DA               	addwfc	fsr2h,f,c
  3738  00355C  C009  FFDE         	movff	?_color_read_Clear,postinc2
  3739  003560  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  3740                           
  3741                           ;color.c: 87:     (m->R) = color_read_Red();
  3742  003564  EC31  F01B         	call	_color_read_Red	;wreg free
  3743  003568  EE20 F012          	lfsr	2,18
  3744  00356C  5010               	movf	read_colours@m^0,w,c
  3745  00356E  26D9               	addwf	fsr2l,f,c
  3746  003570  5011               	movf	(read_colours@m+1)^0,w,c
  3747  003572  22DA               	addwfc	fsr2h,f,c
  3748  003574  C009  FFDE         	movff	?_color_read_Red,postinc2
  3749  003578  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  3750                           
  3751                           ;color.c: 88:     (m->G) = color_read_Green();
  3752  00357C  EC59  F01B         	call	_color_read_Green	;wreg free
  3753  003580  EE20 F014          	lfsr	2,20
  3754  003584  5010               	movf	read_colours@m^0,w,c
  3755  003586  26D9               	addwf	fsr2l,f,c
  3756  003588  5011               	movf	(read_colours@m+1)^0,w,c
  3757  00358A  22DA               	addwfc	fsr2h,f,c
  3758  00358C  C009  FFDE         	movff	?_color_read_Green,postinc2
  3759  003590  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  3760                           
  3761                           ;color.c: 89:     (m->B) = color_read_Blue();
  3762  003594  ECA9  F01B         	call	_color_read_Blue	;wreg free
  3763  003598  EE20 F016          	lfsr	2,22
  3764  00359C  5010               	movf	read_colours@m^0,w,c
  3765  00359E  26D9               	addwf	fsr2l,f,c
  3766  0035A0  5011               	movf	(read_colours@m+1)^0,w,c
  3767  0035A2  22DA               	addwfc	fsr2h,f,c
  3768  0035A4  C009  FFDE         	movff	?_color_read_Blue,postinc2
  3769  0035A8  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  3770  0035AC  0012               	return		;funcret
  3771  0035AE                     __end_of_read_colours:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function _initUSART4 *****************
  3775 ;; Defined at:
  3776 ;;		line 4 in file "serial.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;Total ram usage:        0 bytes
  3795 ;; Hardware stack levels used: 1
  3796 ;; Hardware stack levels required when called: 2
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_main
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text16
  3805  003A4C                     __ptext16:
  3806                           	callstack 0
  3807  003A4C                     _initUSART4:
  3808                           	callstack 28
  3809  003A4C                     
  3810                           ;serial.c: 8:     RC0PPS = 0x12;
  3811  003A4C  0E12               	movlw	18
  3812  003A4E  010E               	movlb	14	; () banked
  3813  003A50  6F62               	movwf	98,b	;volatile
  3814                           
  3815                           ;serial.c: 9:     RX4PPS = 0x11;
  3816  003A52  0E11               	movlw	17
  3817  003A54  6F15               	movwf	21,b	;volatile
  3818  003A56                     
  3819                           ; BSR set to: 14
  3820                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  3821  003A56  8283               	bsf	131,1,c	;volatile
  3822  003A58                     
  3823                           ; BSR set to: 14
  3824                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3825  003A58  97E9               	bcf	233,3,b	;volatile
  3826  003A5A                     
  3827                           ; BSR set to: 14
  3828                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3829  003A5A  95E8               	bcf	232,2,b	;volatile
  3830                           
  3831                           ;serial.c: 14:     SP4BRGL = 51;
  3832  003A5C  0E33               	movlw	51
  3833  003A5E  6FE5               	movwf	229,b	;volatile
  3834                           
  3835                           ;serial.c: 15:     SP4BRGH = 0;
  3836  003A60  0E00               	movlw	0
  3837  003A62  6FE6               	movwf	230,b	;volatile
  3838  003A64                     
  3839                           ; BSR set to: 14
  3840                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3841  003A64  89E7               	bsf	231,4,b	;volatile
  3842  003A66                     
  3843                           ; BSR set to: 14
  3844                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3845  003A66  8BE8               	bsf	232,5,b	;volatile
  3846  003A68                     
  3847                           ; BSR set to: 14
  3848                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3849  003A68  8FE7               	bsf	231,7,b	;volatile
  3850  003A6A                     
  3851                           ; BSR set to: 14
  3852  003A6A  0012               	return		;funcret
  3853  003A6C                     __end_of_initUSART4:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _initDCmotorsPWM *****************
  3857 ;; Defined at:
  3858 ;;		line 5 in file "dc_motor.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  PWMperiod       2    4[COMRAM] int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;Total ram usage:        2 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 2
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text17
  3887  0037E6                     __ptext17:
  3888                           	callstack 0
  3889  0037E6                     _initDCmotorsPWM:
  3890                           	callstack 28
  3891  0037E6                     
  3892                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  3893  0037E6  9485               	bcf	133,2,c	;volatile
  3894                           
  3895                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  3896  0037E8  9E83               	bcf	131,7,c	;volatile
  3897                           
  3898                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  3899  0037EA  9C87               	bcf	135,6,c	;volatile
  3900                           
  3901                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  3902  0037EC  9885               	bcf	133,4,c	;volatile
  3903                           
  3904                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  3905  0037EE  947D               	bcf	125,2,c	;volatile
  3906                           
  3907                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  3908  0037F0  9E7B               	bcf	123,7,c	;volatile
  3909                           
  3910                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  3911  0037F2  9C7F               	bcf	127,6,c	;volatile
  3912                           
  3913                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  3914  0037F4  987D               	bcf	125,4,c	;volatile
  3915  0037F6                     
  3916                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  3917  0037F6  50BD               	movf	189,w,c	;volatile
  3918  0037F8  0B8F               	andlw	-113
  3919  0037FA  0940               	iorlw	64
  3920  0037FC  6EBD               	movwf	189,c	;volatile
  3921                           
  3922                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  3923  0037FE  0EE0               	movlw	-32
  3924  003800  16BE               	andwf	190,f,c	;volatile
  3925                           
  3926                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  3927  003802  50BF               	movf	191,w,c	;volatile
  3928  003804  0BF0               	andlw	-16
  3929  003806  0901               	iorlw	1
  3930  003808  6EBF               	movwf	191,c	;volatile
  3931                           
  3932                           ;dc_motor.c: 22:     T2PR=99;
  3933  00380A  0E63               	movlw	99
  3934  00380C  6EBC               	movwf	188,c	;volatile
  3935  00380E                     
  3936                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  3937  00380E  8EBD               	bsf	189,7,c	;volatile
  3938                           
  3939                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  3940  003810  0E0A               	movlw	10
  3941  003812  010E               	movlb	14	; () banked
  3942  003814  6F74               	movwf	116,b	;volatile
  3943                           
  3944                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  3945  003816  0E0B               	movlw	11
  3946  003818  6F69               	movwf	105,b	;volatile
  3947                           
  3948                           ;dc_motor.c: 28:     PWM6DCH=0;
  3949  00381A  0E00               	movlw	0
  3950  00381C  6EA3               	movwf	163,c	;volatile
  3951                           
  3952                           ;dc_motor.c: 29:     PWM7DCH=0;
  3953  00381E  0E00               	movlw	0
  3954  003820  6EA0               	movwf	160,c	;volatile
  3955  003822                     
  3956                           ; BSR set to: 14
  3957                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  3958  003822  8EA4               	bsf	164,7,c	;volatile
  3959  003824                     
  3960                           ; BSR set to: 14
  3961                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  3962  003824  8EA1               	bsf	161,7,c	;volatile
  3963  003826                     
  3964                           ; BSR set to: 14
  3965  003826  0012               	return		;funcret
  3966  003828                     __end_of_initDCmotorsPWM:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _determine_color_new *****************
  3970 ;; Defined at:
  3971 ;;		line 201 in file "color.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  m               2   78[COMRAM] PTR struct RGB_val
  3974 ;;		 -> main@test(24), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  BlueRatio       2    6[BANK0 ] unsigned int 
  3977 ;;  GreenRatio      2    4[BANK0 ] unsigned int 
  3978 ;;  RedRatio        2    2[BANK0 ] unsigned int 
  3979 ;;  out             2    0[BANK0 ] unsigned int 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2   78[COMRAM] unsigned int 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;Total ram usage:       14 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 4
  3996 ;; This function calls:
  3997 ;;		___fldiv
  3998 ;;		___flmul
  3999 ;;		___fltol
  4000 ;;		___xxtofl
  4001 ;;		_isbtw
  4002 ;; This function is called by:
  4003 ;;		_main
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text18
  4008  000E48                     __ptext18:
  4009                           	callstack 0
  4010  000E48                     _determine_color_new:
  4011                           	callstack 26
  4012  000E48                     
  4013                           ;color.c: 202:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 203:     unsig
      +                          ned int out = 9;
  4014  000E48  0E00               	movlw	0
  4015  000E4A  0100               	movlb	0	; () banked
  4016  000E4C  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4017  000E4E  0E09               	movlw	9
  4018  000E50  6F60               	movwf	determine_color_new@out& (0+255),b
  4019  000E52                     
  4020                           ; BSR set to: 0
  4021                           ;color.c: 206:     RedRatio = ((float)m->R / (float)m->whiteC)*10000;
  4022  000E52  0E00               	movlw	0
  4023  000E54  6E30               	movwf	___flmul@a^0,c
  4024  000E56  0E40               	movlw	64
  4025  000E58  6E31               	movwf	(___flmul@a+1)^0,c
  4026  000E5A  0E1C               	movlw	28
  4027  000E5C  6E32               	movwf	(___flmul@a+2)^0,c
  4028  000E5E  0E46               	movlw	70
  4029  000E60  6E33               	movwf	(___flmul@a+3)^0,c
  4030  000E62  EE20 F008          	lfsr	2,8
  4031  000E66  504F               	movf	determine_color_new@m^0,w,c
  4032  000E68  26D9               	addwf	fsr2l,f,c
  4033  000E6A  5050               	movf	(determine_color_new@m+1)^0,w,c
  4034  000E6C  22DA               	addwfc	fsr2h,f,c
  4035  000E6E  CFDE F051          	movff	postinc2,??_determine_color_new
  4036  000E72  CFDD F052          	movff	postdec2,??_determine_color_new+1
  4037  000E76  C051  F005         	movff	??_determine_color_new,___xxtofl@val
  4038  000E7A  C052  F006         	movff	??_determine_color_new+1,___xxtofl@val+1
  4039  000E7E  6A07               	clrf	(___xxtofl@val+2)^0,c
  4040  000E80  6A08               	clrf	(___xxtofl@val+3)^0,c
  4041  000E82  0E00               	movlw	0
  4042  000E84  ECAC  F015         	call	___xxtofl
  4043  000E88  C005  F017         	movff	?___xxtofl,___fldiv@a
  4044  000E8C  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4045  000E90  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4046  000E94  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4047  000E98  EE20 F012          	lfsr	2,18
  4048  000E9C  504F               	movf	determine_color_new@m^0,w,c
  4049  000E9E  26D9               	addwf	fsr2l,f,c
  4050  000EA0  5050               	movf	(determine_color_new@m+1)^0,w,c
  4051  000EA2  22DA               	addwfc	fsr2h,f,c
  4052  000EA4  CFDE F053          	movff	postinc2,??_determine_color_new+2
  4053  000EA8  CFDD F054          	movff	postdec2,??_determine_color_new+3
  4054  000EAC  C053  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4055  000EB0  C054  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4056  000EB4  6A07               	clrf	(___xxtofl@val+2)^0,c
  4057  000EB6  6A08               	clrf	(___xxtofl@val+3)^0,c
  4058  000EB8  0E00               	movlw	0
  4059  000EBA  ECAC  F015         	call	___xxtofl
  4060  000EBE  C005  F013         	movff	?___xxtofl,___fldiv@b
  4061  000EC2  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4062  000EC6  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4063  000ECA  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4064  000ECE  EC93  F011         	call	___fldiv	;wreg free
  4065  000ED2  C013  F02C         	movff	?___fldiv,___flmul@b
  4066  000ED6  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4067  000EDA  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4068  000EDE  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4069  000EE2  EC7E  F00F         	call	___flmul	;wreg free
  4070  000EE6  C02C  F045         	movff	?___flmul,___fltol@f1
  4071  000EEA  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  4072  000EEE  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  4073  000EF2  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  4074  000EF6  ECFC  F017         	call	___fltol	;wreg free
  4075  000EFA  C045  F062         	movff	?___fltol,determine_color_new@RedRatio
  4076  000EFE  C046  F063         	movff	?___fltol+1,determine_color_new@RedRatio+1
  4077  000F02                     
  4078                           ;color.c: 207:     GreenRatio = ((float)m->G / (float)m->whiteC)*10000;
  4079  000F02  0E00               	movlw	0
  4080  000F04  6E30               	movwf	___flmul@a^0,c
  4081  000F06  0E40               	movlw	64
  4082  000F08  6E31               	movwf	(___flmul@a+1)^0,c
  4083  000F0A  0E1C               	movlw	28
  4084  000F0C  6E32               	movwf	(___flmul@a+2)^0,c
  4085  000F0E  0E46               	movlw	70
  4086  000F10  6E33               	movwf	(___flmul@a+3)^0,c
  4087  000F12  EE20 F008          	lfsr	2,8
  4088  000F16  504F               	movf	determine_color_new@m^0,w,c
  4089  000F18  26D9               	addwf	fsr2l,f,c
  4090  000F1A  5050               	movf	(determine_color_new@m+1)^0,w,c
  4091  000F1C  22DA               	addwfc	fsr2h,f,c
  4092  000F1E  CFDE F051          	movff	postinc2,??_determine_color_new
  4093  000F22  CFDD F052          	movff	postdec2,??_determine_color_new+1
  4094  000F26  C051  F005         	movff	??_determine_color_new,___xxtofl@val
  4095  000F2A  C052  F006         	movff	??_determine_color_new+1,___xxtofl@val+1
  4096  000F2E  6A07               	clrf	(___xxtofl@val+2)^0,c
  4097  000F30  6A08               	clrf	(___xxtofl@val+3)^0,c
  4098  000F32  0E00               	movlw	0
  4099  000F34  ECAC  F015         	call	___xxtofl
  4100  000F38  C005  F017         	movff	?___xxtofl,___fldiv@a
  4101  000F3C  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4102  000F40  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4103  000F44  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4104  000F48  EE20 F014          	lfsr	2,20
  4105  000F4C  504F               	movf	determine_color_new@m^0,w,c
  4106  000F4E  26D9               	addwf	fsr2l,f,c
  4107  000F50  5050               	movf	(determine_color_new@m+1)^0,w,c
  4108  000F52  22DA               	addwfc	fsr2h,f,c
  4109  000F54  CFDE F053          	movff	postinc2,??_determine_color_new+2
  4110  000F58  CFDD F054          	movff	postdec2,??_determine_color_new+3
  4111  000F5C  C053  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4112  000F60  C054  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4113  000F64  6A07               	clrf	(___xxtofl@val+2)^0,c
  4114  000F66  6A08               	clrf	(___xxtofl@val+3)^0,c
  4115  000F68  0E00               	movlw	0
  4116  000F6A  ECAC  F015         	call	___xxtofl
  4117  000F6E  C005  F013         	movff	?___xxtofl,___fldiv@b
  4118  000F72  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4119  000F76  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4120  000F7A  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4121  000F7E  EC93  F011         	call	___fldiv	;wreg free
  4122  000F82  C013  F02C         	movff	?___fldiv,___flmul@b
  4123  000F86  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4124  000F8A  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4125  000F8E  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4126  000F92  EC7E  F00F         	call	___flmul	;wreg free
  4127  000F96  C02C  F045         	movff	?___flmul,___fltol@f1
  4128  000F9A  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  4129  000F9E  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  4130  000FA2  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  4131  000FA6  ECFC  F017         	call	___fltol	;wreg free
  4132  000FAA  C045  F064         	movff	?___fltol,determine_color_new@GreenRatio
  4133  000FAE  C046  F065         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  4134  000FB2                     
  4135                           ;color.c: 208:     BlueRatio = ((float)m->B / (float)m->whiteC)*10000;
  4136  000FB2  0E00               	movlw	0
  4137  000FB4  6E30               	movwf	___flmul@a^0,c
  4138  000FB6  0E40               	movlw	64
  4139  000FB8  6E31               	movwf	(___flmul@a+1)^0,c
  4140  000FBA  0E1C               	movlw	28
  4141  000FBC  6E32               	movwf	(___flmul@a+2)^0,c
  4142  000FBE  0E46               	movlw	70
  4143  000FC0  6E33               	movwf	(___flmul@a+3)^0,c
  4144  000FC2  EE20 F008          	lfsr	2,8
  4145  000FC6  504F               	movf	determine_color_new@m^0,w,c
  4146  000FC8  26D9               	addwf	fsr2l,f,c
  4147  000FCA  5050               	movf	(determine_color_new@m+1)^0,w,c
  4148  000FCC  22DA               	addwfc	fsr2h,f,c
  4149  000FCE  CFDE F051          	movff	postinc2,??_determine_color_new
  4150  000FD2  CFDD F052          	movff	postdec2,??_determine_color_new+1
  4151  000FD6  C051  F005         	movff	??_determine_color_new,___xxtofl@val
  4152  000FDA  C052  F006         	movff	??_determine_color_new+1,___xxtofl@val+1
  4153  000FDE  6A07               	clrf	(___xxtofl@val+2)^0,c
  4154  000FE0  6A08               	clrf	(___xxtofl@val+3)^0,c
  4155  000FE2  0E00               	movlw	0
  4156  000FE4  ECAC  F015         	call	___xxtofl
  4157  000FE8  C005  F017         	movff	?___xxtofl,___fldiv@a
  4158  000FEC  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4159  000FF0  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4160  000FF4  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4161  000FF8  EE20 F016          	lfsr	2,22
  4162  000FFC  504F               	movf	determine_color_new@m^0,w,c
  4163  000FFE  26D9               	addwf	fsr2l,f,c
  4164  001000  5050               	movf	(determine_color_new@m+1)^0,w,c
  4165  001002  22DA               	addwfc	fsr2h,f,c
  4166  001004  CFDE F053          	movff	postinc2,??_determine_color_new+2
  4167  001008  CFDD F054          	movff	postdec2,??_determine_color_new+3
  4168  00100C  C053  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4169  001010  C054  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4170  001014  6A07               	clrf	(___xxtofl@val+2)^0,c
  4171  001016  6A08               	clrf	(___xxtofl@val+3)^0,c
  4172  001018  0E00               	movlw	0
  4173  00101A  ECAC  F015         	call	___xxtofl
  4174  00101E  C005  F013         	movff	?___xxtofl,___fldiv@b
  4175  001022  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4176  001026  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4177  00102A  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4178  00102E  EC93  F011         	call	___fldiv	;wreg free
  4179  001032  C013  F02C         	movff	?___fldiv,___flmul@b
  4180  001036  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4181  00103A  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4182  00103E  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4183  001042  EC7E  F00F         	call	___flmul	;wreg free
  4184  001046  C02C  F045         	movff	?___flmul,___fltol@f1
  4185  00104A  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  4186  00104E  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  4187  001052  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  4188  001056  ECFC  F017         	call	___fltol	;wreg free
  4189  00105A  C045  F066         	movff	?___fltol,determine_color_new@BlueRatio
  4190  00105E  C046  F067         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  4191  001062                     
  4192                           ;color.c: 212:     if (isbtw(RedRatio,0.795,0.870)==1 && isbtw(GreenRatio,0.140,0.169)==
      +                          1 && isbtw(BlueRatio,0.185,0.210)==1)
  4193  001062  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4194  001066  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4195  00106A  6A07               	clrf	(___xxtofl@val+2)^0,c
  4196  00106C  6A08               	clrf	(___xxtofl@val+3)^0,c
  4197  00106E  0E00               	movlw	0
  4198  001070  ECAC  F015         	call	___xxtofl
  4199  001074  C005  F013         	movff	?___xxtofl,isbtw@num
  4200  001078  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4201  00107C  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4202  001080  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4203  001084  0E1F               	movlw	31
  4204  001086  6E17               	movwf	isbtw@low^0,c
  4205  001088  0E85               	movlw	133
  4206  00108A  6E18               	movwf	(isbtw@low+1)^0,c
  4207  00108C  0E4B               	movlw	75
  4208  00108E  6E19               	movwf	(isbtw@low+2)^0,c
  4209  001090  0E3F               	movlw	63
  4210  001092  6E1A               	movwf	(isbtw@low+3)^0,c
  4211  001094  0E52               	movlw	82
  4212  001096  6E1B               	movwf	isbtw@high^0,c
  4213  001098  0EB8               	movlw	184
  4214  00109A  6E1C               	movwf	(isbtw@high+1)^0,c
  4215  00109C  0E5E               	movlw	94
  4216  00109E  6E1D               	movwf	(isbtw@high+2)^0,c
  4217  0010A0  0E3F               	movlw	63
  4218  0010A2  6E1E               	movwf	(isbtw@high+3)^0,c
  4219  0010A4  ECC9  F019         	call	_isbtw	;wreg free
  4220  0010A8  0413               	decf	?_isbtw^0,w,c
  4221  0010AA  1014               	iorwf	(?_isbtw+1)^0,w,c
  4222  0010AC  A4D8               	btfss	status,2,c
  4223  0010AE  EF5B  F008         	goto	u5391
  4224  0010B2  EF5D  F008         	goto	u5390
  4225  0010B6                     u5391:
  4226  0010B6  EFBA  F008         	goto	l4910
  4227  0010BA                     u5390:
  4228  0010BA  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4229  0010BE  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4230  0010C2  6A07               	clrf	(___xxtofl@val+2)^0,c
  4231  0010C4  6A08               	clrf	(___xxtofl@val+3)^0,c
  4232  0010C6  0E00               	movlw	0
  4233  0010C8  ECAC  F015         	call	___xxtofl
  4234  0010CC  C005  F013         	movff	?___xxtofl,isbtw@num
  4235  0010D0  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4236  0010D4  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4237  0010D8  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4238  0010DC  0E29               	movlw	41
  4239  0010DE  6E17               	movwf	isbtw@low^0,c
  4240  0010E0  0E5C               	movlw	92
  4241  0010E2  6E18               	movwf	(isbtw@low+1)^0,c
  4242  0010E4  0E0F               	movlw	15
  4243  0010E6  6E19               	movwf	(isbtw@low+2)^0,c
  4244  0010E8  0E3E               	movlw	62
  4245  0010EA  6E1A               	movwf	(isbtw@low+3)^0,c
  4246  0010EC  0E56               	movlw	86
  4247  0010EE  6E1B               	movwf	isbtw@high^0,c
  4248  0010F0  0E0E               	movlw	14
  4249  0010F2  6E1C               	movwf	(isbtw@high+1)^0,c
  4250  0010F4  0E2D               	movlw	45
  4251  0010F6  6E1D               	movwf	(isbtw@high+2)^0,c
  4252  0010F8  0E3E               	movlw	62
  4253  0010FA  6E1E               	movwf	(isbtw@high+3)^0,c
  4254  0010FC  ECC9  F019         	call	_isbtw	;wreg free
  4255  001100  0413               	decf	?_isbtw^0,w,c
  4256  001102  1014               	iorwf	(?_isbtw+1)^0,w,c
  4257  001104  A4D8               	btfss	status,2,c
  4258  001106  EF87  F008         	goto	u5401
  4259  00110A  EF89  F008         	goto	u5400
  4260  00110E                     u5401:
  4261  00110E  EFBA  F008         	goto	l4910
  4262  001112                     u5400:
  4263  001112  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4264  001116  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4265  00111A  6A07               	clrf	(___xxtofl@val+2)^0,c
  4266  00111C  6A08               	clrf	(___xxtofl@val+3)^0,c
  4267  00111E  0E00               	movlw	0
  4268  001120  ECAC  F015         	call	___xxtofl
  4269  001124  C005  F013         	movff	?___xxtofl,isbtw@num
  4270  001128  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4271  00112C  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4272  001130  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4273  001134  0EA4               	movlw	164
  4274  001136  6E17               	movwf	isbtw@low^0,c
  4275  001138  0E70               	movlw	112
  4276  00113A  6E18               	movwf	(isbtw@low+1)^0,c
  4277  00113C  0E3D               	movlw	61
  4278  00113E  6E19               	movwf	(isbtw@low+2)^0,c
  4279  001140  0E3E               	movlw	62
  4280  001142  6E1A               	movwf	(isbtw@low+3)^0,c
  4281  001144  0E3D               	movlw	61
  4282  001146  6E1B               	movwf	isbtw@high^0,c
  4283  001148  0E0A               	movlw	10
  4284  00114A  6E1C               	movwf	(isbtw@high+1)^0,c
  4285  00114C  0E57               	movlw	87
  4286  00114E  6E1D               	movwf	(isbtw@high+2)^0,c
  4287  001150  0E3E               	movlw	62
  4288  001152  6E1E               	movwf	(isbtw@high+3)^0,c
  4289  001154  ECC9  F019         	call	_isbtw	;wreg free
  4290  001158  0413               	decf	?_isbtw^0,w,c
  4291  00115A  1014               	iorwf	(?_isbtw+1)^0,w,c
  4292  00115C  A4D8               	btfss	status,2,c
  4293  00115E  EFB3  F008         	goto	u5411
  4294  001162  EFB5  F008         	goto	u5410
  4295  001166                     u5411:
  4296  001166  EFBA  F008         	goto	l4910
  4297  00116A                     u5410:
  4298  00116A                     
  4299                           ;color.c: 213:     {out = 0;}
  4300  00116A  0E00               	movlw	0
  4301  00116C  0100               	movlb	0	; () banked
  4302  00116E  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4303  001170  0E00               	movlw	0
  4304  001172  6F60               	movwf	determine_color_new@out& (0+255),b
  4305  001174                     l4910:
  4306                           
  4307                           ;color.c: 216:     if (isbtw(RedRatio,0.450,0.525)==1 && isbtw(GreenRatio,0.325,0.380)==
      +                          1 && isbtw(BlueRatio,0.240,0.270)==1)
  4308  001174  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4309  001178  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4310  00117C  6A07               	clrf	(___xxtofl@val+2)^0,c
  4311  00117E  6A08               	clrf	(___xxtofl@val+3)^0,c
  4312  001180  0E00               	movlw	0
  4313  001182  ECAC  F015         	call	___xxtofl
  4314  001186  C005  F013         	movff	?___xxtofl,isbtw@num
  4315  00118A  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4316  00118E  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4317  001192  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4318  001196  0E66               	movlw	102
  4319  001198  6E17               	movwf	isbtw@low^0,c
  4320  00119A  0E66               	movlw	102
  4321  00119C  6E18               	movwf	(isbtw@low+1)^0,c
  4322  00119E  0EE6               	movlw	230
  4323  0011A0  6E19               	movwf	(isbtw@low+2)^0,c
  4324  0011A2  0E3E               	movlw	62
  4325  0011A4  6E1A               	movwf	(isbtw@low+3)^0,c
  4326  0011A6  0E66               	movlw	102
  4327  0011A8  6E1B               	movwf	isbtw@high^0,c
  4328  0011AA  0E66               	movlw	102
  4329  0011AC  6E1C               	movwf	(isbtw@high+1)^0,c
  4330  0011AE  0E06               	movlw	6
  4331  0011B0  6E1D               	movwf	(isbtw@high+2)^0,c
  4332  0011B2  0E3F               	movlw	63
  4333  0011B4  6E1E               	movwf	(isbtw@high+3)^0,c
  4334  0011B6  ECC9  F019         	call	_isbtw	;wreg free
  4335  0011BA  0413               	decf	?_isbtw^0,w,c
  4336  0011BC  1014               	iorwf	(?_isbtw+1)^0,w,c
  4337  0011BE  A4D8               	btfss	status,2,c
  4338  0011C0  EFE4  F008         	goto	u5421
  4339  0011C4  EFE6  F008         	goto	u5420
  4340  0011C8                     u5421:
  4341  0011C8  EF43  F009         	goto	l4918
  4342  0011CC                     u5420:
  4343  0011CC  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4344  0011D0  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4345  0011D4  6A07               	clrf	(___xxtofl@val+2)^0,c
  4346  0011D6  6A08               	clrf	(___xxtofl@val+3)^0,c
  4347  0011D8  0E00               	movlw	0
  4348  0011DA  ECAC  F015         	call	___xxtofl
  4349  0011DE  C005  F013         	movff	?___xxtofl,isbtw@num
  4350  0011E2  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4351  0011E6  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4352  0011EA  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4353  0011EE  0E66               	movlw	102
  4354  0011F0  6E17               	movwf	isbtw@low^0,c
  4355  0011F2  0E66               	movlw	102
  4356  0011F4  6E18               	movwf	(isbtw@low+1)^0,c
  4357  0011F6  0EA6               	movlw	166
  4358  0011F8  6E19               	movwf	(isbtw@low+2)^0,c
  4359  0011FA  0E3E               	movlw	62
  4360  0011FC  6E1A               	movwf	(isbtw@low+3)^0,c
  4361  0011FE  0E5C               	movlw	92
  4362  001200  6E1B               	movwf	isbtw@high^0,c
  4363  001202  0E8F               	movlw	143
  4364  001204  6E1C               	movwf	(isbtw@high+1)^0,c
  4365  001206  0EC2               	movlw	194
  4366  001208  6E1D               	movwf	(isbtw@high+2)^0,c
  4367  00120A  0E3E               	movlw	62
  4368  00120C  6E1E               	movwf	(isbtw@high+3)^0,c
  4369  00120E  ECC9  F019         	call	_isbtw	;wreg free
  4370  001212  0413               	decf	?_isbtw^0,w,c
  4371  001214  1014               	iorwf	(?_isbtw+1)^0,w,c
  4372  001216  A4D8               	btfss	status,2,c
  4373  001218  EF10  F009         	goto	u5431
  4374  00121C  EF12  F009         	goto	u5430
  4375  001220                     u5431:
  4376  001220  EF43  F009         	goto	l4918
  4377  001224                     u5430:
  4378  001224  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4379  001228  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4380  00122C  6A07               	clrf	(___xxtofl@val+2)^0,c
  4381  00122E  6A08               	clrf	(___xxtofl@val+3)^0,c
  4382  001230  0E00               	movlw	0
  4383  001232  ECAC  F015         	call	___xxtofl
  4384  001236  C005  F013         	movff	?___xxtofl,isbtw@num
  4385  00123A  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4386  00123E  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4387  001242  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4388  001246  0E8F               	movlw	143
  4389  001248  6E17               	movwf	isbtw@low^0,c
  4390  00124A  0EC2               	movlw	194
  4391  00124C  6E18               	movwf	(isbtw@low+1)^0,c
  4392  00124E  0E75               	movlw	117
  4393  001250  6E19               	movwf	(isbtw@low+2)^0,c
  4394  001252  0E3E               	movlw	62
  4395  001254  6E1A               	movwf	(isbtw@low+3)^0,c
  4396  001256  0E71               	movlw	113
  4397  001258  6E1B               	movwf	isbtw@high^0,c
  4398  00125A  0E3D               	movlw	61
  4399  00125C  6E1C               	movwf	(isbtw@high+1)^0,c
  4400  00125E  0E8A               	movlw	138
  4401  001260  6E1D               	movwf	(isbtw@high+2)^0,c
  4402  001262  0E3E               	movlw	62
  4403  001264  6E1E               	movwf	(isbtw@high+3)^0,c
  4404  001266  ECC9  F019         	call	_isbtw	;wreg free
  4405  00126A  0413               	decf	?_isbtw^0,w,c
  4406  00126C  1014               	iorwf	(?_isbtw+1)^0,w,c
  4407  00126E  A4D8               	btfss	status,2,c
  4408  001270  EF3C  F009         	goto	u5441
  4409  001274  EF3E  F009         	goto	u5440
  4410  001278                     u5441:
  4411  001278  EF43  F009         	goto	l4918
  4412  00127C                     u5440:
  4413  00127C                     
  4414                           ;color.c: 217:     {out = 1;}
  4415  00127C  0E00               	movlw	0
  4416  00127E  0100               	movlb	0	; () banked
  4417  001280  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4418  001282  0E01               	movlw	1
  4419  001284  6F60               	movwf	determine_color_new@out& (0+255),b
  4420  001286                     l4918:
  4421                           
  4422                           ;color.c: 220:     if (isbtw(RedRatio,0.400,0.479)==1 && isbtw(GreenRatio,0.305,0.340)==
      +                          1 && isbtw(BlueRatio,0.305,0.345)==1)
  4423  001286  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4424  00128A  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4425  00128E  6A07               	clrf	(___xxtofl@val+2)^0,c
  4426  001290  6A08               	clrf	(___xxtofl@val+3)^0,c
  4427  001292  0E00               	movlw	0
  4428  001294  ECAC  F015         	call	___xxtofl
  4429  001298  C005  F013         	movff	?___xxtofl,isbtw@num
  4430  00129C  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4431  0012A0  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4432  0012A4  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4433  0012A8  0ECD               	movlw	205
  4434  0012AA  6E17               	movwf	isbtw@low^0,c
  4435  0012AC  0ECC               	movlw	204
  4436  0012AE  6E18               	movwf	(isbtw@low+1)^0,c
  4437  0012B0  0ECC               	movlw	204
  4438  0012B2  6E19               	movwf	(isbtw@low+2)^0,c
  4439  0012B4  0E3E               	movlw	62
  4440  0012B6  6E1A               	movwf	(isbtw@low+3)^0,c
  4441  0012B8  0E7D               	movlw	125
  4442  0012BA  6E1B               	movwf	isbtw@high^0,c
  4443  0012BC  0E3F               	movlw	63
  4444  0012BE  6E1C               	movwf	(isbtw@high+1)^0,c
  4445  0012C0  0EF5               	movlw	245
  4446  0012C2  6E1D               	movwf	(isbtw@high+2)^0,c
  4447  0012C4  0E3E               	movlw	62
  4448  0012C6  6E1E               	movwf	(isbtw@high+3)^0,c
  4449  0012C8  ECC9  F019         	call	_isbtw	;wreg free
  4450  0012CC  0413               	decf	?_isbtw^0,w,c
  4451  0012CE  1014               	iorwf	(?_isbtw+1)^0,w,c
  4452  0012D0  A4D8               	btfss	status,2,c
  4453  0012D2  EF6D  F009         	goto	u5451
  4454  0012D6  EF6F  F009         	goto	u5450
  4455  0012DA                     u5451:
  4456  0012DA  EFCC  F009         	goto	l4926
  4457  0012DE                     u5450:
  4458  0012DE  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4459  0012E2  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4460  0012E6  6A07               	clrf	(___xxtofl@val+2)^0,c
  4461  0012E8  6A08               	clrf	(___xxtofl@val+3)^0,c
  4462  0012EA  0E00               	movlw	0
  4463  0012EC  ECAC  F015         	call	___xxtofl
  4464  0012F0  C005  F013         	movff	?___xxtofl,isbtw@num
  4465  0012F4  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4466  0012F8  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4467  0012FC  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4468  001300  0EF6               	movlw	246
  4469  001302  6E17               	movwf	isbtw@low^0,c
  4470  001304  0E28               	movlw	40
  4471  001306  6E18               	movwf	(isbtw@low+1)^0,c
  4472  001308  0E9C               	movlw	156
  4473  00130A  6E19               	movwf	(isbtw@low+2)^0,c
  4474  00130C  0E3E               	movlw	62
  4475  00130E  6E1A               	movwf	(isbtw@low+3)^0,c
  4476  001310  0E7B               	movlw	123
  4477  001312  6E1B               	movwf	isbtw@high^0,c
  4478  001314  0E14               	movlw	20
  4479  001316  6E1C               	movwf	(isbtw@high+1)^0,c
  4480  001318  0EAE               	movlw	174
  4481  00131A  6E1D               	movwf	(isbtw@high+2)^0,c
  4482  00131C  0E3E               	movlw	62
  4483  00131E  6E1E               	movwf	(isbtw@high+3)^0,c
  4484  001320  ECC9  F019         	call	_isbtw	;wreg free
  4485  001324  0413               	decf	?_isbtw^0,w,c
  4486  001326  1014               	iorwf	(?_isbtw+1)^0,w,c
  4487  001328  A4D8               	btfss	status,2,c
  4488  00132A  EF99  F009         	goto	u5461
  4489  00132E  EF9B  F009         	goto	u5460
  4490  001332                     u5461:
  4491  001332  EFCC  F009         	goto	l4926
  4492  001336                     u5460:
  4493  001336  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4494  00133A  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4495  00133E  6A07               	clrf	(___xxtofl@val+2)^0,c
  4496  001340  6A08               	clrf	(___xxtofl@val+3)^0,c
  4497  001342  0E00               	movlw	0
  4498  001344  ECAC  F015         	call	___xxtofl
  4499  001348  C005  F013         	movff	?___xxtofl,isbtw@num
  4500  00134C  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4501  001350  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4502  001354  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4503  001358  0EF6               	movlw	246
  4504  00135A  6E17               	movwf	isbtw@low^0,c
  4505  00135C  0E28               	movlw	40
  4506  00135E  6E18               	movwf	(isbtw@low+1)^0,c
  4507  001360  0E9C               	movlw	156
  4508  001362  6E19               	movwf	(isbtw@low+2)^0,c
  4509  001364  0E3E               	movlw	62
  4510  001366  6E1A               	movwf	(isbtw@low+3)^0,c
  4511  001368  0ED7               	movlw	215
  4512  00136A  6E1B               	movwf	isbtw@high^0,c
  4513  00136C  0EA3               	movlw	163
  4514  00136E  6E1C               	movwf	(isbtw@high+1)^0,c
  4515  001370  0EB0               	movlw	176
  4516  001372  6E1D               	movwf	(isbtw@high+2)^0,c
  4517  001374  0E3E               	movlw	62
  4518  001376  6E1E               	movwf	(isbtw@high+3)^0,c
  4519  001378  ECC9  F019         	call	_isbtw	;wreg free
  4520  00137C  0413               	decf	?_isbtw^0,w,c
  4521  00137E  1014               	iorwf	(?_isbtw+1)^0,w,c
  4522  001380  A4D8               	btfss	status,2,c
  4523  001382  EFC5  F009         	goto	u5471
  4524  001386  EFC7  F009         	goto	u5470
  4525  00138A                     u5471:
  4526  00138A  EFCC  F009         	goto	l4926
  4527  00138E                     u5470:
  4528  00138E                     
  4529                           ;color.c: 221:     {out = 2;}
  4530  00138E  0E00               	movlw	0
  4531  001390  0100               	movlb	0	; () banked
  4532  001392  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4533  001394  0E02               	movlw	2
  4534  001396  6F60               	movwf	determine_color_new@out& (0+255),b
  4535  001398                     l4926:
  4536                           
  4537                           ;color.c: 224:     if (isbtw(RedRatio,0.645,0.680)==1 && isbtw(GreenRatio,0.250,0.275)==
      +                          1 && isbtw(BlueRatio,0.175,0.190)==1)
  4538  001398  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4539  00139C  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4540  0013A0  6A07               	clrf	(___xxtofl@val+2)^0,c
  4541  0013A2  6A08               	clrf	(___xxtofl@val+3)^0,c
  4542  0013A4  0E00               	movlw	0
  4543  0013A6  ECAC  F015         	call	___xxtofl
  4544  0013AA  C005  F013         	movff	?___xxtofl,isbtw@num
  4545  0013AE  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4546  0013B2  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4547  0013B6  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4548  0013BA  0EB8               	movlw	184
  4549  0013BC  6E17               	movwf	isbtw@low^0,c
  4550  0013BE  0E1E               	movlw	30
  4551  0013C0  6E18               	movwf	(isbtw@low+1)^0,c
  4552  0013C2  0E25               	movlw	37
  4553  0013C4  6E19               	movwf	(isbtw@low+2)^0,c
  4554  0013C6  0E3F               	movlw	63
  4555  0013C8  6E1A               	movwf	(isbtw@low+3)^0,c
  4556  0013CA  0E7B               	movlw	123
  4557  0013CC  6E1B               	movwf	isbtw@high^0,c
  4558  0013CE  0E14               	movlw	20
  4559  0013D0  6E1C               	movwf	(isbtw@high+1)^0,c
  4560  0013D2  0E2E               	movlw	46
  4561  0013D4  6E1D               	movwf	(isbtw@high+2)^0,c
  4562  0013D6  0E3F               	movlw	63
  4563  0013D8  6E1E               	movwf	(isbtw@high+3)^0,c
  4564  0013DA  ECC9  F019         	call	_isbtw	;wreg free
  4565  0013DE  0413               	decf	?_isbtw^0,w,c
  4566  0013E0  1014               	iorwf	(?_isbtw+1)^0,w,c
  4567  0013E2  A4D8               	btfss	status,2,c
  4568  0013E4  EFF6  F009         	goto	u5481
  4569  0013E8  EFF8  F009         	goto	u5480
  4570  0013EC                     u5481:
  4571  0013EC  EF55  F00A         	goto	l4934
  4572  0013F0                     u5480:
  4573  0013F0  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4574  0013F4  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4575  0013F8  6A07               	clrf	(___xxtofl@val+2)^0,c
  4576  0013FA  6A08               	clrf	(___xxtofl@val+3)^0,c
  4577  0013FC  0E00               	movlw	0
  4578  0013FE  ECAC  F015         	call	___xxtofl
  4579  001402  C005  F013         	movff	?___xxtofl,isbtw@num
  4580  001406  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4581  00140A  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4582  00140E  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4583  001412  0E00               	movlw	0
  4584  001414  6E17               	movwf	isbtw@low^0,c
  4585  001416  0E00               	movlw	0
  4586  001418  6E18               	movwf	(isbtw@low+1)^0,c
  4587  00141A  0E80               	movlw	128
  4588  00141C  6E19               	movwf	(isbtw@low+2)^0,c
  4589  00141E  0E3E               	movlw	62
  4590  001420  6E1A               	movwf	(isbtw@low+3)^0,c
  4591  001422  0ECD               	movlw	205
  4592  001424  6E1B               	movwf	isbtw@high^0,c
  4593  001426  0ECC               	movlw	204
  4594  001428  6E1C               	movwf	(isbtw@high+1)^0,c
  4595  00142A  0E8C               	movlw	140
  4596  00142C  6E1D               	movwf	(isbtw@high+2)^0,c
  4597  00142E  0E3E               	movlw	62
  4598  001430  6E1E               	movwf	(isbtw@high+3)^0,c
  4599  001432  ECC9  F019         	call	_isbtw	;wreg free
  4600  001436  0413               	decf	?_isbtw^0,w,c
  4601  001438  1014               	iorwf	(?_isbtw+1)^0,w,c
  4602  00143A  A4D8               	btfss	status,2,c
  4603  00143C  EF22  F00A         	goto	u5491
  4604  001440  EF24  F00A         	goto	u5490
  4605  001444                     u5491:
  4606  001444  EF55  F00A         	goto	l4934
  4607  001448                     u5490:
  4608  001448  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4609  00144C  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4610  001450  6A07               	clrf	(___xxtofl@val+2)^0,c
  4611  001452  6A08               	clrf	(___xxtofl@val+3)^0,c
  4612  001454  0E00               	movlw	0
  4613  001456  ECAC  F015         	call	___xxtofl
  4614  00145A  C005  F013         	movff	?___xxtofl,isbtw@num
  4615  00145E  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4616  001462  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4617  001466  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4618  00146A  0E33               	movlw	51
  4619  00146C  6E17               	movwf	isbtw@low^0,c
  4620  00146E  0E33               	movlw	51
  4621  001470  6E18               	movwf	(isbtw@low+1)^0,c
  4622  001472  0E33               	movlw	51
  4623  001474  6E19               	movwf	(isbtw@low+2)^0,c
  4624  001476  0E3E               	movlw	62
  4625  001478  6E1A               	movwf	(isbtw@low+3)^0,c
  4626  00147A  0E5C               	movlw	92
  4627  00147C  6E1B               	movwf	isbtw@high^0,c
  4628  00147E  0E8F               	movlw	143
  4629  001480  6E1C               	movwf	(isbtw@high+1)^0,c
  4630  001482  0E42               	movlw	66
  4631  001484  6E1D               	movwf	(isbtw@high+2)^0,c
  4632  001486  0E3E               	movlw	62
  4633  001488  6E1E               	movwf	(isbtw@high+3)^0,c
  4634  00148A  ECC9  F019         	call	_isbtw	;wreg free
  4635  00148E  0413               	decf	?_isbtw^0,w,c
  4636  001490  1014               	iorwf	(?_isbtw+1)^0,w,c
  4637  001492  A4D8               	btfss	status,2,c
  4638  001494  EF4E  F00A         	goto	u5501
  4639  001498  EF50  F00A         	goto	u5500
  4640  00149C                     u5501:
  4641  00149C  EF55  F00A         	goto	l4934
  4642  0014A0                     u5500:
  4643  0014A0                     
  4644                           ;color.c: 225:     {out = 3;}
  4645  0014A0  0E00               	movlw	0
  4646  0014A2  0100               	movlb	0	; () banked
  4647  0014A4  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4648  0014A6  0E03               	movlw	3
  4649  0014A8  6F60               	movwf	determine_color_new@out& (0+255),b
  4650  0014AA                     l4934:
  4651                           
  4652                           ;color.c: 228:     if (isbtw(RedRatio,0.650,0.679)==1 && isbtw(GreenRatio,0.220,0.235)==
      +                          1 && isbtw(BlueRatio,0.215,0.235)==1)
  4653  0014AA  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4654  0014AE  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4655  0014B2  6A07               	clrf	(___xxtofl@val+2)^0,c
  4656  0014B4  6A08               	clrf	(___xxtofl@val+3)^0,c
  4657  0014B6  0E00               	movlw	0
  4658  0014B8  ECAC  F015         	call	___xxtofl
  4659  0014BC  C005  F013         	movff	?___xxtofl,isbtw@num
  4660  0014C0  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4661  0014C4  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4662  0014C8  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4663  0014CC  0E66               	movlw	102
  4664  0014CE  6E17               	movwf	isbtw@low^0,c
  4665  0014D0  0E66               	movlw	102
  4666  0014D2  6E18               	movwf	(isbtw@low+1)^0,c
  4667  0014D4  0E26               	movlw	38
  4668  0014D6  6E19               	movwf	(isbtw@low+2)^0,c
  4669  0014D8  0E3F               	movlw	63
  4670  0014DA  6E1A               	movwf	(isbtw@low+3)^0,c
  4671  0014DC  0EF2               	movlw	242
  4672  0014DE  6E1B               	movwf	isbtw@high^0,c
  4673  0014E0  0ED2               	movlw	210
  4674  0014E2  6E1C               	movwf	(isbtw@high+1)^0,c
  4675  0014E4  0E2D               	movlw	45
  4676  0014E6  6E1D               	movwf	(isbtw@high+2)^0,c
  4677  0014E8  0E3F               	movlw	63
  4678  0014EA  6E1E               	movwf	(isbtw@high+3)^0,c
  4679  0014EC  ECC9  F019         	call	_isbtw	;wreg free
  4680  0014F0  0413               	decf	?_isbtw^0,w,c
  4681  0014F2  1014               	iorwf	(?_isbtw+1)^0,w,c
  4682  0014F4  A4D8               	btfss	status,2,c
  4683  0014F6  EF7F  F00A         	goto	u5511
  4684  0014FA  EF81  F00A         	goto	u5510
  4685  0014FE                     u5511:
  4686  0014FE  EFDE  F00A         	goto	l4942
  4687  001502                     u5510:
  4688  001502  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4689  001506  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4690  00150A  6A07               	clrf	(___xxtofl@val+2)^0,c
  4691  00150C  6A08               	clrf	(___xxtofl@val+3)^0,c
  4692  00150E  0E00               	movlw	0
  4693  001510  ECAC  F015         	call	___xxtofl
  4694  001514  C005  F013         	movff	?___xxtofl,isbtw@num
  4695  001518  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4696  00151C  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4697  001520  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4698  001524  0EAE               	movlw	174
  4699  001526  6E17               	movwf	isbtw@low^0,c
  4700  001528  0E47               	movlw	71
  4701  00152A  6E18               	movwf	(isbtw@low+1)^0,c
  4702  00152C  0E61               	movlw	97
  4703  00152E  6E19               	movwf	(isbtw@low+2)^0,c
  4704  001530  0E3E               	movlw	62
  4705  001532  6E1A               	movwf	(isbtw@low+3)^0,c
  4706  001534  0ED7               	movlw	215
  4707  001536  6E1B               	movwf	isbtw@high^0,c
  4708  001538  0EA3               	movlw	163
  4709  00153A  6E1C               	movwf	(isbtw@high+1)^0,c
  4710  00153C  0E70               	movlw	112
  4711  00153E  6E1D               	movwf	(isbtw@high+2)^0,c
  4712  001540  0E3E               	movlw	62
  4713  001542  6E1E               	movwf	(isbtw@high+3)^0,c
  4714  001544  ECC9  F019         	call	_isbtw	;wreg free
  4715  001548  0413               	decf	?_isbtw^0,w,c
  4716  00154A  1014               	iorwf	(?_isbtw+1)^0,w,c
  4717  00154C  A4D8               	btfss	status,2,c
  4718  00154E  EFAB  F00A         	goto	u5521
  4719  001552  EFAD  F00A         	goto	u5520
  4720  001556                     u5521:
  4721  001556  EFDE  F00A         	goto	l4942
  4722  00155A                     u5520:
  4723  00155A  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4724  00155E  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4725  001562  6A07               	clrf	(___xxtofl@val+2)^0,c
  4726  001564  6A08               	clrf	(___xxtofl@val+3)^0,c
  4727  001566  0E00               	movlw	0
  4728  001568  ECAC  F015         	call	___xxtofl
  4729  00156C  C005  F013         	movff	?___xxtofl,isbtw@num
  4730  001570  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4731  001574  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4732  001578  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4733  00157C  0EF6               	movlw	246
  4734  00157E  6E17               	movwf	isbtw@low^0,c
  4735  001580  0E28               	movlw	40
  4736  001582  6E18               	movwf	(isbtw@low+1)^0,c
  4737  001584  0E5C               	movlw	92
  4738  001586  6E19               	movwf	(isbtw@low+2)^0,c
  4739  001588  0E3E               	movlw	62
  4740  00158A  6E1A               	movwf	(isbtw@low+3)^0,c
  4741  00158C  0ED7               	movlw	215
  4742  00158E  6E1B               	movwf	isbtw@high^0,c
  4743  001590  0EA3               	movlw	163
  4744  001592  6E1C               	movwf	(isbtw@high+1)^0,c
  4745  001594  0E70               	movlw	112
  4746  001596  6E1D               	movwf	(isbtw@high+2)^0,c
  4747  001598  0E3E               	movlw	62
  4748  00159A  6E1E               	movwf	(isbtw@high+3)^0,c
  4749  00159C  ECC9  F019         	call	_isbtw	;wreg free
  4750  0015A0  0413               	decf	?_isbtw^0,w,c
  4751  0015A2  1014               	iorwf	(?_isbtw+1)^0,w,c
  4752  0015A4  A4D8               	btfss	status,2,c
  4753  0015A6  EFD7  F00A         	goto	u5531
  4754  0015AA  EFD9  F00A         	goto	u5530
  4755  0015AE                     u5531:
  4756  0015AE  EFDE  F00A         	goto	l4942
  4757  0015B2                     u5530:
  4758  0015B2                     
  4759                           ;color.c: 229:     {out = 4;}
  4760  0015B2  0E00               	movlw	0
  4761  0015B4  0100               	movlb	0	; () banked
  4762  0015B6  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4763  0015B8  0E04               	movlw	4
  4764  0015BA  6F60               	movwf	determine_color_new@out& (0+255),b
  4765  0015BC                     l4942:
  4766                           
  4767                           ;color.c: 232:     if (isbtw(RedRatio,0.795,0.820)==1 && isbtw(GreenRatio,0.165,0.183)==
      +                          1 && isbtw(BlueRatio,0.175,0.191)==1)
  4768  0015BC  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4769  0015C0  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4770  0015C4  6A07               	clrf	(___xxtofl@val+2)^0,c
  4771  0015C6  6A08               	clrf	(___xxtofl@val+3)^0,c
  4772  0015C8  0E00               	movlw	0
  4773  0015CA  ECAC  F015         	call	___xxtofl
  4774  0015CE  C005  F013         	movff	?___xxtofl,isbtw@num
  4775  0015D2  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4776  0015D6  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4777  0015DA  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4778  0015DE  0E1F               	movlw	31
  4779  0015E0  6E17               	movwf	isbtw@low^0,c
  4780  0015E2  0E85               	movlw	133
  4781  0015E4  6E18               	movwf	(isbtw@low+1)^0,c
  4782  0015E6  0E4B               	movlw	75
  4783  0015E8  6E19               	movwf	(isbtw@low+2)^0,c
  4784  0015EA  0E3F               	movlw	63
  4785  0015EC  6E1A               	movwf	(isbtw@low+3)^0,c
  4786  0015EE  0E85               	movlw	133
  4787  0015F0  6E1B               	movwf	isbtw@high^0,c
  4788  0015F2  0EEB               	movlw	235
  4789  0015F4  6E1C               	movwf	(isbtw@high+1)^0,c
  4790  0015F6  0E51               	movlw	81
  4791  0015F8  6E1D               	movwf	(isbtw@high+2)^0,c
  4792  0015FA  0E3F               	movlw	63
  4793  0015FC  6E1E               	movwf	(isbtw@high+3)^0,c
  4794  0015FE  ECC9  F019         	call	_isbtw	;wreg free
  4795  001602  0413               	decf	?_isbtw^0,w,c
  4796  001604  1014               	iorwf	(?_isbtw+1)^0,w,c
  4797  001606  A4D8               	btfss	status,2,c
  4798  001608  EF08  F00B         	goto	u5541
  4799  00160C  EF0A  F00B         	goto	u5540
  4800  001610                     u5541:
  4801  001610  EF67  F00B         	goto	l4950
  4802  001614                     u5540:
  4803  001614  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4804  001618  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4805  00161C  6A07               	clrf	(___xxtofl@val+2)^0,c
  4806  00161E  6A08               	clrf	(___xxtofl@val+3)^0,c
  4807  001620  0E00               	movlw	0
  4808  001622  ECAC  F015         	call	___xxtofl
  4809  001626  C005  F013         	movff	?___xxtofl,isbtw@num
  4810  00162A  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4811  00162E  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4812  001632  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4813  001636  0EC3               	movlw	195
  4814  001638  6E17               	movwf	isbtw@low^0,c
  4815  00163A  0EF5               	movlw	245
  4816  00163C  6E18               	movwf	(isbtw@low+1)^0,c
  4817  00163E  0E28               	movlw	40
  4818  001640  6E19               	movwf	(isbtw@low+2)^0,c
  4819  001642  0E3E               	movlw	62
  4820  001644  6E1A               	movwf	(isbtw@low+3)^0,c
  4821  001646  0E5A               	movlw	90
  4822  001648  6E1B               	movwf	isbtw@high^0,c
  4823  00164A  0E64               	movlw	100
  4824  00164C  6E1C               	movwf	(isbtw@high+1)^0,c
  4825  00164E  0E3B               	movlw	59
  4826  001650  6E1D               	movwf	(isbtw@high+2)^0,c
  4827  001652  0E3E               	movlw	62
  4828  001654  6E1E               	movwf	(isbtw@high+3)^0,c
  4829  001656  ECC9  F019         	call	_isbtw	;wreg free
  4830  00165A  0413               	decf	?_isbtw^0,w,c
  4831  00165C  1014               	iorwf	(?_isbtw+1)^0,w,c
  4832  00165E  A4D8               	btfss	status,2,c
  4833  001660  EF34  F00B         	goto	u5551
  4834  001664  EF36  F00B         	goto	u5550
  4835  001668                     u5551:
  4836  001668  EF67  F00B         	goto	l4950
  4837  00166C                     u5550:
  4838  00166C  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4839  001670  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4840  001674  6A07               	clrf	(___xxtofl@val+2)^0,c
  4841  001676  6A08               	clrf	(___xxtofl@val+3)^0,c
  4842  001678  0E00               	movlw	0
  4843  00167A  ECAC  F015         	call	___xxtofl
  4844  00167E  C005  F013         	movff	?___xxtofl,isbtw@num
  4845  001682  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4846  001686  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4847  00168A  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4848  00168E  0E33               	movlw	51
  4849  001690  6E17               	movwf	isbtw@low^0,c
  4850  001692  0E33               	movlw	51
  4851  001694  6E18               	movwf	(isbtw@low+1)^0,c
  4852  001696  0E33               	movlw	51
  4853  001698  6E19               	movwf	(isbtw@low+2)^0,c
  4854  00169A  0E3E               	movlw	62
  4855  00169C  6E1A               	movwf	(isbtw@low+3)^0,c
  4856  00169E  0E81               	movlw	129
  4857  0016A0  6E1B               	movwf	isbtw@high^0,c
  4858  0016A2  0E95               	movlw	149
  4859  0016A4  6E1C               	movwf	(isbtw@high+1)^0,c
  4860  0016A6  0E43               	movlw	67
  4861  0016A8  6E1D               	movwf	(isbtw@high+2)^0,c
  4862  0016AA  0E3E               	movlw	62
  4863  0016AC  6E1E               	movwf	(isbtw@high+3)^0,c
  4864  0016AE  ECC9  F019         	call	_isbtw	;wreg free
  4865  0016B2  0413               	decf	?_isbtw^0,w,c
  4866  0016B4  1014               	iorwf	(?_isbtw+1)^0,w,c
  4867  0016B6  A4D8               	btfss	status,2,c
  4868  0016B8  EF60  F00B         	goto	u5561
  4869  0016BC  EF62  F00B         	goto	u5560
  4870  0016C0                     u5561:
  4871  0016C0  EF67  F00B         	goto	l4950
  4872  0016C4                     u5560:
  4873  0016C4                     
  4874                           ;color.c: 233:     {out = 5;}
  4875  0016C4  0E00               	movlw	0
  4876  0016C6  0100               	movlb	0	; () banked
  4877  0016C8  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4878  0016CA  0E05               	movlw	5
  4879  0016CC  6F60               	movwf	determine_color_new@out& (0+255),b
  4880  0016CE                     l4950:
  4881                           
  4882                           ;color.c: 236:     if (isbtw(RedRatio,0.500,0.550)==1 && isbtw(GreenRatio,0.285,0.310)==
      +                          1 && isbtw(BlueRatio,0.259,0.280)==1)
  4883  0016CE  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4884  0016D2  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4885  0016D6  6A07               	clrf	(___xxtofl@val+2)^0,c
  4886  0016D8  6A08               	clrf	(___xxtofl@val+3)^0,c
  4887  0016DA  0E00               	movlw	0
  4888  0016DC  ECAC  F015         	call	___xxtofl
  4889  0016E0  C005  F013         	movff	?___xxtofl,isbtw@num
  4890  0016E4  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4891  0016E8  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4892  0016EC  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4893  0016F0  0E00               	movlw	0
  4894  0016F2  6E17               	movwf	isbtw@low^0,c
  4895  0016F4  0E00               	movlw	0
  4896  0016F6  6E18               	movwf	(isbtw@low+1)^0,c
  4897  0016F8  0E00               	movlw	0
  4898  0016FA  6E19               	movwf	(isbtw@low+2)^0,c
  4899  0016FC  0E3F               	movlw	63
  4900  0016FE  6E1A               	movwf	(isbtw@low+3)^0,c
  4901  001700  0ECD               	movlw	205
  4902  001702  6E1B               	movwf	isbtw@high^0,c
  4903  001704  0ECC               	movlw	204
  4904  001706  6E1C               	movwf	(isbtw@high+1)^0,c
  4905  001708  0E0C               	movlw	12
  4906  00170A  6E1D               	movwf	(isbtw@high+2)^0,c
  4907  00170C  0E3F               	movlw	63
  4908  00170E  6E1E               	movwf	(isbtw@high+3)^0,c
  4909  001710  ECC9  F019         	call	_isbtw	;wreg free
  4910  001714  0413               	decf	?_isbtw^0,w,c
  4911  001716  1014               	iorwf	(?_isbtw+1)^0,w,c
  4912  001718  A4D8               	btfss	status,2,c
  4913  00171A  EF91  F00B         	goto	u5571
  4914  00171E  EF93  F00B         	goto	u5570
  4915  001722                     u5571:
  4916  001722  EFF0  F00B         	goto	l4958
  4917  001726                     u5570:
  4918  001726  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4919  00172A  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4920  00172E  6A07               	clrf	(___xxtofl@val+2)^0,c
  4921  001730  6A08               	clrf	(___xxtofl@val+3)^0,c
  4922  001732  0E00               	movlw	0
  4923  001734  ECAC  F015         	call	___xxtofl
  4924  001738  C005  F013         	movff	?___xxtofl,isbtw@num
  4925  00173C  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4926  001740  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4927  001744  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4928  001748  0E85               	movlw	133
  4929  00174A  6E17               	movwf	isbtw@low^0,c
  4930  00174C  0EEB               	movlw	235
  4931  00174E  6E18               	movwf	(isbtw@low+1)^0,c
  4932  001750  0E91               	movlw	145
  4933  001752  6E19               	movwf	(isbtw@low+2)^0,c
  4934  001754  0E3E               	movlw	62
  4935  001756  6E1A               	movwf	(isbtw@low+3)^0,c
  4936  001758  0E52               	movlw	82
  4937  00175A  6E1B               	movwf	isbtw@high^0,c
  4938  00175C  0EB8               	movlw	184
  4939  00175E  6E1C               	movwf	(isbtw@high+1)^0,c
  4940  001760  0E9E               	movlw	158
  4941  001762  6E1D               	movwf	(isbtw@high+2)^0,c
  4942  001764  0E3E               	movlw	62
  4943  001766  6E1E               	movwf	(isbtw@high+3)^0,c
  4944  001768  ECC9  F019         	call	_isbtw	;wreg free
  4945  00176C  0413               	decf	?_isbtw^0,w,c
  4946  00176E  1014               	iorwf	(?_isbtw+1)^0,w,c
  4947  001770  A4D8               	btfss	status,2,c
  4948  001772  EFBD  F00B         	goto	u5581
  4949  001776  EFBF  F00B         	goto	u5580
  4950  00177A                     u5581:
  4951  00177A  EFF0  F00B         	goto	l4958
  4952  00177E                     u5580:
  4953  00177E  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4954  001782  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4955  001786  6A07               	clrf	(___xxtofl@val+2)^0,c
  4956  001788  6A08               	clrf	(___xxtofl@val+3)^0,c
  4957  00178A  0E00               	movlw	0
  4958  00178C  ECAC  F015         	call	___xxtofl
  4959  001790  C005  F013         	movff	?___xxtofl,isbtw@num
  4960  001794  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  4961  001798  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  4962  00179C  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  4963  0017A0  0EA6               	movlw	166
  4964  0017A2  6E17               	movwf	isbtw@low^0,c
  4965  0017A4  0E9B               	movlw	155
  4966  0017A6  6E18               	movwf	(isbtw@low+1)^0,c
  4967  0017A8  0E84               	movlw	132
  4968  0017AA  6E19               	movwf	(isbtw@low+2)^0,c
  4969  0017AC  0E3E               	movlw	62
  4970  0017AE  6E1A               	movwf	(isbtw@low+3)^0,c
  4971  0017B0  0E29               	movlw	41
  4972  0017B2  6E1B               	movwf	isbtw@high^0,c
  4973  0017B4  0E5C               	movlw	92
  4974  0017B6  6E1C               	movwf	(isbtw@high+1)^0,c
  4975  0017B8  0E8F               	movlw	143
  4976  0017BA  6E1D               	movwf	(isbtw@high+2)^0,c
  4977  0017BC  0E3E               	movlw	62
  4978  0017BE  6E1E               	movwf	(isbtw@high+3)^0,c
  4979  0017C0  ECC9  F019         	call	_isbtw	;wreg free
  4980  0017C4  0413               	decf	?_isbtw^0,w,c
  4981  0017C6  1014               	iorwf	(?_isbtw+1)^0,w,c
  4982  0017C8  A4D8               	btfss	status,2,c
  4983  0017CA  EFE9  F00B         	goto	u5591
  4984  0017CE  EFEB  F00B         	goto	u5590
  4985  0017D2                     u5591:
  4986  0017D2  EFF0  F00B         	goto	l4958
  4987  0017D6                     u5590:
  4988  0017D6                     
  4989                           ;color.c: 237:     {out = 6;}
  4990  0017D6  0E00               	movlw	0
  4991  0017D8  0100               	movlb	0	; () banked
  4992  0017DA  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  4993  0017DC  0E06               	movlw	6
  4994  0017DE  6F60               	movwf	determine_color_new@out& (0+255),b
  4995  0017E0                     l4958:
  4996                           
  4997                           ;color.c: 240:     if (isbtw(RedRatio,0.565,0.605)==1 && isbtw(GreenRatio,0.259,0.285)==
      +                          1 && isbtw(BlueRatio,0.238,0.255)==1)
  4998  0017E0  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4999  0017E4  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  5000  0017E8  6A07               	clrf	(___xxtofl@val+2)^0,c
  5001  0017EA  6A08               	clrf	(___xxtofl@val+3)^0,c
  5002  0017EC  0E00               	movlw	0
  5003  0017EE  ECAC  F015         	call	___xxtofl
  5004  0017F2  C005  F013         	movff	?___xxtofl,isbtw@num
  5005  0017F6  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  5006  0017FA  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  5007  0017FE  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  5008  001802  0ED7               	movlw	215
  5009  001804  6E17               	movwf	isbtw@low^0,c
  5010  001806  0EA3               	movlw	163
  5011  001808  6E18               	movwf	(isbtw@low+1)^0,c
  5012  00180A  0E10               	movlw	16
  5013  00180C  6E19               	movwf	(isbtw@low+2)^0,c
  5014  00180E  0E3F               	movlw	63
  5015  001810  6E1A               	movwf	(isbtw@low+3)^0,c
  5016  001812  0E48               	movlw	72
  5017  001814  6E1B               	movwf	isbtw@high^0,c
  5018  001816  0EE1               	movlw	225
  5019  001818  6E1C               	movwf	(isbtw@high+1)^0,c
  5020  00181A  0E1A               	movlw	26
  5021  00181C  6E1D               	movwf	(isbtw@high+2)^0,c
  5022  00181E  0E3F               	movlw	63
  5023  001820  6E1E               	movwf	(isbtw@high+3)^0,c
  5024  001822  ECC9  F019         	call	_isbtw	;wreg free
  5025  001826  0413               	decf	?_isbtw^0,w,c
  5026  001828  1014               	iorwf	(?_isbtw+1)^0,w,c
  5027  00182A  A4D8               	btfss	status,2,c
  5028  00182C  EF1A  F00C         	goto	u5601
  5029  001830  EF1C  F00C         	goto	u5600
  5030  001834                     u5601:
  5031  001834  EF79  F00C         	goto	l4966
  5032  001838                     u5600:
  5033  001838  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  5034  00183C  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  5035  001840  6A07               	clrf	(___xxtofl@val+2)^0,c
  5036  001842  6A08               	clrf	(___xxtofl@val+3)^0,c
  5037  001844  0E00               	movlw	0
  5038  001846  ECAC  F015         	call	___xxtofl
  5039  00184A  C005  F013         	movff	?___xxtofl,isbtw@num
  5040  00184E  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  5041  001852  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  5042  001856  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  5043  00185A  0EA6               	movlw	166
  5044  00185C  6E17               	movwf	isbtw@low^0,c
  5045  00185E  0E9B               	movlw	155
  5046  001860  6E18               	movwf	(isbtw@low+1)^0,c
  5047  001862  0E84               	movlw	132
  5048  001864  6E19               	movwf	(isbtw@low+2)^0,c
  5049  001866  0E3E               	movlw	62
  5050  001868  6E1A               	movwf	(isbtw@low+3)^0,c
  5051  00186A  0E85               	movlw	133
  5052  00186C  6E1B               	movwf	isbtw@high^0,c
  5053  00186E  0EEB               	movlw	235
  5054  001870  6E1C               	movwf	(isbtw@high+1)^0,c
  5055  001872  0E91               	movlw	145
  5056  001874  6E1D               	movwf	(isbtw@high+2)^0,c
  5057  001876  0E3E               	movlw	62
  5058  001878  6E1E               	movwf	(isbtw@high+3)^0,c
  5059  00187A  ECC9  F019         	call	_isbtw	;wreg free
  5060  00187E  0413               	decf	?_isbtw^0,w,c
  5061  001880  1014               	iorwf	(?_isbtw+1)^0,w,c
  5062  001882  A4D8               	btfss	status,2,c
  5063  001884  EF46  F00C         	goto	u5611
  5064  001888  EF48  F00C         	goto	u5610
  5065  00188C                     u5611:
  5066  00188C  EF79  F00C         	goto	l4966
  5067  001890                     u5610:
  5068  001890  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  5069  001894  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  5070  001898  6A07               	clrf	(___xxtofl@val+2)^0,c
  5071  00189A  6A08               	clrf	(___xxtofl@val+3)^0,c
  5072  00189C  0E00               	movlw	0
  5073  00189E  ECAC  F015         	call	___xxtofl
  5074  0018A2  C005  F013         	movff	?___xxtofl,isbtw@num
  5075  0018A6  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  5076  0018AA  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  5077  0018AE  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  5078  0018B2  0E46               	movlw	70
  5079  0018B4  6E17               	movwf	isbtw@low^0,c
  5080  0018B6  0EB6               	movlw	182
  5081  0018B8  6E18               	movwf	(isbtw@low+1)^0,c
  5082  0018BA  0E73               	movlw	115
  5083  0018BC  6E19               	movwf	(isbtw@low+2)^0,c
  5084  0018BE  0E3E               	movlw	62
  5085  0018C0  6E1A               	movwf	(isbtw@low+3)^0,c
  5086  0018C2  0E5C               	movlw	92
  5087  0018C4  6E1B               	movwf	isbtw@high^0,c
  5088  0018C6  0E8F               	movlw	143
  5089  0018C8  6E1C               	movwf	(isbtw@high+1)^0,c
  5090  0018CA  0E82               	movlw	130
  5091  0018CC  6E1D               	movwf	(isbtw@high+2)^0,c
  5092  0018CE  0E3E               	movlw	62
  5093  0018D0  6E1E               	movwf	(isbtw@high+3)^0,c
  5094  0018D2  ECC9  F019         	call	_isbtw	;wreg free
  5095  0018D6  0413               	decf	?_isbtw^0,w,c
  5096  0018D8  1014               	iorwf	(?_isbtw+1)^0,w,c
  5097  0018DA  A4D8               	btfss	status,2,c
  5098  0018DC  EF72  F00C         	goto	u5621
  5099  0018E0  EF74  F00C         	goto	u5620
  5100  0018E4                     u5621:
  5101  0018E4  EF79  F00C         	goto	l4966
  5102  0018E8                     u5620:
  5103  0018E8                     
  5104                           ;color.c: 241:     {out = 7;}
  5105  0018E8  0E00               	movlw	0
  5106  0018EA  0100               	movlb	0	; () banked
  5107  0018EC  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  5108  0018EE  0E07               	movlw	7
  5109  0018F0  6F60               	movwf	determine_color_new@out& (0+255),b
  5110  0018F2                     l4966:
  5111                           
  5112                           ;color.c: 244:     if (isbtw(RedRatio,0.581,0.606)==1 && isbtw(GreenRatio,0.240,0.276)==
      +                          1 && isbtw(BlueRatio,0.200,0.245)==1)
  5113  0018F2  C062  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  5114  0018F6  C063  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  5115  0018FA  6A07               	clrf	(___xxtofl@val+2)^0,c
  5116  0018FC  6A08               	clrf	(___xxtofl@val+3)^0,c
  5117  0018FE  0E00               	movlw	0
  5118  001900  ECAC  F015         	call	___xxtofl
  5119  001904  C005  F013         	movff	?___xxtofl,isbtw@num
  5120  001908  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  5121  00190C  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  5122  001910  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  5123  001914  0E6A               	movlw	106
  5124  001916  6E17               	movwf	isbtw@low^0,c
  5125  001918  0EBC               	movlw	188
  5126  00191A  6E18               	movwf	(isbtw@low+1)^0,c
  5127  00191C  0E14               	movlw	20
  5128  00191E  6E19               	movwf	(isbtw@low+2)^0,c
  5129  001920  0E3F               	movlw	63
  5130  001922  6E1A               	movwf	(isbtw@low+3)^0,c
  5131  001924  0ED1               	movlw	209
  5132  001926  6E1B               	movwf	isbtw@high^0,c
  5133  001928  0E22               	movlw	34
  5134  00192A  6E1C               	movwf	(isbtw@high+1)^0,c
  5135  00192C  0E1B               	movlw	27
  5136  00192E  6E1D               	movwf	(isbtw@high+2)^0,c
  5137  001930  0E3F               	movlw	63
  5138  001932  6E1E               	movwf	(isbtw@high+3)^0,c
  5139  001934  ECC9  F019         	call	_isbtw	;wreg free
  5140  001938  0413               	decf	?_isbtw^0,w,c
  5141  00193A  1014               	iorwf	(?_isbtw+1)^0,w,c
  5142  00193C  A4D8               	btfss	status,2,c
  5143  00193E  EFA3  F00C         	goto	u5631
  5144  001942  EFA5  F00C         	goto	u5630
  5145  001946                     u5631:
  5146  001946  EF02  F00D         	goto	l4974
  5147  00194A                     u5630:
  5148  00194A  C064  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  5149  00194E  C065  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  5150  001952  6A07               	clrf	(___xxtofl@val+2)^0,c
  5151  001954  6A08               	clrf	(___xxtofl@val+3)^0,c
  5152  001956  0E00               	movlw	0
  5153  001958  ECAC  F015         	call	___xxtofl
  5154  00195C  C005  F013         	movff	?___xxtofl,isbtw@num
  5155  001960  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  5156  001964  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  5157  001968  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  5158  00196C  0E8F               	movlw	143
  5159  00196E  6E17               	movwf	isbtw@low^0,c
  5160  001970  0EC2               	movlw	194
  5161  001972  6E18               	movwf	(isbtw@low+1)^0,c
  5162  001974  0E75               	movlw	117
  5163  001976  6E19               	movwf	(isbtw@low+2)^0,c
  5164  001978  0E3E               	movlw	62
  5165  00197A  6E1A               	movwf	(isbtw@low+3)^0,c
  5166  00197C  0EDF               	movlw	223
  5167  00197E  6E1B               	movwf	isbtw@high^0,c
  5168  001980  0E4F               	movlw	79
  5169  001982  6E1C               	movwf	(isbtw@high+1)^0,c
  5170  001984  0E8D               	movlw	141
  5171  001986  6E1D               	movwf	(isbtw@high+2)^0,c
  5172  001988  0E3E               	movlw	62
  5173  00198A  6E1E               	movwf	(isbtw@high+3)^0,c
  5174  00198C  ECC9  F019         	call	_isbtw	;wreg free
  5175  001990  0413               	decf	?_isbtw^0,w,c
  5176  001992  1014               	iorwf	(?_isbtw+1)^0,w,c
  5177  001994  A4D8               	btfss	status,2,c
  5178  001996  EFCF  F00C         	goto	u5641
  5179  00199A  EFD1  F00C         	goto	u5640
  5180  00199E                     u5641:
  5181  00199E  EF02  F00D         	goto	l4974
  5182  0019A2                     u5640:
  5183  0019A2  C066  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  5184  0019A6  C067  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  5185  0019AA  6A07               	clrf	(___xxtofl@val+2)^0,c
  5186  0019AC  6A08               	clrf	(___xxtofl@val+3)^0,c
  5187  0019AE  0E00               	movlw	0
  5188  0019B0  ECAC  F015         	call	___xxtofl
  5189  0019B4  C005  F013         	movff	?___xxtofl,isbtw@num
  5190  0019B8  C006  F014         	movff	?___xxtofl+1,isbtw@num+1
  5191  0019BC  C007  F015         	movff	?___xxtofl+2,isbtw@num+2
  5192  0019C0  C008  F016         	movff	?___xxtofl+3,isbtw@num+3
  5193  0019C4  0ECD               	movlw	205
  5194  0019C6  6E17               	movwf	isbtw@low^0,c
  5195  0019C8  0ECC               	movlw	204
  5196  0019CA  6E18               	movwf	(isbtw@low+1)^0,c
  5197  0019CC  0E4C               	movlw	76
  5198  0019CE  6E19               	movwf	(isbtw@low+2)^0,c
  5199  0019D0  0E3E               	movlw	62
  5200  0019D2  6E1A               	movwf	(isbtw@low+3)^0,c
  5201  0019D4  0E48               	movlw	72
  5202  0019D6  6E1B               	movwf	isbtw@high^0,c
  5203  0019D8  0EE1               	movlw	225
  5204  0019DA  6E1C               	movwf	(isbtw@high+1)^0,c
  5205  0019DC  0E7A               	movlw	122
  5206  0019DE  6E1D               	movwf	(isbtw@high+2)^0,c
  5207  0019E0  0E3E               	movlw	62
  5208  0019E2  6E1E               	movwf	(isbtw@high+3)^0,c
  5209  0019E4  ECC9  F019         	call	_isbtw	;wreg free
  5210  0019E8  0413               	decf	?_isbtw^0,w,c
  5211  0019EA  1014               	iorwf	(?_isbtw+1)^0,w,c
  5212  0019EC  A4D8               	btfss	status,2,c
  5213  0019EE  EFFB  F00C         	goto	u5651
  5214  0019F2  EFFD  F00C         	goto	u5650
  5215  0019F6                     u5651:
  5216  0019F6  EF02  F00D         	goto	l4974
  5217  0019FA                     u5650:
  5218  0019FA                     
  5219                           ;color.c: 245:     {out = 8;}
  5220  0019FA  0E00               	movlw	0
  5221  0019FC  0100               	movlb	0	; () banked
  5222  0019FE  6F61               	movwf	(determine_color_new@out+1)& (0+255),b
  5223  001A00  0E08               	movlw	8
  5224  001A02  6F60               	movwf	determine_color_new@out& (0+255),b
  5225  001A04                     l4974:
  5226                           
  5227                           ;color.c: 252:     return out;
  5228  001A04  C060  F04F         	movff	determine_color_new@out,?_determine_color_new
  5229  001A08  C061  F050         	movff	determine_color_new@out+1,?_determine_color_new+1
  5230  001A0C  0012               	return		;funcret
  5231  001A0E                     __end_of_determine_color_new:
  5232                           	callstack 0
  5233                           
  5234 ;; *************** function _isbtw *****************
  5235 ;; Defined at:
  5236 ;;		line 182 in file "color.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  num             4   18[COMRAM] float 
  5239 ;;  low             4   22[COMRAM] float 
  5240 ;;  high            4   26[COMRAM] float 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  2   18[COMRAM] unsigned int 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5252 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;Total ram usage:       12 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 3
  5259 ;; This function calls:
  5260 ;;		___flge
  5261 ;; This function is called by:
  5262 ;;		_determine_color_new
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text19
  5267  003392                     __ptext19:
  5268                           	callstack 0
  5269  003392                     _isbtw:
  5270                           	callstack 26
  5271  003392                     
  5272                           ;color.c: 183:     if (num>=low && num<=high){return 1;}
  5273  003392  C013  F005         	movff	isbtw@num,___flge@ff1
  5274  003396  C014  F006         	movff	isbtw@num+1,___flge@ff1+1
  5275  00339A  C015  F007         	movff	isbtw@num+2,___flge@ff1+2
  5276  00339E  C016  F008         	movff	isbtw@num+3,___flge@ff1+3
  5277  0033A2  C017  F009         	movff	isbtw@low,___flge@ff2
  5278  0033A6  C018  F00A         	movff	isbtw@low+1,___flge@ff2+1
  5279  0033AA  C019  F00B         	movff	isbtw@low+2,___flge@ff2+2
  5280  0033AE  C01A  F00C         	movff	isbtw@low+3,___flge@ff2+3
  5281  0033B2  EC7F  F018         	call	___flge	;wreg free
  5282  0033B6  A0D8               	btfss	status,0,c
  5283  0033B8  EFE0  F019         	goto	u4741
  5284  0033BC  EFE2  F019         	goto	u4740
  5285  0033C0                     u4741:
  5286  0033C0  EF01  F01A         	goto	l4498
  5287  0033C4                     u4740:
  5288  0033C4  C01B  F005         	movff	isbtw@high,___flge@ff1
  5289  0033C8  C01C  F006         	movff	isbtw@high+1,___flge@ff1+1
  5290  0033CC  C01D  F007         	movff	isbtw@high+2,___flge@ff1+2
  5291  0033D0  C01E  F008         	movff	isbtw@high+3,___flge@ff1+3
  5292  0033D4  C013  F009         	movff	isbtw@num,___flge@ff2
  5293  0033D8  C014  F00A         	movff	isbtw@num+1,___flge@ff2+1
  5294  0033DC  C015  F00B         	movff	isbtw@num+2,___flge@ff2+2
  5295  0033E0  C016  F00C         	movff	isbtw@num+3,___flge@ff2+3
  5296  0033E4  EC7F  F018         	call	___flge	;wreg free
  5297  0033E8  A0D8               	btfss	status,0,c
  5298  0033EA  EFF9  F019         	goto	u4751
  5299  0033EE  EFFB  F019         	goto	u4750
  5300  0033F2                     u4751:
  5301  0033F2  EF01  F01A         	goto	l4498
  5302  0033F6                     u4750:
  5303  0033F6  0E00               	movlw	0
  5304  0033F8  6E14               	movwf	(?_isbtw+1)^0,c
  5305  0033FA  0E01               	movlw	1
  5306  0033FC  6E13               	movwf	?_isbtw^0,c
  5307  0033FE  EF05  F01A         	goto	l85
  5308  003402                     l4498:
  5309  003402  0E00               	movlw	0
  5310  003404  6E14               	movwf	(?_isbtw+1)^0,c
  5311  003406  0E00               	movlw	0
  5312  003408  6E13               	movwf	?_isbtw^0,c
  5313  00340A                     l85:
  5314  00340A  0012               	return		;funcret
  5315  00340C                     __end_of_isbtw:
  5316                           	callstack 0
  5317                           
  5318 ;; *************** function ___flge *****************
  5319 ;; Defined at:
  5320 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  ff1             4    4[COMRAM] unsigned int 
  5323 ;;  ff2             4    8[COMRAM] unsigned int 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;		None               void
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5335 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;Total ram usage:       12 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 2
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_isbtw
  5346 ;;		_sqrtf
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text20
  5351  0030FE                     __ptext20:
  5352                           	callstack 0
  5353  0030FE                     ___flge:
  5354                           	callstack 26
  5355  0030FE  0E00               	movlw	0
  5356  003100  1405               	andwf	___flge@ff1^0,w,c
  5357  003102  6E0D               	movwf	??___flge^0,c
  5358  003104  0E00               	movlw	0
  5359  003106  1406               	andwf	(___flge@ff1+1)^0,w,c
  5360  003108  6E0E               	movwf	(??___flge+1)^0,c
  5361  00310A  0E80               	movlw	128
  5362  00310C  1407               	andwf	(___flge@ff1+2)^0,w,c
  5363  00310E  6E0F               	movwf	(??___flge+2)^0,c
  5364  003110  0E7F               	movlw	127
  5365  003112  1408               	andwf	(___flge@ff1+3)^0,w,c
  5366  003114  6E10               	movwf	(??___flge+3)^0,c
  5367  003116  500D               	movf	??___flge^0,w,c
  5368  003118  100E               	iorwf	(??___flge+1)^0,w,c
  5369  00311A  100F               	iorwf	(??___flge+2)^0,w,c
  5370  00311C  1010               	iorwf	(??___flge+3)^0,w,c
  5371  00311E  A4D8               	btfss	status,2,c
  5372  003120  EF94  F018         	goto	u4651
  5373  003124  EF96  F018         	goto	u4650
  5374  003128                     u4651:
  5375  003128  EF9E  F018         	goto	l4390
  5376  00312C                     u4650:
  5377  00312C  0E00               	movlw	0
  5378  00312E  6E05               	movwf	___flge@ff1^0,c
  5379  003130  0E00               	movlw	0
  5380  003132  6E06               	movwf	(___flge@ff1+1)^0,c
  5381  003134  0E00               	movlw	0
  5382  003136  6E07               	movwf	(___flge@ff1+2)^0,c
  5383  003138  0E00               	movlw	0
  5384  00313A  6E08               	movwf	(___flge@ff1+3)^0,c
  5385  00313C                     l4390:
  5386  00313C  0E00               	movlw	0
  5387  00313E  1409               	andwf	___flge@ff2^0,w,c
  5388  003140  6E0D               	movwf	??___flge^0,c
  5389  003142  0E00               	movlw	0
  5390  003144  140A               	andwf	(___flge@ff2+1)^0,w,c
  5391  003146  6E0E               	movwf	(??___flge+1)^0,c
  5392  003148  0E80               	movlw	128
  5393  00314A  140B               	andwf	(___flge@ff2+2)^0,w,c
  5394  00314C  6E0F               	movwf	(??___flge+2)^0,c
  5395  00314E  0E7F               	movlw	127
  5396  003150  140C               	andwf	(___flge@ff2+3)^0,w,c
  5397  003152  6E10               	movwf	(??___flge+3)^0,c
  5398  003154  500D               	movf	??___flge^0,w,c
  5399  003156  100E               	iorwf	(??___flge+1)^0,w,c
  5400  003158  100F               	iorwf	(??___flge+2)^0,w,c
  5401  00315A  1010               	iorwf	(??___flge+3)^0,w,c
  5402  00315C  A4D8               	btfss	status,2,c
  5403  00315E  EFB3  F018         	goto	u4661
  5404  003162  EFB5  F018         	goto	u4660
  5405  003166                     u4661:
  5406  003166  EFBD  F018         	goto	l4394
  5407  00316A                     u4660:
  5408  00316A  0E00               	movlw	0
  5409  00316C  6E09               	movwf	___flge@ff2^0,c
  5410  00316E  0E00               	movlw	0
  5411  003170  6E0A               	movwf	(___flge@ff2+1)^0,c
  5412  003172  0E00               	movlw	0
  5413  003174  6E0B               	movwf	(___flge@ff2+2)^0,c
  5414  003176  0E00               	movlw	0
  5415  003178  6E0C               	movwf	(___flge@ff2+3)^0,c
  5416  00317A                     l4394:
  5417  00317A  AE08               	btfss	(___flge@ff1+3)^0,7,c
  5418  00317C  EFC2  F018         	goto	u4671
  5419  003180  EFC4  F018         	goto	u4670
  5420  003184                     u4671:
  5421  003184  EFCD  F018         	goto	l4398
  5422  003188                     u4670:
  5423  003188  6C05               	negf	___flge@ff1^0,c
  5424  00318A  1E06               	comf	(___flge@ff1+1)^0,f,c
  5425  00318C  B0D8               	btfsc	status,0,c
  5426  00318E  2A06               	incf	(___flge@ff1+1)^0,f,c
  5427  003190  1E07               	comf	(___flge@ff1+2)^0,f,c
  5428  003192  B0D8               	btfsc	status,0,c
  5429  003194  2A07               	incf	(___flge@ff1+2)^0,f,c
  5430  003196  0E80               	movlw	128
  5431  003198  5608               	subfwb	(___flge@ff1+3)^0,f,c
  5432  00319A                     l4398:
  5433  00319A  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  5434  00319C  EFD2  F018         	goto	u4681
  5435  0031A0  EFD4  F018         	goto	u4680
  5436  0031A4                     u4681:
  5437  0031A4  EFDD  F018         	goto	l724
  5438  0031A8                     u4680:
  5439  0031A8  6C09               	negf	___flge@ff2^0,c
  5440  0031AA  1E0A               	comf	(___flge@ff2+1)^0,f,c
  5441  0031AC  B0D8               	btfsc	status,0,c
  5442  0031AE  2A0A               	incf	(___flge@ff2+1)^0,f,c
  5443  0031B0  1E0B               	comf	(___flge@ff2+2)^0,f,c
  5444  0031B2  B0D8               	btfsc	status,0,c
  5445  0031B4  2A0B               	incf	(___flge@ff2+2)^0,f,c
  5446  0031B6  0E80               	movlw	128
  5447  0031B8  560C               	subfwb	(___flge@ff2+3)^0,f,c
  5448  0031BA                     l724:
  5449  0031BA  0E00               	movlw	0
  5450  0031BC  1A05               	xorwf	___flge@ff1^0,f,c
  5451  0031BE  0E00               	movlw	0
  5452  0031C0  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  5453  0031C2  0E00               	movlw	0
  5454  0031C4  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  5455  0031C6  0E80               	movlw	128
  5456  0031C8  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  5457  0031CA  0E00               	movlw	0
  5458  0031CC  1A09               	xorwf	___flge@ff2^0,f,c
  5459  0031CE  0E00               	movlw	0
  5460  0031D0  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  5461  0031D2  0E00               	movlw	0
  5462  0031D4  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  5463  0031D6  0E80               	movlw	128
  5464  0031D8  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  5465  0031DA  5009               	movf	___flge@ff2^0,w,c
  5466  0031DC  5C05               	subwf	___flge@ff1^0,w,c
  5467  0031DE  500A               	movf	(___flge@ff2+1)^0,w,c
  5468  0031E0  5806               	subwfb	(___flge@ff1+1)^0,w,c
  5469  0031E2  500B               	movf	(___flge@ff2+2)^0,w,c
  5470  0031E4  5807               	subwfb	(___flge@ff1+2)^0,w,c
  5471  0031E6  500C               	movf	(___flge@ff2+3)^0,w,c
  5472  0031E8  5808               	subwfb	(___flge@ff1+3)^0,w,c
  5473  0031EA  B0D8               	btfsc	status,0,c
  5474  0031EC  EFFA  F018         	goto	u4691
  5475  0031F0  EFFC  F018         	goto	u4690
  5476  0031F4                     u4691:
  5477  0031F4  EFFF  F018         	goto	l4404
  5478  0031F8                     u4690:
  5479  0031F8  90D8               	bcf	status,0,c
  5480  0031FA  EF00  F019         	goto	l729
  5481  0031FE                     l4404:
  5482  0031FE  80D8               	bsf	status,0,c
  5483  003200                     l729:
  5484  003200  0012               	return		;funcret
  5485  003202                     __end_of___flge:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function ___xxtofl *****************
  5489 ;; Defined at:
  5490 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  sign            1    wreg     unsigned char 
  5493 ;;  val             4    4[COMRAM] long 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  sign            1   12[COMRAM] unsigned char 
  5496 ;;  arg             4   14[COMRAM] unsigned long 
  5497 ;;  exp             1   13[COMRAM] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  4    4[COMRAM] unsigned char 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;Total ram usage:       14 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 2
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_determine_color_new
  5518 ;;		_main
  5519 ;;		_determine_color1
  5520 ;;		_determine_color2
  5521 ;;		_determine_color3
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text21
  5526  002B58                     __ptext21:
  5527                           	callstack 0
  5528  002B58                     ___xxtofl:
  5529                           	callstack 27
  5530                           
  5531                           ;incstack = 0
  5532                           ;___xxtofl@sign stored from wreg
  5533  002B58  6E0D               	movwf	___xxtofl@sign^0,c
  5534  002B5A  500D               	movf	___xxtofl@sign^0,w,c
  5535  002B5C  B4D8               	btfsc	status,2,c
  5536  002B5E  EFB3  F015         	goto	u5281
  5537  002B62  EFB5  F015         	goto	u5280
  5538  002B66                     u5281:
  5539  002B66  EFD7  F015         	goto	l1114
  5540  002B6A                     u5280:
  5541  002B6A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  5542  002B6C  EFBC  F015         	goto	u5290
  5543  002B70  EFBA  F015         	goto	u5291
  5544  002B74                     u5291:
  5545  002B74  EFD7  F015         	goto	l1114
  5546  002B78                     u5290:
  5547  002B78  C005  F009         	movff	___xxtofl@val,??___xxtofl
  5548  002B7C  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  5549  002B80  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  5550  002B84  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  5551  002B88  1E09               	comf	??___xxtofl^0,f,c
  5552  002B8A  1E0A               	comf	(??___xxtofl+1)^0,f,c
  5553  002B8C  1E0B               	comf	(??___xxtofl+2)^0,f,c
  5554  002B8E  1E0C               	comf	(??___xxtofl+3)^0,f,c
  5555  002B90  2A09               	incf	??___xxtofl^0,f,c
  5556  002B92  0E00               	movlw	0
  5557  002B94  220A               	addwfc	(??___xxtofl+1)^0,f,c
  5558  002B96  220B               	addwfc	(??___xxtofl+2)^0,f,c
  5559  002B98  220C               	addwfc	(??___xxtofl+3)^0,f,c
  5560  002B9A  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  5561  002B9E  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  5562  002BA2  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  5563  002BA6  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  5564  002BAA  EFDF  F015         	goto	l4832
  5565  002BAE                     l1114:
  5566  002BAE  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  5567  002BB2  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5568  002BB6  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5569  002BBA  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5570  002BBE                     l4832:
  5571  002BBE  5005               	movf	___xxtofl@val^0,w,c
  5572  002BC0  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  5573  002BC2  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  5574  002BC4  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  5575  002BC6  A4D8               	btfss	status,2,c
  5576  002BC8  EFE8  F015         	goto	u5301
  5577  002BCC  EFEA  F015         	goto	u5300
  5578  002BD0                     u5301:
  5579  002BD0  EFF4  F015         	goto	l4838
  5580  002BD4                     u5300:
  5581  002BD4  0E00               	movlw	0
  5582  002BD6  6E05               	movwf	?___xxtofl^0,c
  5583  002BD8  0E00               	movlw	0
  5584  002BDA  6E06               	movwf	(?___xxtofl+1)^0,c
  5585  002BDC  0E00               	movlw	0
  5586  002BDE  6E07               	movwf	(?___xxtofl+2)^0,c
  5587  002BE0  0E00               	movlw	0
  5588  002BE2  6E08               	movwf	(?___xxtofl+3)^0,c
  5589  002BE4  EF85  F016         	goto	l1117
  5590  002BE8                     l4838:
  5591  002BE8  0E96               	movlw	150
  5592  002BEA  6E0E               	movwf	___xxtofl@exp^0,c
  5593  002BEC  EFFE  F015         	goto	l4842
  5594  002BF0                     l4840:
  5595  002BF0  2A0E               	incf	___xxtofl@exp^0,f,c
  5596  002BF2  90D8               	bcf	status,0,c
  5597  002BF4  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  5598  002BF6  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  5599  002BF8  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  5600  002BFA  320F               	rrcf	___xxtofl@arg^0,f,c
  5601  002BFC                     l4842:
  5602  002BFC  0E00               	movlw	0
  5603  002BFE  140F               	andwf	___xxtofl@arg^0,w,c
  5604  002C00  6E09               	movwf	??___xxtofl^0,c
  5605  002C02  0E00               	movlw	0
  5606  002C04  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  5607  002C06  6E0A               	movwf	(??___xxtofl+1)^0,c
  5608  002C08  0E00               	movlw	0
  5609  002C0A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  5610  002C0C  6E0B               	movwf	(??___xxtofl+2)^0,c
  5611  002C0E  0EFE               	movlw	254
  5612  002C10  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  5613  002C12  6E0C               	movwf	(??___xxtofl+3)^0,c
  5614  002C14  5009               	movf	??___xxtofl^0,w,c
  5615  002C16  100A               	iorwf	(??___xxtofl+1)^0,w,c
  5616  002C18  100B               	iorwf	(??___xxtofl+2)^0,w,c
  5617  002C1A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  5618  002C1C  A4D8               	btfss	status,2,c
  5619  002C1E  EF13  F016         	goto	u5311
  5620  002C22  EF15  F016         	goto	u5310
  5621  002C26                     u5311:
  5622  002C26  EFF8  F015         	goto	l4840
  5623  002C2A                     u5310:
  5624  002C2A  EF23  F016         	goto	l1121
  5625  002C2E                     l4844:
  5626  002C2E  2A0E               	incf	___xxtofl@exp^0,f,c
  5627  002C30  0E01               	movlw	1
  5628  002C32  260F               	addwf	___xxtofl@arg^0,f,c
  5629  002C34  0E00               	movlw	0
  5630  002C36  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  5631  002C38  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  5632  002C3A  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  5633  002C3C  90D8               	bcf	status,0,c
  5634  002C3E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  5635  002C40  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  5636  002C42  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  5637  002C44  320F               	rrcf	___xxtofl@arg^0,f,c
  5638  002C46                     l1121:
  5639  002C46  0E00               	movlw	0
  5640  002C48  140F               	andwf	___xxtofl@arg^0,w,c
  5641  002C4A  6E09               	movwf	??___xxtofl^0,c
  5642  002C4C  0E00               	movlw	0
  5643  002C4E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  5644  002C50  6E0A               	movwf	(??___xxtofl+1)^0,c
  5645  002C52  0E00               	movlw	0
  5646  002C54  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  5647  002C56  6E0B               	movwf	(??___xxtofl+2)^0,c
  5648  002C58  0EFF               	movlw	255
  5649  002C5A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  5650  002C5C  6E0C               	movwf	(??___xxtofl+3)^0,c
  5651  002C5E  5009               	movf	??___xxtofl^0,w,c
  5652  002C60  100A               	iorwf	(??___xxtofl+1)^0,w,c
  5653  002C62  100B               	iorwf	(??___xxtofl+2)^0,w,c
  5654  002C64  100C               	iorwf	(??___xxtofl+3)^0,w,c
  5655  002C66  A4D8               	btfss	status,2,c
  5656  002C68  EF38  F016         	goto	u5321
  5657  002C6C  EF3A  F016         	goto	u5320
  5658  002C70                     u5321:
  5659  002C70  EF17  F016         	goto	l4844
  5660  002C74                     u5320:
  5661  002C74  EF42  F016         	goto	l4852
  5662  002C78                     l4850:
  5663  002C78  060E               	decf	___xxtofl@exp^0,f,c
  5664  002C7A  90D8               	bcf	status,0,c
  5665  002C7C  360F               	rlcf	___xxtofl@arg^0,f,c
  5666  002C7E  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  5667  002C80  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  5668  002C82  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  5669  002C84                     l4852:
  5670  002C84  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  5671  002C86  EF47  F016         	goto	u5331
  5672  002C8A  EF49  F016         	goto	u5330
  5673  002C8E                     u5331:
  5674  002C8E  EF51  F016         	goto	l1128
  5675  002C92                     u5330:
  5676  002C92  0E02               	movlw	2
  5677  002C94  600E               	cpfslt	___xxtofl@exp^0,c
  5678  002C96  EF4F  F016         	goto	u5341
  5679  002C9A  EF51  F016         	goto	u5340
  5680  002C9E                     u5341:
  5681  002C9E  EF3C  F016         	goto	l4850
  5682  002CA2                     u5340:
  5683  002CA2                     l1128:
  5684  002CA2  B00E               	btfsc	___xxtofl@exp^0,0,c
  5685  002CA4  EF56  F016         	goto	u5351
  5686  002CA8  EF58  F016         	goto	u5350
  5687  002CAC                     u5351:
  5688  002CAC  EF59  F016         	goto	l4858
  5689  002CB0                     u5350:
  5690  002CB0  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  5691  002CB2                     l4858:
  5692  002CB2  90D8               	bcf	status,0,c
  5693  002CB4  320E               	rrcf	___xxtofl@exp^0,f,c
  5694  002CB6  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  5695  002CBA  6A0A               	clrf	(??___xxtofl+1)^0,c
  5696  002CBC  6A0B               	clrf	(??___xxtofl+2)^0,c
  5697  002CBE  6A0C               	clrf	(??___xxtofl+3)^0,c
  5698  002CC0  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  5699  002CC4  6A0B               	clrf	(??___xxtofl+2)^0,c
  5700  002CC6  6A0A               	clrf	(??___xxtofl+1)^0,c
  5701  002CC8  6A09               	clrf	??___xxtofl^0,c
  5702  002CCA  5009               	movf	??___xxtofl^0,w,c
  5703  002CCC  120F               	iorwf	___xxtofl@arg^0,f,c
  5704  002CCE  500A               	movf	(??___xxtofl+1)^0,w,c
  5705  002CD0  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  5706  002CD2  500B               	movf	(??___xxtofl+2)^0,w,c
  5707  002CD4  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  5708  002CD6  500C               	movf	(??___xxtofl+3)^0,w,c
  5709  002CD8  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  5710  002CDA  500D               	movf	___xxtofl@sign^0,w,c
  5711  002CDC  B4D8               	btfsc	status,2,c
  5712  002CDE  EF73  F016         	goto	u5361
  5713  002CE2  EF75  F016         	goto	u5360
  5714  002CE6                     u5361:
  5715  002CE6  EF7D  F016         	goto	l4868
  5716  002CEA                     u5360:
  5717  002CEA  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  5718  002CEC  EF7C  F016         	goto	u5370
  5719  002CF0  EF7A  F016         	goto	u5371
  5720  002CF4                     u5371:
  5721  002CF4  EF7D  F016         	goto	l4868
  5722  002CF8                     u5370:
  5723  002CF8  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  5724  002CFA                     l4868:
  5725  002CFA  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  5726  002CFE  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  5727  002D02  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  5728  002D06  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  5729  002D0A                     l1117:
  5730  002D0A  0012               	return		;funcret
  5731  002D0C                     __end_of___xxtofl:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function ___fltol *****************
  5735 ;; Defined at:
  5736 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  f1              4   68[COMRAM] unsigned char 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  exp1            1   77[COMRAM] unsigned char 
  5741 ;;  sign1           1   76[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  4   68[COMRAM] long 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;Total ram usage:       10 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 2
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_determine_color_new
  5762 ;;		_main
  5763 ;;		_determine_color1
  5764 ;;		_determine_color2
  5765 ;;		_determine_color3
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text22
  5770  002FF8                     __ptext22:
  5771                           	callstack 0
  5772  002FF8                     ___fltol:
  5773                           	callstack 27
  5774  002FF8  3447               	rlcf	(___fltol@f1+2)^0,w,c
  5775  002FFA  3448               	rlcf	(___fltol@f1+3)^0,w,c
  5776  002FFC  6E4E               	movwf	___fltol@exp1^0,c
  5777  002FFE  504E               	movf	___fltol@exp1^0,w,c
  5778  003000  A4D8               	btfss	status,2,c
  5779  003002  EF05  F018         	goto	u5211
  5780  003006  EF07  F018         	goto	u5210
  5781  00300A                     u5211:
  5782  00300A  EF11  F018         	goto	l4788
  5783  00300E                     u5210:
  5784  00300E                     l4784:
  5785  00300E  0E00               	movlw	0
  5786  003010  6E45               	movwf	?___fltol^0,c
  5787  003012  0E00               	movlw	0
  5788  003014  6E46               	movwf	(?___fltol+1)^0,c
  5789  003016  0E00               	movlw	0
  5790  003018  6E47               	movwf	(?___fltol+2)^0,c
  5791  00301A  0E00               	movlw	0
  5792  00301C  6E48               	movwf	(?___fltol+3)^0,c
  5793  00301E  EF7E  F018         	goto	l756
  5794  003022                     l4788:
  5795  003022  C045  F049         	movff	___fltol@f1,??___fltol
  5796  003026  C046  F04A         	movff	___fltol@f1+1,??___fltol+1
  5797  00302A  C047  F04B         	movff	___fltol@f1+2,??___fltol+2
  5798  00302E  C048  F04C         	movff	___fltol@f1+3,??___fltol+3
  5799  003032  0E20               	movlw	32
  5800  003034  EF21  F018         	goto	u5220
  5801  003038                     u5225:
  5802  003038  90D8               	bcf	status,0,c
  5803  00303A  324C               	rrcf	(??___fltol+3)^0,f,c
  5804  00303C  324B               	rrcf	(??___fltol+2)^0,f,c
  5805  00303E  324A               	rrcf	(??___fltol+1)^0,f,c
  5806  003040  3249               	rrcf	??___fltol^0,f,c
  5807  003042                     u5220:
  5808  003042  2EE8               	decfsz	wreg,f,c
  5809  003044  EF1C  F018         	goto	u5225
  5810  003048  5049               	movf	??___fltol^0,w,c
  5811  00304A  6E4D               	movwf	___fltol@sign1^0,c
  5812  00304C  8E47               	bsf	(___fltol@f1+2)^0,7,c
  5813  00304E  0EFF               	movlw	255
  5814  003050  1645               	andwf	___fltol@f1^0,f,c
  5815  003052  0EFF               	movlw	255
  5816  003054  1646               	andwf	(___fltol@f1+1)^0,f,c
  5817  003056  0EFF               	movlw	255
  5818  003058  1647               	andwf	(___fltol@f1+2)^0,f,c
  5819  00305A  0E00               	movlw	0
  5820  00305C  1648               	andwf	(___fltol@f1+3)^0,f,c
  5821  00305E  0E96               	movlw	150
  5822  003060  5E4E               	subwf	___fltol@exp1^0,f,c
  5823  003062  BE4E               	btfsc	___fltol@exp1^0,7,c
  5824  003064  EF38  F018         	goto	u5230
  5825  003068  EF36  F018         	goto	u5231
  5826  00306C                     u5231:
  5827  00306C  EF4E  F018         	goto	l4808
  5828  003070                     u5230:
  5829  003070  504E               	movf	___fltol@exp1^0,w,c
  5830  003072  0A80               	xorlw	128
  5831  003074  0F97               	addlw	151
  5832  003076  B0D8               	btfsc	status,0,c
  5833  003078  EF40  F018         	goto	u5241
  5834  00307C  EF42  F018         	goto	u5240
  5835  003080                     u5241:
  5836  003080  EF44  F018         	goto	l4804
  5837  003084                     u5240:
  5838  003084  EF07  F018         	goto	l4784
  5839  003088                     l4804:
  5840  003088  90D8               	bcf	status,0,c
  5841  00308A  3248               	rrcf	(___fltol@f1+3)^0,f,c
  5842  00308C  3247               	rrcf	(___fltol@f1+2)^0,f,c
  5843  00308E  3246               	rrcf	(___fltol@f1+1)^0,f,c
  5844  003090  3245               	rrcf	___fltol@f1^0,f,c
  5845  003092  3E4E               	incfsz	___fltol@exp1^0,f,c
  5846  003094  EF44  F018         	goto	l4804
  5847  003098  EF66  F018         	goto	l4818
  5848  00309C                     l4808:
  5849  00309C  0E1F               	movlw	31
  5850  00309E  644E               	cpfsgt	___fltol@exp1^0,c
  5851  0030A0  EF54  F018         	goto	u5251
  5852  0030A4  EF56  F018         	goto	u5250
  5853  0030A8                     u5251:
  5854  0030A8  EF5E  F018         	goto	l4816
  5855  0030AC                     u5250:
  5856  0030AC  EF07  F018         	goto	l4784
  5857  0030B0                     l4814:
  5858  0030B0  90D8               	bcf	status,0,c
  5859  0030B2  3645               	rlcf	___fltol@f1^0,f,c
  5860  0030B4  3646               	rlcf	(___fltol@f1+1)^0,f,c
  5861  0030B6  3647               	rlcf	(___fltol@f1+2)^0,f,c
  5862  0030B8  3648               	rlcf	(___fltol@f1+3)^0,f,c
  5863  0030BA  064E               	decf	___fltol@exp1^0,f,c
  5864  0030BC                     l4816:
  5865  0030BC  504E               	movf	___fltol@exp1^0,w,c
  5866  0030BE  A4D8               	btfss	status,2,c
  5867  0030C0  EF64  F018         	goto	u5261
  5868  0030C4  EF66  F018         	goto	u5260
  5869  0030C8                     u5261:
  5870  0030C8  EF58  F018         	goto	l4814
  5871  0030CC                     u5260:
  5872  0030CC                     l4818:
  5873  0030CC  504D               	movf	___fltol@sign1^0,w,c
  5874  0030CE  B4D8               	btfsc	status,2,c
  5875  0030D0  EF6C  F018         	goto	u5271
  5876  0030D4  EF6E  F018         	goto	u5270
  5877  0030D8                     u5271:
  5878  0030D8  EF76  F018         	goto	l4822
  5879  0030DC                     u5270:
  5880  0030DC  1E48               	comf	(___fltol@f1+3)^0,f,c
  5881  0030DE  1E47               	comf	(___fltol@f1+2)^0,f,c
  5882  0030E0  1E46               	comf	(___fltol@f1+1)^0,f,c
  5883  0030E2  6C45               	negf	___fltol@f1^0,c
  5884  0030E4  0E00               	movlw	0
  5885  0030E6  2246               	addwfc	(___fltol@f1+1)^0,f,c
  5886  0030E8  2247               	addwfc	(___fltol@f1+2)^0,f,c
  5887  0030EA  2248               	addwfc	(___fltol@f1+3)^0,f,c
  5888  0030EC                     l4822:
  5889  0030EC  C045  F045         	movff	___fltol@f1,?___fltol
  5890  0030F0  C046  F046         	movff	___fltol@f1+1,?___fltol+1
  5891  0030F4  C047  F047         	movff	___fltol@f1+2,?___fltol+2
  5892  0030F8  C048  F048         	movff	___fltol@f1+3,?___fltol+3
  5893  0030FC                     l756:
  5894  0030FC  0012               	return		;funcret
  5895  0030FE                     __end_of___fltol:
  5896                           	callstack 0
  5897                           
  5898 ;; *************** function ___flmul *****************
  5899 ;; Defined at:
  5900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  b               4   43[COMRAM] long 
  5903 ;;  a               4   47[COMRAM] long 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  prod            4   62[COMRAM] struct .
  5906 ;;  grs             4   57[COMRAM] unsigned long 
  5907 ;;  temp            2   66[COMRAM] struct .
  5908 ;;  bexp            1   61[COMRAM] unsigned char 
  5909 ;;  aexp            1   56[COMRAM] unsigned char 
  5910 ;;  sign            1   55[COMRAM] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  4   43[COMRAM] unsigned char 
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0, prodl, prodh
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5920 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;Total ram usage:       25 bytes
  5925 ;; Hardware stack levels used: 1
  5926 ;; Hardware stack levels required when called: 2
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_determine_color_new
  5931 ;;		_main
  5932 ;;		_sqrtf
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text23
  5937  001EFC                     __ptext23:
  5938                           	callstack 0
  5939  001EFC                     ___flmul:
  5940                           	callstack 27
  5941  001EFC  502F               	movf	(___flmul@b+3)^0,w,c
  5942  001EFE  0B80               	andlw	128
  5943  001F00  6E38               	movwf	___flmul@sign^0,c
  5944  001F02  502F               	movf	(___flmul@b+3)^0,w,c
  5945  001F04  242F               	addwf	(___flmul@b+3)^0,w,c
  5946  001F06  6E3E               	movwf	___flmul@bexp^0,c
  5947  001F08  AE2E               	btfss	(___flmul@b+2)^0,7,c
  5948  001F0A  EF89  F00F         	goto	u5021
  5949  001F0E  EF8B  F00F         	goto	u5020
  5950  001F12                     u5021:
  5951  001F12  EF8C  F00F         	goto	l4658
  5952  001F16                     u5020:
  5953  001F16  803E               	bsf	___flmul@bexp^0,0,c
  5954  001F18                     l4658:
  5955  001F18  503E               	movf	___flmul@bexp^0,w,c
  5956  001F1A  B4D8               	btfsc	status,2,c
  5957  001F1C  EF92  F00F         	goto	u5031
  5958  001F20  EF94  F00F         	goto	u5030
  5959  001F24                     u5031:
  5960  001F24  EFA7  F00F         	goto	l4666
  5961  001F28                     u5030:
  5962  001F28  283E               	incf	___flmul@bexp^0,w,c
  5963  001F2A  A4D8               	btfss	status,2,c
  5964  001F2C  EF9A  F00F         	goto	u5041
  5965  001F30  EF9C  F00F         	goto	u5040
  5966  001F34                     u5041:
  5967  001F34  EFA4  F00F         	goto	l4664
  5968  001F38                     u5040:
  5969  001F38  0E00               	movlw	0
  5970  001F3A  6E2C               	movwf	___flmul@b^0,c
  5971  001F3C  0E00               	movlw	0
  5972  001F3E  6E2D               	movwf	(___flmul@b+1)^0,c
  5973  001F40  0E00               	movlw	0
  5974  001F42  6E2E               	movwf	(___flmul@b+2)^0,c
  5975  001F44  0E00               	movlw	0
  5976  001F46  6E2F               	movwf	(___flmul@b+3)^0,c
  5977  001F48                     l4664:
  5978  001F48  8E2E               	bsf	(___flmul@b+2)^0,7,c
  5979  001F4A  EFAF  F00F         	goto	l4668
  5980  001F4E                     l4666:
  5981  001F4E  0E00               	movlw	0
  5982  001F50  6E2C               	movwf	___flmul@b^0,c
  5983  001F52  0E00               	movlw	0
  5984  001F54  6E2D               	movwf	(___flmul@b+1)^0,c
  5985  001F56  0E00               	movlw	0
  5986  001F58  6E2E               	movwf	(___flmul@b+2)^0,c
  5987  001F5A  0E00               	movlw	0
  5988  001F5C  6E2F               	movwf	(___flmul@b+3)^0,c
  5989  001F5E                     l4668:
  5990  001F5E  5033               	movf	(___flmul@a+3)^0,w,c
  5991  001F60  0B80               	andlw	128
  5992  001F62  1A38               	xorwf	___flmul@sign^0,f,c
  5993  001F64  5033               	movf	(___flmul@a+3)^0,w,c
  5994  001F66  2433               	addwf	(___flmul@a+3)^0,w,c
  5995  001F68  6E39               	movwf	___flmul@aexp^0,c
  5996  001F6A  AE32               	btfss	(___flmul@a+2)^0,7,c
  5997  001F6C  EFBA  F00F         	goto	u5051
  5998  001F70  EFBC  F00F         	goto	u5050
  5999  001F74                     u5051:
  6000  001F74  EFBD  F00F         	goto	l4676
  6001  001F78                     u5050:
  6002  001F78  8039               	bsf	___flmul@aexp^0,0,c
  6003  001F7A                     l4676:
  6004  001F7A  5039               	movf	___flmul@aexp^0,w,c
  6005  001F7C  B4D8               	btfsc	status,2,c
  6006  001F7E  EFC3  F00F         	goto	u5061
  6007  001F82  EFC5  F00F         	goto	u5060
  6008  001F86                     u5061:
  6009  001F86  EFD8  F00F         	goto	l4684
  6010  001F8A                     u5060:
  6011  001F8A  2839               	incf	___flmul@aexp^0,w,c
  6012  001F8C  A4D8               	btfss	status,2,c
  6013  001F8E  EFCB  F00F         	goto	u5071
  6014  001F92  EFCD  F00F         	goto	u5070
  6015  001F96                     u5071:
  6016  001F96  EFD5  F00F         	goto	l4682
  6017  001F9A                     u5070:
  6018  001F9A  0E00               	movlw	0
  6019  001F9C  6E30               	movwf	___flmul@a^0,c
  6020  001F9E  0E00               	movlw	0
  6021  001FA0  6E31               	movwf	(___flmul@a+1)^0,c
  6022  001FA2  0E00               	movlw	0
  6023  001FA4  6E32               	movwf	(___flmul@a+2)^0,c
  6024  001FA6  0E00               	movlw	0
  6025  001FA8  6E33               	movwf	(___flmul@a+3)^0,c
  6026  001FAA                     l4682:
  6027  001FAA  8E32               	bsf	(___flmul@a+2)^0,7,c
  6028  001FAC  EFE0  F00F         	goto	l1073
  6029  001FB0                     l4684:
  6030  001FB0  0E00               	movlw	0
  6031  001FB2  6E30               	movwf	___flmul@a^0,c
  6032  001FB4  0E00               	movlw	0
  6033  001FB6  6E31               	movwf	(___flmul@a+1)^0,c
  6034  001FB8  0E00               	movlw	0
  6035  001FBA  6E32               	movwf	(___flmul@a+2)^0,c
  6036  001FBC  0E00               	movlw	0
  6037  001FBE  6E33               	movwf	(___flmul@a+3)^0,c
  6038  001FC0                     l1073:
  6039  001FC0  5039               	movf	___flmul@aexp^0,w,c
  6040  001FC2  B4D8               	btfsc	status,2,c
  6041  001FC4  EFE6  F00F         	goto	u5081
  6042  001FC8  EFE8  F00F         	goto	u5080
  6043  001FCC                     u5081:
  6044  001FCC  EFF0  F00F         	goto	l4688
  6045  001FD0                     u5080:
  6046  001FD0  503E               	movf	___flmul@bexp^0,w,c
  6047  001FD2  A4D8               	btfss	status,2,c
  6048  001FD4  EFEE  F00F         	goto	u5091
  6049  001FD8  EFF0  F00F         	goto	u5090
  6050  001FDC                     u5091:
  6051  001FDC  EFFA  F00F         	goto	l4692
  6052  001FE0                     u5090:
  6053  001FE0                     l4688:
  6054  001FE0  0E00               	movlw	0
  6055  001FE2  6E2C               	movwf	?___flmul^0,c
  6056  001FE4  0E00               	movlw	0
  6057  001FE6  6E2D               	movwf	(?___flmul+1)^0,c
  6058  001FE8  0E00               	movlw	0
  6059  001FEA  6E2E               	movwf	(?___flmul+2)^0,c
  6060  001FEC  0E00               	movlw	0
  6061  001FEE  6E2F               	movwf	(?___flmul+3)^0,c
  6062  001FF0  EF92  F011         	goto	l1077
  6063  001FF4                     l4692:
  6064  001FF4  5032               	movf	(___flmul@a+2)^0,w,c
  6065  001FF6  022C               	mulwf	___flmul@b^0,c
  6066  001FF8  CFF3 F043          	movff	prodl,___flmul@temp
  6067  001FFC  CFF4 F044          	movff	prodh,___flmul@temp+1
  6068  002000  5043               	movf	___flmul@temp^0,w,c
  6069  002002  6E3A               	movwf	___flmul@grs^0,c
  6070  002004  6A3B               	clrf	(___flmul@grs+1)^0,c
  6071  002006  6A3C               	clrf	(___flmul@grs+2)^0,c
  6072  002008  6A3D               	clrf	(___flmul@grs+3)^0,c
  6073  00200A  5044               	movf	(___flmul@temp+1)^0,w,c
  6074  00200C  6E3F               	movwf	___flmul@prod^0,c
  6075  00200E  6A40               	clrf	(___flmul@prod+1)^0,c
  6076  002010  6A41               	clrf	(___flmul@prod+2)^0,c
  6077  002012  6A42               	clrf	(___flmul@prod+3)^0,c
  6078  002014  5031               	movf	(___flmul@a+1)^0,w,c
  6079  002016  022D               	mulwf	(___flmul@b+1)^0,c
  6080  002018  CFF3 F043          	movff	prodl,___flmul@temp
  6081  00201C  CFF4 F044          	movff	prodh,___flmul@temp+1
  6082  002020  5043               	movf	___flmul@temp^0,w,c
  6083  002022  263A               	addwf	___flmul@grs^0,f,c
  6084  002024  0E00               	movlw	0
  6085  002026  223B               	addwfc	(___flmul@grs+1)^0,f,c
  6086  002028  223C               	addwfc	(___flmul@grs+2)^0,f,c
  6087  00202A  223D               	addwfc	(___flmul@grs+3)^0,f,c
  6088  00202C  5044               	movf	(___flmul@temp+1)^0,w,c
  6089  00202E  263F               	addwf	___flmul@prod^0,f,c
  6090  002030  0E00               	movlw	0
  6091  002032  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6092  002034  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6093  002036  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6094  002038  5030               	movf	___flmul@a^0,w,c
  6095  00203A  022E               	mulwf	(___flmul@b+2)^0,c
  6096  00203C  CFF3 F043          	movff	prodl,___flmul@temp
  6097  002040  CFF4 F044          	movff	prodh,___flmul@temp+1
  6098  002044  5043               	movf	___flmul@temp^0,w,c
  6099  002046  263A               	addwf	___flmul@grs^0,f,c
  6100  002048  0E00               	movlw	0
  6101  00204A  223B               	addwfc	(___flmul@grs+1)^0,f,c
  6102  00204C  223C               	addwfc	(___flmul@grs+2)^0,f,c
  6103  00204E  223D               	addwfc	(___flmul@grs+3)^0,f,c
  6104  002050  5044               	movf	(___flmul@temp+1)^0,w,c
  6105  002052  263F               	addwf	___flmul@prod^0,f,c
  6106  002054  0E00               	movlw	0
  6107  002056  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6108  002058  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6109  00205A  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6110  00205C  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
  6111  002060  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
  6112  002064  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
  6113  002068  6A3A               	clrf	___flmul@grs^0,c
  6114  00206A  5030               	movf	___flmul@a^0,w,c
  6115  00206C  022D               	mulwf	(___flmul@b+1)^0,c
  6116  00206E  CFF3 F043          	movff	prodl,___flmul@temp
  6117  002072  CFF4 F044          	movff	prodh,___flmul@temp+1
  6118  002076  5043               	movf	___flmul@temp^0,w,c
  6119  002078  263A               	addwf	___flmul@grs^0,f,c
  6120  00207A  5044               	movf	(___flmul@temp+1)^0,w,c
  6121  00207C  223B               	addwfc	(___flmul@grs+1)^0,f,c
  6122  00207E  0E00               	movlw	0
  6123  002080  223C               	addwfc	(___flmul@grs+2)^0,f,c
  6124  002082  0E00               	movlw	0
  6125  002084  223D               	addwfc	(___flmul@grs+3)^0,f,c
  6126  002086  5031               	movf	(___flmul@a+1)^0,w,c
  6127  002088  022C               	mulwf	___flmul@b^0,c
  6128  00208A  CFF3 F043          	movff	prodl,___flmul@temp
  6129  00208E  CFF4 F044          	movff	prodh,___flmul@temp+1
  6130  002092  5043               	movf	___flmul@temp^0,w,c
  6131  002094  263A               	addwf	___flmul@grs^0,f,c
  6132  002096  5044               	movf	(___flmul@temp+1)^0,w,c
  6133  002098  223B               	addwfc	(___flmul@grs+1)^0,f,c
  6134  00209A  0E00               	movlw	0
  6135  00209C  223C               	addwfc	(___flmul@grs+2)^0,f,c
  6136  00209E  0E00               	movlw	0
  6137  0020A0  223D               	addwfc	(___flmul@grs+3)^0,f,c
  6138  0020A2  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
  6139  0020A6  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
  6140  0020AA  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
  6141  0020AE  6A3A               	clrf	___flmul@grs^0,c
  6142  0020B0  5030               	movf	___flmul@a^0,w,c
  6143  0020B2  022C               	mulwf	___flmul@b^0,c
  6144  0020B4  CFF3 F043          	movff	prodl,___flmul@temp
  6145  0020B8  CFF4 F044          	movff	prodh,___flmul@temp+1
  6146  0020BC  5043               	movf	___flmul@temp^0,w,c
  6147  0020BE  263A               	addwf	___flmul@grs^0,f,c
  6148  0020C0  5044               	movf	(___flmul@temp+1)^0,w,c
  6149  0020C2  223B               	addwfc	(___flmul@grs+1)^0,f,c
  6150  0020C4  0E00               	movlw	0
  6151  0020C6  223C               	addwfc	(___flmul@grs+2)^0,f,c
  6152  0020C8  0E00               	movlw	0
  6153  0020CA  223D               	addwfc	(___flmul@grs+3)^0,f,c
  6154  0020CC  5032               	movf	(___flmul@a+2)^0,w,c
  6155  0020CE  022D               	mulwf	(___flmul@b+1)^0,c
  6156  0020D0  CFF3 F043          	movff	prodl,___flmul@temp
  6157  0020D4  CFF4 F044          	movff	prodh,___flmul@temp+1
  6158  0020D8  5043               	movf	___flmul@temp^0,w,c
  6159  0020DA  263F               	addwf	___flmul@prod^0,f,c
  6160  0020DC  5044               	movf	(___flmul@temp+1)^0,w,c
  6161  0020DE  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6162  0020E0  0E00               	movlw	0
  6163  0020E2  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6164  0020E4  0E00               	movlw	0
  6165  0020E6  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6166  0020E8  5031               	movf	(___flmul@a+1)^0,w,c
  6167  0020EA  022E               	mulwf	(___flmul@b+2)^0,c
  6168  0020EC  CFF3 F043          	movff	prodl,___flmul@temp
  6169  0020F0  CFF4 F044          	movff	prodh,___flmul@temp+1
  6170  0020F4  5043               	movf	___flmul@temp^0,w,c
  6171  0020F6  263F               	addwf	___flmul@prod^0,f,c
  6172  0020F8  5044               	movf	(___flmul@temp+1)^0,w,c
  6173  0020FA  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6174  0020FC  0E00               	movlw	0
  6175  0020FE  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6176  002100  0E00               	movlw	0
  6177  002102  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6178  002104  5032               	movf	(___flmul@a+2)^0,w,c
  6179  002106  022E               	mulwf	(___flmul@b+2)^0,c
  6180  002108  CFF3 F043          	movff	prodl,___flmul@temp
  6181  00210C  CFF4 F044          	movff	prodh,___flmul@temp+1
  6182  002110  5043               	movf	___flmul@temp^0,w,c
  6183  002112  6E34               	movwf	??___flmul^0,c
  6184  002114  5044               	movf	(___flmul@temp+1)^0,w,c
  6185  002116  6E35               	movwf	(??___flmul+1)^0,c
  6186  002118  6A36               	clrf	(??___flmul+2)^0,c
  6187  00211A  6A37               	clrf	(??___flmul+3)^0,c
  6188  00211C  C036  F037         	movff	??___flmul+2,??___flmul+3
  6189  002120  C035  F036         	movff	??___flmul+1,??___flmul+2
  6190  002124  C034  F035         	movff	??___flmul,??___flmul+1
  6191  002128  6A34               	clrf	??___flmul^0,c
  6192  00212A  5034               	movf	??___flmul^0,w,c
  6193  00212C  263F               	addwf	___flmul@prod^0,f,c
  6194  00212E  5035               	movf	(??___flmul+1)^0,w,c
  6195  002130  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6196  002132  5036               	movf	(??___flmul+2)^0,w,c
  6197  002134  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6198  002136  5037               	movf	(??___flmul+3)^0,w,c
  6199  002138  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6200  00213A  C03A  F034         	movff	___flmul@grs,??___flmul
  6201  00213E  C03B  F035         	movff	___flmul@grs+1,??___flmul+1
  6202  002142  C03C  F036         	movff	___flmul@grs+2,??___flmul+2
  6203  002146  C03D  F037         	movff	___flmul@grs+3,??___flmul+3
  6204  00214A  0E19               	movlw	25
  6205  00214C  EFAD  F010         	goto	u5100
  6206  002150                     u5105:
  6207  002150  90D8               	bcf	status,0,c
  6208  002152  3237               	rrcf	(??___flmul+3)^0,f,c
  6209  002154  3236               	rrcf	(??___flmul+2)^0,f,c
  6210  002156  3235               	rrcf	(??___flmul+1)^0,f,c
  6211  002158  3234               	rrcf	??___flmul^0,f,c
  6212  00215A                     u5100:
  6213  00215A  2EE8               	decfsz	wreg,f,c
  6214  00215C  EFA8  F010         	goto	u5105
  6215  002160  5034               	movf	??___flmul^0,w,c
  6216  002162  263F               	addwf	___flmul@prod^0,f,c
  6217  002164  5035               	movf	(??___flmul+1)^0,w,c
  6218  002166  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6219  002168  5036               	movf	(??___flmul+2)^0,w,c
  6220  00216A  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6221  00216C  5037               	movf	(??___flmul+3)^0,w,c
  6222  00216E  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6223  002170  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
  6224  002174  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
  6225  002178  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
  6226  00217C  6A3A               	clrf	___flmul@grs^0,c
  6227  00217E  5039               	movf	___flmul@aexp^0,w,c
  6228  002180  C03E  F034         	movff	___flmul@bexp,??___flmul
  6229  002184  6A35               	clrf	(??___flmul+1)^0,c
  6230  002186  2634               	addwf	??___flmul^0,f,c
  6231  002188  0E00               	movlw	0
  6232  00218A  2235               	addwfc	(??___flmul+1)^0,f,c
  6233  00218C  0E82               	movlw	130
  6234  00218E  2434               	addwf	??___flmul^0,w,c
  6235  002190  6E43               	movwf	___flmul@temp^0,c
  6236  002192  0EFF               	movlw	255
  6237  002194  2035               	addwfc	(??___flmul+1)^0,w,c
  6238  002196  6E44               	movwf	(___flmul@temp+1)^0,c
  6239  002198  EFE3  F010         	goto	l4740
  6240  00219C                     l4734:
  6241  00219C  90D8               	bcf	status,0,c
  6242  00219E  363F               	rlcf	___flmul@prod^0,f,c
  6243  0021A0  3640               	rlcf	(___flmul@prod+1)^0,f,c
  6244  0021A2  3641               	rlcf	(___flmul@prod+2)^0,f,c
  6245  0021A4  3642               	rlcf	(___flmul@prod+3)^0,f,c
  6246  0021A6  AE3D               	btfss	(___flmul@grs+3)^0,7,c
  6247  0021A8  EFD8  F010         	goto	u5111
  6248  0021AC  EFDA  F010         	goto	u5110
  6249  0021B0                     u5111:
  6250  0021B0  EFDB  F010         	goto	l1080
  6251  0021B4                     u5110:
  6252  0021B4  803F               	bsf	___flmul@prod^0,0,c
  6253  0021B6                     l1080:
  6254  0021B6  90D8               	bcf	status,0,c
  6255  0021B8  363A               	rlcf	___flmul@grs^0,f,c
  6256  0021BA  363B               	rlcf	(___flmul@grs+1)^0,f,c
  6257  0021BC  363C               	rlcf	(___flmul@grs+2)^0,f,c
  6258  0021BE  363D               	rlcf	(___flmul@grs+3)^0,f,c
  6259  0021C0  0643               	decf	___flmul@temp^0,f,c
  6260  0021C2  A0D8               	btfss	status,0,c
  6261  0021C4  0644               	decf	(___flmul@temp+1)^0,f,c
  6262  0021C6                     l4740:
  6263  0021C6  AE41               	btfss	(___flmul@prod+2)^0,7,c
  6264  0021C8  EFE8  F010         	goto	u5121
  6265  0021CC  EFEA  F010         	goto	u5120
  6266  0021D0                     u5121:
  6267  0021D0  EFCE  F010         	goto	l4734
  6268  0021D4                     u5120:
  6269  0021D4  0E00               	movlw	0
  6270  0021D6  6E39               	movwf	___flmul@aexp^0,c
  6271  0021D8  AE3D               	btfss	(___flmul@grs+3)^0,7,c
  6272  0021DA  EFF1  F010         	goto	u5131
  6273  0021DE  EFF3  F010         	goto	u5130
  6274  0021E2                     u5131:
  6275  0021E2  EF17  F011         	goto	l1082
  6276  0021E6                     u5130:
  6277  0021E6  0EFF               	movlw	255
  6278  0021E8  143A               	andwf	___flmul@grs^0,w,c
  6279  0021EA  6E34               	movwf	??___flmul^0,c
  6280  0021EC  0EFF               	movlw	255
  6281  0021EE  143B               	andwf	(___flmul@grs+1)^0,w,c
  6282  0021F0  6E35               	movwf	(??___flmul+1)^0,c
  6283  0021F2  0EFF               	movlw	255
  6284  0021F4  143C               	andwf	(___flmul@grs+2)^0,w,c
  6285  0021F6  6E36               	movwf	(??___flmul+2)^0,c
  6286  0021F8  0E7F               	movlw	127
  6287  0021FA  143D               	andwf	(___flmul@grs+3)^0,w,c
  6288  0021FC  6E37               	movwf	(??___flmul+3)^0,c
  6289  0021FE  5034               	movf	??___flmul^0,w,c
  6290  002200  1035               	iorwf	(??___flmul+1)^0,w,c
  6291  002202  1036               	iorwf	(??___flmul+2)^0,w,c
  6292  002204  1037               	iorwf	(??___flmul+3)^0,w,c
  6293  002206  B4D8               	btfsc	status,2,c
  6294  002208  EF08  F011         	goto	u5141
  6295  00220C  EF0A  F011         	goto	u5140
  6296  002210                     u5141:
  6297  002210  EF0E  F011         	goto	l1083
  6298  002214                     u5140:
  6299  002214                     l4748:
  6300  002214  0E01               	movlw	1
  6301  002216  6E39               	movwf	___flmul@aexp^0,c
  6302  002218  EF17  F011         	goto	l1082
  6303  00221C                     l1083:
  6304  00221C  A03F               	btfss	___flmul@prod^0,0,c
  6305  00221E  EF13  F011         	goto	u5151
  6306  002222  EF15  F011         	goto	u5150
  6307  002226                     u5151:
  6308  002226  EF17  F011         	goto	l1082
  6309  00222A                     u5150:
  6310  00222A  EF0A  F011         	goto	l4748
  6311  00222E                     l1082:
  6312  00222E  5039               	movf	___flmul@aexp^0,w,c
  6313  002230  B4D8               	btfsc	status,2,c
  6314  002232  EF1D  F011         	goto	u5161
  6315  002236  EF1F  F011         	goto	u5160
  6316  00223A                     u5161:
  6317  00223A  EF43  F011         	goto	l4760
  6318  00223E                     u5160:
  6319  00223E  0E01               	movlw	1
  6320  002240  263F               	addwf	___flmul@prod^0,f,c
  6321  002242  0E00               	movlw	0
  6322  002244  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6323  002246  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6324  002248  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6325  00224A  A042               	btfss	(___flmul@prod+3)^0,0,c
  6326  00224C  EF2A  F011         	goto	u5171
  6327  002250  EF2C  F011         	goto	u5170
  6328  002254                     u5171:
  6329  002254  EF43  F011         	goto	l4760
  6330  002258                     u5170:
  6331  002258  C03F  F034         	movff	___flmul@prod,??___flmul
  6332  00225C  C040  F035         	movff	___flmul@prod+1,??___flmul+1
  6333  002260  C041  F036         	movff	___flmul@prod+2,??___flmul+2
  6334  002264  C042  F037         	movff	___flmul@prod+3,??___flmul+3
  6335  002268  3437               	rlcf	(??___flmul+3)^0,w,c
  6336  00226A  3237               	rrcf	(??___flmul+3)^0,f,c
  6337  00226C  3236               	rrcf	(??___flmul+2)^0,f,c
  6338  00226E  3235               	rrcf	(??___flmul+1)^0,f,c
  6339  002270  3234               	rrcf	??___flmul^0,f,c
  6340  002272  C034  F03F         	movff	??___flmul,___flmul@prod
  6341  002276  C035  F040         	movff	??___flmul+1,___flmul@prod+1
  6342  00227A  C036  F041         	movff	??___flmul+2,___flmul@prod+2
  6343  00227E  C037  F042         	movff	??___flmul+3,___flmul@prod+3
  6344  002282  4A43               	infsnz	___flmul@temp^0,f,c
  6345  002284  2A44               	incf	(___flmul@temp+1)^0,f,c
  6346  002286                     l4760:
  6347  002286  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6348  002288  EF4E  F011         	goto	u5181
  6349  00228C  5044               	movf	(___flmul@temp+1)^0,w,c
  6350  00228E  E108               	bnz	u5180
  6351  002290  2843               	incf	___flmul@temp^0,w,c
  6352  002292  A0D8               	btfss	status,0,c
  6353  002294  EF4E  F011         	goto	u5181
  6354  002298  EF50  F011         	goto	u5180
  6355  00229C                     u5181:
  6356  00229C  EF5A  F011         	goto	l4764
  6357  0022A0                     u5180:
  6358  0022A0  0E00               	movlw	0
  6359  0022A2  6E3F               	movwf	___flmul@prod^0,c
  6360  0022A4  0E00               	movlw	0
  6361  0022A6  6E40               	movwf	(___flmul@prod+1)^0,c
  6362  0022A8  0E80               	movlw	128
  6363  0022AA  6E41               	movwf	(___flmul@prod+2)^0,c
  6364  0022AC  0E7F               	movlw	127
  6365  0022AE  6E42               	movwf	(___flmul@prod+3)^0,c
  6366  0022B0  EF88  F011         	goto	l4776
  6367  0022B4                     l4764:
  6368  0022B4  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6369  0022B6  EF67  F011         	goto	u5190
  6370  0022BA  5044               	movf	(___flmul@temp+1)^0,w,c
  6371  0022BC  E106               	bnz	u5191
  6372  0022BE  0443               	decf	___flmul@temp^0,w,c
  6373  0022C0  B0D8               	btfsc	status,0,c
  6374  0022C2  EF65  F011         	goto	u5191
  6375  0022C6  EF67  F011         	goto	u5190
  6376  0022CA                     u5191:
  6377  0022CA  EF73  F011         	goto	l1090
  6378  0022CE                     u5190:
  6379  0022CE  0E00               	movlw	0
  6380  0022D0  6E3F               	movwf	___flmul@prod^0,c
  6381  0022D2  0E00               	movlw	0
  6382  0022D4  6E40               	movwf	(___flmul@prod+1)^0,c
  6383  0022D6  0E00               	movlw	0
  6384  0022D8  6E41               	movwf	(___flmul@prod+2)^0,c
  6385  0022DA  0E00               	movlw	0
  6386  0022DC  6E42               	movwf	(___flmul@prod+3)^0,c
  6387  0022DE  0E00               	movlw	0
  6388  0022E0  6E38               	movwf	___flmul@sign^0,c
  6389  0022E2  EF88  F011         	goto	l4776
  6390  0022E6                     l1090:
  6391  0022E6  C043  F03E         	movff	___flmul@temp,___flmul@bexp
  6392  0022EA  0EFF               	movlw	255
  6393  0022EC  163F               	andwf	___flmul@prod^0,f,c
  6394  0022EE  0EFF               	movlw	255
  6395  0022F0  1640               	andwf	(___flmul@prod+1)^0,f,c
  6396  0022F2  0E7F               	movlw	127
  6397  0022F4  1641               	andwf	(___flmul@prod+2)^0,f,c
  6398  0022F6  0E00               	movlw	0
  6399  0022F8  1642               	andwf	(___flmul@prod+3)^0,f,c
  6400  0022FA  A03E               	btfss	___flmul@bexp^0,0,c
  6401  0022FC  EF82  F011         	goto	u5201
  6402  002300  EF84  F011         	goto	u5200
  6403  002304                     u5201:
  6404  002304  EF85  F011         	goto	l4774
  6405  002308                     u5200:
  6406  002308  8E41               	bsf	(___flmul@prod+2)^0,7,c
  6407  00230A                     l4774:
  6408  00230A  90D8               	bcf	status,0,c
  6409  00230C  303E               	rrcf	___flmul@bexp^0,w,c
  6410  00230E  6E42               	movwf	(___flmul@prod+3)^0,c
  6411  002310                     l4776:
  6412  002310  5038               	movf	___flmul@sign^0,w,c
  6413  002312  1242               	iorwf	(___flmul@prod+3)^0,f,c
  6414  002314  C03F  F02C         	movff	___flmul@prod,?___flmul
  6415  002318  C040  F02D         	movff	___flmul@prod+1,?___flmul+1
  6416  00231C  C041  F02E         	movff	___flmul@prod+2,?___flmul+2
  6417  002320  C042  F02F         	movff	___flmul@prod+3,?___flmul+3
  6418  002324                     l1077:
  6419  002324  0012               	return		;funcret
  6420  002326                     __end_of___flmul:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function ___fldiv *****************
  6424 ;; Defined at:
  6425 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  b               4   18[COMRAM] unsigned char 
  6428 ;;  a               4   22[COMRAM] unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  grs             4   37[COMRAM] unsigned long 
  6431 ;;  rem             4   30[COMRAM] unsigned long 
  6432 ;;  new_exp         2   35[COMRAM] short 
  6433 ;;  aexp            1   42[COMRAM] unsigned char 
  6434 ;;  bexp            1   41[COMRAM] unsigned char 
  6435 ;;  sign            1   34[COMRAM] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  4   18[COMRAM] unsigned char 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;Total ram usage:       25 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 2
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_determine_color_new
  6456 ;;		_main
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text24
  6461  002326                     __ptext24:
  6462                           	callstack 0
  6463  002326                     ___fldiv:
  6464                           	callstack 27
  6465  002326  5016               	movf	(___fldiv@b+3)^0,w,c
  6466  002328  0B80               	andlw	128
  6467  00232A  6E23               	movwf	___fldiv@sign^0,c
  6468  00232C  5016               	movf	(___fldiv@b+3)^0,w,c
  6469  00232E  2416               	addwf	(___fldiv@b+3)^0,w,c
  6470  002330  6E2A               	movwf	___fldiv@bexp^0,c
  6471  002332  AE15               	btfss	(___fldiv@b+2)^0,7,c
  6472  002334  EF9E  F011         	goto	u4791
  6473  002338  EFA0  F011         	goto	u4790
  6474  00233C                     u4791:
  6475  00233C  EFA1  F011         	goto	l4520
  6476  002340                     u4790:
  6477  002340  802A               	bsf	___fldiv@bexp^0,0,c
  6478  002342                     l4520:
  6479  002342  502A               	movf	___fldiv@bexp^0,w,c
  6480  002344  B4D8               	btfsc	status,2,c
  6481  002346  EFA7  F011         	goto	u4801
  6482  00234A  EFA9  F011         	goto	u4800
  6483  00234E                     u4801:
  6484  00234E  EFBE  F011         	goto	l4530
  6485  002352                     u4800:
  6486  002352  282A               	incf	___fldiv@bexp^0,w,c
  6487  002354  A4D8               	btfss	status,2,c
  6488  002356  EFAF  F011         	goto	u4811
  6489  00235A  EFB1  F011         	goto	u4810
  6490  00235E                     u4811:
  6491  00235E  EFB9  F011         	goto	l4526
  6492  002362                     u4810:
  6493  002362  0E00               	movlw	0
  6494  002364  6E13               	movwf	___fldiv@b^0,c
  6495  002366  0E00               	movlw	0
  6496  002368  6E14               	movwf	(___fldiv@b+1)^0,c
  6497  00236A  0E00               	movlw	0
  6498  00236C  6E15               	movwf	(___fldiv@b+2)^0,c
  6499  00236E  0E00               	movlw	0
  6500  002370  6E16               	movwf	(___fldiv@b+3)^0,c
  6501  002372                     l4526:
  6502  002372  8E15               	bsf	(___fldiv@b+2)^0,7,c
  6503  002374  0E00               	movlw	0
  6504  002376  6E16               	movwf	(___fldiv@b+3)^0,c
  6505  002378  EFC6  F011         	goto	l4532
  6506  00237C                     l4530:
  6507  00237C  0E00               	movlw	0
  6508  00237E  6E13               	movwf	___fldiv@b^0,c
  6509  002380  0E00               	movlw	0
  6510  002382  6E14               	movwf	(___fldiv@b+1)^0,c
  6511  002384  0E00               	movlw	0
  6512  002386  6E15               	movwf	(___fldiv@b+2)^0,c
  6513  002388  0E00               	movlw	0
  6514  00238A  6E16               	movwf	(___fldiv@b+3)^0,c
  6515  00238C                     l4532:
  6516  00238C  501A               	movf	(___fldiv@a+3)^0,w,c
  6517  00238E  0B80               	andlw	128
  6518  002390  1A23               	xorwf	___fldiv@sign^0,f,c
  6519  002392  501A               	movf	(___fldiv@a+3)^0,w,c
  6520  002394  241A               	addwf	(___fldiv@a+3)^0,w,c
  6521  002396  6E2B               	movwf	___fldiv@aexp^0,c
  6522  002398  AE19               	btfss	(___fldiv@a+2)^0,7,c
  6523  00239A  EFD1  F011         	goto	u4821
  6524  00239E  EFD3  F011         	goto	u4820
  6525  0023A2                     u4821:
  6526  0023A2  EFD4  F011         	goto	l4540
  6527  0023A6                     u4820:
  6528  0023A6  802B               	bsf	___fldiv@aexp^0,0,c
  6529  0023A8                     l4540:
  6530  0023A8  502B               	movf	___fldiv@aexp^0,w,c
  6531  0023AA  B4D8               	btfsc	status,2,c
  6532  0023AC  EFDA  F011         	goto	u4831
  6533  0023B0  EFDC  F011         	goto	u4830
  6534  0023B4                     u4831:
  6535  0023B4  EFF1  F011         	goto	l4550
  6536  0023B8                     u4830:
  6537  0023B8  282B               	incf	___fldiv@aexp^0,w,c
  6538  0023BA  A4D8               	btfss	status,2,c
  6539  0023BC  EFE2  F011         	goto	u4841
  6540  0023C0  EFE4  F011         	goto	u4840
  6541  0023C4                     u4841:
  6542  0023C4  EFEC  F011         	goto	l4546
  6543  0023C8                     u4840:
  6544  0023C8  0E00               	movlw	0
  6545  0023CA  6E17               	movwf	___fldiv@a^0,c
  6546  0023CC  0E00               	movlw	0
  6547  0023CE  6E18               	movwf	(___fldiv@a+1)^0,c
  6548  0023D0  0E00               	movlw	0
  6549  0023D2  6E19               	movwf	(___fldiv@a+2)^0,c
  6550  0023D4  0E00               	movlw	0
  6551  0023D6  6E1A               	movwf	(___fldiv@a+3)^0,c
  6552  0023D8                     l4546:
  6553  0023D8  8E19               	bsf	(___fldiv@a+2)^0,7,c
  6554  0023DA  0E00               	movlw	0
  6555  0023DC  6E1A               	movwf	(___fldiv@a+3)^0,c
  6556  0023DE  EFF9  F011         	goto	l4552
  6557  0023E2                     l4550:
  6558  0023E2  0E00               	movlw	0
  6559  0023E4  6E17               	movwf	___fldiv@a^0,c
  6560  0023E6  0E00               	movlw	0
  6561  0023E8  6E18               	movwf	(___fldiv@a+1)^0,c
  6562  0023EA  0E00               	movlw	0
  6563  0023EC  6E19               	movwf	(___fldiv@a+2)^0,c
  6564  0023EE  0E00               	movlw	0
  6565  0023F0  6E1A               	movwf	(___fldiv@a+3)^0,c
  6566  0023F2                     l4552:
  6567  0023F2  5017               	movf	___fldiv@a^0,w,c
  6568  0023F4  1018               	iorwf	(___fldiv@a+1)^0,w,c
  6569  0023F6  1019               	iorwf	(___fldiv@a+2)^0,w,c
  6570  0023F8  101A               	iorwf	(___fldiv@a+3)^0,w,c
  6571  0023FA  A4D8               	btfss	status,2,c
  6572  0023FC  EF02  F012         	goto	u4851
  6573  002400  EF04  F012         	goto	u4850
  6574  002404                     u4851:
  6575  002404  EF1C  F012         	goto	l4564
  6576  002408                     u4850:
  6577  002408  0E00               	movlw	0
  6578  00240A  6E13               	movwf	___fldiv@b^0,c
  6579  00240C  0E00               	movlw	0
  6580  00240E  6E14               	movwf	(___fldiv@b+1)^0,c
  6581  002410  0E00               	movlw	0
  6582  002412  6E15               	movwf	(___fldiv@b+2)^0,c
  6583  002414  0E00               	movlw	0
  6584  002416  6E16               	movwf	(___fldiv@b+3)^0,c
  6585  002418  0E80               	movlw	128
  6586  00241A  1215               	iorwf	(___fldiv@b+2)^0,f,c
  6587  00241C  0E7F               	movlw	127
  6588  00241E  1216               	iorwf	(___fldiv@b+3)^0,f,c
  6589  002420                     l4558:
  6590  002420  5023               	movf	___fldiv@sign^0,w,c
  6591  002422  1216               	iorwf	(___fldiv@b+3)^0,f,c
  6592  002424  C013  F013         	movff	___fldiv@b,?___fldiv
  6593  002428  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
  6594  00242C  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
  6595  002430  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
  6596  002434  EF5F  F013         	goto	l1041
  6597  002438                     l4564:
  6598  002438  502A               	movf	___fldiv@bexp^0,w,c
  6599  00243A  A4D8               	btfss	status,2,c
  6600  00243C  EF22  F012         	goto	u4861
  6601  002440  EF24  F012         	goto	u4860
  6602  002444                     u4861:
  6603  002444  EF2E  F012         	goto	l4572
  6604  002448                     u4860:
  6605  002448  0E00               	movlw	0
  6606  00244A  6E13               	movwf	?___fldiv^0,c
  6607  00244C  0E00               	movlw	0
  6608  00244E  6E14               	movwf	(?___fldiv+1)^0,c
  6609  002450  0E00               	movlw	0
  6610  002452  6E15               	movwf	(?___fldiv+2)^0,c
  6611  002454  0E00               	movlw	0
  6612  002456  6E16               	movwf	(?___fldiv+3)^0,c
  6613  002458  EF5F  F013         	goto	l1041
  6614  00245C                     l4572:
  6615  00245C  502B               	movf	___fldiv@aexp^0,w,c
  6616  00245E  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
  6617  002462  6A1C               	clrf	(??___fldiv+1)^0,c
  6618  002464  5E1B               	subwf	??___fldiv^0,f,c
  6619  002466  0E00               	movlw	0
  6620  002468  5A1C               	subwfb	(??___fldiv+1)^0,f,c
  6621  00246A  0E7F               	movlw	127
  6622  00246C  241B               	addwf	??___fldiv^0,w,c
  6623  00246E  6E24               	movwf	___fldiv@new_exp^0,c
  6624  002470  0E00               	movlw	0
  6625  002472  201C               	addwfc	(??___fldiv+1)^0,w,c
  6626  002474  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  6627  002476  C013  F01F         	movff	___fldiv@b,___fldiv@rem
  6628  00247A  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
  6629  00247E  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
  6630  002482  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
  6631  002486  0E00               	movlw	0
  6632  002488  6E13               	movwf	___fldiv@b^0,c
  6633  00248A  0E00               	movlw	0
  6634  00248C  6E14               	movwf	(___fldiv@b+1)^0,c
  6635  00248E  0E00               	movlw	0
  6636  002490  6E15               	movwf	(___fldiv@b+2)^0,c
  6637  002492  0E00               	movlw	0
  6638  002494  6E16               	movwf	(___fldiv@b+3)^0,c
  6639  002496  0E00               	movlw	0
  6640  002498  6E26               	movwf	___fldiv@grs^0,c
  6641  00249A  0E00               	movlw	0
  6642  00249C  6E27               	movwf	(___fldiv@grs+1)^0,c
  6643  00249E  0E00               	movlw	0
  6644  0024A0  6E28               	movwf	(___fldiv@grs+2)^0,c
  6645  0024A2  0E00               	movlw	0
  6646  0024A4  6E29               	movwf	(___fldiv@grs+3)^0,c
  6647  0024A6  0E00               	movlw	0
  6648  0024A8  6E2B               	movwf	___fldiv@aexp^0,c
  6649  0024AA  EF8F  F012         	goto	l1043
  6650  0024AE                     l4582:
  6651  0024AE  502B               	movf	___fldiv@aexp^0,w,c
  6652  0024B0  B4D8               	btfsc	status,2,c
  6653  0024B2  EF5D  F012         	goto	u4871
  6654  0024B6  EF5F  F012         	goto	u4870
  6655  0024BA                     u4871:
  6656  0024BA  EF76  F012         	goto	l4590
  6657  0024BE                     u4870:
  6658  0024BE  90D8               	bcf	status,0,c
  6659  0024C0  361F               	rlcf	___fldiv@rem^0,f,c
  6660  0024C2  3620               	rlcf	(___fldiv@rem+1)^0,f,c
  6661  0024C4  3621               	rlcf	(___fldiv@rem+2)^0,f,c
  6662  0024C6  3622               	rlcf	(___fldiv@rem+3)^0,f,c
  6663  0024C8  90D8               	bcf	status,0,c
  6664  0024CA  3613               	rlcf	___fldiv@b^0,f,c
  6665  0024CC  3614               	rlcf	(___fldiv@b+1)^0,f,c
  6666  0024CE  3615               	rlcf	(___fldiv@b+2)^0,f,c
  6667  0024D0  3616               	rlcf	(___fldiv@b+3)^0,f,c
  6668  0024D2  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  6669  0024D4  EF6E  F012         	goto	u4881
  6670  0024D8  EF70  F012         	goto	u4880
  6671  0024DC                     u4881:
  6672  0024DC  EF71  F012         	goto	l1046
  6673  0024E0                     u4880:
  6674  0024E0  8013               	bsf	___fldiv@b^0,0,c
  6675  0024E2                     l1046:
  6676  0024E2  90D8               	bcf	status,0,c
  6677  0024E4  3626               	rlcf	___fldiv@grs^0,f,c
  6678  0024E6  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  6679  0024E8  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  6680  0024EA  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  6681  0024EC                     l4590:
  6682  0024EC  5017               	movf	___fldiv@a^0,w,c
  6683  0024EE  5C1F               	subwf	___fldiv@rem^0,w,c
  6684  0024F0  5018               	movf	(___fldiv@a+1)^0,w,c
  6685  0024F2  5820               	subwfb	(___fldiv@rem+1)^0,w,c
  6686  0024F4  5019               	movf	(___fldiv@a+2)^0,w,c
  6687  0024F6  5821               	subwfb	(___fldiv@rem+2)^0,w,c
  6688  0024F8  501A               	movf	(___fldiv@a+3)^0,w,c
  6689  0024FA  5822               	subwfb	(___fldiv@rem+3)^0,w,c
  6690  0024FC  A0D8               	btfss	status,0,c
  6691  0024FE  EF83  F012         	goto	u4891
  6692  002502  EF85  F012         	goto	u4890
  6693  002506                     u4891:
  6694  002506  EF8E  F012         	goto	l4596
  6695  00250A                     u4890:
  6696  00250A  8C29               	bsf	(___fldiv@grs+3)^0,6,c
  6697  00250C  5017               	movf	___fldiv@a^0,w,c
  6698  00250E  5E1F               	subwf	___fldiv@rem^0,f,c
  6699  002510  5018               	movf	(___fldiv@a+1)^0,w,c
  6700  002512  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
  6701  002514  5019               	movf	(___fldiv@a+2)^0,w,c
  6702  002516  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
  6703  002518  501A               	movf	(___fldiv@a+3)^0,w,c
  6704  00251A  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
  6705  00251C                     l4596:
  6706  00251C  2A2B               	incf	___fldiv@aexp^0,f,c
  6707  00251E                     l1043:
  6708  00251E  0E19               	movlw	25
  6709  002520  642B               	cpfsgt	___fldiv@aexp^0,c
  6710  002522  EF95  F012         	goto	u4901
  6711  002526  EF97  F012         	goto	u4900
  6712  00252A                     u4901:
  6713  00252A  EF57  F012         	goto	l4582
  6714  00252E                     u4900:
  6715  00252E  501F               	movf	___fldiv@rem^0,w,c
  6716  002530  1020               	iorwf	(___fldiv@rem+1)^0,w,c
  6717  002532  1021               	iorwf	(___fldiv@rem+2)^0,w,c
  6718  002534  1022               	iorwf	(___fldiv@rem+3)^0,w,c
  6719  002536  B4D8               	btfsc	status,2,c
  6720  002538  EFA0  F012         	goto	u4911
  6721  00253C  EFA2  F012         	goto	u4910
  6722  002540                     u4911:
  6723  002540  EFBA  F012         	goto	l4608
  6724  002544                     u4910:
  6725  002544  8026               	bsf	___fldiv@grs^0,0,c
  6726  002546  EFBA  F012         	goto	l4608
  6727  00254A                     l4602:
  6728  00254A  90D8               	bcf	status,0,c
  6729  00254C  3613               	rlcf	___fldiv@b^0,f,c
  6730  00254E  3614               	rlcf	(___fldiv@b+1)^0,f,c
  6731  002550  3615               	rlcf	(___fldiv@b+2)^0,f,c
  6732  002552  3616               	rlcf	(___fldiv@b+3)^0,f,c
  6733  002554  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  6734  002556  EFAF  F012         	goto	u4921
  6735  00255A  EFB1  F012         	goto	u4920
  6736  00255E                     u4921:
  6737  00255E  EFB2  F012         	goto	l1052
  6738  002562                     u4920:
  6739  002562  8013               	bsf	___fldiv@b^0,0,c
  6740  002564                     l1052:
  6741  002564  90D8               	bcf	status,0,c
  6742  002566  3626               	rlcf	___fldiv@grs^0,f,c
  6743  002568  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  6744  00256A  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  6745  00256C  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  6746  00256E  0624               	decf	___fldiv@new_exp^0,f,c
  6747  002570  A0D8               	btfss	status,0,c
  6748  002572  0625               	decf	(___fldiv@new_exp+1)^0,f,c
  6749  002574                     l4608:
  6750  002574  AE15               	btfss	(___fldiv@b+2)^0,7,c
  6751  002576  EFBF  F012         	goto	u4931
  6752  00257A  EFC1  F012         	goto	u4930
  6753  00257E                     u4931:
  6754  00257E  EFA5  F012         	goto	l4602
  6755  002582                     u4930:
  6756  002582  0E00               	movlw	0
  6757  002584  6E2B               	movwf	___fldiv@aexp^0,c
  6758  002586  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  6759  002588  EFC8  F012         	goto	u4941
  6760  00258C  EFCA  F012         	goto	u4940
  6761  002590                     u4941:
  6762  002590  EFEE  F012         	goto	l1054
  6763  002594                     u4940:
  6764  002594  0EFF               	movlw	255
  6765  002596  1426               	andwf	___fldiv@grs^0,w,c
  6766  002598  6E1B               	movwf	??___fldiv^0,c
  6767  00259A  0EFF               	movlw	255
  6768  00259C  1427               	andwf	(___fldiv@grs+1)^0,w,c
  6769  00259E  6E1C               	movwf	(??___fldiv+1)^0,c
  6770  0025A0  0EFF               	movlw	255
  6771  0025A2  1428               	andwf	(___fldiv@grs+2)^0,w,c
  6772  0025A4  6E1D               	movwf	(??___fldiv+2)^0,c
  6773  0025A6  0E7F               	movlw	127
  6774  0025A8  1429               	andwf	(___fldiv@grs+3)^0,w,c
  6775  0025AA  6E1E               	movwf	(??___fldiv+3)^0,c
  6776  0025AC  501B               	movf	??___fldiv^0,w,c
  6777  0025AE  101C               	iorwf	(??___fldiv+1)^0,w,c
  6778  0025B0  101D               	iorwf	(??___fldiv+2)^0,w,c
  6779  0025B2  101E               	iorwf	(??___fldiv+3)^0,w,c
  6780  0025B4  B4D8               	btfsc	status,2,c
  6781  0025B6  EFDF  F012         	goto	u4951
  6782  0025BA  EFE1  F012         	goto	u4950
  6783  0025BE                     u4951:
  6784  0025BE  EFE5  F012         	goto	l1055
  6785  0025C2                     u4950:
  6786  0025C2                     l4616:
  6787  0025C2  0E01               	movlw	1
  6788  0025C4  6E2B               	movwf	___fldiv@aexp^0,c
  6789  0025C6  EFEE  F012         	goto	l1054
  6790  0025CA                     l1055:
  6791  0025CA  A013               	btfss	___fldiv@b^0,0,c
  6792  0025CC  EFEA  F012         	goto	u4961
  6793  0025D0  EFEC  F012         	goto	u4960
  6794  0025D4                     u4961:
  6795  0025D4  EFEE  F012         	goto	l1054
  6796  0025D8                     u4960:
  6797  0025D8  EFE1  F012         	goto	l4616
  6798  0025DC                     l1054:
  6799  0025DC  502B               	movf	___fldiv@aexp^0,w,c
  6800  0025DE  B4D8               	btfsc	status,2,c
  6801  0025E0  EFF4  F012         	goto	u4971
  6802  0025E4  EFF6  F012         	goto	u4970
  6803  0025E8                     u4971:
  6804  0025E8  EF1A  F013         	goto	l4628
  6805  0025EC                     u4970:
  6806  0025EC  0E01               	movlw	1
  6807  0025EE  2613               	addwf	___fldiv@b^0,f,c
  6808  0025F0  0E00               	movlw	0
  6809  0025F2  2214               	addwfc	(___fldiv@b+1)^0,f,c
  6810  0025F4  2215               	addwfc	(___fldiv@b+2)^0,f,c
  6811  0025F6  2216               	addwfc	(___fldiv@b+3)^0,f,c
  6812  0025F8  A016               	btfss	(___fldiv@b+3)^0,0,c
  6813  0025FA  EF01  F013         	goto	u4981
  6814  0025FE  EF03  F013         	goto	u4980
  6815  002602                     u4981:
  6816  002602  EF1A  F013         	goto	l4628
  6817  002606                     u4980:
  6818  002606  C013  F01B         	movff	___fldiv@b,??___fldiv
  6819  00260A  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
  6820  00260E  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
  6821  002612  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
  6822  002616  341E               	rlcf	(??___fldiv+3)^0,w,c
  6823  002618  321E               	rrcf	(??___fldiv+3)^0,f,c
  6824  00261A  321D               	rrcf	(??___fldiv+2)^0,f,c
  6825  00261C  321C               	rrcf	(??___fldiv+1)^0,f,c
  6826  00261E  321B               	rrcf	??___fldiv^0,f,c
  6827  002620  C01B  F013         	movff	??___fldiv,___fldiv@b
  6828  002624  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
  6829  002628  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
  6830  00262C  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
  6831  002630  4A24               	infsnz	___fldiv@new_exp^0,f,c
  6832  002632  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
  6833  002634                     l4628:
  6834  002634  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6835  002636  EF25  F013         	goto	u4991
  6836  00263A  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  6837  00263C  E108               	bnz	u4990
  6838  00263E  2824               	incf	___fldiv@new_exp^0,w,c
  6839  002640  A0D8               	btfss	status,0,c
  6840  002642  EF25  F013         	goto	u4991
  6841  002646  EF27  F013         	goto	u4990
  6842  00264A                     u4991:
  6843  00264A  EF32  F013         	goto	l4632
  6844  00264E                     u4990:
  6845  00264E  0E00               	movlw	0
  6846  002650  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  6847  002652  6824               	setf	___fldiv@new_exp^0,c
  6848  002654  0E00               	movlw	0
  6849  002656  6E13               	movwf	___fldiv@b^0,c
  6850  002658  0E00               	movlw	0
  6851  00265A  6E14               	movwf	(___fldiv@b+1)^0,c
  6852  00265C  0E00               	movlw	0
  6853  00265E  6E15               	movwf	(___fldiv@b+2)^0,c
  6854  002660  0E00               	movlw	0
  6855  002662  6E16               	movwf	(___fldiv@b+3)^0,c
  6856  002664                     l4632:
  6857  002664  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6858  002666  EF3F  F013         	goto	u5000
  6859  00266A  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  6860  00266C  E106               	bnz	u5001
  6861  00266E  0424               	decf	___fldiv@new_exp^0,w,c
  6862  002670  B0D8               	btfsc	status,0,c
  6863  002672  EF3D  F013         	goto	u5001
  6864  002676  EF3F  F013         	goto	u5000
  6865  00267A                     u5001:
  6866  00267A  EF4D  F013         	goto	l4636
  6867  00267E                     u5000:
  6868  00267E  0E00               	movlw	0
  6869  002680  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  6870  002682  0E00               	movlw	0
  6871  002684  6E24               	movwf	___fldiv@new_exp^0,c
  6872  002686  0E00               	movlw	0
  6873  002688  6E13               	movwf	___fldiv@b^0,c
  6874  00268A  0E00               	movlw	0
  6875  00268C  6E14               	movwf	(___fldiv@b+1)^0,c
  6876  00268E  0E00               	movlw	0
  6877  002690  6E15               	movwf	(___fldiv@b+2)^0,c
  6878  002692  0E00               	movlw	0
  6879  002694  6E16               	movwf	(___fldiv@b+3)^0,c
  6880  002696  0E00               	movlw	0
  6881  002698  6E23               	movwf	___fldiv@sign^0,c
  6882  00269A                     l4636:
  6883  00269A  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
  6884  00269E  A02A               	btfss	___fldiv@bexp^0,0,c
  6885  0026A0  EF54  F013         	goto	u5011
  6886  0026A4  EF56  F013         	goto	u5010
  6887  0026A8                     u5011:
  6888  0026A8  EF59  F013         	goto	l4642
  6889  0026AC                     u5010:
  6890  0026AC  8E15               	bsf	(___fldiv@b+2)^0,7,c
  6891  0026AE  EF5A  F013         	goto	l4644
  6892  0026B2                     l4642:
  6893  0026B2  9E15               	bcf	(___fldiv@b+2)^0,7,c
  6894  0026B4                     l4644:
  6895  0026B4  90D8               	bcf	status,0,c
  6896  0026B6  302A               	rrcf	___fldiv@bexp^0,w,c
  6897  0026B8  6E16               	movwf	(___fldiv@b+3)^0,c
  6898  0026BA  EF10  F012         	goto	l4558
  6899  0026BE                     l1041:
  6900  0026BE  0012               	return		;funcret
  6901  0026C0                     __end_of___fldiv:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _color_click_init *****************
  6905 ;; Defined at:
  6906 ;;		line 8 in file "color.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;Total ram usage:        1 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 5
  6927 ;; This function calls:
  6928 ;;		_I2C_2_Master_Init
  6929 ;;		_color_writetoaddr
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text25
  6936  003916                     __ptext25:
  6937                           	callstack 0
  6938  003916                     _color_click_init:
  6939                           	callstack 25
  6940  003916                     
  6941                           ;color.c: 11:     I2C_2_Master_Init();
  6942  003916  ECD3  F01C         	call	_I2C_2_Master_Init	;wreg free
  6943  00391A                     
  6944                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  6945  00391A  0E01               	movlw	1
  6946  00391C  6E07               	movwf	color_writetoaddr@value^0,c
  6947  00391E  0E00               	movlw	0
  6948  003920  EC36  F01D         	call	_color_writetoaddr
  6949  003924                     
  6950                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6951  003924  0E3F               	movlw	63
  6952  003926  6E09               	movwf	??_color_click_init^0,c
  6953  003928  0E55               	movlw	85
  6954  00392A                     u6107:
  6955  00392A  2EE8               	decfsz	wreg,f,c
  6956  00392C  D7FE               	bra	u6107
  6957  00392E  2E09               	decfsz	??_color_click_init^0,f,c
  6958  003930  D7FC               	bra	u6107
  6959  003932  F000               	nop	
  6960  003934                     
  6961                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  6962  003934  0E03               	movlw	3
  6963  003936  6E07               	movwf	color_writetoaddr@value^0,c
  6964  003938  0E00               	movlw	0
  6965  00393A  EC36  F01D         	call	_color_writetoaddr
  6966  00393E                     
  6967                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  6968  00393E  0ED5               	movlw	213
  6969  003940  6E07               	movwf	color_writetoaddr@value^0,c
  6970  003942  0E01               	movlw	1
  6971  003944  EC36  F01D         	call	_color_writetoaddr
  6972  003948  0012               	return		;funcret
  6973  00394A                     __end_of_color_click_init:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _color_writetoaddr *****************
  6977 ;; Defined at:
  6978 ;;		line 24 in file "color.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  address         1    wreg     unsigned char 
  6981 ;;  value           1    6[COMRAM] unsigned char 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  address         1    7[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6993 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6997 ;;Total ram usage:        2 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; Hardware stack levels required when called: 4
  7000 ;; This function calls:
  7001 ;;		_I2C_2_Master_Start
  7002 ;;		_I2C_2_Master_Stop
  7003 ;;		_I2C_2_Master_Write
  7004 ;; This function is called by:
  7005 ;;		_color_click_init
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text26
  7010  003A6C                     __ptext26:
  7011                           	callstack 0
  7012  003A6C                     _color_writetoaddr:
  7013                           	callstack 25
  7014                           
  7015                           ;incstack = 0
  7016                           ;color_writetoaddr@address stored from wreg
  7017  003A6C  6E08               	movwf	color_writetoaddr@address^0,c
  7018  003A6E                     
  7019                           ;color.c: 25:     I2C_2_Master_Start();
  7020  003A6E  EC7C  F01D         	call	_I2C_2_Master_Start	;wreg free
  7021                           
  7022                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7023  003A72  0E52               	movlw	82
  7024  003A74  EC6B  F01D         	call	_I2C_2_Master_Write
  7025                           
  7026                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7027  003A78  5008               	movf	color_writetoaddr@address^0,w,c
  7028  003A7A  0980               	iorlw	128
  7029  003A7C  EC6B  F01D         	call	_I2C_2_Master_Write
  7030                           
  7031                           ;color.c: 28:     I2C_2_Master_Write(value);
  7032  003A80  5007               	movf	color_writetoaddr@value^0,w,c
  7033  003A82  EC6B  F01D         	call	_I2C_2_Master_Write
  7034                           
  7035                           ;color.c: 29:     I2C_2_Master_Stop();
  7036  003A86  EC77  F01D         	call	_I2C_2_Master_Stop	;wreg free
  7037  003A8A  0012               	return		;funcret
  7038  003A8C                     __end_of_color_writetoaddr:
  7039                           	callstack 0
  7040                           
  7041 ;; *************** function _I2C_2_Master_Init *****************
  7042 ;; Defined at:
  7043 ;;		line 4 in file "i2c.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used: 1
  7063 ;; Hardware stack levels required when called: 2
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_color_click_init
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text27
  7072  0039A6                     __ptext27:
  7073                           	callstack 0
  7074  0039A6                     _I2C_2_Master_Init:
  7075                           	callstack 27
  7076  0039A6                     
  7077                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7078  0039A6  010E               	movlb	14	; () banked
  7079  0039A8  51D9               	movf	217,w,b	;volatile
  7080  0039AA  0BF0               	andlw	-16
  7081  0039AC  0908               	iorlw	8
  7082  0039AE  6FD9               	movwf	217,b	;volatile
  7083  0039B0                     
  7084                           ; BSR set to: 14
  7085                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7086  0039B0  8BD9               	bsf	217,5,b	;volatile
  7087                           
  7088                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7089  0039B2  0E9F               	movlw	159
  7090  0039B4  6FD6               	movwf	214,b	;volatile
  7091  0039B6                     
  7092                           ; BSR set to: 14
  7093                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7094  0039B6  8A84               	bsf	132,5,c	;volatile
  7095  0039B8                     
  7096                           ; BSR set to: 14
  7097                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7098  0039B8  8C84               	bsf	132,6,c	;volatile
  7099  0039BA                     
  7100                           ; BSR set to: 14
  7101                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7102  0039BA  9BA7               	bcf	167,5,b	;volatile
  7103  0039BC                     
  7104                           ; BSR set to: 14
  7105                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7106  0039BC  9DA7               	bcf	167,6,b	;volatile
  7107                           
  7108                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7109  0039BE  0E1D               	movlw	29
  7110  0039C0  6F1D               	movwf	29,b	;volatile
  7111                           
  7112                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7113  0039C2  0E1E               	movlw	30
  7114  0039C4  6F1C               	movwf	28,b	;volatile
  7115                           
  7116                           ;i2c.c: 18:   RD5PPS=0x1C;
  7117  0039C6  0E1C               	movlw	28
  7118  0039C8  6F6F               	movwf	111,b	;volatile
  7119                           
  7120                           ;i2c.c: 19:   RD6PPS=0x1B;
  7121  0039CA  0E1B               	movlw	27
  7122  0039CC  6F70               	movwf	112,b	;volatile
  7123  0039CE                     
  7124                           ; BSR set to: 14
  7125  0039CE  0012               	return		;funcret
  7126  0039D0                     __end_of_I2C_2_Master_Init:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _calibrateW *****************
  7130 ;; Defined at:
  7131 ;;		line 187 in file "color.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  m               2   15[COMRAM] PTR struct RGB_val
  7134 ;;		 -> main@test(24), 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;Total ram usage:        2 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 5
  7153 ;; This function calls:
  7154 ;;		_color_read_Blue
  7155 ;;		_color_read_Clear
  7156 ;;		_color_read_Green
  7157 ;;		_color_read_Red
  7158 ;; This function is called by:
  7159 ;;		_main
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text28
  7164  0035AE                     __ptext28:
  7165                           	callstack 0
  7166  0035AE                     _calibrateW:
  7167                           	callstack 25
  7168  0035AE                     
  7169                           ;color.c: 188:     (m->whiteC) = color_read_Clear();
  7170  0035AE  EC81  F01B         	call	_color_read_Clear	;wreg free
  7171  0035B2  EE20 F008          	lfsr	2,8
  7172  0035B6  5010               	movf	calibrateW@m^0,w,c
  7173  0035B8  26D9               	addwf	fsr2l,f,c
  7174  0035BA  5011               	movf	(calibrateW@m+1)^0,w,c
  7175  0035BC  22DA               	addwfc	fsr2h,f,c
  7176  0035BE  C009  FFDE         	movff	?_color_read_Clear,postinc2
  7177  0035C2  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  7178                           
  7179                           ;color.c: 189:     (m->whiteR) = color_read_Red();
  7180  0035C6  EC31  F01B         	call	_color_read_Red	;wreg free
  7181  0035CA  EE20 F00A          	lfsr	2,10
  7182  0035CE  5010               	movf	calibrateW@m^0,w,c
  7183  0035D0  26D9               	addwf	fsr2l,f,c
  7184  0035D2  5011               	movf	(calibrateW@m+1)^0,w,c
  7185  0035D4  22DA               	addwfc	fsr2h,f,c
  7186  0035D6  C009  FFDE         	movff	?_color_read_Red,postinc2
  7187  0035DA  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  7188                           
  7189                           ;color.c: 190:     (m->whiteG) = color_read_Green();
  7190  0035DE  EC59  F01B         	call	_color_read_Green	;wreg free
  7191  0035E2  EE20 F00C          	lfsr	2,12
  7192  0035E6  5010               	movf	calibrateW@m^0,w,c
  7193  0035E8  26D9               	addwf	fsr2l,f,c
  7194  0035EA  5011               	movf	(calibrateW@m+1)^0,w,c
  7195  0035EC  22DA               	addwfc	fsr2h,f,c
  7196  0035EE  C009  FFDE         	movff	?_color_read_Green,postinc2
  7197  0035F2  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  7198                           
  7199                           ;color.c: 191:     (m->whiteB) = color_read_Blue();
  7200  0035F6  ECA9  F01B         	call	_color_read_Blue	;wreg free
  7201  0035FA  EE20 F00E          	lfsr	2,14
  7202  0035FE  5010               	movf	calibrateW@m^0,w,c
  7203  003600  26D9               	addwf	fsr2l,f,c
  7204  003602  5011               	movf	(calibrateW@m+1)^0,w,c
  7205  003604  22DA               	addwfc	fsr2h,f,c
  7206  003606  C009  FFDE         	movff	?_color_read_Blue,postinc2
  7207  00360A  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  7208  00360E  0012               	return		;funcret
  7209  003610                     __end_of_calibrateW:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _color_read_Red *****************
  7213 ;; Defined at:
  7214 ;;		line 45 in file "color.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  tmp             2   13[COMRAM] unsigned int 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  2    8[COMRAM] unsigned int 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;Total ram usage:        7 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 4
  7235 ;; This function calls:
  7236 ;;		_I2C_2_Master_Read
  7237 ;;		_I2C_2_Master_RepStart
  7238 ;;		_I2C_2_Master_Start
  7239 ;;		_I2C_2_Master_Stop
  7240 ;;		_I2C_2_Master_Write
  7241 ;; This function is called by:
  7242 ;;		_read_colours
  7243 ;;		_calibrateW
  7244 ;;		_calibrateB
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text29
  7249  003662                     __ptext29:
  7250                           	callstack 0
  7251  003662                     _color_read_Red:
  7252                           	callstack 25
  7253  003662                     
  7254                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  7255  003662  EC7C  F01D         	call	_I2C_2_Master_Start	;wreg free
  7256                           
  7257                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  7258  003666  0E52               	movlw	82
  7259  003668  EC6B  F01D         	call	_I2C_2_Master_Write
  7260                           
  7261                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  7262  00366C  0EB6               	movlw	182
  7263  00366E  EC6B  F01D         	call	_I2C_2_Master_Write
  7264                           
  7265                           ;color.c: 51:  I2C_2_Master_RepStart();
  7266  003672  EC81  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  7267                           
  7268                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7269  003676  0E53               	movlw	83
  7270  003678  EC6B  F01D         	call	_I2C_2_Master_Write
  7271                           
  7272                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7273  00367C  0E01               	movlw	1
  7274  00367E  EC14  F01C         	call	_I2C_2_Master_Read
  7275  003682  6E0B               	movwf	??_color_read_Red^0,c
  7276  003684  500B               	movf	??_color_read_Red^0,w,c
  7277  003686  6E0E               	movwf	color_read_Red@tmp^0,c
  7278  003688  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  7279                           
  7280                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7281  00368A  0E00               	movlw	0
  7282  00368C  EC14  F01C         	call	_I2C_2_Master_Read
  7283  003690  6E0B               	movwf	??_color_read_Red^0,c
  7284  003692  500B               	movf	??_color_read_Red^0,w,c
  7285  003694  6E0D               	movwf	(??_color_read_Red+2)^0,c
  7286  003696  6A0C               	clrf	(??_color_read_Red+1)^0,c
  7287  003698  500E               	movf	color_read_Red@tmp^0,w,c
  7288  00369A  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  7289  00369C  6E0E               	movwf	color_read_Red@tmp^0,c
  7290  00369E  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  7291  0036A0  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  7292  0036A2  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  7293                           
  7294                           ;color.c: 55:  I2C_2_Master_Stop();
  7295  0036A4  EC77  F01D         	call	_I2C_2_Master_Stop	;wreg free
  7296  0036A8                     
  7297                           ;color.c: 56:  return tmp;
  7298  0036A8  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  7299  0036AC  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7300  0036B0  0012               	return		;funcret
  7301  0036B2                     __end_of_color_read_Red:
  7302                           	callstack 0
  7303                           
  7304 ;; *************** function _color_read_Green *****************
  7305 ;; Defined at:
  7306 ;;		line 59 in file "color.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  tmp             2   13[COMRAM] unsigned int 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  2    8[COMRAM] unsigned int 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;Total ram usage:        7 bytes
  7325 ;; Hardware stack levels used: 1
  7326 ;; Hardware stack levels required when called: 4
  7327 ;; This function calls:
  7328 ;;		_I2C_2_Master_Read
  7329 ;;		_I2C_2_Master_RepStart
  7330 ;;		_I2C_2_Master_Start
  7331 ;;		_I2C_2_Master_Stop
  7332 ;;		_I2C_2_Master_Write
  7333 ;; This function is called by:
  7334 ;;		_read_colours
  7335 ;;		_calibrateW
  7336 ;;		_calibrateB
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text30
  7341  0036B2                     __ptext30:
  7342                           	callstack 0
  7343  0036B2                     _color_read_Green:
  7344                           	callstack 25
  7345  0036B2                     
  7346                           ;color.c: 60:     unsigned int tmp;;color.c: 61:     I2C_2_Master_Start();
  7347  0036B2  EC7C  F01D         	call	_I2C_2_Master_Start	;wreg free
  7348                           
  7349                           ;color.c: 62:     I2C_2_Master_Write(0x52 | 0x00);
  7350  0036B6  0E52               	movlw	82
  7351  0036B8  EC6B  F01D         	call	_I2C_2_Master_Write
  7352                           
  7353                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  7354  0036BC  0EB8               	movlw	184
  7355  0036BE  EC6B  F01D         	call	_I2C_2_Master_Write
  7356                           
  7357                           ;color.c: 64:  I2C_2_Master_RepStart();
  7358  0036C2  EC81  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  7359                           
  7360                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7361  0036C6  0E53               	movlw	83
  7362  0036C8  EC6B  F01D         	call	_I2C_2_Master_Write
  7363                           
  7364                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7365  0036CC  0E01               	movlw	1
  7366  0036CE  EC14  F01C         	call	_I2C_2_Master_Read
  7367  0036D2  6E0B               	movwf	??_color_read_Green^0,c
  7368  0036D4  500B               	movf	??_color_read_Green^0,w,c
  7369  0036D6  6E0E               	movwf	color_read_Green@tmp^0,c
  7370  0036D8  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7371                           
  7372                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7373  0036DA  0E00               	movlw	0
  7374  0036DC  EC14  F01C         	call	_I2C_2_Master_Read
  7375  0036E0  6E0B               	movwf	??_color_read_Green^0,c
  7376  0036E2  500B               	movf	??_color_read_Green^0,w,c
  7377  0036E4  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7378  0036E6  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7379  0036E8  500E               	movf	color_read_Green@tmp^0,w,c
  7380  0036EA  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7381  0036EC  6E0E               	movwf	color_read_Green@tmp^0,c
  7382  0036EE  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7383  0036F0  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7384  0036F2  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7385                           
  7386                           ;color.c: 68:     I2C_2_Master_Stop();
  7387  0036F4  EC77  F01D         	call	_I2C_2_Master_Stop	;wreg free
  7388  0036F8                     
  7389                           ;color.c: 69:     return tmp;
  7390  0036F8  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7391  0036FC  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7392  003700  0012               	return		;funcret
  7393  003702                     __end_of_color_read_Green:
  7394                           	callstack 0
  7395                           
  7396 ;; *************** function _color_read_Clear *****************
  7397 ;; Defined at:
  7398 ;;		line 32 in file "color.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  tmp             2   13[COMRAM] unsigned int 
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  2    8[COMRAM] unsigned int 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2, status,0, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;Total ram usage:        7 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; Hardware stack levels required when called: 4
  7419 ;; This function calls:
  7420 ;;		_I2C_2_Master_Read
  7421 ;;		_I2C_2_Master_RepStart
  7422 ;;		_I2C_2_Master_Start
  7423 ;;		_I2C_2_Master_Stop
  7424 ;;		_I2C_2_Master_Write
  7425 ;; This function is called by:
  7426 ;;		_read_colours
  7427 ;;		_calibrateW
  7428 ;;		_calibrateB
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text31
  7433  003702                     __ptext31:
  7434                           	callstack 0
  7435  003702                     _color_read_Clear:
  7436                           	callstack 25
  7437  003702                     
  7438                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  7439  003702  EC7C  F01D         	call	_I2C_2_Master_Start	;wreg free
  7440                           
  7441                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  7442  003706  0E52               	movlw	82
  7443  003708  EC6B  F01D         	call	_I2C_2_Master_Write
  7444                           
  7445                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  7446  00370C  0EB4               	movlw	180
  7447  00370E  EC6B  F01D         	call	_I2C_2_Master_Write
  7448                           
  7449                           ;color.c: 37:  I2C_2_Master_RepStart();
  7450  003712  EC81  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  7451                           
  7452                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  7453  003716  0E53               	movlw	83
  7454  003718  EC6B  F01D         	call	_I2C_2_Master_Write
  7455                           
  7456                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  7457  00371C  0E01               	movlw	1
  7458  00371E  EC14  F01C         	call	_I2C_2_Master_Read
  7459  003722  6E0B               	movwf	??_color_read_Clear^0,c
  7460  003724  500B               	movf	??_color_read_Clear^0,w,c
  7461  003726  6E0E               	movwf	color_read_Clear@tmp^0,c
  7462  003728  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  7463                           
  7464                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7465  00372A  0E00               	movlw	0
  7466  00372C  EC14  F01C         	call	_I2C_2_Master_Read
  7467  003730  6E0B               	movwf	??_color_read_Clear^0,c
  7468  003732  500B               	movf	??_color_read_Clear^0,w,c
  7469  003734  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  7470  003736  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  7471  003738  500E               	movf	color_read_Clear@tmp^0,w,c
  7472  00373A  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  7473  00373C  6E0E               	movwf	color_read_Clear@tmp^0,c
  7474  00373E  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  7475  003740  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  7476  003742  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  7477                           
  7478                           ;color.c: 41:     I2C_2_Master_Stop();
  7479  003744  EC77  F01D         	call	_I2C_2_Master_Stop	;wreg free
  7480  003748                     
  7481                           ;color.c: 42:     return tmp;
  7482  003748  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  7483  00374C  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7484  003750  0012               	return		;funcret
  7485  003752                     __end_of_color_read_Clear:
  7486                           	callstack 0
  7487                           
  7488 ;; *************** function _color_read_Blue *****************
  7489 ;; Defined at:
  7490 ;;		line 72 in file "color.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  tmp             2   13[COMRAM] unsigned int 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2    8[COMRAM] unsigned int 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;Total ram usage:        7 bytes
  7509 ;; Hardware stack levels used: 1
  7510 ;; Hardware stack levels required when called: 4
  7511 ;; This function calls:
  7512 ;;		_I2C_2_Master_Read
  7513 ;;		_I2C_2_Master_RepStart
  7514 ;;		_I2C_2_Master_Start
  7515 ;;		_I2C_2_Master_Stop
  7516 ;;		_I2C_2_Master_Write
  7517 ;; This function is called by:
  7518 ;;		_read_colours
  7519 ;;		_calibrateW
  7520 ;;		_calibrateB
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text32
  7525  003752                     __ptext32:
  7526                           	callstack 0
  7527  003752                     _color_read_Blue:
  7528                           	callstack 25
  7529  003752                     
  7530                           ;color.c: 73:     unsigned int tmp;;color.c: 74:     I2C_2_Master_Start();
  7531  003752  EC7C  F01D         	call	_I2C_2_Master_Start	;wreg free
  7532                           
  7533                           ;color.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  7534  003756  0E52               	movlw	82
  7535  003758  EC6B  F01D         	call	_I2C_2_Master_Write
  7536                           
  7537                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x1A);
  7538  00375C  0EBA               	movlw	186
  7539  00375E  EC6B  F01D         	call	_I2C_2_Master_Write
  7540                           
  7541                           ;color.c: 77:  I2C_2_Master_RepStart();
  7542  003762  EC81  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  7543                           
  7544                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  7545  003766  0E53               	movlw	83
  7546  003768  EC6B  F01D         	call	_I2C_2_Master_Write
  7547                           
  7548                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  7549  00376C  0E01               	movlw	1
  7550  00376E  EC14  F01C         	call	_I2C_2_Master_Read
  7551  003772  6E0B               	movwf	??_color_read_Blue^0,c
  7552  003774  500B               	movf	??_color_read_Blue^0,w,c
  7553  003776  6E0E               	movwf	color_read_Blue@tmp^0,c
  7554  003778  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7555                           
  7556                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7557  00377A  0E00               	movlw	0
  7558  00377C  EC14  F01C         	call	_I2C_2_Master_Read
  7559  003780  6E0B               	movwf	??_color_read_Blue^0,c
  7560  003782  500B               	movf	??_color_read_Blue^0,w,c
  7561  003784  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7562  003786  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7563  003788  500E               	movf	color_read_Blue@tmp^0,w,c
  7564  00378A  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7565  00378C  6E0E               	movwf	color_read_Blue@tmp^0,c
  7566  00378E  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7567  003790  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7568  003792  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7569                           
  7570                           ;color.c: 81:     I2C_2_Master_Stop();
  7571  003794  EC77  F01D         	call	_I2C_2_Master_Stop	;wreg free
  7572  003798                     
  7573                           ;color.c: 82:     return tmp;
  7574  003798  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7575  00379C  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7576  0037A0  0012               	return		;funcret
  7577  0037A2                     __end_of_color_read_Blue:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function _I2C_2_Master_Write *****************
  7581 ;; Defined at:
  7582 ;;		line 45 in file "i2c.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  data_byte       1    wreg     unsigned char 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  data_byte       1    5[COMRAM] unsigned char 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  1    wreg      void 
  7589 ;; Registers used:
  7590 ;;		wreg, status,2, status,0, cstack
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7600 ;;Total ram usage:        1 bytes
  7601 ;; Hardware stack levels used: 1
  7602 ;; Hardware stack levels required when called: 3
  7603 ;; This function calls:
  7604 ;;		_I2C_2_Master_Idle
  7605 ;; This function is called by:
  7606 ;;		_color_writetoaddr
  7607 ;;		_color_read_Clear
  7608 ;;		_color_read_Red
  7609 ;;		_color_read_Green
  7610 ;;		_color_read_Blue
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text33
  7615  003AD6                     __ptext33:
  7616                           	callstack 0
  7617  003AD6                     _I2C_2_Master_Write:
  7618                           	callstack 25
  7619                           
  7620                           ;incstack = 0
  7621                           ;I2C_2_Master_Write@data_byte stored from wreg
  7622  003AD6  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  7623  003AD8                     
  7624                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7625  003AD8  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7626  003ADC                     
  7627                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7628  003ADC  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7629  003AE0  0012               	return		;funcret
  7630  003AE2                     __end_of_I2C_2_Master_Write:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function _I2C_2_Master_Stop *****************
  7634 ;; Defined at:
  7635 ;;		line 39 in file "i2c.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		wreg, status,2, status,0, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used: 1
  7655 ;; Hardware stack levels required when called: 3
  7656 ;; This function calls:
  7657 ;;		_I2C_2_Master_Idle
  7658 ;; This function is called by:
  7659 ;;		_color_writetoaddr
  7660 ;;		_color_read_Clear
  7661 ;;		_color_read_Red
  7662 ;;		_color_read_Green
  7663 ;;		_color_read_Blue
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text34
  7668  003AEE                     __ptext34:
  7669                           	callstack 0
  7670  003AEE                     _I2C_2_Master_Stop:
  7671                           	callstack 25
  7672  003AEE                     
  7673                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7674  003AEE  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7675  003AF2                     
  7676                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7677  003AF2  010E               	movlb	14	; () banked
  7678  003AF4  85DA               	bsf	218,2,b	;volatile
  7679  003AF6                     
  7680                           ; BSR set to: 14
  7681  003AF6  0012               	return		;funcret
  7682  003AF8                     __end_of_I2C_2_Master_Stop:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _I2C_2_Master_Start *****************
  7686 ;; Defined at:
  7687 ;;		line 27 in file "i2c.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 3
  7708 ;; This function calls:
  7709 ;;		_I2C_2_Master_Idle
  7710 ;; This function is called by:
  7711 ;;		_color_writetoaddr
  7712 ;;		_color_read_Clear
  7713 ;;		_color_read_Red
  7714 ;;		_color_read_Green
  7715 ;;		_color_read_Blue
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text35
  7720  003AF8                     __ptext35:
  7721                           	callstack 0
  7722  003AF8                     _I2C_2_Master_Start:
  7723                           	callstack 25
  7724  003AF8                     
  7725                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7726  003AF8  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7727  003AFC                     
  7728                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7729  003AFC  010E               	movlb	14	; () banked
  7730  003AFE  81DA               	bsf	218,0,b	;volatile
  7731  003B00                     
  7732                           ; BSR set to: 14
  7733  003B00  0012               	return		;funcret
  7734  003B02                     __end_of_I2C_2_Master_Start:
  7735                           	callstack 0
  7736                           
  7737 ;; *************** function _I2C_2_Master_RepStart *****************
  7738 ;; Defined at:
  7739 ;;		line 33 in file "i2c.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;		None
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  1    wreg      void 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0, cstack
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;Total ram usage:        0 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; Hardware stack levels required when called: 3
  7760 ;; This function calls:
  7761 ;;		_I2C_2_Master_Idle
  7762 ;; This function is called by:
  7763 ;;		_color_read_Clear
  7764 ;;		_color_read_Red
  7765 ;;		_color_read_Green
  7766 ;;		_color_read_Blue
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text36
  7771  003B02                     __ptext36:
  7772                           	callstack 0
  7773  003B02                     _I2C_2_Master_RepStart:
  7774                           	callstack 25
  7775  003B02                     
  7776                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7777  003B02  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7778  003B06                     
  7779                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7780  003B06  010E               	movlb	14	; () banked
  7781  003B08  83DA               	bsf	218,1,b	;volatile
  7782  003B0A                     
  7783                           ; BSR set to: 14
  7784  003B0A  0012               	return		;funcret
  7785  003B0C                     __end_of_I2C_2_Master_RepStart:
  7786                           	callstack 0
  7787                           
  7788 ;; *************** function _I2C_2_Master_Read *****************
  7789 ;; Defined at:
  7790 ;;		line 51 in file "i2c.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  ack             1    wreg     unsigned char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  ack             1    6[COMRAM] unsigned char 
  7795 ;;  tmp             1    7[COMRAM] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      unsigned char 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;Total ram usage:        3 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; Hardware stack levels required when called: 3
  7812 ;; This function calls:
  7813 ;;		_I2C_2_Master_Idle
  7814 ;; This function is called by:
  7815 ;;		_color_read_Clear
  7816 ;;		_color_read_Red
  7817 ;;		_color_read_Green
  7818 ;;		_color_read_Blue
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text37
  7823  003828                     __ptext37:
  7824                           	callstack 0
  7825  003828                     _I2C_2_Master_Read:
  7826                           	callstack 25
  7827                           
  7828                           ; BSR set to: 14
  7829                           ;incstack = 0
  7830                           ;I2C_2_Master_Read@ack stored from wreg
  7831  003828  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7832  00382A                     
  7833                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7834  00382A  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7835  00382E                     
  7836                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7837  00382E  010E               	movlb	14	; () banked
  7838  003830  87DA               	bsf	218,3,b	;volatile
  7839                           
  7840                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7841  003832  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7842  003836                     
  7843                           ;i2c.c: 57:   tmp = SSP2BUF;
  7844  003836  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7845                           
  7846                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7847  00383A  EC12  F01D         	call	_I2C_2_Master_Idle	;wreg free
  7848  00383E                     
  7849                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7850  00383E  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7851  003840  B4D8               	btfsc	status,2,c
  7852  003842  EF25  F01C         	goto	u4631
  7853  003846  EF29  F01C         	goto	u4630
  7854  00384A                     u4631:
  7855  00384A  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7856  00384C  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7857  00384E  EF2A  F01C         	goto	u4648
  7858  003852                     u4630:
  7859  003852  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7860  003854                     u4648:
  7861  003854  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7862  003856  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7863  003858  010E               	movlb	14	; () banked
  7864  00385A  51DA               	movf	218,w,b	;volatile
  7865  00385C  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7866  00385E  0BDF               	andlw	-33
  7867  003860  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7868  003862  6FDA               	movwf	218,b	;volatile
  7869  003864                     
  7870                           ; BSR set to: 14
  7871                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7872  003864  89DA               	bsf	218,4,b	;volatile
  7873  003866                     
  7874                           ; BSR set to: 14
  7875                           ;i2c.c: 61:   return tmp;
  7876  003866  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7877  003868                     
  7878                           ; BSR set to: 14
  7879  003868  0012               	return		;funcret
  7880  00386A                     __end_of_I2C_2_Master_Read:
  7881                           	callstack 0
  7882                           
  7883 ;; *************** function _I2C_2_Master_Idle *****************
  7884 ;; Defined at:
  7885 ;;		line 22 in file "i2c.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;Total ram usage:        1 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 2
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_I2C_2_Master_Start
  7910 ;;		_I2C_2_Master_RepStart
  7911 ;;		_I2C_2_Master_Stop
  7912 ;;		_I2C_2_Master_Write
  7913 ;;		_I2C_2_Master_Read
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text38
  7918  003A24                     __ptext38:
  7919                           	callstack 0
  7920  003A24                     _I2C_2_Master_Idle:
  7921                           	callstack 25
  7922  003A24                     l134:
  7923  003A24  010E               	movlb	14	; () banked
  7924  003A26  B5D8               	btfsc	216,2,b	;volatile
  7925  003A28  EF18  F01D         	goto	u4461
  7926  003A2C  EF1A  F01D         	goto	u4460
  7927  003A30                     u4461:
  7928  003A30  EF12  F01D         	goto	l134
  7929  003A34                     u4460:
  7930  003A34                     
  7931                           ; BSR set to: 14
  7932  003A34  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7933  003A38  0E1F               	movlw	31
  7934  003A3A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  7935  003A3C  A4D8               	btfss	status,2,c
  7936  003A3E  EF23  F01D         	goto	u4471
  7937  003A42  EF25  F01D         	goto	u4470
  7938  003A46                     u4471:
  7939  003A46  EF12  F01D         	goto	l134
  7940  003A4A                     u4470:
  7941  003A4A                     
  7942                           ; BSR set to: 14
  7943  003A4A  0012               	return		;funcret
  7944  003A4C                     __end_of_I2C_2_Master_Idle:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _TxBufferedString *****************
  7948 ;; Defined at:
  7949 ;;		line 98 in file "serial.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  string          2    5[COMRAM] PTR unsigned char 
  7952 ;;		 -> main@string3(20), main@string2(20), main@string1(20), main@string0(20), 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;Total ram usage:        2 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 3
  7971 ;; This function calls:
  7972 ;;		_putCharToTxBuf
  7973 ;; This function is called by:
  7974 ;;		_main
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text39
  7979  00394A                     __ptext39:
  7980                           	callstack 0
  7981  00394A                     _TxBufferedString:
  7982                           	callstack 27
  7983  00394A                     
  7984                           ;serial.c: 100:     while(*string != 0){
  7985  00394A  EFB0  F01C         	goto	l5022
  7986  00394E                     l5018:
  7987                           
  7988                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  7989  00394E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  7990  003952  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  7991  003956  50DF               	movf	indf2,w,c
  7992  003958  ECE8  F01C         	call	_putCharToTxBuf
  7993  00395C  4A06               	infsnz	TxBufferedString@string^0,f,c
  7994  00395E  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  7995  003960                     l5022:
  7996                           
  7997                           ;serial.c: 100:     while(*string != 0){
  7998  003960  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  7999  003964  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8000  003968  50DF               	movf	indf2,w,c
  8001  00396A  A4D8               	btfss	status,2,c
  8002  00396C  EFBA  F01C         	goto	u5661
  8003  003970  EFBC  F01C         	goto	u5660
  8004  003974                     u5661:
  8005  003974  EFA7  F01C         	goto	l5018
  8006  003978                     u5660:
  8007  003978  0012               	return		;funcret
  8008  00397A                     __end_of_TxBufferedString:
  8009                           	callstack 0
  8010                           
  8011 ;; *************** function _putCharToTxBuf *****************
  8012 ;; Defined at:
  8013 ;;		line 85 in file "serial.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  byte            1    wreg     unsigned char 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  byte            1    4[COMRAM] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;Total ram usage:        1 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 2
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_TxBufferedString
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text40
  8042  0039D0                     __ptext40:
  8043                           	callstack 0
  8044  0039D0                     _putCharToTxBuf:
  8045                           	callstack 27
  8046                           
  8047                           ;incstack = 0
  8048                           ;putCharToTxBuf@byte stored from wreg
  8049  0039D0  6E05               	movwf	putCharToTxBuf@byte^0,c
  8050  0039D2                     
  8051                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8052  0039D2  0E3B               	movlw	59
  8053  0039D4  6457               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8054  0039D6  EFEF  F01C         	goto	u4761
  8055  0039DA  EFF1  F01C         	goto	u4760
  8056  0039DE                     u4761:
  8057  0039DE  EFF3  F01C         	goto	l4506
  8058  0039E2                     u4760:
  8059  0039E2  0E00               	movlw	0
  8060  0039E4  6E57               	movwf	_TxBufWriteCnt^0,c	;volatile
  8061  0039E6                     l4506:
  8062                           
  8063                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8064  0039E6  0E00               	movlw	low _EUSART4TXbuf
  8065  0039E8  2457               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8066  0039EA  6ED9               	movwf	fsr2l,c
  8067  0039EC  6ADA               	clrf	fsr2h,c
  8068  0039EE  0E01               	movlw	high _EUSART4TXbuf
  8069  0039F0  22DA               	addwfc	fsr2h,f,c
  8070  0039F2  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8071  0039F6  2A57               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8072  0039F8  0012               	return		;funcret
  8073  0039FA                     __end_of_putCharToTxBuf:
  8074                           	callstack 0
  8075                           
  8076 ;; *************** function _Interrupts_init *****************
  8077 ;; Defined at:
  8078 ;;		line 10 in file "interrupts.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;		None
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		None
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;Total ram usage:        0 bytes
  8097 ;; Hardware stack levels used: 1
  8098 ;; Hardware stack levels required when called: 2
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_main
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text41
  8107  003AE2                     __ptext41:
  8108                           	callstack 0
  8109  003AE2                     _Interrupts_init:
  8110                           	callstack 28
  8111  003AE2                     
  8112                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8113  003AE2  8CF2               	bsf	242,6,c	;volatile
  8114                           
  8115                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  8116  003AE4  010E               	movlb	14	; () banked
  8117  003AE6  872D               	bsf	45,3,b	;volatile
  8118                           
  8119                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  8120  003AE8  952D               	bcf	45,2,b	;volatile
  8121                           
  8122                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  8123  003AEA  8EF2               	bsf	242,7,c	;volatile
  8124  003AEC                     
  8125                           ; BSR set to: 14
  8126  003AEC  0012               	return		;funcret
  8127  003AEE                     __end_of_Interrupts_init:
  8128                           	callstack 0
  8129                           
  8130 ;; *************** function _HighISR *****************
  8131 ;; Defined at:
  8132 ;;		line 24 in file "interrupts.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;Total ram usage:        2 bytes
  8151 ;; Hardware stack levels used: 1
  8152 ;; Hardware stack levels required when called: 1
  8153 ;; This function calls:
  8154 ;;		_getCharFromTxBuf
  8155 ;;		_putCharToRxBuf
  8156 ;;		i2_isDataInTxBuf
  8157 ;; This function is called by:
  8158 ;;		Interrupt level 2
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	intcode
  8163  000000                     __pintcode:
  8164                           	callstack 0
  8165  000000                     _HighISR:
  8166                           	callstack 21
  8167                           
  8168                           ; BSR set to: 14
  8169                           ;incstack = 0
  8170  000000  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8171  000002  CFD9 F003          	movff	fsr2l,??_HighISR
  8172  000006  CFDA F004          	movff	fsr2h,??_HighISR+1
  8173  00000A                     
  8174                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  8175  00000A  010E               	movlb	14	; () banked
  8176  00000C  A737               	btfss	55,3,b	;volatile
  8177  00000E  EF0B  F000         	goto	i2u418_41
  8178  000012  EF0D  F000         	goto	i2u418_40
  8179  000016                     i2u418_41:
  8180  000016  EF10  F000         	goto	i2l4132
  8181  00001A                     i2u418_40:
  8182  00001A                     
  8183                           ; BSR set to: 14
  8184                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  8185  00001A  51E3               	movf	227,w,b	;volatile
  8186  00001C  ECFD  F01C         	call	_putCharToRxBuf
  8187  000020                     i2l4132:
  8188                           
  8189                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  8190  000020  010E               	movlb	14	; () banked
  8191  000022  A537               	btfss	55,2,b	;volatile
  8192  000024  EF16  F000         	goto	i2u419_41
  8193  000028  EF18  F000         	goto	i2u419_40
  8194  00002C                     i2u419_41:
  8195  00002C  EF31  F000         	goto	i2l456
  8196  000030                     i2u419_40:
  8197  000030                     
  8198                           ; BSR set to: 14
  8199  000030  A52D               	btfss	45,2,b	;volatile
  8200  000032  EF1D  F000         	goto	i2u420_41
  8201  000036  EF1F  F000         	goto	i2u420_40
  8202  00003A                     i2u420_41:
  8203  00003A  EF31  F000         	goto	i2l456
  8204  00003E                     i2u420_40:
  8205  00003E                     
  8206                           ; BSR set to: 14
  8207                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  8208  00003E  EC5F  F01D         	call	i2_isDataInTxBuf	;wreg free
  8209  000042  06E8               	decf	wreg,f,c
  8210  000044  A4D8               	btfss	status,2,c
  8211  000046  EF27  F000         	goto	i2u421_41
  8212  00004A  EF29  F000         	goto	i2u421_40
  8213  00004E                     i2u421_41:
  8214  00004E  EF2F  F000         	goto	i2l454
  8215  000052                     i2u421_40:
  8216  000052  ECBD  F01C         	call	_getCharFromTxBuf	;wreg free
  8217  000056  010E               	movlb	14	; () banked
  8218  000058  6FE4               	movwf	228,b	;volatile
  8219  00005A  EF31  F000         	goto	i2l456
  8220  00005E                     i2l454:
  8221  00005E  010E               	movlb	14	; () banked
  8222  000060  952D               	bcf	45,2,b	;volatile
  8223  000062                     i2l456:
  8224                           
  8225                           ; BSR set to: 14
  8226  000062  C004  FFDA         	movff	??_HighISR+1,fsr2h
  8227  000066  C003  FFD9         	movff	??_HighISR,fsr2l
  8228  00006A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8229  00006C  0011               	retfie		f
  8230  00006E                     __end_of_HighISR:
  8231                           	callstack 0
  8232                           
  8233 ;; *************** function i2_isDataInTxBuf *****************
  8234 ;; Defined at:
  8235 ;;		line 93 in file "serial.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;		None
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;		None
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      unsigned char 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;Total ram usage:        0 bytes
  8254 ;; Hardware stack levels used: 1
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_HighISR
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text43
  8263  003ABE                     __ptext43:
  8264                           	callstack 0
  8265  003ABE                     i2_isDataInTxBuf:
  8266                           	callstack 21
  8267  003ABE                     
  8268                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  8269  003ABE  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  8270  003AC0  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  8271  003AC2  A4D8               	btfss	status,2,c
  8272  003AC4  EF66  F01D         	goto	i2u155_41
  8273  003AC8  EF69  F01D         	goto	i2u155_40
  8274  003ACC                     i2u155_41:
  8275  003ACC  0E01               	movlw	1
  8276  003ACE  EF6A  F01D         	goto	i2u156_40
  8277  003AD2                     i2u155_40:
  8278  003AD2  0E00               	movlw	0
  8279  003AD4                     i2u156_40:
  8280  003AD4  0012               	return		;funcret
  8281  003AD6                     __end_ofi2_isDataInTxBuf:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function _putCharToRxBuf *****************
  8285 ;; Defined at:
  8286 ;;		line 63 in file "serial.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  byte            1    wreg     unsigned char 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  byte            1    0[COMRAM] unsigned char 
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      void 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;Total ram usage:        1 bytes
  8305 ;; Hardware stack levels used: 1
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_HighISR
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text44
  8314  0039FA                     __ptext44:
  8315                           	callstack 0
  8316  0039FA                     _putCharToRxBuf:
  8317                           	callstack 21
  8318                           
  8319                           ;incstack = 0
  8320                           ;putCharToRxBuf@byte stored from wreg
  8321  0039FA  6E01               	movwf	putCharToRxBuf@byte^0,c
  8322  0039FC                     
  8323                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  8324  0039FC  0E13               	movlw	19
  8325  0039FE  6459               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  8326  003A00  EF04  F01D         	goto	i2u339_41
  8327  003A04  EF06  F01D         	goto	i2u339_40
  8328  003A08                     i2u339_41:
  8329  003A08  EF08  F01D         	goto	i2l3542
  8330  003A0C                     i2u339_40:
  8331  003A0C  0E00               	movlw	0
  8332  003A0E  6E59               	movwf	_RxBufWriteCnt^0,c	;volatile
  8333  003A10                     i2l3542:
  8334                           
  8335                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  8336  003A10  0E3C               	movlw	low _EUSART4RXbuf
  8337  003A12  2459               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  8338  003A14  6ED9               	movwf	fsr2l,c
  8339  003A16  6ADA               	clrf	fsr2h,c
  8340  003A18  0E01               	movlw	high _EUSART4RXbuf
  8341  003A1A  22DA               	addwfc	fsr2h,f,c
  8342  003A1C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  8343  003A20  2A59               	incf	_RxBufWriteCnt^0,f,c	;volatile
  8344  003A22  0012               	return		;funcret
  8345  003A24                     __end_of_putCharToRxBuf:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function _getCharFromTxBuf *****************
  8349 ;; Defined at:
  8350 ;;		line 79 in file "serial.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;		None
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      unsigned char 
  8357 ;; Registers used:
  8358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;Total ram usage:        2 bytes
  8369 ;; Hardware stack levels used: 1
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_HighISR
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text45
  8378  00397A                     __ptext45:
  8379                           	callstack 0
  8380  00397A                     _getCharFromTxBuf:
  8381                           	callstack 21
  8382  00397A                     
  8383                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  8384  00397A  0E3B               	movlw	59
  8385  00397C  6456               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  8386  00397E  EFC3  F01C         	goto	i2u340_41
  8387  003982  EFC5  F01C         	goto	i2u340_40
  8388  003986                     i2u340_41:
  8389  003986  EFC7  F01C         	goto	i2l3550
  8390  00398A                     i2u340_40:
  8391  00398A  0E00               	movlw	0
  8392  00398C  6E56               	movwf	_TxBufReadCnt^0,c	;volatile
  8393  00398E                     i2l3550:
  8394                           
  8395                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  8396  00398E  2A56               	incf	_TxBufReadCnt^0,f,c	;volatile
  8397  003990  0456               	decf	_TxBufReadCnt^0,w,c	;volatile
  8398  003992  6E01               	movwf	??_getCharFromTxBuf^0,c
  8399  003994  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  8400  003996  0E00               	movlw	low _EUSART4TXbuf
  8401  003998  2401               	addwf	??_getCharFromTxBuf^0,w,c
  8402  00399A  6ED9               	movwf	fsr2l,c
  8403  00399C  0E01               	movlw	high _EUSART4TXbuf
  8404  00399E  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  8405  0039A0  6EDA               	movwf	fsr2h,c
  8406  0039A2  50DF               	movf	indf2,w,c
  8407  0039A4  0012               	return		;funcret
  8408  0039A6                     __end_of_getCharFromTxBuf:
  8409                           	callstack 0
  8410                           
  8411                           	psect	rparam
  8412  0000                     
  8413                           	psect	temp
  8414  00005A                     btemp:
  8415                           	callstack 0
  8416  00005A                     	ds	1
  8417  0000                     int$flags	set	btemp
  8418  0000                     wtemp8	set	btemp+1
  8419  0000                     ttemp5	set	btemp+1
  8420  0000                     ttemp6	set	btemp+4
  8421  0000                     ttemp7	set	btemp+8
  8422                           
  8423                           	psect	idloc
  8424                           
  8425                           ;Config register IDLOC0 @ 0x200000
  8426                           ;	unspecified, using default values
  8427  200000                     	org	2097152
  8428  200000  0FFF               	dw	4095
  8429                           
  8430                           ;Config register IDLOC1 @ 0x200002
  8431                           ;	unspecified, using default values
  8432  200002                     	org	2097154
  8433  200002  0FFF               	dw	4095
  8434                           
  8435                           ;Config register IDLOC2 @ 0x200004
  8436                           ;	unspecified, using default values
  8437  200004                     	org	2097156
  8438  200004  0FFF               	dw	4095
  8439                           
  8440                           ;Config register IDLOC3 @ 0x200006
  8441                           ;	unspecified, using default values
  8442  200006                     	org	2097158
  8443  200006  0FFF               	dw	4095
  8444                           
  8445                           ;Config register IDLOC4 @ 0x200008
  8446                           ;	unspecified, using default values
  8447  200008                     	org	2097160
  8448  200008  0FFF               	dw	4095
  8449                           
  8450                           ;Config register IDLOC5 @ 0x20000A
  8451                           ;	unspecified, using default values
  8452  20000A                     	org	2097162
  8453  20000A  0FFF               	dw	4095
  8454                           
  8455                           ;Config register IDLOC6 @ 0x20000C
  8456                           ;	unspecified, using default values
  8457  20000C                     	org	2097164
  8458  20000C  0FFF               	dw	4095
  8459                           
  8460                           ;Config register IDLOC7 @ 0x20000E
  8461                           ;	unspecified, using default values
  8462  20000E                     	org	2097166
  8463  20000E  0FFF               	dw	4095
  8464                           
  8465                           	psect	config
  8466                           
  8467                           ;Config register CONFIG1L @ 0x300000
  8468                           ;	External Oscillator mode Selection bits
  8469                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8470                           ;	Power-up default value for COSC bits
  8471                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8472  300000                     	org	3145728
  8473  300000  AA                 	db	170
  8474                           
  8475                           ;Config register CONFIG1H @ 0x300001
  8476                           ;	unspecified, using default values
  8477                           ;	Clock Out Enable bit
  8478                           ;	CLKOUTEN = 0x1, unprogrammed default
  8479                           ;	Clock Switch Enable bit
  8480                           ;	CSWEN = 0x1, unprogrammed default
  8481                           ;	Fail-Safe Clock Monitor Enable bit
  8482                           ;	FCMEN = 0x1, unprogrammed default
  8483  300001                     	org	3145729
  8484  300001  FF                 	db	255
  8485                           
  8486                           ;Config register CONFIG2L @ 0x300002
  8487                           ;	unspecified, using default values
  8488                           ;	Master Clear Enable bit
  8489                           ;	MCLRE = 0x1, unprogrammed default
  8490                           ;	Power-up Timer Enable bit
  8491                           ;	PWRTE = 0x1, unprogrammed default
  8492                           ;	Low-power BOR enable bit
  8493                           ;	LPBOREN = 0x1, unprogrammed default
  8494                           ;	Brown-out Reset Enable bits
  8495                           ;	BOREN = 0x3, unprogrammed default
  8496  300002                     	org	3145730
  8497  300002  FF                 	db	255
  8498                           
  8499                           ;Config register CONFIG2H @ 0x300003
  8500                           ;	unspecified, using default values
  8501                           ;	Brown Out Reset Voltage selection bits
  8502                           ;	BORV = 0x3, unprogrammed default
  8503                           ;	ZCD Disable bit
  8504                           ;	ZCD = 0x1, unprogrammed default
  8505                           ;	PPSLOCK bit One-Way Set Enable bit
  8506                           ;	PPS1WAY = 0x1, unprogrammed default
  8507                           ;	Stack Full/Underflow Reset Enable bit
  8508                           ;	STVREN = 0x1, unprogrammed default
  8509                           ;	Debugger Enable bit
  8510                           ;	DEBUG = 0x1, unprogrammed default
  8511                           ;	Extended Instruction Set Enable bit
  8512                           ;	XINST = 0x1, unprogrammed default
  8513  300003                     	org	3145731
  8514  300003  FF                 	db	255
  8515                           
  8516                           ;Config register CONFIG3L @ 0x300004
  8517                           ;	WDT Period Select bits
  8518                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8519                           ;	WDT operating mode
  8520                           ;	WDTE = OFF, WDT Disabled
  8521  300004                     	org	3145732
  8522  300004  9F                 	db	159
  8523                           
  8524                           ;Config register CONFIG3H @ 0x300005
  8525                           ;	unspecified, using default values
  8526                           ;	WDT Window Select bits
  8527                           ;	WDTCWS = 0x7, unprogrammed default
  8528                           ;	WDT input clock selector
  8529                           ;	WDTCCS = 0x7, unprogrammed default
  8530  300005                     	org	3145733
  8531  300005  FF                 	db	255
  8532                           
  8533                           ;Config register CONFIG4L @ 0x300006
  8534                           ;	unspecified, using default values
  8535                           ;	Write Protection Block 0
  8536                           ;	WRT0 = 0x1, unprogrammed default
  8537                           ;	Write Protection Block 1
  8538                           ;	WRT1 = 0x1, unprogrammed default
  8539                           ;	Write Protection Block 2
  8540                           ;	WRT2 = 0x1, unprogrammed default
  8541                           ;	Write Protection Block 3
  8542                           ;	WRT3 = 0x1, unprogrammed default
  8543                           ;	Write Protection Block 3
  8544                           ;	WRT4 = 0x1, unprogrammed default
  8545                           ;	Write Protection Block 3
  8546                           ;	WRT5 = 0x1, unprogrammed default
  8547                           ;	Write Protection Block 3
  8548                           ;	WRT6 = 0x1, unprogrammed default
  8549                           ;	Write Protection Block 3
  8550                           ;	WRT7 = 0x1, unprogrammed default
  8551  300006                     	org	3145734
  8552  300006  FF                 	db	255
  8553                           
  8554                           ;Config register CONFIG4H @ 0x300007
  8555                           ;	unspecified, using default values
  8556                           ;	Configuration Register Write Protection bit
  8557                           ;	WRTC = 0x1, unprogrammed default
  8558                           ;	Boot Block Write Protection bit
  8559                           ;	WRTB = 0x1, unprogrammed default
  8560                           ;	Data EEPROM Write Protection bit
  8561                           ;	WRTD = 0x1, unprogrammed default
  8562                           ;	Scanner Enable bit
  8563                           ;	SCANE = 0x1, unprogrammed default
  8564                           ;	Low Voltage Programming Enable bit
  8565                           ;	LVP = 0x1, unprogrammed default
  8566  300007                     	org	3145735
  8567  300007  FF                 	db	255
  8568                           
  8569                           ;Config register CONFIG5L @ 0x300008
  8570                           ;	unspecified, using default values
  8571                           ;	UserNVM Program Memory Code Protection bit
  8572                           ;	CP = 0x1, unprogrammed default
  8573                           ;	DataNVM Memory Code Protection bit
  8574                           ;	CPD = 0x1, unprogrammed default
  8575  300008                     	org	3145736
  8576  300008  FF                 	db	255
  8577                           
  8578                           ;Config register CONFIG5H @ 0x300009
  8579                           ;	unspecified, using default values
  8580  300009                     	org	3145737
  8581  300009  FF                 	db	255
  8582                           
  8583                           ;Config register CONFIG6L @ 0x30000A
  8584                           ;	unspecified, using default values
  8585                           ;	Table Read Protection Block 0
  8586                           ;	EBTR0 = 0x1, unprogrammed default
  8587                           ;	Table Read Protection Block 1
  8588                           ;	EBTR1 = 0x1, unprogrammed default
  8589                           ;	Table Read Protection Block 2
  8590                           ;	EBTR2 = 0x1, unprogrammed default
  8591                           ;	Table Read Protection Block 3
  8592                           ;	EBTR3 = 0x1, unprogrammed default
  8593                           ;	Table Read Protection Block 4
  8594                           ;	EBTR4 = 0x1, unprogrammed default
  8595                           ;	Table Read Protection Block 5
  8596                           ;	EBTR5 = 0x1, unprogrammed default
  8597                           ;	Table Read Protection Block 6
  8598                           ;	EBTR6 = 0x1, unprogrammed default
  8599                           ;	Table Read Protection Block 7
  8600                           ;	EBTR7 = 0x1, unprogrammed default
  8601  30000A                     	org	3145738
  8602  30000A  FF                 	db	255
  8603                           
  8604                           ;Config register CONFIG6H @ 0x30000B
  8605                           ;	unspecified, using default values
  8606                           ;	Boot Block Table Read Protection bit
  8607                           ;	EBTRB = 0x1, unprogrammed default
  8608  30000B                     	org	3145739
  8609  30000B  FF                 	db	255
  8610                           tosu	equ	0xFFF
  8611                           tosh	equ	0xFFE
  8612                           tosl	equ	0xFFD
  8613                           stkptr	equ	0xFFC
  8614                           pclatu	equ	0xFFB
  8615                           pclath	equ	0xFFA
  8616                           pcl	equ	0xFF9
  8617                           tblptru	equ	0xFF8
  8618                           tblptrh	equ	0xFF7
  8619                           tblptrl	equ	0xFF6
  8620                           tablat	equ	0xFF5
  8621                           prodh	equ	0xFF4
  8622                           prodl	equ	0xFF3
  8623                           indf0	equ	0xFEF
  8624                           postinc0	equ	0xFEE
  8625                           postdec0	equ	0xFED
  8626                           preinc0	equ	0xFEC
  8627                           plusw0	equ	0xFEB
  8628                           fsr0h	equ	0xFEA
  8629                           fsr0l	equ	0xFE9
  8630                           wreg	equ	0xFE8
  8631                           indf1	equ	0xFE7
  8632                           postinc1	equ	0xFE6
  8633                           postdec1	equ	0xFE5
  8634                           preinc1	equ	0xFE4
  8635                           plusw1	equ	0xFE3
  8636                           fsr1h	equ	0xFE2
  8637                           fsr1l	equ	0xFE1
  8638                           bsr	equ	0xFE0
  8639                           indf2	equ	0xFDF
  8640                           postinc2	equ	0xFDE
  8641                           postdec2	equ	0xFDD
  8642                           preinc2	equ	0xFDC
  8643                           plusw2	equ	0xFDB
  8644                           fsr2h	equ	0xFDA
  8645                           fsr2l	equ	0xFD9
  8646                           status	equ	0xFD8

Data Sizes:
    Strings     66
    Constant    4
    Data        162
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     26      34
    BANK1           256      0     222
    BANK2           256    130     184
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), main@string0(BANK2[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), main@string0(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2199_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), main@string0(BANK2[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), main@string0(BANK2[20]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), main@string0(BANK2[20]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S832DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S832DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK2[24]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK2[24]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK2[24]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _determine_color_new->___fltol
    _isbtw->___xxtofl
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Clear
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               156   156      0   45580
                                             24 BANK0      2     2      0
                                              0 BANK2    130   130      0
                    _Interrupts_init
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _calibrateA
                         _calibrateW
                   _color_click_init
                _determine_color_new
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    9137
                                              6 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     870
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      90
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 14    12      2   20756
                                             78 COMRAM     6     4      2
                                              0 BANK0      8     8      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    8336
                                             18 COMRAM    12     0     12
                             ___flge
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     922
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    4076
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1057
                                             68 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3381
                                             43 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2723
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     870
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrateA                                           2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     546
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _calibrateA
   _calibrateW
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _isbtw
       ___flge
       ___xxtofl (ARG)
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     82      B8      10       71.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DE       7       86.7%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      22       5       21.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     211       8        0.0%
DATA                 0      0     211       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 10 11:56:01 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 3662                    ___fldiv@aexp 002B  
                  ___fldiv@bexp 002A                    ___fldiv@sign 0023                 _color_read_Blue 3752  
                            l33 3948                              l42 36B0                              l51 35AC  
                            l36 3A8A                              l45 3700                              l39 3750  
                            l48 37A0                              l85 340A                              l89 360E  
              _color_read_Clear 3702                _color_read_Green 36B2               ??_Interrupts_init 0005  
                 main@BlueRatio 0254                             l104 1A0C                             l131 39CE  
                           l140 3B00                             l134 3A24                             l143 3B0A  
                           l152 3868                             l137 3A4A                             l321 1B08  
                           l146 3AF6                             l330 1C36                             l403 39F8  
                           l323 1B16                             l412 3978                             l316 1AC0  
                           l149 3AE0                             l325 1BFA                             l317 1AC2  
                           l406 3ABC                             l327 1C08                             l319 1AD0  
                           l416 3AA4                             l372 3A6A                             l189 3826  
                           l447 3AEC                             l724 31BA                             l573 2E92  
                           l729 3200                             l586 2FF6                             l756 30FC  
                           _abs 386A                    main@RedRatio 0250                             _pad 32CC  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003E  
                  ___flmul@sign 0038                    ___flmul@temp 0043                    ___flmul@prod 003F  
                  ___fltol@exp1 004E                            l1041 26BE                            l1121 2C46  
                          l1114 2BAE                            l1202 2B56                            l1043 251E  
                          ?_abs 0017                            l1052 2564                            l1117 2D0A  
                          l1213 38A0                            l1054 25DC                            l1046 24E2  
                          l1055 25CA                            l1080 21B6                            l1128 2CA2  
                          l1216 38A8                            l1208 3542                            l1073 1FC0  
                          l1209 354A                            l1137 3660                            l1090 22E6  
                          l1082 222E                            l1083 221C                            l1228 32CA  
                          l1236 37E4                            l1164 3312                            l1077 2324  
                          l1239 3B0C                            l1167 3354                            l1175 2760  
                          l1280 3914                            l1169 3390                            l1177 2768  
                          l1195 29A2                            l5000 3A68                            l4200 2D80  
                          l5002 3AE2                            l4210 2DDA                            l4202 2D9E  
                          l5010 3632                            l5020 395C                            l4212 2E08  
                          l4204 2DA6                            l4220 2E42                            l4300 2728  
                          l5012 364E                            l5004 3610                            l5022 3960  
                          l4222 2E52                            l4214 2E28                            l4206 2DBA  
                          l4230 2E98                            l4310 2782                            l4302 2738  
                          l5006 3622                            l5016 394A                            l4400 31A8  
                          l5024 3A8C                            l4224 2E72                            l4216 2E2A  
                          l4208 2DC8                            l4240 2EF8                            l4232 2EA6  
                          l4160 324E                            l4152 3202                            l4320 27AE  
                          l4312 2790                            l4304 273A                            l5008 362A  
                          l5018 394E                            l4402 31F8                            l5026 3AA0  
                          l4218 2E3C                            l4250 2F6E                            l4242 2F16  
                          l4234 2EC6                            l4162 3284                            l4154 3214  
                          l4170 37C0                            l4330 28BA                            l4322 2830  
                          l4314 2796                            l4306 2754                            l4410 29C8  
                          l4404 31FE                            l4260 2FD6                            l4252 2F8E  
                          l4244 2F1E                            l4236 2ECA                            l4228 2E94  
                          l4156 3226                            l4172 37C4                            l4180 3908  
                          l4340 292E                            l4332 28D8                            l4324 2836  
                          l4316 279E                            l4308 2770                            l4420 2A34  
                          l4412 29D6                            l5300 1B06                            l5220 1A0E  
                          l4502 39D2                            l4510 3AA6                            l4190 2D3E  
                          l4254 2FA0                            l4246 2F32                            l4238 2ED8  
                          l4158 3230                            l4166 37A2                            l4174 38E0  
                          l4270 32FE                            l4350 296A                            l4342 293E  
                          l4334 28F2                            l4326 283C                            l4318 27A8  
                          l4430 2AE6                            l4422 2A7C                            l4414 29E8  
                          l5310 1B7A                            l5302 1B24                            l5230 1A28  
                          l5222 1A1A                            l4504 39E2                            l4360 3AD8  
                          l4600 2544                            l4520 2342                            l4192 2D42  
                          l4184 2D0C                            l4248 2F40                            l4256 2FA6  
                          l4168 37AE                            l4176 38EC                            l4280 3364  
                          l4272 330A                            l4264 32CC                            l4344 2944  
                          l4352 297A                            l4336 290C                            l4328 28A0  
                          l4432 2AFA                            l4416 29EC                            l4408 29A4  
                          l5320 1BDC                            l5312 1B86                            l5304 1B26  
                          l5240 1A36                            l5232 1A2C                            l5224 1A1E  
                          l4506 39E6                            l4290 3A24                            l4370 3B06  
                          l4362 3ADC                            l4450 39A6                            l4610 2582  
                          l4602 254A                            l4522 2352                            l4530 237C  
                          l4514 2326                            l4194 2D50                            l4186 2D10  
                          l4258 2FB6                            l4178 38F0                            l4282 3378  
                          l4274 331E                            l4266 32DC                            l4346 2956  
                          l4338 291C                            l4426 2AB4                            l4418 2A10  
                          l4442 2B20                            l5322 1BE0                            l5314 1B8A  
                          l5306 1B32                            l5330 1C22                            l5250 1A56  
                          l5242 1A3A                            l5234 1A2E                            l5226 1A22  
                          l4508 39F6                            l4292 3A34                            l4380 3864  
                          l4372 382A                            l4356 3AF8                            l4364 3AEE  
                          l4460 39BC                            l4452 39B0                            l4620 25EC  
                          l4612 2586                            l4604 2554                            l4540 23A8  
                          l4532 238C                            l4524 2362                            l4516 2332  
                          l4700 202C                            l4196 2D70                            l4188 2D1E  
                          l4276 3332                            l4268 32F0                            l4348 2962  
                          l4444 2B44                            l4428 2AD8                            l4436 2B06  
                          l5340 1D64                            l5332 1C3C                            l5324 1BF8  
                          l5316 1BA2                            l5308 1B4C                            l5260 1A82  
                          l5252 1A5A                            l5244 1A42                            l5236 1A30  
                          l5228 1A26                            l4382 3866                            l4374 382E  
                          l4358 3AFC                            l4366 3AF2                            l4470 3662  
                          l4454 39B6                            l4462 3A6E                            l4630 264E  
                          l4622 25F8                            l4614 2594                            l4606 2562  
                          l4542 23B8                            l4550 23E2                            l4534 2392  
                          l4526 2372                            l4518 2340                            l4710 2076  
                          l4702 2044                            l4390 313C                            l4198 2D74  
                          l4286 386A                            l4278 3336                            l4294 26C0  
                          l4438 2B14                            l5350 1E0A                            l5342 1DEC  
                          l5334 1C48                            l5326 1C16                            l5318 1BD0  
                          l5270 1A9E                            l5262 1A8A                            l5254 1A6E  
                          l5246 1A4A                            l5238 1A30                            ?_pad 0015  
                          l4376 3836                            l4368 3B02                            l4464 3702  
                          l4472 36A8                            l4456 39B8                            l4640 26AC  
                          l4632 2664                            l4624 2606                            l4616 25C2  
                          l4608 2574                            l4560 2424                            l4552 23F2  
                          l4544 23C8                            l4536 2398                            l4528 2374  
                          l4720 20CC                            l4712 2086                            l4704 2050  
                          l4392 316A                            l4288 3884                            l4296 26E0  
                          l5360 1E68                            l5352 1E22                            l5344 1E04  
                          l5336 1C54                            l5328 1C18                            l5280 1AA8  
                          l5272 1AA0                            l5264 1A92                            l5256 1A72  
                          l5248 1A4E                            l4378 383E                            l4482 3752  
                          l4466 3748                            l4458 39BA                            l4642 26B2  
                          l4634 267E                            l4626 2630                            l4554 2408  
                          l4546 23D8                            l4538 23A6                            l4730 2170  
                          l4722 20E8                            l4714 2092                            l4706 205C  
                          l4394 317A                            l4386 30FE                            l4490 33C4  
                          l4298 2708                            l5370 1ECC                            l5362 1E86  
                          l5354 1E40                            l5346 1E06                            l5338 1CDC  
                          l5290 1AB2                            l5282 1AAA                            l5274 1AA2  
                          l5266 1A9A                            l5258 1A7A                            l4484 3798  
                          l4476 36B2                            l4644 26B4                            l4636 269A  
                          l4628 2634                            l4580 24A6                            l4572 245C  
                          l4556 2418                            l4564 2438                            l4548 23DA  
                          l4740 21C6                            l4732 217E                            l4724 20F4  
                          l4716 20A2                            l4708 206A                            l4660 1F28  
                          l4652 1EFC                            l4820 30DC                            l4804 3088  
                          l4396 3188                            l4388 312C                            l4492 33F6  
                          l4900 0FB2                            l5372 1ED8                            l5364 1E92  
                          l5356 1E4C                            l5348 1E08                            l5292 1AB4  
                          l5284 1AAC                            l5276 1AA4                            l5268 1A9C  
                          l4478 36F8                            l4638 269E                            l4590 24EC  
                          l4582 24AE                            l4574 2476                            l4566 2448  
                          l4558 2420                            l4742 21D4                            l4734 219C  
                          l4726 2110                            l4718 20BC                            l4670 1F64  
                          l4662 1F38                            l4654 1F08                            l4822 30EC  
                          l4814 30B0                            l4806 3092                            l4830 2B78  
                          l4398 319A                            l4910 1174                            l4902 1062  
                          l5374 1EDC                            l5366 1E96                            l5358 1E50  
                          l5294 1ADE                            l5286 1AAE                            l5278 1AA6  
                          l4592 250A                            l4584 24BE                            l4576 2486  
                          l4568 2448                            l4752 223E                            l4760 2286  
                          l4744 21D8                            l4736 21A6                            l4728 213A  
                          l4680 1F9A                            l4672 1F6A                            l4664 1F48  
                          l4656 1F16                            l4816 30BC                            l4808 309C  
                          l4840 2BF0                            l4832 2BBE                            l4488 3392  
                          l4920 12DE                            l4912 11CC                            l4904 10BA  
                          l5368 1EAE                            l5296 1AE0                            l5288 1AB0  
                          l4594 250C                            l4586 24D2                            l4578 2496  
                          l4770 22FA                            l4762 22A0                            l4754 224A  
                          l4746 21E6                            l4738 21B4                            l4682 1FAA  
                          l4674 1F78                            l4666 1F4E                            l4658 1F18  
                          l4818 30CC                            l4850 2C78                            l4842 2BFC  
                          l4834 2BD4                            l4826 2B5A                            l4498 3402  
                          l4930 1448                            l4922 1336                            l4914 1224  
                          l4906 1112                            l5298 1AEC                            l4596 251C  
                          l4588 24E0                            l4772 2308                            l4764 22B4  
                          l4756 2258                            l4748 2214                            l4692 1FF4  
                          l4684 1FB0                            l4676 1F7A                            l4668 1F5E  
                          l4860 2CB6                            l4852 2C84                            l4844 2C2E  
                          l4828 2B6A                            l4940 15B2                            l4932 14A0  
                          l4924 138E                            l4916 127C                            l4908 116A  
                          l4598 252E                            l4774 230A                            l4766 22CE  
                          l4758 2282                            l4694 2000                            l4686 1FD0  
                          l4678 1F8A                            l4790 304C                            l4782 2FF8  
                          l4862 2CDA                            l4854 2C92                            l4846 2C30  
                          l4838 2BE8                            l4950 16CE                            l4942 15BC  
                          l4934 14AA                            l4926 1398                            l4918 1286  
                          l4880 3916                            l4768 22EA                            l4776 2310  
                          l4696 200A                            l4688 1FE0                            l4792 304E  
                          l4784 300E                            l4864 2CEA                            l4856 2CB0  
                          l4848 2C3C                            l4960 1838                            l4952 1726  
                          l4944 1614                            l4936 1502                            l4928 13F0  
                          l4872 34EA                            l4882 391A                            l4778 2314  
                          l4698 2020                            l4794 305E                            l4866 2CF8  
                          l4858 2CB2                            l4970 19A2                            l4962 1890  
                          l4954 177E                            l4946 166C                            l4938 155A  
                          l4890 354C                            l4874 34F2                            l4892 35AE  
                          l4884 3924                            l4796 3062                            l4788 3022  
                          l4868 2CFA                            l4972 19FA                            l4964 18E8  
                          l4956 17D6                            l4948 16C4                            l4980 37F6  
                          l4876 3500                            l4886 3934                            l4798 3070  
                          l4974 1A04                            l4966 18F2                            l4958 17E0  
                          l4894 0E48                            l4982 380E                            l4990 3A56  
                          l4878 3526                            l4888 393E                            l4968 194A  
                          l4896 0E52                            l4984 3822                            l4992 3A58  
                          l4898 0F02                            l4986 3824                            l4978 37E6  
                          l4994 3A5A                            l4996 3A64                            l4988 3A4C  
                          l4998 3A66                            STR_1 0E1A                            STR_2 0E05  
                          STR_3 0E3F                            STR_4 0E37                            STR_5 0E2F  
                  _BAUD4CONbits 000EE9                            _LATE 000F7D                            _LATG 000F7F  
                          u5000 267E                            u5001 267A                            u5010 26AC  
                          _T2PR 000FBC                            u5011 26A8                            u5100 215A  
                          u5020 1F16                            u4220 3214                            u5021 1F12  
                          u4301 2D7A                            u4221 3210                            u5110 21B4  
                          u5030 1F28                            u4310 2D9E                            u4230 3226  
                          u5111 21B0                            u5031 1F24                            u4311 2D9A  
                          u4231 3222                            u5200 2308                            u5120 21D4  
                          u5040 1F38                            u4320 2DC8                            u4400 2FB6  
                          u4240 324E                            u6000 1C36                            u5201 2304  
                          u5121 21D0                            u5105 2150                            u5041 1F34  
                          u4321 2DC4                            u4401 2FB2                            u4241 324A  
                          u6001 1C32                            u5130 21E6                            u5050 1F78  
                          u5210 300E                            u4330 2E08                            u4250 3284  
                          u4410 32DC                            u5131 21E2                            u5051 1F74  
                          u5211 300A                            u4331 2E04                            u4251 3280  
                          u4411 32D8                            u5140 2214                            u5060 1F8A  
                          u5220 3042                            u5300 2BD4                            u4340 2E52  
                          u4260 37E4                            u4420 32FE                            u4500 2708  
                          u5141 2210                            u5061 1F86                            u5301 2BD0  
                          u4341 2E4E                            u4261 37E0                            u4421 32FA  
                          u4501 2704                            u5150 222A                            u5070 1F9A  
                          u5230 3070                            u5310 2C2A                            u4350 2EA6  
                          u4270 3908                            u4430 3354                            u4510 2738  
                          u5151 2226                            u5071 1F96                            u5231 306C  
                          u5311 2C26                            u4351 2EA2                            u4271 3904  
                          u4431 3350                            u4511 2734                            u5160 223E  
                          u5080 1FD0                            u5240 3084                            u5320 2C74  
                          u5400 1112                            u4280 2D1E                            u4360 2ED8  
                          u4440 3364                            u4600 292E                            u4520 2754  
                          u5161 223A                            u5081 1FCC                            u5241 3080  
                          u5225 3038                            u5321 2C70                            u5401 110E  
                          u4281 2D1A                            u4361 2ED4                            u4441 3360  
                          u4601 292A                            u4521 2750                            u6017 1AF8  
                          u5170 2258                            u5090 1FE0                            u5250 30AC  
                          u5330 2C92                            u5410 116A                            u4290 2D50  
                          u4370 2F16                            u4450 3884                            u4610 293E  
                          u4530 2782                            u6107 392A                            u5171 2254  
                          u5091 1FDC                            u5251 30A8                            u5331 2C8E  
                          u5411 1166                            u4291 2D4C                            u4371 2F12  
                          u4451 3880                            u4611 293A                            u4531 277E  
                          u6027 1B3E                            u4460 3A34                            u5180 22A0  
                          u5260 30CC                            u5340 2CA2                            u5500 14A0  
                          u5420 11CC                            u4380 2F40                            u4620 2956  
                          u4540 2790                            u4700 29C8                            u4461 3A30  
                          u5181 229C                            u5261 30C8                            u5341 2C9E  
                          u5501 149C                            u5421 11C8                            u4381 2F3C  
                          u4621 2952                            u4541 278C                            u4701 29C4  
                          u6037 1B96                            u4470 3A4A                            u4630 3852  
                          u5190 22CE                            u5270 30DC                            u5350 2CB0  
                          u5510 1502                            u5430 1224                            u4390 2F6E  
                          u4550 28BA                            u4710 2A10                            u4471 3A46  
                          u4631 384A                            u5191 22CA                            u5271 30D8  
                          u5351 2CAC                            u5511 14FE                            u5431 1220  
                          u4391 2F6A                            u4551 28B6                            u4711 2A0C  
                          u6047 1BEC                            u4800 2352                            u5360 2CEA  
                          u5280 2B6A                            u5600 1838                            u5520 155A  
                          u5440 127C                            u4560 28D8                            u4480 26F0  
                          u4720 2A34                            u4801 234E                            u5361 2CE6  
                          u5281 2B66                            u5601 1834                            u5521 1556  
                          u5441 1278                            u4561 28D4                            u4481 26EA  
                          u4721 2A30                            u6057 1DF8                            u4810 2362  
                          u5370 2CF8                            u5290 2B78                            u4650 312C  
                          u5610 1890                            u5530 15B2                            u5450 12DE  
                          u4570 28F2                            u4490 26F2                            u4730 2AD8  
                          u4811 235E                            u5371 2CF4                            u5291 2B74  
                          u4651 3128                            u5611 188C                            u5531 15AE  
                          u5451 12DA                            u4571 28EE                            u4731 2AD4  
                          u6067 1E16                            u4900 252E                            u4820 23A6  
                          u4660 316A                            u4740 33C4                            u5620 18E8  
                          u5540 1614                            u5460 1336                            u4580 290C  
                          u5380 3542                            u4901 252A                            u4821 23A2  
                          u4661 3166                            u4741 33C0                            u5621 18E4  
                          u5541 1610                            u5461 1332                            u4581 2908  
                          u5381 353E                            u6077 1E5C                            u4910 2544  
                          u4830 23B8                            u4670 3188                            u4750 33F6  
                          u5630 194A                            u5550 166C                            u5470 138E  
                          u5390 10BA                            u4590 291C                            u4911 2540  
                          u4831 23B4                            u4671 3184                            u4751 33F2  
                          u5631 1946                            u5551 1668                            u5471 138A  
                          u5391 10B6                            u4591 2918                            u6087 1EA2  
                          u4760 39E2                            u4648 3854                            u4920 2562  
                          u4840 23C8                            u4680 31A8                            u5640 19A2  
                          u5560 16C4                            u5480 13F0                            u4761 39DE  
                          u4921 255E                            u4841 23C4                            u4681 31A4  
                          u5641 199E                            u5561 16C0                            u5481 13EC  
                          u6097 1EE8                            u4930 2582                            u4850 2408  
                          u4690 31F8                            u5650 19FA                            u5570 1726  
                          u5490 1448                            u4770 3ABA                            u4931 257E  
                          u4851 2404                            u4691 31F4                            u5651 19F6  
                          u5571 1722                            u5491 1444                            u4771 3AB4  
                          u5660 3978                            u4940 2594                            u4860 2448  
                          u5580 177E                            u4780 3ABC                            u5661 3974  
                          u4941 2590                            u4861 2444                            u5581 177A  
                          u4950 25C2                            u4870 24BE                            u4790 2340  
                          u5590 17D6                            u5670 3AA0                            u4951 25BE  
                          u4871 24BA                            u4791 233C                            u5591 17D2  
                          u5671 3A9C                            u4960 25D8                            u4880 24E0  
                          u4961 25D4                            u4881 24DC                            u4970 25EC  
                          u4890 250A                            u4971 25E8                            u4891 2506  
                          u4980 2606                            u5940 1AD0                            u4981 2602  
                          u5941 1ACC                            u4990 264E                            u5950 1ADE  
                          u4991 264A                            u5951 1ADA                            u5960 1B16  
                          u5961 1B12                            u5970 1B24                            u5971 1B20  
                          u5980 1C08                            u5981 1C04                            u5990 1C16  
                          u5991 1C12                            abs@a 0017                            _dbuf 0152  
                          _main 1A0E                            _dtoa 26C0                            _prec 007E  
                          _nout 007A                            pad@i 001C                            pad@p 0019  
                          _tiny 0E01                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001E  
                          fsr2l 000FD9                            btemp 005A                            prodh 000FF4  
                          prodl 000FF3                            start 006E                 ___fldiv@new_exp 0024  
                   main@string0 023C                     main@string1 0200                     main@string2 0214  
                   main@string3 0228          __end_of_color_read_Red 36B2                 __end_of_HighISR 006E  
                  ___param_bank 000000                           ??_abs 0019                           ??_pad 001B  
                 ___fltol@sign1 004D                  main@GreenRatio 0252                 __end_of___aodiv 2E94  
                         ?_main 0001                           ?_dtoa 0020                 __end_of___aomod 2FF8  
               __end_of___fldiv 26C0                 __end_of___flmul 2326                 __end_of___fltol 30FE  
      __size_of_initDCmotorsPWM 0042                           i2l406 3AD4                           i2l454 005E  
                         i2l392 3A22                           i2l456 0062                           i2l399 39A4  
                  vfpfcnvrt@fmt 0046      __end_of_I2C_2_Master_Start 3B02      __end_of_I2C_2_Master_Write 3AE2  
                         _flags 0080                           _errno 0150                           _fputc 3202  
                         _isbtw 3392                           _fputs 37A2                           pad@fp 0015  
                         _width 007C                           _putch 3B0C                           dtoa@d 0022  
                         dtoa@i 0042                           dtoa@n 003A                           dtoa@p 0034  
                         dtoa@s 0038                           dtoa@w 0036                           tablat 000FF5  
                         ttemp5 005B                           ttemp6 005E                           ttemp7 0062  
                         status 000FD8                           wtemp8 005B                 __end_of_sprintf 3662  
       __end_of_color_read_Blue 37A2           _I2C_2_Master_RepStart 3B02              putCharToRxBuf@byte 0001  
               ?_color_read_Red 0009                 __initialization 340C                    __end_of_main 1EFC  
                  __end_of_dtoa 29A4                    __end_of_tiny 0E05                 i2_isDataInTxBuf 3ABE  
            putCharToTxBuf@byte 0005                          ??_main 0078                          ??_dtoa 002A  
                 __activetblptr 000001                          ?_fputc 0005                          ?_isbtw 0013  
                        ?_fputs 000E                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l2256 3ABE  
                        i2l4130 001A                          i2l4132 0020                          i2l4134 0030  
                        i2l4136 003E                          i2l4128 000A                          i2l4138 0052  
                        i2l3540 3A0C                          i2l3550 398E                          i2l3542 3A10  
                        i2l3544 3A20                          i2l3546 397A                          i2l3538 39FC  
                        i2l3548 398A                       ??_HighISR 0003        __end_of_color_click_init 394A  
                        _RX4PPS 000E15                          _TX4REG 000EE4                __end_of___xxtofl 2D0C  
                 ?_read_colours 0010                    vfprintf@cfmt 0054                          ___flge 30FE  
              _getCharFromTxBuf 397A                       ??___aodiv 0015     __end_of_determine_color_new 1A0E  
                     ??___aomod 0015                       ??___fldiv 001B                       ??___flmul 0034  
                     ??___fltol 0049                          clear_0 3452                          clear_1 345E  
                        isa$std 000001                          pad@buf 0017                          dtoa@fp 0020  
                        _strlen 38E0                          fputc@c 0005               ?_TxBufferedString 0006  
                        fputs@c 0012                          fputs@i 0013                          fputs@s 000E  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8              ??_TxBufferedString 0008                          putch@c 0001  
              __end_of_vfprintf 354C               ??_initDCmotorsPWM 0007                       ??_sprintf 0056  
                    ___flge@ff1 0005                      ___flge@ff2 0009                    ___xxtofl@arg 000F  
                  ___xxtofl@exp 000E                    ___xxtofl@val 0005           __end_of_isDataInTxBuf 3ABE  
                    __accesstop 0060         __end_of__initialization 346C        __end_of_color_read_Clear 3752  
      __end_of_color_read_Green 3702          ?_I2C_2_Master_RepStart 0001         __end_ofi2_isDataInTxBuf 3AD6  
                 ___rparam_used 000001                      ___fltol@f1 0045                ?_color_read_Blue 0009  
                ??_read_colours 0012                 _Interrupts_init 3AE2                  __pcstackCOMRAM 0001  
                  __pidataBANK1 347E                    __pidataBANK2 38AA                   __end_of_fputc 32CC  
                 __end_of_isbtw 340C                   __end_of_fputs 37E6                   __end_of_putch 3B0E  
                    _calibrateA 0000                      _calibrateW 35AE                         ??_fputc 0009  
                       ??_isbtw 001F                         ??_fputs 0012                         ??_putch 0005  
                    __pbssBANK0 007A                      __pbssBANK1 0100               _color_writetoaddr 3A6C  
                  _T2CLKCONbits 000FBF                         ?___flge 0005              ?_color_writetoaddr 0007  
            __size_of_sendTxBuf 001A             ??_color_writetoaddr 0008                         ?_strlen 0005  
                     ?___xxtofl 0005                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
            __size_of_vfpfcnvrt 01B4                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5         __end_of_Interrupts_init 3AEE  
        color_writetoaddr@value 0007                ??_color_read_Red 000B                         _HighISR 0000  
     __end_of_color_writetoaddr 3A8C                ?i2_isDataInTxBuf 0001              _I2C_2_Master_Start 3AF8  
                    _initUSART4 3A4C              _I2C_2_Master_Write 3AD6                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000E                 __size_of___flge 0104  
                       ___aodiv 2D0C                         ___aomod 2E94                         ___fldiv 2326  
                       ___flmul 1EFC                         ___fltol 2FF8             ?_I2C_2_Master_Start 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0060                    __psmallconst 0E00  
       __size_of_putCharToRxBuf 002A         __size_of_putCharToTxBuf 002A                         __pcinit 340C  
                       __ramtop 0E00                         __ptext0 1A0E                         __ptext1 3610  
                       __ptext2 34EA                         __ptext3 29A4                         __ptext4 26C0  
                       __ptext5 32CC                         __ptext6 38E0                         __ptext7 37A2  
                       __ptext8 3202                         __ptext9 3B0C                 __size_of_strlen 0036  
                     _T2CONbits 000FBD                    __size_of_abs 0040                    __size_of_pad 00C6  
                    ??___xxtofl 0009                       _T2HLTbits 000FBE            __end_of_read_colours 35AE  
                 _RxBufWriteCnt 0059        __end_of_getCharFromTxBuf 39A6                     ?_calibrateA 0001  
                   ?_calibrateW 0010                         main@cal 0256                         _sprintf 3610  
          ??_I2C_2_Master_Start 0006            ??_I2C_2_Master_Write 0006            end_of_initialization 346C  
             __end_of_sendTxBuf 3AA6                         fputc@fp 0007                         fputs@fp 0010  
             ?_color_click_init 0001              ??_color_click_init 0009               __end_of_vfpfcnvrt 2B58  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 0054  
                       strlen@a 0007                         strlen@s 0005                 _initDCmotorsPWM 37E6  
                     _PORTFbits 000F8E                   ___xxtofl@sign 000D                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0026                     ___fldiv@rem 001F        color_writetoaddr@address 0008  
       ??_I2C_2_Master_RepStart 0006     determine_color_new@RedRatio 0062                ?_Interrupts_init 0001  
                   ___flmul@grs 003A               ?_color_read_Clear 0009      __size_of_color_writetoaddr 0020  
                  _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100       __size_of_TxBufferedString 0030  
             ?_color_read_Green 0009                     ?_initUSART4 0001                      main@motorL 0258  
                    main@motorR 0261              ??_color_read_Clear 000B              ??_color_read_Green 000B  
           __size_of_calibrateW 0062                  __end_of___flge 3202                     vfpfcnvrt@ap 0048  
                   vfpfcnvrt@fp 0044                     vfpfcnvrt@ll 004C    __size_of_determine_color_new 0BC6  
                __end_of_strlen 3916             color_read_Clear@tmp 000E             start_initialization 340C  
                   __end_of_abs 38AA                     __end_of_pad 3392                   _TxBufWriteCnt 0057  
           color_read_Green@tmp 000E         __end_of_initDCmotorsPWM 3828                     vfprintf@fmt 0062  
                      ??___flge 000D                  _putCharToRxBuf 39FA                  _putCharToTxBuf 39D0  
                   __pdataBANK1 0172                     __pdataBANK2 0282        __size_of_color_read_Blue 0050  
         __size_of_read_colours 0062                        ??_strlen 0007          __size_of_isDataInTxBuf 0018  
                     ___fldiv@a 0017                       ___fldiv@b 0013   determine_color_new@GreenRatio 0064  
                     ___flmul@a 0030                       ___flmul@b 002C                     __pbssCOMRAM 0056  
           __size_of_initUSART4 0020                   __pcstackBANK0 0060                   __pcstackBANK2 0200  
              ___aodiv@dividend 0005               __size_of___xxtofl 01B4                        ?_HighISR 0001  
                     _dtoa$2272 0032          __end_of_putCharToRxBuf 3A24          __end_of_putCharToTxBuf 39FA  
                  _read_colours 354C                       __pintcode 0000                        ?___aodiv 0005  
                      ?___aomod 0005                        ?___fldiv 0013                ___aodiv@quotient 0017  
                      ?___flmul 002C                        ?___fltol 0045          TxBufferedString@string 0006  
          I2C_2_Master_Read@ack 0007               __size_of_vfprintf 0062            I2C_2_Master_Read@tmp 0008  
                   __smallconst 0E00               _I2C_2_Master_Idle 3A24               _I2C_2_Master_Init 39A6  
             _I2C_2_Master_Read 3828               _I2C_2_Master_Stop 3AEE                    _RxBufReadCnt 0058  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                  ??_calibrateA 0001                    ??_calibrateW 0012              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0005                        ?_sprintf 0066               ?_getCharFromTxBuf 0001  
                __size_of_fputc 00CA                  __size_of_isbtw 007A                  __size_of_fputs 0044  
                __size_of_putch 0002              ??_getCharFromTxBuf 0001             ??_I2C_2_Master_Idle 0005  
           ??_I2C_2_Master_Init 0005             ??_I2C_2_Master_Read 0006                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0006                        _LATCbits 000F7B                   _isDataInTxBuf 3AA6  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
              _TxBufferedString 394A                        _LATGbits 000F7F                        _LATHbits 000F80  
                     _sendTxBuf 3A8C                        _PIE4bits 000E2D                        i2u155_40 3AD2  
                      i2u155_41 3ACC                        i2u340_40 398A                        i2u156_40 3AD4  
                      i2u420_40 003E                        i2u340_41 3986                        i2u420_41 003A  
                      i2u421_40 0052                        i2u421_41 004E                        i2u418_40 001A  
                      i2u418_41 0016                        i2u339_40 3A0C                        i2u419_40 0030  
                      i2u339_41 3A08                        i2u419_41 002C                        _PIR4bits 000E37  
          determine_color_new@m 004F                 ?_putCharToRxBuf 0001                ?_initDCmotorsPWM 0005  
               ?_putCharToTxBuf 0001                        _SSP2CON2 000EDA                        _SSP2STAT 000ED8  
      __size_ofi2_isDataInTxBuf 0018              __end_of_calibrateW 3610                       _vfpfcnvrt 29A4  
        determine_color1@F14773 01A8       __size_of_color_click_init 0034          determine_color2@F14792 0172  
     __end_of_I2C_2_Master_Idle 3A4C       __end_of_I2C_2_Master_Init 39D0       __end_of_I2C_2_Master_Read 386A  
        determine_color3@F14811 0282       __end_of_I2C_2_Master_Stop 3AF8     I2C_2_Master_Write@data_byte 0006  
             ??_color_read_Blue 000B                    _TxBufReadCnt 0056                       copy_data0 3420  
                     copy_data1 3440     __size_of_I2C_2_Master_Start 000A     __size_of_I2C_2_Master_Write 000C  
__size_of_I2C_2_Master_RepStart 000A                  ?_isDataInTxBuf 0001   __end_of_I2C_2_Master_RepStart 3B0C  
            color_read_Blue@tmp 000E                     calibrateW@m 0010                __size_of_HighISR 006E  
                    ?_sendTxBuf 0001             _determine_color_new 0E48                    ??_initUSART4 0005  
                      __Hrparam 0000                      vfprintf@ap 0064                        __Lrparam 0000  
                    vfprintf@fp 0060                    __Lsmallconst 0E00         __size_of_color_read_Red 0050  
              __size_of___aodiv 0188                __size_of___aomod 0164                __size_of___fldiv 039A  
              __size_of___flmul 042A                __size_of___fltol 0106                       isbtw@high 001B  
                    ?_vfpfcnvrt 0044                 ___aodiv@divisor 000D       __size_of_color_read_Clear 0050  
     __size_of_color_read_Green 0050                 ___aodiv@counter 0015                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4            ?_determine_color_new 004F                      sprintf@fmt 0068  
                      ___xxtofl 2B58              __end_of_initUSART4 3A6C                        __ptext10 386A  
                      __ptext11 2E94                        __ptext20 30FE                        __ptext12 2D0C  
                      __ptext21 2B58                        __ptext13 3A8C                        __ptext30 36B2  
                      __ptext22 2FF8                        __ptext14 3AA6                        __ptext31 3702  
                      __ptext23 1EFC                        __ptext15 354C                        __ptext40 39D0  
                      __ptext32 3752                        __ptext24 2326                        __ptext16 3A4C  
                      __ptext41 3AE2                        __ptext33 3AD6                        __ptext25 3916  
                      __ptext17 37E6                        __ptext34 3AEE                        __ptext26 3A6C  
                      __ptext18 0E48                        __ptext43 3ABE                        __ptext35 3AF8  
                      __ptext27 39A6                        __ptext19 3392                        __ptext44 39FA  
                      __ptext36 3B02                        __ptext28 35AE                        __ptext45 397A  
                      __ptext37 3828                        __ptext29 3662                        __ptext38 3A24  
                      __ptext39 394A                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
              __size_of_sprintf 0052                   __size_of_main 04EE                   __size_of_dtoa 02E4  
                      isa$xinst 000000        __size_of_Interrupts_init 000C                      _RC4STAbits 000EE7  
                      int$flags 005A                        _vfprintf 34EA                        main@test 026A  
    __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042  
         ??_determine_color_new 0051                ___aomod@dividend 0005      __size_of_I2C_2_Master_Stop 000A  
                    _INTCONbits 000FF2               ??i2_isDataInTxBuf 0001                        isbtw@low 0017  
                      isbtw@num 0013                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
               ??_isDataInTxBuf 0005                        intlevel2 0000                       sprintf@ap 0070  
                   ??_sendTxBuf 0005          determine_color_new@out 0060                   read_colours@m 0010  
               ___aomod@divisor 000D                     ??_vfpfcnvrt 004A                 ___aomod@counter 0015  
              _color_click_init 3916        __end_of_TxBufferedString 397A                        sprintf@f 0072  
                      sprintf@s 0066                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0016                ??_putCharToRxBuf 0001  
              ??_putCharToTxBuf 0005                    ___aomod@sign 0016    determine_color_new@BlueRatio 0066  
