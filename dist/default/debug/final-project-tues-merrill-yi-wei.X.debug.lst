

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 01 14:31:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72  0000                     
    73                           ; Version 2.20
    74                           ; Generated 05/05/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK1
   109  003ABE                     __pidataBANK1:
   110                           	callstack 0
   111                           
   112                           ;initializer for determine_color1@F14704
   113  003ABE  002F               	dw	47
   114  003AC0  056E               	dw	1390
   115  003AC2  0307               	dw	775
   116  003AC4  0951               	dw	2385
   117  003AC6  067C               	dw	1660
   118  003AC8  031B               	dw	795
   119  003ACA  0686               	dw	1670
   120  003ACC  048A               	dw	1162
   121  003ACE  0257               	dw	599
   122  003AD0  0A6F               	dw	2671
   123  003AD2  05C1               	dw	1473
   124  003AD4  02E1               	dw	737
   125  003AD6  0B25               	dw	2853
   126  003AD8  056F               	dw	1391
   127  003ADA  0313               	dw	787
   128  003ADC  0976               	dw	2422
   129  003ADE  03DF               	dw	991
   130  003AE0  0234               	dw	564
   131  003AE2  08B1               	dw	2225
   132  003AE4  05E3               	dw	1507
   133  003AE6  0314               	dw	788
   134  003AE8  0A8E               	dw	2702
   135  003AEA  0676               	dw	1654
   136  003AEC  0378               	dw	888
   137  003AEE  002F               	dw	47
   138  003AF0  0017               	dw	23
   139  003AF2  0012               	dw	18
   140                           
   141                           	psect	idataBANK2
   142  0037A6                     __pidataBANK2:
   143                           	callstack 0
   144                           
   145                           ;initializer for determine_color3@F14742
   146  0037A6  019F               	dw	415
   147  0037A8  0385               	dw	901
   148  0037AA  0158               	dw	344
   149  0037AC  012B               	dw	299
   150  0037AE  0469               	dw	1129
   151  0037B0  01AA               	dw	426
   152  0037B2  0100               	dw	256
   153  0037B4  0453               	dw	1107
   154  0037B6  01AE               	dw	430
   155  0037B8  0203               	dw	515
   156  0037BA  0567               	dw	1383
   157  0037BC  01F5               	dw	501
   158  0037BE  01DB               	dw	475
   159  0037C0  04CA               	dw	1226
   160  0037C2  01E1               	dw	481
   161  0037C4  01BD               	dw	445
   162  0037C6  03E5               	dw	997
   163  0037C8  0179               	dw	377
   164  0037CA  019F               	dw	415
   165  0037CC  0589               	dw	1417
   166  0037CE  022F               	dw	559
   167  0037D0  0217               	dw	535
   168  0037D2  062C               	dw	1580
   169  0037D4  0279               	dw	633
   170  0037D6  0499               	dw	1177
   171  0037D8  00F4               	dw	244
   172  0037DA  00B7               	dw	183
   173                           
   174                           ;initializer for determine_color2@F14723
   175  0037DC  0991               	dw	2449
   176  0037DE  009E               	dw	158
   177  0037E0  012C               	dw	300
   178  0037E2  06C9               	dw	1737
   179  0037E4  00A8               	dw	168
   180  0037E6  00EB               	dw	235
   181  0037E8  069C               	dw	1692
   182  0037EA  0093               	dw	147
   183  0037EC  00EF               	dw	239
   184  0037EE  09F0               	dw	2544
   185  0037F0  00FA               	dw	250
   186  0037F2  014E               	dw	334
   187  0037F4  096E               	dw	2414
   188  0037F6  00ED               	dw	237
   189  0037F8  00F8               	dw	248
   190  0037FA  09F9               	dw	2553
   191  0037FC  00B1               	dw	177
   192  0037FE  013C               	dw	316
   193  003800  08AD               	dw	2221
   194  003802  00E9               	dw	233
   195  003804  014F               	dw	335
   196  003806  0A10               	dw	2576
   197  003808  0116               	dw	278
   198  00380A  0187               	dw	391
   199  00380C  0332               	dw	818
   200  00380E  017E               	dw	382
   201  003810  00C1               	dw	193
   202                           
   203                           	psect	smallconst
   204  000E00                     __psmallconst:
   205                           	callstack 0
   206  000E00  00                 	db	0
   207  000E01  4260               	dw	16992
   208  000E03  0DA2               	dw	3490
   209  000E05                     __end_of_tiny:
   210                           	callstack 0
   211  0000                     _PIE4bits	set	3629
   212  0000                     _TX4REG	set	3812
   213  0000                     _RC4REG	set	3811
   214  0000                     _PIR4bits	set	3639
   215  0000                     _RC4STAbits	set	3815
   216  0000                     _SP4BRGH	set	3814
   217  0000                     _SP4BRGL	set	3813
   218  0000                     _TX4STAbits	set	3816
   219  0000                     _BAUD4CONbits	set	3817
   220  0000                     _RX4PPS	set	3605
   221  0000                     _RC0PPS	set	3682
   222  0000                     _ANSELFbits	set	3764
   223  0000                     _RC7PPS	set	3689
   224  0000                     _RE2PPS	set	3700
   225  0000                     _SSP2BUF	set	3797
   226  0000                     _SSP2CON2bits	set	3802
   227  0000                     _SSP2CON2	set	3802
   228  0000                     _SSP2STAT	set	3800
   229  0000                     _RD6PPS	set	3696
   230  0000                     _RD5PPS	set	3695
   231  0000                     _SSP2CLKPPS	set	3612
   232  0000                     _SSP2DATPPS	set	3613
   233  0000                     _ANSELDbits	set	3751
   234  0000                     _SSP2ADD	set	3798
   235  0000                     _SSP2CON1bits	set	3801
   236  0000                     _INTCONbits	set	4082
   237  0000                     _PORTFbits	set	3982
   238  0000                     _LATDbits	set	3964
   239  0000                     _LATFbits	set	3966
   240  0000                     _TRISAbits	set	3969
   241  0000                     _LATAbits	set	3961
   242  0000                     _TRISFbits	set	3974
   243  0000                     _PWM7CONbits	set	4001
   244  0000                     _PWM6CONbits	set	4004
   245  0000                     _T2PR	set	4028
   246  0000                     _T2CLKCONbits	set	4031
   247  0000                     _T2HLTbits	set	4030
   248  0000                     _T2CONbits	set	4029
   249  0000                     _LATGbits	set	3967
   250  0000                     _LATCbits	set	3963
   251  0000                     _LATEbits	set	3965
   252  0000                     _TRISGbits	set	3975
   253  0000                     _TRISCbits	set	3971
   254  0000                     _TRISEbits	set	3973
   255  0000                     _TRISDbits	set	3972
   256  0000                     _LATG	set	3967
   257  0000                     _LATE	set	3965
   258  0000                     _PWM7DCH	set	4000
   259  0000                     _PWM6DCH	set	4003
   260  000E05                     STR_2:
   261  000E05  20                 	db	32
   262  000E06  54                 	db	84	;'T'
   263  000E07  31                 	db	49	;'1'
   264  000E08  72                 	db	114	;'r'
   265  000E09  3A                 	db	58	;':'
   266  000E0A  25                 	db	37
   267  000E0B  64                 	db	100	;'d'
   268  000E0C  20                 	db	32
   269  000E0D  54                 	db	84	;'T'
   270  000E0E  31                 	db	49	;'1'
   271  000E0F  67                 	db	103	;'g'
   272  000E10  3A                 	db	58	;':'
   273  000E11  25                 	db	37
   274  000E12  64                 	db	100	;'d'
   275  000E13  20                 	db	32
   276  000E14  54                 	db	84	;'T'
   277  000E15  31                 	db	49	;'1'
   278  000E16  62                 	db	98	;'b'
   279  000E17  3A                 	db	58	;':'
   280  000E18  25                 	db	37
   281  000E19  64                 	db	100	;'d'
   282  000E1A  20                 	db	32
   283  000E1B  00                 	db	0
   284  000E1C                     STR_3:
   285  000E1C  20                 	db	32
   286  000E1D  54                 	db	84	;'T'
   287  000E1E  32                 	db	50	;'2'
   288  000E1F  72                 	db	114	;'r'
   289  000E20  3A                 	db	58	;':'
   290  000E21  25                 	db	37
   291  000E22  64                 	db	100	;'d'
   292  000E23  20                 	db	32
   293  000E24  54                 	db	84	;'T'
   294  000E25  32                 	db	50	;'2'
   295  000E26  67                 	db	103	;'g'
   296  000E27  3A                 	db	58	;':'
   297  000E28  25                 	db	37
   298  000E29  64                 	db	100	;'d'
   299  000E2A  20                 	db	32
   300  000E2B  54                 	db	84	;'T'
   301  000E2C  32                 	db	50	;'2'
   302  000E2D  62                 	db	98	;'b'
   303  000E2E  3A                 	db	58	;':'
   304  000E2F  25                 	db	37
   305  000E30  64                 	db	100	;'d'
   306  000E31  20                 	db	32
   307  000E32  00                 	db	0
   308  000E33                     STR_4:
   309  000E33  20                 	db	32
   310  000E34  54                 	db	84	;'T'
   311  000E35  33                 	db	51	;'3'
   312  000E36  72                 	db	114	;'r'
   313  000E37  3A                 	db	58	;':'
   314  000E38  25                 	db	37
   315  000E39  64                 	db	100	;'d'
   316  000E3A  20                 	db	32
   317  000E3B  54                 	db	84	;'T'
   318  000E3C  33                 	db	51	;'3'
   319  000E3D  67                 	db	103	;'g'
   320  000E3E  3A                 	db	58	;':'
   321  000E3F  25                 	db	37
   322  000E40  64                 	db	100	;'d'
   323  000E41  20                 	db	32
   324  000E42  54                 	db	84	;'T'
   325  000E43  33                 	db	51	;'3'
   326  000E44  62                 	db	98	;'b'
   327  000E45  3A                 	db	58	;':'
   328  000E46  25                 	db	37
   329  000E47  64                 	db	100	;'d'
   330  000E48  20                 	db	32
   331  000E49  00                 	db	0
   332  000E4A                     STR_1:
   333  000E4A  20                 	db	32
   334  000E4B  54                 	db	84	;'T'
   335  000E4C  31                 	db	49	;'1'
   336  000E4D  3A                 	db	58	;':'
   337  000E4E  25                 	db	37
   338  000E4F  64                 	db	100	;'d'
   339  000E50  20                 	db	32
   340  000E51  54                 	db	84	;'T'
   341  000E52  32                 	db	50	;'2'
   342  000E53  3A                 	db	58	;':'
   343  000E54  25                 	db	37
   344  000E55  64                 	db	100	;'d'
   345  000E56  20                 	db	32
   346  000E57  54                 	db	84	;'T'
   347  000E58  33                 	db	51	;'3'
   348  000E59  3A                 	db	58	;':'
   349  000E5A  25                 	db	37
   350  000E5B  64                 	db	100	;'d'
   351  000E5C  20                 	db	32
   352  000E5D  00                 	db	0
   353  000E5E  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           ; #config settings
   356                           
   357                           	psect	cinit
   358  0036B2                     __pcinit:
   359                           	callstack 0
   360  0036B2                     start_initialization:
   361                           	callstack 0
   362  0036B2                     __initialization:
   363                           	callstack 0
   364                           
   365                           ; Initialize objects allocated to BANK2 (108 bytes)
   366                           ; load TBLPTR registers with __pidataBANK2
   367  0036B2  0EA6               	movlw	low __pidataBANK2
   368  0036B4  6EF6               	movwf	tblptrl,c
   369  0036B6  0E37               	movlw	high __pidataBANK2
   370  0036B8  6EF7               	movwf	tblptrh,c
   371  0036BA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   372  0036BC  6EF8               	movwf	tblptru,c
   373  0036BE  EE02  F000         	lfsr	0,__pdataBANK2
   374  0036C2  EE10 F06C          	lfsr	1,108
   375  0036C6                     copy_data0:
   376  0036C6  0009               	tblrd		*+
   377  0036C8  CFF5 FFEE          	movff	tablat,postinc0
   378  0036CC  50E5               	movf	postdec1,w,c
   379  0036CE  50E1               	movf	fsr1l,w,c
   380  0036D0  E1FA               	bnz	copy_data0
   381                           
   382                           ; Initialize objects allocated to BANK1 (54 bytes)
   383                           ; load TBLPTR registers with __pidataBANK1
   384  0036D2  0EBE               	movlw	low __pidataBANK1
   385  0036D4  6EF6               	movwf	tblptrl,c
   386  0036D6  0E3A               	movlw	high __pidataBANK1
   387  0036D8  6EF7               	movwf	tblptrh,c
   388  0036DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   389  0036DC  6EF8               	movwf	tblptru,c
   390  0036DE  EE01  F048         	lfsr	0,__pdataBANK1
   391  0036E2  EE10 F036          	lfsr	1,54
   392  0036E6                     copy_data1:
   393  0036E6  0009               	tblrd		*+
   394  0036E8  CFF5 FFEE          	movff	tablat,postinc0
   395  0036EC  50E5               	movf	postdec1,w,c
   396  0036EE  50E1               	movf	fsr1l,w,c
   397  0036F0  E1FA               	bnz	copy_data1
   398                           
   399                           ; Clear objects allocated to BANK2 (60 bytes)
   400  0036F2  EE02  F06C         	lfsr	0,__pbssBANK2
   401  0036F6  0E3C               	movlw	60
   402  0036F8                     clear_0:
   403  0036F8  6AEE               	clrf	postinc0,c
   404  0036FA  06E8               	decf	wreg,f,c
   405  0036FC  E1FD               	bnz	clear_0
   406                           
   407                           ; Clear objects allocated to BANK1 (24 bytes)
   408  0036FE  EE01  F07E         	lfsr	0,__pbssBANK1
   409  003702  0E18               	movlw	24
   410  003704                     clear_1:
   411  003704  6AEE               	clrf	postinc0,c
   412  003706  06E8               	decf	wreg,f,c
   413  003708  E1FD               	bnz	clear_1
   414                           
   415                           ; Clear objects allocated to BANK0 (62 bytes)
   416  00370A  EE00  F060         	lfsr	0,__pbssBANK0
   417  00370E  0E3E               	movlw	62
   418  003710                     clear_2:
   419  003710  6AEE               	clrf	postinc0,c
   420  003712  06E8               	decf	wreg,f,c
   421  003714  E1FD               	bnz	clear_2
   422                           
   423                           ; Clear objects allocated to COMRAM (4 bytes)
   424  003716  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   425  003718  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   426  00371A  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   427  00371C  6A56               	clrf	__pbssCOMRAM& (0+255),c
   428  00371E                     end_of_initialization:
   429                           	callstack 0
   430  00371E                     __end_of__initialization:
   431                           	callstack 0
   432  00371E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   433  003720  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   434  003722  0E00               	movlw	low (__Lsmallconst shr (0+16))
   435  003724  6EF8               	movwf	tblptru,c
   436  003726  0E0E               	movlw	high __Lsmallconst
   437  003728  6EF7               	movwf	tblptrh,c
   438  00372A  0100               	movlb	0
   439  00372C  EFF0  F00B         	goto	_main	;jump to C main() function
   440                           
   441                           	psect	bssCOMRAM
   442  000056                     __pbssCOMRAM:
   443                           	callstack 0
   444  000056                     _TxBufReadCnt:
   445                           	callstack 0
   446  000056                     	ds	1
   447  000057                     _TxBufWriteCnt:
   448                           	callstack 0
   449  000057                     	ds	1
   450  000058                     _RxBufReadCnt:
   451                           	callstack 0
   452  000058                     	ds	1
   453  000059                     _RxBufWriteCnt:
   454                           	callstack 0
   455  000059                     	ds	1
   456                           
   457                           	psect	bssBANK0
   458  000060                     __pbssBANK0:
   459                           	callstack 0
   460  000060                     _EUSART4RXbuf:
   461                           	callstack 0
   462  000060                     	ds	20
   463  000074                     _errno:
   464                           	callstack 0
   465  000074                     	ds	2
   466  000076                     _nout:
   467                           	callstack 0
   468  000076                     	ds	2
   469  000078                     _width:
   470                           	callstack 0
   471  000078                     	ds	2
   472  00007A                     _prec:
   473                           	callstack 0
   474  00007A                     	ds	2
   475  00007C                     _flags:
   476                           	callstack 0
   477  00007C                     	ds	2
   478  00007E                     _dbuf:
   479                           	callstack 0
   480  00007E                     	ds	32
   481                           
   482                           	psect	bssBANK1
   483  00017E                     __pbssBANK1:
   484                           	callstack 0
   485  00017E                     	ds	6
   486  000184                     	ds	6
   487  00018A                     	ds	6
   488  000190                     	ds	6
   489                           
   490                           	psect	dataBANK1
   491  000148                     __pdataBANK1:
   492                           	callstack 0
   493  000148                     determine_color1@F14704:
   494                           	callstack 0
   495  000148                     	ds	54
   496                           
   497                           	psect	bssBANK2
   498  00026C                     __pbssBANK2:
   499                           	callstack 0
   500  00026C                     _EUSART4TXbuf:
   501                           	callstack 0
   502  00026C                     	ds	60
   503                           
   504                           	psect	dataBANK2
   505  000200                     __pdataBANK2:
   506                           	callstack 0
   507  000200                     determine_color3@F14742:
   508                           	callstack 0
   509  000200                     	ds	54
   510  000236                     determine_color2@F14723:
   511                           	callstack 0
   512  000236                     	ds	54
   513                           
   514                           	psect	cstackBANK3
   515  000300                     __pcstackBANK3:
   516                           	callstack 0
   517  000300                     main@string:
   518                           	callstack 0
   519                           
   520                           ; 20 bytes @ 0x0
   521  000300                     	ds	20
   522  000314                     main@string1:
   523                           	callstack 0
   524                           
   525                           ; 20 bytes @ 0x14
   526  000314                     	ds	20
   527  000328                     main@string2:
   528                           	callstack 0
   529                           
   530                           ; 20 bytes @ 0x28
   531  000328                     	ds	20
   532  00033C                     main@string3:
   533                           	callstack 0
   534                           
   535                           ; 20 bytes @ 0x3C
   536  00033C                     	ds	20
   537  000350                     main@x:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x50
   541  000350                     	ds	2
   542  000352                     main@y:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x52
   546  000352                     	ds	2
   547  000354                     main@z:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x54
   551  000354                     	ds	2
   552  000356                     main@a:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x56
   556  000356                     	ds	2
   557  000358                     main@b:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x58
   561  000358                     	ds	2
   562  00035A                     main@c:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x5A
   566  00035A                     	ds	2
   567  00035C                     main@d:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x5C
   571  00035C                     	ds	2
   572  00035E                     main@e:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x5E
   576  00035E                     	ds	2
   577  000360                     main@f:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x60
   581  000360                     	ds	2
   582  000362                     main@g:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x62
   586  000362                     	ds	2
   587  000364                     main@h:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x64
   591  000364                     	ds	2
   592  000366                     main@i_1402:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x66
   596  000366                     	ds	2
   597  000368                     main@test1:
   598                           	callstack 0
   599                           
   600                           ; 6 bytes @ 0x68
   601  000368                     	ds	6
   602  00036E                     main@test2:
   603                           	callstack 0
   604                           
   605                           ; 6 bytes @ 0x6E
   606  00036E                     	ds	6
   607  000374                     main@test3:
   608                           	callstack 0
   609                           
   610                           ; 6 bytes @ 0x74
   611  000374                     	ds	6
   612  00037A                     main@count:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x7A
   616  00037A                     	ds	2
   617  00037C                     main@j:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x7C
   621  00037C                     	ds	2
   622  00037E                     main@testresults:
   623                           	callstack 0
   624                           
   625                           ; 6 bytes @ 0x7E
   626  00037E                     	ds	6
   627  000384                     main@i:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x84
   631  000384                     	ds	2
   632  000386                     main@motorL:
   633                           	callstack 0
   634                           
   635                           ; 9 bytes @ 0x86
   636  000386                     	ds	9
   637  00038F                     main@motorR:
   638                           	callstack 0
   639                           
   640                           ; 9 bytes @ 0x8F
   641  00038F                     	ds	9
   642  000398                     main@test:
   643                           	callstack 0
   644                           
   645                           ; 24 bytes @ 0x98
   646  000398                     	ds	24
   647                           
   648                           	psect	cstackBANK1
   649  000100                     __pcstackBANK1:
   650                           	callstack 0
   651  000100                     determine_color1@data:
   652                           	callstack 0
   653  000100                     determine_color2@data:
   654                           	callstack 0
   655  000100                     determine_color3@data:
   656                           	callstack 0
   657                           
   658                           ; 54 bytes @ 0x0
   659  000100                     	ds	54
   660  000136                     determine_color1@rr:
   661                           	callstack 0
   662  000136                     determine_color2@rr:
   663                           	callstack 0
   664  000136                     determine_color3@rr:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x36
   668  000136                     	ds	2
   669  000138                     determine_color1@gg:
   670                           	callstack 0
   671  000138                     determine_color2@gg:
   672                           	callstack 0
   673  000138                     determine_color3@gg:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x38
   677  000138                     	ds	2
   678  00013A                     determine_color1@bb:
   679                           	callstack 0
   680  00013A                     determine_color2@bb:
   681                           	callstack 0
   682  00013A                     determine_color3@bb:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x3A
   686  00013A                     	ds	2
   687  00013C                     determine_color1@temp:
   688                           	callstack 0
   689  00013C                     determine_color2@temp:
   690                           	callstack 0
   691  00013C                     determine_color3@temp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x3C
   695  00013C                     	ds	2
   696  00013E                     determine_color1@out:
   697                           	callstack 0
   698  00013E                     determine_color2@out:
   699                           	callstack 0
   700  00013E                     determine_color3@out:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x3E
   704  00013E                     	ds	2
   705  000140                     determine_color1@calc:
   706                           	callstack 0
   707  000140                     determine_color2@calc:
   708                           	callstack 0
   709  000140                     determine_color3@calc:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x40
   713  000140                     	ds	2
   714  000142                     _determine_color1$2504:
   715                           	callstack 0
   716  000142                     _determine_color2$2506:
   717                           	callstack 0
   718  000142                     _determine_color3$2508:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x42
   722  000142                     	ds	2
   723  000144                     _determine_color1$2505:
   724                           	callstack 0
   725  000144                     _determine_color2$2507:
   726                           	callstack 0
   727  000144                     _determine_color3$2509:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x44
   731  000144                     	ds	2
   732  000146                     determine_color1@j:
   733                           	callstack 0
   734  000146                     determine_color2@j:
   735                           	callstack 0
   736  000146                     determine_color3@j:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x46
   740  000146                     	ds	2
   741                           
   742                           	psect	cstackBANK0
   743  00009E                     __pcstackBANK0:
   744                           	callstack 0
   745  00009E                     ?_vfprintf:
   746                           	callstack 0
   747  00009E                     vfprintf@fp:
   748                           	callstack 0
   749  00009E                     sqrtf@s:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x0
   753  00009E                     	ds	2
   754  0000A0                     vfprintf@fmt:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x2
   758  0000A0                     	ds	2
   759  0000A2                     vfprintf@ap:
   760                           	callstack 0
   761  0000A2                     sqrtf@i:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x4
   765  0000A2                     	ds	2
   766  0000A4                     ?_sprintf:
   767                           	callstack 0
   768  0000A4                     sprintf@s:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x6
   772  0000A4                     	ds	2
   773  0000A6                     sprintf@fmt:
   774                           	callstack 0
   775  0000A6                     sqrtf@__xc8_float_word:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x8
   779  0000A6                     	ds	4
   780  0000AA                     sqrtf@q:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0xC
   784  0000AA                     	ds	4
   785  0000AE                     sprintf@ap:
   786                           	callstack 0
   787  0000AE                     sqrtf@t:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x10
   791  0000AE                     	ds	2
   792  0000B0                     sprintf@f:
   793                           	callstack 0
   794                           
   795                           ; 6 bytes @ 0x12
   796  0000B0                     	ds	2
   797  0000B2                     sqrtf@z:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x14
   801  0000B2                     	ds	4
   802  0000B6                     sqrtf@m:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x18
   806  0000B6                     	ds	4
   807  0000BA                     sqrtf@r:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x1C
   811  0000BA                     	ds	4
   812  0000BE                     sqrtf@ix:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x20
   816  0000BE                     	ds	4
   817  0000C2                     ?___fltol:
   818                           	callstack 0
   819  0000C2                     ___fltol@f1:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x24
   823  0000C2                     	ds	4
   824  0000C6                     ?_determine_color1:
   825                           	callstack 0
   826  0000C6                     ?_determine_color2:
   827                           	callstack 0
   828  0000C6                     ?_determine_color3:
   829                           	callstack 0
   830  0000C6                     determine_color1@m:
   831                           	callstack 0
   832  0000C6                     determine_color2@m:
   833                           	callstack 0
   834  0000C6                     determine_color3@m:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x28
   838  0000C6                     	ds	2
   839  0000C8                     ??_main:
   840                           
   841                           ; 1 bytes @ 0x2A
   842  0000C8                     	ds	5
   843                           
   844                           	psect	cstackCOMRAM
   845  000001                     __pcstackCOMRAM:
   846                           	callstack 0
   847  000001                     ??_getCharFromTxBuf:
   848  000001                     putCharToRxBuf@byte:
   849                           	callstack 0
   850  000001                     
   851                           ; 1 bytes @ 0x0
   852  000001                     	ds	2
   853  000003                     ??_HighISR:
   854                           
   855                           ; 1 bytes @ 0x2
   856  000003                     	ds	2
   857  000005                     ??_I2C_2_Master_Idle:
   858  000005                     ?_strlen:
   859                           	callstack 0
   860  000005                     ?___wmul:
   861                           	callstack 0
   862  000005                     ?___flmul:
   863                           	callstack 0
   864  000005                     ?_nanf:
   865                           	callstack 0
   866  000005                     ?___xxtofl:
   867                           	callstack 0
   868  000005                     ?___aodiv:
   869                           	callstack 0
   870  000005                     ?___aomod:
   871                           	callstack 0
   872  000005                     putCharToTxBuf@byte:
   873                           	callstack 0
   874  000005                     initDCmotorsPWM@PWMperiod:
   875                           	callstack 0
   876  000005                     ___wmul@multiplier:
   877                           	callstack 0
   878  000005                     fputc@c:
   879                           	callstack 0
   880  000005                     nanf@s:
   881                           	callstack 0
   882  000005                     strlen@s:
   883                           	callstack 0
   884  000005                     ___flge@ff1:
   885                           	callstack 0
   886  000005                     ___flmul@b:
   887                           	callstack 0
   888  000005                     ___xxtofl@val:
   889                           	callstack 0
   890  000005                     ___aodiv@dividend:
   891                           	callstack 0
   892  000005                     ___aomod@dividend:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x4
   896  000005                     	ds	1
   897  000006                     ??_I2C_2_Master_Read:
   898  000006                     I2C_2_Master_Write@data_byte:
   899                           	callstack 0
   900  000006                     TxBufferedString@string:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x5
   904  000006                     	ds	1
   905  000007                     color_writetoaddr@value:
   906                           	callstack 0
   907  000007                     I2C_2_Master_Read@ack:
   908                           	callstack 0
   909  000007                     ___wmul@multiplicand:
   910                           	callstack 0
   911  000007                     fputc@fp:
   912                           	callstack 0
   913  000007                     strlen@a:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x6
   917  000007                     	ds	1
   918  000008                     color_writetoaddr@address:
   919                           	callstack 0
   920  000008                     I2C_2_Master_Read@tmp:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x7
   924  000008                     	ds	1
   925  000009                     ??_fputc:
   926  000009                     ??_color_click_init:
   927  000009                     ??___xxtofl:
   928  000009                     ?_color_read_Red:
   929                           	callstack 0
   930  000009                     ?_color_read_Green:
   931                           	callstack 0
   932  000009                     ?_color_read_Blue:
   933                           	callstack 0
   934  000009                     ___wmul@product:
   935                           	callstack 0
   936  000009                     ___flge@ff2:
   937                           	callstack 0
   938  000009                     ___flmul@a:
   939                           	callstack 0
   940  000009                     nanf@u:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x8
   944  000009                     	ds	2
   945  00000B                     ??_color_read_Red:
   946  00000B                     ??_color_read_Green:
   947  00000B                     ??_color_read_Blue:
   948                           
   949                           ; 1 bytes @ 0xA
   950  00000B                     	ds	2
   951  00000D                     ??___flmul:
   952  00000D                     ??___flge:
   953  00000D                     ___xxtofl@sign:
   954                           	callstack 0
   955  00000D                     ___aodiv@divisor:
   956                           	callstack 0
   957  00000D                     ___aomod@divisor:
   958                           	callstack 0
   959                           
   960                           ; 8 bytes @ 0xC
   961  00000D                     	ds	1
   962  00000E                     ___xxtofl@exp:
   963                           	callstack 0
   964  00000E                     color_read_Red@tmp:
   965                           	callstack 0
   966  00000E                     color_read_Green@tmp:
   967                           	callstack 0
   968  00000E                     color_read_Blue@tmp:
   969                           	callstack 0
   970  00000E                     fputs@s:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0xD
   974  00000E                     	ds	1
   975  00000F                     ___xxtofl@arg:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0xE
   979  00000F                     	ds	1
   980  000010                     read_colours@m:
   981                           	callstack 0
   982  000010                     fputs@fp:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0xF
   986  000010                     	ds	1
   987  000011                     ___flmul@sign:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x10
   991  000011                     	ds	1
   992  000012                     ??_read_colours:
   993  000012                     ___flmul@aexp:
   994                           	callstack 0
   995  000012                     fputs@c:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x11
   999  000012                     	ds	1
  1000  000013                     fputs@i:
  1001                           	callstack 0
  1002  000013                     ___flmul@grs:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x12
  1006  000013                     	ds	2
  1007  000015                     ?_pad:
  1008                           	callstack 0
  1009  000015                     ___aodiv@counter:
  1010                           	callstack 0
  1011  000015                     ___aomod@counter:
  1012                           	callstack 0
  1013  000015                     pad@fp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x14
  1017  000015                     	ds	1
  1018  000016                     ___aodiv@sign:
  1019                           	callstack 0
  1020  000016                     ___aomod@sign:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x15
  1024  000016                     	ds	1
  1025  000017                     ?_abs:
  1026                           	callstack 0
  1027  000017                     ___flmul@bexp:
  1028                           	callstack 0
  1029  000017                     pad@buf:
  1030                           	callstack 0
  1031  000017                     abs@a:
  1032                           	callstack 0
  1033  000017                     ___aodiv@quotient:
  1034                           	callstack 0
  1035                           
  1036                           ; 8 bytes @ 0x16
  1037  000017                     	ds	1
  1038  000018                     ___flmul@prod:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x17
  1042  000018                     	ds	1
  1043  000019                     ??_abs:
  1044  000019                     pad@p:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x18
  1048  000019                     	ds	2
  1049  00001B                     ??_pad:
  1050                           
  1051                           ; 1 bytes @ 0x1A
  1052  00001B                     	ds	1
  1053  00001C                     ___flmul@temp:
  1054                           	callstack 0
  1055  00001C                     pad@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x1B
  1059  00001C                     	ds	2
  1060  00001E                     ?___fladd:
  1061                           	callstack 0
  1062  00001E                     pad@w:
  1063                           	callstack 0
  1064  00001E                     ___fladd@b:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x1D
  1068  00001E                     	ds	2
  1069  000020                     ?_dtoa:
  1070                           	callstack 0
  1071  000020                     dtoa@fp:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x1F
  1075  000020                     	ds	2
  1076  000022                     ___fladd@a:
  1077                           	callstack 0
  1078  000022                     dtoa@d:
  1079                           	callstack 0
  1080                           
  1081                           ; 8 bytes @ 0x21
  1082  000022                     	ds	4
  1083  000026                     ??___fladd:
  1084                           
  1085                           ; 1 bytes @ 0x25
  1086  000026                     	ds	4
  1087  00002A                     ??_dtoa:
  1088  00002A                     ___fladd@signs:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x29
  1092  00002A                     	ds	1
  1093  00002B                     ___fladd@aexp:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x2A
  1097  00002B                     	ds	1
  1098  00002C                     ___fladd@bexp:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x2B
  1102  00002C                     	ds	1
  1103  00002D                     ___fladd@grs:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x2C
  1107  00002D                     	ds	1
  1108  00002E                     ?_sqrtf:
  1109                           	callstack 0
  1110  00002E                     sqrtf@x:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x2D
  1114  00002E                     	ds	4
  1115  000032                     ??_sqrtf:
  1116  000032                     _dtoa$2169:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x31
  1120  000032                     	ds	2
  1121  000034                     dtoa@p:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x33
  1125  000034                     	ds	2
  1126  000036                     dtoa@w:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x35
  1130  000036                     	ds	1
  1131  000037                     ??___fltol:
  1132                           
  1133                           ; 1 bytes @ 0x36
  1134  000037                     	ds	1
  1135  000038                     dtoa@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x37
  1139  000038                     	ds	2
  1140  00003A                     dtoa@n:
  1141                           	callstack 0
  1142                           
  1143                           ; 8 bytes @ 0x39
  1144  00003A                     	ds	1
  1145  00003B                     ___fltol@sign1:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x3A
  1149  00003B                     	ds	1
  1150  00003C                     ___fltol@exp1:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x3B
  1154  00003C                     	ds	1
  1155  00003D                     ??_determine_color1:
  1156  00003D                     ??_determine_color2:
  1157  00003D                     ??_determine_color3:
  1158                           
  1159                           ; 1 bytes @ 0x3C
  1160  00003D                     	ds	5
  1161  000042                     dtoa@i:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x41
  1165  000042                     	ds	2
  1166  000044                     ?_vfpfcnvrt:
  1167                           	callstack 0
  1168  000044                     vfpfcnvrt@fp:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x43
  1172  000044                     	ds	2
  1173  000046                     vfpfcnvrt@fmt:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x45
  1177  000046                     	ds	2
  1178  000048                     vfpfcnvrt@ap:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x47
  1182  000048                     	ds	2
  1183  00004A                     ??_vfpfcnvrt:
  1184                           
  1185                           ; 1 bytes @ 0x49
  1186  00004A                     	ds	2
  1187  00004C                     vfpfcnvrt@ll:
  1188                           	callstack 0
  1189                           
  1190                           ; 8 bytes @ 0x4B
  1191  00004C                     	ds	8
  1192  000054                     vfprintf@cfmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x53
  1196  000054                     	ds	2
  1197  000056                     
  1198                           ; 1 bytes @ 0x55
  1199 ;;
  1200 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1201 ;;
  1202 ;; *************** function _main *****************
  1203 ;; Defined at:
  1204 ;;		line 19 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  j               2  124[BANK3 ] int 
  1209 ;;  i               2  132[BANK3 ] int 
  1210 ;;  testresults     6  126[BANK3 ] unsigned int [3]
  1211 ;;  test3           6  116[BANK3 ] unsigned int [3]
  1212 ;;  test2           6  110[BANK3 ] unsigned int [3]
  1213 ;;  test1           6  104[BANK3 ] unsigned int [3]
  1214 ;;  count           2  122[BANK3 ] int 
  1215 ;;  i               2  102[BANK3 ] unsigned int 
  1216 ;;  h               2  100[BANK3 ] unsigned int 
  1217 ;;  g               2   98[BANK3 ] unsigned int 
  1218 ;;  f               2   96[BANK3 ] unsigned int 
  1219 ;;  e               2   94[BANK3 ] unsigned int 
  1220 ;;  d               2   92[BANK3 ] unsigned int 
  1221 ;;  c               2   90[BANK3 ] unsigned int 
  1222 ;;  b               2   88[BANK3 ] unsigned int 
  1223 ;;  a               2   86[BANK3 ] unsigned int 
  1224 ;;  z               2   84[BANK3 ] unsigned int 
  1225 ;;  y               2   82[BANK3 ] unsigned int 
  1226 ;;  x               2   80[BANK3 ] unsigned int 
  1227 ;;  out             2    0        unsigned int 
  1228 ;;  test           24  152[BANK3 ] struct RGB_val
  1229 ;;  string3        20   60[BANK3 ] unsigned char [20]
  1230 ;;  string2        20   40[BANK3 ] unsigned char [20]
  1231 ;;  string1        20   20[BANK3 ] unsigned char [20]
  1232 ;;  string         20    0[BANK3 ] unsigned char [20]
  1233 ;;  motorR          9  143[BANK3 ] struct DC_motor
  1234 ;;  motorL          9  134[BANK3 ] struct DC_motor
  1235 ;;  PWMcycle        2    0        unsigned int 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;      Locals:         0       0       0       0     176       0       0       0       0       0       0       0       
      +0       0       0
  1247 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1248 ;;      Totals:         0       5       0       0     176       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;Total ram usage:      181 bytes
  1250 ;; Hardware stack levels required when called: 10
  1251 ;; This function calls:
  1252 ;;		_Interrupts_init
  1253 ;;		_TxBufferedString
  1254 ;;		_color_click_init
  1255 ;;		_determine_color1
  1256 ;;		_determine_color2
  1257 ;;		_determine_color3
  1258 ;;		_initDCmotorsPWM
  1259 ;;		_initUSART4
  1260 ;;		_read_colours
  1261 ;;		_sendTxBuf
  1262 ;;		_sprintf
  1263 ;; This function is called by:
  1264 ;;		Startup code after reset
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text0
  1269  0017E0                     __ptext0:
  1270                           	callstack 0
  1271  0017E0                     _main:
  1272                           	callstack 21
  1273  0017E0                     
  1274                           ;main.c: 21:     initDCmotorsPWM(99);
  1275  0017E0  0E00               	movlw	0
  1276  0017E2  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1277  0017E4  0E63               	movlw	99
  1278  0017E6  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1279  0017E8  EC1E  F01D         	call	_initDCmotorsPWM	;wreg free
  1280  0017EC                     
  1281                           ;main.c: 22:     color_click_init();
  1282  0017EC  EC95  F01D         	call	_color_click_init	;wreg free
  1283  0017F0                     
  1284                           ;main.c: 23:     initUSART4();
  1285  0017F0  EC54  F01E         	call	_initUSART4	;wreg free
  1286  0017F4                     
  1287                           ;main.c: 24:     Interrupts_init();
  1288  0017F4  EC9F  F01E         	call	_Interrupts_init	;wreg free
  1289  0017F8                     
  1290                           ;main.c: 26:     char string[20];;main.c: 27:     char string1[20];;main.c: 28:     char
      +                           string2[20];;main.c: 29:     char string3[20];;main.c: 32:     TRISFbits.TRISF2=1;
  1291  0017F8  8486               	bsf	134,2,c	;volatile
  1292  0017FA                     
  1293                           ;main.c: 33:     ANSELFbits.ANSELF2=0;
  1294  0017FA  010E               	movlb	14	; () banked
  1295  0017FC  95B4               	bcf	180,2,b	;volatile
  1296  0017FE                     
  1297                           ; BSR set to: 14
  1298                           ;main.c: 37:     motorL.power=0;
  1299  0017FE  0E00               	movlw	0
  1300  001800  0103               	movlb	3	; () banked
  1301  001802  6F86               	movwf	main@motorL& (0+255),b
  1302  001804                     
  1303                           ; BSR set to: 3
  1304                           ;main.c: 38:     motorL.direction=1;
  1305  001804  0E01               	movlw	1
  1306  001806  6F87               	movwf	(main@motorL+1)& (0+255),b
  1307  001808                     
  1308                           ; BSR set to: 3
  1309                           ;main.c: 39:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1310  001808  0EA3               	movlw	163
  1311  00180A  6F88               	movwf	(main@motorL+2)& (0+255),b
  1312  00180C  0E0F               	movlw	15
  1313  00180E  6F89               	movwf	(main@motorL+3)& (0+255),b
  1314  001810                     
  1315                           ; BSR set to: 3
  1316                           ;main.c: 40:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1317  001810  0E7D               	movlw	125
  1318  001812  6F8A               	movwf	(main@motorL+4)& (0+255),b
  1319  001814  0E0F               	movlw	15
  1320  001816  6F8B               	movwf	(main@motorL+5)& (0+255),b
  1321  001818                     
  1322                           ; BSR set to: 3
  1323                           ;main.c: 41:     motorL.dir_pin=4;
  1324  001818  0E04               	movlw	4
  1325  00181A  6F8C               	movwf	(main@motorL+6)& (0+255),b
  1326  00181C                     
  1327                           ; BSR set to: 3
  1328                           ;main.c: 42:     motorL.PWMperiod=PWMcycle;
  1329  00181C  0E00               	movlw	0
  1330  00181E  6F8E               	movwf	(main@motorL+8)& (0+255),b
  1331  001820  0E63               	movlw	99
  1332  001822  6F8D               	movwf	(main@motorL+7)& (0+255),b
  1333  001824                     
  1334                           ; BSR set to: 3
  1335                           ;main.c: 44:     motorR.power=0;
  1336  001824  0E00               	movlw	0
  1337  001826  6F8F               	movwf	main@motorR& (0+255),b
  1338  001828                     
  1339                           ; BSR set to: 3
  1340                           ;main.c: 45:     motorR.direction=1;
  1341  001828  0E01               	movlw	1
  1342  00182A  6F90               	movwf	(main@motorR+1)& (0+255),b
  1343                           
  1344                           ;main.c: 46:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1345  00182C  0EA0               	movlw	160
  1346  00182E  6F91               	movwf	(main@motorR+2)& (0+255),b
  1347  001830  0E0F               	movlw	15
  1348  001832  6F92               	movwf	(main@motorR+3)& (0+255),b
  1349                           
  1350                           ;main.c: 47:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1351  001834  0E7F               	movlw	127
  1352  001836  6F93               	movwf	(main@motorR+4)& (0+255),b
  1353  001838  0E0F               	movlw	15
  1354  00183A  6F94               	movwf	(main@motorR+5)& (0+255),b
  1355  00183C                     
  1356                           ; BSR set to: 3
  1357                           ;main.c: 48:     motorR.dir_pin=6;
  1358  00183C  0E06               	movlw	6
  1359  00183E  6F95               	movwf	(main@motorR+6)& (0+255),b
  1360  001840                     
  1361                           ; BSR set to: 3
  1362                           ;main.c: 49:     motorR.PWMperiod=PWMcycle;
  1363  001840  0E00               	movlw	0
  1364  001842  6F97               	movwf	(main@motorR+8)& (0+255),b
  1365  001844  0E63               	movlw	99
  1366  001846  6F96               	movwf	(main@motorR+7)& (0+255),b
  1367  001848                     
  1368                           ; BSR set to: 3
  1369                           ;main.c: 52:     struct RGB_val test;;main.c: 53:     test.R = 0;
  1370  001848  0E00               	movlw	0
  1371  00184A  6F99               	movwf	(main@test+1)& (0+255),b
  1372  00184C  0E00               	movlw	0
  1373  00184E  6F98               	movwf	main@test& (0+255),b
  1374  001850                     
  1375                           ; BSR set to: 3
  1376                           ;main.c: 54:     test.G = 0;
  1377  001850  0E00               	movlw	0
  1378  001852  6F9B               	movwf	(main@test+3)& (0+255),b
  1379  001854  0E00               	movlw	0
  1380  001856  6F9A               	movwf	(main@test+2)& (0+255),b
  1381  001858                     
  1382                           ; BSR set to: 3
  1383                           ;main.c: 55:     test.B = 0;
  1384  001858  0E00               	movlw	0
  1385  00185A  6F9D               	movwf	(main@test+5)& (0+255),b
  1386  00185C  0E00               	movlw	0
  1387  00185E  6F9C               	movwf	(main@test+4)& (0+255),b
  1388  001860                     
  1389                           ; BSR set to: 3
  1390                           ;main.c: 58:     LATGbits.LATG1=0;
  1391  001860  927F               	bcf	127,1,c	;volatile
  1392  001862                     
  1393                           ; BSR set to: 3
  1394                           ;main.c: 59:     TRISGbits.TRISG1=0;
  1395  001862  9287               	bcf	135,1,c	;volatile
  1396  001864                     
  1397                           ; BSR set to: 3
  1398                           ;main.c: 60:     LATAbits.LATA4=0;
  1399  001864  9879               	bcf	121,4,c	;volatile
  1400  001866                     
  1401                           ; BSR set to: 3
  1402                           ;main.c: 61:     TRISAbits.TRISA4=0;
  1403  001866  9881               	bcf	129,4,c	;volatile
  1404  001868                     
  1405                           ; BSR set to: 3
  1406                           ;main.c: 62:     LATFbits.LATF7=1;
  1407  001868  8E7E               	bsf	126,7,c	;volatile
  1408  00186A                     
  1409                           ; BSR set to: 3
  1410                           ;main.c: 63:     TRISFbits.TRISF7=0;
  1411  00186A  9E86               	bcf	134,7,c	;volatile
  1412  00186C                     
  1413                           ; BSR set to: 3
  1414                           ;main.c: 70:     TRISDbits.TRISD7 = 0;
  1415  00186C  9E84               	bcf	132,7,c	;volatile
  1416  00186E                     
  1417                           ; BSR set to: 3
  1418                           ;main.c: 71:     LATDbits.LATD7 = 0;
  1419  00186E  9E7C               	bcf	124,7,c	;volatile
  1420  001870                     l5318:
  1421                           
  1422                           ;main.c: 74:         read_colours(&test);
  1423  001870  0E98               	movlw	low main@test
  1424  001872  6E10               	movwf	read_colours@m^0,c
  1425  001874  0E03               	movlw	high main@test
  1426  001876  6E11               	movwf	(read_colours@m+1)^0,c
  1427  001878  EC98  F01B         	call	_read_colours	;wreg free
  1428  00187C                     
  1429                           ;main.c: 75:         LATDbits.LATD7 = 0;
  1430  00187C  9E7C               	bcf	124,7,c	;volatile
  1431  00187E                     
  1432                           ;main.c: 76:         if (!PORTFbits.RF2){
  1433  00187E  B48E               	btfsc	142,2,c	;volatile
  1434  001880  EF44  F00C         	goto	u5421
  1435  001884  EF46  F00C         	goto	u5420
  1436  001888                     u5421:
  1437  001888  EF38  F00C         	goto	l5318
  1438  00188C                     u5420:
  1439  00188C                     
  1440                           ;main.c: 77:             unsigned int testresults[3] = {0,0,0};
  1441  00188C  EE23  F07E         	lfsr	2,main@testresults
  1442  001890  0E05               	movlw	5
  1443  001892                     u5431:
  1444  001892  6ADE               	clrf	postinc2,c
  1445  001894  06E8               	decf	wreg,f,c
  1446  001896  E2FD               	bc	u5431
  1447                           
  1448                           ;main.c: 78:             unsigned int test1[3] = {0,0,0};
  1449  001898  EE23  F068         	lfsr	2,main@test1
  1450  00189C  0E05               	movlw	5
  1451  00189E                     u5441:
  1452  00189E  6ADE               	clrf	postinc2,c
  1453  0018A0  06E8               	decf	wreg,f,c
  1454  0018A2  E2FD               	bc	u5441
  1455                           
  1456                           ;main.c: 79:             unsigned int test2[3] = {0,0,0};
  1457  0018A4  EE23  F06E         	lfsr	2,main@test2
  1458  0018A8  0E05               	movlw	5
  1459  0018AA                     u5451:
  1460  0018AA  6ADE               	clrf	postinc2,c
  1461  0018AC  06E8               	decf	wreg,f,c
  1462  0018AE  E2FD               	bc	u5451
  1463                           
  1464                           ;main.c: 80:             unsigned int test3[3] = {0,0,0};
  1465  0018B0  EE23  F074         	lfsr	2,main@test3
  1466  0018B4  0E05               	movlw	5
  1467  0018B6                     u5461:
  1468  0018B6  6ADE               	clrf	postinc2,c
  1469  0018B8  06E8               	decf	wreg,f,c
  1470  0018BA  E2FD               	bc	u5461
  1471  0018BC                     
  1472                           ;main.c: 82:             LATDbits.LATD7 = 1;
  1473  0018BC  8E7C               	bsf	124,7,c	;volatile
  1474  0018BE                     
  1475                           ;main.c: 83:             LATGbits.LATG1=1;
  1476  0018BE  827F               	bsf	127,1,c	;volatile
  1477  0018C0                     
  1478                           ;main.c: 84:             LATAbits.LATA4=1;
  1479  0018C0  8879               	bsf	121,4,c	;volatile
  1480  0018C2                     
  1481                           ;main.c: 85:             LATFbits.LATF7=1;
  1482  0018C2  8E7E               	bsf	126,7,c	;volatile
  1483  0018C4                     
  1484                           ;main.c: 86:             read_colours(&test);
  1485  0018C4  0E98               	movlw	low main@test
  1486  0018C6  6E10               	movwf	read_colours@m^0,c
  1487  0018C8  0E03               	movlw	high main@test
  1488  0018CA  6E11               	movwf	(read_colours@m+1)^0,c
  1489  0018CC  EC98  F01B         	call	_read_colours	;wreg free
  1490  0018D0                     
  1491                           ;main.c: 87:             test1[0] = test.R;
  1492  0018D0  C398  F368         	movff	main@test,main@test1
  1493  0018D4  C399  F369         	movff	main@test+1,main@test1+1
  1494  0018D8                     
  1495                           ;main.c: 88:             test1[1] = test.G;
  1496  0018D8  C39A  F36A         	movff	main@test+2,main@test1+2
  1497  0018DC  C39B  F36B         	movff	main@test+3,main@test1+3
  1498  0018E0                     
  1499                           ;main.c: 89:             test1[2] = test.B;
  1500  0018E0  C39C  F36C         	movff	main@test+4,main@test1+4
  1501  0018E4  C39D  F36D         	movff	main@test+5,main@test1+5
  1502  0018E8                     
  1503                           ;main.c: 90:             testresults[0] = determine_color1(&test);
  1504  0018E8  0E98               	movlw	low main@test
  1505  0018EA  0100               	movlb	0	; () banked
  1506  0018EC  6FC6               	movwf	determine_color1@m& (0+255),b
  1507  0018EE  0E03               	movlw	high main@test
  1508  0018F0  6FC7               	movwf	(determine_color1@m+1)& (0+255),b
  1509  0018F2  EC63  F013         	call	_determine_color1	;wreg free
  1510  0018F6  C0C6  F37E         	movff	?_determine_color1,main@testresults
  1511  0018FA  C0C7  F37F         	movff	?_determine_color1+1,main@testresults+1
  1512  0018FE                     
  1513                           ;main.c: 91:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1514  0018FE  0E09               	movlw	9
  1515  001900  0100               	movlb	0	; () banked
  1516  001902  6FC9               	movwf	(??_main+1)& (0+255),b
  1517  001904  0E1E               	movlw	30
  1518  001906  6FC8               	movwf	??_main& (0+255),b
  1519  001908  0EE4               	movlw	228
  1520  00190A                     u5507:
  1521  00190A  2EE8               	decfsz	wreg,f,c
  1522  00190C  D7FE               	bra	u5507
  1523  00190E  2FC8               	decfsz	??_main& (0+255),f,b
  1524  001910  D7FC               	bra	u5507
  1525  001912  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1526  001914  D7FA               	bra	u5507
  1527  001916  F000               	nop	
  1528  001918                     
  1529                           ;main.c: 92:             LATGbits.LATG1=1;
  1530  001918  827F               	bsf	127,1,c	;volatile
  1531  00191A                     
  1532                           ;main.c: 93:             LATAbits.LATA4=0;
  1533  00191A  9879               	bcf	121,4,c	;volatile
  1534  00191C                     
  1535                           ;main.c: 94:             LATFbits.LATF7=0;
  1536  00191C  9E7E               	bcf	126,7,c	;volatile
  1537  00191E                     
  1538                           ;main.c: 95:             read_colours(&test);
  1539  00191E  0E98               	movlw	low main@test
  1540  001920  6E10               	movwf	read_colours@m^0,c
  1541  001922  0E03               	movlw	high main@test
  1542  001924  6E11               	movwf	(read_colours@m+1)^0,c
  1543  001926  EC98  F01B         	call	_read_colours	;wreg free
  1544  00192A                     
  1545                           ;main.c: 96:             test2[0] = test.R;
  1546  00192A  C398  F36E         	movff	main@test,main@test2
  1547  00192E  C399  F36F         	movff	main@test+1,main@test2+1
  1548  001932                     
  1549                           ;main.c: 97:             test2[1] = test.G;
  1550  001932  C39A  F370         	movff	main@test+2,main@test2+2
  1551  001936  C39B  F371         	movff	main@test+3,main@test2+3
  1552  00193A                     
  1553                           ;main.c: 98:             test2[2] = test.B;
  1554  00193A  C39C  F372         	movff	main@test+4,main@test2+4
  1555  00193E  C39D  F373         	movff	main@test+5,main@test2+5
  1556  001942                     
  1557                           ;main.c: 99:             testresults[1] = determine_color2(&test);
  1558  001942  0E98               	movlw	low main@test
  1559  001944  0100               	movlb	0	; () banked
  1560  001946  6FC6               	movwf	determine_color2@m& (0+255),b
  1561  001948  0E03               	movlw	high main@test
  1562  00194A  6FC7               	movwf	(determine_color2@m+1)& (0+255),b
  1563  00194C  ECD6  F011         	call	_determine_color2	;wreg free
  1564  001950  C0C6  F380         	movff	?_determine_color2,main@testresults+2
  1565  001954  C0C7  F381         	movff	?_determine_color2+1,main@testresults+3
  1566  001958                     
  1567                           ;main.c: 100:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1568  001958  0E09               	movlw	9
  1569  00195A  0100               	movlb	0	; () banked
  1570  00195C  6FC9               	movwf	(??_main+1)& (0+255),b
  1571  00195E  0E1E               	movlw	30
  1572  001960  6FC8               	movwf	??_main& (0+255),b
  1573  001962  0EE4               	movlw	228
  1574  001964                     u5517:
  1575  001964  2EE8               	decfsz	wreg,f,c
  1576  001966  D7FE               	bra	u5517
  1577  001968  2FC8               	decfsz	??_main& (0+255),f,b
  1578  00196A  D7FC               	bra	u5517
  1579  00196C  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1580  00196E  D7FA               	bra	u5517
  1581  001970  F000               	nop	
  1582  001972                     
  1583                           ;main.c: 101:             LATGbits.LATG1=0;
  1584  001972  927F               	bcf	127,1,c	;volatile
  1585  001974                     
  1586                           ;main.c: 102:             LATAbits.LATA4=1;
  1587  001974  8879               	bsf	121,4,c	;volatile
  1588  001976                     
  1589                           ;main.c: 103:             LATFbits.LATF7=0;
  1590  001976  9E7E               	bcf	126,7,c	;volatile
  1591  001978                     
  1592                           ;main.c: 104:             read_colours(&test);
  1593  001978  0E98               	movlw	low main@test
  1594  00197A  6E10               	movwf	read_colours@m^0,c
  1595  00197C  0E03               	movlw	high main@test
  1596  00197E  6E11               	movwf	(read_colours@m+1)^0,c
  1597  001980  EC98  F01B         	call	_read_colours	;wreg free
  1598  001984                     
  1599                           ;main.c: 105:             test3[0] = test.R;
  1600  001984  C398  F374         	movff	main@test,main@test3
  1601  001988  C399  F375         	movff	main@test+1,main@test3+1
  1602  00198C                     
  1603                           ;main.c: 106:             test3[1] = test.G;
  1604  00198C  C39A  F376         	movff	main@test+2,main@test3+2
  1605  001990  C39B  F377         	movff	main@test+3,main@test3+3
  1606  001994                     
  1607                           ;main.c: 107:             test3[2] = test.B;
  1608  001994  C39C  F378         	movff	main@test+4,main@test3+4
  1609  001998  C39D  F379         	movff	main@test+5,main@test3+5
  1610  00199C                     
  1611                           ;main.c: 108:             testresults[2] = determine_color3(&test);
  1612  00199C  0E98               	movlw	low main@test
  1613  00199E  0100               	movlb	0	; () banked
  1614  0019A0  6FC6               	movwf	determine_color3@m& (0+255),b
  1615  0019A2  0E03               	movlw	high main@test
  1616  0019A4  6FC7               	movwf	(determine_color3@m+1)& (0+255),b
  1617  0019A6  EC49  F010         	call	_determine_color3	;wreg free
  1618  0019AA  C0C6  F382         	movff	?_determine_color3,main@testresults+4
  1619  0019AE  C0C7  F383         	movff	?_determine_color3+1,main@testresults+5
  1620  0019B2                     
  1621                           ;main.c: 109:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1622  0019B2  0E09               	movlw	9
  1623  0019B4  0100               	movlb	0	; () banked
  1624  0019B6  6FC9               	movwf	(??_main+1)& (0+255),b
  1625  0019B8  0E1E               	movlw	30
  1626  0019BA  6FC8               	movwf	??_main& (0+255),b
  1627  0019BC  0EE4               	movlw	228
  1628  0019BE                     u5527:
  1629  0019BE  2EE8               	decfsz	wreg,f,c
  1630  0019C0  D7FE               	bra	u5527
  1631  0019C2  2FC8               	decfsz	??_main& (0+255),f,b
  1632  0019C4  D7FC               	bra	u5527
  1633  0019C6  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1634  0019C8  D7FA               	bra	u5527
  1635  0019CA  F000               	nop	
  1636  0019CC                     
  1637                           ;main.c: 110:             LATGbits.LATG1=0;
  1638  0019CC  927F               	bcf	127,1,c	;volatile
  1639  0019CE                     
  1640                           ;main.c: 111:             LATAbits.LATA4=0;
  1641  0019CE  9879               	bcf	121,4,c	;volatile
  1642  0019D0                     
  1643                           ;main.c: 112:             LATFbits.LATF7=0;
  1644  0019D0  9E7E               	bcf	126,7,c	;volatile
  1645  0019D2                     
  1646                           ;main.c: 113:             unsigned int out;;main.c: 115:             int count = sizeof(
      +                          testresults) / sizeof(testresults[0]);
  1647  0019D2  0E00               	movlw	0
  1648  0019D4  0103               	movlb	3	; () banked
  1649  0019D6  6F7B               	movwf	(main@count+1)& (0+255),b
  1650  0019D8  0E03               	movlw	3
  1651  0019DA  6F7A               	movwf	main@count& (0+255),b
  1652  0019DC                     
  1653                           ; BSR set to: 3
  1654                           ;main.c: 116:             for (int i = 0; i < count - 1; i++) {
  1655  0019DC  0E00               	movlw	0
  1656  0019DE  6F85               	movwf	(main@i+1)& (0+255),b
  1657  0019E0  0E00               	movlw	0
  1658  0019E2  6F84               	movwf	main@i& (0+255),b
  1659  0019E4  EF33  F00D         	goto	l5404
  1660  0019E8                     l5392:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;main.c: 117:                 for (int j = i + 1; j < count; j++) {
  1664  0019E8  0E01               	movlw	1
  1665  0019EA  0103               	movlb	3	; () banked
  1666  0019EC  2584               	addwf	main@i& (0+255),w,b
  1667  0019EE  6F7C               	movwf	main@j& (0+255),b
  1668  0019F0  0E00               	movlw	0
  1669  0019F2  2185               	addwfc	(main@i+1)& (0+255),w,b
  1670  0019F4  6F7D               	movwf	(main@j+1)& (0+255),b
  1671  0019F6  EF1E  F00D         	goto	l5400
  1672  0019FA                     l5394:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 118:                     if (testresults[i] == testresults[j]) {
  1676  0019FA  90D8               	bcf	status,0,c
  1677  0019FC  0103               	movlb	3	; () banked
  1678  0019FE  357C               	rlcf	main@j& (0+255),w,b
  1679  001A00  6ED9               	movwf	fsr2l,c
  1680  001A02  357D               	rlcf	(main@j+1)& (0+255),w,b
  1681  001A04  6EDA               	movwf	fsr2h,c
  1682  001A06  0E7E               	movlw	low main@testresults
  1683  001A08  26D9               	addwf	fsr2l,f,c
  1684  001A0A  0E03               	movlw	high main@testresults
  1685  001A0C  22DA               	addwfc	fsr2h,f,c
  1686  001A0E  90D8               	bcf	status,0,c
  1687  001A10  3584               	rlcf	main@i& (0+255),w,b
  1688  001A12  6EE1               	movwf	fsr1l,c
  1689  001A14  3585               	rlcf	(main@i+1)& (0+255),w,b
  1690  001A16  6EE2               	movwf	fsr1h,c
  1691  001A18  0E7E               	movlw	low main@testresults
  1692  001A1A  26E1               	addwf	fsr1l,f,c
  1693  001A1C  0E03               	movlw	high main@testresults
  1694  001A1E  22E2               	addwfc	fsr1h,f,c
  1695  001A20  50DE               	movf	postinc2,w,c
  1696  001A22  18E6               	xorwf	postinc1,w,c
  1697  001A24  E107               	bnz	u5471
  1698  001A26  50DE               	movf	postinc2,w,c
  1699  001A28  18E6               	xorwf	postinc1,w,c
  1700  001A2A  A4D8               	btfss	status,2,c
  1701  001A2C  EF1A  F00D         	goto	u5471
  1702  001A30  EF1C  F00D         	goto	u5470
  1703  001A34                     u5471:
  1704  001A34  EF1C  F00D         	goto	l5398
  1705  001A38                     u5470:
  1706  001A38                     l5398:
  1707                           
  1708                           ; BSR set to: 3
  1709                           ;main.c: 121:                 }
  1710  001A38  4B7C               	infsnz	main@j& (0+255),f,b
  1711  001A3A  2B7D               	incf	(main@j+1)& (0+255),f,b
  1712  001A3C                     l5400:
  1713                           
  1714                           ; BSR set to: 3
  1715  001A3C  517A               	movf	main@count& (0+255),w,b
  1716  001A3E  5D7C               	subwf	main@j& (0+255),w,b
  1717  001A40  517D               	movf	(main@j+1)& (0+255),w,b
  1718  001A42  0A80               	xorlw	128
  1719  001A44  0100               	movlb	0	; () banked
  1720  001A46  6FC8               	movwf	??_main& (0+255),b
  1721  001A48  0103               	movlb	3	; () banked
  1722  001A4A  517B               	movf	(main@count+1)& (0+255),w,b
  1723  001A4C  0A80               	xorlw	128
  1724  001A4E  0100               	movlb	0	; () banked
  1725  001A50  59C8               	subwfb	??_main& (0+255),w,b
  1726  001A52  A0D8               	btfss	status,0,c
  1727  001A54  EF2E  F00D         	goto	u5481
  1728  001A58  EF30  F00D         	goto	u5480
  1729  001A5C                     u5481:
  1730  001A5C  EFFD  F00C         	goto	l5394
  1731  001A60                     u5480:
  1732  001A60                     
  1733                           ; BSR set to: 0
  1734                           ;main.c: 122:             }
  1735  001A60  0103               	movlb	3	; () banked
  1736  001A62  4B84               	infsnz	main@i& (0+255),f,b
  1737  001A64  2B85               	incf	(main@i+1)& (0+255),f,b
  1738  001A66                     l5404:
  1739                           
  1740                           ; BSR set to: 3
  1741  001A66  0EFF               	movlw	255
  1742  001A68  0100               	movlb	0	; () banked
  1743  001A6A  6FC8               	movwf	??_main& (0+255),b
  1744  001A6C  0EFF               	movlw	255
  1745  001A6E  6FC9               	movwf	(??_main+1)& (0+255),b
  1746  001A70  C37A  F0CA         	movff	main@count,??_main+2
  1747  001A74  C37B  F0CB         	movff	main@count+1,??_main+3
  1748  001A78  51C8               	movf	??_main& (0+255),w,b
  1749  001A7A  27CA               	addwf	(??_main+2)& (0+255),f,b
  1750  001A7C  51C9               	movf	(??_main+1)& (0+255),w,b
  1751  001A7E  23CB               	addwfc	(??_main+3)& (0+255),f,b
  1752  001A80  51CA               	movf	(??_main+2)& (0+255),w,b
  1753  001A82  0103               	movlb	3	; () banked
  1754  001A84  5D84               	subwf	main@i& (0+255),w,b
  1755  001A86  5185               	movf	(main@i+1)& (0+255),w,b
  1756  001A88  0A80               	xorlw	128
  1757  001A8A  0100               	movlb	0	; () banked
  1758  001A8C  6FCC               	movwf	(??_main+4)& (0+255),b
  1759  001A8E  51CB               	movf	(??_main+3)& (0+255),w,b
  1760  001A90  0A80               	xorlw	128
  1761  001A92  59CC               	subwfb	(??_main+4)& (0+255),w,b
  1762  001A94  A0D8               	btfss	status,0,c
  1763  001A96  EF4F  F00D         	goto	u5491
  1764  001A9A  EF51  F00D         	goto	u5490
  1765  001A9E                     u5491:
  1766  001A9E  EFF4  F00C         	goto	l5392
  1767  001AA2                     u5490:
  1768  001AA2                     
  1769                           ; BSR set to: 0
  1770                           ;main.c: 124:             unsigned int x = testresults[0];
  1771  001AA2  C37E  F350         	movff	main@testresults,main@x
  1772  001AA6  C37F  F351         	movff	main@testresults+1,main@x+1
  1773                           
  1774                           ;main.c: 125:             unsigned int y = testresults[1];
  1775  001AAA  C380  F352         	movff	main@testresults+2,main@y
  1776  001AAE  C381  F353         	movff	main@testresults+3,main@y+1
  1777                           
  1778                           ;main.c: 126:             unsigned int z = testresults[2];
  1779  001AB2  C382  F354         	movff	main@testresults+4,main@z
  1780  001AB6  C383  F355         	movff	main@testresults+5,main@z+1
  1781  001ABA                     
  1782                           ; BSR set to: 0
  1783                           ;main.c: 127:             sprintf(string," T1:%d T2:%d T3:%d ",x,y,z);
  1784  001ABA  0E00               	movlw	low main@string
  1785  001ABC  6FA4               	movwf	sprintf@s& (0+255),b
  1786  001ABE  0E03               	movlw	high main@string
  1787  001AC0  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  1788  001AC2  0E4A               	movlw	low STR_1
  1789  001AC4  6FA6               	movwf	sprintf@fmt& (0+255),b
  1790  001AC6  0E0E               	movlw	high STR_1
  1791  001AC8  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  1792  001ACA  C350  F0A8         	movff	main@x,?_sprintf+4
  1793  001ACE  C351  F0A9         	movff	main@x+1,?_sprintf+5
  1794  001AD2  C352  F0AA         	movff	main@y,?_sprintf+6
  1795  001AD6  C353  F0AB         	movff	main@y+1,?_sprintf+7
  1796  001ADA  C354  F0AC         	movff	main@z,?_sprintf+8
  1797  001ADE  C355  F0AD         	movff	main@z+1,?_sprintf+9
  1798  001AE2  EC3A  F01C         	call	_sprintf	;wreg free
  1799  001AE6                     
  1800                           ;main.c: 128:             TxBufferedString(string);
  1801  001AE6  0E00               	movlw	low main@string
  1802  001AE8  6E06               	movwf	TxBufferedString@string^0,c
  1803  001AEA  0E03               	movlw	high main@string
  1804  001AEC  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1805  001AEE  ECAF  F01D         	call	_TxBufferedString	;wreg free
  1806  001AF2                     
  1807                           ;main.c: 129:             sendTxBuf();
  1808  001AF2  EC74  F01E         	call	_sendTxBuf	;wreg free
  1809  001AF6                     
  1810                           ;main.c: 130:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1811  001AF6  0E09               	movlw	9
  1812  001AF8  0100               	movlb	0	; () banked
  1813  001AFA  6FC9               	movwf	(??_main+1)& (0+255),b
  1814  001AFC  0E1E               	movlw	30
  1815  001AFE  6FC8               	movwf	??_main& (0+255),b
  1816  001B00  0EE4               	movlw	228
  1817  001B02                     u5537:
  1818  001B02  2EE8               	decfsz	wreg,f,c
  1819  001B04  D7FE               	bra	u5537
  1820  001B06  2FC8               	decfsz	??_main& (0+255),f,b
  1821  001B08  D7FC               	bra	u5537
  1822  001B0A  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1823  001B0C  D7FA               	bra	u5537
  1824  001B0E  F000               	nop	
  1825  001B10                     
  1826                           ;main.c: 132:             unsigned int a = test1[0];
  1827  001B10  C368  F356         	movff	main@test1,main@a
  1828  001B14  C369  F357         	movff	main@test1+1,main@a+1
  1829  001B18                     
  1830                           ;main.c: 133:             unsigned int b = test1[1];
  1831  001B18  C36A  F358         	movff	main@test1+2,main@b
  1832  001B1C  C36B  F359         	movff	main@test1+3,main@b+1
  1833  001B20                     
  1834                           ;main.c: 134:             unsigned int c = test1[2];
  1835  001B20  C36C  F35A         	movff	main@test1+4,main@c
  1836  001B24  C36D  F35B         	movff	main@test1+5,main@c+1
  1837  001B28                     
  1838                           ;main.c: 135:             sprintf(string1," T1r:%d T1g:%d T1b:%d ",a,b,c);
  1839  001B28  0E14               	movlw	low main@string1
  1840  001B2A  0100               	movlb	0	; () banked
  1841  001B2C  6FA4               	movwf	sprintf@s& (0+255),b
  1842  001B2E  0E03               	movlw	high main@string1
  1843  001B30  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  1844  001B32  0E05               	movlw	low STR_2
  1845  001B34  6FA6               	movwf	sprintf@fmt& (0+255),b
  1846  001B36  0E0E               	movlw	high STR_2
  1847  001B38  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  1848  001B3A  C356  F0A8         	movff	main@a,?_sprintf+4
  1849  001B3E  C357  F0A9         	movff	main@a+1,?_sprintf+5
  1850  001B42  C358  F0AA         	movff	main@b,?_sprintf+6
  1851  001B46  C359  F0AB         	movff	main@b+1,?_sprintf+7
  1852  001B4A  C35A  F0AC         	movff	main@c,?_sprintf+8
  1853  001B4E  C35B  F0AD         	movff	main@c+1,?_sprintf+9
  1854  001B52  EC3A  F01C         	call	_sprintf	;wreg free
  1855  001B56                     
  1856                           ;main.c: 136:             TxBufferedString(string1);
  1857  001B56  0E14               	movlw	low main@string1
  1858  001B58  6E06               	movwf	TxBufferedString@string^0,c
  1859  001B5A  0E03               	movlw	high main@string1
  1860  001B5C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1861  001B5E  ECAF  F01D         	call	_TxBufferedString	;wreg free
  1862  001B62                     
  1863                           ;main.c: 137:             sendTxBuf();
  1864  001B62  EC74  F01E         	call	_sendTxBuf	;wreg free
  1865                           
  1866                           ;main.c: 138:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1867  001B66  0E09               	movlw	9
  1868  001B68  0100               	movlb	0	; () banked
  1869  001B6A  6FC9               	movwf	(??_main+1)& (0+255),b
  1870  001B6C  0E1E               	movlw	30
  1871  001B6E  6FC8               	movwf	??_main& (0+255),b
  1872  001B70  0EE4               	movlw	228
  1873  001B72                     u5547:
  1874  001B72  2EE8               	decfsz	wreg,f,c
  1875  001B74  D7FE               	bra	u5547
  1876  001B76  2FC8               	decfsz	??_main& (0+255),f,b
  1877  001B78  D7FC               	bra	u5547
  1878  001B7A  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1879  001B7C  D7FA               	bra	u5547
  1880  001B7E  F000               	nop	
  1881  001B80                     
  1882                           ;main.c: 140:             unsigned int d = test2[0];
  1883  001B80  C36E  F35C         	movff	main@test2,main@d
  1884  001B84  C36F  F35D         	movff	main@test2+1,main@d+1
  1885  001B88                     
  1886                           ;main.c: 141:             unsigned int e = test2[1];
  1887  001B88  C370  F35E         	movff	main@test2+2,main@e
  1888  001B8C  C371  F35F         	movff	main@test2+3,main@e+1
  1889  001B90                     
  1890                           ;main.c: 142:             unsigned int f = test2[2];
  1891  001B90  C372  F360         	movff	main@test2+4,main@f
  1892  001B94  C373  F361         	movff	main@test2+5,main@f+1
  1893  001B98                     
  1894                           ;main.c: 143:             sprintf(string2," T2r:%d T2g:%d T2b:%d ",d,e,f);
  1895  001B98  0E28               	movlw	low main@string2
  1896  001B9A  0100               	movlb	0	; () banked
  1897  001B9C  6FA4               	movwf	sprintf@s& (0+255),b
  1898  001B9E  0E03               	movlw	high main@string2
  1899  001BA0  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  1900  001BA2  0E1C               	movlw	low STR_3
  1901  001BA4  6FA6               	movwf	sprintf@fmt& (0+255),b
  1902  001BA6  0E0E               	movlw	high STR_3
  1903  001BA8  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  1904  001BAA  C35C  F0A8         	movff	main@d,?_sprintf+4
  1905  001BAE  C35D  F0A9         	movff	main@d+1,?_sprintf+5
  1906  001BB2  C35E  F0AA         	movff	main@e,?_sprintf+6
  1907  001BB6  C35F  F0AB         	movff	main@e+1,?_sprintf+7
  1908  001BBA  C360  F0AC         	movff	main@f,?_sprintf+8
  1909  001BBE  C361  F0AD         	movff	main@f+1,?_sprintf+9
  1910  001BC2  EC3A  F01C         	call	_sprintf	;wreg free
  1911  001BC6                     
  1912                           ;main.c: 144:             TxBufferedString(string2);
  1913  001BC6  0E28               	movlw	low main@string2
  1914  001BC8  6E06               	movwf	TxBufferedString@string^0,c
  1915  001BCA  0E03               	movlw	high main@string2
  1916  001BCC  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1917  001BCE  ECAF  F01D         	call	_TxBufferedString	;wreg free
  1918  001BD2                     
  1919                           ;main.c: 145:             sendTxBuf();
  1920  001BD2  EC74  F01E         	call	_sendTxBuf	;wreg free
  1921  001BD6                     
  1922                           ;main.c: 146:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1923  001BD6  0E09               	movlw	9
  1924  001BD8  0100               	movlb	0	; () banked
  1925  001BDA  6FC9               	movwf	(??_main+1)& (0+255),b
  1926  001BDC  0E1E               	movlw	30
  1927  001BDE  6FC8               	movwf	??_main& (0+255),b
  1928  001BE0  0EE4               	movlw	228
  1929  001BE2                     u5557:
  1930  001BE2  2EE8               	decfsz	wreg,f,c
  1931  001BE4  D7FE               	bra	u5557
  1932  001BE6  2FC8               	decfsz	??_main& (0+255),f,b
  1933  001BE8  D7FC               	bra	u5557
  1934  001BEA  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1935  001BEC  D7FA               	bra	u5557
  1936  001BEE  F000               	nop	
  1937  001BF0                     
  1938                           ;main.c: 148:             unsigned int g = test3[0];
  1939  001BF0  C374  F362         	movff	main@test3,main@g
  1940  001BF4  C375  F363         	movff	main@test3+1,main@g+1
  1941  001BF8                     
  1942                           ;main.c: 149:             unsigned int h = test3[1];
  1943  001BF8  C376  F364         	movff	main@test3+2,main@h
  1944  001BFC  C377  F365         	movff	main@test3+3,main@h+1
  1945  001C00                     
  1946                           ;main.c: 150:             unsigned int i = test3[2];
  1947  001C00  C378  F366         	movff	main@test3+4,main@i_1402
  1948  001C04  C379  F367         	movff	main@test3+5,main@i_1402+1
  1949  001C08                     
  1950                           ;main.c: 151:             sprintf(string3," T3r:%d T3g:%d T3b:%d ",g,h,i);
  1951  001C08  0E3C               	movlw	low main@string3
  1952  001C0A  0100               	movlb	0	; () banked
  1953  001C0C  6FA4               	movwf	sprintf@s& (0+255),b
  1954  001C0E  0E03               	movlw	high main@string3
  1955  001C10  6FA5               	movwf	(sprintf@s+1)& (0+255),b
  1956  001C12  0E33               	movlw	low STR_4
  1957  001C14  6FA6               	movwf	sprintf@fmt& (0+255),b
  1958  001C16  0E0E               	movlw	high STR_4
  1959  001C18  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
  1960  001C1A  C362  F0A8         	movff	main@g,?_sprintf+4
  1961  001C1E  C363  F0A9         	movff	main@g+1,?_sprintf+5
  1962  001C22  C364  F0AA         	movff	main@h,?_sprintf+6
  1963  001C26  C365  F0AB         	movff	main@h+1,?_sprintf+7
  1964  001C2A  C366  F0AC         	movff	main@i_1402,?_sprintf+8
  1965  001C2E  C367  F0AD         	movff	main@i_1402+1,?_sprintf+9
  1966  001C32  EC3A  F01C         	call	_sprintf	;wreg free
  1967  001C36                     
  1968                           ;main.c: 152:             TxBufferedString(string3);
  1969  001C36  0E3C               	movlw	low main@string3
  1970  001C38  6E06               	movwf	TxBufferedString@string^0,c
  1971  001C3A  0E03               	movlw	high main@string3
  1972  001C3C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1973  001C3E  ECAF  F01D         	call	_TxBufferedString	;wreg free
  1974                           
  1975                           ;main.c: 153:             sendTxBuf();
  1976  001C42  EC74  F01E         	call	_sendTxBuf	;wreg free
  1977  001C46                     
  1978                           ;main.c: 154:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1979  001C46  0E09               	movlw	9
  1980  001C48  0100               	movlb	0	; () banked
  1981  001C4A  6FC9               	movwf	(??_main+1)& (0+255),b
  1982  001C4C  0E1E               	movlw	30
  1983  001C4E  6FC8               	movwf	??_main& (0+255),b
  1984  001C50  0EE4               	movlw	228
  1985  001C52                     u5567:
  1986  001C52  2EE8               	decfsz	wreg,f,c
  1987  001C54  D7FE               	bra	u5567
  1988  001C56  2FC8               	decfsz	??_main& (0+255),f,b
  1989  001C58  D7FC               	bra	u5567
  1990  001C5A  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1991  001C5C  D7FA               	bra	u5567
  1992  001C5E  F000               	nop	
  1993  001C60  EF38  F00C         	goto	l5318
  1994  001C64  EF3B  F000         	goto	start
  1995  001C68                     __end_of_main:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _sprintf *****************
  1999 ;; Defined at:
  2000 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2003 ;;		 -> main@string3(20), main@string2(20), main@string1(20), main@string(20), 
  2004 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2005 ;;		 -> STR_4(23), STR_3(23), STR_2(23), STR_1(20), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  f               6   18[BANK0 ] struct _IO_FILE
  2008 ;;  ap              2   16[BANK0 ] PTR void [1]
  2009 ;;		 -> ?_sprintf(2), 
  2010 ;;  ret             2    0        int 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2    6[BANK0 ] int 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2020 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;Total ram usage:       18 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 9
  2027 ;; This function calls:
  2028 ;;		_vfprintf
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text1
  2035  003874                     __ptext1:
  2036                           	callstack 0
  2037  003874                     _sprintf:
  2038                           	callstack 21
  2039  003874  0EA8               	movlw	low (?_sprintf+4)
  2040  003876  0100               	movlb	0	; () banked
  2041  003878  6FAE               	movwf	sprintf@ap& (0+255),b
  2042  00387A  0E00               	movlw	high (?_sprintf+4)
  2043  00387C  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  2044  00387E  C0A4  F0B0         	movff	sprintf@s,sprintf@f
  2045  003882  C0A5  F0B1         	movff	sprintf@s+1,sprintf@f+1
  2046  003886                     
  2047                           ; BSR set to: 0
  2048  003886  0E00               	movlw	0
  2049  003888  6FB3               	movwf	(sprintf@f+3)& (0+255),b
  2050  00388A  0E00               	movlw	0
  2051  00388C  6FB2               	movwf	(sprintf@f+2)& (0+255),b
  2052  00388E                     
  2053                           ; BSR set to: 0
  2054  00388E  0E00               	movlw	0
  2055  003890  6FB5               	movwf	(sprintf@f+5)& (0+255),b
  2056  003892  0E00               	movlw	0
  2057  003894  6FB4               	movwf	(sprintf@f+4)& (0+255),b
  2058  003896                     
  2059                           ; BSR set to: 0
  2060  003896  0EB0               	movlw	low sprintf@f
  2061  003898  6F9E               	movwf	vfprintf@fp& (0+255),b
  2062  00389A  0E00               	movlw	high sprintf@f
  2063  00389C  6F9F               	movwf	(vfprintf@fp+1)& (0+255),b
  2064  00389E  C0A6  F0A0         	movff	sprintf@fmt,vfprintf@fmt
  2065  0038A2  C0A7  F0A1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2066  0038A6  0EAE               	movlw	low sprintf@ap
  2067  0038A8  6FA2               	movwf	vfprintf@ap& (0+255),b
  2068  0038AA  0E00               	movlw	high sprintf@ap
  2069  0038AC  6FA3               	movwf	(vfprintf@ap+1)& (0+255),b
  2070  0038AE  EC09  F01C         	call	_vfprintf	;wreg free
  2071  0038B2  0100               	movlb	0	; () banked
  2072  0038B4  51B2               	movf	(sprintf@f+2)& (0+255),w,b
  2073  0038B6  25A4               	addwf	sprintf@s& (0+255),w,b
  2074  0038B8  6ED9               	movwf	fsr2l,c
  2075  0038BA  51B3               	movf	(sprintf@f+3)& (0+255),w,b
  2076  0038BC  21A5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2077  0038BE  6EDA               	movwf	fsr2h,c
  2078  0038C0  0E00               	movlw	0
  2079  0038C2  6EDF               	movwf	indf2,c
  2080  0038C4                     
  2081                           ; BSR set to: 0
  2082  0038C4  0012               	return		;funcret
  2083  0038C6                     __end_of_sprintf:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _vfprintf *****************
  2087 ;; Defined at:
  2088 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2091 ;;		 -> sprintf@f(6), 
  2092 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2093 ;;		 -> STR_4(23), STR_3(23), STR_2(23), STR_1(20), 
  2094 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2095 ;;		 -> sprintf@ap(2), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  2098 ;;		 -> STR_4(23), STR_3(23), STR_2(23), STR_1(20), 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    0[BANK0 ] int 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;Total ram usage:        8 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 8
  2115 ;; This function calls:
  2116 ;;		_vfpfcnvrt
  2117 ;; This function is called by:
  2118 ;;		_sprintf
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text2
  2123  003812                     __ptext2:
  2124                           	callstack 0
  2125  003812                     _vfprintf:
  2126                           	callstack 21
  2127  003812                     
  2128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2129  003812  C0A0  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  2130  003816  C0A1  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2131  00381A                     
  2132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2133  00381A  0E00               	movlw	0
  2134  00381C  0100               	movlb	0	; () banked
  2135  00381E  6F77               	movwf	(_nout+1)& (0+255),b
  2136  003820  0E00               	movlw	0
  2137  003822  6F76               	movwf	_nout& (0+255),b
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2140  003824  EF27  F01C         	goto	l4994
  2141  003828                     l4992:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2145  003828  C09E  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  2146  00382C  C09F  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2147  003830  0E54               	movlw	low vfprintf@cfmt
  2148  003832  6E46               	movwf	vfpfcnvrt@fmt^0,c
  2149  003834  0E00               	movlw	high vfprintf@cfmt
  2150  003836  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2151  003838  C0A2  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  2152  00383C  C0A3  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2153  003840  EC61  F016         	call	_vfpfcnvrt	;wreg free
  2154  003844  5044               	movf	?_vfpfcnvrt^0,w,c
  2155  003846  0100               	movlb	0	; () banked
  2156  003848  2776               	addwf	_nout& (0+255),f,b
  2157  00384A  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  2158  00384C  2377               	addwfc	(_nout+1)& (0+255),f,b
  2159  00384E                     l4994:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2163  00384E  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  2164  003852  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2165  003856                     	if	0	;tblptru may be non-zero
  2166  003856                     	endif
  2167  003856                     	if	0	;tblptru may be non-zero
  2168  003856                     	endif
  2169  003856  0008               	tblrd		*
  2170  003858  50F5               	movf	tablat,w,c
  2171  00385A  0900               	iorlw	0
  2172  00385C  A4D8               	btfss	status,2,c
  2173  00385E  EF33  F01C         	goto	u5221
  2174  003862  EF35  F01C         	goto	u5220
  2175  003866                     u5221:
  2176  003866  EF14  F01C         	goto	l4992
  2177  00386A                     u5220:
  2178  00386A                     
  2179                           ; BSR set to: 0
  2180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2181  00386A  C076  F09E         	movff	_nout,?_vfprintf
  2182  00386E  C077  F09F         	movff	_nout+1,?_vfprintf+1
  2183  003872                     
  2184                           ; BSR set to: 0
  2185  003872  0012               	return		;funcret
  2186  003874                     __end_of_vfprintf:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _vfpfcnvrt *****************
  2190 ;; Defined at:
  2191 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2194 ;;		 -> sprintf@f(6), 
  2195 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  2196 ;;		 -> vfprintf@cfmt(2), 
  2197 ;;  ap              2   71[COMRAM] PTR PTR void 
  2198 ;;		 -> sprintf@ap(2), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  ll              8   75[COMRAM] long long 
  2201 ;;  llu             8    0        unsigned long long 
  2202 ;;  f               4    0        unsigned long long 
  2203 ;;  vp              3    0        PTR void 
  2204 ;;  ct              3    0        unsigned char [3]
  2205 ;;  cp              3    0        PTR unsigned char 
  2206 ;;  i               2    0        int 
  2207 ;;  done            2    0        int 
  2208 ;;  c               1    0        unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  2   67[COMRAM] int 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2218 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;Total ram usage:       16 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 7
  2225 ;; This function calls:
  2226 ;;		_dtoa
  2227 ;;		_fputc
  2228 ;; This function is called by:
  2229 ;;		_vfprintf
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text3
  2234  002CC2                     __ptext3:
  2235                           	callstack 0
  2236  002CC2                     _vfpfcnvrt:
  2237                           	callstack 21
  2238  002CC2                     
  2239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2240  002CC2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  002CC6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  002CCA  CFDE FFF6          	movff	postinc2,tblptrl
  2243  002CCE  CFDD FFF7          	movff	postdec2,tblptrh
  2244  002CD2                     	if	0	;tblptru may be non-zero
  2245  002CD2                     	endif
  2246  002CD2                     	if	0	;tblptru may be non-zero
  2247  002CD2                     	endif
  2248  002CD2  0008               	tblrd		*
  2249  002CD4  50F5               	movf	tablat,w,c
  2250  002CD6  0A25               	xorlw	37
  2251  002CD8  A4D8               	btfss	status,2,c
  2252  002CDA  EF71  F016         	goto	u4801
  2253  002CDE  EF73  F016         	goto	u4800
  2254  002CE2                     u4801:
  2255  002CE2  EF1F  F017         	goto	l4712
  2256  002CE6                     u4800:
  2257  002CE6                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2259  002CE6  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  002CEA  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  002CEE  2ADE               	incf	postinc2,f,c
  2262  002CF0  0E00               	movlw	0
  2263  002CF2  22DD               	addwfc	postdec2,f,c
  2264  002CF4                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2266  002CF4  0E00               	movlw	0
  2267  002CF6  0100               	movlb	0	; () banked
  2268  002CF8  6F79               	movwf	(_width+1)& (0+255),b
  2269  002CFA  0E00               	movlw	0
  2270  002CFC  6F78               	movwf	_width& (0+255),b
  2271  002CFE  C078  F07C         	movff	_width,_flags
  2272  002D02  C079  F07D         	movff	_width+1,_flags+1
  2273  002D06                     
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2276  002D06  697A               	setf	_prec& (0+255),b
  2277  002D08  697B               	setf	(_prec+1)& (0+255),b
  2278  002D0A                     
  2279                           ; BSR set to: 0
  2280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2281  002D0A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2282  002D0E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2283  002D12  CFDE FFF6          	movff	postinc2,tblptrl
  2284  002D16  CFDD FFF7          	movff	postdec2,tblptrh
  2285  002D1A                     	if	0	;tblptru may be non-zero
  2286  002D1A                     	endif
  2287  002D1A                     	if	0	;tblptru may be non-zero
  2288  002D1A                     	endif
  2289  002D1A  0008               	tblrd		*
  2290  002D1C  50F5               	movf	tablat,w,c
  2291  002D1E  0A64               	xorlw	100
  2292  002D20  B4D8               	btfsc	status,2,c
  2293  002D22  EF95  F016         	goto	u4811
  2294  002D26  EF97  F016         	goto	u4810
  2295  002D2A                     u4811:
  2296  002D2A  EFA9  F016         	goto	l4690
  2297  002D2E                     u4810:
  2298  002D2E                     
  2299                           ; BSR set to: 0
  2300  002D2E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2301  002D32  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2302  002D36  CFDE FFF6          	movff	postinc2,tblptrl
  2303  002D3A  CFDD FFF7          	movff	postdec2,tblptrh
  2304  002D3E                     	if	0	;tblptru may be non-zero
  2305  002D3E                     	endif
  2306  002D3E                     	if	0	;tblptru may be non-zero
  2307  002D3E                     	endif
  2308  002D3E  0008               	tblrd		*
  2309  002D40  50F5               	movf	tablat,w,c
  2310  002D42  0A69               	xorlw	105
  2311  002D44  A4D8               	btfss	status,2,c
  2312  002D46  EFA7  F016         	goto	u4821
  2313  002D4A  EFA9  F016         	goto	u4820
  2314  002D4E                     u4821:
  2315  002D4E  EFE9  F016         	goto	l4696
  2316  002D52                     u4820:
  2317  002D52                     l4690:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2321  002D52  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  002D56  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  002D5A  2ADE               	incf	postinc2,f,c
  2324  002D5C  0E00               	movlw	0
  2325  002D5E  22DD               	addwfc	postdec2,f,c
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2328  002D60  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2329  002D64  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2330  002D68  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2331  002D6C  0E02               	movlw	2
  2332  002D6E  26DE               	addwf	postinc2,f,c
  2333  002D70  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2334  002D74  0E00               	movlw	0
  2335  002D76  22DD               	addwfc	postdec2,f,c
  2336  002D78  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2337  002D7C  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2338  002D80  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  2339  002D84  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  2340  002D88  0E00               	movlw	0
  2341  002D8A  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2342  002D8C  0EFF               	movlw	-1
  2343  002D8E  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  2344  002D90  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  2345  002D92  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  2346  002D94  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  2347  002D96  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  2348  002D98  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  2349  002D9A                     
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2352  002D9A  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2353  002D9E  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2354  002DA2  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2355  002DA6  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2356  002DAA  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2357  002DAE  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2358  002DB2  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2359  002DB6  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2360  002DBA  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2361  002DBE  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2362  002DC2  ECF0  F014         	call	_dtoa	;wreg free
  2363  002DC6  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2364  002DCA  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2365  002DCE  EF3A  F017         	goto	l1164
  2366  002DD2                     l4696:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2370  002DD2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  002DD6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  002DDA  CFDE FFF6          	movff	postinc2,tblptrl
  2373  002DDE  CFDD FFF7          	movff	postdec2,tblptrh
  2374  002DE2                     	if	0	;tblptru may be non-zero
  2375  002DE2                     	endif
  2376  002DE2                     	if	0	;tblptru may be non-zero
  2377  002DE2                     	endif
  2378  002DE2  0008               	tblrd		*
  2379  002DE4  50F5               	movf	tablat,w,c
  2380  002DE6  0A25               	xorlw	37
  2381  002DE8  A4D8               	btfss	status,2,c
  2382  002DEA  EFF9  F016         	goto	u4831
  2383  002DEE  EFFB  F016         	goto	u4830
  2384  002DF2                     u4831:
  2385  002DF2  EF12  F017         	goto	l4706
  2386  002DF6                     u4830:
  2387  002DF6                     
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2390  002DF6  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391  002DFA  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392  002DFE  2ADE               	incf	postinc2,f,c
  2393  002E00  0E00               	movlw	0
  2394  002E02  22DD               	addwfc	postdec2,f,c
  2395  002E04                     
  2396                           ; BSR set to: 0
  2397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2398  002E04  0E00               	movlw	0
  2399  002E06  6E06               	movwf	(fputc@c+1)^0,c
  2400  002E08  0E25               	movlw	37
  2401  002E0A  6E05               	movwf	fputc@c^0,c
  2402  002E0C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2403  002E10  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2404  002E14  EC91  F01A         	call	_fputc	;wreg free
  2405  002E18                     l4702:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2408  002E18  0E00               	movlw	0
  2409  002E1A  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2410  002E1C  0E01               	movlw	1
  2411  002E1E  6E44               	movwf	?_vfpfcnvrt^0,c
  2412  002E20  EF3A  F017         	goto	l1164
  2413  002E24                     l4706:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2417  002E24  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418  002E28  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  002E2C  2ADE               	incf	postinc2,f,c
  2420  002E2E  0E00               	movlw	0
  2421  002E30  22DD               	addwfc	postdec2,f,c
  2422  002E32                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2425  002E32  0E00               	movlw	0
  2426  002E34  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2427  002E36  0E00               	movlw	0
  2428  002E38  6E44               	movwf	?_vfpfcnvrt^0,c
  2429  002E3A  EF3A  F017         	goto	l1164
  2430  002E3E                     l4712:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2433  002E3E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2434  002E42  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2435  002E46  CFDE FFF6          	movff	postinc2,tblptrl
  2436  002E4A  CFDD FFF7          	movff	postdec2,tblptrh
  2437  002E4E                     	if	0	;tblptru may be non-zero
  2438  002E4E                     	endif
  2439  002E4E                     	if	0	;tblptru may be non-zero
  2440  002E4E                     	endif
  2441  002E4E  0008               	tblrd		*
  2442  002E50  50F5               	movf	tablat,w,c
  2443  002E52  6E05               	movwf	fputc@c^0,c
  2444  002E54  6A06               	clrf	(fputc@c+1)^0,c
  2445  002E56  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2446  002E5A  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2447  002E5E  EC91  F01A         	call	_fputc	;wreg free
  2448  002E62                     
  2449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2450  002E62  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  002E66  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  002E6A  2ADE               	incf	postinc2,f,c
  2453  002E6C  0E00               	movlw	0
  2454  002E6E  22DD               	addwfc	postdec2,f,c
  2455  002E70  EF0C  F017         	goto	l4702
  2456  002E74                     l1164:
  2457  002E74  0012               	return		;funcret
  2458  002E76                     __end_of_vfpfcnvrt:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _dtoa *****************
  2462 ;; Defined at:
  2463 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2466 ;;		 -> sprintf@f(6), 
  2467 ;;  d               8   33[COMRAM] long long 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  n               8   57[COMRAM] long long 
  2470 ;;  i               2   65[COMRAM] int 
  2471 ;;  s               2   55[COMRAM] int 
  2472 ;;  w               2   53[COMRAM] int 
  2473 ;;  p               2   51[COMRAM] int 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2   31[COMRAM] int 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2483 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;Total ram usage:       36 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 6
  2490 ;; This function calls:
  2491 ;;		___aodiv
  2492 ;;		___aomod
  2493 ;;		_abs
  2494 ;;		_pad
  2495 ;; This function is called by:
  2496 ;;		_vfpfcnvrt
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text4
  2501  0029E0                     __ptext4:
  2502                           	callstack 0
  2503  0029E0                     _dtoa:
  2504                           	callstack 21
  2505  0029E0                     
  2506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2507  0029E0  C022  F03A         	movff	dtoa@d,dtoa@n
  2508  0029E4  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2509  0029E8  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2510  0029EC  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2511  0029F0  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2512  0029F4  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2513  0029F8  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2514  0029FC  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2515  002A00                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2517  002A00  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2518  002A02  EF05  F015         	goto	u3991
  2519  002A06  EF08  F015         	goto	u3990
  2520  002A0A                     u3991:
  2521  002A0A  0E01               	movlw	1
  2522  002A0C  EF09  F015         	goto	u4000
  2523  002A10                     u3990:
  2524  002A10  0E00               	movlw	0
  2525  002A12                     u4000:
  2526  002A12  6E38               	movwf	dtoa@s^0,c
  2527  002A14  6A39               	clrf	(dtoa@s+1)^0,c
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2530  002A16  5038               	movf	dtoa@s^0,w,c
  2531  002A18  1039               	iorwf	(dtoa@s+1)^0,w,c
  2532  002A1A  B4D8               	btfsc	status,2,c
  2533  002A1C  EF12  F015         	goto	u4011
  2534  002A20  EF14  F015         	goto	u4010
  2535  002A24                     u4011:
  2536  002A24  EF24  F015         	goto	l4228
  2537  002A28                     u4010:
  2538  002A28                     
  2539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2540  002A28  1E41               	comf	(dtoa@n+7)^0,f,c
  2541  002A2A  1E40               	comf	(dtoa@n+6)^0,f,c
  2542  002A2C  1E3F               	comf	(dtoa@n+5)^0,f,c
  2543  002A2E  1E3E               	comf	(dtoa@n+4)^0,f,c
  2544  002A30  1E3D               	comf	(dtoa@n+3)^0,f,c
  2545  002A32  1E3C               	comf	(dtoa@n+2)^0,f,c
  2546  002A34  1E3B               	comf	(dtoa@n+1)^0,f,c
  2547  002A36  6C3A               	negf	dtoa@n^0,c
  2548  002A38  0E00               	movlw	0
  2549  002A3A  223B               	addwfc	(dtoa@n+1)^0,f,c
  2550  002A3C  223C               	addwfc	(dtoa@n+2)^0,f,c
  2551  002A3E  223D               	addwfc	(dtoa@n+3)^0,f,c
  2552  002A40  223E               	addwfc	(dtoa@n+4)^0,f,c
  2553  002A42  223F               	addwfc	(dtoa@n+5)^0,f,c
  2554  002A44  2240               	addwfc	(dtoa@n+6)^0,f,c
  2555  002A46  2241               	addwfc	(dtoa@n+7)^0,f,c
  2556  002A48                     l4228:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2559  002A48  0100               	movlb	0	; () banked
  2560  002A4A  BF7B               	btfsc	(_prec+1)& (0+255),7,b
  2561  002A4C  EF2A  F015         	goto	u4021
  2562  002A50  EF2C  F015         	goto	u4020
  2563  002A54                     u4021:
  2564  002A54  EF2D  F015         	goto	l4232
  2565  002A58                     u4020:
  2566  002A58                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2569  002A58  937C               	bcf	_flags& (0+255),1,b
  2570  002A5A                     l4232:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2574  002A5A  BF7B               	btfsc	(_prec+1)& (0+255),7,b
  2575  002A5C  EF3A  F015         	goto	u4030
  2576  002A60  517B               	movf	(_prec+1)& (0+255),w,b
  2577  002A62  E106               	bnz	u4031
  2578  002A64  057A               	decf	_prec& (0+255),w,b
  2579  002A66  B0D8               	btfsc	status,0,c
  2580  002A68  EF38  F015         	goto	u4031
  2581  002A6C  EF3A  F015         	goto	u4030
  2582  002A70                     u4031:
  2583  002A70  EF40  F015         	goto	l1137
  2584  002A74                     u4030:
  2585  002A74                     
  2586                           ; BSR set to: 0
  2587  002A74  0E00               	movlw	0
  2588  002A76  6E35               	movwf	(dtoa@p+1)^0,c
  2589  002A78  0E01               	movlw	1
  2590  002A7A  6E34               	movwf	dtoa@p^0,c
  2591  002A7C  EF44  F015         	goto	l1139
  2592  002A80                     l1137:
  2593                           
  2594                           ; BSR set to: 0
  2595  002A80  C07A  F034         	movff	_prec,dtoa@p
  2596  002A84  C07B  F035         	movff	_prec+1,dtoa@p+1
  2597  002A88                     l1139:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2601  002A88  C078  F036         	movff	_width,dtoa@w
  2602  002A8C  C079  F037         	movff	_width+1,dtoa@w+1
  2603  002A90                     
  2604                           ; BSR set to: 0
  2605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2606  002A90  5038               	movf	dtoa@s^0,w,c
  2607  002A92  1039               	iorwf	(dtoa@s+1)^0,w,c
  2608  002A94  A4D8               	btfss	status,2,c
  2609  002A96  EF4F  F015         	goto	u4041
  2610  002A9A  EF51  F015         	goto	u4040
  2611  002A9E                     u4041:
  2612  002A9E  EF58  F015         	goto	l4240
  2613  002AA2                     u4040:
  2614  002AA2                     
  2615                           ; BSR set to: 0
  2616  002AA2  A57C               	btfss	_flags& (0+255),2,b
  2617  002AA4  EF56  F015         	goto	u4051
  2618  002AA8  EF58  F015         	goto	u4050
  2619  002AAC                     u4051:
  2620  002AAC  EF5B  F015         	goto	l4242
  2621  002AB0                     u4050:
  2622  002AB0                     l4240:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2626  002AB0  0636               	decf	dtoa@w^0,f,c
  2627  002AB2  A0D8               	btfss	status,0,c
  2628  002AB4  0637               	decf	(dtoa@w+1)^0,f,c
  2629  002AB6                     l4242:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2633  002AB6  0E00               	movlw	0
  2634  002AB8  6E43               	movwf	(dtoa@i+1)^0,c
  2635  002ABA  0E1F               	movlw	31
  2636  002ABC  6E42               	movwf	dtoa@i^0,c
  2637  002ABE                     
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2640  002ABE  0E00               	movlw	0
  2641  002AC0  6F9D               	movwf	(_dbuf+31)& (0+255),b
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2644  002AC2  EFDF  F015         	goto	l4256
  2645  002AC6                     l4246:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2648  002AC6  0642               	decf	dtoa@i^0,f,c
  2649  002AC8  A0D8               	btfss	status,0,c
  2650  002ACA  0643               	decf	(dtoa@i+1)^0,f,c
  2651  002ACC                     
  2652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2653  002ACC  0E7E               	movlw	low _dbuf
  2654  002ACE  2442               	addwf	dtoa@i^0,w,c
  2655  002AD0  6ED9               	movwf	fsr2l,c
  2656  002AD2  0E00               	movlw	high _dbuf
  2657  002AD4  2043               	addwfc	(dtoa@i+1)^0,w,c
  2658  002AD6  6EDA               	movwf	fsr2h,c
  2659  002AD8  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2660  002ADC  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2661  002AE0  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2662  002AE4  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2663  002AE8  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2664  002AEC  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2665  002AF0  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2666  002AF4  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2667  002AF8  0E0A               	movlw	10
  2668  002AFA  6E0D               	movwf	___aomod@divisor^0,c
  2669  002AFC  0E00               	movlw	0
  2670  002AFE  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2671  002B00  0E00               	movlw	0
  2672  002B02  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2673  002B04  0E00               	movlw	0
  2674  002B06  6E10               	movwf	(___aomod@divisor+3)^0,c
  2675  002B08  0E00               	movlw	0
  2676  002B0A  6E11               	movwf	(___aomod@divisor+4)^0,c
  2677  002B0C  0E00               	movlw	0
  2678  002B0E  6E12               	movwf	(___aomod@divisor+5)^0,c
  2679  002B10  0E00               	movlw	0
  2680  002B12  6E13               	movwf	(___aomod@divisor+6)^0,c
  2681  002B14  0E00               	movlw	0
  2682  002B16  6E14               	movwf	(___aomod@divisor+7)^0,c
  2683  002B18  ECD9  F018         	call	___aomod	;wreg free
  2684  002B1C  C005  F02A         	movff	?___aomod,??_dtoa
  2685  002B20  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2686  002B24  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2687  002B28  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2688  002B2C  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2689  002B30  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2690  002B34  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2691  002B38  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2692  002B3C  C02A  F017         	movff	??_dtoa,abs@a
  2693  002B40  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2694  002B44  EC3F  F01D         	call	_abs	;wreg free
  2695  002B48  5017               	movf	?_abs^0,w,c
  2696  002B4A  0F30               	addlw	48
  2697  002B4C  6EDF               	movwf	indf2,c
  2698  002B4E                     
  2699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2700  002B4E  0634               	decf	dtoa@p^0,f,c
  2701  002B50  A0D8               	btfss	status,0,c
  2702  002B52  0635               	decf	(dtoa@p+1)^0,f,c
  2703  002B54                     
  2704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2705  002B54  0636               	decf	dtoa@w^0,f,c
  2706  002B56  A0D8               	btfss	status,0,c
  2707  002B58  0637               	decf	(dtoa@w+1)^0,f,c
  2708  002B5A                     
  2709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2710  002B5A  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2711  002B5E  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2712  002B62  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2713  002B66  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2714  002B6A  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2715  002B6E  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2716  002B72  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2717  002B76  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2718  002B7A  0E0A               	movlw	10
  2719  002B7C  6E0D               	movwf	___aodiv@divisor^0,c
  2720  002B7E  0E00               	movlw	0
  2721  002B80  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2722  002B82  0E00               	movlw	0
  2723  002B84  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2724  002B86  0E00               	movlw	0
  2725  002B88  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2726  002B8A  0E00               	movlw	0
  2727  002B8C  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2728  002B8E  0E00               	movlw	0
  2729  002B90  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2730  002B92  0E00               	movlw	0
  2731  002B94  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2732  002B96  0E00               	movlw	0
  2733  002B98  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2734  002B9A  EC15  F018         	call	___aodiv	;wreg free
  2735  002B9E  C005  F03A         	movff	?___aodiv,dtoa@n
  2736  002BA2  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2737  002BA6  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2738  002BAA  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2739  002BAE  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2740  002BB2  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2741  002BB6  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2742  002BBA  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2743  002BBE                     l4256:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2746  002BBE  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2747  002BC0  EFEA  F015         	goto	u4061
  2748  002BC4  5043               	movf	(dtoa@i+1)^0,w,c
  2749  002BC6  E108               	bnz	u4060
  2750  002BC8  0442               	decf	dtoa@i^0,w,c
  2751  002BCA  A0D8               	btfss	status,0,c
  2752  002BCC  EFEA  F015         	goto	u4061
  2753  002BD0  EFEC  F015         	goto	u4060
  2754  002BD4                     u4061:
  2755  002BD4  EF1D  F016         	goto	l4266
  2756  002BD8                     u4060:
  2757  002BD8  503A               	movf	dtoa@n^0,w,c
  2758  002BDA  103B               	iorwf	(dtoa@n+1)^0,w,c
  2759  002BDC  103C               	iorwf	(dtoa@n+2)^0,w,c
  2760  002BDE  103D               	iorwf	(dtoa@n+3)^0,w,c
  2761  002BE0  103E               	iorwf	(dtoa@n+4)^0,w,c
  2762  002BE2  103F               	iorwf	(dtoa@n+5)^0,w,c
  2763  002BE4  1040               	iorwf	(dtoa@n+6)^0,w,c
  2764  002BE6  1041               	iorwf	(dtoa@n+7)^0,w,c
  2765  002BE8  A4D8               	btfss	status,2,c
  2766  002BEA  EFF9  F015         	goto	u4071
  2767  002BEE  EFFB  F015         	goto	u4070
  2768  002BF2                     u4071:
  2769  002BF2  EF63  F015         	goto	l4246
  2770  002BF6                     u4070:
  2771  002BF6  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2772  002BF8  EF08  F016         	goto	u4080
  2773  002BFC  5035               	movf	(dtoa@p+1)^0,w,c
  2774  002BFE  E106               	bnz	u4081
  2775  002C00  0434               	decf	dtoa@p^0,w,c
  2776  002C02  B0D8               	btfsc	status,0,c
  2777  002C04  EF06  F016         	goto	u4081
  2778  002C08  EF08  F016         	goto	u4080
  2779  002C0C                     u4081:
  2780  002C0C  EF63  F015         	goto	l4246
  2781  002C10                     u4080:
  2782  002C10  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2783  002C12  EF13  F016         	goto	u4091
  2784  002C16  5037               	movf	(dtoa@w+1)^0,w,c
  2785  002C18  E108               	bnz	u4090
  2786  002C1A  0436               	decf	dtoa@w^0,w,c
  2787  002C1C  A0D8               	btfss	status,0,c
  2788  002C1E  EF13  F016         	goto	u4091
  2789  002C22  EF15  F016         	goto	u4090
  2790  002C26                     u4091:
  2791  002C26  EF1D  F016         	goto	l4266
  2792  002C2A                     u4090:
  2793  002C2A  0100               	movlb	0	; () banked
  2794  002C2C  B37C               	btfsc	_flags& (0+255),1,b
  2795  002C2E  EF1B  F016         	goto	u4101
  2796  002C32  EF1D  F016         	goto	u4100
  2797  002C36                     u4101:
  2798  002C36  EF63  F015         	goto	l4246
  2799  002C3A                     u4100:
  2800  002C3A                     l4266:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2803  002C3A  5038               	movf	dtoa@s^0,w,c
  2804  002C3C  1039               	iorwf	(dtoa@s+1)^0,w,c
  2805  002C3E  A4D8               	btfss	status,2,c
  2806  002C40  EF24  F016         	goto	u4111
  2807  002C44  EF26  F016         	goto	u4110
  2808  002C48                     u4111:
  2809  002C48  EF2E  F016         	goto	l4270
  2810  002C4C                     u4110:
  2811  002C4C  0100               	movlb	0	; () banked
  2812  002C4E  A57C               	btfss	_flags& (0+255),2,b
  2813  002C50  EF2C  F016         	goto	u4121
  2814  002C54  EF2E  F016         	goto	u4120
  2815  002C58                     u4121:
  2816  002C58  EF4C  F016         	goto	l4280
  2817  002C5C                     u4120:
  2818  002C5C                     l4270:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2821  002C5C  0642               	decf	dtoa@i^0,f,c
  2822  002C5E  A0D8               	btfss	status,0,c
  2823  002C60  0643               	decf	(dtoa@i+1)^0,f,c
  2824  002C62                     
  2825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2826  002C62  5038               	movf	dtoa@s^0,w,c
  2827  002C64  1039               	iorwf	(dtoa@s+1)^0,w,c
  2828  002C66  A4D8               	btfss	status,2,c
  2829  002C68  EF38  F016         	goto	u4131
  2830  002C6C  EF3A  F016         	goto	u4130
  2831  002C70                     u4131:
  2832  002C70  EF40  F016         	goto	l4276
  2833  002C74                     u4130:
  2834  002C74  0E00               	movlw	0
  2835  002C76  6E33               	movwf	(_dtoa$2169+1)^0,c
  2836  002C78  0E2B               	movlw	43
  2837  002C7A  6E32               	movwf	_dtoa$2169^0,c
  2838  002C7C  EF44  F016         	goto	l4278
  2839  002C80                     l4276:
  2840  002C80  0E00               	movlw	0
  2841  002C82  6E33               	movwf	(_dtoa$2169+1)^0,c
  2842  002C84  0E2D               	movlw	45
  2843  002C86  6E32               	movwf	_dtoa$2169^0,c
  2844  002C88                     l4278:
  2845  002C88  0E7E               	movlw	low _dbuf
  2846  002C8A  2442               	addwf	dtoa@i^0,w,c
  2847  002C8C  6ED9               	movwf	fsr2l,c
  2848  002C8E  0E00               	movlw	high _dbuf
  2849  002C90  2043               	addwfc	(dtoa@i+1)^0,w,c
  2850  002C92  6EDA               	movwf	fsr2h,c
  2851  002C94  C032  FFDF         	movff	_dtoa$2169,indf2
  2852  002C98                     l4280:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2855  002C98  C020  F015         	movff	dtoa@fp,pad@fp
  2856  002C9C  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2857  002CA0  0E7E               	movlw	low _dbuf
  2858  002CA2  2442               	addwf	dtoa@i^0,w,c
  2859  002CA4  6E17               	movwf	pad@buf^0,c
  2860  002CA6  0E00               	movlw	high _dbuf
  2861  002CA8  2043               	addwfc	(dtoa@i+1)^0,w,c
  2862  002CAA  6E18               	movwf	(pad@buf+1)^0,c
  2863  002CAC  C036  F019         	movff	dtoa@w,pad@p
  2864  002CB0  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2865  002CB4  ECF6  F01A         	call	_pad	;wreg free
  2866  002CB8  C015  F020         	movff	?_pad,?_dtoa
  2867  002CBC  C016  F021         	movff	?_pad+1,?_dtoa+1
  2868  002CC0  0012               	return		;funcret
  2869  002CC2                     __end_of_dtoa:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _pad *****************
  2873 ;; Defined at:
  2874 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2877 ;;		 -> sprintf@f(6), 
  2878 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2879 ;;		 -> dbuf(32), 
  2880 ;;  p               2   24[COMRAM] int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  w               2   29[COMRAM] int 
  2883 ;;  i               2   27[COMRAM] int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   20[COMRAM] int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2893 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2894 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2896 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2897 ;;Total ram usage:       11 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 5
  2900 ;; This function calls:
  2901 ;;		_fputc
  2902 ;;		_fputs
  2903 ;;		_strlen
  2904 ;; This function is called by:
  2905 ;;		_dtoa
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text5
  2910  0035EC                     __ptext5:
  2911                           	callstack 0
  2912  0035EC                     _pad:
  2913                           	callstack 21
  2914  0035EC                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2916  0035EC  0100               	movlb	0	; () banked
  2917  0035EE  A17C               	btfss	_flags& (0+255),0,b
  2918  0035F0  EFFC  F01A         	goto	u3921
  2919  0035F4  EFFE  F01A         	goto	u3920
  2920  0035F8                     u3921:
  2921  0035F8  EF08  F01B         	goto	l4196
  2922  0035FC                     u3920:
  2923  0035FC                     
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2926  0035FC  C017  F00E         	movff	pad@buf,fputs@s
  2927  003600  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2928  003604  C015  F010         	movff	pad@fp,fputs@fp
  2929  003608  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2930  00360C  ECDB  F01C         	call	_fputs	;wreg free
  2931  003610                     l4196:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2934  003610  BE1A               	btfsc	(pad@p+1)^0,7,c
  2935  003612  EF0D  F01B         	goto	u3931
  2936  003616  EF0F  F01B         	goto	u3930
  2937  00361A                     u3931:
  2938  00361A  EF15  F01B         	goto	l4200
  2939  00361E                     u3930:
  2940  00361E  C019  F01E         	movff	pad@p,pad@w
  2941  003622  C01A  F01F         	movff	pad@p+1,pad@w+1
  2942  003626  EF19  F01B         	goto	l1126
  2943  00362A                     l4200:
  2944  00362A  0E00               	movlw	0
  2945  00362C  6E1F               	movwf	(pad@w+1)^0,c
  2946  00362E  0E00               	movlw	0
  2947  003630  6E1E               	movwf	pad@w^0,c
  2948  003632                     l1126:
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2951  003632  0E00               	movlw	0
  2952  003634  6E1D               	movwf	(pad@i+1)^0,c
  2953  003636  0E00               	movlw	0
  2954  003638  6E1C               	movwf	pad@i^0,c
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2957  00363A  EF2B  F01B         	goto	l4206
  2958  00363E                     l4202:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2961  00363E  0E00               	movlw	0
  2962  003640  6E06               	movwf	(fputc@c+1)^0,c
  2963  003642  0E20               	movlw	32
  2964  003644  6E05               	movwf	fputc@c^0,c
  2965  003646  C015  F007         	movff	pad@fp,fputc@fp
  2966  00364A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2967  00364E  EC91  F01A         	call	_fputc	;wreg free
  2968  003652                     
  2969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2970  003652  4A1C               	infsnz	pad@i^0,f,c
  2971  003654  2A1D               	incf	(pad@i+1)^0,f,c
  2972  003656                     l4206:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2975  003656  501E               	movf	pad@w^0,w,c
  2976  003658  5C1C               	subwf	pad@i^0,w,c
  2977  00365A  501D               	movf	(pad@i+1)^0,w,c
  2978  00365C  0A80               	xorlw	128
  2979  00365E  6E1B               	movwf	??_pad^0,c
  2980  003660  501F               	movf	(pad@w+1)^0,w,c
  2981  003662  0A80               	xorlw	128
  2982  003664  581B               	subwfb	??_pad^0,w,c
  2983  003666  A0D8               	btfss	status,0,c
  2984  003668  EF38  F01B         	goto	u3941
  2985  00366C  EF3A  F01B         	goto	u3940
  2986  003670                     u3941:
  2987  003670  EF1F  F01B         	goto	l4202
  2988  003674                     u3940:
  2989  003674                     
  2990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2991  003674  0100               	movlb	0	; () banked
  2992  003676  B17C               	btfsc	_flags& (0+255),0,b
  2993  003678  EF40  F01B         	goto	u3951
  2994  00367C  EF42  F01B         	goto	u3950
  2995  003680                     u3951:
  2996  003680  EF4C  F01B         	goto	l4210
  2997  003684                     u3950:
  2998  003684                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3001  003684  C017  F00E         	movff	pad@buf,fputs@s
  3002  003688  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3003  00368C  C015  F010         	movff	pad@fp,fputs@fp
  3004  003690  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3005  003694  ECDB  F01C         	call	_fputs	;wreg free
  3006  003698                     l4210:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3009  003698  C017  F005         	movff	pad@buf,strlen@s
  3010  00369C  C018  F006         	movff	pad@buf+1,strlen@s+1
  3011  0036A0  EC7A  F01D         	call	_strlen	;wreg free
  3012  0036A4  501E               	movf	pad@w^0,w,c
  3013  0036A6  2405               	addwf	?_strlen^0,w,c
  3014  0036A8  6E15               	movwf	?_pad^0,c
  3015  0036AA  501F               	movf	(pad@w+1)^0,w,c
  3016  0036AC  2006               	addwfc	(?_strlen+1)^0,w,c
  3017  0036AE  6E16               	movwf	(?_pad+1)^0,c
  3018  0036B0  0012               	return		;funcret
  3019  0036B2                     __end_of_pad:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _strlen *****************
  3023 ;; Defined at:
  3024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3027 ;;		 -> dbuf(32), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3030 ;;		 -> dbuf(32), 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2    4[COMRAM] unsigned int 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:        4 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 2
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_pad
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text6
  3055  003AF4                     __ptext6:
  3056                           	callstack 0
  3057  003AF4                     _strlen:
  3058                           	callstack 23
  3059  003AF4  C005  F007         	movff	strlen@s,strlen@a
  3060  003AF8  C006  F008         	movff	strlen@s+1,strlen@a+1
  3061  003AFC  EF82  F01D         	goto	l4106
  3062  003B00                     l4104:
  3063  003B00  4A05               	infsnz	strlen@s^0,f,c
  3064  003B02  2A06               	incf	(strlen@s+1)^0,f,c
  3065  003B04                     l4106:
  3066  003B04  C005  FFD9         	movff	strlen@s,fsr2l
  3067  003B08  C006  FFDA         	movff	strlen@s+1,fsr2h
  3068  003B0C  50DF               	movf	indf2,w,c
  3069  003B0E  A4D8               	btfss	status,2,c
  3070  003B10  EF8C  F01D         	goto	u3781
  3071  003B14  EF8E  F01D         	goto	u3780
  3072  003B18                     u3781:
  3073  003B18  EF80  F01D         	goto	l4104
  3074  003B1C                     u3780:
  3075  003B1C  5007               	movf	strlen@a^0,w,c
  3076  003B1E  5C05               	subwf	strlen@s^0,w,c
  3077  003B20  6E05               	movwf	?_strlen^0,c
  3078  003B22  5008               	movf	(strlen@a+1)^0,w,c
  3079  003B24  5806               	subwfb	(strlen@s+1)^0,w,c
  3080  003B26  6E06               	movwf	(?_strlen+1)^0,c
  3081  003B28  0012               	return		;funcret
  3082  003B2A                     __end_of_strlen:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _fputs *****************
  3086 ;; Defined at:
  3087 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3090 ;;		 -> dbuf(32), 
  3091 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3092 ;;		 -> sprintf@f(6), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  i               2   18[COMRAM] int 
  3095 ;;  c               1   17[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  2   13[COMRAM] int 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;Total ram usage:        7 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 4
  3112 ;; This function calls:
  3113 ;;		_fputc
  3114 ;; This function is called by:
  3115 ;;		_pad
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text7
  3120  0039B6                     __ptext7:
  3121                           	callstack 0
  3122  0039B6                     _fputs:
  3123                           	callstack 21
  3124  0039B6  0E00               	movlw	0
  3125  0039B8  6E14               	movwf	(fputs@i+1)^0,c
  3126  0039BA  0E00               	movlw	0
  3127  0039BC  6E13               	movwf	fputs@i^0,c
  3128  0039BE  EFEC  F01C         	goto	l4100
  3129  0039C2                     l4096:
  3130  0039C2  C012  F005         	movff	fputs@c,fputc@c
  3131  0039C6  6A06               	clrf	(fputc@c+1)^0,c
  3132  0039C8  C010  F007         	movff	fputs@fp,fputc@fp
  3133  0039CC  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3134  0039D0  EC91  F01A         	call	_fputc	;wreg free
  3135  0039D4  4A13               	infsnz	fputs@i^0,f,c
  3136  0039D6  2A14               	incf	(fputs@i+1)^0,f,c
  3137  0039D8                     l4100:
  3138  0039D8  5013               	movf	fputs@i^0,w,c
  3139  0039DA  240E               	addwf	fputs@s^0,w,c
  3140  0039DC  6ED9               	movwf	fsr2l,c
  3141  0039DE  5014               	movf	(fputs@i+1)^0,w,c
  3142  0039E0  200F               	addwfc	(fputs@s+1)^0,w,c
  3143  0039E2  6EDA               	movwf	fsr2h,c
  3144  0039E4  50DF               	movf	indf2,w,c
  3145  0039E6  6E12               	movwf	fputs@c^0,c
  3146  0039E8  5012               	movf	fputs@c^0,w,c
  3147  0039EA  A4D8               	btfss	status,2,c
  3148  0039EC  EFFA  F01C         	goto	u3771
  3149  0039F0  EFFC  F01C         	goto	u3770
  3150  0039F4                     u3771:
  3151  0039F4  EFE1  F01C         	goto	l4096
  3152  0039F8                     u3770:
  3153  0039F8  0012               	return		;funcret
  3154  0039FA                     __end_of_fputs:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _fputc *****************
  3158 ;; Defined at:
  3159 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  c               2    4[COMRAM] int 
  3162 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3163 ;;		 -> sprintf@f(6), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2    4[COMRAM] int 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;Total ram usage:        9 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 3
  3182 ;; This function calls:
  3183 ;;		_putch
  3184 ;; This function is called by:
  3185 ;;		_pad
  3186 ;;		_vfpfcnvrt
  3187 ;;		_fputs
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text8
  3192  003522                     __ptext8:
  3193                           	callstack 0
  3194  003522                     _fputc:
  3195                           	callstack 24
  3196  003522  5007               	movf	fputc@fp^0,w,c
  3197  003524  1008               	iorwf	(fputc@fp+1)^0,w,c
  3198  003526  B4D8               	btfsc	status,2,c
  3199  003528  EF98  F01A         	goto	u3731
  3200  00352C  EF9A  F01A         	goto	u3730
  3201  003530                     u3731:
  3202  003530  EFA3  F01A         	goto	l4084
  3203  003534                     u3730:
  3204  003534  5007               	movf	fputc@fp^0,w,c
  3205  003536  1008               	iorwf	(fputc@fp+1)^0,w,c
  3206  003538  A4D8               	btfss	status,2,c
  3207  00353A  EFA1  F01A         	goto	u3741
  3208  00353E  EFA3  F01A         	goto	u3740
  3209  003542                     u3741:
  3210  003542  EFA8  F01A         	goto	l4086
  3211  003546                     u3740:
  3212  003546                     l4084:
  3213  003546  5005               	movf	fputc@c^0,w,c
  3214  003548  ECB4  F01E         	call	_putch
  3215  00354C  EFF5  F01A         	goto	l1190
  3216  003550                     l4086:
  3217  003550  EE20 F004          	lfsr	2,4
  3218  003554  5007               	movf	fputc@fp^0,w,c
  3219  003556  26D9               	addwf	fsr2l,f,c
  3220  003558  5008               	movf	(fputc@fp+1)^0,w,c
  3221  00355A  22DA               	addwfc	fsr2h,f,c
  3222  00355C  50DE               	movf	postinc2,w,c
  3223  00355E  10DE               	iorwf	postinc2,w,c
  3224  003560  B4D8               	btfsc	status,2,c
  3225  003562  EFB5  F01A         	goto	u3751
  3226  003566  EFB7  F01A         	goto	u3750
  3227  00356A                     u3751:
  3228  00356A  EFD2  F01A         	goto	l4090
  3229  00356E                     u3750:
  3230  00356E  EE20 F004          	lfsr	2,4
  3231  003572  5007               	movf	fputc@fp^0,w,c
  3232  003574  26D9               	addwf	fsr2l,f,c
  3233  003576  5008               	movf	(fputc@fp+1)^0,w,c
  3234  003578  22DA               	addwfc	fsr2h,f,c
  3235  00357A  EE10 F002          	lfsr	1,2
  3236  00357E  5007               	movf	fputc@fp^0,w,c
  3237  003580  26E1               	addwf	fsr1l,f,c
  3238  003582  5008               	movf	(fputc@fp+1)^0,w,c
  3239  003584  22E2               	addwfc	fsr1h,f,c
  3240  003586  50DE               	movf	postinc2,w,c
  3241  003588  5CE6               	subwf	postinc1,w,c
  3242  00358A  50E6               	movf	postinc1,w,c
  3243  00358C  0A80               	xorlw	128
  3244  00358E  6E0D               	movwf	(??_fputc+4)^0,c
  3245  003590  50DE               	movf	postinc2,w,c
  3246  003592  0A80               	xorlw	128
  3247  003594  580D               	subwfb	(??_fputc+4)^0,w,c
  3248  003596  B0D8               	btfsc	status,0,c
  3249  003598  EFD0  F01A         	goto	u3761
  3250  00359C  EFD2  F01A         	goto	u3760
  3251  0035A0                     u3761:
  3252  0035A0  EFF5  F01A         	goto	l1190
  3253  0035A4                     u3760:
  3254  0035A4                     l4090:
  3255  0035A4  EE20 F002          	lfsr	2,2
  3256  0035A8  5007               	movf	fputc@fp^0,w,c
  3257  0035AA  26D9               	addwf	fsr2l,f,c
  3258  0035AC  5008               	movf	(fputc@fp+1)^0,w,c
  3259  0035AE  22DA               	addwfc	fsr2h,f,c
  3260  0035B0  CFDE F009          	movff	postinc2,??_fputc
  3261  0035B4  CFDD F00A          	movff	postdec2,??_fputc+1
  3262  0035B8  C007  FFD9         	movff	fputc@fp,fsr2l
  3263  0035BC  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3264  0035C0  CFDE F00B          	movff	postinc2,??_fputc+2
  3265  0035C4  CFDD F00C          	movff	postdec2,??_fputc+3
  3266  0035C8  5009               	movf	??_fputc^0,w,c
  3267  0035CA  240B               	addwf	(??_fputc+2)^0,w,c
  3268  0035CC  6ED9               	movwf	fsr2l,c
  3269  0035CE  500A               	movf	(??_fputc+1)^0,w,c
  3270  0035D0  200C               	addwfc	(??_fputc+3)^0,w,c
  3271  0035D2  6EDA               	movwf	fsr2h,c
  3272  0035D4  C005  FFDF         	movff	fputc@c,indf2
  3273  0035D8  EE20 F002          	lfsr	2,2
  3274  0035DC  5007               	movf	fputc@fp^0,w,c
  3275  0035DE  26D9               	addwf	fsr2l,f,c
  3276  0035E0  5008               	movf	(fputc@fp+1)^0,w,c
  3277  0035E2  22DA               	addwfc	fsr2h,f,c
  3278  0035E4  2ADE               	incf	postinc2,f,c
  3279  0035E6  0E00               	movlw	0
  3280  0035E8  22DD               	addwfc	postdec2,f,c
  3281  0035EA                     l1190:
  3282  0035EA  0012               	return		;funcret
  3283  0035EC                     __end_of_fputc:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _putch *****************
  3287 ;; Defined at:
  3288 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  c               1    wreg     unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  c               1    0[COMRAM] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 2
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_fputc
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text9
  3317  003D68                     __ptext9:
  3318                           	callstack 0
  3319  003D68                     _putch:
  3320                           	callstack 24
  3321  003D68  0012               	return		;funcret
  3322  003D6A                     __end_of_putch:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function _abs *****************
  3326 ;; Defined at:
  3327 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  a               2   22[COMRAM] int 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2   22[COMRAM] int 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;Total ram usage:        4 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 2
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_dtoa
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text10
  3356  003A7E                     __ptext10:
  3357                           	callstack 0
  3358  003A7E                     _abs:
  3359                           	callstack 24
  3360  003A7E  BE18               	btfsc	(abs@a+1)^0,7,c
  3361  003A80  EF4C  F01D         	goto	u3960
  3362  003A84  5018               	movf	(abs@a+1)^0,w,c
  3363  003A86  E106               	bnz	u3961
  3364  003A88  0417               	decf	abs@a^0,w,c
  3365  003A8A  B0D8               	btfsc	status,0,c
  3366  003A8C  EF4A  F01D         	goto	u3961
  3367  003A90  EF4C  F01D         	goto	u3960
  3368  003A94                     u3961:
  3369  003A94  EF5A  F01D         	goto	l1175
  3370  003A98                     u3960:
  3371  003A98  C017  F019         	movff	abs@a,??_abs
  3372  003A9C  C018  F01A         	movff	abs@a+1,??_abs+1
  3373  003AA0  1E19               	comf	??_abs^0,f,c
  3374  003AA2  1E1A               	comf	(??_abs+1)^0,f,c
  3375  003AA4  4A19               	infsnz	??_abs^0,f,c
  3376  003AA6  2A1A               	incf	(??_abs+1)^0,f,c
  3377  003AA8  C019  F017         	movff	??_abs,?_abs
  3378  003AAC  C01A  F018         	movff	??_abs+1,?_abs+1
  3379  003AB0  EF5E  F01D         	goto	l1178
  3380  003AB4                     l1175:
  3381  003AB4  C017  F017         	movff	abs@a,?_abs
  3382  003AB8  C018  F018         	movff	abs@a+1,?_abs+1
  3383  003ABC                     l1178:
  3384  003ABC  0012               	return		;funcret
  3385  003ABE                     __end_of_abs:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function ___aomod *****************
  3389 ;; Defined at:
  3390 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  dividend        8    4[COMRAM] long long 
  3393 ;;  divisor         8   12[COMRAM] long long 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  sign            1   21[COMRAM] unsigned char 
  3396 ;;  counter         1   20[COMRAM] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  8    4[COMRAM] long long 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3406 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3409 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;Total ram usage:       18 bytes
  3411 ;; Hardware stack levels used: 1
  3412 ;; Hardware stack levels required when called: 2
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_dtoa
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text11
  3421  0031B2                     __ptext11:
  3422                           	callstack 0
  3423  0031B2                     ___aomod:
  3424                           	callstack 24
  3425  0031B2  0E00               	movlw	0
  3426  0031B4  6E16               	movwf	___aomod@sign^0,c
  3427  0031B6  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3428  0031B8  EFE2  F018         	goto	u3860
  3429  0031BC  EFE0  F018         	goto	u3861
  3430  0031C0                     u3861:
  3431  0031C0  EFF4  F018         	goto	l4164
  3432  0031C4                     u3860:
  3433  0031C4  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3434  0031C6  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3435  0031C8  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3436  0031CA  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3437  0031CC  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3438  0031CE  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3439  0031D0  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3440  0031D2  6C05               	negf	___aomod@dividend^0,c
  3441  0031D4  0E00               	movlw	0
  3442  0031D6  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3443  0031D8  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3444  0031DA  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3445  0031DC  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3446  0031DE  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3447  0031E0  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3448  0031E2  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3449  0031E4  0E01               	movlw	1
  3450  0031E6  6E16               	movwf	___aomod@sign^0,c
  3451  0031E8                     l4164:
  3452  0031E8  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3453  0031EA  EFFB  F018         	goto	u3870
  3454  0031EE  EFF9  F018         	goto	u3871
  3455  0031F2                     u3871:
  3456  0031F2  EF0B  F019         	goto	l4168
  3457  0031F6                     u3870:
  3458  0031F6  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3459  0031F8  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3460  0031FA  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3461  0031FC  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3462  0031FE  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3463  003200  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3464  003202  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3465  003204  6C0D               	negf	___aomod@divisor^0,c
  3466  003206  0E00               	movlw	0
  3467  003208  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3468  00320A  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3469  00320C  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3470  00320E  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3471  003210  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3472  003212  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3473  003214  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3474  003216                     l4168:
  3475  003216  500D               	movf	___aomod@divisor^0,w,c
  3476  003218  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3477  00321A  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3478  00321C  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3479  00321E  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3480  003220  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3481  003222  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3482  003224  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3483  003226  B4D8               	btfsc	status,2,c
  3484  003228  EF18  F019         	goto	u3881
  3485  00322C  EF1A  F019         	goto	u3880
  3486  003230                     u3881:
  3487  003230  EF62  F019         	goto	l4184
  3488  003234                     u3880:
  3489  003234  0E01               	movlw	1
  3490  003236  6E15               	movwf	___aomod@counter^0,c
  3491  003238  EF28  F019         	goto	l4174
  3492  00323C                     l4172:
  3493  00323C  90D8               	bcf	status,0,c
  3494  00323E  360D               	rlcf	___aomod@divisor^0,f,c
  3495  003240  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3496  003242  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3497  003244  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3498  003246  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3499  003248  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3500  00324A  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3501  00324C  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3502  00324E  2A15               	incf	___aomod@counter^0,f,c
  3503  003250                     l4174:
  3504  003250  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3505  003252  EF2D  F019         	goto	u3891
  3506  003256  EF2F  F019         	goto	u3890
  3507  00325A                     u3891:
  3508  00325A  EF1E  F019         	goto	l4172
  3509  00325E                     u3890:
  3510  00325E                     l4176:
  3511  00325E  500D               	movf	___aomod@divisor^0,w,c
  3512  003260  5C05               	subwf	___aomod@dividend^0,w,c
  3513  003262  500E               	movf	(___aomod@divisor+1)^0,w,c
  3514  003264  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3515  003266  500F               	movf	(___aomod@divisor+2)^0,w,c
  3516  003268  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3517  00326A  5010               	movf	(___aomod@divisor+3)^0,w,c
  3518  00326C  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3519  00326E  5011               	movf	(___aomod@divisor+4)^0,w,c
  3520  003270  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3521  003272  5012               	movf	(___aomod@divisor+5)^0,w,c
  3522  003274  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3523  003276  5013               	movf	(___aomod@divisor+6)^0,w,c
  3524  003278  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3525  00327A  5014               	movf	(___aomod@divisor+7)^0,w,c
  3526  00327C  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3527  00327E  A0D8               	btfss	status,0,c
  3528  003280  EF44  F019         	goto	u3901
  3529  003284  EF46  F019         	goto	u3900
  3530  003288                     u3901:
  3531  003288  EF56  F019         	goto	l4180
  3532  00328C                     u3900:
  3533  00328C  500D               	movf	___aomod@divisor^0,w,c
  3534  00328E  5E05               	subwf	___aomod@dividend^0,f,c
  3535  003290  500E               	movf	(___aomod@divisor+1)^0,w,c
  3536  003292  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3537  003294  500F               	movf	(___aomod@divisor+2)^0,w,c
  3538  003296  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3539  003298  5010               	movf	(___aomod@divisor+3)^0,w,c
  3540  00329A  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3541  00329C  5011               	movf	(___aomod@divisor+4)^0,w,c
  3542  00329E  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3543  0032A0  5012               	movf	(___aomod@divisor+5)^0,w,c
  3544  0032A2  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3545  0032A4  5013               	movf	(___aomod@divisor+6)^0,w,c
  3546  0032A6  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3547  0032A8  5014               	movf	(___aomod@divisor+7)^0,w,c
  3548  0032AA  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3549  0032AC                     l4180:
  3550  0032AC  90D8               	bcf	status,0,c
  3551  0032AE  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3552  0032B0  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3553  0032B2  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3554  0032B4  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3555  0032B6  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3556  0032B8  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3557  0032BA  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3558  0032BC  320D               	rrcf	___aomod@divisor^0,f,c
  3559  0032BE  2E15               	decfsz	___aomod@counter^0,f,c
  3560  0032C0  EF2F  F019         	goto	l4176
  3561  0032C4                     l4184:
  3562  0032C4  5016               	movf	___aomod@sign^0,w,c
  3563  0032C6  B4D8               	btfsc	status,2,c
  3564  0032C8  EF68  F019         	goto	u3911
  3565  0032CC  EF6A  F019         	goto	u3910
  3566  0032D0                     u3911:
  3567  0032D0  EF7A  F019         	goto	l4188
  3568  0032D4                     u3910:
  3569  0032D4  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3570  0032D6  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3571  0032D8  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3572  0032DA  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3573  0032DC  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3574  0032DE  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3575  0032E0  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3576  0032E2  6C05               	negf	___aomod@dividend^0,c
  3577  0032E4  0E00               	movlw	0
  3578  0032E6  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3579  0032E8  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3580  0032EA  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3581  0032EC  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3582  0032EE  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3583  0032F0  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3584  0032F2  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3585  0032F4                     l4188:
  3586  0032F4  C005  F005         	movff	___aomod@dividend,?___aomod
  3587  0032F8  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3588  0032FC  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3589  003300  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3590  003304  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3591  003308  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3592  00330C  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3593  003310  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3594  003314  0012               	return		;funcret
  3595  003316                     __end_of___aomod:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function ___aodiv *****************
  3599 ;; Defined at:
  3600 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  dividend        8    4[COMRAM] long long 
  3603 ;;  divisor         8   12[COMRAM] long long 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  quotient        8   22[COMRAM] long long 
  3606 ;;  sign            1   21[COMRAM] unsigned char 
  3607 ;;  counter         1   20[COMRAM] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  8    4[COMRAM] long long 
  3610 ;; Registers used:
  3611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3617 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;Total ram usage:       26 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 2
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_dtoa
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text12
  3632  00302A                     __ptext12:
  3633                           	callstack 0
  3634  00302A                     ___aodiv:
  3635                           	callstack 24
  3636  00302A  0E00               	movlw	0
  3637  00302C  6E16               	movwf	___aodiv@sign^0,c
  3638  00302E  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3639  003030  EF1E  F018         	goto	u3790
  3640  003034  EF1C  F018         	goto	u3791
  3641  003038                     u3791:
  3642  003038  EF30  F018         	goto	l4120
  3643  00303C                     u3790:
  3644  00303C  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3645  00303E  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3646  003040  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3647  003042  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3648  003044  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3649  003046  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3650  003048  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3651  00304A  6C0D               	negf	___aodiv@divisor^0,c
  3652  00304C  0E00               	movlw	0
  3653  00304E  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3654  003050  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3655  003052  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3656  003054  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3657  003056  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3658  003058  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3659  00305A  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3660  00305C  0E01               	movlw	1
  3661  00305E  6E16               	movwf	___aodiv@sign^0,c
  3662  003060                     l4120:
  3663  003060  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3664  003062  EF37  F018         	goto	u3800
  3665  003066  EF35  F018         	goto	u3801
  3666  00306A                     u3801:
  3667  00306A  EF49  F018         	goto	l4126
  3668  00306E                     u3800:
  3669  00306E  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3670  003070  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3671  003072  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3672  003074  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3673  003076  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3674  003078  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3675  00307A  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3676  00307C  6C05               	negf	___aodiv@dividend^0,c
  3677  00307E  0E00               	movlw	0
  3678  003080  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3679  003082  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3680  003084  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3681  003086  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3682  003088  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3683  00308A  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3684  00308C  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3685  00308E  0E01               	movlw	1
  3686  003090  1A16               	xorwf	___aodiv@sign^0,f,c
  3687  003092                     l4126:
  3688  003092  EE20  F017         	lfsr	2,___aodiv@quotient
  3689  003096  0E07               	movlw	7
  3690  003098                     u3811:
  3691  003098  6ADE               	clrf	postinc2,c
  3692  00309A  06E8               	decf	wreg,f,c
  3693  00309C  E2FD               	bc	u3811
  3694  00309E  500D               	movf	___aodiv@divisor^0,w,c
  3695  0030A0  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3696  0030A2  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3697  0030A4  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3698  0030A6  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3699  0030A8  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3700  0030AA  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3701  0030AC  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3702  0030AE  B4D8               	btfsc	status,2,c
  3703  0030B0  EF5C  F018         	goto	u3821
  3704  0030B4  EF5E  F018         	goto	u3820
  3705  0030B8                     u3821:
  3706  0030B8  EFB0  F018         	goto	l4148
  3707  0030BC                     u3820:
  3708  0030BC  0E01               	movlw	1
  3709  0030BE  6E15               	movwf	___aodiv@counter^0,c
  3710  0030C0  EF6C  F018         	goto	l4134
  3711  0030C4                     l4132:
  3712  0030C4  90D8               	bcf	status,0,c
  3713  0030C6  360D               	rlcf	___aodiv@divisor^0,f,c
  3714  0030C8  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3715  0030CA  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3716  0030CC  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3717  0030CE  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3718  0030D0  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3719  0030D2  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3720  0030D4  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3721  0030D6  2A15               	incf	___aodiv@counter^0,f,c
  3722  0030D8                     l4134:
  3723  0030D8  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3724  0030DA  EF71  F018         	goto	u3831
  3725  0030DE  EF73  F018         	goto	u3830
  3726  0030E2                     u3831:
  3727  0030E2  EF62  F018         	goto	l4132
  3728  0030E6                     u3830:
  3729  0030E6                     l4136:
  3730  0030E6  90D8               	bcf	status,0,c
  3731  0030E8  3617               	rlcf	___aodiv@quotient^0,f,c
  3732  0030EA  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3733  0030EC  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3734  0030EE  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3735  0030F0  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3736  0030F2  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3737  0030F4  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3738  0030F6  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3739  0030F8  500D               	movf	___aodiv@divisor^0,w,c
  3740  0030FA  5C05               	subwf	___aodiv@dividend^0,w,c
  3741  0030FC  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3742  0030FE  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3743  003100  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3744  003102  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3745  003104  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3746  003106  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3747  003108  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3748  00310A  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3749  00310C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3750  00310E  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3751  003110  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3752  003112  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3753  003114  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3754  003116  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3755  003118  A0D8               	btfss	status,0,c
  3756  00311A  EF91  F018         	goto	u3841
  3757  00311E  EF93  F018         	goto	u3840
  3758  003122                     u3841:
  3759  003122  EFA4  F018         	goto	l4144
  3760  003126                     u3840:
  3761  003126  500D               	movf	___aodiv@divisor^0,w,c
  3762  003128  5E05               	subwf	___aodiv@dividend^0,f,c
  3763  00312A  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3764  00312C  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3765  00312E  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3766  003130  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3767  003132  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3768  003134  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3769  003136  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3770  003138  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3771  00313A  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3772  00313C  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3773  00313E  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3774  003140  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3775  003142  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3776  003144  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3777  003146  8017               	bsf	___aodiv@quotient^0,0,c
  3778  003148                     l4144:
  3779  003148  90D8               	bcf	status,0,c
  3780  00314A  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3781  00314C  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3782  00314E  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3783  003150  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3784  003152  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3785  003154  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3786  003156  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3787  003158  320D               	rrcf	___aodiv@divisor^0,f,c
  3788  00315A  2E15               	decfsz	___aodiv@counter^0,f,c
  3789  00315C  EF73  F018         	goto	l4136
  3790  003160                     l4148:
  3791  003160  5016               	movf	___aodiv@sign^0,w,c
  3792  003162  B4D8               	btfsc	status,2,c
  3793  003164  EFB6  F018         	goto	u3851
  3794  003168  EFB8  F018         	goto	u3850
  3795  00316C                     u3851:
  3796  00316C  EFC8  F018         	goto	l4152
  3797  003170                     u3850:
  3798  003170  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3799  003172  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3800  003174  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3801  003176  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3802  003178  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3803  00317A  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3804  00317C  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3805  00317E  6C17               	negf	___aodiv@quotient^0,c
  3806  003180  0E00               	movlw	0
  3807  003182  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3808  003184  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3809  003186  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3810  003188  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3811  00318A  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3812  00318C  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3813  00318E  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3814  003190                     l4152:
  3815  003190  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3816  003194  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3817  003198  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3818  00319C  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3819  0031A0  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3820  0031A4  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3821  0031A8  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3822  0031AC  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3823  0031B0  0012               	return		;funcret
  3824  0031B2                     __end_of___aodiv:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _sendTxBuf *****************
  3828 ;; Defined at:
  3829 ;;		line 106 in file "serial.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 3
  3850 ;; This function calls:
  3851 ;;		_isDataInTxBuf
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text13
  3858  003CE8                     __ptext13:
  3859                           	callstack 0
  3860  003CE8                     _sendTxBuf:
  3861                           	callstack 27
  3862  003CE8                     
  3863                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3864  003CE8  EC81  F01E         	call	_isDataInTxBuf	;wreg free
  3865  003CEC  0900               	iorlw	0
  3866  003CEE  B4D8               	btfsc	status,2,c
  3867  003CF0  EF7C  F01E         	goto	u5371
  3868  003CF4  EF7E  F01E         	goto	u5370
  3869  003CF8                     u5371:
  3870  003CF8  EF80  F01E         	goto	l378
  3871  003CFC                     u5370:
  3872  003CFC  010E               	movlb	14	; () banked
  3873  003CFE  852D               	bsf	45,2,b	;volatile
  3874  003D00                     l378:
  3875  003D00  0012               	return		;funcret
  3876  003D02                     __end_of_sendTxBuf:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _isDataInTxBuf *****************
  3880 ;; Defined at:
  3881 ;;		line 93 in file "serial.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      unsigned char 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 2
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_sendTxBuf
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text14
  3910  003D02                     __ptext14:
  3911                           	callstack 0
  3912  003D02                     _isDataInTxBuf:
  3913                           	callstack 27
  3914  003D02                     
  3915                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  3916  003D02  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  3917  003D04  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3918  003D06  A4D8               	btfss	status,2,c
  3919  003D08  EF88  F01E         	goto	u5031
  3920  003D0C  EF8B  F01E         	goto	u5030
  3921  003D10                     u5031:
  3922  003D10  0E01               	movlw	1
  3923  003D12  EF8C  F01E         	goto	u5040
  3924  003D16                     u5030:
  3925  003D16  0E00               	movlw	0
  3926  003D18                     u5040:
  3927  003D18  0012               	return		;funcret
  3928  003D1A                     __end_of_isDataInTxBuf:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function _read_colours *****************
  3932 ;; Defined at:
  3933 ;;		line 70 in file "color.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  m               2   15[COMRAM] PTR struct RGB_val
  3936 ;;		 -> main@test(24), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;Total ram usage:        3 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		_color_read_Blue
  3957 ;;		_color_read_Green
  3958 ;;		_color_read_Red
  3959 ;; This function is called by:
  3960 ;;		_main
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text15
  3965  003730                     __ptext15:
  3966                           	callstack 0
  3967  003730                     _read_colours:
  3968                           	callstack 25
  3969  003730                     
  3970                           ;color.c: 71:     (m->R) = color_read_Red();
  3971  003730  EC63  F01C         	call	_color_read_Red	;wreg free
  3972  003734  C010  FFD9         	movff	read_colours@m,fsr2l
  3973  003738  C011  FFDA         	movff	read_colours@m+1,fsr2h
  3974  00373C  C009  FFDE         	movff	?_color_read_Red,postinc2
  3975  003740  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  3976  003744                     
  3977                           ;color.c: 72:     _delay((unsigned long)((1)*(64000000/4000.0)));
  3978  003744  0E15               	movlw	21
  3979  003746  6E12               	movwf	??_read_colours^0,c
  3980  003748  0EC6               	movlw	198
  3981  00374A                     u5577:
  3982  00374A  2EE8               	decfsz	wreg,f,c
  3983  00374C  D7FE               	bra	u5577
  3984  00374E  2E12               	decfsz	??_read_colours^0,f,c
  3985  003750  D7FC               	bra	u5577
  3986  003752  D000               	nop2	
  3987  003754                     
  3988                           ;color.c: 73:     (m->G) = color_read_Green();
  3989  003754  EC8B  F01C         	call	_color_read_Green	;wreg free
  3990  003758  EE20 F002          	lfsr	2,2
  3991  00375C  5010               	movf	read_colours@m^0,w,c
  3992  00375E  26D9               	addwf	fsr2l,f,c
  3993  003760  5011               	movf	(read_colours@m+1)^0,w,c
  3994  003762  22DA               	addwfc	fsr2h,f,c
  3995  003764  C009  FFDE         	movff	?_color_read_Green,postinc2
  3996  003768  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  3997                           
  3998                           ;color.c: 74:     _delay((unsigned long)((1)*(64000000/4000.0)));
  3999  00376C  0E15               	movlw	21
  4000  00376E  6E12               	movwf	??_read_colours^0,c
  4001  003770  0EC6               	movlw	198
  4002  003772                     u5587:
  4003  003772  2EE8               	decfsz	wreg,f,c
  4004  003774  D7FE               	bra	u5587
  4005  003776  2E12               	decfsz	??_read_colours^0,f,c
  4006  003778  D7FC               	bra	u5587
  4007  00377A  D000               	nop2	
  4008  00377C                     
  4009                           ;color.c: 75:     (m->B) = color_read_Blue();
  4010  00377C  ECB3  F01C         	call	_color_read_Blue	;wreg free
  4011  003780  EE20 F004          	lfsr	2,4
  4012  003784  5010               	movf	read_colours@m^0,w,c
  4013  003786  26D9               	addwf	fsr2l,f,c
  4014  003788  5011               	movf	(read_colours@m+1)^0,w,c
  4015  00378A  22DA               	addwfc	fsr2h,f,c
  4016  00378C  C009  FFDE         	movff	?_color_read_Blue,postinc2
  4017  003790  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  4018  003794                     
  4019                           ;color.c: 76:     _delay((unsigned long)((1)*(64000000/4000.0)));
  4020  003794  0E15               	movlw	21
  4021  003796  6E12               	movwf	??_read_colours^0,c
  4022  003798  0EC6               	movlw	198
  4023  00379A                     u5597:
  4024  00379A  2EE8               	decfsz	wreg,f,c
  4025  00379C  D7FE               	bra	u5597
  4026  00379E  2E12               	decfsz	??_read_colours^0,f,c
  4027  0037A0  D7FC               	bra	u5597
  4028  0037A2  D000               	nop2	
  4029  0037A4  0012               	return		;funcret
  4030  0037A6                     __end_of_read_colours:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _color_read_Red *****************
  4034 ;; Defined at:
  4035 ;;		line 30 in file "color.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  tmp             2   13[COMRAM] unsigned int 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    8[COMRAM] unsigned int 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;Total ram usage:        7 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 4
  4056 ;; This function calls:
  4057 ;;		_I2C_2_Master_Read
  4058 ;;		_I2C_2_Master_RepStart
  4059 ;;		_I2C_2_Master_Start
  4060 ;;		_I2C_2_Master_Stop
  4061 ;;		_I2C_2_Master_Write
  4062 ;; This function is called by:
  4063 ;;		_read_colours
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text16
  4068  0038C6                     __ptext16:
  4069                           	callstack 0
  4070  0038C6                     _color_read_Red:
  4071                           	callstack 25
  4072  0038C6                     
  4073                           ;color.c: 32:  unsigned int tmp;;color.c: 33:  I2C_2_Master_Start();
  4074  0038C6  ECAF  F01E         	call	_I2C_2_Master_Start	;wreg free
  4075                           
  4076                           ;color.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
  4077  0038CA  0E52               	movlw	82
  4078  0038CC  EC99  F01E         	call	_I2C_2_Master_Write
  4079                           
  4080                           ;color.c: 35:  I2C_2_Master_Write(0xA0 | 0x16);
  4081  0038D0  0EB6               	movlw	182
  4082  0038D2  EC99  F01E         	call	_I2C_2_Master_Write
  4083                           
  4084                           ;color.c: 36:  I2C_2_Master_RepStart();
  4085  0038D6  ECA5  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  4086                           
  4087                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x01);
  4088  0038DA  0E53               	movlw	83
  4089  0038DC  EC99  F01E         	call	_I2C_2_Master_Write
  4090                           
  4091                           ;color.c: 38:  tmp=I2C_2_Master_Read(1);
  4092  0038E0  0E01               	movlw	1
  4093  0038E2  ECFD  F01C         	call	_I2C_2_Master_Read
  4094  0038E6  6E0B               	movwf	??_color_read_Red^0,c
  4095  0038E8  500B               	movf	??_color_read_Red^0,w,c
  4096  0038EA  6E0E               	movwf	color_read_Red@tmp^0,c
  4097  0038EC  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  4098                           
  4099                           ;color.c: 39:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4100  0038EE  0E00               	movlw	0
  4101  0038F0  ECFD  F01C         	call	_I2C_2_Master_Read
  4102  0038F4  6E0B               	movwf	??_color_read_Red^0,c
  4103  0038F6  500B               	movf	??_color_read_Red^0,w,c
  4104  0038F8  6E0D               	movwf	(??_color_read_Red+2)^0,c
  4105  0038FA  6A0C               	clrf	(??_color_read_Red+1)^0,c
  4106  0038FC  500E               	movf	color_read_Red@tmp^0,w,c
  4107  0038FE  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  4108  003900  6E0E               	movwf	color_read_Red@tmp^0,c
  4109  003902  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  4110  003904  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  4111  003906  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  4112                           
  4113                           ;color.c: 40:  I2C_2_Master_Stop();
  4114  003908  ECAA  F01E         	call	_I2C_2_Master_Stop	;wreg free
  4115  00390C                     
  4116                           ;color.c: 41:  return tmp;
  4117  00390C  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  4118  003910  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4119  003914  0012               	return		;funcret
  4120  003916                     __end_of_color_read_Red:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _color_read_Green *****************
  4124 ;; Defined at:
  4125 ;;		line 44 in file "color.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  tmp             2   13[COMRAM] unsigned int 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  2    8[COMRAM] unsigned int 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;Total ram usage:        7 bytes
  4144 ;; Hardware stack levels used: 1
  4145 ;; Hardware stack levels required when called: 4
  4146 ;; This function calls:
  4147 ;;		_I2C_2_Master_Read
  4148 ;;		_I2C_2_Master_RepStart
  4149 ;;		_I2C_2_Master_Start
  4150 ;;		_I2C_2_Master_Stop
  4151 ;;		_I2C_2_Master_Write
  4152 ;; This function is called by:
  4153 ;;		_read_colours
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text17
  4158  003916                     __ptext17:
  4159                           	callstack 0
  4160  003916                     _color_read_Green:
  4161                           	callstack 25
  4162  003916                     
  4163                           ;color.c: 45:     unsigned int tmp;;color.c: 46:     I2C_2_Master_Start();
  4164  003916  ECAF  F01E         	call	_I2C_2_Master_Start	;wreg free
  4165                           
  4166                           ;color.c: 47:     I2C_2_Master_Write(0x52 | 0x00);
  4167  00391A  0E52               	movlw	82
  4168  00391C  EC99  F01E         	call	_I2C_2_Master_Write
  4169                           
  4170                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  4171  003920  0EB8               	movlw	184
  4172  003922  EC99  F01E         	call	_I2C_2_Master_Write
  4173                           
  4174                           ;color.c: 49:  I2C_2_Master_RepStart();
  4175  003926  ECA5  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  4176                           
  4177                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  4178  00392A  0E53               	movlw	83
  4179  00392C  EC99  F01E         	call	_I2C_2_Master_Write
  4180                           
  4181                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  4182  003930  0E01               	movlw	1
  4183  003932  ECFD  F01C         	call	_I2C_2_Master_Read
  4184  003936  6E0B               	movwf	??_color_read_Green^0,c
  4185  003938  500B               	movf	??_color_read_Green^0,w,c
  4186  00393A  6E0E               	movwf	color_read_Green@tmp^0,c
  4187  00393C  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  4188                           
  4189                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4190  00393E  0E00               	movlw	0
  4191  003940  ECFD  F01C         	call	_I2C_2_Master_Read
  4192  003944  6E0B               	movwf	??_color_read_Green^0,c
  4193  003946  500B               	movf	??_color_read_Green^0,w,c
  4194  003948  6E0D               	movwf	(??_color_read_Green+2)^0,c
  4195  00394A  6A0C               	clrf	(??_color_read_Green+1)^0,c
  4196  00394C  500E               	movf	color_read_Green@tmp^0,w,c
  4197  00394E  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  4198  003950  6E0E               	movwf	color_read_Green@tmp^0,c
  4199  003952  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  4200  003954  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  4201  003956  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  4202                           
  4203                           ;color.c: 53:     I2C_2_Master_Stop();
  4204  003958  ECAA  F01E         	call	_I2C_2_Master_Stop	;wreg free
  4205  00395C                     
  4206                           ;color.c: 54:     return tmp;
  4207  00395C  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  4208  003960  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4209  003964  0012               	return		;funcret
  4210  003966                     __end_of_color_read_Green:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _color_read_Blue *****************
  4214 ;; Defined at:
  4215 ;;		line 57 in file "color.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  tmp             2   13[COMRAM] unsigned int 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  2    8[COMRAM] unsigned int 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;Total ram usage:        7 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 4
  4236 ;; This function calls:
  4237 ;;		_I2C_2_Master_Read
  4238 ;;		_I2C_2_Master_RepStart
  4239 ;;		_I2C_2_Master_Start
  4240 ;;		_I2C_2_Master_Stop
  4241 ;;		_I2C_2_Master_Write
  4242 ;; This function is called by:
  4243 ;;		_read_colours
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text18
  4248  003966                     __ptext18:
  4249                           	callstack 0
  4250  003966                     _color_read_Blue:
  4251                           	callstack 25
  4252  003966                     
  4253                           ;color.c: 58:     unsigned int tmp;;color.c: 59:     I2C_2_Master_Start();
  4254  003966  ECAF  F01E         	call	_I2C_2_Master_Start	;wreg free
  4255                           
  4256                           ;color.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  4257  00396A  0E52               	movlw	82
  4258  00396C  EC99  F01E         	call	_I2C_2_Master_Write
  4259                           
  4260                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x1A);
  4261  003970  0EBA               	movlw	186
  4262  003972  EC99  F01E         	call	_I2C_2_Master_Write
  4263                           
  4264                           ;color.c: 62:  I2C_2_Master_RepStart();
  4265  003976  ECA5  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  4266                           
  4267                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  4268  00397A  0E53               	movlw	83
  4269  00397C  EC99  F01E         	call	_I2C_2_Master_Write
  4270                           
  4271                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  4272  003980  0E01               	movlw	1
  4273  003982  ECFD  F01C         	call	_I2C_2_Master_Read
  4274  003986  6E0B               	movwf	??_color_read_Blue^0,c
  4275  003988  500B               	movf	??_color_read_Blue^0,w,c
  4276  00398A  6E0E               	movwf	color_read_Blue@tmp^0,c
  4277  00398C  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  4278                           
  4279                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4280  00398E  0E00               	movlw	0
  4281  003990  ECFD  F01C         	call	_I2C_2_Master_Read
  4282  003994  6E0B               	movwf	??_color_read_Blue^0,c
  4283  003996  500B               	movf	??_color_read_Blue^0,w,c
  4284  003998  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  4285  00399A  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  4286  00399C  500E               	movf	color_read_Blue@tmp^0,w,c
  4287  00399E  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  4288  0039A0  6E0E               	movwf	color_read_Blue@tmp^0,c
  4289  0039A2  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  4290  0039A4  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  4291  0039A6  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  4292                           
  4293                           ;color.c: 66:     I2C_2_Master_Stop();
  4294  0039A8  ECAA  F01E         	call	_I2C_2_Master_Stop	;wreg free
  4295  0039AC                     
  4296                           ;color.c: 67:     return tmp;
  4297  0039AC  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  4298  0039B0  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4299  0039B4  0012               	return		;funcret
  4300  0039B6                     __end_of_color_read_Blue:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _I2C_2_Master_RepStart *****************
  4304 ;; Defined at:
  4305 ;;		line 33 in file "i2c.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 3
  4326 ;; This function calls:
  4327 ;;		_I2C_2_Master_Idle
  4328 ;; This function is called by:
  4329 ;;		_color_read_Red
  4330 ;;		_color_read_Green
  4331 ;;		_color_read_Blue
  4332 ;;		_read_color_sensor
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text19
  4337  003D4A                     __ptext19:
  4338                           	callstack 0
  4339  003D4A                     _I2C_2_Master_RepStart:
  4340                           	callstack 25
  4341  003D4A                     
  4342                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4343  003D4A  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4344  003D4E                     
  4345                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4346  003D4E  010E               	movlb	14	; () banked
  4347  003D50  83DA               	bsf	218,1,b	;volatile
  4348  003D52                     
  4349                           ; BSR set to: 14
  4350  003D52  0012               	return		;funcret
  4351  003D54                     __end_of_I2C_2_Master_RepStart:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _I2C_2_Master_Read *****************
  4355 ;; Defined at:
  4356 ;;		line 51 in file "i2c.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  ack             1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  ack             1    6[COMRAM] unsigned char 
  4361 ;;  tmp             1    7[COMRAM] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      unsigned char 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;Total ram usage:        3 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 3
  4378 ;; This function calls:
  4379 ;;		_I2C_2_Master_Idle
  4380 ;; This function is called by:
  4381 ;;		_color_read_Red
  4382 ;;		_color_read_Green
  4383 ;;		_color_read_Blue
  4384 ;;		_read_color_sensor
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text20
  4389  0039FA                     __ptext20:
  4390                           	callstack 0
  4391  0039FA                     _I2C_2_Master_Read:
  4392                           	callstack 25
  4393                           
  4394                           ; BSR set to: 14
  4395                           ;incstack = 0
  4396                           ;I2C_2_Master_Read@ack stored from wreg
  4397  0039FA  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4398  0039FC                     
  4399                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4400  0039FC  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4401  003A00                     
  4402                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4403  003A00  010E               	movlb	14	; () banked
  4404  003A02  87DA               	bsf	218,3,b	;volatile
  4405                           
  4406                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4407  003A04  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4408  003A08                     
  4409                           ;i2c.c: 57:   tmp = SSP2BUF;
  4410  003A08  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4411                           
  4412                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4413  003A0C  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4414  003A10                     
  4415                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4416  003A10  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  4417  003A12  B4D8               	btfsc	status,2,c
  4418  003A14  EF0E  F01D         	goto	u4141
  4419  003A18  EF12  F01D         	goto	u4140
  4420  003A1C                     u4141:
  4421  003A1C  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4422  003A1E  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  4423  003A20  EF13  F01D         	goto	u4158
  4424  003A24                     u4140:
  4425  003A24  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4426  003A26                     u4158:
  4427  003A26  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  4428  003A28  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  4429  003A2A  010E               	movlb	14	; () banked
  4430  003A2C  51DA               	movf	218,w,b	;volatile
  4431  003A2E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4432  003A30  0BDF               	andlw	-33
  4433  003A32  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4434  003A34  6FDA               	movwf	218,b	;volatile
  4435  003A36                     
  4436                           ; BSR set to: 14
  4437                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4438  003A36  89DA               	bsf	218,4,b	;volatile
  4439  003A38                     
  4440                           ; BSR set to: 14
  4441                           ;i2c.c: 61:   return tmp;
  4442  003A38  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  4443  003A3A                     
  4444                           ; BSR set to: 14
  4445  003A3A  0012               	return		;funcret
  4446  003A3C                     __end_of_I2C_2_Master_Read:
  4447                           	callstack 0
  4448                           
  4449 ;; *************** function _initUSART4 *****************
  4450 ;; Defined at:
  4451 ;;		line 4 in file "serial.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 2
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text21
  4480  003CA8                     __ptext21:
  4481                           	callstack 0
  4482  003CA8                     _initUSART4:
  4483                           	callstack 28
  4484  003CA8                     
  4485                           ;serial.c: 8:     RC0PPS = 0x12;
  4486  003CA8  0E12               	movlw	18
  4487  003CAA  010E               	movlb	14	; () banked
  4488  003CAC  6F62               	movwf	98,b	;volatile
  4489                           
  4490                           ;serial.c: 9:     RX4PPS = 0x11;
  4491  003CAE  0E11               	movlw	17
  4492  003CB0  6F15               	movwf	21,b	;volatile
  4493  003CB2                     
  4494                           ; BSR set to: 14
  4495                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  4496  003CB2  8283               	bsf	131,1,c	;volatile
  4497  003CB4                     
  4498                           ; BSR set to: 14
  4499                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4500  003CB4  97E9               	bcf	233,3,b	;volatile
  4501  003CB6                     
  4502                           ; BSR set to: 14
  4503                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4504  003CB6  95E8               	bcf	232,2,b	;volatile
  4505                           
  4506                           ;serial.c: 14:     SP4BRGL = 51;
  4507  003CB8  0E33               	movlw	51
  4508  003CBA  6FE5               	movwf	229,b	;volatile
  4509                           
  4510                           ;serial.c: 15:     SP4BRGH = 0;
  4511  003CBC  0E00               	movlw	0
  4512  003CBE  6FE6               	movwf	230,b	;volatile
  4513  003CC0                     
  4514                           ; BSR set to: 14
  4515                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4516  003CC0  89E7               	bsf	231,4,b	;volatile
  4517  003CC2                     
  4518                           ; BSR set to: 14
  4519                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4520  003CC2  8BE8               	bsf	232,5,b	;volatile
  4521  003CC4                     
  4522                           ; BSR set to: 14
  4523                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4524  003CC4  8FE7               	bsf	231,7,b	;volatile
  4525  003CC6                     
  4526                           ; BSR set to: 14
  4527  003CC6  0012               	return		;funcret
  4528  003CC8                     __end_of_initUSART4:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _initDCmotorsPWM *****************
  4532 ;; Defined at:
  4533 ;;		line 5 in file "dc_motor.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  PWMperiod       2    4[COMRAM] int 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;Total ram usage:        2 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 2
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text22
  4562  003A3C                     __ptext22:
  4563                           	callstack 0
  4564  003A3C                     _initDCmotorsPWM:
  4565                           	callstack 28
  4566  003A3C                     
  4567                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4568  003A3C  9485               	bcf	133,2,c	;volatile
  4569                           
  4570                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4571  003A3E  9E83               	bcf	131,7,c	;volatile
  4572                           
  4573                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  4574  003A40  9C87               	bcf	135,6,c	;volatile
  4575                           
  4576                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  4577  003A42  9885               	bcf	133,4,c	;volatile
  4578                           
  4579                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  4580  003A44  947D               	bcf	125,2,c	;volatile
  4581                           
  4582                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  4583  003A46  9E7B               	bcf	123,7,c	;volatile
  4584                           
  4585                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  4586  003A48  9C7F               	bcf	127,6,c	;volatile
  4587                           
  4588                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4589  003A4A  987D               	bcf	125,4,c	;volatile
  4590  003A4C                     
  4591                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  4592  003A4C  50BD               	movf	189,w,c	;volatile
  4593  003A4E  0B8F               	andlw	-113
  4594  003A50  0940               	iorlw	64
  4595  003A52  6EBD               	movwf	189,c	;volatile
  4596                           
  4597                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4598  003A54  0EE0               	movlw	-32
  4599  003A56  16BE               	andwf	190,f,c	;volatile
  4600                           
  4601                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4602  003A58  50BF               	movf	191,w,c	;volatile
  4603  003A5A  0BF0               	andlw	-16
  4604  003A5C  0901               	iorlw	1
  4605  003A5E  6EBF               	movwf	191,c	;volatile
  4606                           
  4607                           ;dc_motor.c: 22:     T2PR=99;
  4608  003A60  0E63               	movlw	99
  4609  003A62  6EBC               	movwf	188,c	;volatile
  4610  003A64                     
  4611                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  4612  003A64  8EBD               	bsf	189,7,c	;volatile
  4613                           
  4614                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  4615  003A66  0E0A               	movlw	10
  4616  003A68  010E               	movlb	14	; () banked
  4617  003A6A  6F74               	movwf	116,b	;volatile
  4618                           
  4619                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  4620  003A6C  0E0B               	movlw	11
  4621  003A6E  6F69               	movwf	105,b	;volatile
  4622                           
  4623                           ;dc_motor.c: 28:     PWM6DCH=0;
  4624  003A70  0E00               	movlw	0
  4625  003A72  6EA3               	movwf	163,c	;volatile
  4626                           
  4627                           ;dc_motor.c: 29:     PWM7DCH=0;
  4628  003A74  0E00               	movlw	0
  4629  003A76  6EA0               	movwf	160,c	;volatile
  4630  003A78                     
  4631                           ; BSR set to: 14
  4632                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  4633  003A78  8EA4               	bsf	164,7,c	;volatile
  4634  003A7A                     
  4635                           ; BSR set to: 14
  4636                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  4637  003A7A  8EA1               	bsf	161,7,c	;volatile
  4638  003A7C                     
  4639                           ; BSR set to: 14
  4640  003A7C  0012               	return		;funcret
  4641  003A7E                     __end_of_initDCmotorsPWM:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _determine_color3 *****************
  4645 ;; Defined at:
  4646 ;;		line 250 in file "color.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  m               2   40[BANK0 ] PTR struct RGB_val
  4649 ;;		 -> main@test(24), 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  calc            2   64[BANK1 ] unsigned int 
  4652 ;;  bb              2   58[BANK1 ] unsigned int 
  4653 ;;  gg              2   56[BANK1 ] unsigned int 
  4654 ;;  rr              2   54[BANK1 ] unsigned int 
  4655 ;;  j               2   70[BANK1 ] unsigned int 
  4656 ;;  data           54    0[BANK1 ] unsigned int [3][9]
  4657 ;;  out             2   62[BANK1 ] unsigned int 
  4658 ;;  temp            2   60[BANK1 ] unsigned int 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  2   40[BANK0 ] unsigned int 
  4661 ;; Registers used:
  4662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Locals:         0       0      72       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Totals:         4       2      72       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;Total ram usage:       78 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 4
  4675 ;; This function calls:
  4676 ;;		___fltol
  4677 ;;		___wmul
  4678 ;;		___xxtofl
  4679 ;;		_sqrtf
  4680 ;; This function is called by:
  4681 ;;		_main
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text23
  4686  002092                     __ptext23:
  4687                           	callstack 0
  4688  002092                     _determine_color3:
  4689                           	callstack 26
  4690  002092                     
  4691                           ;color.c: 251:     unsigned int data[9][3] = {
  4692  002092  EE22  F000         	lfsr	2,determine_color3@F14742
  4693  002096  EE11  F000         	lfsr	1,determine_color3@data
  4694  00209A  0E35               	movlw	53
  4695  00209C                     u5311:
  4696  00209C  CFDB FFE3          	movff	plusw2,plusw1
  4697  0020A0  06E8               	decf	wreg,f,c
  4698  0020A2  E2FC               	bc	u5311
  4699  0020A4                     
  4700                           ;color.c: 263:     unsigned int temp = 1000;
  4701  0020A4  0E03               	movlw	3
  4702  0020A6  0101               	movlb	1	; () banked
  4703  0020A8  6F3D               	movwf	(determine_color3@temp+1)& (0+255),b
  4704  0020AA  0EE8               	movlw	232
  4705  0020AC  6F3C               	movwf	determine_color3@temp& (0+255),b
  4706  0020AE                     
  4707                           ; BSR set to: 1
  4708                           ;color.c: 264:     unsigned int out;;color.c: 266:     for (unsigned int j=0; j<9; j++) 
      +                          {
  4709  0020AE  0E00               	movlw	0
  4710  0020B0  6F47               	movwf	(determine_color3@j+1)& (0+255),b
  4711  0020B2  0E00               	movlw	0
  4712  0020B4  6F46               	movwf	determine_color3@j& (0+255),b
  4713  0020B6                     l5104:
  4714                           
  4715                           ; BSR set to: 1
  4716                           ;color.c: 267:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  4717  0020B6  C0C6  FFD9         	movff	determine_color3@m,fsr2l
  4718  0020BA  C0C7  FFDA         	movff	determine_color3@m+1,fsr2h
  4719  0020BE  CFDE F03D          	movff	postinc2,??_determine_color3
  4720  0020C2  CFDD F03E          	movff	postdec2,??_determine_color3+1
  4721  0020C6  C146  F005         	movff	determine_color3@j,___wmul@multiplier
  4722  0020CA  C147  F006         	movff	determine_color3@j+1,___wmul@multiplier+1
  4723  0020CE  0E00               	movlw	0
  4724  0020D0  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4725  0020D2  0E06               	movlw	6
  4726  0020D4  6E07               	movwf	___wmul@multiplicand^0,c
  4727  0020D6  EC30  F01E         	call	___wmul	;wreg free
  4728  0020DA  0E00               	movlw	low determine_color3@data
  4729  0020DC  2405               	addwf	?___wmul^0,w,c
  4730  0020DE  6ED9               	movwf	fsr2l,c
  4731  0020E0  0E01               	movlw	high determine_color3@data
  4732  0020E2  2006               	addwfc	(?___wmul+1)^0,w,c
  4733  0020E4  6EDA               	movwf	fsr2h,c
  4734  0020E6  CFDE F03F          	movff	postinc2,??_determine_color3+2
  4735  0020EA  CFDD F040          	movff	postdec2,??_determine_color3+3
  4736  0020EE  503D               	movf	??_determine_color3^0,w,c
  4737  0020F0  5C3F               	subwf	(??_determine_color3+2)^0,w,c
  4738  0020F2  0101               	movlb	1	; () banked
  4739  0020F4  6F42               	movwf	_determine_color3$2508& (0+255),b
  4740  0020F6  503E               	movf	(??_determine_color3+1)^0,w,c
  4741  0020F8  5840               	subwfb	(??_determine_color3+3)^0,w,c
  4742  0020FA  6F43               	movwf	(_determine_color3$2508+1)& (0+255),b
  4743                           
  4744                           ;color.c: 267:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  4745  0020FC  C0C6  FFD9         	movff	determine_color3@m,fsr2l
  4746  002100  C0C7  FFDA         	movff	determine_color3@m+1,fsr2h
  4747  002104  CFDE F03D          	movff	postinc2,??_determine_color3
  4748  002108  CFDD F03E          	movff	postdec2,??_determine_color3+1
  4749  00210C  C146  F005         	movff	determine_color3@j,___wmul@multiplier
  4750  002110  C147  F006         	movff	determine_color3@j+1,___wmul@multiplier+1
  4751  002114  0E00               	movlw	0
  4752  002116  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4753  002118  0E06               	movlw	6
  4754  00211A  6E07               	movwf	___wmul@multiplicand^0,c
  4755  00211C  EC30  F01E         	call	___wmul	;wreg free
  4756  002120  0E00               	movlw	low determine_color3@data
  4757  002122  2405               	addwf	?___wmul^0,w,c
  4758  002124  6ED9               	movwf	fsr2l,c
  4759  002126  0E01               	movlw	high determine_color3@data
  4760  002128  2006               	addwfc	(?___wmul+1)^0,w,c
  4761  00212A  6EDA               	movwf	fsr2h,c
  4762  00212C  CFDE F03F          	movff	postinc2,??_determine_color3+2
  4763  002130  CFDD F040          	movff	postdec2,??_determine_color3+3
  4764  002134  503D               	movf	??_determine_color3^0,w,c
  4765  002136  5C3F               	subwf	(??_determine_color3+2)^0,w,c
  4766  002138  0101               	movlb	1	; () banked
  4767  00213A  6F44               	movwf	_determine_color3$2509& (0+255),b
  4768  00213C  503E               	movf	(??_determine_color3+1)^0,w,c
  4769  00213E  5840               	subwfb	(??_determine_color3+3)^0,w,c
  4770  002140  6F45               	movwf	(_determine_color3$2509+1)& (0+255),b
  4771  002142                     
  4772                           ; BSR set to: 1
  4773                           ;color.c: 267:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  4774  002142  C142  F005         	movff	_determine_color3$2508,___wmul@multiplier
  4775  002146  C143  F006         	movff	_determine_color3$2508+1,___wmul@multiplier+1
  4776  00214A  C144  F007         	movff	_determine_color3$2509,___wmul@multiplicand
  4777  00214E  C145  F008         	movff	_determine_color3$2509+1,___wmul@multiplicand+1
  4778  002152  EC30  F01E         	call	___wmul	;wreg free
  4779  002156  C005  F136         	movff	?___wmul,determine_color3@rr
  4780  00215A  C006  F137         	movff	?___wmul+1,determine_color3@rr+1
  4781  00215E                     
  4782                           ;color.c: 268:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  4783  00215E  0100               	movlb	0	; () banked
  4784  002160  EE20 F002          	lfsr	2,2
  4785  002164  51C6               	movf	determine_color3@m& (0+255),w,b
  4786  002166  26D9               	addwf	fsr2l,f,c
  4787  002168  51C7               	movf	(determine_color3@m+1)& (0+255),w,b
  4788  00216A  22DA               	addwfc	fsr2h,f,c
  4789  00216C  CFDE F03D          	movff	postinc2,??_determine_color3
  4790  002170  CFDD F03E          	movff	postdec2,??_determine_color3+1
  4791  002174  C146  F005         	movff	determine_color3@j,___wmul@multiplier
  4792  002178  C147  F006         	movff	determine_color3@j+1,___wmul@multiplier+1
  4793  00217C  0E00               	movlw	0
  4794  00217E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4795  002180  0E06               	movlw	6
  4796  002182  6E07               	movwf	___wmul@multiplicand^0,c
  4797  002184  EC30  F01E         	call	___wmul	;wreg free
  4798  002188  0E02               	movlw	2
  4799  00218A  2605               	addwf	?___wmul^0,f,c
  4800  00218C  0E00               	movlw	0
  4801  00218E  2206               	addwfc	(?___wmul+1)^0,f,c
  4802  002190  0E00               	movlw	low determine_color3@data
  4803  002192  2405               	addwf	?___wmul^0,w,c
  4804  002194  6ED9               	movwf	fsr2l,c
  4805  002196  0E01               	movlw	high determine_color3@data
  4806  002198  2006               	addwfc	(?___wmul+1)^0,w,c
  4807  00219A  6EDA               	movwf	fsr2h,c
  4808  00219C  CFDE F03F          	movff	postinc2,??_determine_color3+2
  4809  0021A0  CFDD F040          	movff	postdec2,??_determine_color3+3
  4810  0021A4  503D               	movf	??_determine_color3^0,w,c
  4811  0021A6  5C3F               	subwf	(??_determine_color3+2)^0,w,c
  4812  0021A8  0101               	movlb	1	; () banked
  4813  0021AA  6F42               	movwf	_determine_color3$2508& (0+255),b
  4814  0021AC  503E               	movf	(??_determine_color3+1)^0,w,c
  4815  0021AE  5840               	subwfb	(??_determine_color3+3)^0,w,c
  4816  0021B0  6F43               	movwf	(_determine_color3$2508+1)& (0+255),b
  4817  0021B2                     
  4818                           ; BSR set to: 1
  4819                           ;color.c: 268:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  4820  0021B2  0100               	movlb	0	; () banked
  4821  0021B4  EE20 F002          	lfsr	2,2
  4822  0021B8  51C6               	movf	determine_color3@m& (0+255),w,b
  4823  0021BA  26D9               	addwf	fsr2l,f,c
  4824  0021BC  51C7               	movf	(determine_color3@m+1)& (0+255),w,b
  4825  0021BE  22DA               	addwfc	fsr2h,f,c
  4826  0021C0  CFDE F03D          	movff	postinc2,??_determine_color3
  4827  0021C4  CFDD F03E          	movff	postdec2,??_determine_color3+1
  4828  0021C8  C146  F005         	movff	determine_color3@j,___wmul@multiplier
  4829  0021CC  C147  F006         	movff	determine_color3@j+1,___wmul@multiplier+1
  4830  0021D0  0E00               	movlw	0
  4831  0021D2  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4832  0021D4  0E06               	movlw	6
  4833  0021D6  6E07               	movwf	___wmul@multiplicand^0,c
  4834  0021D8  EC30  F01E         	call	___wmul	;wreg free
  4835  0021DC  0E02               	movlw	2
  4836  0021DE  2605               	addwf	?___wmul^0,f,c
  4837  0021E0  0E00               	movlw	0
  4838  0021E2  2206               	addwfc	(?___wmul+1)^0,f,c
  4839  0021E4  0E00               	movlw	low determine_color3@data
  4840  0021E6  2405               	addwf	?___wmul^0,w,c
  4841  0021E8  6ED9               	movwf	fsr2l,c
  4842  0021EA  0E01               	movlw	high determine_color3@data
  4843  0021EC  2006               	addwfc	(?___wmul+1)^0,w,c
  4844  0021EE  6EDA               	movwf	fsr2h,c
  4845  0021F0  CFDE F03F          	movff	postinc2,??_determine_color3+2
  4846  0021F4  CFDD F040          	movff	postdec2,??_determine_color3+3
  4847  0021F8  503D               	movf	??_determine_color3^0,w,c
  4848  0021FA  5C3F               	subwf	(??_determine_color3+2)^0,w,c
  4849  0021FC  0101               	movlb	1	; () banked
  4850  0021FE  6F44               	movwf	_determine_color3$2509& (0+255),b
  4851  002200  503E               	movf	(??_determine_color3+1)^0,w,c
  4852  002202  5840               	subwfb	(??_determine_color3+3)^0,w,c
  4853  002204  6F45               	movwf	(_determine_color3$2509+1)& (0+255),b
  4854  002206                     
  4855                           ; BSR set to: 1
  4856                           ;color.c: 268:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  4857  002206  C142  F005         	movff	_determine_color3$2508,___wmul@multiplier
  4858  00220A  C143  F006         	movff	_determine_color3$2508+1,___wmul@multiplier+1
  4859  00220E  C144  F007         	movff	_determine_color3$2509,___wmul@multiplicand
  4860  002212  C145  F008         	movff	_determine_color3$2509+1,___wmul@multiplicand+1
  4861  002216  EC30  F01E         	call	___wmul	;wreg free
  4862  00221A  C005  F138         	movff	?___wmul,determine_color3@gg
  4863  00221E  C006  F139         	movff	?___wmul+1,determine_color3@gg+1
  4864                           
  4865                           ;color.c: 269:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  4866  002222  0100               	movlb	0	; () banked
  4867  002224  EE20 F004          	lfsr	2,4
  4868  002228  51C6               	movf	determine_color3@m& (0+255),w,b
  4869  00222A  26D9               	addwf	fsr2l,f,c
  4870  00222C  51C7               	movf	(determine_color3@m+1)& (0+255),w,b
  4871  00222E  22DA               	addwfc	fsr2h,f,c
  4872  002230  CFDE F03D          	movff	postinc2,??_determine_color3
  4873  002234  CFDD F03E          	movff	postdec2,??_determine_color3+1
  4874  002238  C146  F005         	movff	determine_color3@j,___wmul@multiplier
  4875  00223C  C147  F006         	movff	determine_color3@j+1,___wmul@multiplier+1
  4876  002240  0E00               	movlw	0
  4877  002242  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4878  002244  0E06               	movlw	6
  4879  002246  6E07               	movwf	___wmul@multiplicand^0,c
  4880  002248  EC30  F01E         	call	___wmul	;wreg free
  4881  00224C  0E04               	movlw	4
  4882  00224E  2605               	addwf	?___wmul^0,f,c
  4883  002250  0E00               	movlw	0
  4884  002252  2206               	addwfc	(?___wmul+1)^0,f,c
  4885  002254  0E00               	movlw	low determine_color3@data
  4886  002256  2405               	addwf	?___wmul^0,w,c
  4887  002258  6ED9               	movwf	fsr2l,c
  4888  00225A  0E01               	movlw	high determine_color3@data
  4889  00225C  2006               	addwfc	(?___wmul+1)^0,w,c
  4890  00225E  6EDA               	movwf	fsr2h,c
  4891  002260  CFDE F03F          	movff	postinc2,??_determine_color3+2
  4892  002264  CFDD F040          	movff	postdec2,??_determine_color3+3
  4893  002268  503D               	movf	??_determine_color3^0,w,c
  4894  00226A  5C3F               	subwf	(??_determine_color3+2)^0,w,c
  4895  00226C  0101               	movlb	1	; () banked
  4896  00226E  6F42               	movwf	_determine_color3$2508& (0+255),b
  4897  002270  503E               	movf	(??_determine_color3+1)^0,w,c
  4898  002272  5840               	subwfb	(??_determine_color3+3)^0,w,c
  4899  002274  6F43               	movwf	(_determine_color3$2508+1)& (0+255),b
  4900                           
  4901                           ;color.c: 269:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  4902  002276  0100               	movlb	0	; () banked
  4903  002278  EE20 F004          	lfsr	2,4
  4904  00227C  51C6               	movf	determine_color3@m& (0+255),w,b
  4905  00227E  26D9               	addwf	fsr2l,f,c
  4906  002280  51C7               	movf	(determine_color3@m+1)& (0+255),w,b
  4907  002282  22DA               	addwfc	fsr2h,f,c
  4908  002284  CFDE F03D          	movff	postinc2,??_determine_color3
  4909  002288  CFDD F03E          	movff	postdec2,??_determine_color3+1
  4910  00228C  C146  F005         	movff	determine_color3@j,___wmul@multiplier
  4911  002290  C147  F006         	movff	determine_color3@j+1,___wmul@multiplier+1
  4912  002294  0E00               	movlw	0
  4913  002296  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4914  002298  0E06               	movlw	6
  4915  00229A  6E07               	movwf	___wmul@multiplicand^0,c
  4916  00229C  EC30  F01E         	call	___wmul	;wreg free
  4917  0022A0  0E04               	movlw	4
  4918  0022A2  2605               	addwf	?___wmul^0,f,c
  4919  0022A4  0E00               	movlw	0
  4920  0022A6  2206               	addwfc	(?___wmul+1)^0,f,c
  4921  0022A8  0E00               	movlw	low determine_color3@data
  4922  0022AA  2405               	addwf	?___wmul^0,w,c
  4923  0022AC  6ED9               	movwf	fsr2l,c
  4924  0022AE  0E01               	movlw	high determine_color3@data
  4925  0022B0  2006               	addwfc	(?___wmul+1)^0,w,c
  4926  0022B2  6EDA               	movwf	fsr2h,c
  4927  0022B4  CFDE F03F          	movff	postinc2,??_determine_color3+2
  4928  0022B8  CFDD F040          	movff	postdec2,??_determine_color3+3
  4929  0022BC  503D               	movf	??_determine_color3^0,w,c
  4930  0022BE  5C3F               	subwf	(??_determine_color3+2)^0,w,c
  4931  0022C0  0101               	movlb	1	; () banked
  4932  0022C2  6F44               	movwf	_determine_color3$2509& (0+255),b
  4933  0022C4  503E               	movf	(??_determine_color3+1)^0,w,c
  4934  0022C6  5840               	subwfb	(??_determine_color3+3)^0,w,c
  4935  0022C8  6F45               	movwf	(_determine_color3$2509+1)& (0+255),b
  4936  0022CA                     
  4937                           ; BSR set to: 1
  4938                           ;color.c: 269:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  4939  0022CA  C142  F005         	movff	_determine_color3$2508,___wmul@multiplier
  4940  0022CE  C143  F006         	movff	_determine_color3$2508+1,___wmul@multiplier+1
  4941  0022D2  C144  F007         	movff	_determine_color3$2509,___wmul@multiplicand
  4942  0022D6  C145  F008         	movff	_determine_color3$2509+1,___wmul@multiplicand+1
  4943  0022DA  EC30  F01E         	call	___wmul	;wreg free
  4944  0022DE  C005  F13A         	movff	?___wmul,determine_color3@bb
  4945  0022E2  C006  F13B         	movff	?___wmul+1,determine_color3@bb+1
  4946  0022E6                     
  4947                           ;color.c: 270:         unsigned int calc = sqrtf(rr + gg + bb);
  4948  0022E6  0101               	movlb	1	; () banked
  4949  0022E8  5138               	movf	determine_color3@gg& (0+255),w,b
  4950  0022EA  2536               	addwf	determine_color3@rr& (0+255),w,b
  4951  0022EC  6E3D               	movwf	??_determine_color3^0,c
  4952  0022EE  5139               	movf	(determine_color3@gg+1)& (0+255),w,b
  4953  0022F0  2137               	addwfc	(determine_color3@rr+1)& (0+255),w,b
  4954  0022F2  6E3E               	movwf	(??_determine_color3+1)^0,c
  4955  0022F4  513A               	movf	determine_color3@bb& (0+255),w,b
  4956  0022F6  263D               	addwf	??_determine_color3^0,f,c
  4957  0022F8  513B               	movf	(determine_color3@bb+1)& (0+255),w,b
  4958  0022FA  223E               	addwfc	(??_determine_color3+1)^0,f,c
  4959  0022FC  C03D  F005         	movff	??_determine_color3,___xxtofl@val
  4960  002300  C03E  F006         	movff	??_determine_color3+1,___xxtofl@val+1
  4961  002304  6A07               	clrf	(___xxtofl@val+2)^0,c
  4962  002306  6A08               	clrf	(___xxtofl@val+3)^0,c
  4963  002308  0E00               	movlw	0
  4964  00230A  EC3B  F017         	call	___xxtofl
  4965  00230E  C005  F02E         	movff	?___xxtofl,sqrtf@x
  4966  002312  C006  F02F         	movff	?___xxtofl+1,sqrtf@x+1
  4967  002316  C007  F030         	movff	?___xxtofl+2,sqrtf@x+2
  4968  00231A  C008  F031         	movff	?___xxtofl+3,sqrtf@x+3
  4969  00231E  EC30  F007         	call	_sqrtf	;wreg free
  4970  002322  C02E  F0C2         	movff	?_sqrtf,___fltol@f1
  4971  002326  C02F  F0C3         	movff	?_sqrtf+1,___fltol@f1+1
  4972  00232A  C030  F0C4         	movff	?_sqrtf+2,___fltol@f1+2
  4973  00232E  C031  F0C5         	movff	?_sqrtf+3,___fltol@f1+3
  4974  002332  EC8B  F019         	call	___fltol	;wreg free
  4975  002336  C0C2  F140         	movff	?___fltol,determine_color3@calc
  4976  00233A  C0C3  F141         	movff	?___fltol+1,determine_color3@calc+1
  4977  00233E                     
  4978                           ;color.c: 271:         if (calc < temp) {
  4979  00233E  0101               	movlb	1	; () banked
  4980  002340  513C               	movf	determine_color3@temp& (0+255),w,b
  4981  002342  5D40               	subwf	determine_color3@calc& (0+255),w,b
  4982  002344  513D               	movf	(determine_color3@temp+1)& (0+255),w,b
  4983  002346  5941               	subwfb	(determine_color3@calc+1)& (0+255),w,b
  4984  002348  B0D8               	btfsc	status,0,c
  4985  00234A  EFA9  F011         	goto	u5321
  4986  00234E  EFAB  F011         	goto	u5320
  4987  002352                     u5321:
  4988  002352  EFC4  F011         	goto	l5128
  4989  002356                     u5320:
  4990  002356                     
  4991                           ; BSR set to: 1
  4992                           ;color.c: 272:             temp = calc;
  4993  002356  C140  F13C         	movff	determine_color3@calc,determine_color3@temp
  4994  00235A  C141  F13D         	movff	determine_color3@calc+1,determine_color3@temp+1
  4995  00235E                     
  4996                           ; BSR set to: 1
  4997                           ;color.c: 273:             if (calc < 30){out = j;}
  4998  00235E  5141               	movf	(determine_color3@calc+1)& (0+255),w,b
  4999  002360  E107               	bnz	u5331
  5000  002362  0E1E               	movlw	30
  5001  002364  5D40               	subwf	determine_color3@calc& (0+255),w,b
  5002  002366  B0D8               	btfsc	status,0,c
  5003  002368  EFB8  F011         	goto	u5331
  5004  00236C  EFBA  F011         	goto	u5330
  5005  002370                     u5331:
  5006  002370  EFC0  F011         	goto	l5126
  5007  002374                     u5330:
  5008  002374                     
  5009                           ; BSR set to: 1
  5010  002374  C146  F13E         	movff	determine_color3@j,determine_color3@out
  5011  002378  C147  F13F         	movff	determine_color3@j+1,determine_color3@out+1
  5012  00237C  EFC4  F011         	goto	l5128
  5013  002380                     l5126:
  5014                           
  5015                           ; BSR set to: 1
  5016  002380  0E00               	movlw	0
  5017  002382  6F3F               	movwf	(determine_color3@out+1)& (0+255),b
  5018  002384  0E09               	movlw	9
  5019  002386  6F3E               	movwf	determine_color3@out& (0+255),b
  5020  002388                     l5128:
  5021                           
  5022                           ; BSR set to: 1
  5023                           ;color.c: 276:     }
  5024  002388  4B46               	infsnz	determine_color3@j& (0+255),f,b
  5025  00238A  2B47               	incf	(determine_color3@j+1)& (0+255),f,b
  5026  00238C                     
  5027                           ; BSR set to: 1
  5028  00238C  5147               	movf	(determine_color3@j+1)& (0+255),w,b
  5029  00238E  E109               	bnz	u5340
  5030  002390  0E09               	movlw	9
  5031  002392  5D46               	subwf	determine_color3@j& (0+255),w,b
  5032  002394  A0D8               	btfss	status,0,c
  5033  002396  EFCF  F011         	goto	u5341
  5034  00239A  EFD1  F011         	goto	u5340
  5035  00239E                     u5341:
  5036  00239E  EF5B  F010         	goto	l5104
  5037  0023A2                     u5340:
  5038  0023A2                     
  5039                           ; BSR set to: 1
  5040                           ;color.c: 277:     return out;
  5041  0023A2  C13E  F0C6         	movff	determine_color3@out,?_determine_color3
  5042  0023A6  C13F  F0C7         	movff	determine_color3@out+1,?_determine_color3+1
  5043  0023AA                     
  5044                           ; BSR set to: 1
  5045  0023AA  0012               	return		;funcret
  5046  0023AC                     __end_of_determine_color3:
  5047                           	callstack 0
  5048                           
  5049 ;; *************** function _determine_color2 *****************
  5050 ;; Defined at:
  5051 ;;		line 220 in file "color.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  m               2   40[BANK0 ] PTR struct RGB_val
  5054 ;;		 -> main@test(24), 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  calc            2   64[BANK1 ] unsigned int 
  5057 ;;  bb              2   58[BANK1 ] unsigned int 
  5058 ;;  gg              2   56[BANK1 ] unsigned int 
  5059 ;;  rr              2   54[BANK1 ] unsigned int 
  5060 ;;  j               2   70[BANK1 ] unsigned int 
  5061 ;;  data           54    0[BANK1 ] unsigned int [3][9]
  5062 ;;  out             2   62[BANK1 ] unsigned int 
  5063 ;;  temp            2   60[BANK1 ] unsigned int 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2   40[BANK0 ] unsigned int 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5073 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         0       0      72       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         4       2      72       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:       78 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 4
  5080 ;; This function calls:
  5081 ;;		___fltol
  5082 ;;		___wmul
  5083 ;;		___xxtofl
  5084 ;;		_sqrtf
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text24
  5091  0023AC                     __ptext24:
  5092                           	callstack 0
  5093  0023AC                     _determine_color2:
  5094                           	callstack 26
  5095  0023AC                     
  5096                           ;color.c: 221:     unsigned int data[9][3] = {
  5097  0023AC  EE22  F036         	lfsr	2,determine_color2@F14723
  5098  0023B0  EE11  F000         	lfsr	1,determine_color2@data
  5099  0023B4  0E35               	movlw	53
  5100  0023B6                     u5271:
  5101  0023B6  CFDB FFE3          	movff	plusw2,plusw1
  5102  0023BA  06E8               	decf	wreg,f,c
  5103  0023BC  E2FC               	bc	u5271
  5104  0023BE                     
  5105                           ;color.c: 233:     unsigned int temp = 1000;
  5106  0023BE  0E03               	movlw	3
  5107  0023C0  0101               	movlb	1	; () banked
  5108  0023C2  6F3D               	movwf	(determine_color2@temp+1)& (0+255),b
  5109  0023C4  0EE8               	movlw	232
  5110  0023C6  6F3C               	movwf	determine_color2@temp& (0+255),b
  5111  0023C8                     
  5112                           ; BSR set to: 1
  5113                           ;color.c: 234:     unsigned int out;;color.c: 236:     for (unsigned int j=0; j<9; j++) 
      +                          {
  5114  0023C8  0E00               	movlw	0
  5115  0023CA  6F47               	movwf	(determine_color2@j+1)& (0+255),b
  5116  0023CC  0E00               	movlw	0
  5117  0023CE  6F46               	movwf	determine_color2@j& (0+255),b
  5118  0023D0                     l5066:
  5119                           
  5120                           ; BSR set to: 1
  5121                           ;color.c: 237:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  5122  0023D0  C0C6  FFD9         	movff	determine_color2@m,fsr2l
  5123  0023D4  C0C7  FFDA         	movff	determine_color2@m+1,fsr2h
  5124  0023D8  CFDE F03D          	movff	postinc2,??_determine_color2
  5125  0023DC  CFDD F03E          	movff	postdec2,??_determine_color2+1
  5126  0023E0  C146  F005         	movff	determine_color2@j,___wmul@multiplier
  5127  0023E4  C147  F006         	movff	determine_color2@j+1,___wmul@multiplier+1
  5128  0023E8  0E00               	movlw	0
  5129  0023EA  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5130  0023EC  0E06               	movlw	6
  5131  0023EE  6E07               	movwf	___wmul@multiplicand^0,c
  5132  0023F0  EC30  F01E         	call	___wmul	;wreg free
  5133  0023F4  0E00               	movlw	low determine_color2@data
  5134  0023F6  2405               	addwf	?___wmul^0,w,c
  5135  0023F8  6ED9               	movwf	fsr2l,c
  5136  0023FA  0E01               	movlw	high determine_color2@data
  5137  0023FC  2006               	addwfc	(?___wmul+1)^0,w,c
  5138  0023FE  6EDA               	movwf	fsr2h,c
  5139  002400  CFDE F03F          	movff	postinc2,??_determine_color2+2
  5140  002404  CFDD F040          	movff	postdec2,??_determine_color2+3
  5141  002408  503D               	movf	??_determine_color2^0,w,c
  5142  00240A  5C3F               	subwf	(??_determine_color2+2)^0,w,c
  5143  00240C  0101               	movlb	1	; () banked
  5144  00240E  6F42               	movwf	_determine_color2$2506& (0+255),b
  5145  002410  503E               	movf	(??_determine_color2+1)^0,w,c
  5146  002412  5840               	subwfb	(??_determine_color2+3)^0,w,c
  5147  002414  6F43               	movwf	(_determine_color2$2506+1)& (0+255),b
  5148                           
  5149                           ;color.c: 237:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  5150  002416  C0C6  FFD9         	movff	determine_color2@m,fsr2l
  5151  00241A  C0C7  FFDA         	movff	determine_color2@m+1,fsr2h
  5152  00241E  CFDE F03D          	movff	postinc2,??_determine_color2
  5153  002422  CFDD F03E          	movff	postdec2,??_determine_color2+1
  5154  002426  C146  F005         	movff	determine_color2@j,___wmul@multiplier
  5155  00242A  C147  F006         	movff	determine_color2@j+1,___wmul@multiplier+1
  5156  00242E  0E00               	movlw	0
  5157  002430  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5158  002432  0E06               	movlw	6
  5159  002434  6E07               	movwf	___wmul@multiplicand^0,c
  5160  002436  EC30  F01E         	call	___wmul	;wreg free
  5161  00243A  0E00               	movlw	low determine_color2@data
  5162  00243C  2405               	addwf	?___wmul^0,w,c
  5163  00243E  6ED9               	movwf	fsr2l,c
  5164  002440  0E01               	movlw	high determine_color2@data
  5165  002442  2006               	addwfc	(?___wmul+1)^0,w,c
  5166  002444  6EDA               	movwf	fsr2h,c
  5167  002446  CFDE F03F          	movff	postinc2,??_determine_color2+2
  5168  00244A  CFDD F040          	movff	postdec2,??_determine_color2+3
  5169  00244E  503D               	movf	??_determine_color2^0,w,c
  5170  002450  5C3F               	subwf	(??_determine_color2+2)^0,w,c
  5171  002452  0101               	movlb	1	; () banked
  5172  002454  6F44               	movwf	_determine_color2$2507& (0+255),b
  5173  002456  503E               	movf	(??_determine_color2+1)^0,w,c
  5174  002458  5840               	subwfb	(??_determine_color2+3)^0,w,c
  5175  00245A  6F45               	movwf	(_determine_color2$2507+1)& (0+255),b
  5176  00245C                     
  5177                           ; BSR set to: 1
  5178                           ;color.c: 237:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  5179  00245C  C142  F005         	movff	_determine_color2$2506,___wmul@multiplier
  5180  002460  C143  F006         	movff	_determine_color2$2506+1,___wmul@multiplier+1
  5181  002464  C144  F007         	movff	_determine_color2$2507,___wmul@multiplicand
  5182  002468  C145  F008         	movff	_determine_color2$2507+1,___wmul@multiplicand+1
  5183  00246C  EC30  F01E         	call	___wmul	;wreg free
  5184  002470  C005  F136         	movff	?___wmul,determine_color2@rr
  5185  002474  C006  F137         	movff	?___wmul+1,determine_color2@rr+1
  5186  002478                     
  5187                           ;color.c: 238:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  5188  002478  0100               	movlb	0	; () banked
  5189  00247A  EE20 F002          	lfsr	2,2
  5190  00247E  51C6               	movf	determine_color2@m& (0+255),w,b
  5191  002480  26D9               	addwf	fsr2l,f,c
  5192  002482  51C7               	movf	(determine_color2@m+1)& (0+255),w,b
  5193  002484  22DA               	addwfc	fsr2h,f,c
  5194  002486  CFDE F03D          	movff	postinc2,??_determine_color2
  5195  00248A  CFDD F03E          	movff	postdec2,??_determine_color2+1
  5196  00248E  C146  F005         	movff	determine_color2@j,___wmul@multiplier
  5197  002492  C147  F006         	movff	determine_color2@j+1,___wmul@multiplier+1
  5198  002496  0E00               	movlw	0
  5199  002498  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5200  00249A  0E06               	movlw	6
  5201  00249C  6E07               	movwf	___wmul@multiplicand^0,c
  5202  00249E  EC30  F01E         	call	___wmul	;wreg free
  5203  0024A2  0E02               	movlw	2
  5204  0024A4  2605               	addwf	?___wmul^0,f,c
  5205  0024A6  0E00               	movlw	0
  5206  0024A8  2206               	addwfc	(?___wmul+1)^0,f,c
  5207  0024AA  0E00               	movlw	low determine_color2@data
  5208  0024AC  2405               	addwf	?___wmul^0,w,c
  5209  0024AE  6ED9               	movwf	fsr2l,c
  5210  0024B0  0E01               	movlw	high determine_color2@data
  5211  0024B2  2006               	addwfc	(?___wmul+1)^0,w,c
  5212  0024B4  6EDA               	movwf	fsr2h,c
  5213  0024B6  CFDE F03F          	movff	postinc2,??_determine_color2+2
  5214  0024BA  CFDD F040          	movff	postdec2,??_determine_color2+3
  5215  0024BE  503D               	movf	??_determine_color2^0,w,c
  5216  0024C0  5C3F               	subwf	(??_determine_color2+2)^0,w,c
  5217  0024C2  0101               	movlb	1	; () banked
  5218  0024C4  6F42               	movwf	_determine_color2$2506& (0+255),b
  5219  0024C6  503E               	movf	(??_determine_color2+1)^0,w,c
  5220  0024C8  5840               	subwfb	(??_determine_color2+3)^0,w,c
  5221  0024CA  6F43               	movwf	(_determine_color2$2506+1)& (0+255),b
  5222  0024CC                     
  5223                           ; BSR set to: 1
  5224                           ;color.c: 238:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  5225  0024CC  0100               	movlb	0	; () banked
  5226  0024CE  EE20 F002          	lfsr	2,2
  5227  0024D2  51C6               	movf	determine_color2@m& (0+255),w,b
  5228  0024D4  26D9               	addwf	fsr2l,f,c
  5229  0024D6  51C7               	movf	(determine_color2@m+1)& (0+255),w,b
  5230  0024D8  22DA               	addwfc	fsr2h,f,c
  5231  0024DA  CFDE F03D          	movff	postinc2,??_determine_color2
  5232  0024DE  CFDD F03E          	movff	postdec2,??_determine_color2+1
  5233  0024E2  C146  F005         	movff	determine_color2@j,___wmul@multiplier
  5234  0024E6  C147  F006         	movff	determine_color2@j+1,___wmul@multiplier+1
  5235  0024EA  0E00               	movlw	0
  5236  0024EC  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5237  0024EE  0E06               	movlw	6
  5238  0024F0  6E07               	movwf	___wmul@multiplicand^0,c
  5239  0024F2  EC30  F01E         	call	___wmul	;wreg free
  5240  0024F6  0E02               	movlw	2
  5241  0024F8  2605               	addwf	?___wmul^0,f,c
  5242  0024FA  0E00               	movlw	0
  5243  0024FC  2206               	addwfc	(?___wmul+1)^0,f,c
  5244  0024FE  0E00               	movlw	low determine_color2@data
  5245  002500  2405               	addwf	?___wmul^0,w,c
  5246  002502  6ED9               	movwf	fsr2l,c
  5247  002504  0E01               	movlw	high determine_color2@data
  5248  002506  2006               	addwfc	(?___wmul+1)^0,w,c
  5249  002508  6EDA               	movwf	fsr2h,c
  5250  00250A  CFDE F03F          	movff	postinc2,??_determine_color2+2
  5251  00250E  CFDD F040          	movff	postdec2,??_determine_color2+3
  5252  002512  503D               	movf	??_determine_color2^0,w,c
  5253  002514  5C3F               	subwf	(??_determine_color2+2)^0,w,c
  5254  002516  0101               	movlb	1	; () banked
  5255  002518  6F44               	movwf	_determine_color2$2507& (0+255),b
  5256  00251A  503E               	movf	(??_determine_color2+1)^0,w,c
  5257  00251C  5840               	subwfb	(??_determine_color2+3)^0,w,c
  5258  00251E  6F45               	movwf	(_determine_color2$2507+1)& (0+255),b
  5259  002520                     
  5260                           ; BSR set to: 1
  5261                           ;color.c: 238:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  5262  002520  C142  F005         	movff	_determine_color2$2506,___wmul@multiplier
  5263  002524  C143  F006         	movff	_determine_color2$2506+1,___wmul@multiplier+1
  5264  002528  C144  F007         	movff	_determine_color2$2507,___wmul@multiplicand
  5265  00252C  C145  F008         	movff	_determine_color2$2507+1,___wmul@multiplicand+1
  5266  002530  EC30  F01E         	call	___wmul	;wreg free
  5267  002534  C005  F138         	movff	?___wmul,determine_color2@gg
  5268  002538  C006  F139         	movff	?___wmul+1,determine_color2@gg+1
  5269                           
  5270                           ;color.c: 239:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  5271  00253C  0100               	movlb	0	; () banked
  5272  00253E  EE20 F004          	lfsr	2,4
  5273  002542  51C6               	movf	determine_color2@m& (0+255),w,b
  5274  002544  26D9               	addwf	fsr2l,f,c
  5275  002546  51C7               	movf	(determine_color2@m+1)& (0+255),w,b
  5276  002548  22DA               	addwfc	fsr2h,f,c
  5277  00254A  CFDE F03D          	movff	postinc2,??_determine_color2
  5278  00254E  CFDD F03E          	movff	postdec2,??_determine_color2+1
  5279  002552  C146  F005         	movff	determine_color2@j,___wmul@multiplier
  5280  002556  C147  F006         	movff	determine_color2@j+1,___wmul@multiplier+1
  5281  00255A  0E00               	movlw	0
  5282  00255C  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5283  00255E  0E06               	movlw	6
  5284  002560  6E07               	movwf	___wmul@multiplicand^0,c
  5285  002562  EC30  F01E         	call	___wmul	;wreg free
  5286  002566  0E04               	movlw	4
  5287  002568  2605               	addwf	?___wmul^0,f,c
  5288  00256A  0E00               	movlw	0
  5289  00256C  2206               	addwfc	(?___wmul+1)^0,f,c
  5290  00256E  0E00               	movlw	low determine_color2@data
  5291  002570  2405               	addwf	?___wmul^0,w,c
  5292  002572  6ED9               	movwf	fsr2l,c
  5293  002574  0E01               	movlw	high determine_color2@data
  5294  002576  2006               	addwfc	(?___wmul+1)^0,w,c
  5295  002578  6EDA               	movwf	fsr2h,c
  5296  00257A  CFDE F03F          	movff	postinc2,??_determine_color2+2
  5297  00257E  CFDD F040          	movff	postdec2,??_determine_color2+3
  5298  002582  503D               	movf	??_determine_color2^0,w,c
  5299  002584  5C3F               	subwf	(??_determine_color2+2)^0,w,c
  5300  002586  0101               	movlb	1	; () banked
  5301  002588  6F42               	movwf	_determine_color2$2506& (0+255),b
  5302  00258A  503E               	movf	(??_determine_color2+1)^0,w,c
  5303  00258C  5840               	subwfb	(??_determine_color2+3)^0,w,c
  5304  00258E  6F43               	movwf	(_determine_color2$2506+1)& (0+255),b
  5305                           
  5306                           ;color.c: 239:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  5307  002590  0100               	movlb	0	; () banked
  5308  002592  EE20 F004          	lfsr	2,4
  5309  002596  51C6               	movf	determine_color2@m& (0+255),w,b
  5310  002598  26D9               	addwf	fsr2l,f,c
  5311  00259A  51C7               	movf	(determine_color2@m+1)& (0+255),w,b
  5312  00259C  22DA               	addwfc	fsr2h,f,c
  5313  00259E  CFDE F03D          	movff	postinc2,??_determine_color2
  5314  0025A2  CFDD F03E          	movff	postdec2,??_determine_color2+1
  5315  0025A6  C146  F005         	movff	determine_color2@j,___wmul@multiplier
  5316  0025AA  C147  F006         	movff	determine_color2@j+1,___wmul@multiplier+1
  5317  0025AE  0E00               	movlw	0
  5318  0025B0  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5319  0025B2  0E06               	movlw	6
  5320  0025B4  6E07               	movwf	___wmul@multiplicand^0,c
  5321  0025B6  EC30  F01E         	call	___wmul	;wreg free
  5322  0025BA  0E04               	movlw	4
  5323  0025BC  2605               	addwf	?___wmul^0,f,c
  5324  0025BE  0E00               	movlw	0
  5325  0025C0  2206               	addwfc	(?___wmul+1)^0,f,c
  5326  0025C2  0E00               	movlw	low determine_color2@data
  5327  0025C4  2405               	addwf	?___wmul^0,w,c
  5328  0025C6  6ED9               	movwf	fsr2l,c
  5329  0025C8  0E01               	movlw	high determine_color2@data
  5330  0025CA  2006               	addwfc	(?___wmul+1)^0,w,c
  5331  0025CC  6EDA               	movwf	fsr2h,c
  5332  0025CE  CFDE F03F          	movff	postinc2,??_determine_color2+2
  5333  0025D2  CFDD F040          	movff	postdec2,??_determine_color2+3
  5334  0025D6  503D               	movf	??_determine_color2^0,w,c
  5335  0025D8  5C3F               	subwf	(??_determine_color2+2)^0,w,c
  5336  0025DA  0101               	movlb	1	; () banked
  5337  0025DC  6F44               	movwf	_determine_color2$2507& (0+255),b
  5338  0025DE  503E               	movf	(??_determine_color2+1)^0,w,c
  5339  0025E0  5840               	subwfb	(??_determine_color2+3)^0,w,c
  5340  0025E2  6F45               	movwf	(_determine_color2$2507+1)& (0+255),b
  5341  0025E4                     
  5342                           ; BSR set to: 1
  5343                           ;color.c: 239:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  5344  0025E4  C142  F005         	movff	_determine_color2$2506,___wmul@multiplier
  5345  0025E8  C143  F006         	movff	_determine_color2$2506+1,___wmul@multiplier+1
  5346  0025EC  C144  F007         	movff	_determine_color2$2507,___wmul@multiplicand
  5347  0025F0  C145  F008         	movff	_determine_color2$2507+1,___wmul@multiplicand+1
  5348  0025F4  EC30  F01E         	call	___wmul	;wreg free
  5349  0025F8  C005  F13A         	movff	?___wmul,determine_color2@bb
  5350  0025FC  C006  F13B         	movff	?___wmul+1,determine_color2@bb+1
  5351  002600                     
  5352                           ;color.c: 240:         unsigned int calc = sqrtf(rr + gg + bb);
  5353  002600  0101               	movlb	1	; () banked
  5354  002602  5138               	movf	determine_color2@gg& (0+255),w,b
  5355  002604  2536               	addwf	determine_color2@rr& (0+255),w,b
  5356  002606  6E3D               	movwf	??_determine_color2^0,c
  5357  002608  5139               	movf	(determine_color2@gg+1)& (0+255),w,b
  5358  00260A  2137               	addwfc	(determine_color2@rr+1)& (0+255),w,b
  5359  00260C  6E3E               	movwf	(??_determine_color2+1)^0,c
  5360  00260E  513A               	movf	determine_color2@bb& (0+255),w,b
  5361  002610  263D               	addwf	??_determine_color2^0,f,c
  5362  002612  513B               	movf	(determine_color2@bb+1)& (0+255),w,b
  5363  002614  223E               	addwfc	(??_determine_color2+1)^0,f,c
  5364  002616  C03D  F005         	movff	??_determine_color2,___xxtofl@val
  5365  00261A  C03E  F006         	movff	??_determine_color2+1,___xxtofl@val+1
  5366  00261E  6A07               	clrf	(___xxtofl@val+2)^0,c
  5367  002620  6A08               	clrf	(___xxtofl@val+3)^0,c
  5368  002622  0E00               	movlw	0
  5369  002624  EC3B  F017         	call	___xxtofl
  5370  002628  C005  F02E         	movff	?___xxtofl,sqrtf@x
  5371  00262C  C006  F02F         	movff	?___xxtofl+1,sqrtf@x+1
  5372  002630  C007  F030         	movff	?___xxtofl+2,sqrtf@x+2
  5373  002634  C008  F031         	movff	?___xxtofl+3,sqrtf@x+3
  5374  002638  EC30  F007         	call	_sqrtf	;wreg free
  5375  00263C  C02E  F0C2         	movff	?_sqrtf,___fltol@f1
  5376  002640  C02F  F0C3         	movff	?_sqrtf+1,___fltol@f1+1
  5377  002644  C030  F0C4         	movff	?_sqrtf+2,___fltol@f1+2
  5378  002648  C031  F0C5         	movff	?_sqrtf+3,___fltol@f1+3
  5379  00264C  EC8B  F019         	call	___fltol	;wreg free
  5380  002650  C0C2  F140         	movff	?___fltol,determine_color2@calc
  5381  002654  C0C3  F141         	movff	?___fltol+1,determine_color2@calc+1
  5382  002658                     
  5383                           ;color.c: 241:         if (calc < temp) {
  5384  002658  0101               	movlb	1	; () banked
  5385  00265A  513C               	movf	determine_color2@temp& (0+255),w,b
  5386  00265C  5D40               	subwf	determine_color2@calc& (0+255),w,b
  5387  00265E  513D               	movf	(determine_color2@temp+1)& (0+255),w,b
  5388  002660  5941               	subwfb	(determine_color2@calc+1)& (0+255),w,b
  5389  002662  B0D8               	btfsc	status,0,c
  5390  002664  EF36  F013         	goto	u5281
  5391  002668  EF38  F013         	goto	u5280
  5392  00266C                     u5281:
  5393  00266C  EF51  F013         	goto	l5090
  5394  002670                     u5280:
  5395  002670                     
  5396                           ; BSR set to: 1
  5397                           ;color.c: 242:             temp = calc;
  5398  002670  C140  F13C         	movff	determine_color2@calc,determine_color2@temp
  5399  002674  C141  F13D         	movff	determine_color2@calc+1,determine_color2@temp+1
  5400  002678                     
  5401                           ; BSR set to: 1
  5402                           ;color.c: 243:             if (calc < 30){out = j;}
  5403  002678  5141               	movf	(determine_color2@calc+1)& (0+255),w,b
  5404  00267A  E107               	bnz	u5291
  5405  00267C  0E1E               	movlw	30
  5406  00267E  5D40               	subwf	determine_color2@calc& (0+255),w,b
  5407  002680  B0D8               	btfsc	status,0,c
  5408  002682  EF45  F013         	goto	u5291
  5409  002686  EF47  F013         	goto	u5290
  5410  00268A                     u5291:
  5411  00268A  EF4D  F013         	goto	l5088
  5412  00268E                     u5290:
  5413  00268E                     
  5414                           ; BSR set to: 1
  5415  00268E  C146  F13E         	movff	determine_color2@j,determine_color2@out
  5416  002692  C147  F13F         	movff	determine_color2@j+1,determine_color2@out+1
  5417  002696  EF51  F013         	goto	l5090
  5418  00269A                     l5088:
  5419                           
  5420                           ; BSR set to: 1
  5421  00269A  0E00               	movlw	0
  5422  00269C  6F3F               	movwf	(determine_color2@out+1)& (0+255),b
  5423  00269E  0E09               	movlw	9
  5424  0026A0  6F3E               	movwf	determine_color2@out& (0+255),b
  5425  0026A2                     l5090:
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;color.c: 246:     }
  5429  0026A2  4B46               	infsnz	determine_color2@j& (0+255),f,b
  5430  0026A4  2B47               	incf	(determine_color2@j+1)& (0+255),f,b
  5431  0026A6                     
  5432                           ; BSR set to: 1
  5433  0026A6  5147               	movf	(determine_color2@j+1)& (0+255),w,b
  5434  0026A8  E109               	bnz	u5300
  5435  0026AA  0E09               	movlw	9
  5436  0026AC  5D46               	subwf	determine_color2@j& (0+255),w,b
  5437  0026AE  A0D8               	btfss	status,0,c
  5438  0026B0  EF5C  F013         	goto	u5301
  5439  0026B4  EF5E  F013         	goto	u5300
  5440  0026B8                     u5301:
  5441  0026B8  EFE8  F011         	goto	l5066
  5442  0026BC                     u5300:
  5443  0026BC                     
  5444                           ; BSR set to: 1
  5445                           ;color.c: 247:     return out;
  5446  0026BC  C13E  F0C6         	movff	determine_color2@out,?_determine_color2
  5447  0026C0  C13F  F0C7         	movff	determine_color2@out+1,?_determine_color2+1
  5448  0026C4                     
  5449                           ; BSR set to: 1
  5450  0026C4  0012               	return		;funcret
  5451  0026C6                     __end_of_determine_color2:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function _determine_color1 *****************
  5455 ;; Defined at:
  5456 ;;		line 190 in file "color.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  m               2   40[BANK0 ] PTR struct RGB_val
  5459 ;;		 -> main@test(24), 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  calc            2   64[BANK1 ] unsigned int 
  5462 ;;  bb              2   58[BANK1 ] unsigned int 
  5463 ;;  gg              2   56[BANK1 ] unsigned int 
  5464 ;;  rr              2   54[BANK1 ] unsigned int 
  5465 ;;  j               2   70[BANK1 ] unsigned int 
  5466 ;;  data           54    0[BANK1 ] unsigned int [3][9]
  5467 ;;  out             2   62[BANK1 ] unsigned int 
  5468 ;;  temp            2   60[BANK1 ] unsigned int 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2   40[BANK0 ] unsigned int 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;      Locals:         0       0      72       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Totals:         4       2      72       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;Total ram usage:       78 bytes
  5483 ;; Hardware stack levels used: 1
  5484 ;; Hardware stack levels required when called: 4
  5485 ;; This function calls:
  5486 ;;		___fltol
  5487 ;;		___wmul
  5488 ;;		___xxtofl
  5489 ;;		_sqrtf
  5490 ;; This function is called by:
  5491 ;;		_main
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text25
  5496  0026C6                     __ptext25:
  5497                           	callstack 0
  5498  0026C6                     _determine_color1:
  5499                           	callstack 26
  5500  0026C6                     
  5501                           ;color.c: 191:     unsigned int data[9][3] = {
  5502  0026C6  EE21  F048         	lfsr	2,determine_color1@F14704
  5503  0026CA  EE11  F000         	lfsr	1,determine_color1@data
  5504  0026CE  0E35               	movlw	53
  5505  0026D0                     u5231:
  5506  0026D0  CFDB FFE3          	movff	plusw2,plusw1
  5507  0026D4  06E8               	decf	wreg,f,c
  5508  0026D6  E2FC               	bc	u5231
  5509  0026D8                     
  5510                           ;color.c: 203:     unsigned int temp = 1000;
  5511  0026D8  0E03               	movlw	3
  5512  0026DA  0101               	movlb	1	; () banked
  5513  0026DC  6F3D               	movwf	(determine_color1@temp+1)& (0+255),b
  5514  0026DE  0EE8               	movlw	232
  5515  0026E0  6F3C               	movwf	determine_color1@temp& (0+255),b
  5516  0026E2                     
  5517                           ; BSR set to: 1
  5518                           ;color.c: 204:     unsigned int out;;color.c: 206:     for (unsigned int j=0; j<9; j++) 
      +                          {
  5519  0026E2  0E00               	movlw	0
  5520  0026E4  6F47               	movwf	(determine_color1@j+1)& (0+255),b
  5521  0026E6  0E00               	movlw	0
  5522  0026E8  6F46               	movwf	determine_color1@j& (0+255),b
  5523  0026EA                     l5028:
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;color.c: 207:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  5527  0026EA  C0C6  FFD9         	movff	determine_color1@m,fsr2l
  5528  0026EE  C0C7  FFDA         	movff	determine_color1@m+1,fsr2h
  5529  0026F2  CFDE F03D          	movff	postinc2,??_determine_color1
  5530  0026F6  CFDD F03E          	movff	postdec2,??_determine_color1+1
  5531  0026FA  C146  F005         	movff	determine_color1@j,___wmul@multiplier
  5532  0026FE  C147  F006         	movff	determine_color1@j+1,___wmul@multiplier+1
  5533  002702  0E00               	movlw	0
  5534  002704  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5535  002706  0E06               	movlw	6
  5536  002708  6E07               	movwf	___wmul@multiplicand^0,c
  5537  00270A  EC30  F01E         	call	___wmul	;wreg free
  5538  00270E  0E00               	movlw	low determine_color1@data
  5539  002710  2405               	addwf	?___wmul^0,w,c
  5540  002712  6ED9               	movwf	fsr2l,c
  5541  002714  0E01               	movlw	high determine_color1@data
  5542  002716  2006               	addwfc	(?___wmul+1)^0,w,c
  5543  002718  6EDA               	movwf	fsr2h,c
  5544  00271A  CFDE F03F          	movff	postinc2,??_determine_color1+2
  5545  00271E  CFDD F040          	movff	postdec2,??_determine_color1+3
  5546  002722  503D               	movf	??_determine_color1^0,w,c
  5547  002724  5C3F               	subwf	(??_determine_color1+2)^0,w,c
  5548  002726  0101               	movlb	1	; () banked
  5549  002728  6F42               	movwf	_determine_color1$2504& (0+255),b
  5550  00272A  503E               	movf	(??_determine_color1+1)^0,w,c
  5551  00272C  5840               	subwfb	(??_determine_color1+3)^0,w,c
  5552  00272E  6F43               	movwf	(_determine_color1$2504+1)& (0+255),b
  5553                           
  5554                           ;color.c: 207:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  5555  002730  C0C6  FFD9         	movff	determine_color1@m,fsr2l
  5556  002734  C0C7  FFDA         	movff	determine_color1@m+1,fsr2h
  5557  002738  CFDE F03D          	movff	postinc2,??_determine_color1
  5558  00273C  CFDD F03E          	movff	postdec2,??_determine_color1+1
  5559  002740  C146  F005         	movff	determine_color1@j,___wmul@multiplier
  5560  002744  C147  F006         	movff	determine_color1@j+1,___wmul@multiplier+1
  5561  002748  0E00               	movlw	0
  5562  00274A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5563  00274C  0E06               	movlw	6
  5564  00274E  6E07               	movwf	___wmul@multiplicand^0,c
  5565  002750  EC30  F01E         	call	___wmul	;wreg free
  5566  002754  0E00               	movlw	low determine_color1@data
  5567  002756  2405               	addwf	?___wmul^0,w,c
  5568  002758  6ED9               	movwf	fsr2l,c
  5569  00275A  0E01               	movlw	high determine_color1@data
  5570  00275C  2006               	addwfc	(?___wmul+1)^0,w,c
  5571  00275E  6EDA               	movwf	fsr2h,c
  5572  002760  CFDE F03F          	movff	postinc2,??_determine_color1+2
  5573  002764  CFDD F040          	movff	postdec2,??_determine_color1+3
  5574  002768  503D               	movf	??_determine_color1^0,w,c
  5575  00276A  5C3F               	subwf	(??_determine_color1+2)^0,w,c
  5576  00276C  0101               	movlb	1	; () banked
  5577  00276E  6F44               	movwf	_determine_color1$2505& (0+255),b
  5578  002770  503E               	movf	(??_determine_color1+1)^0,w,c
  5579  002772  5840               	subwfb	(??_determine_color1+3)^0,w,c
  5580  002774  6F45               	movwf	(_determine_color1$2505+1)& (0+255),b
  5581  002776                     
  5582                           ; BSR set to: 1
  5583                           ;color.c: 207:         unsigned int rr = (data[j][0]-(m->R))*(data[j][0]-(m->R));
  5584  002776  C142  F005         	movff	_determine_color1$2504,___wmul@multiplier
  5585  00277A  C143  F006         	movff	_determine_color1$2504+1,___wmul@multiplier+1
  5586  00277E  C144  F007         	movff	_determine_color1$2505,___wmul@multiplicand
  5587  002782  C145  F008         	movff	_determine_color1$2505+1,___wmul@multiplicand+1
  5588  002786  EC30  F01E         	call	___wmul	;wreg free
  5589  00278A  C005  F136         	movff	?___wmul,determine_color1@rr
  5590  00278E  C006  F137         	movff	?___wmul+1,determine_color1@rr+1
  5591  002792                     
  5592                           ;color.c: 208:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  5593  002792  0100               	movlb	0	; () banked
  5594  002794  EE20 F002          	lfsr	2,2
  5595  002798  51C6               	movf	determine_color1@m& (0+255),w,b
  5596  00279A  26D9               	addwf	fsr2l,f,c
  5597  00279C  51C7               	movf	(determine_color1@m+1)& (0+255),w,b
  5598  00279E  22DA               	addwfc	fsr2h,f,c
  5599  0027A0  CFDE F03D          	movff	postinc2,??_determine_color1
  5600  0027A4  CFDD F03E          	movff	postdec2,??_determine_color1+1
  5601  0027A8  C146  F005         	movff	determine_color1@j,___wmul@multiplier
  5602  0027AC  C147  F006         	movff	determine_color1@j+1,___wmul@multiplier+1
  5603  0027B0  0E00               	movlw	0
  5604  0027B2  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5605  0027B4  0E06               	movlw	6
  5606  0027B6  6E07               	movwf	___wmul@multiplicand^0,c
  5607  0027B8  EC30  F01E         	call	___wmul	;wreg free
  5608  0027BC  0E02               	movlw	2
  5609  0027BE  2605               	addwf	?___wmul^0,f,c
  5610  0027C0  0E00               	movlw	0
  5611  0027C2  2206               	addwfc	(?___wmul+1)^0,f,c
  5612  0027C4  0E00               	movlw	low determine_color1@data
  5613  0027C6  2405               	addwf	?___wmul^0,w,c
  5614  0027C8  6ED9               	movwf	fsr2l,c
  5615  0027CA  0E01               	movlw	high determine_color1@data
  5616  0027CC  2006               	addwfc	(?___wmul+1)^0,w,c
  5617  0027CE  6EDA               	movwf	fsr2h,c
  5618  0027D0  CFDE F03F          	movff	postinc2,??_determine_color1+2
  5619  0027D4  CFDD F040          	movff	postdec2,??_determine_color1+3
  5620  0027D8  503D               	movf	??_determine_color1^0,w,c
  5621  0027DA  5C3F               	subwf	(??_determine_color1+2)^0,w,c
  5622  0027DC  0101               	movlb	1	; () banked
  5623  0027DE  6F42               	movwf	_determine_color1$2504& (0+255),b
  5624  0027E0  503E               	movf	(??_determine_color1+1)^0,w,c
  5625  0027E2  5840               	subwfb	(??_determine_color1+3)^0,w,c
  5626  0027E4  6F43               	movwf	(_determine_color1$2504+1)& (0+255),b
  5627  0027E6                     
  5628                           ; BSR set to: 1
  5629                           ;color.c: 208:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  5630  0027E6  0100               	movlb	0	; () banked
  5631  0027E8  EE20 F002          	lfsr	2,2
  5632  0027EC  51C6               	movf	determine_color1@m& (0+255),w,b
  5633  0027EE  26D9               	addwf	fsr2l,f,c
  5634  0027F0  51C7               	movf	(determine_color1@m+1)& (0+255),w,b
  5635  0027F2  22DA               	addwfc	fsr2h,f,c
  5636  0027F4  CFDE F03D          	movff	postinc2,??_determine_color1
  5637  0027F8  CFDD F03E          	movff	postdec2,??_determine_color1+1
  5638  0027FC  C146  F005         	movff	determine_color1@j,___wmul@multiplier
  5639  002800  C147  F006         	movff	determine_color1@j+1,___wmul@multiplier+1
  5640  002804  0E00               	movlw	0
  5641  002806  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5642  002808  0E06               	movlw	6
  5643  00280A  6E07               	movwf	___wmul@multiplicand^0,c
  5644  00280C  EC30  F01E         	call	___wmul	;wreg free
  5645  002810  0E02               	movlw	2
  5646  002812  2605               	addwf	?___wmul^0,f,c
  5647  002814  0E00               	movlw	0
  5648  002816  2206               	addwfc	(?___wmul+1)^0,f,c
  5649  002818  0E00               	movlw	low determine_color1@data
  5650  00281A  2405               	addwf	?___wmul^0,w,c
  5651  00281C  6ED9               	movwf	fsr2l,c
  5652  00281E  0E01               	movlw	high determine_color1@data
  5653  002820  2006               	addwfc	(?___wmul+1)^0,w,c
  5654  002822  6EDA               	movwf	fsr2h,c
  5655  002824  CFDE F03F          	movff	postinc2,??_determine_color1+2
  5656  002828  CFDD F040          	movff	postdec2,??_determine_color1+3
  5657  00282C  503D               	movf	??_determine_color1^0,w,c
  5658  00282E  5C3F               	subwf	(??_determine_color1+2)^0,w,c
  5659  002830  0101               	movlb	1	; () banked
  5660  002832  6F44               	movwf	_determine_color1$2505& (0+255),b
  5661  002834  503E               	movf	(??_determine_color1+1)^0,w,c
  5662  002836  5840               	subwfb	(??_determine_color1+3)^0,w,c
  5663  002838  6F45               	movwf	(_determine_color1$2505+1)& (0+255),b
  5664  00283A                     
  5665                           ; BSR set to: 1
  5666                           ;color.c: 208:         unsigned int gg = (data[j][1]-(m->G))*(data[j][1]-(m->G));
  5667  00283A  C142  F005         	movff	_determine_color1$2504,___wmul@multiplier
  5668  00283E  C143  F006         	movff	_determine_color1$2504+1,___wmul@multiplier+1
  5669  002842  C144  F007         	movff	_determine_color1$2505,___wmul@multiplicand
  5670  002846  C145  F008         	movff	_determine_color1$2505+1,___wmul@multiplicand+1
  5671  00284A  EC30  F01E         	call	___wmul	;wreg free
  5672  00284E  C005  F138         	movff	?___wmul,determine_color1@gg
  5673  002852  C006  F139         	movff	?___wmul+1,determine_color1@gg+1
  5674                           
  5675                           ;color.c: 209:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  5676  002856  0100               	movlb	0	; () banked
  5677  002858  EE20 F004          	lfsr	2,4
  5678  00285C  51C6               	movf	determine_color1@m& (0+255),w,b
  5679  00285E  26D9               	addwf	fsr2l,f,c
  5680  002860  51C7               	movf	(determine_color1@m+1)& (0+255),w,b
  5681  002862  22DA               	addwfc	fsr2h,f,c
  5682  002864  CFDE F03D          	movff	postinc2,??_determine_color1
  5683  002868  CFDD F03E          	movff	postdec2,??_determine_color1+1
  5684  00286C  C146  F005         	movff	determine_color1@j,___wmul@multiplier
  5685  002870  C147  F006         	movff	determine_color1@j+1,___wmul@multiplier+1
  5686  002874  0E00               	movlw	0
  5687  002876  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5688  002878  0E06               	movlw	6
  5689  00287A  6E07               	movwf	___wmul@multiplicand^0,c
  5690  00287C  EC30  F01E         	call	___wmul	;wreg free
  5691  002880  0E04               	movlw	4
  5692  002882  2605               	addwf	?___wmul^0,f,c
  5693  002884  0E00               	movlw	0
  5694  002886  2206               	addwfc	(?___wmul+1)^0,f,c
  5695  002888  0E00               	movlw	low determine_color1@data
  5696  00288A  2405               	addwf	?___wmul^0,w,c
  5697  00288C  6ED9               	movwf	fsr2l,c
  5698  00288E  0E01               	movlw	high determine_color1@data
  5699  002890  2006               	addwfc	(?___wmul+1)^0,w,c
  5700  002892  6EDA               	movwf	fsr2h,c
  5701  002894  CFDE F03F          	movff	postinc2,??_determine_color1+2
  5702  002898  CFDD F040          	movff	postdec2,??_determine_color1+3
  5703  00289C  503D               	movf	??_determine_color1^0,w,c
  5704  00289E  5C3F               	subwf	(??_determine_color1+2)^0,w,c
  5705  0028A0  0101               	movlb	1	; () banked
  5706  0028A2  6F42               	movwf	_determine_color1$2504& (0+255),b
  5707  0028A4  503E               	movf	(??_determine_color1+1)^0,w,c
  5708  0028A6  5840               	subwfb	(??_determine_color1+3)^0,w,c
  5709  0028A8  6F43               	movwf	(_determine_color1$2504+1)& (0+255),b
  5710                           
  5711                           ;color.c: 209:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  5712  0028AA  0100               	movlb	0	; () banked
  5713  0028AC  EE20 F004          	lfsr	2,4
  5714  0028B0  51C6               	movf	determine_color1@m& (0+255),w,b
  5715  0028B2  26D9               	addwf	fsr2l,f,c
  5716  0028B4  51C7               	movf	(determine_color1@m+1)& (0+255),w,b
  5717  0028B6  22DA               	addwfc	fsr2h,f,c
  5718  0028B8  CFDE F03D          	movff	postinc2,??_determine_color1
  5719  0028BC  CFDD F03E          	movff	postdec2,??_determine_color1+1
  5720  0028C0  C146  F005         	movff	determine_color1@j,___wmul@multiplier
  5721  0028C4  C147  F006         	movff	determine_color1@j+1,___wmul@multiplier+1
  5722  0028C8  0E00               	movlw	0
  5723  0028CA  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5724  0028CC  0E06               	movlw	6
  5725  0028CE  6E07               	movwf	___wmul@multiplicand^0,c
  5726  0028D0  EC30  F01E         	call	___wmul	;wreg free
  5727  0028D4  0E04               	movlw	4
  5728  0028D6  2605               	addwf	?___wmul^0,f,c
  5729  0028D8  0E00               	movlw	0
  5730  0028DA  2206               	addwfc	(?___wmul+1)^0,f,c
  5731  0028DC  0E00               	movlw	low determine_color1@data
  5732  0028DE  2405               	addwf	?___wmul^0,w,c
  5733  0028E0  6ED9               	movwf	fsr2l,c
  5734  0028E2  0E01               	movlw	high determine_color1@data
  5735  0028E4  2006               	addwfc	(?___wmul+1)^0,w,c
  5736  0028E6  6EDA               	movwf	fsr2h,c
  5737  0028E8  CFDE F03F          	movff	postinc2,??_determine_color1+2
  5738  0028EC  CFDD F040          	movff	postdec2,??_determine_color1+3
  5739  0028F0  503D               	movf	??_determine_color1^0,w,c
  5740  0028F2  5C3F               	subwf	(??_determine_color1+2)^0,w,c
  5741  0028F4  0101               	movlb	1	; () banked
  5742  0028F6  6F44               	movwf	_determine_color1$2505& (0+255),b
  5743  0028F8  503E               	movf	(??_determine_color1+1)^0,w,c
  5744  0028FA  5840               	subwfb	(??_determine_color1+3)^0,w,c
  5745  0028FC  6F45               	movwf	(_determine_color1$2505+1)& (0+255),b
  5746  0028FE                     
  5747                           ; BSR set to: 1
  5748                           ;color.c: 209:         unsigned int bb = (data[j][2]-(m->B))*(data[j][2]-(m->B));
  5749  0028FE  C142  F005         	movff	_determine_color1$2504,___wmul@multiplier
  5750  002902  C143  F006         	movff	_determine_color1$2504+1,___wmul@multiplier+1
  5751  002906  C144  F007         	movff	_determine_color1$2505,___wmul@multiplicand
  5752  00290A  C145  F008         	movff	_determine_color1$2505+1,___wmul@multiplicand+1
  5753  00290E  EC30  F01E         	call	___wmul	;wreg free
  5754  002912  C005  F13A         	movff	?___wmul,determine_color1@bb
  5755  002916  C006  F13B         	movff	?___wmul+1,determine_color1@bb+1
  5756  00291A                     
  5757                           ;color.c: 210:         unsigned int calc = sqrtf(rr + gg + bb);
  5758  00291A  0101               	movlb	1	; () banked
  5759  00291C  5138               	movf	determine_color1@gg& (0+255),w,b
  5760  00291E  2536               	addwf	determine_color1@rr& (0+255),w,b
  5761  002920  6E3D               	movwf	??_determine_color1^0,c
  5762  002922  5139               	movf	(determine_color1@gg+1)& (0+255),w,b
  5763  002924  2137               	addwfc	(determine_color1@rr+1)& (0+255),w,b
  5764  002926  6E3E               	movwf	(??_determine_color1+1)^0,c
  5765  002928  513A               	movf	determine_color1@bb& (0+255),w,b
  5766  00292A  263D               	addwf	??_determine_color1^0,f,c
  5767  00292C  513B               	movf	(determine_color1@bb+1)& (0+255),w,b
  5768  00292E  223E               	addwfc	(??_determine_color1+1)^0,f,c
  5769  002930  C03D  F005         	movff	??_determine_color1,___xxtofl@val
  5770  002934  C03E  F006         	movff	??_determine_color1+1,___xxtofl@val+1
  5771  002938  6A07               	clrf	(___xxtofl@val+2)^0,c
  5772  00293A  6A08               	clrf	(___xxtofl@val+3)^0,c
  5773  00293C  0E00               	movlw	0
  5774  00293E  EC3B  F017         	call	___xxtofl
  5775  002942  C005  F02E         	movff	?___xxtofl,sqrtf@x
  5776  002946  C006  F02F         	movff	?___xxtofl+1,sqrtf@x+1
  5777  00294A  C007  F030         	movff	?___xxtofl+2,sqrtf@x+2
  5778  00294E  C008  F031         	movff	?___xxtofl+3,sqrtf@x+3
  5779  002952  EC30  F007         	call	_sqrtf	;wreg free
  5780  002956  C02E  F0C2         	movff	?_sqrtf,___fltol@f1
  5781  00295A  C02F  F0C3         	movff	?_sqrtf+1,___fltol@f1+1
  5782  00295E  C030  F0C4         	movff	?_sqrtf+2,___fltol@f1+2
  5783  002962  C031  F0C5         	movff	?_sqrtf+3,___fltol@f1+3
  5784  002966  EC8B  F019         	call	___fltol	;wreg free
  5785  00296A  C0C2  F140         	movff	?___fltol,determine_color1@calc
  5786  00296E  C0C3  F141         	movff	?___fltol+1,determine_color1@calc+1
  5787  002972                     
  5788                           ;color.c: 211:         if (calc < temp) {
  5789  002972  0101               	movlb	1	; () banked
  5790  002974  513C               	movf	determine_color1@temp& (0+255),w,b
  5791  002976  5D40               	subwf	determine_color1@calc& (0+255),w,b
  5792  002978  513D               	movf	(determine_color1@temp+1)& (0+255),w,b
  5793  00297A  5941               	subwfb	(determine_color1@calc+1)& (0+255),w,b
  5794  00297C  B0D8               	btfsc	status,0,c
  5795  00297E  EFC3  F014         	goto	u5241
  5796  002982  EFC5  F014         	goto	u5240
  5797  002986                     u5241:
  5798  002986  EFDE  F014         	goto	l5052
  5799  00298A                     u5240:
  5800  00298A                     
  5801                           ; BSR set to: 1
  5802                           ;color.c: 212:             temp = calc;
  5803  00298A  C140  F13C         	movff	determine_color1@calc,determine_color1@temp
  5804  00298E  C141  F13D         	movff	determine_color1@calc+1,determine_color1@temp+1
  5805  002992                     
  5806                           ; BSR set to: 1
  5807                           ;color.c: 213:             if (calc < 30){out = j;}
  5808  002992  5141               	movf	(determine_color1@calc+1)& (0+255),w,b
  5809  002994  E107               	bnz	u5251
  5810  002996  0E1E               	movlw	30
  5811  002998  5D40               	subwf	determine_color1@calc& (0+255),w,b
  5812  00299A  B0D8               	btfsc	status,0,c
  5813  00299C  EFD2  F014         	goto	u5251
  5814  0029A0  EFD4  F014         	goto	u5250
  5815  0029A4                     u5251:
  5816  0029A4  EFDA  F014         	goto	l5050
  5817  0029A8                     u5250:
  5818  0029A8                     
  5819                           ; BSR set to: 1
  5820  0029A8  C146  F13E         	movff	determine_color1@j,determine_color1@out
  5821  0029AC  C147  F13F         	movff	determine_color1@j+1,determine_color1@out+1
  5822  0029B0  EFDE  F014         	goto	l5052
  5823  0029B4                     l5050:
  5824                           
  5825                           ; BSR set to: 1
  5826  0029B4  0E00               	movlw	0
  5827  0029B6  6F3F               	movwf	(determine_color1@out+1)& (0+255),b
  5828  0029B8  0E09               	movlw	9
  5829  0029BA  6F3E               	movwf	determine_color1@out& (0+255),b
  5830  0029BC                     l5052:
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;color.c: 216:     }
  5834  0029BC  4B46               	infsnz	determine_color1@j& (0+255),f,b
  5835  0029BE  2B47               	incf	(determine_color1@j+1)& (0+255),f,b
  5836  0029C0                     
  5837                           ; BSR set to: 1
  5838  0029C0  5147               	movf	(determine_color1@j+1)& (0+255),w,b
  5839  0029C2  E109               	bnz	u5260
  5840  0029C4  0E09               	movlw	9
  5841  0029C6  5D46               	subwf	determine_color1@j& (0+255),w,b
  5842  0029C8  A0D8               	btfss	status,0,c
  5843  0029CA  EFE9  F014         	goto	u5261
  5844  0029CE  EFEB  F014         	goto	u5260
  5845  0029D2                     u5261:
  5846  0029D2  EF75  F013         	goto	l5028
  5847  0029D6                     u5260:
  5848  0029D6                     
  5849                           ; BSR set to: 1
  5850                           ;color.c: 217:     return out;
  5851  0029D6  C13E  F0C6         	movff	determine_color1@out,?_determine_color1
  5852  0029DA  C13F  F0C7         	movff	determine_color1@out+1,?_determine_color1+1
  5853  0029DE                     
  5854                           ; BSR set to: 1
  5855  0029DE  0012               	return		;funcret
  5856  0029E0                     __end_of_determine_color1:
  5857                           	callstack 0
  5858                           
  5859 ;; *************** function _sqrtf *****************
  5860 ;; Defined at:
  5861 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sqrtf.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  x               4   45[COMRAM] float 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  ix              4   32[BANK0 ] long 
  5866 ;;  r               4   28[BANK0 ] unsigned long 
  5867 ;;  m               4   24[BANK0 ] long 
  5868 ;;  z               4   20[BANK0 ] float 
  5869 ;;  t               4   16[BANK0 ] long 
  5870 ;;  q               4   12[BANK0 ] long 
  5871 ;;  __xc8_float_    4    8[BANK0 ] struct .
  5872 ;;  i               4    4[BANK0 ] long 
  5873 ;;  s               4    0[BANK0 ] long 
  5874 ;;  sign            4    0        long 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  4   45[COMRAM] float 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Totals:         9      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;Total ram usage:       45 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 3
  5891 ;; This function calls:
  5892 ;;		___fladd
  5893 ;;		___flge
  5894 ;;		___flmul
  5895 ;;		_nanf
  5896 ;; This function is called by:
  5897 ;;		_determine_color1
  5898 ;;		_determine_color2
  5899 ;;		_determine_color3
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text26
  5904  000E60                     __ptext26:
  5905                           	callstack 0
  5906  000E60                     _sqrtf:
  5907                           	callstack 26
  5908  000E60  C02E  F0A6         	movff	sqrtf@x,sqrtf@__xc8_float_word
  5909  000E64  C02F  F0A7         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  5910  000E68  C030  F0A8         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  5911  000E6C  C031  F0A9         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  5912  000E70  C0A6  F0BE         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  5913  000E74  C0A7  F0BF         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  5914  000E78  C0A8  F0C0         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  5915  000E7C  C0A9  F0C1         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  5916  000E80  0E00               	movlw	0
  5917  000E82  0100               	movlb	0	; () banked
  5918  000E84  15BE               	andwf	sqrtf@ix& (0+255),w,b
  5919  000E86  6E32               	movwf	??_sqrtf^0,c
  5920  000E88  0E00               	movlw	0
  5921  000E8A  15BF               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5922  000E8C  6E33               	movwf	(??_sqrtf+1)^0,c
  5923  000E8E  0E80               	movlw	128
  5924  000E90  15C0               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5925  000E92  6E34               	movwf	(??_sqrtf+2)^0,c
  5926  000E94  0E7F               	movlw	127
  5927  000E96  15C1               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5928  000E98  6E35               	movwf	(??_sqrtf+3)^0,c
  5929  000E9A  0E80               	movlw	128
  5930  000E9C  1834               	xorwf	(??_sqrtf+2)^0,w,c
  5931  000E9E  E109               	bnz	u4841
  5932  000EA0  0E7F               	movlw	127
  5933  000EA2  1835               	xorwf	(??_sqrtf+3)^0,w,c
  5934  000EA4  1032               	iorwf	??_sqrtf^0,w,c
  5935  000EA6  1033               	iorwf	(??_sqrtf+1)^0,w,c
  5936  000EA8  A4D8               	btfss	status,2,c
  5937  000EAA  EF59  F007         	goto	u4841
  5938  000EAE  EF5B  F007         	goto	u4840
  5939  000EB2                     u4841:
  5940  000EB2  EF89  F007         	goto	l4770
  5941  000EB6                     u4840:
  5942  000EB6                     
  5943                           ; BSR set to: 0
  5944  000EB6  C02E  F009         	movff	sqrtf@x,___flmul@a
  5945  000EBA  C02F  F00A         	movff	sqrtf@x+1,___flmul@a+1
  5946  000EBE  C030  F00B         	movff	sqrtf@x+2,___flmul@a+2
  5947  000EC2  C031  F00C         	movff	sqrtf@x+3,___flmul@a+3
  5948  000EC6  C02E  F005         	movff	sqrtf@x,___flmul@b
  5949  000ECA  C02F  F006         	movff	sqrtf@x+1,___flmul@b+1
  5950  000ECE  C030  F007         	movff	sqrtf@x+2,___flmul@b+2
  5951  000ED2  C031  F008         	movff	sqrtf@x+3,___flmul@b+3
  5952  000ED6  EC34  F00E         	call	___flmul	;wreg free
  5953  000EDA  C005  F01E         	movff	?___flmul,___fladd@b
  5954  000EDE  C006  F01F         	movff	?___flmul+1,___fladd@b+1
  5955  000EE2  C007  F020         	movff	?___flmul+2,___fladd@b+2
  5956  000EE6  C008  F021         	movff	?___flmul+3,___fladd@b+3
  5957  000EEA  C02E  F022         	movff	sqrtf@x,___fladd@a
  5958  000EEE  C02F  F023         	movff	sqrtf@x+1,___fladd@a+1
  5959  000EF2  C030  F024         	movff	sqrtf@x+2,___fladd@a+2
  5960  000EF6  C031  F025         	movff	sqrtf@x+3,___fladd@a+3
  5961  000EFA  EC90  F009         	call	___fladd	;wreg free
  5962  000EFE  C01E  F02E         	movff	?___fladd,?_sqrtf
  5963  000F02  C01F  F02F         	movff	?___fladd+1,?_sqrtf+1
  5964  000F06  C020  F030         	movff	?___fladd+2,?_sqrtf+2
  5965  000F0A  C021  F031         	movff	?___fladd+3,?_sqrtf+3
  5966  000F0E  EF8F  F009         	goto	l1213
  5967  000F12                     l4770:
  5968                           
  5969                           ; BSR set to: 0
  5970  000F12  BFC1               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  5971  000F14  EF98  F007         	goto	u4850
  5972  000F18  51C1               	movf	(sqrtf@ix+3)& (0+255),w,b
  5973  000F1A  11C0               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5974  000F1C  11BF               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5975  000F1E  E106               	bnz	u4851
  5976  000F20  05BE               	decf	sqrtf@ix& (0+255),w,b
  5977  000F22  B0D8               	btfsc	status,0,c
  5978  000F24  EF96  F007         	goto	u4851
  5979  000F28  EF98  F007         	goto	u4850
  5980  000F2C                     u4851:
  5981  000F2C  EFD4  F007         	goto	l4784
  5982  000F30                     u4850:
  5983  000F30                     
  5984                           ; BSR set to: 0
  5985  000F30  0EFF               	movlw	255
  5986  000F32  15BE               	andwf	sqrtf@ix& (0+255),w,b
  5987  000F34  6E32               	movwf	??_sqrtf^0,c
  5988  000F36  0EFF               	movlw	255
  5989  000F38  15BF               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5990  000F3A  6E33               	movwf	(??_sqrtf+1)^0,c
  5991  000F3C  0EFF               	movlw	255
  5992  000F3E  15C0               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5993  000F40  6E34               	movwf	(??_sqrtf+2)^0,c
  5994  000F42  0E7F               	movlw	127
  5995  000F44  15C1               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5996  000F46  6E35               	movwf	(??_sqrtf+3)^0,c
  5997  000F48  5032               	movf	??_sqrtf^0,w,c
  5998  000F4A  1033               	iorwf	(??_sqrtf+1)^0,w,c
  5999  000F4C  1034               	iorwf	(??_sqrtf+2)^0,w,c
  6000  000F4E  1035               	iorwf	(??_sqrtf+3)^0,w,c
  6001  000F50  A4D8               	btfss	status,2,c
  6002  000F52  EFAD  F007         	goto	u4861
  6003  000F56  EFAF  F007         	goto	u4860
  6004  000F5A                     u4861:
  6005  000F5A  EFB9  F007         	goto	l4776
  6006  000F5E                     u4860:
  6007  000F5E                     
  6008                           ; BSR set to: 0
  6009  000F5E  C02E  F02E         	movff	sqrtf@x,?_sqrtf
  6010  000F62  C02F  F02F         	movff	sqrtf@x+1,?_sqrtf+1
  6011  000F66  C030  F030         	movff	sqrtf@x+2,?_sqrtf+2
  6012  000F6A  C031  F031         	movff	sqrtf@x+3,?_sqrtf+3
  6013  000F6E  EF8F  F009         	goto	l1213
  6014  000F72                     l4776:
  6015                           
  6016                           ; BSR set to: 0
  6017  000F72  BFC1               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  6018  000F74  EFC0  F007         	goto	u4870
  6019  000F78  EFBE  F007         	goto	u4871
  6020  000F7C                     u4871:
  6021  000F7C  EFD4  F007         	goto	l4784
  6022  000F80                     u4870:
  6023  000F80                     
  6024                           ; BSR set to: 0
  6025  000F80  0E00               	movlw	0
  6026  000F82  6F75               	movwf	(_errno+1)& (0+255),b
  6027  000F84  0E21               	movlw	33
  6028  000F86  6F74               	movwf	_errno& (0+255),b
  6029  000F88                     
  6030                           ; BSR set to: 0
  6031  000F88  0E5D               	movlw	low (STR_1+19)
  6032  000F8A  6E05               	movwf	nanf@s^0,c
  6033  000F8C  0E0E               	movlw	high (STR_1+19)
  6034  000F8E  6E06               	movwf	(nanf@s+1)^0,c
  6035  000F90  EC43  F01E         	call	_nanf	;wreg free
  6036  000F94  C005  F02E         	movff	?_nanf,?_sqrtf
  6037  000F98  C006  F02F         	movff	?_nanf+1,?_sqrtf+1
  6038  000F9C  C007  F030         	movff	?_nanf+2,?_sqrtf+2
  6039  000FA0  C008  F031         	movff	?_nanf+3,?_sqrtf+3
  6040  000FA4  EF8F  F009         	goto	l1213
  6041  000FA8                     l4784:
  6042                           
  6043                           ; BSR set to: 0
  6044  000FA8  0E17               	movlw	23
  6045  000FAA  6E32               	movwf	??_sqrtf^0,c
  6046  000FAC  C0BE  F033         	movff	sqrtf@ix,??_sqrtf+1
  6047  000FB0  C0BF  F034         	movff	sqrtf@ix+1,??_sqrtf+2
  6048  000FB4  C0C0  F035         	movff	sqrtf@ix+2,??_sqrtf+3
  6049  000FB8  C0C1  F036         	movff	sqrtf@ix+3,??_sqrtf+4
  6050  000FBC                     u4885:
  6051  000FBC  6632               	tstfsz	??_sqrtf^0,c
  6052  000FBE  EFE3  F007         	goto	u4886
  6053  000FC2  EFEB  F007         	goto	u4887
  6054  000FC6                     u4886:
  6055  000FC6  3436               	rlcf	(??_sqrtf+4)^0,w,c
  6056  000FC8  3236               	rrcf	(??_sqrtf+4)^0,f,c
  6057  000FCA  3235               	rrcf	(??_sqrtf+3)^0,f,c
  6058  000FCC  3234               	rrcf	(??_sqrtf+2)^0,f,c
  6059  000FCE  3233               	rrcf	(??_sqrtf+1)^0,f,c
  6060  000FD0  2E32               	decfsz	??_sqrtf^0,f,c
  6061  000FD2  EFDE  F007         	goto	u4885
  6062  000FD6                     u4887:
  6063  000FD6  C033  F0B6         	movff	??_sqrtf+1,sqrtf@m
  6064  000FDA  C034  F0B7         	movff	??_sqrtf+2,sqrtf@m+1
  6065  000FDE  C035  F0B8         	movff	??_sqrtf+3,sqrtf@m+2
  6066  000FE2  C036  F0B9         	movff	??_sqrtf+4,sqrtf@m+3
  6067  000FE6  0100               	movlb	0	; () banked
  6068  000FE8  51B6               	movf	sqrtf@m& (0+255),w,b
  6069  000FEA  11B7               	iorwf	(sqrtf@m+1)& (0+255),w,b
  6070  000FEC  11B8               	iorwf	(sqrtf@m+2)& (0+255),w,b
  6071  000FEE  11B9               	iorwf	(sqrtf@m+3)& (0+255),w,b
  6072  000FF0  A4D8               	btfss	status,2,c
  6073  000FF2  EFFD  F007         	goto	u4891
  6074  000FF6  EFFF  F007         	goto	u4890
  6075  000FFA                     u4891:
  6076  000FFA  EF2F  F008         	goto	l1217
  6077  000FFE                     u4890:
  6078  000FFE                     
  6079                           ; BSR set to: 0
  6080  000FFE  0E00               	movlw	0
  6081  001000  6FA2               	movwf	sqrtf@i& (0+255),b
  6082  001002  0E00               	movlw	0
  6083  001004  6FA3               	movwf	(sqrtf@i+1)& (0+255),b
  6084  001006  0E00               	movlw	0
  6085  001008  6FA4               	movwf	(sqrtf@i+2)& (0+255),b
  6086  00100A  0E00               	movlw	0
  6087  00100C  6FA5               	movwf	(sqrtf@i+3)& (0+255),b
  6088  00100E  EF14  F008         	goto	l4792
  6089  001012                     l4788:
  6090                           
  6091                           ; BSR set to: 0
  6092  001012  90D8               	bcf	status,0,c
  6093  001014  37BE               	rlcf	sqrtf@ix& (0+255),f,b
  6094  001016  37BF               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  6095  001018  37C0               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  6096  00101A  37C1               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  6097  00101C                     
  6098                           ; BSR set to: 0
  6099  00101C  0E01               	movlw	1
  6100  00101E  27A2               	addwf	sqrtf@i& (0+255),f,b
  6101  001020  0E00               	movlw	0
  6102  001022  23A3               	addwfc	(sqrtf@i+1)& (0+255),f,b
  6103  001024  23A4               	addwfc	(sqrtf@i+2)& (0+255),f,b
  6104  001026  23A5               	addwfc	(sqrtf@i+3)& (0+255),f,b
  6105  001028                     l4792:
  6106                           
  6107                           ; BSR set to: 0
  6108  001028  AFC0               	btfss	(sqrtf@ix+2)& (0+255),7,b
  6109  00102A  EF19  F008         	goto	u4901
  6110  00102E  EF1B  F008         	goto	u4900
  6111  001032                     u4901:
  6112  001032  EF09  F008         	goto	l4788
  6113  001036                     u4900:
  6114  001036                     
  6115                           ; BSR set to: 0
  6116  001036  0EFF               	movlw	255
  6117  001038  25A2               	addwf	sqrtf@i& (0+255),w,b
  6118  00103A  6E32               	movwf	??_sqrtf^0,c
  6119  00103C  0EFF               	movlw	255
  6120  00103E  21A3               	addwfc	(sqrtf@i+1)& (0+255),w,b
  6121  001040  6E33               	movwf	(??_sqrtf+1)^0,c
  6122  001042  0EFF               	movlw	255
  6123  001044  21A4               	addwfc	(sqrtf@i+2)& (0+255),w,b
  6124  001046  6E34               	movwf	(??_sqrtf+2)^0,c
  6125  001048  0EFF               	movlw	255
  6126  00104A  21A5               	addwfc	(sqrtf@i+3)& (0+255),w,b
  6127  00104C  6E35               	movwf	(??_sqrtf+3)^0,c
  6128  00104E  5032               	movf	??_sqrtf^0,w,c
  6129  001050  5FB6               	subwf	sqrtf@m& (0+255),f,b
  6130  001052  5033               	movf	(??_sqrtf+1)^0,w,c
  6131  001054  5BB7               	subwfb	(sqrtf@m+1)& (0+255),f,b
  6132  001056  5034               	movf	(??_sqrtf+2)^0,w,c
  6133  001058  5BB8               	subwfb	(sqrtf@m+2)& (0+255),f,b
  6134  00105A  5035               	movf	(??_sqrtf+3)^0,w,c
  6135  00105C  5BB9               	subwfb	(sqrtf@m+3)& (0+255),f,b
  6136  00105E                     l1217:
  6137                           
  6138                           ; BSR set to: 0
  6139  00105E  0E81               	movlw	129
  6140  001060  27B6               	addwf	sqrtf@m& (0+255),f,b
  6141  001062  0EFF               	movlw	255
  6142  001064  23B7               	addwfc	(sqrtf@m+1)& (0+255),f,b
  6143  001066  0EFF               	movlw	255
  6144  001068  23B8               	addwfc	(sqrtf@m+2)& (0+255),f,b
  6145  00106A  0EFF               	movlw	255
  6146  00106C  23B9               	addwfc	(sqrtf@m+3)& (0+255),f,b
  6147  00106E  0EFF               	movlw	255
  6148  001070  15BE               	andwf	sqrtf@ix& (0+255),w,b
  6149  001072  6E32               	movwf	??_sqrtf^0,c
  6150  001074  0EFF               	movlw	255
  6151  001076  15BF               	andwf	(sqrtf@ix+1)& (0+255),w,b
  6152  001078  6E33               	movwf	(??_sqrtf+1)^0,c
  6153  00107A  0E7F               	movlw	127
  6154  00107C  15C0               	andwf	(sqrtf@ix+2)& (0+255),w,b
  6155  00107E  6E34               	movwf	(??_sqrtf+2)^0,c
  6156  001080  0E00               	movlw	0
  6157  001082  15C1               	andwf	(sqrtf@ix+3)& (0+255),w,b
  6158  001084  6E35               	movwf	(??_sqrtf+3)^0,c
  6159  001086  0E00               	movlw	0
  6160  001088  1032               	iorwf	??_sqrtf^0,w,c
  6161  00108A  6FBE               	movwf	sqrtf@ix& (0+255),b
  6162  00108C  0E00               	movlw	0
  6163  00108E  1033               	iorwf	(??_sqrtf+1)^0,w,c
  6164  001090  6FBF               	movwf	(sqrtf@ix+1)& (0+255),b
  6165  001092  0E80               	movlw	128
  6166  001094  1034               	iorwf	(??_sqrtf+2)^0,w,c
  6167  001096  6FC0               	movwf	(sqrtf@ix+2)& (0+255),b
  6168  001098  0E00               	movlw	0
  6169  00109A  1035               	iorwf	(??_sqrtf+3)^0,w,c
  6170  00109C  6FC1               	movwf	(sqrtf@ix+3)& (0+255),b
  6171  00109E                     
  6172                           ; BSR set to: 0
  6173  00109E  A1B6               	btfss	sqrtf@m& (0+255),0,b
  6174  0010A0  EF54  F008         	goto	u4911
  6175  0010A4  EF56  F008         	goto	u4910
  6176  0010A8                     u4911:
  6177  0010A8  EF5E  F008         	goto	l1221
  6178  0010AC                     u4910:
  6179  0010AC                     
  6180                           ; BSR set to: 0
  6181  0010AC  51BE               	movf	sqrtf@ix& (0+255),w,b
  6182  0010AE  27BE               	addwf	sqrtf@ix& (0+255),f,b
  6183  0010B0  51BF               	movf	(sqrtf@ix+1)& (0+255),w,b
  6184  0010B2  23BF               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  6185  0010B4  51C0               	movf	(sqrtf@ix+2)& (0+255),w,b
  6186  0010B6  23C0               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  6187  0010B8  51C1               	movf	(sqrtf@ix+3)& (0+255),w,b
  6188  0010BA  23C1               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  6189  0010BC                     l1221:
  6190                           
  6191                           ; BSR set to: 0
  6192  0010BC  35B9               	rlcf	(sqrtf@m+3)& (0+255),w,b
  6193  0010BE  33B9               	rrcf	(sqrtf@m+3)& (0+255),f,b
  6194  0010C0  33B8               	rrcf	(sqrtf@m+2)& (0+255),f,b
  6195  0010C2  33B7               	rrcf	(sqrtf@m+1)& (0+255),f,b
  6196  0010C4  33B6               	rrcf	sqrtf@m& (0+255),f,b
  6197  0010C6  51BE               	movf	sqrtf@ix& (0+255),w,b
  6198  0010C8  27BE               	addwf	sqrtf@ix& (0+255),f,b
  6199  0010CA  51BF               	movf	(sqrtf@ix+1)& (0+255),w,b
  6200  0010CC  23BF               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  6201  0010CE  51C0               	movf	(sqrtf@ix+2)& (0+255),w,b
  6202  0010D0  23C0               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  6203  0010D2  51C1               	movf	(sqrtf@ix+3)& (0+255),w,b
  6204  0010D4  23C1               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  6205  0010D6                     
  6206                           ; BSR set to: 0
  6207  0010D6  0E00               	movlw	0
  6208  0010D8  6F9E               	movwf	sqrtf@s& (0+255),b
  6209  0010DA  0E00               	movlw	0
  6210  0010DC  6F9F               	movwf	(sqrtf@s+1)& (0+255),b
  6211  0010DE  0E00               	movlw	0
  6212  0010E0  6FA0               	movwf	(sqrtf@s+2)& (0+255),b
  6213  0010E2  0E00               	movlw	0
  6214  0010E4  6FA1               	movwf	(sqrtf@s+3)& (0+255),b
  6215  0010E6  C09E  F0AA         	movff	sqrtf@s,sqrtf@q
  6216  0010EA  C09F  F0AB         	movff	sqrtf@s+1,sqrtf@q+1
  6217  0010EE  C0A0  F0AC         	movff	sqrtf@s+2,sqrtf@q+2
  6218  0010F2  C0A1  F0AD         	movff	sqrtf@s+3,sqrtf@q+3
  6219  0010F6                     
  6220                           ; BSR set to: 0
  6221  0010F6  0E00               	movlw	0
  6222  0010F8  6FBA               	movwf	sqrtf@r& (0+255),b
  6223  0010FA  0E00               	movlw	0
  6224  0010FC  6FBB               	movwf	(sqrtf@r+1)& (0+255),b
  6225  0010FE  0E00               	movlw	0
  6226  001100  6FBC               	movwf	(sqrtf@r+2)& (0+255),b
  6227  001102  0E01               	movlw	1
  6228  001104  6FBD               	movwf	(sqrtf@r+3)& (0+255),b
  6229  001106  EFCD  F008         	goto	l4810
  6230  00110A                     l4804:
  6231                           
  6232                           ; BSR set to: 0
  6233  00110A  519E               	movf	sqrtf@s& (0+255),w,b
  6234  00110C  25BA               	addwf	sqrtf@r& (0+255),w,b
  6235  00110E  6FAE               	movwf	sqrtf@t& (0+255),b
  6236  001110  519F               	movf	(sqrtf@s+1)& (0+255),w,b
  6237  001112  21BB               	addwfc	(sqrtf@r+1)& (0+255),w,b
  6238  001114  6FAF               	movwf	(sqrtf@t+1)& (0+255),b
  6239  001116  51A0               	movf	(sqrtf@s+2)& (0+255),w,b
  6240  001118  21BC               	addwfc	(sqrtf@r+2)& (0+255),w,b
  6241  00111A  6FB0               	movwf	(sqrtf@t+2)& (0+255),b
  6242  00111C  51A1               	movf	(sqrtf@s+3)& (0+255),w,b
  6243  00111E  21BD               	addwfc	(sqrtf@r+3)& (0+255),w,b
  6244  001120  6FB1               	movwf	(sqrtf@t+3)& (0+255),b
  6245  001122  51AE               	movf	sqrtf@t& (0+255),w,b
  6246  001124  5DBE               	subwf	sqrtf@ix& (0+255),w,b
  6247  001126  51AF               	movf	(sqrtf@t+1)& (0+255),w,b
  6248  001128  59BF               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  6249  00112A  51B0               	movf	(sqrtf@t+2)& (0+255),w,b
  6250  00112C  59C0               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  6251  00112E  51C1               	movf	(sqrtf@ix+3)& (0+255),w,b
  6252  001130  0A80               	xorlw	128
  6253  001132  6E32               	movwf	??_sqrtf^0,c
  6254  001134  51B1               	movf	(sqrtf@t+3)& (0+255),w,b
  6255  001136  0A80               	xorlw	128
  6256  001138  5832               	subwfb	??_sqrtf^0,w,c
  6257  00113A  A0D8               	btfss	status,0,c
  6258  00113C  EFA2  F008         	goto	u4921
  6259  001140  EFA4  F008         	goto	u4920
  6260  001144                     u4921:
  6261  001144  EFC0  F008         	goto	l1224
  6262  001148                     u4920:
  6263  001148                     
  6264                           ; BSR set to: 0
  6265  001148  51AE               	movf	sqrtf@t& (0+255),w,b
  6266  00114A  25BA               	addwf	sqrtf@r& (0+255),w,b
  6267  00114C  6F9E               	movwf	sqrtf@s& (0+255),b
  6268  00114E  51AF               	movf	(sqrtf@t+1)& (0+255),w,b
  6269  001150  21BB               	addwfc	(sqrtf@r+1)& (0+255),w,b
  6270  001152  6F9F               	movwf	(sqrtf@s+1)& (0+255),b
  6271  001154  51B0               	movf	(sqrtf@t+2)& (0+255),w,b
  6272  001156  21BC               	addwfc	(sqrtf@r+2)& (0+255),w,b
  6273  001158  6FA0               	movwf	(sqrtf@s+2)& (0+255),b
  6274  00115A  51B1               	movf	(sqrtf@t+3)& (0+255),w,b
  6275  00115C  21BD               	addwfc	(sqrtf@r+3)& (0+255),w,b
  6276  00115E  6FA1               	movwf	(sqrtf@s+3)& (0+255),b
  6277  001160  51AE               	movf	sqrtf@t& (0+255),w,b
  6278  001162  5FBE               	subwf	sqrtf@ix& (0+255),f,b
  6279  001164  51AF               	movf	(sqrtf@t+1)& (0+255),w,b
  6280  001166  5BBF               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  6281  001168  51B0               	movf	(sqrtf@t+2)& (0+255),w,b
  6282  00116A  5BC0               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  6283  00116C  51B1               	movf	(sqrtf@t+3)& (0+255),w,b
  6284  00116E  5BC1               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  6285  001170  51BA               	movf	sqrtf@r& (0+255),w,b
  6286  001172  27AA               	addwf	sqrtf@q& (0+255),f,b
  6287  001174  51BB               	movf	(sqrtf@r+1)& (0+255),w,b
  6288  001176  23AB               	addwfc	(sqrtf@q+1)& (0+255),f,b
  6289  001178  51BC               	movf	(sqrtf@r+2)& (0+255),w,b
  6290  00117A  23AC               	addwfc	(sqrtf@q+2)& (0+255),f,b
  6291  00117C  51BD               	movf	(sqrtf@r+3)& (0+255),w,b
  6292  00117E  23AD               	addwfc	(sqrtf@q+3)& (0+255),f,b
  6293  001180                     l1224:
  6294                           
  6295                           ; BSR set to: 0
  6296  001180  51BE               	movf	sqrtf@ix& (0+255),w,b
  6297  001182  27BE               	addwf	sqrtf@ix& (0+255),f,b
  6298  001184  51BF               	movf	(sqrtf@ix+1)& (0+255),w,b
  6299  001186  23BF               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  6300  001188  51C0               	movf	(sqrtf@ix+2)& (0+255),w,b
  6301  00118A  23C0               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  6302  00118C  51C1               	movf	(sqrtf@ix+3)& (0+255),w,b
  6303  00118E  23C1               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  6304  001190                     
  6305                           ; BSR set to: 0
  6306  001190  90D8               	bcf	status,0,c
  6307  001192  33BD               	rrcf	(sqrtf@r+3)& (0+255),f,b
  6308  001194  33BC               	rrcf	(sqrtf@r+2)& (0+255),f,b
  6309  001196  33BB               	rrcf	(sqrtf@r+1)& (0+255),f,b
  6310  001198  33BA               	rrcf	sqrtf@r& (0+255),f,b
  6311  00119A                     l4810:
  6312                           
  6313                           ; BSR set to: 0
  6314  00119A  51BA               	movf	sqrtf@r& (0+255),w,b
  6315  00119C  11BB               	iorwf	(sqrtf@r+1)& (0+255),w,b
  6316  00119E  11BC               	iorwf	(sqrtf@r+2)& (0+255),w,b
  6317  0011A0  11BD               	iorwf	(sqrtf@r+3)& (0+255),w,b
  6318  0011A2  A4D8               	btfss	status,2,c
  6319  0011A4  EFD6  F008         	goto	u4931
  6320  0011A8  EFD8  F008         	goto	u4930
  6321  0011AC                     u4931:
  6322  0011AC  EF85  F008         	goto	l4804
  6323  0011B0                     u4930:
  6324  0011B0                     
  6325                           ; BSR set to: 0
  6326  0011B0  51BE               	movf	sqrtf@ix& (0+255),w,b
  6327  0011B2  11BF               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  6328  0011B4  11C0               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  6329  0011B6  11C1               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  6330  0011B8  B4D8               	btfsc	status,2,c
  6331  0011BA  EFE1  F008         	goto	u4941
  6332  0011BE  EFE3  F008         	goto	u4940
  6333  0011C2                     u4941:
  6334  0011C2  EF44  F009         	goto	l1226
  6335  0011C6                     u4940:
  6336  0011C6                     
  6337                           ; BSR set to: 0
  6338  0011C6  0E00               	movlw	0
  6339  0011C8  6FB2               	movwf	sqrtf@z& (0+255),b
  6340  0011CA  0E00               	movlw	0
  6341  0011CC  6FB3               	movwf	(sqrtf@z+1)& (0+255),b
  6342  0011CE  0E80               	movlw	128
  6343  0011D0  6FB4               	movwf	(sqrtf@z+2)& (0+255),b
  6344  0011D2  0E3F               	movlw	63
  6345  0011D4  6FB5               	movwf	(sqrtf@z+3)& (0+255),b
  6346  0011D6                     
  6347                           ; BSR set to: 0
  6348  0011D6  C0B2  F005         	movff	sqrtf@z,___flge@ff1
  6349  0011DA  C0B3  F006         	movff	sqrtf@z+1,___flge@ff1+1
  6350  0011DE  C0B4  F007         	movff	sqrtf@z+2,___flge@ff1+2
  6351  0011E2  C0B5  F008         	movff	sqrtf@z+3,___flge@ff1+3
  6352  0011E6  0E00               	movlw	0
  6353  0011E8  6E09               	movwf	___flge@ff2^0,c
  6354  0011EA  0E00               	movlw	0
  6355  0011EC  6E0A               	movwf	(___flge@ff2+1)^0,c
  6356  0011EE  0E80               	movlw	128
  6357  0011F0  6E0B               	movwf	(___flge@ff2+2)^0,c
  6358  0011F2  0E3F               	movlw	63
  6359  0011F4  6E0C               	movwf	(___flge@ff2+3)^0,c
  6360  0011F6  EC0F  F01A         	call	___flge	;wreg free
  6361  0011FA  A0D8               	btfss	status,0,c
  6362  0011FC  EF02  F009         	goto	u4951
  6363  001200  EF04  F009         	goto	u4950
  6364  001204                     u4951:
  6365  001204  EF44  F009         	goto	l1226
  6366  001208                     u4950:
  6367  001208  0E00               	movlw	0
  6368  00120A  0100               	movlb	0	; () banked
  6369  00120C  6FB2               	movwf	sqrtf@z& (0+255),b
  6370  00120E  0E00               	movlw	0
  6371  001210  6FB3               	movwf	(sqrtf@z+1)& (0+255),b
  6372  001212  0E80               	movlw	128
  6373  001214  6FB4               	movwf	(sqrtf@z+2)& (0+255),b
  6374  001216  0E3F               	movlw	63
  6375  001218  6FB5               	movwf	(sqrtf@z+3)& (0+255),b
  6376  00121A                     
  6377                           ; BSR set to: 0
  6378  00121A  0E00               	movlw	0
  6379  00121C  6E05               	movwf	___flge@ff1^0,c
  6380  00121E  0E00               	movlw	0
  6381  001220  6E06               	movwf	(___flge@ff1+1)^0,c
  6382  001222  0E80               	movlw	128
  6383  001224  6E07               	movwf	(___flge@ff1+2)^0,c
  6384  001226  0E3F               	movlw	63
  6385  001228  6E08               	movwf	(___flge@ff1+3)^0,c
  6386  00122A  C0B2  F009         	movff	sqrtf@z,___flge@ff2
  6387  00122E  C0B3  F00A         	movff	sqrtf@z+1,___flge@ff2+1
  6388  001232  C0B4  F00B         	movff	sqrtf@z+2,___flge@ff2+2
  6389  001236  C0B5  F00C         	movff	sqrtf@z+3,___flge@ff2+3
  6390  00123A  EC0F  F01A         	call	___flge	;wreg free
  6391  00123E  B0D8               	btfsc	status,0,c
  6392  001240  EF24  F009         	goto	u4961
  6393  001244  EF26  F009         	goto	u4960
  6394  001248                     u4961:
  6395  001248  EF2F  F009         	goto	l4824
  6396  00124C                     u4960:
  6397  00124C  0E02               	movlw	2
  6398  00124E  0100               	movlb	0	; () banked
  6399  001250  27AA               	addwf	sqrtf@q& (0+255),f,b
  6400  001252  0E00               	movlw	0
  6401  001254  23AB               	addwfc	(sqrtf@q+1)& (0+255),f,b
  6402  001256  23AC               	addwfc	(sqrtf@q+2)& (0+255),f,b
  6403  001258  23AD               	addwfc	(sqrtf@q+3)& (0+255),f,b
  6404  00125A  EF44  F009         	goto	l1226
  6405  00125E                     l4824:
  6406  00125E  0E01               	movlw	1
  6407  001260  0100               	movlb	0	; () banked
  6408  001262  15AA               	andwf	sqrtf@q& (0+255),w,b
  6409  001264  6E32               	movwf	??_sqrtf^0,c
  6410  001266  0E00               	movlw	0
  6411  001268  15AB               	andwf	(sqrtf@q+1)& (0+255),w,b
  6412  00126A  6E33               	movwf	(??_sqrtf+1)^0,c
  6413  00126C  0E00               	movlw	0
  6414  00126E  15AC               	andwf	(sqrtf@q+2)& (0+255),w,b
  6415  001270  6E34               	movwf	(??_sqrtf+2)^0,c
  6416  001272  0E00               	movlw	0
  6417  001274  15AD               	andwf	(sqrtf@q+3)& (0+255),w,b
  6418  001276  6E35               	movwf	(??_sqrtf+3)^0,c
  6419  001278  5032               	movf	??_sqrtf^0,w,c
  6420  00127A  27AA               	addwf	sqrtf@q& (0+255),f,b
  6421  00127C  5033               	movf	(??_sqrtf+1)^0,w,c
  6422  00127E  23AB               	addwfc	(sqrtf@q+1)& (0+255),f,b
  6423  001280  5034               	movf	(??_sqrtf+2)^0,w,c
  6424  001282  23AC               	addwfc	(sqrtf@q+2)& (0+255),f,b
  6425  001284  5035               	movf	(??_sqrtf+3)^0,w,c
  6426  001286  23AD               	addwfc	(sqrtf@q+3)& (0+255),f,b
  6427  001288                     l1226:
  6428  001288  C0AA  F032         	movff	sqrtf@q,??_sqrtf
  6429  00128C  C0AB  F033         	movff	sqrtf@q+1,??_sqrtf+1
  6430  001290  C0AC  F034         	movff	sqrtf@q+2,??_sqrtf+2
  6431  001294  C0AD  F035         	movff	sqrtf@q+3,??_sqrtf+3
  6432  001298  3435               	rlcf	(??_sqrtf+3)^0,w,c
  6433  00129A  3235               	rrcf	(??_sqrtf+3)^0,f,c
  6434  00129C  3234               	rrcf	(??_sqrtf+2)^0,f,c
  6435  00129E  3233               	rrcf	(??_sqrtf+1)^0,f,c
  6436  0012A0  3232               	rrcf	??_sqrtf^0,f,c
  6437  0012A2  0E00               	movlw	0
  6438  0012A4  2432               	addwf	??_sqrtf^0,w,c
  6439  0012A6  0100               	movlb	0	; () banked
  6440  0012A8  6FBE               	movwf	sqrtf@ix& (0+255),b
  6441  0012AA  0E00               	movlw	0
  6442  0012AC  2033               	addwfc	(??_sqrtf+1)^0,w,c
  6443  0012AE  6FBF               	movwf	(sqrtf@ix+1)& (0+255),b
  6444  0012B0  0E00               	movlw	0
  6445  0012B2  2034               	addwfc	(??_sqrtf+2)^0,w,c
  6446  0012B4  6FC0               	movwf	(sqrtf@ix+2)& (0+255),b
  6447  0012B6  0E3F               	movlw	63
  6448  0012B8  2035               	addwfc	(??_sqrtf+3)^0,w,c
  6449  0012BA  6FC1               	movwf	(sqrtf@ix+3)& (0+255),b
  6450  0012BC  C0B6  F032         	movff	sqrtf@m,??_sqrtf
  6451  0012C0  C0B7  F033         	movff	sqrtf@m+1,??_sqrtf+1
  6452  0012C4  C0B8  F034         	movff	sqrtf@m+2,??_sqrtf+2
  6453  0012C8  C0B9  F035         	movff	sqrtf@m+3,??_sqrtf+3
  6454  0012CC  0E17               	movlw	23
  6455  0012CE                     u4975:
  6456  0012CE  90D8               	bcf	status,0,c
  6457  0012D0  3632               	rlcf	??_sqrtf^0,f,c
  6458  0012D2  3633               	rlcf	(??_sqrtf+1)^0,f,c
  6459  0012D4  3634               	rlcf	(??_sqrtf+2)^0,f,c
  6460  0012D6  3635               	rlcf	(??_sqrtf+3)^0,f,c
  6461  0012D8  2EE8               	decfsz	wreg,f,c
  6462  0012DA  EF67  F009         	goto	u4975
  6463  0012DE  5032               	movf	??_sqrtf^0,w,c
  6464  0012E0  27BE               	addwf	sqrtf@ix& (0+255),f,b
  6465  0012E2  5033               	movf	(??_sqrtf+1)^0,w,c
  6466  0012E4  23BF               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  6467  0012E6  5034               	movf	(??_sqrtf+2)^0,w,c
  6468  0012E8  23C0               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  6469  0012EA  5035               	movf	(??_sqrtf+3)^0,w,c
  6470  0012EC  23C1               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  6471  0012EE                     
  6472                           ; BSR set to: 0
  6473  0012EE  C0BE  F0A6         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  6474  0012F2  C0BF  F0A7         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  6475  0012F6  C0C0  F0A8         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  6476  0012FA  C0C1  F0A9         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  6477  0012FE                     
  6478                           ; BSR set to: 0
  6479  0012FE  C0A6  F0B2         	movff	sqrtf@__xc8_float_word,sqrtf@z
  6480  001302  C0A7  F0B3         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  6481  001306  C0A8  F0B4         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  6482  00130A  C0A9  F0B5         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  6483  00130E                     
  6484                           ; BSR set to: 0
  6485  00130E  C0B2  F02E         	movff	sqrtf@z,?_sqrtf
  6486  001312  C0B3  F02F         	movff	sqrtf@z+1,?_sqrtf+1
  6487  001316  C0B4  F030         	movff	sqrtf@z+2,?_sqrtf+2
  6488  00131A  C0B5  F031         	movff	sqrtf@z+3,?_sqrtf+3
  6489  00131E                     l1213:
  6490  00131E  0012               	return		;funcret
  6491  001320                     __end_of_sqrtf:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function _nanf *****************
  6495 ;; Defined at:
  6496 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nanf.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6499 ;;		 -> STR_5(1), 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  u               4    8[COMRAM] struct .
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  4    4[COMRAM] float 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;Total ram usage:        8 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; Hardware stack levels required when called: 2
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_sqrtf
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text27
  6526  003C86                     __ptext27:
  6527                           	callstack 0
  6528  003C86                     _nanf:
  6529                           	callstack 26
  6530  003C86  0EFF               	movlw	255
  6531  003C88  6E09               	movwf	nanf@u^0,c
  6532  003C8A  0EFF               	movlw	255
  6533  003C8C  6E0A               	movwf	(nanf@u+1)^0,c
  6534  003C8E  0EFF               	movlw	255
  6535  003C90  6E0B               	movwf	(nanf@u+2)^0,c
  6536  003C92  0E7F               	movlw	127
  6537  003C94  6E0C               	movwf	(nanf@u+3)^0,c
  6538  003C96  C009  F005         	movff	nanf@u,?_nanf
  6539  003C9A  C00A  F006         	movff	nanf@u+1,?_nanf+1
  6540  003C9E  C00B  F007         	movff	nanf@u+2,?_nanf+2
  6541  003CA2  C00C  F008         	movff	nanf@u+3,?_nanf+3
  6542  003CA6  0012               	return		;funcret
  6543  003CA8                     __end_of_nanf:
  6544                           	callstack 0
  6545                           
  6546 ;; *************** function ___flmul *****************
  6547 ;; Defined at:
  6548 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  b               4    4[COMRAM] float 
  6551 ;;  a               4    8[COMRAM] float 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  prod            4   23[COMRAM] struct .
  6554 ;;  grs             4   18[COMRAM] unsigned long 
  6555 ;;  temp            2   27[COMRAM] struct .
  6556 ;;  bexp            1   22[COMRAM] unsigned char 
  6557 ;;  aexp            1   17[COMRAM] unsigned char 
  6558 ;;  sign            1   16[COMRAM] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  4    4[COMRAM] unsigned char 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0, prodl, prodh
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6568 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6571 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;Total ram usage:       25 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 2
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_sqrtf
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text28
  6583  001C68                     __ptext28:
  6584                           	callstack 0
  6585  001C68                     ___flmul:
  6586                           	callstack 26
  6587  001C68  5008               	movf	(___flmul@b+3)^0,w,c
  6588  001C6A  0B80               	andlw	128
  6589  001C6C  6E11               	movwf	___flmul@sign^0,c
  6590  001C6E  5008               	movf	(___flmul@b+3)^0,w,c
  6591  001C70  2408               	addwf	(___flmul@b+3)^0,w,c
  6592  001C72  6E17               	movwf	___flmul@bexp^0,c
  6593  001C74  AE07               	btfss	(___flmul@b+2)^0,7,c
  6594  001C76  EF3F  F00E         	goto	u4561
  6595  001C7A  EF41  F00E         	goto	u4560
  6596  001C7E                     u4561:
  6597  001C7E  EF42  F00E         	goto	l4532
  6598  001C82                     u4560:
  6599  001C82  8017               	bsf	___flmul@bexp^0,0,c
  6600  001C84                     l4532:
  6601  001C84  5017               	movf	___flmul@bexp^0,w,c
  6602  001C86  B4D8               	btfsc	status,2,c
  6603  001C88  EF48  F00E         	goto	u4571
  6604  001C8C  EF4A  F00E         	goto	u4570
  6605  001C90                     u4571:
  6606  001C90  EF5D  F00E         	goto	l4540
  6607  001C94                     u4570:
  6608  001C94  2817               	incf	___flmul@bexp^0,w,c
  6609  001C96  A4D8               	btfss	status,2,c
  6610  001C98  EF50  F00E         	goto	u4581
  6611  001C9C  EF52  F00E         	goto	u4580
  6612  001CA0                     u4581:
  6613  001CA0  EF5A  F00E         	goto	l4538
  6614  001CA4                     u4580:
  6615  001CA4  0E00               	movlw	0
  6616  001CA6  6E05               	movwf	___flmul@b^0,c
  6617  001CA8  0E00               	movlw	0
  6618  001CAA  6E06               	movwf	(___flmul@b+1)^0,c
  6619  001CAC  0E00               	movlw	0
  6620  001CAE  6E07               	movwf	(___flmul@b+2)^0,c
  6621  001CB0  0E00               	movlw	0
  6622  001CB2  6E08               	movwf	(___flmul@b+3)^0,c
  6623  001CB4                     l4538:
  6624  001CB4  8E07               	bsf	(___flmul@b+2)^0,7,c
  6625  001CB6  EF65  F00E         	goto	l4542
  6626  001CBA                     l4540:
  6627  001CBA  0E00               	movlw	0
  6628  001CBC  6E05               	movwf	___flmul@b^0,c
  6629  001CBE  0E00               	movlw	0
  6630  001CC0  6E06               	movwf	(___flmul@b+1)^0,c
  6631  001CC2  0E00               	movlw	0
  6632  001CC4  6E07               	movwf	(___flmul@b+2)^0,c
  6633  001CC6  0E00               	movlw	0
  6634  001CC8  6E08               	movwf	(___flmul@b+3)^0,c
  6635  001CCA                     l4542:
  6636  001CCA  500C               	movf	(___flmul@a+3)^0,w,c
  6637  001CCC  0B80               	andlw	128
  6638  001CCE  1A11               	xorwf	___flmul@sign^0,f,c
  6639  001CD0  500C               	movf	(___flmul@a+3)^0,w,c
  6640  001CD2  240C               	addwf	(___flmul@a+3)^0,w,c
  6641  001CD4  6E12               	movwf	___flmul@aexp^0,c
  6642  001CD6  AE0B               	btfss	(___flmul@a+2)^0,7,c
  6643  001CD8  EF70  F00E         	goto	u4591
  6644  001CDC  EF72  F00E         	goto	u4590
  6645  001CE0                     u4591:
  6646  001CE0  EF73  F00E         	goto	l4550
  6647  001CE4                     u4590:
  6648  001CE4  8012               	bsf	___flmul@aexp^0,0,c
  6649  001CE6                     l4550:
  6650  001CE6  5012               	movf	___flmul@aexp^0,w,c
  6651  001CE8  B4D8               	btfsc	status,2,c
  6652  001CEA  EF79  F00E         	goto	u4601
  6653  001CEE  EF7B  F00E         	goto	u4600
  6654  001CF2                     u4601:
  6655  001CF2  EF8E  F00E         	goto	l4558
  6656  001CF6                     u4600:
  6657  001CF6  2812               	incf	___flmul@aexp^0,w,c
  6658  001CF8  A4D8               	btfss	status,2,c
  6659  001CFA  EF81  F00E         	goto	u4611
  6660  001CFE  EF83  F00E         	goto	u4610
  6661  001D02                     u4611:
  6662  001D02  EF8B  F00E         	goto	l4556
  6663  001D06                     u4610:
  6664  001D06  0E00               	movlw	0
  6665  001D08  6E09               	movwf	___flmul@a^0,c
  6666  001D0A  0E00               	movlw	0
  6667  001D0C  6E0A               	movwf	(___flmul@a+1)^0,c
  6668  001D0E  0E00               	movlw	0
  6669  001D10  6E0B               	movwf	(___flmul@a+2)^0,c
  6670  001D12  0E00               	movlw	0
  6671  001D14  6E0C               	movwf	(___flmul@a+3)^0,c
  6672  001D16                     l4556:
  6673  001D16  8E0B               	bsf	(___flmul@a+2)^0,7,c
  6674  001D18  EF96  F00E         	goto	l1035
  6675  001D1C                     l4558:
  6676  001D1C  0E00               	movlw	0
  6677  001D1E  6E09               	movwf	___flmul@a^0,c
  6678  001D20  0E00               	movlw	0
  6679  001D22  6E0A               	movwf	(___flmul@a+1)^0,c
  6680  001D24  0E00               	movlw	0
  6681  001D26  6E0B               	movwf	(___flmul@a+2)^0,c
  6682  001D28  0E00               	movlw	0
  6683  001D2A  6E0C               	movwf	(___flmul@a+3)^0,c
  6684  001D2C                     l1035:
  6685  001D2C  5012               	movf	___flmul@aexp^0,w,c
  6686  001D2E  B4D8               	btfsc	status,2,c
  6687  001D30  EF9C  F00E         	goto	u4621
  6688  001D34  EF9E  F00E         	goto	u4620
  6689  001D38                     u4621:
  6690  001D38  EFA6  F00E         	goto	l4562
  6691  001D3C                     u4620:
  6692  001D3C  5017               	movf	___flmul@bexp^0,w,c
  6693  001D3E  A4D8               	btfss	status,2,c
  6694  001D40  EFA4  F00E         	goto	u4631
  6695  001D44  EFA6  F00E         	goto	u4630
  6696  001D48                     u4631:
  6697  001D48  EFB0  F00E         	goto	l4566
  6698  001D4C                     u4630:
  6699  001D4C                     l4562:
  6700  001D4C  0E00               	movlw	0
  6701  001D4E  6E05               	movwf	?___flmul^0,c
  6702  001D50  0E00               	movlw	0
  6703  001D52  6E06               	movwf	(?___flmul+1)^0,c
  6704  001D54  0E00               	movlw	0
  6705  001D56  6E07               	movwf	(?___flmul+2)^0,c
  6706  001D58  0E00               	movlw	0
  6707  001D5A  6E08               	movwf	(?___flmul+3)^0,c
  6708  001D5C  EF48  F010         	goto	l1039
  6709  001D60                     l4566:
  6710  001D60  500B               	movf	(___flmul@a+2)^0,w,c
  6711  001D62  0205               	mulwf	___flmul@b^0,c
  6712  001D64  CFF3 F01C          	movff	prodl,___flmul@temp
  6713  001D68  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6714  001D6C  501C               	movf	___flmul@temp^0,w,c
  6715  001D6E  6E13               	movwf	___flmul@grs^0,c
  6716  001D70  6A14               	clrf	(___flmul@grs+1)^0,c
  6717  001D72  6A15               	clrf	(___flmul@grs+2)^0,c
  6718  001D74  6A16               	clrf	(___flmul@grs+3)^0,c
  6719  001D76  501D               	movf	(___flmul@temp+1)^0,w,c
  6720  001D78  6E18               	movwf	___flmul@prod^0,c
  6721  001D7A  6A19               	clrf	(___flmul@prod+1)^0,c
  6722  001D7C  6A1A               	clrf	(___flmul@prod+2)^0,c
  6723  001D7E  6A1B               	clrf	(___flmul@prod+3)^0,c
  6724  001D80  500A               	movf	(___flmul@a+1)^0,w,c
  6725  001D82  0206               	mulwf	(___flmul@b+1)^0,c
  6726  001D84  CFF3 F01C          	movff	prodl,___flmul@temp
  6727  001D88  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6728  001D8C  501C               	movf	___flmul@temp^0,w,c
  6729  001D8E  2613               	addwf	___flmul@grs^0,f,c
  6730  001D90  0E00               	movlw	0
  6731  001D92  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6732  001D94  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6733  001D96  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6734  001D98  501D               	movf	(___flmul@temp+1)^0,w,c
  6735  001D9A  2618               	addwf	___flmul@prod^0,f,c
  6736  001D9C  0E00               	movlw	0
  6737  001D9E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6738  001DA0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6739  001DA2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6740  001DA4  5009               	movf	___flmul@a^0,w,c
  6741  001DA6  0207               	mulwf	(___flmul@b+2)^0,c
  6742  001DA8  CFF3 F01C          	movff	prodl,___flmul@temp
  6743  001DAC  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6744  001DB0  501C               	movf	___flmul@temp^0,w,c
  6745  001DB2  2613               	addwf	___flmul@grs^0,f,c
  6746  001DB4  0E00               	movlw	0
  6747  001DB6  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6748  001DB8  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6749  001DBA  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6750  001DBC  501D               	movf	(___flmul@temp+1)^0,w,c
  6751  001DBE  2618               	addwf	___flmul@prod^0,f,c
  6752  001DC0  0E00               	movlw	0
  6753  001DC2  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6754  001DC4  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6755  001DC6  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6756  001DC8  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6757  001DCC  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6758  001DD0  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6759  001DD4  6A13               	clrf	___flmul@grs^0,c
  6760  001DD6  5009               	movf	___flmul@a^0,w,c
  6761  001DD8  0206               	mulwf	(___flmul@b+1)^0,c
  6762  001DDA  CFF3 F01C          	movff	prodl,___flmul@temp
  6763  001DDE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6764  001DE2  501C               	movf	___flmul@temp^0,w,c
  6765  001DE4  2613               	addwf	___flmul@grs^0,f,c
  6766  001DE6  501D               	movf	(___flmul@temp+1)^0,w,c
  6767  001DE8  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6768  001DEA  0E00               	movlw	0
  6769  001DEC  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6770  001DEE  0E00               	movlw	0
  6771  001DF0  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6772  001DF2  500A               	movf	(___flmul@a+1)^0,w,c
  6773  001DF4  0205               	mulwf	___flmul@b^0,c
  6774  001DF6  CFF3 F01C          	movff	prodl,___flmul@temp
  6775  001DFA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6776  001DFE  501C               	movf	___flmul@temp^0,w,c
  6777  001E00  2613               	addwf	___flmul@grs^0,f,c
  6778  001E02  501D               	movf	(___flmul@temp+1)^0,w,c
  6779  001E04  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6780  001E06  0E00               	movlw	0
  6781  001E08  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6782  001E0A  0E00               	movlw	0
  6783  001E0C  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6784  001E0E  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6785  001E12  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6786  001E16  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6787  001E1A  6A13               	clrf	___flmul@grs^0,c
  6788  001E1C  5009               	movf	___flmul@a^0,w,c
  6789  001E1E  0205               	mulwf	___flmul@b^0,c
  6790  001E20  CFF3 F01C          	movff	prodl,___flmul@temp
  6791  001E24  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6792  001E28  501C               	movf	___flmul@temp^0,w,c
  6793  001E2A  2613               	addwf	___flmul@grs^0,f,c
  6794  001E2C  501D               	movf	(___flmul@temp+1)^0,w,c
  6795  001E2E  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6796  001E30  0E00               	movlw	0
  6797  001E32  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6798  001E34  0E00               	movlw	0
  6799  001E36  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6800  001E38  500B               	movf	(___flmul@a+2)^0,w,c
  6801  001E3A  0206               	mulwf	(___flmul@b+1)^0,c
  6802  001E3C  CFF3 F01C          	movff	prodl,___flmul@temp
  6803  001E40  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6804  001E44  501C               	movf	___flmul@temp^0,w,c
  6805  001E46  2618               	addwf	___flmul@prod^0,f,c
  6806  001E48  501D               	movf	(___flmul@temp+1)^0,w,c
  6807  001E4A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6808  001E4C  0E00               	movlw	0
  6809  001E4E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6810  001E50  0E00               	movlw	0
  6811  001E52  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6812  001E54  500A               	movf	(___flmul@a+1)^0,w,c
  6813  001E56  0207               	mulwf	(___flmul@b+2)^0,c
  6814  001E58  CFF3 F01C          	movff	prodl,___flmul@temp
  6815  001E5C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6816  001E60  501C               	movf	___flmul@temp^0,w,c
  6817  001E62  2618               	addwf	___flmul@prod^0,f,c
  6818  001E64  501D               	movf	(___flmul@temp+1)^0,w,c
  6819  001E66  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6820  001E68  0E00               	movlw	0
  6821  001E6A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6822  001E6C  0E00               	movlw	0
  6823  001E6E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6824  001E70  500B               	movf	(___flmul@a+2)^0,w,c
  6825  001E72  0207               	mulwf	(___flmul@b+2)^0,c
  6826  001E74  CFF3 F01C          	movff	prodl,___flmul@temp
  6827  001E78  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6828  001E7C  501C               	movf	___flmul@temp^0,w,c
  6829  001E7E  6E0D               	movwf	??___flmul^0,c
  6830  001E80  501D               	movf	(___flmul@temp+1)^0,w,c
  6831  001E82  6E0E               	movwf	(??___flmul+1)^0,c
  6832  001E84  6A0F               	clrf	(??___flmul+2)^0,c
  6833  001E86  6A10               	clrf	(??___flmul+3)^0,c
  6834  001E88  C00F  F010         	movff	??___flmul+2,??___flmul+3
  6835  001E8C  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  6836  001E90  C00D  F00E         	movff	??___flmul,??___flmul+1
  6837  001E94  6A0D               	clrf	??___flmul^0,c
  6838  001E96  500D               	movf	??___flmul^0,w,c
  6839  001E98  2618               	addwf	___flmul@prod^0,f,c
  6840  001E9A  500E               	movf	(??___flmul+1)^0,w,c
  6841  001E9C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6842  001E9E  500F               	movf	(??___flmul+2)^0,w,c
  6843  001EA0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6844  001EA2  5010               	movf	(??___flmul+3)^0,w,c
  6845  001EA4  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6846  001EA6  C013  F00D         	movff	___flmul@grs,??___flmul
  6847  001EAA  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  6848  001EAE  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  6849  001EB2  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  6850  001EB6  0E19               	movlw	25
  6851  001EB8  EF63  F00F         	goto	u4640
  6852  001EBC                     u4645:
  6853  001EBC  90D8               	bcf	status,0,c
  6854  001EBE  3210               	rrcf	(??___flmul+3)^0,f,c
  6855  001EC0  320F               	rrcf	(??___flmul+2)^0,f,c
  6856  001EC2  320E               	rrcf	(??___flmul+1)^0,f,c
  6857  001EC4  320D               	rrcf	??___flmul^0,f,c
  6858  001EC6                     u4640:
  6859  001EC6  2EE8               	decfsz	wreg,f,c
  6860  001EC8  EF5E  F00F         	goto	u4645
  6861  001ECC  500D               	movf	??___flmul^0,w,c
  6862  001ECE  2618               	addwf	___flmul@prod^0,f,c
  6863  001ED0  500E               	movf	(??___flmul+1)^0,w,c
  6864  001ED2  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6865  001ED4  500F               	movf	(??___flmul+2)^0,w,c
  6866  001ED6  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6867  001ED8  5010               	movf	(??___flmul+3)^0,w,c
  6868  001EDA  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6869  001EDC  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6870  001EE0  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6871  001EE4  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6872  001EE8  6A13               	clrf	___flmul@grs^0,c
  6873  001EEA  5012               	movf	___flmul@aexp^0,w,c
  6874  001EEC  C017  F00D         	movff	___flmul@bexp,??___flmul
  6875  001EF0  6A0E               	clrf	(??___flmul+1)^0,c
  6876  001EF2  260D               	addwf	??___flmul^0,f,c
  6877  001EF4  0E00               	movlw	0
  6878  001EF6  220E               	addwfc	(??___flmul+1)^0,f,c
  6879  001EF8  0E82               	movlw	130
  6880  001EFA  240D               	addwf	??___flmul^0,w,c
  6881  001EFC  6E1C               	movwf	___flmul@temp^0,c
  6882  001EFE  0EFF               	movlw	255
  6883  001F00  200E               	addwfc	(??___flmul+1)^0,w,c
  6884  001F02  6E1D               	movwf	(___flmul@temp+1)^0,c
  6885  001F04  EF99  F00F         	goto	l4614
  6886  001F08                     l4608:
  6887  001F08  90D8               	bcf	status,0,c
  6888  001F0A  3618               	rlcf	___flmul@prod^0,f,c
  6889  001F0C  3619               	rlcf	(___flmul@prod+1)^0,f,c
  6890  001F0E  361A               	rlcf	(___flmul@prod+2)^0,f,c
  6891  001F10  361B               	rlcf	(___flmul@prod+3)^0,f,c
  6892  001F12  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6893  001F14  EF8E  F00F         	goto	u4651
  6894  001F18  EF90  F00F         	goto	u4650
  6895  001F1C                     u4651:
  6896  001F1C  EF91  F00F         	goto	l1042
  6897  001F20                     u4650:
  6898  001F20  8018               	bsf	___flmul@prod^0,0,c
  6899  001F22                     l1042:
  6900  001F22  90D8               	bcf	status,0,c
  6901  001F24  3613               	rlcf	___flmul@grs^0,f,c
  6902  001F26  3614               	rlcf	(___flmul@grs+1)^0,f,c
  6903  001F28  3615               	rlcf	(___flmul@grs+2)^0,f,c
  6904  001F2A  3616               	rlcf	(___flmul@grs+3)^0,f,c
  6905  001F2C  061C               	decf	___flmul@temp^0,f,c
  6906  001F2E  A0D8               	btfss	status,0,c
  6907  001F30  061D               	decf	(___flmul@temp+1)^0,f,c
  6908  001F32                     l4614:
  6909  001F32  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  6910  001F34  EF9E  F00F         	goto	u4661
  6911  001F38  EFA0  F00F         	goto	u4660
  6912  001F3C                     u4661:
  6913  001F3C  EF84  F00F         	goto	l4608
  6914  001F40                     u4660:
  6915  001F40  0E00               	movlw	0
  6916  001F42  6E12               	movwf	___flmul@aexp^0,c
  6917  001F44  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6918  001F46  EFA7  F00F         	goto	u4671
  6919  001F4A  EFA9  F00F         	goto	u4670
  6920  001F4E                     u4671:
  6921  001F4E  EFCD  F00F         	goto	l1044
  6922  001F52                     u4670:
  6923  001F52  0EFF               	movlw	255
  6924  001F54  1413               	andwf	___flmul@grs^0,w,c
  6925  001F56  6E0D               	movwf	??___flmul^0,c
  6926  001F58  0EFF               	movlw	255
  6927  001F5A  1414               	andwf	(___flmul@grs+1)^0,w,c
  6928  001F5C  6E0E               	movwf	(??___flmul+1)^0,c
  6929  001F5E  0EFF               	movlw	255
  6930  001F60  1415               	andwf	(___flmul@grs+2)^0,w,c
  6931  001F62  6E0F               	movwf	(??___flmul+2)^0,c
  6932  001F64  0E7F               	movlw	127
  6933  001F66  1416               	andwf	(___flmul@grs+3)^0,w,c
  6934  001F68  6E10               	movwf	(??___flmul+3)^0,c
  6935  001F6A  500D               	movf	??___flmul^0,w,c
  6936  001F6C  100E               	iorwf	(??___flmul+1)^0,w,c
  6937  001F6E  100F               	iorwf	(??___flmul+2)^0,w,c
  6938  001F70  1010               	iorwf	(??___flmul+3)^0,w,c
  6939  001F72  B4D8               	btfsc	status,2,c
  6940  001F74  EFBE  F00F         	goto	u4681
  6941  001F78  EFC0  F00F         	goto	u4680
  6942  001F7C                     u4681:
  6943  001F7C  EFC4  F00F         	goto	l1045
  6944  001F80                     u4680:
  6945  001F80                     l4622:
  6946  001F80  0E01               	movlw	1
  6947  001F82  6E12               	movwf	___flmul@aexp^0,c
  6948  001F84  EFCD  F00F         	goto	l1044
  6949  001F88                     l1045:
  6950  001F88  A018               	btfss	___flmul@prod^0,0,c
  6951  001F8A  EFC9  F00F         	goto	u4691
  6952  001F8E  EFCB  F00F         	goto	u4690
  6953  001F92                     u4691:
  6954  001F92  EFCD  F00F         	goto	l1044
  6955  001F96                     u4690:
  6956  001F96  EFC0  F00F         	goto	l4622
  6957  001F9A                     l1044:
  6958  001F9A  5012               	movf	___flmul@aexp^0,w,c
  6959  001F9C  B4D8               	btfsc	status,2,c
  6960  001F9E  EFD3  F00F         	goto	u4701
  6961  001FA2  EFD5  F00F         	goto	u4700
  6962  001FA6                     u4701:
  6963  001FA6  EFF9  F00F         	goto	l4634
  6964  001FAA                     u4700:
  6965  001FAA  0E01               	movlw	1
  6966  001FAC  2618               	addwf	___flmul@prod^0,f,c
  6967  001FAE  0E00               	movlw	0
  6968  001FB0  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6969  001FB2  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6970  001FB4  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6971  001FB6  A01B               	btfss	(___flmul@prod+3)^0,0,c
  6972  001FB8  EFE0  F00F         	goto	u4711
  6973  001FBC  EFE2  F00F         	goto	u4710
  6974  001FC0                     u4711:
  6975  001FC0  EFF9  F00F         	goto	l4634
  6976  001FC4                     u4710:
  6977  001FC4  C018  F00D         	movff	___flmul@prod,??___flmul
  6978  001FC8  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  6979  001FCC  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  6980  001FD0  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  6981  001FD4  3410               	rlcf	(??___flmul+3)^0,w,c
  6982  001FD6  3210               	rrcf	(??___flmul+3)^0,f,c
  6983  001FD8  320F               	rrcf	(??___flmul+2)^0,f,c
  6984  001FDA  320E               	rrcf	(??___flmul+1)^0,f,c
  6985  001FDC  320D               	rrcf	??___flmul^0,f,c
  6986  001FDE  C00D  F018         	movff	??___flmul,___flmul@prod
  6987  001FE2  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  6988  001FE6  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  6989  001FEA  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  6990  001FEE  4A1C               	infsnz	___flmul@temp^0,f,c
  6991  001FF0  2A1D               	incf	(___flmul@temp+1)^0,f,c
  6992  001FF2                     l4634:
  6993  001FF2  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6994  001FF4  EF04  F010         	goto	u4721
  6995  001FF8  501D               	movf	(___flmul@temp+1)^0,w,c
  6996  001FFA  E108               	bnz	u4720
  6997  001FFC  281C               	incf	___flmul@temp^0,w,c
  6998  001FFE  A0D8               	btfss	status,0,c
  6999  002000  EF04  F010         	goto	u4721
  7000  002004  EF06  F010         	goto	u4720
  7001  002008                     u4721:
  7002  002008  EF10  F010         	goto	l4638
  7003  00200C                     u4720:
  7004  00200C  0E00               	movlw	0
  7005  00200E  6E18               	movwf	___flmul@prod^0,c
  7006  002010  0E00               	movlw	0
  7007  002012  6E19               	movwf	(___flmul@prod+1)^0,c
  7008  002014  0E80               	movlw	128
  7009  002016  6E1A               	movwf	(___flmul@prod+2)^0,c
  7010  002018  0E7F               	movlw	127
  7011  00201A  6E1B               	movwf	(___flmul@prod+3)^0,c
  7012  00201C  EF3E  F010         	goto	l4650
  7013  002020                     l4638:
  7014  002020  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  7015  002022  EF1D  F010         	goto	u4730
  7016  002026  501D               	movf	(___flmul@temp+1)^0,w,c
  7017  002028  E106               	bnz	u4731
  7018  00202A  041C               	decf	___flmul@temp^0,w,c
  7019  00202C  B0D8               	btfsc	status,0,c
  7020  00202E  EF1B  F010         	goto	u4731
  7021  002032  EF1D  F010         	goto	u4730
  7022  002036                     u4731:
  7023  002036  EF29  F010         	goto	l1052
  7024  00203A                     u4730:
  7025  00203A  0E00               	movlw	0
  7026  00203C  6E18               	movwf	___flmul@prod^0,c
  7027  00203E  0E00               	movlw	0
  7028  002040  6E19               	movwf	(___flmul@prod+1)^0,c
  7029  002042  0E00               	movlw	0
  7030  002044  6E1A               	movwf	(___flmul@prod+2)^0,c
  7031  002046  0E00               	movlw	0
  7032  002048  6E1B               	movwf	(___flmul@prod+3)^0,c
  7033  00204A  0E00               	movlw	0
  7034  00204C  6E11               	movwf	___flmul@sign^0,c
  7035  00204E  EF3E  F010         	goto	l4650
  7036  002052                     l1052:
  7037  002052  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  7038  002056  0EFF               	movlw	255
  7039  002058  1618               	andwf	___flmul@prod^0,f,c
  7040  00205A  0EFF               	movlw	255
  7041  00205C  1619               	andwf	(___flmul@prod+1)^0,f,c
  7042  00205E  0E7F               	movlw	127
  7043  002060  161A               	andwf	(___flmul@prod+2)^0,f,c
  7044  002062  0E00               	movlw	0
  7045  002064  161B               	andwf	(___flmul@prod+3)^0,f,c
  7046  002066  A017               	btfss	___flmul@bexp^0,0,c
  7047  002068  EF38  F010         	goto	u4741
  7048  00206C  EF3A  F010         	goto	u4740
  7049  002070                     u4741:
  7050  002070  EF3B  F010         	goto	l4648
  7051  002074                     u4740:
  7052  002074  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  7053  002076                     l4648:
  7054  002076  90D8               	bcf	status,0,c
  7055  002078  3017               	rrcf	___flmul@bexp^0,w,c
  7056  00207A  6E1B               	movwf	(___flmul@prod+3)^0,c
  7057  00207C                     l4650:
  7058  00207C  5011               	movf	___flmul@sign^0,w,c
  7059  00207E  121B               	iorwf	(___flmul@prod+3)^0,f,c
  7060  002080  C018  F005         	movff	___flmul@prod,?___flmul
  7061  002084  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  7062  002088  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  7063  00208C  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  7064  002090                     l1039:
  7065  002090  0012               	return		;funcret
  7066  002092                     __end_of___flmul:
  7067                           	callstack 0
  7068                           
  7069 ;; *************** function ___flge *****************
  7070 ;; Defined at:
  7071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  ff1             4    4[COMRAM] unsigned char 
  7074 ;;  ff2             4    8[COMRAM] unsigned char 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;		None
  7077 ;; Return value:  Size  Location     Type
  7078 ;;		None               void
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7086 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7090 ;;Total ram usage:       12 bytes
  7091 ;; Hardware stack levels used: 1
  7092 ;; Hardware stack levels required when called: 2
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_sqrtf
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text29
  7101  00341E                     __ptext29:
  7102                           	callstack 0
  7103  00341E                     ___flge:
  7104                           	callstack 26
  7105  00341E  0E00               	movlw	0
  7106  003420  1405               	andwf	___flge@ff1^0,w,c
  7107  003422  6E0D               	movwf	??___flge^0,c
  7108  003424  0E00               	movlw	0
  7109  003426  1406               	andwf	(___flge@ff1+1)^0,w,c
  7110  003428  6E0E               	movwf	(??___flge+1)^0,c
  7111  00342A  0E80               	movlw	128
  7112  00342C  1407               	andwf	(___flge@ff1+2)^0,w,c
  7113  00342E  6E0F               	movwf	(??___flge+2)^0,c
  7114  003430  0E7F               	movlw	127
  7115  003432  1408               	andwf	(___flge@ff1+3)^0,w,c
  7116  003434  6E10               	movwf	(??___flge+3)^0,c
  7117  003436  500D               	movf	??___flge^0,w,c
  7118  003438  100E               	iorwf	(??___flge+1)^0,w,c
  7119  00343A  100F               	iorwf	(??___flge+2)^0,w,c
  7120  00343C  1010               	iorwf	(??___flge+3)^0,w,c
  7121  00343E  A4D8               	btfss	status,2,c
  7122  003440  EF24  F01A         	goto	u4751
  7123  003444  EF26  F01A         	goto	u4750
  7124  003448                     u4751:
  7125  003448  EF2E  F01A         	goto	l4660
  7126  00344C                     u4750:
  7127  00344C  0E00               	movlw	0
  7128  00344E  6E05               	movwf	___flge@ff1^0,c
  7129  003450  0E00               	movlw	0
  7130  003452  6E06               	movwf	(___flge@ff1+1)^0,c
  7131  003454  0E00               	movlw	0
  7132  003456  6E07               	movwf	(___flge@ff1+2)^0,c
  7133  003458  0E00               	movlw	0
  7134  00345A  6E08               	movwf	(___flge@ff1+3)^0,c
  7135  00345C                     l4660:
  7136  00345C  0E00               	movlw	0
  7137  00345E  1409               	andwf	___flge@ff2^0,w,c
  7138  003460  6E0D               	movwf	??___flge^0,c
  7139  003462  0E00               	movlw	0
  7140  003464  140A               	andwf	(___flge@ff2+1)^0,w,c
  7141  003466  6E0E               	movwf	(??___flge+1)^0,c
  7142  003468  0E80               	movlw	128
  7143  00346A  140B               	andwf	(___flge@ff2+2)^0,w,c
  7144  00346C  6E0F               	movwf	(??___flge+2)^0,c
  7145  00346E  0E7F               	movlw	127
  7146  003470  140C               	andwf	(___flge@ff2+3)^0,w,c
  7147  003472  6E10               	movwf	(??___flge+3)^0,c
  7148  003474  500D               	movf	??___flge^0,w,c
  7149  003476  100E               	iorwf	(??___flge+1)^0,w,c
  7150  003478  100F               	iorwf	(??___flge+2)^0,w,c
  7151  00347A  1010               	iorwf	(??___flge+3)^0,w,c
  7152  00347C  A4D8               	btfss	status,2,c
  7153  00347E  EF43  F01A         	goto	u4761
  7154  003482  EF45  F01A         	goto	u4760
  7155  003486                     u4761:
  7156  003486  EF4D  F01A         	goto	l4664
  7157  00348A                     u4760:
  7158  00348A  0E00               	movlw	0
  7159  00348C  6E09               	movwf	___flge@ff2^0,c
  7160  00348E  0E00               	movlw	0
  7161  003490  6E0A               	movwf	(___flge@ff2+1)^0,c
  7162  003492  0E00               	movlw	0
  7163  003494  6E0B               	movwf	(___flge@ff2+2)^0,c
  7164  003496  0E00               	movlw	0
  7165  003498  6E0C               	movwf	(___flge@ff2+3)^0,c
  7166  00349A                     l4664:
  7167  00349A  AE08               	btfss	(___flge@ff1+3)^0,7,c
  7168  00349C  EF52  F01A         	goto	u4771
  7169  0034A0  EF54  F01A         	goto	u4770
  7170  0034A4                     u4771:
  7171  0034A4  EF5D  F01A         	goto	l4668
  7172  0034A8                     u4770:
  7173  0034A8  6C05               	negf	___flge@ff1^0,c
  7174  0034AA  1E06               	comf	(___flge@ff1+1)^0,f,c
  7175  0034AC  B0D8               	btfsc	status,0,c
  7176  0034AE  2A06               	incf	(___flge@ff1+1)^0,f,c
  7177  0034B0  1E07               	comf	(___flge@ff1+2)^0,f,c
  7178  0034B2  B0D8               	btfsc	status,0,c
  7179  0034B4  2A07               	incf	(___flge@ff1+2)^0,f,c
  7180  0034B6  0E80               	movlw	128
  7181  0034B8  5608               	subfwb	(___flge@ff1+3)^0,f,c
  7182  0034BA                     l4668:
  7183  0034BA  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  7184  0034BC  EF62  F01A         	goto	u4781
  7185  0034C0  EF64  F01A         	goto	u4780
  7186  0034C4                     u4781:
  7187  0034C4  EF6D  F01A         	goto	l686
  7188  0034C8                     u4780:
  7189  0034C8  6C09               	negf	___flge@ff2^0,c
  7190  0034CA  1E0A               	comf	(___flge@ff2+1)^0,f,c
  7191  0034CC  B0D8               	btfsc	status,0,c
  7192  0034CE  2A0A               	incf	(___flge@ff2+1)^0,f,c
  7193  0034D0  1E0B               	comf	(___flge@ff2+2)^0,f,c
  7194  0034D2  B0D8               	btfsc	status,0,c
  7195  0034D4  2A0B               	incf	(___flge@ff2+2)^0,f,c
  7196  0034D6  0E80               	movlw	128
  7197  0034D8  560C               	subfwb	(___flge@ff2+3)^0,f,c
  7198  0034DA                     l686:
  7199  0034DA  0E00               	movlw	0
  7200  0034DC  1A05               	xorwf	___flge@ff1^0,f,c
  7201  0034DE  0E00               	movlw	0
  7202  0034E0  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  7203  0034E2  0E00               	movlw	0
  7204  0034E4  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  7205  0034E6  0E80               	movlw	128
  7206  0034E8  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  7207  0034EA  0E00               	movlw	0
  7208  0034EC  1A09               	xorwf	___flge@ff2^0,f,c
  7209  0034EE  0E00               	movlw	0
  7210  0034F0  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  7211  0034F2  0E00               	movlw	0
  7212  0034F4  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  7213  0034F6  0E80               	movlw	128
  7214  0034F8  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  7215  0034FA  5009               	movf	___flge@ff2^0,w,c
  7216  0034FC  5C05               	subwf	___flge@ff1^0,w,c
  7217  0034FE  500A               	movf	(___flge@ff2+1)^0,w,c
  7218  003500  5806               	subwfb	(___flge@ff1+1)^0,w,c
  7219  003502  500B               	movf	(___flge@ff2+2)^0,w,c
  7220  003504  5807               	subwfb	(___flge@ff1+2)^0,w,c
  7221  003506  500C               	movf	(___flge@ff2+3)^0,w,c
  7222  003508  5808               	subwfb	(___flge@ff1+3)^0,w,c
  7223  00350A  B0D8               	btfsc	status,0,c
  7224  00350C  EF8A  F01A         	goto	u4791
  7225  003510  EF8C  F01A         	goto	u4790
  7226  003514                     u4791:
  7227  003514  EF8F  F01A         	goto	l4674
  7228  003518                     u4790:
  7229  003518  90D8               	bcf	status,0,c
  7230  00351A  EF90  F01A         	goto	l691
  7231  00351E                     l4674:
  7232  00351E  80D8               	bsf	status,0,c
  7233  003520                     l691:
  7234  003520  0012               	return		;funcret
  7235  003522                     __end_of___flge:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function ___fladd *****************
  7239 ;; Defined at:
  7240 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  b               4   29[COMRAM] unsigned char 
  7243 ;;  a               4   33[COMRAM] unsigned char 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  grs             1   44[COMRAM] unsigned char 
  7246 ;;  bexp            1   43[COMRAM] unsigned char 
  7247 ;;  aexp            1   42[COMRAM] unsigned char 
  7248 ;;  signs           1   41[COMRAM] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  4   29[COMRAM] unsigned char 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7258 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7260 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7262 ;;Total ram usage:       16 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 2
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_sqrtf
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text30
  7273  001320                     __ptext30:
  7274                           	callstack 0
  7275  001320                     ___fladd:
  7276                           	callstack 26
  7277  001320  5021               	movf	(___fladd@b+3)^0,w,c
  7278  001322  0B80               	andlw	128
  7279  001324  6E2A               	movwf	___fladd@signs^0,c
  7280  001326  5021               	movf	(___fladd@b+3)^0,w,c
  7281  001328  2421               	addwf	(___fladd@b+3)^0,w,c
  7282  00132A  6E2C               	movwf	___fladd@bexp^0,c
  7283  00132C  AE20               	btfss	(___fladd@b+2)^0,7,c
  7284  00132E  EF9B  F009         	goto	u4171
  7285  001332  EF9D  F009         	goto	u4170
  7286  001336                     u4171:
  7287  001336  EF9E  F009         	goto	l4330
  7288  00133A                     u4170:
  7289  00133A  802C               	bsf	___fladd@bexp^0,0,c
  7290  00133C                     l4330:
  7291  00133C  502C               	movf	___fladd@bexp^0,w,c
  7292  00133E  B4D8               	btfsc	status,2,c
  7293  001340  EFA4  F009         	goto	u4181
  7294  001344  EFA6  F009         	goto	u4180
  7295  001348                     u4181:
  7296  001348  EFBB  F009         	goto	l4340
  7297  00134C                     u4180:
  7298  00134C  282C               	incf	___fladd@bexp^0,w,c
  7299  00134E  A4D8               	btfss	status,2,c
  7300  001350  EFAC  F009         	goto	u4191
  7301  001354  EFAE  F009         	goto	u4190
  7302  001358                     u4191:
  7303  001358  EFB6  F009         	goto	l4336
  7304  00135C                     u4190:
  7305  00135C  0E00               	movlw	0
  7306  00135E  6E1E               	movwf	___fladd@b^0,c
  7307  001360  0E00               	movlw	0
  7308  001362  6E1F               	movwf	(___fladd@b+1)^0,c
  7309  001364  0E00               	movlw	0
  7310  001366  6E20               	movwf	(___fladd@b+2)^0,c
  7311  001368  0E00               	movlw	0
  7312  00136A  6E21               	movwf	(___fladd@b+3)^0,c
  7313  00136C                     l4336:
  7314  00136C  8E20               	bsf	(___fladd@b+2)^0,7,c
  7315  00136E  0E00               	movlw	0
  7316  001370  6E21               	movwf	(___fladd@b+3)^0,c
  7317  001372  EFC3  F009         	goto	l4342
  7318  001376                     l4340:
  7319  001376  0E00               	movlw	0
  7320  001378  6E1E               	movwf	___fladd@b^0,c
  7321  00137A  0E00               	movlw	0
  7322  00137C  6E1F               	movwf	(___fladd@b+1)^0,c
  7323  00137E  0E00               	movlw	0
  7324  001380  6E20               	movwf	(___fladd@b+2)^0,c
  7325  001382  0E00               	movlw	0
  7326  001384  6E21               	movwf	(___fladd@b+3)^0,c
  7327  001386                     l4342:
  7328  001386  5025               	movf	(___fladd@a+3)^0,w,c
  7329  001388  0B80               	andlw	128
  7330  00138A  6E2B               	movwf	___fladd@aexp^0,c
  7331  00138C  502A               	movf	___fladd@signs^0,w,c
  7332  00138E  182B               	xorwf	___fladd@aexp^0,w,c
  7333  001390  B4D8               	btfsc	status,2,c
  7334  001392  EFCD  F009         	goto	u4201
  7335  001396  EFCF  F009         	goto	u4200
  7336  00139A                     u4201:
  7337  00139A  EFD0  F009         	goto	l4348
  7338  00139E                     u4200:
  7339  00139E  8C2A               	bsf	___fladd@signs^0,6,c
  7340  0013A0                     l4348:
  7341  0013A0  5025               	movf	(___fladd@a+3)^0,w,c
  7342  0013A2  2425               	addwf	(___fladd@a+3)^0,w,c
  7343  0013A4  6E2B               	movwf	___fladd@aexp^0,c
  7344  0013A6  AE24               	btfss	(___fladd@a+2)^0,7,c
  7345  0013A8  EFD8  F009         	goto	u4211
  7346  0013AC  EFDA  F009         	goto	u4210
  7347  0013B0                     u4211:
  7348  0013B0  EFDB  F009         	goto	l4354
  7349  0013B4                     u4210:
  7350  0013B4  802B               	bsf	___fladd@aexp^0,0,c
  7351  0013B6                     l4354:
  7352  0013B6  502B               	movf	___fladd@aexp^0,w,c
  7353  0013B8  B4D8               	btfsc	status,2,c
  7354  0013BA  EFE1  F009         	goto	u4221
  7355  0013BE  EFE3  F009         	goto	u4220
  7356  0013C2                     u4221:
  7357  0013C2  EFF8  F009         	goto	l4364
  7358  0013C6                     u4220:
  7359  0013C6  282B               	incf	___fladd@aexp^0,w,c
  7360  0013C8  A4D8               	btfss	status,2,c
  7361  0013CA  EFE9  F009         	goto	u4231
  7362  0013CE  EFEB  F009         	goto	u4230
  7363  0013D2                     u4231:
  7364  0013D2  EFF3  F009         	goto	l4360
  7365  0013D6                     u4230:
  7366  0013D6  0E00               	movlw	0
  7367  0013D8  6E22               	movwf	___fladd@a^0,c
  7368  0013DA  0E00               	movlw	0
  7369  0013DC  6E23               	movwf	(___fladd@a+1)^0,c
  7370  0013DE  0E00               	movlw	0
  7371  0013E0  6E24               	movwf	(___fladd@a+2)^0,c
  7372  0013E2  0E00               	movlw	0
  7373  0013E4  6E25               	movwf	(___fladd@a+3)^0,c
  7374  0013E6                     l4360:
  7375  0013E6  8E24               	bsf	(___fladd@a+2)^0,7,c
  7376  0013E8  0E00               	movlw	0
  7377  0013EA  6E25               	movwf	(___fladd@a+3)^0,c
  7378  0013EC  EF00  F00A         	goto	l4366
  7379  0013F0                     l4364:
  7380  0013F0  0E00               	movlw	0
  7381  0013F2  6E22               	movwf	___fladd@a^0,c
  7382  0013F4  0E00               	movlw	0
  7383  0013F6  6E23               	movwf	(___fladd@a+1)^0,c
  7384  0013F8  0E00               	movlw	0
  7385  0013FA  6E24               	movwf	(___fladd@a+2)^0,c
  7386  0013FC  0E00               	movlw	0
  7387  0013FE  6E25               	movwf	(___fladd@a+3)^0,c
  7388  001400                     l4366:
  7389  001400  502C               	movf	___fladd@bexp^0,w,c
  7390  001402  5C2B               	subwf	___fladd@aexp^0,w,c
  7391  001404  B0D8               	btfsc	status,0,c
  7392  001406  EF07  F00A         	goto	u4241
  7393  00140A  EF09  F00A         	goto	u4240
  7394  00140E                     u4241:
  7395  00140E  EF30  F00A         	goto	l4402
  7396  001412                     u4240:
  7397  001412  AC2A               	btfss	___fladd@signs^0,6,c
  7398  001414  EF0E  F00A         	goto	u4251
  7399  001418  EF10  F00A         	goto	u4250
  7400  00141C                     u4251:
  7401  00141C  EF12  F00A         	goto	l4372
  7402  001420                     u4250:
  7403  001420  0E80               	movlw	128
  7404  001422  1A2A               	xorwf	___fladd@signs^0,f,c
  7405  001424                     l4372:
  7406  001424  C02C  F02D         	movff	___fladd@bexp,___fladd@grs
  7407  001428  C02B  F02C         	movff	___fladd@aexp,___fladd@bexp
  7408  00142C  C02D  F02B         	movff	___fladd@grs,___fladd@aexp
  7409  001430  C01E  F02D         	movff	___fladd@b,___fladd@grs
  7410  001434  C022  F01E         	movff	___fladd@a,___fladd@b
  7411  001438  C02D  F022         	movff	___fladd@grs,___fladd@a
  7412  00143C  C01F  F02D         	movff	___fladd@b+1,___fladd@grs
  7413  001440  C023  F01F         	movff	___fladd@a+1,___fladd@b+1
  7414  001444  C02D  F023         	movff	___fladd@grs,___fladd@a+1
  7415  001448  C020  F02D         	movff	___fladd@b+2,___fladd@grs
  7416  00144C  C024  F020         	movff	___fladd@a+2,___fladd@b+2
  7417  001450  C02D  F024         	movff	___fladd@grs,___fladd@a+2
  7418  001454  C021  F02D         	movff	___fladd@b+3,___fladd@grs
  7419  001458  C025  F021         	movff	___fladd@a+3,___fladd@b+3
  7420  00145C  C02D  F025         	movff	___fladd@grs,___fladd@a+3
  7421  001460                     l4402:
  7422  001460  0E00               	movlw	0
  7423  001462  6E2D               	movwf	___fladd@grs^0,c
  7424  001464  502C               	movf	___fladd@bexp^0,w,c
  7425  001466  C02B  F026         	movff	___fladd@aexp,??___fladd
  7426  00146A  6A27               	clrf	(??___fladd+1)^0,c
  7427  00146C  5E26               	subwf	??___fladd^0,f,c
  7428  00146E  0E00               	movlw	0
  7429  001470  5A27               	subwfb	(??___fladd+1)^0,f,c
  7430  001472  BE27               	btfsc	(??___fladd+1)^0,7,c
  7431  001474  EF45  F00A         	goto	u4261
  7432  001478  5027               	movf	(??___fladd+1)^0,w,c
  7433  00147A  E109               	bnz	u4260
  7434  00147C  0E1A               	movlw	26
  7435  00147E  5C26               	subwf	??___fladd^0,w,c
  7436  001480  A0D8               	btfss	status,0,c
  7437  001482  EF45  F00A         	goto	u4261
  7438  001486  EF47  F00A         	goto	u4260
  7439  00148A                     u4261:
  7440  00148A  EF7E  F00A         	goto	l950
  7441  00148E                     u4260:
  7442  00148E  501E               	movf	___fladd@b^0,w,c
  7443  001490  101F               	iorwf	(___fladd@b+1)^0,w,c
  7444  001492  1020               	iorwf	(___fladd@b+2)^0,w,c
  7445  001494  1021               	iorwf	(___fladd@b+3)^0,w,c
  7446  001496  A4D8               	btfss	status,2,c
  7447  001498  EF50  F00A         	goto	u4271
  7448  00149C  EF53  F00A         	goto	u4270
  7449  0014A0                     u4271:
  7450  0014A0  0E01               	movlw	1
  7451  0014A2  EF54  F00A         	goto	u4280
  7452  0014A6                     u4270:
  7453  0014A6  0E00               	movlw	0
  7454  0014A8                     u4280:
  7455  0014A8  6E2D               	movwf	___fladd@grs^0,c
  7456  0014AA  0E00               	movlw	0
  7457  0014AC  6E1E               	movwf	___fladd@b^0,c
  7458  0014AE  0E00               	movlw	0
  7459  0014B0  6E1F               	movwf	(___fladd@b+1)^0,c
  7460  0014B2  0E00               	movlw	0
  7461  0014B4  6E20               	movwf	(___fladd@b+2)^0,c
  7462  0014B6  0E00               	movlw	0
  7463  0014B8  6E21               	movwf	(___fladd@b+3)^0,c
  7464  0014BA  C02B  F02C         	movff	___fladd@aexp,___fladd@bexp
  7465  0014BE  EF87  F00A         	goto	l949
  7466  0014C2                     l951:
  7467  0014C2  A02D               	btfss	___fladd@grs^0,0,c
  7468  0014C4  EF66  F00A         	goto	u4291
  7469  0014C8  EF68  F00A         	goto	u4290
  7470  0014CC                     u4291:
  7471  0014CC  EF6E  F00A         	goto	l4414
  7472  0014D0                     u4290:
  7473  0014D0  90D8               	bcf	status,0,c
  7474  0014D2  302D               	rrcf	___fladd@grs^0,w,c
  7475  0014D4  0901               	iorlw	1
  7476  0014D6  6E2D               	movwf	___fladd@grs^0,c
  7477  0014D8  EF70  F00A         	goto	l4416
  7478  0014DC                     l4414:
  7479  0014DC  90D8               	bcf	status,0,c
  7480  0014DE  322D               	rrcf	___fladd@grs^0,f,c
  7481  0014E0                     l4416:
  7482  0014E0  A01E               	btfss	___fladd@b^0,0,c
  7483  0014E2  EF75  F00A         	goto	u4301
  7484  0014E6  EF77  F00A         	goto	u4300
  7485  0014EA                     u4301:
  7486  0014EA  EF78  F00A         	goto	l4420
  7487  0014EE                     u4300:
  7488  0014EE  8E2D               	bsf	___fladd@grs^0,7,c
  7489  0014F0                     l4420:
  7490  0014F0  3421               	rlcf	(___fladd@b+3)^0,w,c
  7491  0014F2  3221               	rrcf	(___fladd@b+3)^0,f,c
  7492  0014F4  3220               	rrcf	(___fladd@b+2)^0,f,c
  7493  0014F6  321F               	rrcf	(___fladd@b+1)^0,f,c
  7494  0014F8  321E               	rrcf	___fladd@b^0,f,c
  7495  0014FA  2A2C               	incf	___fladd@bexp^0,f,c
  7496  0014FC                     l950:
  7497  0014FC  502B               	movf	___fladd@aexp^0,w,c
  7498  0014FE  5C2C               	subwf	___fladd@bexp^0,w,c
  7499  001500  A0D8               	btfss	status,0,c
  7500  001502  EF85  F00A         	goto	u4311
  7501  001506  EF87  F00A         	goto	u4310
  7502  00150A                     u4311:
  7503  00150A  EF61  F00A         	goto	l951
  7504  00150E                     u4310:
  7505  00150E                     l949:
  7506  00150E  BC2A               	btfsc	___fladd@signs^0,6,c
  7507  001510  EF8C  F00A         	goto	u4321
  7508  001514  EF8E  F00A         	goto	u4320
  7509  001518                     u4321:
  7510  001518  EFCE  F00A         	goto	l4448
  7511  00151C                     u4320:
  7512  00151C  502C               	movf	___fladd@bexp^0,w,c
  7513  00151E  A4D8               	btfss	status,2,c
  7514  001520  EF94  F00A         	goto	u4331
  7515  001524  EF96  F00A         	goto	u4330
  7516  001528                     u4331:
  7517  001528  EFA0  F00A         	goto	l4430
  7518  00152C                     u4330:
  7519  00152C  0E00               	movlw	0
  7520  00152E  6E1E               	movwf	?___fladd^0,c
  7521  001530  0E00               	movlw	0
  7522  001532  6E1F               	movwf	(?___fladd+1)^0,c
  7523  001534  0E00               	movlw	0
  7524  001536  6E20               	movwf	(?___fladd+2)^0,c
  7525  001538  0E00               	movlw	0
  7526  00153A  6E21               	movwf	(?___fladd+3)^0,c
  7527  00153C  EFEF  F00B         	goto	l958
  7528  001540                     l4430:
  7529  001540  5022               	movf	___fladd@a^0,w,c
  7530  001542  261E               	addwf	___fladd@b^0,f,c
  7531  001544  5023               	movf	(___fladd@a+1)^0,w,c
  7532  001546  221F               	addwfc	(___fladd@b+1)^0,f,c
  7533  001548  5024               	movf	(___fladd@a+2)^0,w,c
  7534  00154A  2220               	addwfc	(___fladd@b+2)^0,f,c
  7535  00154C  5025               	movf	(___fladd@a+3)^0,w,c
  7536  00154E  2221               	addwfc	(___fladd@b+3)^0,f,c
  7537  001550  A021               	btfss	(___fladd@b+3)^0,0,c
  7538  001552  EFAD  F00A         	goto	u4341
  7539  001556  EFAF  F00A         	goto	u4340
  7540  00155A                     u4341:
  7541  00155A  EF5B  F00B         	goto	l4484
  7542  00155E                     u4340:
  7543  00155E  A02D               	btfss	___fladd@grs^0,0,c
  7544  001560  EFB4  F00A         	goto	u4351
  7545  001564  EFB6  F00A         	goto	u4350
  7546  001568                     u4351:
  7547  001568  EFBC  F00A         	goto	l4438
  7548  00156C                     u4350:
  7549  00156C  90D8               	bcf	status,0,c
  7550  00156E  302D               	rrcf	___fladd@grs^0,w,c
  7551  001570  0901               	iorlw	1
  7552  001572  6E2D               	movwf	___fladd@grs^0,c
  7553  001574  EFBE  F00A         	goto	l4440
  7554  001578                     l4438:
  7555  001578  90D8               	bcf	status,0,c
  7556  00157A  322D               	rrcf	___fladd@grs^0,f,c
  7557  00157C                     l4440:
  7558  00157C  A01E               	btfss	___fladd@b^0,0,c
  7559  00157E  EFC3  F00A         	goto	u4361
  7560  001582  EFC5  F00A         	goto	u4360
  7561  001586                     u4361:
  7562  001586  EFC6  F00A         	goto	l4444
  7563  00158A                     u4360:
  7564  00158A  8E2D               	bsf	___fladd@grs^0,7,c
  7565  00158C                     l4444:
  7566  00158C  3421               	rlcf	(___fladd@b+3)^0,w,c
  7567  00158E  3221               	rrcf	(___fladd@b+3)^0,f,c
  7568  001590  3220               	rrcf	(___fladd@b+2)^0,f,c
  7569  001592  321F               	rrcf	(___fladd@b+1)^0,f,c
  7570  001594  321E               	rrcf	___fladd@b^0,f,c
  7571  001596  2A2C               	incf	___fladd@bexp^0,f,c
  7572  001598  EF5B  F00B         	goto	l4484
  7573  00159C                     l4448:
  7574  00159C  5022               	movf	___fladd@a^0,w,c
  7575  00159E  5C1E               	subwf	___fladd@b^0,w,c
  7576  0015A0  5023               	movf	(___fladd@a+1)^0,w,c
  7577  0015A2  581F               	subwfb	(___fladd@b+1)^0,w,c
  7578  0015A4  5024               	movf	(___fladd@a+2)^0,w,c
  7579  0015A6  5820               	subwfb	(___fladd@b+2)^0,w,c
  7580  0015A8  5021               	movf	(___fladd@b+3)^0,w,c
  7581  0015AA  0A80               	xorlw	128
  7582  0015AC  6E26               	movwf	??___fladd^0,c
  7583  0015AE  5025               	movf	(___fladd@a+3)^0,w,c
  7584  0015B0  0A80               	xorlw	128
  7585  0015B2  5826               	subwfb	??___fladd^0,w,c
  7586  0015B4  B0D8               	btfsc	status,0,c
  7587  0015B6  EFDF  F00A         	goto	u4371
  7588  0015BA  EFE1  F00A         	goto	u4370
  7589  0015BE                     u4371:
  7590  0015BE  EF0C  F00B         	goto	l4458
  7591  0015C2                     u4370:
  7592  0015C2  501E               	movf	___fladd@b^0,w,c
  7593  0015C4  5C22               	subwf	___fladd@a^0,w,c
  7594  0015C6  6E26               	movwf	??___fladd^0,c
  7595  0015C8  501F               	movf	(___fladd@b+1)^0,w,c
  7596  0015CA  5823               	subwfb	(___fladd@a+1)^0,w,c
  7597  0015CC  6E27               	movwf	(??___fladd+1)^0,c
  7598  0015CE  5020               	movf	(___fladd@b+2)^0,w,c
  7599  0015D0  5824               	subwfb	(___fladd@a+2)^0,w,c
  7600  0015D2  6E28               	movwf	(??___fladd+2)^0,c
  7601  0015D4  5021               	movf	(___fladd@b+3)^0,w,c
  7602  0015D6  5825               	subwfb	(___fladd@a+3)^0,w,c
  7603  0015D8  6E29               	movwf	(??___fladd+3)^0,c
  7604  0015DA  0EFF               	movlw	255
  7605  0015DC  2426               	addwf	??___fladd^0,w,c
  7606  0015DE  6E1E               	movwf	___fladd@b^0,c
  7607  0015E0  0EFF               	movlw	255
  7608  0015E2  2027               	addwfc	(??___fladd+1)^0,w,c
  7609  0015E4  6E1F               	movwf	(___fladd@b+1)^0,c
  7610  0015E6  0EFF               	movlw	255
  7611  0015E8  2028               	addwfc	(??___fladd+2)^0,w,c
  7612  0015EA  6E20               	movwf	(___fladd@b+2)^0,c
  7613  0015EC  0EFF               	movlw	255
  7614  0015EE  2029               	addwfc	(??___fladd+3)^0,w,c
  7615  0015F0  6E21               	movwf	(___fladd@b+3)^0,c
  7616  0015F2  0E80               	movlw	128
  7617  0015F4  1A2A               	xorwf	___fladd@signs^0,f,c
  7618  0015F6  6C2D               	negf	___fladd@grs^0,c
  7619  0015F8  502D               	movf	___fladd@grs^0,w,c
  7620  0015FA  A4D8               	btfss	status,2,c
  7621  0015FC  EF02  F00B         	goto	u4381
  7622  001600  EF04  F00B         	goto	u4380
  7623  001604                     u4381:
  7624  001604  EF14  F00B         	goto	l966
  7625  001608                     u4380:
  7626  001608  0E01               	movlw	1
  7627  00160A  261E               	addwf	___fladd@b^0,f,c
  7628  00160C  0E00               	movlw	0
  7629  00160E  221F               	addwfc	(___fladd@b+1)^0,f,c
  7630  001610  2220               	addwfc	(___fladd@b+2)^0,f,c
  7631  001612  2221               	addwfc	(___fladd@b+3)^0,f,c
  7632  001614  EF14  F00B         	goto	l966
  7633  001618                     l4458:
  7634  001618  5022               	movf	___fladd@a^0,w,c
  7635  00161A  5E1E               	subwf	___fladd@b^0,f,c
  7636  00161C  5023               	movf	(___fladd@a+1)^0,w,c
  7637  00161E  5A1F               	subwfb	(___fladd@b+1)^0,f,c
  7638  001620  5024               	movf	(___fladd@a+2)^0,w,c
  7639  001622  5A20               	subwfb	(___fladd@b+2)^0,f,c
  7640  001624  5025               	movf	(___fladd@a+3)^0,w,c
  7641  001626  5A21               	subwfb	(___fladd@b+3)^0,f,c
  7642  001628                     l966:
  7643  001628  501E               	movf	___fladd@b^0,w,c
  7644  00162A  101F               	iorwf	(___fladd@b+1)^0,w,c
  7645  00162C  1020               	iorwf	(___fladd@b+2)^0,w,c
  7646  00162E  1021               	iorwf	(___fladd@b+3)^0,w,c
  7647  001630  A4D8               	btfss	status,2,c
  7648  001632  EF1D  F00B         	goto	u4391
  7649  001636  EF1F  F00B         	goto	u4390
  7650  00163A                     u4391:
  7651  00163A  EF54  F00B         	goto	l4482
  7652  00163E                     u4390:
  7653  00163E  502D               	movf	___fladd@grs^0,w,c
  7654  001640  A4D8               	btfss	status,2,c
  7655  001642  EF25  F00B         	goto	u4401
  7656  001646  EF27  F00B         	goto	u4400
  7657  00164A                     u4401:
  7658  00164A  EF54  F00B         	goto	l4482
  7659  00164E                     u4400:
  7660  00164E  0E00               	movlw	0
  7661  001650  6E1E               	movwf	?___fladd^0,c
  7662  001652  0E00               	movlw	0
  7663  001654  6E1F               	movwf	(?___fladd+1)^0,c
  7664  001656  0E00               	movlw	0
  7665  001658  6E20               	movwf	(?___fladd+2)^0,c
  7666  00165A  0E00               	movlw	0
  7667  00165C  6E21               	movwf	(?___fladd+3)^0,c
  7668  00165E  EFEF  F00B         	goto	l958
  7669  001662                     l4466:
  7670  001662  90D8               	bcf	status,0,c
  7671  001664  361E               	rlcf	___fladd@b^0,f,c
  7672  001666  361F               	rlcf	(___fladd@b+1)^0,f,c
  7673  001668  3620               	rlcf	(___fladd@b+2)^0,f,c
  7674  00166A  3621               	rlcf	(___fladd@b+3)^0,f,c
  7675  00166C  AE2D               	btfss	___fladd@grs^0,7,c
  7676  00166E  EF3B  F00B         	goto	u4411
  7677  001672  EF3D  F00B         	goto	u4410
  7678  001676                     u4411:
  7679  001676  EF3E  F00B         	goto	l4472
  7680  00167A                     u4410:
  7681  00167A  801E               	bsf	___fladd@b^0,0,c
  7682  00167C                     l4472:
  7683  00167C  A02D               	btfss	___fladd@grs^0,0,c
  7684  00167E  EF43  F00B         	goto	u4421
  7685  001682  EF45  F00B         	goto	u4420
  7686  001686                     u4421:
  7687  001686  EF49  F00B         	goto	l4476
  7688  00168A                     u4420:
  7689  00168A  80D8               	bsf	status,0,c
  7690  00168C  362D               	rlcf	___fladd@grs^0,f,c
  7691  00168E  EF4B  F00B         	goto	l4478
  7692  001692                     l4476:
  7693  001692  90D8               	bcf	status,0,c
  7694  001694  362D               	rlcf	___fladd@grs^0,f,c
  7695  001696                     l4478:
  7696  001696  502C               	movf	___fladd@bexp^0,w,c
  7697  001698  B4D8               	btfsc	status,2,c
  7698  00169A  EF51  F00B         	goto	u4431
  7699  00169E  EF53  F00B         	goto	u4430
  7700  0016A2                     u4431:
  7701  0016A2  EF54  F00B         	goto	l4482
  7702  0016A6                     u4430:
  7703  0016A6  062C               	decf	___fladd@bexp^0,f,c
  7704  0016A8                     l4482:
  7705  0016A8  AE20               	btfss	(___fladd@b+2)^0,7,c
  7706  0016AA  EF59  F00B         	goto	u4441
  7707  0016AE  EF5B  F00B         	goto	u4440
  7708  0016B2                     u4441:
  7709  0016B2  EF31  F00B         	goto	l4466
  7710  0016B6                     u4440:
  7711  0016B6                     l4484:
  7712  0016B6  0E00               	movlw	0
  7713  0016B8  6E2B               	movwf	___fladd@aexp^0,c
  7714  0016BA  AE2D               	btfss	___fladd@grs^0,7,c
  7715  0016BC  EF62  F00B         	goto	u4451
  7716  0016C0  EF64  F00B         	goto	u4450
  7717  0016C4                     u4451:
  7718  0016C4  EF7C  F00B         	goto	l975
  7719  0016C8                     u4450:
  7720  0016C8  C02D  F026         	movff	___fladd@grs,??___fladd
  7721  0016CC  0E7F               	movlw	127
  7722  0016CE  1626               	andwf	??___fladd^0,f,c
  7723  0016D0  B4D8               	btfsc	status,2,c
  7724  0016D2  EF6D  F00B         	goto	u4461
  7725  0016D6  EF6F  F00B         	goto	u4460
  7726  0016DA                     u4461:
  7727  0016DA  EF73  F00B         	goto	l976
  7728  0016DE                     u4460:
  7729  0016DE                     l4490:
  7730  0016DE  0E01               	movlw	1
  7731  0016E0  6E2B               	movwf	___fladd@aexp^0,c
  7732  0016E2  EF7C  F00B         	goto	l975
  7733  0016E6                     l976:
  7734  0016E6  A01E               	btfss	___fladd@b^0,0,c
  7735  0016E8  EF78  F00B         	goto	u4471
  7736  0016EC  EF7A  F00B         	goto	u4470
  7737  0016F0                     u4471:
  7738  0016F0  EF7C  F00B         	goto	l975
  7739  0016F4                     u4470:
  7740  0016F4  EF6F  F00B         	goto	l4490
  7741  0016F8                     l975:
  7742  0016F8  502B               	movf	___fladd@aexp^0,w,c
  7743  0016FA  B4D8               	btfsc	status,2,c
  7744  0016FC  EF82  F00B         	goto	u4481
  7745  001700  EF84  F00B         	goto	u4480
  7746  001704                     u4481:
  7747  001704  EFAF  F00B         	goto	l4502
  7748  001708                     u4480:
  7749  001708  0E01               	movlw	1
  7750  00170A  261E               	addwf	___fladd@b^0,f,c
  7751  00170C  0E00               	movlw	0
  7752  00170E  221F               	addwfc	(___fladd@b+1)^0,f,c
  7753  001710  2220               	addwfc	(___fladd@b+2)^0,f,c
  7754  001712  2221               	addwfc	(___fladd@b+3)^0,f,c
  7755  001714  A021               	btfss	(___fladd@b+3)^0,0,c
  7756  001716  EF8F  F00B         	goto	u4491
  7757  00171A  EF91  F00B         	goto	u4490
  7758  00171E                     u4491:
  7759  00171E  EFAF  F00B         	goto	l4502
  7760  001722                     u4490:
  7761  001722  C01E  F026         	movff	___fladd@b,??___fladd
  7762  001726  C01F  F027         	movff	___fladd@b+1,??___fladd+1
  7763  00172A  C020  F028         	movff	___fladd@b+2,??___fladd+2
  7764  00172E  C021  F029         	movff	___fladd@b+3,??___fladd+3
  7765  001732  3429               	rlcf	(??___fladd+3)^0,w,c
  7766  001734  3229               	rrcf	(??___fladd+3)^0,f,c
  7767  001736  3228               	rrcf	(??___fladd+2)^0,f,c
  7768  001738  3227               	rrcf	(??___fladd+1)^0,f,c
  7769  00173A  3226               	rrcf	??___fladd^0,f,c
  7770  00173C  C026  F01E         	movff	??___fladd,___fladd@b
  7771  001740  C027  F01F         	movff	??___fladd+1,___fladd@b+1
  7772  001744  C028  F020         	movff	??___fladd+2,___fladd@b+2
  7773  001748  C029  F021         	movff	??___fladd+3,___fladd@b+3
  7774  00174C  282C               	incf	___fladd@bexp^0,w,c
  7775  00174E  B4D8               	btfsc	status,2,c
  7776  001750  EFAC  F00B         	goto	u4501
  7777  001754  EFAE  F00B         	goto	u4500
  7778  001758                     u4501:
  7779  001758  EFAF  F00B         	goto	l4502
  7780  00175C                     u4500:
  7781  00175C  2A2C               	incf	___fladd@bexp^0,f,c
  7782  00175E                     l4502:
  7783  00175E  282C               	incf	___fladd@bexp^0,w,c
  7784  001760  B4D8               	btfsc	status,2,c
  7785  001762  EFB5  F00B         	goto	u4511
  7786  001766  EFB7  F00B         	goto	u4510
  7787  00176A                     u4511:
  7788  00176A  EFBF  F00B         	goto	l4506
  7789  00176E                     u4510:
  7790  00176E  502C               	movf	___fladd@bexp^0,w,c
  7791  001770  A4D8               	btfss	status,2,c
  7792  001772  EFBD  F00B         	goto	u4521
  7793  001776  EFBF  F00B         	goto	u4520
  7794  00177A                     u4521:
  7795  00177A  EFD1  F00B         	goto	l4510
  7796  00177E                     u4520:
  7797  00177E                     l4506:
  7798  00177E  0E00               	movlw	0
  7799  001780  6E1E               	movwf	___fladd@b^0,c
  7800  001782  0E00               	movlw	0
  7801  001784  6E1F               	movwf	(___fladd@b+1)^0,c
  7802  001786  0E00               	movlw	0
  7803  001788  6E20               	movwf	(___fladd@b+2)^0,c
  7804  00178A  0E00               	movlw	0
  7805  00178C  6E21               	movwf	(___fladd@b+3)^0,c
  7806  00178E  502C               	movf	___fladd@bexp^0,w,c
  7807  001790  A4D8               	btfss	status,2,c
  7808  001792  EFCD  F00B         	goto	u4531
  7809  001796  EFCF  F00B         	goto	u4530
  7810  00179A                     u4531:
  7811  00179A  EFD1  F00B         	goto	l4510
  7812  00179E                     u4530:
  7813  00179E  0E00               	movlw	0
  7814  0017A0  6E2A               	movwf	___fladd@signs^0,c
  7815  0017A2                     l4510:
  7816  0017A2  A02C               	btfss	___fladd@bexp^0,0,c
  7817  0017A4  EFD6  F00B         	goto	u4541
  7818  0017A8  EFD8  F00B         	goto	u4540
  7819  0017AC                     u4541:
  7820  0017AC  EFDB  F00B         	goto	l4514
  7821  0017B0                     u4540:
  7822  0017B0  8E20               	bsf	(___fladd@b+2)^0,7,c
  7823  0017B2  EFDC  F00B         	goto	l4516
  7824  0017B6                     l4514:
  7825  0017B6  9E20               	bcf	(___fladd@b+2)^0,7,c
  7826  0017B8                     l4516:
  7827  0017B8  90D8               	bcf	status,0,c
  7828  0017BA  302C               	rrcf	___fladd@bexp^0,w,c
  7829  0017BC  6E21               	movwf	(___fladd@b+3)^0,c
  7830  0017BE  AE2A               	btfss	___fladd@signs^0,7,c
  7831  0017C0  EFE4  F00B         	goto	u4551
  7832  0017C4  EFE6  F00B         	goto	u4550
  7833  0017C8                     u4551:
  7834  0017C8  EFE7  F00B         	goto	l4522
  7835  0017CC                     u4550:
  7836  0017CC  8E21               	bsf	(___fladd@b+3)^0,7,c
  7837  0017CE                     l4522:
  7838  0017CE  C01E  F01E         	movff	___fladd@b,?___fladd
  7839  0017D2  C01F  F01F         	movff	___fladd@b+1,?___fladd+1
  7840  0017D6  C020  F020         	movff	___fladd@b+2,?___fladd+2
  7841  0017DA  C021  F021         	movff	___fladd@b+3,?___fladd+3
  7842  0017DE                     l958:
  7843  0017DE  0012               	return		;funcret
  7844  0017E0                     __end_of___fladd:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function ___xxtofl *****************
  7848 ;; Defined at:
  7849 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  sign            1    wreg     unsigned char 
  7852 ;;  val             4    4[COMRAM] long 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  sign            1   12[COMRAM] unsigned char 
  7855 ;;  arg             4   14[COMRAM] unsigned long 
  7856 ;;  exp             1   13[COMRAM] unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  4    4[COMRAM] unsigned char 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7868 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;Total ram usage:       14 bytes
  7871 ;; Hardware stack levels used: 1
  7872 ;; Hardware stack levels required when called: 2
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_determine_color1
  7877 ;;		_determine_color2
  7878 ;;		_determine_color3
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text31
  7883  002E76                     __ptext31:
  7884                           	callstack 0
  7885  002E76                     ___xxtofl:
  7886                           	callstack 27
  7887                           
  7888                           ;incstack = 0
  7889                           ;___xxtofl@sign stored from wreg
  7890  002E76  6E0D               	movwf	___xxtofl@sign^0,c
  7891  002E78  500D               	movf	___xxtofl@sign^0,w,c
  7892  002E7A  B4D8               	btfsc	status,2,c
  7893  002E7C  EF42  F017         	goto	u5121
  7894  002E80  EF44  F017         	goto	u5120
  7895  002E84                     u5121:
  7896  002E84  EF66  F017         	goto	l1076
  7897  002E88                     u5120:
  7898  002E88  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7899  002E8A  EF4B  F017         	goto	u5130
  7900  002E8E  EF49  F017         	goto	u5131
  7901  002E92                     u5131:
  7902  002E92  EF66  F017         	goto	l1076
  7903  002E96                     u5130:
  7904  002E96  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7905  002E9A  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7906  002E9E  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7907  002EA2  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7908  002EA6  1E09               	comf	??___xxtofl^0,f,c
  7909  002EA8  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7910  002EAA  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7911  002EAC  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7912  002EAE  2A09               	incf	??___xxtofl^0,f,c
  7913  002EB0  0E00               	movlw	0
  7914  002EB2  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7915  002EB4  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7916  002EB6  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7917  002EB8  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7918  002EBC  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7919  002EC0  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7920  002EC4  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7921  002EC8  EF6E  F017         	goto	l4948
  7922  002ECC                     l1076:
  7923  002ECC  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7924  002ED0  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7925  002ED4  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7926  002ED8  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7927  002EDC                     l4948:
  7928  002EDC  5005               	movf	___xxtofl@val^0,w,c
  7929  002EDE  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7930  002EE0  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7931  002EE2  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7932  002EE4  A4D8               	btfss	status,2,c
  7933  002EE6  EF77  F017         	goto	u5141
  7934  002EEA  EF79  F017         	goto	u5140
  7935  002EEE                     u5141:
  7936  002EEE  EF83  F017         	goto	l4954
  7937  002EF2                     u5140:
  7938  002EF2  0E00               	movlw	0
  7939  002EF4  6E05               	movwf	?___xxtofl^0,c
  7940  002EF6  0E00               	movlw	0
  7941  002EF8  6E06               	movwf	(?___xxtofl+1)^0,c
  7942  002EFA  0E00               	movlw	0
  7943  002EFC  6E07               	movwf	(?___xxtofl+2)^0,c
  7944  002EFE  0E00               	movlw	0
  7945  002F00  6E08               	movwf	(?___xxtofl+3)^0,c
  7946  002F02  EF14  F018         	goto	l1079
  7947  002F06                     l4954:
  7948  002F06  0E96               	movlw	150
  7949  002F08  6E0E               	movwf	___xxtofl@exp^0,c
  7950  002F0A  EF8D  F017         	goto	l4958
  7951  002F0E                     l4956:
  7952  002F0E  2A0E               	incf	___xxtofl@exp^0,f,c
  7953  002F10  90D8               	bcf	status,0,c
  7954  002F12  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7955  002F14  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7956  002F16  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7957  002F18  320F               	rrcf	___xxtofl@arg^0,f,c
  7958  002F1A                     l4958:
  7959  002F1A  0E00               	movlw	0
  7960  002F1C  140F               	andwf	___xxtofl@arg^0,w,c
  7961  002F1E  6E09               	movwf	??___xxtofl^0,c
  7962  002F20  0E00               	movlw	0
  7963  002F22  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7964  002F24  6E0A               	movwf	(??___xxtofl+1)^0,c
  7965  002F26  0E00               	movlw	0
  7966  002F28  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7967  002F2A  6E0B               	movwf	(??___xxtofl+2)^0,c
  7968  002F2C  0EFE               	movlw	254
  7969  002F2E  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7970  002F30  6E0C               	movwf	(??___xxtofl+3)^0,c
  7971  002F32  5009               	movf	??___xxtofl^0,w,c
  7972  002F34  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7973  002F36  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7974  002F38  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7975  002F3A  A4D8               	btfss	status,2,c
  7976  002F3C  EFA2  F017         	goto	u5151
  7977  002F40  EFA4  F017         	goto	u5150
  7978  002F44                     u5151:
  7979  002F44  EF87  F017         	goto	l4956
  7980  002F48                     u5150:
  7981  002F48  EFB2  F017         	goto	l1083
  7982  002F4C                     l4960:
  7983  002F4C  2A0E               	incf	___xxtofl@exp^0,f,c
  7984  002F4E  0E01               	movlw	1
  7985  002F50  260F               	addwf	___xxtofl@arg^0,f,c
  7986  002F52  0E00               	movlw	0
  7987  002F54  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7988  002F56  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7989  002F58  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7990  002F5A  90D8               	bcf	status,0,c
  7991  002F5C  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7992  002F5E  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7993  002F60  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7994  002F62  320F               	rrcf	___xxtofl@arg^0,f,c
  7995  002F64                     l1083:
  7996  002F64  0E00               	movlw	0
  7997  002F66  140F               	andwf	___xxtofl@arg^0,w,c
  7998  002F68  6E09               	movwf	??___xxtofl^0,c
  7999  002F6A  0E00               	movlw	0
  8000  002F6C  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8001  002F6E  6E0A               	movwf	(??___xxtofl+1)^0,c
  8002  002F70  0E00               	movlw	0
  8003  002F72  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8004  002F74  6E0B               	movwf	(??___xxtofl+2)^0,c
  8005  002F76  0EFF               	movlw	255
  8006  002F78  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8007  002F7A  6E0C               	movwf	(??___xxtofl+3)^0,c
  8008  002F7C  5009               	movf	??___xxtofl^0,w,c
  8009  002F7E  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8010  002F80  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8011  002F82  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8012  002F84  A4D8               	btfss	status,2,c
  8013  002F86  EFC7  F017         	goto	u5161
  8014  002F8A  EFC9  F017         	goto	u5160
  8015  002F8E                     u5161:
  8016  002F8E  EFA6  F017         	goto	l4960
  8017  002F92                     u5160:
  8018  002F92  EFD1  F017         	goto	l4968
  8019  002F96                     l4966:
  8020  002F96  060E               	decf	___xxtofl@exp^0,f,c
  8021  002F98  90D8               	bcf	status,0,c
  8022  002F9A  360F               	rlcf	___xxtofl@arg^0,f,c
  8023  002F9C  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8024  002F9E  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8025  002FA0  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8026  002FA2                     l4968:
  8027  002FA2  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8028  002FA4  EFD6  F017         	goto	u5171
  8029  002FA8  EFD8  F017         	goto	u5170
  8030  002FAC                     u5171:
  8031  002FAC  EFE0  F017         	goto	l1090
  8032  002FB0                     u5170:
  8033  002FB0  0E02               	movlw	2
  8034  002FB2  600E               	cpfslt	___xxtofl@exp^0,c
  8035  002FB4  EFDE  F017         	goto	u5181
  8036  002FB8  EFE0  F017         	goto	u5180
  8037  002FBC                     u5181:
  8038  002FBC  EFCB  F017         	goto	l4966
  8039  002FC0                     u5180:
  8040  002FC0                     l1090:
  8041  002FC0  B00E               	btfsc	___xxtofl@exp^0,0,c
  8042  002FC2  EFE5  F017         	goto	u5191
  8043  002FC6  EFE7  F017         	goto	u5190
  8044  002FCA                     u5191:
  8045  002FCA  EFE8  F017         	goto	l4974
  8046  002FCE                     u5190:
  8047  002FCE  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8048  002FD0                     l4974:
  8049  002FD0  90D8               	bcf	status,0,c
  8050  002FD2  320E               	rrcf	___xxtofl@exp^0,f,c
  8051  002FD4  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8052  002FD8  6A0A               	clrf	(??___xxtofl+1)^0,c
  8053  002FDA  6A0B               	clrf	(??___xxtofl+2)^0,c
  8054  002FDC  6A0C               	clrf	(??___xxtofl+3)^0,c
  8055  002FDE  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8056  002FE2  6A0B               	clrf	(??___xxtofl+2)^0,c
  8057  002FE4  6A0A               	clrf	(??___xxtofl+1)^0,c
  8058  002FE6  6A09               	clrf	??___xxtofl^0,c
  8059  002FE8  5009               	movf	??___xxtofl^0,w,c
  8060  002FEA  120F               	iorwf	___xxtofl@arg^0,f,c
  8061  002FEC  500A               	movf	(??___xxtofl+1)^0,w,c
  8062  002FEE  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8063  002FF0  500B               	movf	(??___xxtofl+2)^0,w,c
  8064  002FF2  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8065  002FF4  500C               	movf	(??___xxtofl+3)^0,w,c
  8066  002FF6  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8067  002FF8  500D               	movf	___xxtofl@sign^0,w,c
  8068  002FFA  B4D8               	btfsc	status,2,c
  8069  002FFC  EF02  F018         	goto	u5201
  8070  003000  EF04  F018         	goto	u5200
  8071  003004                     u5201:
  8072  003004  EF0C  F018         	goto	l4984
  8073  003008                     u5200:
  8074  003008  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8075  00300A  EF0B  F018         	goto	u5210
  8076  00300E  EF09  F018         	goto	u5211
  8077  003012                     u5211:
  8078  003012  EF0C  F018         	goto	l4984
  8079  003016                     u5210:
  8080  003016  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8081  003018                     l4984:
  8082  003018  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8083  00301C  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8084  003020  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8085  003024  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8086  003028                     l1079:
  8087  003028  0012               	return		;funcret
  8088  00302A                     __end_of___xxtofl:
  8089                           	callstack 0
  8090                           
  8091 ;; *************** function ___wmul *****************
  8092 ;; Defined at:
  8093 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  multiplier      2    4[COMRAM] unsigned int 
  8096 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  product         2    8[COMRAM] unsigned int 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  2    4[COMRAM] unsigned int 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0, prodl, prodh
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8111 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8112 ;;Total ram usage:        6 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 2
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_determine_color1
  8119 ;;		_determine_color2
  8120 ;;		_determine_color3
  8121 ;;		_setMotorPWM
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text32
  8126  003C60                     __ptext32:
  8127                           	callstack 0
  8128  003C60                     ___wmul:
  8129                           	callstack 27
  8130  003C60  5005               	movf	___wmul@multiplier^0,w,c
  8131  003C62  0207               	mulwf	___wmul@multiplicand^0,c
  8132  003C64  CFF3 F009          	movff	prodl,___wmul@product
  8133  003C68  CFF4 F00A          	movff	prodh,___wmul@product+1
  8134  003C6C  5005               	movf	___wmul@multiplier^0,w,c
  8135  003C6E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8136  003C70  50F3               	movf	243,w,c
  8137  003C72  260A               	addwf	(___wmul@product+1)^0,f,c
  8138  003C74  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8139  003C76  0207               	mulwf	___wmul@multiplicand^0,c
  8140  003C78  50F3               	movf	243,w,c
  8141  003C7A  260A               	addwf	(___wmul@product+1)^0,f,c
  8142  003C7C  C009  F005         	movff	___wmul@product,?___wmul
  8143  003C80  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8144  003C84  0012               	return		;funcret
  8145  003C86                     __end_of___wmul:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function ___fltol *****************
  8149 ;; Defined at:
  8150 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  f1              4   36[BANK0 ] unsigned int 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  exp1            1   59[COMRAM] unsigned char 
  8155 ;;  sign1           1   58[COMRAM] unsigned char 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  4   36[BANK0 ] long 
  8158 ;; Registers used:
  8159 ;;		wreg, status,2, status,0
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8165 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;Total ram usage:       10 bytes
  8170 ;; Hardware stack levels used: 1
  8171 ;; Hardware stack levels required when called: 2
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_determine_color1
  8176 ;;		_determine_color2
  8177 ;;		_determine_color3
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text33
  8182  003316                     __ptext33:
  8183                           	callstack 0
  8184  003316                     ___fltol:
  8185                           	callstack 27
  8186  003316  0100               	movlb	0	; () banked
  8187  003318  35C4               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8188  00331A  35C5               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8189  00331C  6E3C               	movwf	___fltol@exp1^0,c
  8190  00331E  503C               	movf	___fltol@exp1^0,w,c
  8191  003320  A4D8               	btfss	status,2,c
  8192  003322  EF95  F019         	goto	u5051
  8193  003326  EF97  F019         	goto	u5050
  8194  00332A                     u5051:
  8195  00332A  EFA1  F019         	goto	l4904
  8196  00332E                     u5050:
  8197  00332E                     l4900:
  8198                           
  8199                           ; BSR set to: 0
  8200  00332E  0E00               	movlw	0
  8201  003330  6FC2               	movwf	?___fltol& (0+255),b
  8202  003332  0E00               	movlw	0
  8203  003334  6FC3               	movwf	(?___fltol+1)& (0+255),b
  8204  003336  0E00               	movlw	0
  8205  003338  6FC4               	movwf	(?___fltol+2)& (0+255),b
  8206  00333A  0E00               	movlw	0
  8207  00333C  6FC5               	movwf	(?___fltol+3)& (0+255),b
  8208  00333E  EF0E  F01A         	goto	l718
  8209  003342                     l4904:
  8210                           
  8211                           ; BSR set to: 0
  8212  003342  C0C2  F037         	movff	___fltol@f1,??___fltol
  8213  003346  C0C3  F038         	movff	___fltol@f1+1,??___fltol+1
  8214  00334A  C0C4  F039         	movff	___fltol@f1+2,??___fltol+2
  8215  00334E  C0C5  F03A         	movff	___fltol@f1+3,??___fltol+3
  8216  003352  0E20               	movlw	32
  8217  003354  EFB1  F019         	goto	u5060
  8218  003358                     u5065:
  8219  003358  90D8               	bcf	status,0,c
  8220  00335A  323A               	rrcf	(??___fltol+3)^0,f,c
  8221  00335C  3239               	rrcf	(??___fltol+2)^0,f,c
  8222  00335E  3238               	rrcf	(??___fltol+1)^0,f,c
  8223  003360  3237               	rrcf	??___fltol^0,f,c
  8224  003362                     u5060:
  8225  003362  2EE8               	decfsz	wreg,f,c
  8226  003364  EFAC  F019         	goto	u5065
  8227  003368  5037               	movf	??___fltol^0,w,c
  8228  00336A  6E3B               	movwf	___fltol@sign1^0,c
  8229  00336C                     
  8230                           ; BSR set to: 0
  8231  00336C  8FC4               	bsf	(___fltol@f1+2)& (0+255),7,b
  8232  00336E                     
  8233                           ; BSR set to: 0
  8234  00336E  0EFF               	movlw	255
  8235  003370  17C2               	andwf	___fltol@f1& (0+255),f,b
  8236  003372  0EFF               	movlw	255
  8237  003374  17C3               	andwf	(___fltol@f1+1)& (0+255),f,b
  8238  003376  0EFF               	movlw	255
  8239  003378  17C4               	andwf	(___fltol@f1+2)& (0+255),f,b
  8240  00337A  0E00               	movlw	0
  8241  00337C  17C5               	andwf	(___fltol@f1+3)& (0+255),f,b
  8242  00337E                     
  8243                           ; BSR set to: 0
  8244  00337E  0E96               	movlw	150
  8245  003380  5E3C               	subwf	___fltol@exp1^0,f,c
  8246  003382                     
  8247                           ; BSR set to: 0
  8248  003382  BE3C               	btfsc	___fltol@exp1^0,7,c
  8249  003384  EFC8  F019         	goto	u5070
  8250  003388  EFC6  F019         	goto	u5071
  8251  00338C                     u5071:
  8252  00338C  EFDE  F019         	goto	l4924
  8253  003390                     u5070:
  8254  003390                     
  8255                           ; BSR set to: 0
  8256  003390  503C               	movf	___fltol@exp1^0,w,c
  8257  003392  0A80               	xorlw	128
  8258  003394  0F97               	addlw	151
  8259  003396  B0D8               	btfsc	status,0,c
  8260  003398  EFD0  F019         	goto	u5081
  8261  00339C  EFD2  F019         	goto	u5080
  8262  0033A0                     u5081:
  8263  0033A0  EFD4  F019         	goto	l4920
  8264  0033A4                     u5080:
  8265  0033A4  EF97  F019         	goto	l4900
  8266  0033A8                     l4920:
  8267                           
  8268                           ; BSR set to: 0
  8269  0033A8  90D8               	bcf	status,0,c
  8270  0033AA  33C5               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8271  0033AC  33C4               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8272  0033AE  33C3               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8273  0033B0  33C2               	rrcf	___fltol@f1& (0+255),f,b
  8274  0033B2                     
  8275                           ; BSR set to: 0
  8276  0033B2  3E3C               	incfsz	___fltol@exp1^0,f,c
  8277  0033B4  EFD4  F019         	goto	l4920
  8278  0033B8  EFF6  F019         	goto	l4934
  8279  0033BC                     l4924:
  8280                           
  8281                           ; BSR set to: 0
  8282  0033BC  0E1F               	movlw	31
  8283  0033BE  643C               	cpfsgt	___fltol@exp1^0,c
  8284  0033C0  EFE4  F019         	goto	u5091
  8285  0033C4  EFE6  F019         	goto	u5090
  8286  0033C8                     u5091:
  8287  0033C8  EFEE  F019         	goto	l4932
  8288  0033CC                     u5090:
  8289  0033CC  EF97  F019         	goto	l4900
  8290  0033D0                     l4930:
  8291                           
  8292                           ; BSR set to: 0
  8293  0033D0  90D8               	bcf	status,0,c
  8294  0033D2  37C2               	rlcf	___fltol@f1& (0+255),f,b
  8295  0033D4  37C3               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8296  0033D6  37C4               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8297  0033D8  37C5               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8298  0033DA  063C               	decf	___fltol@exp1^0,f,c
  8299  0033DC                     l4932:
  8300                           
  8301                           ; BSR set to: 0
  8302  0033DC  503C               	movf	___fltol@exp1^0,w,c
  8303  0033DE  A4D8               	btfss	status,2,c
  8304  0033E0  EFF4  F019         	goto	u5101
  8305  0033E4  EFF6  F019         	goto	u5100
  8306  0033E8                     u5101:
  8307  0033E8  EFE8  F019         	goto	l4930
  8308  0033EC                     u5100:
  8309  0033EC                     l4934:
  8310                           
  8311                           ; BSR set to: 0
  8312  0033EC  503B               	movf	___fltol@sign1^0,w,c
  8313  0033EE  B4D8               	btfsc	status,2,c
  8314  0033F0  EFFC  F019         	goto	u5111
  8315  0033F4  EFFE  F019         	goto	u5110
  8316  0033F8                     u5111:
  8317  0033F8  EF06  F01A         	goto	l4938
  8318  0033FC                     u5110:
  8319  0033FC                     
  8320                           ; BSR set to: 0
  8321  0033FC  1FC5               	comf	(___fltol@f1+3)& (0+255),f,b
  8322  0033FE  1FC4               	comf	(___fltol@f1+2)& (0+255),f,b
  8323  003400  1FC3               	comf	(___fltol@f1+1)& (0+255),f,b
  8324  003402  6DC2               	negf	___fltol@f1& (0+255),b
  8325  003404  0E00               	movlw	0
  8326  003406  23C3               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8327  003408  23C4               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8328  00340A  23C5               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8329  00340C                     l4938:
  8330                           
  8331                           ; BSR set to: 0
  8332  00340C  C0C2  F0C2         	movff	___fltol@f1,?___fltol
  8333  003410  C0C3  F0C3         	movff	___fltol@f1+1,?___fltol+1
  8334  003414  C0C4  F0C4         	movff	___fltol@f1+2,?___fltol+2
  8335  003418  C0C5  F0C5         	movff	___fltol@f1+3,?___fltol+3
  8336  00341C                     l718:
  8337                           
  8338                           ; BSR set to: 0
  8339  00341C  0012               	return		;funcret
  8340  00341E                     __end_of___fltol:
  8341                           	callstack 0
  8342                           
  8343 ;; *************** function _color_click_init *****************
  8344 ;; Defined at:
  8345 ;;		line 6 in file "color.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;		None
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;Total ram usage:        1 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; Hardware stack levels required when called: 5
  8366 ;; This function calls:
  8367 ;;		_I2C_2_Master_Init
  8368 ;;		_color_writetoaddr
  8369 ;; This function is called by:
  8370 ;;		_main
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text34
  8375  003B2A                     __ptext34:
  8376                           	callstack 0
  8377  003B2A                     _color_click_init:
  8378                           	callstack 25
  8379  003B2A                     
  8380                           ;color.c: 9:     I2C_2_Master_Init();
  8381  003B2A  ECDD  F01D         	call	_I2C_2_Master_Init	;wreg free
  8382  003B2E                     
  8383                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8384  003B2E  0E01               	movlw	1
  8385  003B30  6E07               	movwf	color_writetoaddr@value^0,c
  8386  003B32  0E00               	movlw	0
  8387  003B34  EC64  F01E         	call	_color_writetoaddr
  8388  003B38                     
  8389                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8390  003B38  0E3F               	movlw	63
  8391  003B3A  6E09               	movwf	??_color_click_init^0,c
  8392  003B3C  0E55               	movlw	85
  8393  003B3E                     u5607:
  8394  003B3E  2EE8               	decfsz	wreg,f,c
  8395  003B40  D7FE               	bra	u5607
  8396  003B42  2E09               	decfsz	??_color_click_init^0,f,c
  8397  003B44  D7FC               	bra	u5607
  8398  003B46  F000               	nop	
  8399  003B48                     
  8400                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  8401  003B48  0E03               	movlw	3
  8402  003B4A  6E07               	movwf	color_writetoaddr@value^0,c
  8403  003B4C  0E00               	movlw	0
  8404  003B4E  EC64  F01E         	call	_color_writetoaddr
  8405  003B52                     
  8406                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  8407  003B52  0ED5               	movlw	213
  8408  003B54  6E07               	movwf	color_writetoaddr@value^0,c
  8409  003B56  0E01               	movlw	1
  8410  003B58  EC64  F01E         	call	_color_writetoaddr
  8411  003B5C  0012               	return		;funcret
  8412  003B5E                     __end_of_color_click_init:
  8413                           	callstack 0
  8414                           
  8415 ;; *************** function _color_writetoaddr *****************
  8416 ;; Defined at:
  8417 ;;		line 22 in file "color.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  address         1    wreg     unsigned char 
  8420 ;;  value           1    6[COMRAM] unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  address         1    7[COMRAM] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8432 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;Total ram usage:        2 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 4
  8439 ;; This function calls:
  8440 ;;		_I2C_2_Master_Start
  8441 ;;		_I2C_2_Master_Stop
  8442 ;;		_I2C_2_Master_Write
  8443 ;; This function is called by:
  8444 ;;		_color_click_init
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text35
  8449  003CC8                     __ptext35:
  8450                           	callstack 0
  8451  003CC8                     _color_writetoaddr:
  8452                           	callstack 25
  8453                           
  8454                           ;incstack = 0
  8455                           ;color_writetoaddr@address stored from wreg
  8456  003CC8  6E08               	movwf	color_writetoaddr@address^0,c
  8457  003CCA                     
  8458                           ;color.c: 23:     I2C_2_Master_Start();
  8459  003CCA  ECAF  F01E         	call	_I2C_2_Master_Start	;wreg free
  8460                           
  8461                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8462  003CCE  0E52               	movlw	82
  8463  003CD0  EC99  F01E         	call	_I2C_2_Master_Write
  8464                           
  8465                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8466  003CD4  5008               	movf	color_writetoaddr@address^0,w,c
  8467  003CD6  0980               	iorlw	128
  8468  003CD8  EC99  F01E         	call	_I2C_2_Master_Write
  8469                           
  8470                           ;color.c: 26:     I2C_2_Master_Write(value);
  8471  003CDC  5007               	movf	color_writetoaddr@value^0,w,c
  8472  003CDE  EC99  F01E         	call	_I2C_2_Master_Write
  8473                           
  8474                           ;color.c: 27:     I2C_2_Master_Stop();
  8475  003CE2  ECAA  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8476  003CE6  0012               	return		;funcret
  8477  003CE8                     __end_of_color_writetoaddr:
  8478                           	callstack 0
  8479                           
  8480 ;; *************** function _I2C_2_Master_Write *****************
  8481 ;; Defined at:
  8482 ;;		line 45 in file "i2c.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  data_byte       1    wreg     unsigned char 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;  data_byte       1    5[COMRAM] unsigned char 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0, cstack
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;Total ram usage:        1 bytes
  8501 ;; Hardware stack levels used: 1
  8502 ;; Hardware stack levels required when called: 3
  8503 ;; This function calls:
  8504 ;;		_I2C_2_Master_Idle
  8505 ;; This function is called by:
  8506 ;;		_color_writetoaddr
  8507 ;;		_color_read_Red
  8508 ;;		_color_read_Green
  8509 ;;		_color_read_Blue
  8510 ;;		_read_color_sensor
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text36
  8515  003D32                     __ptext36:
  8516                           	callstack 0
  8517  003D32                     _I2C_2_Master_Write:
  8518                           	callstack 25
  8519                           
  8520                           ;incstack = 0
  8521                           ;I2C_2_Master_Write@data_byte stored from wreg
  8522  003D32  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  8523  003D34                     
  8524                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8525  003D34  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8526  003D38                     
  8527                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8528  003D38  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8529  003D3C  0012               	return		;funcret
  8530  003D3E                     __end_of_I2C_2_Master_Write:
  8531                           	callstack 0
  8532                           
  8533 ;; *************** function _I2C_2_Master_Stop *****************
  8534 ;; Defined at:
  8535 ;;		line 39 in file "i2c.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, status,0, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 3
  8556 ;; This function calls:
  8557 ;;		_I2C_2_Master_Idle
  8558 ;; This function is called by:
  8559 ;;		_color_writetoaddr
  8560 ;;		_color_read_Red
  8561 ;;		_color_read_Green
  8562 ;;		_color_read_Blue
  8563 ;;		_read_color_sensor
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text37
  8568  003D54                     __ptext37:
  8569                           	callstack 0
  8570  003D54                     _I2C_2_Master_Stop:
  8571                           	callstack 25
  8572  003D54                     
  8573                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8574  003D54  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8575  003D58                     
  8576                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8577  003D58  010E               	movlb	14	; () banked
  8578  003D5A  85DA               	bsf	218,2,b	;volatile
  8579  003D5C                     
  8580                           ; BSR set to: 14
  8581  003D5C  0012               	return		;funcret
  8582  003D5E                     __end_of_I2C_2_Master_Stop:
  8583                           	callstack 0
  8584                           
  8585 ;; *************** function _I2C_2_Master_Start *****************
  8586 ;; Defined at:
  8587 ;;		line 27 in file "i2c.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 3
  8608 ;; This function calls:
  8609 ;;		_I2C_2_Master_Idle
  8610 ;; This function is called by:
  8611 ;;		_color_writetoaddr
  8612 ;;		_color_read_Red
  8613 ;;		_color_read_Green
  8614 ;;		_color_read_Blue
  8615 ;;		_read_color_sensor
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text38
  8620  003D5E                     __ptext38:
  8621                           	callstack 0
  8622  003D5E                     _I2C_2_Master_Start:
  8623                           	callstack 25
  8624  003D5E                     
  8625                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8626  003D5E  EC1C  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8627  003D62                     
  8628                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8629  003D62  010E               	movlb	14	; () banked
  8630  003D64  81DA               	bsf	218,0,b	;volatile
  8631  003D66                     
  8632                           ; BSR set to: 14
  8633  003D66  0012               	return		;funcret
  8634  003D68                     __end_of_I2C_2_Master_Start:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function _I2C_2_Master_Idle *****************
  8638 ;; Defined at:
  8639 ;;		line 22 in file "i2c.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;		None
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;		None
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8657 ;;Total ram usage:        1 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 2
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_I2C_2_Master_Start
  8664 ;;		_I2C_2_Master_RepStart
  8665 ;;		_I2C_2_Master_Stop
  8666 ;;		_I2C_2_Master_Write
  8667 ;;		_I2C_2_Master_Read
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text39
  8672  003C38                     __ptext39:
  8673                           	callstack 0
  8674  003C38                     _I2C_2_Master_Idle:
  8675                           	callstack 25
  8676  003C38                     l99:
  8677  003C38  010E               	movlb	14	; () banked
  8678  003C3A  B5D8               	btfsc	216,2,b	;volatile
  8679  003C3C  EF22  F01E         	goto	u3971
  8680  003C40  EF24  F01E         	goto	u3970
  8681  003C44                     u3971:
  8682  003C44  EF1C  F01E         	goto	l99
  8683  003C48                     u3970:
  8684  003C48                     
  8685                           ; BSR set to: 14
  8686  003C48  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8687  003C4C  0E1F               	movlw	31
  8688  003C4E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  8689  003C50  A4D8               	btfss	status,2,c
  8690  003C52  EF2D  F01E         	goto	u3981
  8691  003C56  EF2F  F01E         	goto	u3980
  8692  003C5A                     u3981:
  8693  003C5A  EF1C  F01E         	goto	l99
  8694  003C5E                     u3980:
  8695  003C5E                     
  8696                           ; BSR set to: 14
  8697  003C5E  0012               	return		;funcret
  8698  003C60                     __end_of_I2C_2_Master_Idle:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function _I2C_2_Master_Init *****************
  8702 ;; Defined at:
  8703 ;;		line 4 in file "i2c.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;Total ram usage:        0 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 2
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_color_click_init
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text40
  8732  003BBA                     __ptext40:
  8733                           	callstack 0
  8734  003BBA                     _I2C_2_Master_Init:
  8735                           	callstack 27
  8736  003BBA                     
  8737                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8738  003BBA  010E               	movlb	14	; () banked
  8739  003BBC  51D9               	movf	217,w,b	;volatile
  8740  003BBE  0BF0               	andlw	-16
  8741  003BC0  0908               	iorlw	8
  8742  003BC2  6FD9               	movwf	217,b	;volatile
  8743  003BC4                     
  8744                           ; BSR set to: 14
  8745                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8746  003BC4  8BD9               	bsf	217,5,b	;volatile
  8747                           
  8748                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8749  003BC6  0E9F               	movlw	159
  8750  003BC8  6FD6               	movwf	214,b	;volatile
  8751  003BCA                     
  8752                           ; BSR set to: 14
  8753                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8754  003BCA  8A84               	bsf	132,5,c	;volatile
  8755  003BCC                     
  8756                           ; BSR set to: 14
  8757                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8758  003BCC  8C84               	bsf	132,6,c	;volatile
  8759  003BCE                     
  8760                           ; BSR set to: 14
  8761                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8762  003BCE  9BA7               	bcf	167,5,b	;volatile
  8763  003BD0                     
  8764                           ; BSR set to: 14
  8765                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8766  003BD0  9DA7               	bcf	167,6,b	;volatile
  8767                           
  8768                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8769  003BD2  0E1D               	movlw	29
  8770  003BD4  6F1D               	movwf	29,b	;volatile
  8771                           
  8772                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8773  003BD6  0E1E               	movlw	30
  8774  003BD8  6F1C               	movwf	28,b	;volatile
  8775                           
  8776                           ;i2c.c: 18:   RD5PPS=0x1C;
  8777  003BDA  0E1C               	movlw	28
  8778  003BDC  6F6F               	movwf	111,b	;volatile
  8779                           
  8780                           ;i2c.c: 19:   RD6PPS=0x1B;
  8781  003BDE  0E1B               	movlw	27
  8782  003BE0  6F70               	movwf	112,b	;volatile
  8783  003BE2                     
  8784                           ; BSR set to: 14
  8785  003BE2  0012               	return		;funcret
  8786  003BE4                     __end_of_I2C_2_Master_Init:
  8787                           	callstack 0
  8788                           
  8789 ;; *************** function _TxBufferedString *****************
  8790 ;; Defined at:
  8791 ;;		line 98 in file "serial.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  string          2    5[COMRAM] PTR unsigned char 
  8794 ;;		 -> main@string3(20), main@string2(20), main@string1(20), main@string(20), 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;Total ram usage:        2 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 3
  8813 ;; This function calls:
  8814 ;;		_putCharToTxBuf
  8815 ;; This function is called by:
  8816 ;;		_main
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text41
  8821  003B5E                     __ptext41:
  8822                           	callstack 0
  8823  003B5E                     _TxBufferedString:
  8824                           	callstack 27
  8825  003B5E                     
  8826                           ;serial.c: 100:     while(*string != 0){
  8827  003B5E  EFBA  F01D         	goto	l5202
  8828  003B62                     l5198:
  8829                           
  8830                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  8831  003B62  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8832  003B66  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8833  003B6A  50DF               	movf	indf2,w,c
  8834  003B6C  ECF2  F01D         	call	_putCharToTxBuf
  8835  003B70  4A06               	infsnz	TxBufferedString@string^0,f,c
  8836  003B72  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  8837  003B74                     l5202:
  8838                           
  8839                           ;serial.c: 100:     while(*string != 0){
  8840  003B74  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8841  003B78  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8842  003B7C  50DF               	movf	indf2,w,c
  8843  003B7E  A4D8               	btfss	status,2,c
  8844  003B80  EFC4  F01D         	goto	u5361
  8845  003B84  EFC6  F01D         	goto	u5360
  8846  003B88                     u5361:
  8847  003B88  EFB1  F01D         	goto	l5198
  8848  003B8C                     u5360:
  8849  003B8C  0012               	return		;funcret
  8850  003B8E                     __end_of_TxBufferedString:
  8851                           	callstack 0
  8852                           
  8853 ;; *************** function _putCharToTxBuf *****************
  8854 ;; Defined at:
  8855 ;;		line 85 in file "serial.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  byte            1    wreg     unsigned char 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  byte            1    4[COMRAM] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;Total ram usage:        1 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 2
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_TxBufferedString
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text42
  8884  003BE4                     __ptext42:
  8885                           	callstack 0
  8886  003BE4                     _putCharToTxBuf:
  8887                           	callstack 27
  8888                           
  8889                           ;incstack = 0
  8890                           ;putCharToTxBuf@byte stored from wreg
  8891  003BE4  6E05               	movwf	putCharToTxBuf@byte^0,c
  8892  003BE6                     
  8893                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8894  003BE6  0E3B               	movlw	59
  8895  003BE8  6457               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8896  003BEA  EFF9  F01D         	goto	u5021
  8897  003BEE  EFFB  F01D         	goto	u5020
  8898  003BF2                     u5021:
  8899  003BF2  EFFD  F01D         	goto	l4884
  8900  003BF6                     u5020:
  8901  003BF6  0E00               	movlw	0
  8902  003BF8  6E57               	movwf	_TxBufWriteCnt^0,c	;volatile
  8903  003BFA                     l4884:
  8904                           
  8905                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8906  003BFA  0E6C               	movlw	low _EUSART4TXbuf
  8907  003BFC  2457               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8908  003BFE  6ED9               	movwf	fsr2l,c
  8909  003C00  6ADA               	clrf	fsr2h,c
  8910  003C02  0E02               	movlw	high _EUSART4TXbuf
  8911  003C04  22DA               	addwfc	fsr2h,f,c
  8912  003C06  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8913  003C0A  2A57               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8914  003C0C  0012               	return		;funcret
  8915  003C0E                     __end_of_putCharToTxBuf:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _Interrupts_init *****************
  8919 ;; Defined at:
  8920 ;;		line 10 in file "interrupts.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		None
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;Total ram usage:        0 bytes
  8939 ;; Hardware stack levels used: 1
  8940 ;; Hardware stack levels required when called: 2
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_main
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text43
  8949  003D3E                     __ptext43:
  8950                           	callstack 0
  8951  003D3E                     _Interrupts_init:
  8952                           	callstack 28
  8953  003D3E                     
  8954                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8955  003D3E  8CF2               	bsf	242,6,c	;volatile
  8956                           
  8957                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  8958  003D40  010E               	movlb	14	; () banked
  8959  003D42  872D               	bsf	45,3,b	;volatile
  8960                           
  8961                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  8962  003D44  952D               	bcf	45,2,b	;volatile
  8963                           
  8964                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  8965  003D46  8EF2               	bsf	242,7,c	;volatile
  8966  003D48                     
  8967                           ; BSR set to: 14
  8968  003D48  0012               	return		;funcret
  8969  003D4A                     __end_of_Interrupts_init:
  8970                           	callstack 0
  8971                           
  8972 ;; *************** function _HighISR *****************
  8973 ;; Defined at:
  8974 ;;		line 24 in file "interrupts.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;Total ram usage:        2 bytes
  8993 ;; Hardware stack levels used: 1
  8994 ;; Hardware stack levels required when called: 1
  8995 ;; This function calls:
  8996 ;;		_getCharFromTxBuf
  8997 ;;		_putCharToRxBuf
  8998 ;;		i2_isDataInTxBuf
  8999 ;; This function is called by:
  9000 ;;		Interrupt level 2
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	intcode
  9005  000008                     __pintcode:
  9006                           	callstack 0
  9007  000008                     _HighISR:
  9008                           	callstack 21
  9009                           
  9010                           ; BSR set to: 14
  9011                           ;incstack = 0
  9012  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9013  00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  9014  00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  9015  000012                     
  9016                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  9017  000012  010E               	movlb	14	; () banked
  9018  000014  A737               	btfss	55,3,b	;volatile
  9019  000016  EF0F  F000         	goto	i2u369_41
  9020  00001A  EF11  F000         	goto	i2u369_40
  9021  00001E                     i2u369_41:
  9022  00001E  EF14  F000         	goto	i2l4072
  9023  000022                     i2u369_40:
  9024  000022                     
  9025                           ; BSR set to: 14
  9026                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  9027  000022  51E3               	movf	227,w,b	;volatile
  9028  000024  EC07  F01E         	call	_putCharToRxBuf
  9029  000028                     i2l4072:
  9030                           
  9031                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  9032  000028  010E               	movlb	14	; () banked
  9033  00002A  A537               	btfss	55,2,b	;volatile
  9034  00002C  EF1A  F000         	goto	i2u370_41
  9035  000030  EF1C  F000         	goto	i2u370_40
  9036  000034                     i2u370_41:
  9037  000034  EF35  F000         	goto	i2l418
  9038  000038                     i2u370_40:
  9039  000038                     
  9040                           ; BSR set to: 14
  9041  000038  A52D               	btfss	45,2,b	;volatile
  9042  00003A  EF21  F000         	goto	i2u371_41
  9043  00003E  EF23  F000         	goto	i2u371_40
  9044  000042                     i2u371_41:
  9045  000042  EF35  F000         	goto	i2l418
  9046  000046                     i2u371_40:
  9047  000046                     
  9048                           ; BSR set to: 14
  9049                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  9050  000046  EC8D  F01E         	call	i2_isDataInTxBuf	;wreg free
  9051  00004A  06E8               	decf	wreg,f,c
  9052  00004C  A4D8               	btfss	status,2,c
  9053  00004E  EF2B  F000         	goto	i2u372_41
  9054  000052  EF2D  F000         	goto	i2u372_40
  9055  000056                     i2u372_41:
  9056  000056  EF33  F000         	goto	i2l416
  9057  00005A                     i2u372_40:
  9058  00005A  ECC7  F01D         	call	_getCharFromTxBuf	;wreg free
  9059  00005E  010E               	movlb	14	; () banked
  9060  000060  6FE4               	movwf	228,b	;volatile
  9061  000062  EF35  F000         	goto	i2l418
  9062  000066                     i2l416:
  9063  000066  010E               	movlb	14	; () banked
  9064  000068  952D               	bcf	45,2,b	;volatile
  9065  00006A                     i2l418:
  9066                           
  9067                           ; BSR set to: 14
  9068  00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9069  00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  9070  000072  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9071  000074  0011               	retfie		f
  9072  000076                     __end_of_HighISR:
  9073                           	callstack 0
  9074                           
  9075 ;; *************** function i2_isDataInTxBuf *****************
  9076 ;; Defined at:
  9077 ;;		line 93 in file "serial.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      unsigned char 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9095 ;;Total ram usage:        0 bytes
  9096 ;; Hardware stack levels used: 1
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_HighISR
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text45
  9105  003D1A                     __ptext45:
  9106                           	callstack 0
  9107  003D1A                     i2_isDataInTxBuf:
  9108                           	callstack 21
  9109  003D1A                     
  9110                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  9111  003D1A  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  9112  003D1C  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9113  003D1E  A4D8               	btfss	status,2,c
  9114  003D20  EF94  F01E         	goto	i2u168_41
  9115  003D24  EF97  F01E         	goto	i2u168_40
  9116  003D28                     i2u168_41:
  9117  003D28  0E01               	movlw	1
  9118  003D2A  EF98  F01E         	goto	i2u169_40
  9119  003D2E                     i2u168_40:
  9120  003D2E  0E00               	movlw	0
  9121  003D30                     i2u169_40:
  9122  003D30  0012               	return		;funcret
  9123  003D32                     __end_ofi2_isDataInTxBuf:
  9124                           	callstack 0
  9125                           
  9126 ;; *************** function _putCharToRxBuf *****************
  9127 ;; Defined at:
  9128 ;;		line 63 in file "serial.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;  byte            1    wreg     unsigned char 
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;  byte            1    0[COMRAM] unsigned char 
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;Total ram usage:        1 bytes
  9147 ;; Hardware stack levels used: 1
  9148 ;; This function calls:
  9149 ;;		Nothing
  9150 ;; This function is called by:
  9151 ;;		_HighISR
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text46
  9156  003C0E                     __ptext46:
  9157                           	callstack 0
  9158  003C0E                     _putCharToRxBuf:
  9159                           	callstack 21
  9160                           
  9161                           ;incstack = 0
  9162                           ;putCharToRxBuf@byte stored from wreg
  9163  003C0E  6E01               	movwf	putCharToRxBuf@byte^0,c
  9164  003C10                     
  9165                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9166  003C10  0E13               	movlw	19
  9167  003C12  6459               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9168  003C14  EF0E  F01E         	goto	i2u354_41
  9169  003C18  EF10  F01E         	goto	i2u354_40
  9170  003C1C                     i2u354_41:
  9171  003C1C  EF12  F01E         	goto	i2l3802
  9172  003C20                     i2u354_40:
  9173  003C20  0E00               	movlw	0
  9174  003C22  6E59               	movwf	_RxBufWriteCnt^0,c	;volatile
  9175  003C24                     i2l3802:
  9176                           
  9177                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9178  003C24  0E60               	movlw	low _EUSART4RXbuf
  9179  003C26  2459               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9180  003C28  6ED9               	movwf	fsr2l,c
  9181  003C2A  6ADA               	clrf	fsr2h,c
  9182  003C2C  0E00               	movlw	high _EUSART4RXbuf
  9183  003C2E  22DA               	addwfc	fsr2h,f,c
  9184  003C30  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9185  003C34  2A59               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9186  003C36  0012               	return		;funcret
  9187  003C38                     __end_of_putCharToRxBuf:
  9188                           	callstack 0
  9189                           
  9190 ;; *************** function _getCharFromTxBuf *****************
  9191 ;; Defined at:
  9192 ;;		line 79 in file "serial.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      unsigned char 
  9199 ;; Registers used:
  9200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9210 ;;Total ram usage:        2 bytes
  9211 ;; Hardware stack levels used: 1
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_HighISR
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text47
  9220  003B8E                     __ptext47:
  9221                           	callstack 0
  9222  003B8E                     _getCharFromTxBuf:
  9223                           	callstack 21
  9224  003B8E                     
  9225                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9226  003B8E  0E3B               	movlw	59
  9227  003B90  6456               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9228  003B92  EFCD  F01D         	goto	i2u355_41
  9229  003B96  EFCF  F01D         	goto	i2u355_40
  9230  003B9A                     i2u355_41:
  9231  003B9A  EFD1  F01D         	goto	i2l3810
  9232  003B9E                     i2u355_40:
  9233  003B9E  0E00               	movlw	0
  9234  003BA0  6E56               	movwf	_TxBufReadCnt^0,c	;volatile
  9235  003BA2                     i2l3810:
  9236                           
  9237                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  9238  003BA2  2A56               	incf	_TxBufReadCnt^0,f,c	;volatile
  9239  003BA4  0456               	decf	_TxBufReadCnt^0,w,c	;volatile
  9240  003BA6  6E01               	movwf	??_getCharFromTxBuf^0,c
  9241  003BA8  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9242  003BAA  0E6C               	movlw	low _EUSART4TXbuf
  9243  003BAC  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9244  003BAE  6ED9               	movwf	fsr2l,c
  9245  003BB0  0E02               	movlw	high _EUSART4TXbuf
  9246  003BB2  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9247  003BB4  6EDA               	movwf	fsr2h,c
  9248  003BB6  50DF               	movf	indf2,w,c
  9249  003BB8  0012               	return		;funcret
  9250  003BBA                     __end_of_getCharFromTxBuf:
  9251                           	callstack 0
  9252                           
  9253                           	psect	rparam
  9254  0000                     
  9255                           	psect	temp
  9256  00005A                     btemp:
  9257                           	callstack 0
  9258  00005A                     	ds	1
  9259  0000                     int$flags	set	btemp
  9260  0000                     wtemp8	set	btemp+1
  9261  0000                     ttemp5	set	btemp+1
  9262  0000                     ttemp6	set	btemp+4
  9263  0000                     ttemp7	set	btemp+8
  9264                           
  9265                           	psect	idloc
  9266                           
  9267                           ;Config register IDLOC0 @ 0x200000
  9268                           ;	unspecified, using default values
  9269  200000                     	org	2097152
  9270  200000  0FFF               	dw	4095
  9271                           
  9272                           ;Config register IDLOC1 @ 0x200002
  9273                           ;	unspecified, using default values
  9274  200002                     	org	2097154
  9275  200002  0FFF               	dw	4095
  9276                           
  9277                           ;Config register IDLOC2 @ 0x200004
  9278                           ;	unspecified, using default values
  9279  200004                     	org	2097156
  9280  200004  0FFF               	dw	4095
  9281                           
  9282                           ;Config register IDLOC3 @ 0x200006
  9283                           ;	unspecified, using default values
  9284  200006                     	org	2097158
  9285  200006  0FFF               	dw	4095
  9286                           
  9287                           ;Config register IDLOC4 @ 0x200008
  9288                           ;	unspecified, using default values
  9289  200008                     	org	2097160
  9290  200008  0FFF               	dw	4095
  9291                           
  9292                           ;Config register IDLOC5 @ 0x20000A
  9293                           ;	unspecified, using default values
  9294  20000A                     	org	2097162
  9295  20000A  0FFF               	dw	4095
  9296                           
  9297                           ;Config register IDLOC6 @ 0x20000C
  9298                           ;	unspecified, using default values
  9299  20000C                     	org	2097164
  9300  20000C  0FFF               	dw	4095
  9301                           
  9302                           ;Config register IDLOC7 @ 0x20000E
  9303                           ;	unspecified, using default values
  9304  20000E                     	org	2097166
  9305  20000E  0FFF               	dw	4095
  9306                           
  9307                           	psect	config
  9308                           
  9309                           ;Config register CONFIG1L @ 0x300000
  9310                           ;	External Oscillator mode Selection bits
  9311                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9312                           ;	Power-up default value for COSC bits
  9313                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9314  300000                     	org	3145728
  9315  300000  AA                 	db	170
  9316                           
  9317                           ;Config register CONFIG1H @ 0x300001
  9318                           ;	unspecified, using default values
  9319                           ;	Clock Out Enable bit
  9320                           ;	CLKOUTEN = 0x1, unprogrammed default
  9321                           ;	Clock Switch Enable bit
  9322                           ;	CSWEN = 0x1, unprogrammed default
  9323                           ;	Fail-Safe Clock Monitor Enable bit
  9324                           ;	FCMEN = 0x1, unprogrammed default
  9325  300001                     	org	3145729
  9326  300001  FF                 	db	255
  9327                           
  9328                           ;Config register CONFIG2L @ 0x300002
  9329                           ;	unspecified, using default values
  9330                           ;	Master Clear Enable bit
  9331                           ;	MCLRE = 0x1, unprogrammed default
  9332                           ;	Power-up Timer Enable bit
  9333                           ;	PWRTE = 0x1, unprogrammed default
  9334                           ;	Low-power BOR enable bit
  9335                           ;	LPBOREN = 0x1, unprogrammed default
  9336                           ;	Brown-out Reset Enable bits
  9337                           ;	BOREN = 0x3, unprogrammed default
  9338  300002                     	org	3145730
  9339  300002  FF                 	db	255
  9340                           
  9341                           ;Config register CONFIG2H @ 0x300003
  9342                           ;	unspecified, using default values
  9343                           ;	Brown Out Reset Voltage selection bits
  9344                           ;	BORV = 0x3, unprogrammed default
  9345                           ;	ZCD Disable bit
  9346                           ;	ZCD = 0x1, unprogrammed default
  9347                           ;	PPSLOCK bit One-Way Set Enable bit
  9348                           ;	PPS1WAY = 0x1, unprogrammed default
  9349                           ;	Stack Full/Underflow Reset Enable bit
  9350                           ;	STVREN = 0x1, unprogrammed default
  9351                           ;	Debugger Enable bit
  9352                           ;	DEBUG = 0x1, unprogrammed default
  9353                           ;	Extended Instruction Set Enable bit
  9354                           ;	XINST = 0x1, unprogrammed default
  9355  300003                     	org	3145731
  9356  300003  FF                 	db	255
  9357                           
  9358                           ;Config register CONFIG3L @ 0x300004
  9359                           ;	WDT Period Select bits
  9360                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9361                           ;	WDT operating mode
  9362                           ;	WDTE = OFF, WDT Disabled
  9363  300004                     	org	3145732
  9364  300004  9F                 	db	159
  9365                           
  9366                           ;Config register CONFIG3H @ 0x300005
  9367                           ;	unspecified, using default values
  9368                           ;	WDT Window Select bits
  9369                           ;	WDTCWS = 0x7, unprogrammed default
  9370                           ;	WDT input clock selector
  9371                           ;	WDTCCS = 0x7, unprogrammed default
  9372  300005                     	org	3145733
  9373  300005  FF                 	db	255
  9374                           
  9375                           ;Config register CONFIG4L @ 0x300006
  9376                           ;	unspecified, using default values
  9377                           ;	Write Protection Block 0
  9378                           ;	WRT0 = 0x1, unprogrammed default
  9379                           ;	Write Protection Block 1
  9380                           ;	WRT1 = 0x1, unprogrammed default
  9381                           ;	Write Protection Block 2
  9382                           ;	WRT2 = 0x1, unprogrammed default
  9383                           ;	Write Protection Block 3
  9384                           ;	WRT3 = 0x1, unprogrammed default
  9385                           ;	Write Protection Block 3
  9386                           ;	WRT4 = 0x1, unprogrammed default
  9387                           ;	Write Protection Block 3
  9388                           ;	WRT5 = 0x1, unprogrammed default
  9389                           ;	Write Protection Block 3
  9390                           ;	WRT6 = 0x1, unprogrammed default
  9391                           ;	Write Protection Block 3
  9392                           ;	WRT7 = 0x1, unprogrammed default
  9393  300006                     	org	3145734
  9394  300006  FF                 	db	255
  9395                           
  9396                           ;Config register CONFIG4H @ 0x300007
  9397                           ;	unspecified, using default values
  9398                           ;	Configuration Register Write Protection bit
  9399                           ;	WRTC = 0x1, unprogrammed default
  9400                           ;	Boot Block Write Protection bit
  9401                           ;	WRTB = 0x1, unprogrammed default
  9402                           ;	Data EEPROM Write Protection bit
  9403                           ;	WRTD = 0x1, unprogrammed default
  9404                           ;	Scanner Enable bit
  9405                           ;	SCANE = 0x1, unprogrammed default
  9406                           ;	Low Voltage Programming Enable bit
  9407                           ;	LVP = 0x1, unprogrammed default
  9408  300007                     	org	3145735
  9409  300007  FF                 	db	255
  9410                           
  9411                           ;Config register CONFIG5L @ 0x300008
  9412                           ;	unspecified, using default values
  9413                           ;	UserNVM Program Memory Code Protection bit
  9414                           ;	CP = 0x1, unprogrammed default
  9415                           ;	DataNVM Memory Code Protection bit
  9416                           ;	CPD = 0x1, unprogrammed default
  9417  300008                     	org	3145736
  9418  300008  FF                 	db	255
  9419                           
  9420                           ;Config register CONFIG5H @ 0x300009
  9421                           ;	unspecified, using default values
  9422  300009                     	org	3145737
  9423  300009  FF                 	db	255
  9424                           
  9425                           ;Config register CONFIG6L @ 0x30000A
  9426                           ;	unspecified, using default values
  9427                           ;	Table Read Protection Block 0
  9428                           ;	EBTR0 = 0x1, unprogrammed default
  9429                           ;	Table Read Protection Block 1
  9430                           ;	EBTR1 = 0x1, unprogrammed default
  9431                           ;	Table Read Protection Block 2
  9432                           ;	EBTR2 = 0x1, unprogrammed default
  9433                           ;	Table Read Protection Block 3
  9434                           ;	EBTR3 = 0x1, unprogrammed default
  9435                           ;	Table Read Protection Block 4
  9436                           ;	EBTR4 = 0x1, unprogrammed default
  9437                           ;	Table Read Protection Block 5
  9438                           ;	EBTR5 = 0x1, unprogrammed default
  9439                           ;	Table Read Protection Block 6
  9440                           ;	EBTR6 = 0x1, unprogrammed default
  9441                           ;	Table Read Protection Block 7
  9442                           ;	EBTR7 = 0x1, unprogrammed default
  9443  30000A                     	org	3145738
  9444  30000A  FF                 	db	255
  9445                           
  9446                           ;Config register CONFIG6H @ 0x30000B
  9447                           ;	unspecified, using default values
  9448                           ;	Boot Block Table Read Protection bit
  9449                           ;	EBTRB = 0x1, unprogrammed default
  9450  30000B                     	org	3145739
  9451  30000B  FF                 	db	255
  9452                           tosu	equ	0xFFF
  9453                           tosh	equ	0xFFE
  9454                           tosl	equ	0xFFD
  9455                           stkptr	equ	0xFFC
  9456                           pclatu	equ	0xFFB
  9457                           pclath	equ	0xFFA
  9458                           pcl	equ	0xFF9
  9459                           tblptru	equ	0xFF8
  9460                           tblptrh	equ	0xFF7
  9461                           tblptrl	equ	0xFF6
  9462                           tablat	equ	0xFF5
  9463                           prodh	equ	0xFF4
  9464                           prodl	equ	0xFF3
  9465                           indf0	equ	0xFEF
  9466                           postinc0	equ	0xFEE
  9467                           postdec0	equ	0xFED
  9468                           preinc0	equ	0xFEC
  9469                           plusw0	equ	0xFEB
  9470                           fsr0h	equ	0xFEA
  9471                           fsr0l	equ	0xFE9
  9472                           wreg	equ	0xFE8
  9473                           indf1	equ	0xFE7
  9474                           postinc1	equ	0xFE6
  9475                           postdec1	equ	0xFE5
  9476                           preinc1	equ	0xFE4
  9477                           plusw1	equ	0xFE3
  9478                           fsr1h	equ	0xFE2
  9479                           fsr1l	equ	0xFE1
  9480                           bsr	equ	0xFE0
  9481                           indf2	equ	0xFDF
  9482                           postinc2	equ	0xFDE
  9483                           postdec2	equ	0xFDD
  9484                           preinc2	equ	0xFDC
  9485                           plusw2	equ	0xFDB
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    4
    Data        162
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     47     109
    BANK1           256     72     150
    BANK2           256      0     168
    BANK3           256    176     176
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_5(CODE[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK3[20]), main@string2(BANK3[20]), main@string1(BANK3[20]), main@string(BANK3[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK3[20]), main@string2(BANK3[20]), main@string1(BANK3[20]), main@string(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2096_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK3[20]), main@string2(BANK3[20]), main@string1(BANK3[20]), main@string(BANK3[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK3[20]), main@string2(BANK3[20]), main@string1(BANK3[20]), main@string(BANK3[20]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK3[20]), main@string2(BANK3[20]), main@string1(BANK3[20]), main@string(BANK3[20]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S787DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S787DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    determine_color3@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK3[24]), 

    determine_color2@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK3[24]), 

    determine_color1@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK3[24]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 24
		 -> main@test(BANK3[24]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _determine_color3->___fltol
    _determine_color2->___fltol
    _determine_color1->___fltol
    _sqrtf->___fladd
    ___fladd->___flmul
    ___fltol->_sqrtf
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_determine_color1
    _main->_determine_color2
    _main->_determine_color3
    _sprintf->_vfprintf
    _determine_color3->___fltol
    _determine_color2->___fltol
    _determine_color1->___fltol
    ___fltol->_sqrtf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_determine_color1
    _main->_determine_color2
    _main->_determine_color3

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               185   185      0   61163
                                             42 BANK0      5     5      0
                                              0 BANK3    176   176      0
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                   _determine_color1
                   _determine_color2
                   _determine_color3
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    8957
                                              6 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         3     1      2     945
                                             15 COMRAM     3     1      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      90
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color3                                    78    76      2   15812
                                             60 COMRAM     4     4      0
                                             40 BANK0      2     0      2
                                              0 BANK1     72    72      0
                            ___fltol
                             ___wmul
                           ___xxtofl
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _determine_color2                                    78    76      2   15812
                                             60 COMRAM     4     4      0
                                             40 BANK0      2     0      2
                                              0 BANK1     72    72      0
                            ___fltol
                             ___wmul
                           ___xxtofl
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _determine_color1                                    78    76      2   15812
                                             60 COMRAM     4     4      0
                                             40 BANK0      2     0      2
                                              0 BANK1     72    72      0
                            ___fltol
                             ___wmul
                           ___xxtofl
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               49    45      4    8203
                                             45 COMRAM     9     5      4
                                              0 BANK0     36    36      0
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl (ARG)
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 8     4      4     124
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2513
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             29 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    5012
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                             54 COMRAM     6     6      0
                                             36 BANK0      4     0      4
                           ___xxtofl (ARG)
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     456
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _determine_color1
     ___fltol
       ___xxtofl (ARG)
       _sqrtf (ARG)
         ___fladd
           ___flmul (ARG)
         ___flge
         ___flmul
         ___xxtofl (ARG)
         _nanf (ARG)
     ___wmul
     ___xxtofl
     _sqrtf
   _determine_color2
     ___fltol
     ___wmul
     ___xxtofl
     _sqrtf
   _determine_color3
     ___fltol
     ___wmul
     ___xxtofl
     _sqrtf
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     B0      B0      12       68.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      A8      10       65.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     48      96       7       58.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      6D       5       68.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B4       8        0.0%
DATA                 0      0     2B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 01 14:31:25 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 38C6                 _color_read_Blue 3966  
                            l21 3B5C                              l30 3964                              l24 3CE6  
                            l33 39B4                              l27 3914                              l36 37A4  
                            l45 29D6                              l55 26BC                              l49 29DE  
                            l65 23A2                              l59 26C4                              l69 23AA  
                            l96 3BE2                              l99 3C38             ___wmul@multiplicand 0007  
              _color_read_Green 3916               ??_Interrupts_init 0005                             l102 3C5E  
                           l111 3D5C                             l105 3D66                             l114 3D3C  
                           l108 3D52                             l117 3A3A                             l154 3A7C  
                           l421 3C84                             l334 3CC6                             l409 3D48  
                           l292 1AA2                             l365 3C0C                             l374 3B8C  
                           l535 31B0                             l368 3D18                             l378 3D00  
                           l548 3314                             l718 341C                             l691 3520  
                           l950 14FC                             l686 34DA                             l951 14C2  
                           l949 150E                             l966 1628                             l958 17DE  
                           l975 16F8                             l976 16E6                             _abs 3A7E  
                           _pad 35EC                             wreg 000FE8                    ___flmul@aexp 0012  
                  ___flmul@bexp 0017                    ___flmul@sign 0011                    ___flmul@temp 001C  
                  ___flmul@prod 0018                    ___fltol@exp1 003C                            l1201 3D68  
                          l1042 1F22                            l1035 1D2C                            l1131 36B0  
                          ?_abs 0017                            l1052 2052                            l1044 1F9A  
                          l1045 1F88                            l1221 10BC                            l1213 131E  
                          l1126 3632                            l1039 2090                            l1224 1180  
                          l1217 105E                            l1129 3674                            l1137 2A80  
                          l1090 2FC0                            l1226 1288                            l1242 3B28  
                          l1170 386A                            l1083 2F64                            l1139 2A88  
                          l1171 3872                            l1076 2ECC                            l1236 3CA6  
                          l1164 2E74                            l1157 2CC0                            l1190 35EA  
                          l1079 3028                            l1175 3AB4                            l1178 3ABC  
                          l1099 38C4                            l4100 39D8                            l1198 39F8  
                          l4102 3AF4                            l5000 3B38                            l4120 3060  
                          l4112 302A                            l4104 3B00                            l4200 362A  
                          l5002 3B48                            l5010 3754                            l4130 30BC  
                          l4122 306E                            l4114 302E                            l4106 3B04  
                          l4210 3698                            l4202 363E                            l4220 3C48  
                          l5004 3B52                            l5020 26D8                            l4300 39FC  
                          l5012 377C                            l4140 3126                            l4132 30C4  
                          l4124 308E                            l4116 303C                            l4108 3B1C  
                          l4204 3652                            l5030 2776                            l5022 26E2  
                          l5110 21B2                            l4310 3A38                            l4302 3A00  
                          l5014 3794                            l5006 3730                            l4150 3170  
                          l4142 3146                            l4134 30D8                            l4126 3092  
                          l4118 305C                            l4214 3A7E                            l4206 3656  
                          l4230 2A58                            l4222 29E0                            l5200 3B70  
                          l4400 145C                            l5040 291A                            l5032 2792  
                          l5120 2356                            l5112 2206                            l5104 20B6  
                          l4304 3A08                            l5008 3744                            l4152 3190  
                          l4144 3148                            l4136 30E6                            l4128 309E  
                          l4160 31C4                            l4216 3A98                            l4080 3522  
                          l4208 3684                            l4240 2AB0                            l4232 2A5A  
                          l4224 2A00                            l5202 3B74                            l4218 3C38  
                          l4410 14BA                            l4402 1460                            l4330 133C  
                          l5050 29B4                            l5042 2972                            l5034 27E6  
                          l5018 26C6                            l5130 238C                            l5122 235E  
                          l5114 22CA                            l5106 2142                            l4306 3A10  
                          l4146 315A                            l4138 30F8                            l4170 3234  
                          l4162 31E4                            l4090 35A4                            l4082 3534  
                          l4250 2B4E                            l4242 2AB6                            l4234 2A74  
                          l4226 2A28                            l4500 175C                            l4420 14F0  
                          l4412 14D0                            l4404 1464                            l4332 134C  
                          l4340 1376                            l4324 1320                            l5044 298A  
                          l5052 29BC                            l5036 283A                            l5028 26EA  
                          l5060 23C8                            l5124 2374                            l5116 22E6  
                          l5108 215E                            l5140 3A7A                            l5132 3A3C  
                          l4308 3A36                            l5204 3CE8                            l4148 3160  
                          l4180 32AC                            l4172 323C                            l4164 31E8  
                          l4156 31B2                            l4084 3546                            l4260 2BF6  
                          l4252 2B54                            l4244 2ABE                            l4236 2A90  
                          l4228 2A48                            l5300 1858                            l4510 17A2  
                          l4502 175E                            l4430 1540                            l4422 14FA  
                          l4414 14DC                            l4406 148E                            l4350 13A6  
                          l4342 1386                            l4334 135C                            l4326 132C  
                          l5054 29C0                            l5046 2992                            l5038 28FE  
                          l5070 2478                            l5126 2380                            l5118 233E  
                          l5134 3A4C                            l5206 3CFC                            l4182 32BE  
                          l4174 3250                            l4166 31F6                            l4158 31B6  
                          l4086 3550                            l4094 39B6                            l4270 2C5C  
                          l4262 2C10                            l4254 2B5A                            l4246 2AC6  
                          l4238 2AA2                            l5310 1868                            l5302 1860  
                          l4520 17CC                            l4512 17B0                            l4504 176E  
                          l4440 157C                            l4432 1550                            l4424 151C  
                          l4416 14E0                            l4408 14AA                            l4360 13E6  
                          l4352 13B4                            l4344 138C                            l4336 136C  
                          l4328 133A                            l4600 1E7C                            l5048 29A8  
                          l5080 2658                            l5072 24CC                            l5056 23AC  
                          l5128 2388                            l5136 3A64                            l4176 325E  
                          l4184 32C4                            l4168 3216                            l4088 356E  
                          l4096 39C2                            l4192 35EC                            l4272 2C62  
                          l4280 2C98                            l4264 2C2A                            l4248 2ACC  
                          l4256 2BBE                            l5400 1A3C                            l5320 187C  
                          l5312 186A                            l5304 1862                            l4290 3D38  
                          l4522 17CE                            l4514 17B6                            l4506 177E  
                          l4450 15C2                            l4442 158A                            l4434 155E  
                          l4426 152C                            l4418 14EE                            l4370 1420  
                          l4362 13E8                            l4354 13B6                            l4346 139E  
                          l4338 136E                            l4610 1F12                            l4602 1EA6  
                          l4530 1C82                            l5082 2670                            l5090 26A2  
                          l5074 2520                            l5066 23D0                            l5058 23BE  
                          l5138 3A78                            l5170 3CB2                            l4186 32D4  
                          l4178 328C                            l4098 39D4                            l4194 35FC  
                          l4274 2C74                            l4258 2BD8                            l4266 2C3A  
                          l5410 1AF2                            l5402 1A60                            l5330 18C0  
                          l5322 187E                            l5314 186C                            l5306 1864  
                          l4284 3D5E                            l4292 3D54                            l4516 17B8  
                          l4508 179E                            l4460 163E                            l4452 15F6  
                          l4444 158C                            l4436 156C                            l4380 1434  
                          l4372 1424                            l4356 13C6                            l4364 13F0  
                          l4348 13A0                            l4620 1F52                            l4612 1F20  
                          l4604 1EDC                            l4540 1CBA                            l4532 1C84  
                          l5092 26A6                            l5084 2678                            l5076 25E4  
                          l5068 245C                            l5180 3CC4                            l5172 3CB4  
                          l4188 32F4                            l4196 3610                            l4276 2C80  
                          l4268 2C4C                            l4700 2E04                            l5420 1B28  
                          l5412 1AF6                            l5404 1A66                            l5340 18E0  
                          l5332 18C2                            l5324 188C                            l5316 186E  
                          l5308 1866                            l5182 3D3E                            l4286 3D62  
                          l4294 3D58                            l4518 17BE                            l4470 167A  
                          l4462 164E                            l4454 15F8                            l4446 1596  
                          l4438 1578                            l4390 1448                            l4382 1438  
                          l4374 1428                            l4366 1400                            l4358 13D6  
                          l4630 1FC4                            l4622 1F80                            l4614 1F32  
                          l4606 1EEA                            l4550 1CE6                            l4542 1CCA  
                          l4534 1C94                            l4526 1C68                            l5086 268E  
                          l5078 2600                            l5094 2092                            l5174 3CB6  
                          l4198 361E                            l4278 2C88                            l4702 2E18  
                          l5190 3896                            l5430 1B90                            l5422 1B56  
                          l5414 1B10                            l5406 1ABA                            l5350 191C  
                          l5342 18E8                            l5334 18C4                            l5326 18BC  
                          l5318 1870                            l5270 17F8                            l5262 17E0  
                          ?_pad 0015                            l4288 3D34                            l4480 16A6  
                          l4472 167C                            l4456 1608                            l4448 159C  
                          l4392 144C                            l4384 143C                            l4376 142C  
                          l4368 1412                            l4640 203A                            l4632 1FEE  
                          l4616 1F40                            l4608 1F08                            l4560 1D3C  
                          l4552 1CF6                            l4544 1CD0                            l4536 1CA4  
                          l4528 1C74                            l4720 3C86                            l4800 10D6  
                          l5088 269A                            l5096 20A4                            l5176 3CC0  
                          l5168 3CA8                            l4296 3D4A                            l4712 2E3E  
                          l5192 38B2                            l5184 3874                            l5440 1BF0  
                          l5432 1B98                            l5424 1B62                            l5416 1B18  
                          l5408 1AE6                            l5360 1942                            l5352 191E  
                          l5344 18FE                            l5336 18D0                            l5328 18BE  
                          l5280 1808                            l5272 17FA                            l5264 17EC  
                          l4730 3BCA                            l4490 16DE                            l4474 168A  
                          l4466 1662                            l4482 16A8                            l4458 1618  
                          l4394 1450                            l4386 1440                            l4378 1430  
                          l4642 2056                            l4650 207C                            l4626 1FAA  
                          l4634 1FF2                            l4618 1F44                            l4570 1D76  
                          l4562 1D4C                            l4554 1D06                            l4546 1CD6  
                          l4538 1CB4                            l4722 3C96                            l4810 119A  
                          l4802 10F6                            l5098 20AE                            l5178 3CC2  
                          l4298 3D4E                            l4714 2E62                            l4706 2E24  
                          l5186 3886                            l5450 1C46                            l5442 1BF8  
                          l5434 1BC6                            l5426 1B80                            l5418 1B20  
                          l5370 1978                            l5362 1958                            l5354 192A  
                          l5346 1918                            l5338 18D8                            l5290 1828  
                          l5282 1810                            l5274 17FE                            l5266 17F0  
                          l5196 3B5E                            l4732 3BCC                            l4900 332E  
                          l4476 1692                            l4468 166C                            l4484 16B6  
                          l4396 1454                            l4388 1444                            l4660 345C  
                          l4652 2080                            l4644 2066                            l4636 200C  
                          l4628 1FB6                            l4580 1DC8                            l4572 1D8C  
                          l4556 1D16                            l4548 1CE4                            l4820 121A  
                          l4812 11B0                            l4804 110A                            l4740 38C6  
                          l4708 2E32                            l5188 388E                            l5444 1C00  
                          l5436 1BD2                            l5428 1B88                            l5380 19B2  
                          l5372 1984                            l5364 1972                            l5356 1932  
                          l5348 191A                            l5292 183C                            l5284 1818  
                          l5276 17FE                            l5268 17F4                            l5198 3B62  
                          l4734 3BCE                            l4726 3BBA                            l4910 337E  
                          l4494 1708                            l4486 16BA                            l4478 1696  
                          l4398 1458                            l4670 34C8                            l4662 348A  
                          l4646 2074                            l4638 2020                            l4590 1E0E  
                          l4582 1DD6                            l4574 1D98                            l4566 1D60  
                          l4558 1D1C                            l4830 130E                            l4822 124C  
                          l4814 11C6                            l4806 1148                            l4742 390C  
                          l5446 1C08                            l5438 1BD6                            l5390 19DC  
                          l5382 19CC                            l5374 198C                            l5366 1974  
                          l5358 193A                            l5294 1840                            l5286 181C  
                          l5278 1804                            l4736 3BD0                            l4728 3BC4  
                          l4920 33A8                            l4912 3382                            l4904 3342  
                          l4496 1714                            l4488 16C8                            l4672 3518  
                          l4664 349A                            l4656 341E                            l4648 2076  
                          l4592 1E28                            l4584 1DE2                            l4576 1DB0  
                          l4568 1D6C                            l4824 125E                            l4816 11D6  
                          l4808 1190                            l4760 0E60                            l4752 3966  
                          l4680 2CE6                            l5448 1C36                            l5392 19E8  
                          l5384 19CE                            l5376 1994                            l5368 1976  
                          l5296 1848                            l5288 1824                            l4738 3CCA  
                          l4930 33D0                            l4922 33B2                            l4914 3390  
                          l4906 336C                            l4498 1722                            l4674 351E  
                          l4666 34A8                            l4658 344C                            l4594 1E38  
                          l4586 1DF2                            l4578 1DBC                            l4826 12EE  
                          l4818 1208                            l4770 0F12                            l4762 0E70  
                          l4754 39AC                            l4746 3916                            l4690 2D52  
                          l4682 2CF4                            l5394 19FA                            l5386 19D0  
                          l5378 199C                            l5298 1850                            l4932 33DC  
                          l4924 33BC                            l4908 336E                            l4668 34BA  
                          l4596 1E54                            l4588 1DFE                            l4828 12FE  
                          l4780 0F88                            l4772 0F30                            l4764 0E80  
                          l4748 395C                            l4692 2D9A                            l4684 2D06  
                          l5396 1A38                            l5388 19D2                            l4934 33EC  
                          l4950 2EF2                            l4942 2E78                            l4598 1E60  
                          l4790 101C                            l4774 0F5E                            l4766 0EB6  
                          l4758 0E60                            l4686 2D0A                            l4678 2CC2  
                          l5398 1A38                            l4880 3BE6                            l4936 33FC  
                          l4960 2F4C                            l4944 2E88                            l4792 1028  
                          l4776 0F72                            l4784 0FA8                            l4696 2DD2  
                          l4688 2D2E                            l4882 3BF6                            l4938 340C  
                          l4970 2FB0                            l4962 2F4E                            l4954 2F06  
                          l4946 2E96                            l4794 1036                            l4786 0FFE  
                          l4778 0F80                            l4698 2DF6                            l4884 3BFA  
                          l4892 3C60                            l4980 3008                            l4972 2FCE  
                          l4964 2F5A                            l4956 2F0E                            l4948 2EDC  
                          l4796 109E                            l4788 1012                            l4886 3C0A  
                          l4894 3C7C                            l4982 3016                            l4974 2FD0  
                          l4966 2F96                            l4958 2F1A                            l4798 10AC  
                          l4990 381A                            l4984 3018                            l4976 2FD4  
                          l4968 2FA2                            l4888 3D02                            l4992 3828  
                          l4898 3316                            l4978 2FF8                            l4994 384E  
                          l4996 3B2A                            l4988 3812                            l4998 3B2E  
                          STR_1 0E4A                            STR_2 0E05                            STR_3 0E1C  
                          STR_4 0E33                            STR_5 0E5D                            u4000 2A12  
                  _BAUD4CONbits 000EE9                            _LATE 000F7D                            u4010 2A28  
                          u4011 2A24                            _LATG 000F7F                            u4100 2C3A  
                          u4020 2A58                            u4101 2C36                            u4021 2A54  
                          u4110 2C4C                            u4030 2A74                            u4111 2C48  
                          u4031 2A70                            u4200 139E                            u4120 2C5C  
                          u4040 2AA2                            u4201 139A                            u4121 2C58  
                          u4041 2A9E                            u4210 13B4                            u4130 2C74  
                          u4050 2AB0                            _T2PR 000FBC                            u4211 13B0  
                          u4131 2C70                            u4051 2AAC                            u5020 3BF6  
                          u5100 33EC                            u4300 14EE                            u4220 13C6  
                          u4140 3A24                            u4060 2BD8                            u5021 3BF2  
                          u5101 33E8                            u4301 14EA                            u4221 13C2  
                          u4141 3A1C                            u4061 2BD4                            u5110 33FC  
                          u4310 150E                            u4230 13D6                            u5030 3D16  
                          u4070 2BF6                            u5111 33F8                            u4311 150A  
                          u4231 13D2                            u5031 3D10                            u4071 2BF2  
                          u5200 3008                            u5120 2E88                            u4400 164E  
                          u4320 151C                            u4240 1412                            u5040 3D18  
                          u4080 2C10                            u5201 3004                            u5121 2E84  
                          u4401 164A                            u4321 1518                            u4241 140E  
                          u4081 2C0C                            u5050 332E                            u5210 3016  
                          u5130 2E96                            u4410 167A                            u4330 152C  
                          u4250 1420                            u4170 133A                            u4090 2C2A  
                          u5051 332A                            u5211 3012                            u5131 2E92  
                          u4411 1676                            u4331 1528                            u4251 141C  
                          u4171 1336                            u4091 2C26                            u5060 3362  
                          u5140 2EF2                            u4500 175C                            u4420 168A  
                          u4340 155E                            u4260 148E                            u4180 134C  
                          u5300 26BC                            u5220 386A                            u5141 2EEE  
                          u4501 1758                            u4421 1686                            u4341 155A  
                          u4261 148A                            u4181 1348                            u5301 26B8  
                          u5221 3866                            u5070 3390                            u5150 2F48  
                          u4510 176E                            u4430 16A6                            u4350 156C  
                          u4270 14A6                            u4190 135C                            u4158 3A26  
                          u5071 338C                            u5151 2F44                            u4511 176A  
                          u4431 16A2                            u4351 1568                            u4271 14A0  
                          u4191 1358                            u5231 26D0                            u5311 209C  
                          u5080 33A4                            u5160 2F92                            u4520 177E  
                          u4440 16B6                            u4360 158A                            u4280 14A8  
                          u4600 1CF6                            u5240 298A                            u5320 2356  
                          u3800 306E                            u5081 33A0                            u5065 3358  
                          u5161 2F8E                            u4521 177A                            u4441 16B2  
                          u4361 1586                            u4601 1CF2                            u5241 2986  
                          u5321 2352                            u3801 306A                            u5090 33CC  
                          u5170 2FB0                            u4530 179E                            u4450 16C8  
                          u4370 15C2                            u4290 14D0                            u4610 1D06  
                          u5250 29A8                            u5330 2374                            u3730 3534  
                          u5091 33C8                            u5171 2FAC                            u4531 179A  
                          u4451 16C4                            u4371 15BE                            u4291 14CC  
                          u4611 1D02                            u5251 29A4                            u5331 2370  
                          u3811 3098                            u3731 3530                            u5180 2FC0  
                          u4540 17B0                            u4460 16DE                            u4380 1608  
                          u4700 1FAA                            u4620 1D3C                            u5260 29D6  
                          u5340 23A2                            u3820 30BC                            u3900 328C  
                          u3740 3546                            u5420 188C                            u5181 2FBC  
                          u4541 17AC                            u4461 16DA                            u4381 1604  
                          u4701 1FA6                            u4621 1D38                            u5261 29D2  
                          u5341 239E                            u3821 30B8                            u3901 3288  
                          u3741 3542                            u5421 1888                            u5190 2FCE  
                          u4550 17CC                            u4470 16F4                            u4390 163E  
                          u4710 1FC4                            u4630 1D4C                            u3830 30E6  
                          u3910 32D4                            u3750 356E                            u5191 2FCA  
                          u4551 17C8                            u4471 16F0                            u4391 163A  
                          u4711 1FC0                            u4631 1D48                            u5271 23B6  
                          u3831 30E2                            u3911 32D0                            u3751 356A  
                          u5431 1892                            u5360 3B8C                            u4480 1708  
                          u4720 200C                            u4640 1EC6                            u4560 1C82  
                          u5280 2670                            u3840 3126                            u3760 35A4  
                          u3920 35FC                            u4800 2CE6                            u5361 3B88  
                          u4481 1704                            u4721 2008                            u4561 1C7E  
                          u5281 266C                            u3841 3122                            u3761 35A0  
                          u3921 35F8                            u4801 2CE2                            u5441 189E  
                          u4490 1722                            u4730 203A                            u4650 1F20  
                          u4570 1C94                            u5290 268E                            u5370 3CFC  
                          u3850 3170                            u3770 39F8                            u3930 361E  
                          u4810 2D2E                            u4491 171E                            u4731 2036  
                          u4651 1F1C                            u4571 1C90                            u5291 268A  
                          u5371 3CF8                            u3851 316C                            u3771 39F4  
                          u3931 361A                            u4811 2D2A                            u5507 190A  
                          u5451 18AA                            u4740 2074                            u4660 1F40  
                          u4580 1CA4                            u4900 1036                            u3860 31C4  
                          u3780 3B1C                            u3940 3674                            u4820 2D52  
                          u4741 2070                            u4661 1F3C                            u4645 1EBC  
                          u4581 1CA0                            u4901 1032                            u3861 31C0  
                          u3781 3B18                            u3941 3670                            u4821 2D4E  
                          u5517 1964                            u5461 18B6                            u4750 344C  
                          u4670 1F52                            u4590 1CE4                            u4910 10AC  
                          u3790 303C                            u3870 31F6                            u3950 3684  
                          u4830 2DF6                            u5470 1A38                            u5607 3B3E  
                          u4751 3448                            u4671 1F4E                            u4591 1CE0  
                          u4911 10A8                            u3791 3038                            u3871 31F2  
                          u3951 3680                            u4831 2DF2                            u5471 1A34  
                          u5527 19BE                            u4760 348A                            u4680 1F80  
                          u4920 1148                            u4840 0EB6                            u3880 3234  
                          u3960 3A98                            u5480 1A60                            u4761 3486  
                          u4681 1F7C                            u4921 1144                            u4841 0EB2  
                          u3881 3230                            u3961 3A94                            u5537 1B02  
                          u5481 1A5C                            u3970 3C48                            u4770 34A8  
                          u4690 1F96                            u4930 11B0                            u4850 0F30  
                          u3890 325E                            u5490 1AA2                            u3971 3C44  
                          u4771 34A4                            u4691 1F92                            u4931 11AC  
                          u4851 0F2C                            u3891 325A                            u5547 1B72  
                          u5491 1A9E                            u3980 3C5E                            u4780 34C8  
                          u4940 11C6                            u4860 0F5E                            u3981 3C5A  
                          u4781 34C4                            u4941 11C2                            u4861 0F5A  
                          u5557 1BE2                            u4790 3518                            u4950 1208  
                          u4870 0F80                            u3990 2A10                            u4791 3514  
                          u4951 1204                            u4871 0F7C                            u3991 2A0A  
                          u5567 1C52                            u4960 124C                            u4961 1248  
                          u5577 374A                            u4890 0FFE                            u4891 0FFA  
                          u5587 3772                            u4885 0FBC                            u5597 379A  
                          u4886 0FC6                            u4975 12CE                            u4887 0FD6  
                          abs@a 0017                            _dbuf 007E                            _main 17E0  
                          _dtoa 29E0                            _nanf 3C86                            _prec 007A  
                          _nout 0076                            pad@i 001C                            pad@p 0019  
                          _tiny 0E01                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001E  
                          fsr2l 000FD9                            btemp 005A                            prodh 000FF4  
                          prodl 000FF3                            start 0076                     main@string1 0314  
                   main@string2 0328                     main@string3 033C          __end_of_color_read_Red 3916  
               __end_of_HighISR 0076                    ___param_bank 000000                           ??_abs 0019  
                         ??_pad 001B                   ___fltol@sign1 003B                 __end_of___aodiv 31B2  
               __end_of___fladd 17E0                           ?_main 0001                           ?_dtoa 0020  
                         ?_nanf 0005                 __end_of___aomod 3316                 __end_of___flmul 2092  
               __end_of___fltol 341E        __size_of_initDCmotorsPWM 0042                           i2l416 0066  
                         i2l361 3BB8                           i2l354 3C36                           i2l418 006A  
                         i2l368 3D30                    vfpfcnvrt@fmt 0046      __end_of_I2C_2_Master_Start 3D68  
    __end_of_I2C_2_Master_Write 3D3E                           _flags 007C                           _errno 0074  
                         _fputc 3522                           _fputs 39B6           _determine_color1$2504 0142  
         _determine_color1$2505 0144           _determine_color2$2506 0142           _determine_color2$2507 0144  
         _determine_color3$2508 0142           _determine_color3$2509 0144                           pad@fp 0015  
                         _width 0078                           _putch 3D68                           main@a 0356  
                         main@b 0358                           main@c 035A                           main@d 035C  
                         main@e 035E                           main@f 0360                           main@g 0362  
                         main@h 0364                           main@i 0384                           main@j 037C  
                         dtoa@d 0022                           dtoa@i 0042                           main@x 0350  
                         main@y 0352                           dtoa@n 003A                           main@z 0354  
                         dtoa@p 0034                           _sqrtf 0E60                           dtoa@s 0038  
                         dtoa@w 0036                           nanf@s 0005                           nanf@u 0009  
                         tablat 000FF5                           plusw1 000FE3                           plusw2 000FDB  
                         ttemp5 005B                           ttemp6 005E                           ttemp7 0062  
                         status 000FD8                           wtemp8 005B                 __end_of_sprintf 38C6  
       __end_of_color_read_Blue 39B6           _I2C_2_Master_RepStart 3D4A              putCharToRxBuf@byte 0001  
               ?_color_read_Red 0009                 __initialization 36B2                    __end_of_main 1C68  
                  __end_of_dtoa 2CC2                    __end_of_nanf 3CA8                    __end_of_tiny 0E05  
               i2_isDataInTxBuf 3D1A              putCharToTxBuf@byte 0005                          ??_main 00C8  
                        ??_dtoa 002A                          ??_nanf 0009                   __activetblptr 000001  
                        ?_fputc 0005                          ?_fputs 000E                          ?_putch 0001  
                        ?_sqrtf 002E                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l4070 0022                          i2l4072 0028  
                        i2l4074 0038                          i2l2388 3D1A                          i2l4076 0046  
                        i2l4068 0012                          i2l4078 005A                          i2l3800 3C20  
                        i2l3810 3BA2                          i2l3802 3C24                          i2l3804 3C34  
                        i2l3806 3B8E                          i2l3808 3B9E                          i2l3798 3C10  
                     ??_HighISR 0003        __end_of_color_click_init 3B5E                          _RX4PPS 000E15  
                        _TX4REG 000EE4                __end_of___xxtofl 302A                   ?_read_colours 0010  
                  vfprintf@cfmt 0054                          ___flge 341E                _getCharFromTxBuf 3B8E  
                     ??___aodiv 0015                       ??___fladd 0026                       ??___aomod 0015  
                        ___wmul 3C60                       ??___flmul 000D                       ??___fltol 0037  
             determine_color1@j 0146               determine_color1@m 00C6               determine_color2@j 0146  
             determine_color2@m 00C6               determine_color3@j 0146               determine_color3@m 00C6  
                        clear_0 36F8                          clear_1 3704                          clear_2 3710  
                        isa$std 000001                          pad@buf 0017                          dtoa@fp 0020  
                        _strlen 3AF4                          fputc@c 0005               ?_TxBufferedString 0006  
                        fputs@c 0012                          fputs@i 0013                          fputs@s 000E  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8              ??_TxBufferedString 0008                          putch@c 0001  
              __end_of_vfprintf 3874                          sqrtf@i 00A2                          sqrtf@m 00B6  
                        sqrtf@q 00AA                          sqrtf@r 00BA                          sqrtf@s 009E  
                        sqrtf@t 00AE               ??_initDCmotorsPWM 0007                          sqrtf@x 002E  
                        sqrtf@z 00B2                       ??_sprintf 0056                      ___flge@ff1 0005  
                    ___flge@ff2 0009                    ___xxtofl@arg 000F                    ___xxtofl@exp 000E  
                  ___xxtofl@val 0005           __end_of_isDataInTxBuf 3D1A                      __accesstop 0060  
       __end_of__initialization 371E        __end_of_color_read_Green 3966          ?_I2C_2_Master_RepStart 0001  
       __end_ofi2_isDataInTxBuf 3D32                   ___rparam_used 000001                      ___fltol@f1 00C2  
              ?_color_read_Blue 0009                  ??_read_colours 0012                 _Interrupts_init 3D3E  
                __pcstackCOMRAM 0001                    __pidataBANK1 3ABE                    __pidataBANK2 37A6  
     __size_of_determine_color1 031A       __size_of_determine_color2 031A       __size_of_determine_color3 031A  
                 __end_of_fputc 35EC                   __end_of_fputs 39FA                   __end_of_putch 3D6A  
                 __end_of_sqrtf 1320                         ??_fputc 0009                         ??_fputs 0012  
                       ??_putch 0005                         ??_sqrtf 0032                      __pbssBANK0 0060  
                    __pbssBANK1 017E                      __pbssBANK2 026C               _color_writetoaddr 3CC8  
                  _T2CLKCONbits 000FBF                         ?___flge 0005              ?_color_writetoaddr 0007  
                       ?___wmul 0005              __size_of_sendTxBuf 001A             ??_color_writetoaddr 0008  
                       ?_strlen 0005                       ?___xxtofl 0005                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5              __size_of_vfpfcnvrt 01B4                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
       __end_of_Interrupts_init 3D4A          color_writetoaddr@value 0007                ??_color_read_Red 000B  
                       _HighISR 0008       __end_of_color_writetoaddr 3CE8                ?i2_isDataInTxBuf 0001  
            _I2C_2_Master_Start 3D5E                      _initUSART4 3CA8              _I2C_2_Master_Write 3D32  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000E  
               __size_of___flge 0104                         ___aodiv 302A                         ___fladd 1320  
                       ___aomod 31B2                         ___flmul 1C68                         ___fltol 3316  
               __size_of___wmul 0026             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 009E                    __psmallconst 0E00         __size_of_putCharToRxBuf 002A  
       __size_of_putCharToTxBuf 002A                         __pcinit 36B2                         __ramtop 0E00  
                       __ptext0 17E0                         __ptext1 3874                         __ptext2 3812  
                       __ptext3 2CC2                         __ptext4 29E0                         __ptext5 35EC  
                       __ptext6 3AF4                         __ptext7 39B6                         __ptext8 3522  
                       __ptext9 3D68                 __size_of_strlen 0036              determine_color1@bb 013A  
            determine_color2@bb 013A              determine_color1@gg 0138              determine_color3@bb 013A  
            determine_color2@gg 0138              determine_color3@gg 0138              determine_color1@rr 0136  
            determine_color2@rr 0136              determine_color3@rr 0136                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                      ??___xxtofl 0009  
                     _T2HLTbits 000FBE            __end_of_read_colours 37A6                   _RxBufWriteCnt 0059  
      __end_of_getCharFromTxBuf 3BBA                         _sprintf 3874            ??_I2C_2_Master_Start 0006  
          ??_I2C_2_Master_Write 0006            end_of_initialization 371E               __end_of_sendTxBuf 3D02  
                       fputc@fp 0007                         fputs@fp 0010               ?_color_click_init 0001  
            ??_color_click_init 0009               __end_of_vfpfcnvrt 2E76                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                _determine_color1 26C6                _determine_color2 23AC  
              _determine_color3 2092                      main@F15081 0184                      main@F15083 017E  
                    main@F15077 0190                      main@F15079 018A                      ??_vfprintf 0054  
                       sqrtf@ix 00BE                         strlen@a 0007                         strlen@s 0005  
               _initDCmotorsPWM 3A3C                       _PORTFbits 000F8E                     ___fladd@grs 002D  
                 ___xxtofl@sign 000D                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                      main@i_1402 0366        color_writetoaddr@address 0008  
       ??_I2C_2_Master_RepStart 0006                ?_Interrupts_init 0001                     ___flmul@grs 0013  
    __size_of_color_writetoaddr 0020                    _EUSART4RXbuf 0060                    _EUSART4TXbuf 026C  
     __size_of_TxBufferedString 0030               ?_color_read_Green 0009                     ?_initUSART4 0001  
                    main@motorL 0386                      main@motorR 038F              ??_color_read_Green 000B  
                    main@string 0300                  __end_of___flge 3522                     vfpfcnvrt@ap 0048  
                   vfpfcnvrt@fp 0044                     vfpfcnvrt@ll 004C                  __end_of___wmul 3C86  
                __end_of_strlen 3B2A             start_initialization 36B2                     __end_of_abs 3ABE  
                   __end_of_pad 36B2                   _TxBufWriteCnt 0057             color_read_Green@tmp 000E  
       __end_of_initDCmotorsPWM 3A7E                     vfprintf@fmt 00A0                        ??___flge 000D  
                      ??___wmul 0009                  _putCharToRxBuf 3C0E                  _putCharToTxBuf 3BE4  
                   __pdataBANK1 0148                     __pdataBANK2 0200        __size_of_color_read_Blue 0050  
         __size_of_read_colours 0076                        ??_strlen 0007          __size_of_isDataInTxBuf 0018  
                     ___fladd@a 0022                       ___fladd@b 001E                       ___flmul@a 0009  
                     ___flmul@b 0005                     __pbssCOMRAM 0056             __size_of_initUSART4 0020  
                 __pcstackBANK0 009E                   __pcstackBANK1 0100                   __pcstackBANK3 0300  
              ___aodiv@dividend 0005               __size_of___xxtofl 01B4                        ?_HighISR 0001  
                     _dtoa$2169 0032          __end_of_putCharToRxBuf 3C38          __end_of_putCharToTxBuf 3C0E  
                  _read_colours 3730                       __pintcode 0008                        ?___aodiv 0005  
                      ?___fladd 001E                        ?___aomod 0005                ___aodiv@quotient 0017  
                      ?___flmul 0005                        ?___fltol 00C2          TxBufferedString@string 0006  
          I2C_2_Master_Read@ack 0007               __size_of_vfprintf 0062            I2C_2_Master_Read@tmp 0008  
                   __smallconst 0E00               _I2C_2_Master_Idle 3C38               _I2C_2_Master_Init 3BBA  
             _I2C_2_Master_Read 39FA               _I2C_2_Master_Stop 3D54            determine_color1@calc 0140  
          determine_color1@data 0100            determine_color2@calc 0140            determine_color2@data 0100  
          determine_color3@calc 0140            determine_color3@data 0100                    _RxBufReadCnt 0058  
          determine_color1@temp 013C            determine_color2@temp 013C            determine_color3@temp 013C  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0005                        ?_sprintf 00A4  
      __end_of_determine_color1 29E0        __end_of_determine_color2 26C6        __end_of_determine_color3 23AC  
             ?_getCharFromTxBuf 0001                  __size_of_fputc 00CA                  __size_of_fputs 0044  
                __size_of_putch 0002                  __size_of_sqrtf 04C0              ??_getCharFromTxBuf 0001  
           ??_I2C_2_Master_Idle 0005             ??_I2C_2_Master_Init 0005             ??_I2C_2_Master_Read 0006  
                ___wmul@product 0009                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0006  
                      _LATCbits 000F7B                   _isDataInTxBuf 3D02                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                _TxBufferedString 3B5E  
                      _LATGbits 000F7F                       _sendTxBuf 3CE8                        _PIE4bits 000E2D  
                      i2u168_40 3D2E                        i2u168_41 3D28                        i2u169_40 3D30  
                      i2u354_40 3C20                        i2u370_40 0038                        i2u354_41 3C1C  
                      i2u370_41 0034                        i2u355_40 3B9E                        i2u371_40 0046  
                      i2u355_41 3B9A                        i2u371_41 0042                        i2u372_40 005A  
                      i2u372_41 0056                        _PIR4bits 000E37                        i2u369_40 0022  
                      i2u369_41 001E                 ?_putCharToRxBuf 0001                ?_initDCmotorsPWM 0005  
               ?_putCharToTxBuf 0001                        _SSP2CON2 000EDA                        _SSP2STAT 000ED8  
      __size_ofi2_isDataInTxBuf 0018                       _vfpfcnvrt 2CC2          determine_color1@F14704 0148  
     __size_of_color_click_init 0034          determine_color2@F14723 0236       __end_of_I2C_2_Master_Idle 3C60  
     __end_of_I2C_2_Master_Init 3BE4       __end_of_I2C_2_Master_Read 3A3C               ___wmul@multiplier 0005  
        determine_color3@F14742 0200       __end_of_I2C_2_Master_Stop 3D5E     I2C_2_Master_Write@data_byte 0006  
                     main@count 037A                       main@test1 0368                       main@test2 036E  
                     main@test3 0374               ??_color_read_Blue 000B                    _TxBufReadCnt 0056  
                     copy_data0 36C6                       copy_data1 36E6     __size_of_I2C_2_Master_Start 000A  
   __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A                  ?_isDataInTxBuf 0001  
 __end_of_I2C_2_Master_RepStart 3D54              color_read_Blue@tmp 000E                __size_of_HighISR 006E  
                    ?_sendTxBuf 0001                    ??_initUSART4 0005                        __Hrparam 0000  
                    vfprintf@ap 00A2                        __Lrparam 0000                      vfprintf@fp 009E  
                  __Lsmallconst 0E00         __size_of_color_read_Red 0050                __size_of___aodiv 0188  
              __size_of___fladd 04C0                __size_of___aomod 0164                __size_of___flmul 042A  
              __size_of___fltol 0108                      ?_vfpfcnvrt 0044                 ___aodiv@divisor 000D  
     __size_of_color_read_Green 0050                 ___aodiv@counter 0015                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 00A6                        ___xxtofl 2E76  
            __end_of_initUSART4 3CC8                        __ptext10 3A7E                        __ptext11 31B2  
                      __ptext20 39FA                        __ptext12 302A                        __ptext21 3CA8  
                      __ptext13 3CE8                        __ptext30 1320                        __ptext22 3A3C  
                      __ptext14 3D02                        __ptext31 2E76                        __ptext23 2092  
                      __ptext15 3730                        __ptext40 3BBA                        __ptext32 3C60  
                      __ptext24 23AC                        __ptext16 38C6                        __ptext41 3B5E  
                      __ptext33 3316                        __ptext25 26C6                        __ptext17 3916  
                      __ptext42 3BE4                        __ptext34 3B2A                        __ptext26 0E60  
                      __ptext18 3966                        __ptext43 3D3E                        __ptext35 3CC8  
                      __ptext27 3C86                        __ptext19 3D4A                        __ptext36 3D32  
                      __ptext28 1C68                        __ptext45 3D1A                        __ptext37 3D54  
                      __ptext29 341E                        __ptext46 3C0E                        __ptext38 3D5E  
                      __ptext47 3B8E                        __ptext39 3C38                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                __size_of_sprintf 0052             determine_color1@out 013E  
           determine_color2@out 013E             determine_color3@out 013E                   __size_of_main 0488  
                 __size_of_dtoa 02E2                   __size_of_nanf 0022                        isa$xinst 000000  
      __size_of_Interrupts_init 000C                      _RC4STAbits 000EE7                        int$flags 005A  
                      _vfprintf 3812                        main@test 0398      __size_of_I2C_2_Master_Idle 0028  
    __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042                ___aomod@dividend 0005  
    __size_of_I2C_2_Master_Stop 000A                      _INTCONbits 000FF2               ??i2_isDataInTxBuf 0001  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                 ??_isDataInTxBuf 0005  
                      intlevel2 0000                       sprintf@ap 00AE                     ??_sendTxBuf 0005  
               main@testresults 037E                   read_colours@m 0010                 ___aomod@divisor 000D  
                   ??_vfpfcnvrt 004A                 ___aomod@counter 0015                _color_click_init 3B2A  
      __end_of_TxBufferedString 3B8E                        sprintf@f 00B0                        sprintf@s 00A4  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                   ___fladd@signs 002A  
             ?_determine_color1 00C6               ?_determine_color2 00C6               ?_determine_color3 00C6  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0016           sqrtf@__xc8_float_word 00A6  
            ??_determine_color1 003D              ??_determine_color2 003D              ??_determine_color3 003D  
                  ___fladd@aexp 002B                    ___fladd@bexp 002C                ??_putCharToRxBuf 0001  
              ??_putCharToTxBuf 0005                    ___aomod@sign 0016  
