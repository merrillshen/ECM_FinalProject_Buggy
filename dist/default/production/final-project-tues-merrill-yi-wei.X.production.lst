

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 01 17:02:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 05/05/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK1
   107  00382C                     __pidataBANK1:
   108                           	callstack 0
   109                           
   110                           ;initializer for determine_color3@F14748
   111  00382C  019F               	dw	415
   112  00382E  0385               	dw	901
   113  003830  0158               	dw	344
   114  003832  012B               	dw	299
   115  003834  0469               	dw	1129
   116  003836  01AA               	dw	426
   117  003838  0100               	dw	256
   118  00383A  0453               	dw	1107
   119  00383C  01AE               	dw	430
   120  00383E  0203               	dw	515
   121  003840  0567               	dw	1383
   122  003842  01F5               	dw	501
   123  003844  01DB               	dw	475
   124  003846  04CA               	dw	1226
   125  003848  01E1               	dw	481
   126  00384A  01BD               	dw	445
   127  00384C  03E5               	dw	997
   128  00384E  0179               	dw	377
   129  003850  019F               	dw	415
   130  003852  0589               	dw	1417
   131  003854  022F               	dw	559
   132  003856  0217               	dw	535
   133  003858  062C               	dw	1580
   134  00385A  0279               	dw	633
   135  00385C  0499               	dw	1177
   136  00385E  00F4               	dw	244
   137  003860  00B7               	dw	183
   138                           
   139                           ;initializer for determine_color2@F14729
   140  003862  0991               	dw	2449
   141  003864  009E               	dw	158
   142  003866  012C               	dw	300
   143  003868  06C9               	dw	1737
   144  00386A  00A8               	dw	168
   145  00386C  00EB               	dw	235
   146  00386E  069C               	dw	1692
   147  003870  0093               	dw	147
   148  003872  00EF               	dw	239
   149  003874  09F0               	dw	2544
   150  003876  00FA               	dw	250
   151  003878  014E               	dw	334
   152  00387A  096E               	dw	2414
   153  00387C  00ED               	dw	237
   154  00387E  00F8               	dw	248
   155  003880  09F9               	dw	2553
   156  003882  00B1               	dw	177
   157  003884  013C               	dw	316
   158  003886  08AD               	dw	2221
   159  003888  00E9               	dw	233
   160  00388A  014F               	dw	335
   161  00388C  0A10               	dw	2576
   162  00388E  0116               	dw	278
   163  003890  0187               	dw	391
   164  003892  0332               	dw	818
   165  003894  017E               	dw	382
   166  003896  00C1               	dw	193
   167                           
   168                           ;initializer for determine_color1@F14710
   169  003898  002F               	dw	47
   170  00389A  056E               	dw	1390
   171  00389C  0307               	dw	775
   172  00389E  0951               	dw	2385
   173  0038A0  067C               	dw	1660
   174  0038A2  031B               	dw	795
   175  0038A4  0686               	dw	1670
   176  0038A6  048A               	dw	1162
   177  0038A8  0257               	dw	599
   178  0038AA  0A6F               	dw	2671
   179  0038AC  05C1               	dw	1473
   180  0038AE  02E1               	dw	737
   181  0038B0  0B25               	dw	2853
   182  0038B2  056F               	dw	1391
   183  0038B4  0313               	dw	787
   184  0038B6  0976               	dw	2422
   185  0038B8  03DF               	dw	991
   186  0038BA  0234               	dw	564
   187  0038BC  08B1               	dw	2225
   188  0038BE  05E3               	dw	1507
   189  0038C0  0314               	dw	788
   190  0038C2  0A8E               	dw	2702
   191  0038C4  0676               	dw	1654
   192  0038C6  0378               	dw	888
   193  0038C8  002F               	dw	47
   194  0038CA  0017               	dw	23
   195  0038CC  0012               	dw	18
   196                           
   197                           	psect	smallconst
   198  000E00                     __psmallconst:
   199                           	callstack 0
   200  000E00  00                 	db	0
   201  000E01  4260               	dw	16992
   202  000E03  0DA2               	dw	3490
   203  000E05                     __end_of_tiny:
   204                           	callstack 0
   205  0000                     _PIE4bits	set	3629
   206  0000                     _TX4REG	set	3812
   207  0000                     _RC4REG	set	3811
   208  0000                     _PIR4bits	set	3639
   209  0000                     _RC4STAbits	set	3815
   210  0000                     _SP4BRGH	set	3814
   211  0000                     _SP4BRGL	set	3813
   212  0000                     _TX4STAbits	set	3816
   213  0000                     _BAUD4CONbits	set	3817
   214  0000                     _RX4PPS	set	3605
   215  0000                     _RC0PPS	set	3682
   216  0000                     _ANSELFbits	set	3764
   217  0000                     _RC7PPS	set	3689
   218  0000                     _RE2PPS	set	3700
   219  0000                     _SSP2BUF	set	3797
   220  0000                     _SSP2CON2bits	set	3802
   221  0000                     _SSP2CON2	set	3802
   222  0000                     _SSP2STAT	set	3800
   223  0000                     _RD6PPS	set	3696
   224  0000                     _RD5PPS	set	3695
   225  0000                     _SSP2CLKPPS	set	3612
   226  0000                     _SSP2DATPPS	set	3613
   227  0000                     _ANSELDbits	set	3751
   228  0000                     _SSP2ADD	set	3798
   229  0000                     _SSP2CON1bits	set	3801
   230  0000                     _INTCONbits	set	4082
   231  0000                     _PORTFbits	set	3982
   232  0000                     _LATFbits	set	3966
   233  0000                     _TRISAbits	set	3969
   234  0000                     _LATAbits	set	3961
   235  0000                     _TRISHbits	set	3976
   236  0000                     _LATHbits	set	3968
   237  0000                     _LATDbits	set	3964
   238  0000                     _TRISFbits	set	3974
   239  0000                     _PWM7CONbits	set	4001
   240  0000                     _PWM6CONbits	set	4004
   241  0000                     _T2PR	set	4028
   242  0000                     _T2CLKCONbits	set	4031
   243  0000                     _T2HLTbits	set	4030
   244  0000                     _T2CONbits	set	4029
   245  0000                     _LATGbits	set	3967
   246  0000                     _LATCbits	set	3963
   247  0000                     _LATEbits	set	3965
   248  0000                     _TRISGbits	set	3975
   249  0000                     _TRISCbits	set	3971
   250  0000                     _TRISEbits	set	3973
   251  0000                     _TRISDbits	set	3972
   252  0000                     _LATG	set	3967
   253  0000                     _LATE	set	3965
   254  0000                     _PWM7DCH	set	4000
   255  0000                     _PWM6DCH	set	4003
   256  000E05                     STR_1:
   257  000E05  20                 	db	32
   258  000E06  48                 	db	72	;'H'
   259  000E07  75                 	db	117	;'u'
   260  000E08  65                 	db	101	;'e'
   261  000E09  31                 	db	49	;'1'
   262  000E0A  3A                 	db	58	;':'
   263  000E0B  20                 	db	32
   264  000E0C  25                 	db	37
   265  000E0D  64                 	db	100	;'d'
   266  000E0E  2E                 	db	46
   267  000E0F  25                 	db	37
   268  000E10  30                 	db	48	;'0'
   269  000E11  33                 	db	51	;'3'
   270  000E12  64                 	db	100	;'d'
   271  000E13  00                 	db	0
   272  000E14                     STR_2:
   273  000E14  20                 	db	32
   274  000E15  48                 	db	72	;'H'
   275  000E16  75                 	db	117	;'u'
   276  000E17  65                 	db	101	;'e'
   277  000E18  32                 	db	50	;'2'
   278  000E19  3A                 	db	58	;':'
   279  000E1A  20                 	db	32
   280  000E1B  25                 	db	37
   281  000E1C  64                 	db	100	;'d'
   282  000E1D  2E                 	db	46
   283  000E1E  25                 	db	37
   284  000E1F  30                 	db	48	;'0'
   285  000E20  33                 	db	51	;'3'
   286  000E21  64                 	db	100	;'d'
   287  000E22  00                 	db	0
   288  000E23                     STR_3:
   289  000E23  20                 	db	32
   290  000E24  48                 	db	72	;'H'
   291  000E25  75                 	db	117	;'u'
   292  000E26  65                 	db	101	;'e'
   293  000E27  33                 	db	51	;'3'
   294  000E28  3A                 	db	58	;':'
   295  000E29  20                 	db	32
   296  000E2A  25                 	db	37
   297  000E2B  64                 	db	100	;'d'
   298  000E2C  2E                 	db	46
   299  000E2D  25                 	db	37
   300  000E2E  30                 	db	48	;'0'
   301  000E2F  33                 	db	51	;'3'
   302  000E30  64                 	db	100	;'d'
   303  000E31  00                 	db	0
   304  000E32  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           ; #config settings
   307                           
   308                           	psect	cinit
   309  003BB6                     __pcinit:
   310                           	callstack 0
   311  003BB6                     start_initialization:
   312                           	callstack 0
   313  003BB6                     __initialization:
   314                           	callstack 0
   315                           
   316                           ; Initialize objects allocated to BANK1 (162 bytes)
   317                           ; load TBLPTR registers with __pidataBANK1
   318  003BB6  0E2C               	movlw	low __pidataBANK1
   319  003BB8  6EF6               	movwf	tblptrl,c
   320  003BBA  0E38               	movlw	high __pidataBANK1
   321  003BBC  6EF7               	movwf	tblptrh,c
   322  003BBE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   323  003BC0  6EF8               	movwf	tblptru,c
   324  003BC2  EE01  F000         	lfsr	0,__pdataBANK1
   325  003BC6  EE10 F0A2          	lfsr	1,162
   326  003BCA                     copy_data0:
   327  003BCA  0009               	tblrd		*+
   328  003BCC  CFF5 FFEE          	movff	tablat,postinc0
   329  003BD0  50E5               	movf	postdec1,w,c
   330  003BD2  50E1               	movf	fsr1l,w,c
   331  003BD4  E1FA               	bnz	copy_data0
   332                           
   333                           ; Clear objects allocated to BANK1 (92 bytes)
   334  003BD6  EE01  F0A2         	lfsr	0,__pbssBANK1
   335  003BDA  0E5C               	movlw	92
   336  003BDC                     clear_0:
   337  003BDC  6AEE               	clrf	postinc0,c
   338  003BDE  06E8               	decf	wreg,f,c
   339  003BE0  E1FD               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to BANK0 (30 bytes)
   342  003BE2  EE00  F0D8         	lfsr	0,__pbssBANK0
   343  003BE6  0E1E               	movlw	30
   344  003BE8                     clear_1:
   345  003BE8  6AEE               	clrf	postinc0,c
   346  003BEA  06E8               	decf	wreg,f,c
   347  003BEC  E1FD               	bnz	clear_1
   348                           
   349                           ; Clear objects allocated to COMRAM (4 bytes)
   350  003BEE  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   351  003BF0  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   352  003BF2  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   353  003BF4  6A52               	clrf	__pbssCOMRAM& (0+255),c
   354  003BF6                     end_of_initialization:
   355                           	callstack 0
   356  003BF6                     __end_of__initialization:
   357                           	callstack 0
   358  003BF6  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   359  003BF8  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   360  003BFA  0100               	movlb	0
   361  003BFC  EFB3  F00A         	goto	_main	;jump to C main() function
   362                           
   363                           	psect	bssCOMRAM
   364  000052                     __pbssCOMRAM:
   365                           	callstack 0
   366  000052                     _TxBufReadCnt:
   367                           	callstack 0
   368  000052                     	ds	1
   369  000053                     _TxBufWriteCnt:
   370                           	callstack 0
   371  000053                     	ds	1
   372  000054                     _RxBufReadCnt:
   373                           	callstack 0
   374  000054                     	ds	1
   375  000055                     _RxBufWriteCnt:
   376                           	callstack 0
   377  000055                     	ds	1
   378                           
   379                           	psect	bssBANK0
   380  0000D8                     __pbssBANK0:
   381                           	callstack 0
   382  0000D8                     _EUSART4RXbuf:
   383                           	callstack 0
   384  0000D8                     	ds	20
   385  0000EC                     _errno:
   386                           	callstack 0
   387  0000EC                     	ds	2
   388  0000EE                     _nout:
   389                           	callstack 0
   390  0000EE                     	ds	2
   391  0000F0                     _width:
   392                           	callstack 0
   393  0000F0                     	ds	2
   394  0000F2                     _prec:
   395                           	callstack 0
   396  0000F2                     	ds	2
   397  0000F4                     _flags:
   398                           	callstack 0
   399  0000F4                     	ds	2
   400                           
   401                           	psect	bssBANK1
   402  0001A2                     __pbssBANK1:
   403                           	callstack 0
   404  0001A2                     _EUSART4TXbuf:
   405                           	callstack 0
   406  0001A2                     	ds	60
   407  0001DE                     _dbuf:
   408                           	callstack 0
   409  0001DE                     	ds	32
   410                           
   411                           	psect	dataBANK1
   412  000100                     __pdataBANK1:
   413                           	callstack 0
   414  000100                     determine_color3@F14748:
   415                           	callstack 0
   416  000100                     	ds	54
   417  000136                     determine_color2@F14729:
   418                           	callstack 0
   419  000136                     	ds	54
   420  00016C                     determine_color1@F14710:
   421                           	callstack 0
   422  00016C                     	ds	54
   423                           
   424                           	psect	cstackBANK0
   425  000060                     __pcstackBANK0:
   426                           	callstack 0
   427  000060                     _determine_color_new$230:
   428                           	callstack 0
   429  000060                     vfpfcnvrt@ll:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x0
   433  000060                     	ds	4
   434  000064                     _determine_color_new$231:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x4
   438  000064                     	ds	4
   439  000068                     vfpfcnvrt@done:
   440                           	callstack 0
   441  000068                     _determine_color_new$232:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x8
   445  000068                     	ds	2
   446  00006A                     _vfpfcnvrt$2280:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00006A                     	ds	2
   451  00006C                     ?_vfprintf:
   452                           	callstack 0
   453  00006C                     vfprintf@fp:
   454                           	callstack 0
   455  00006C                     _determine_color_new$233:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0xC
   459  00006C                     	ds	2
   460  00006E                     vfprintf@fmt:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xE
   464  00006E                     	ds	2
   465  000070                     vfprintf@ap:
   466                           	callstack 0
   467  000070                     _determine_color_new$2652:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x10
   471  000070                     	ds	2
   472  000072                     ?_sprintf:
   473                           	callstack 0
   474  000072                     sprintf@s:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x12
   478  000072                     	ds	2
   479  000074                     sprintf@fmt:
   480                           	callstack 0
   481  000074                     determine_color_new@Hue:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x14
   485  000074                     	ds	4
   486  000078                     determine_color_new@BlueRatio:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x18
   490  000078                     	ds	2
   491  00007A                     sprintf@ap:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x1A
   495  00007A                     	ds	2
   496  00007C                     determine_color_new@Saturation:
   497                           	callstack 0
   498  00007C                     sprintf@f:
   499                           	callstack 0
   500                           
   501                           ; 6 bytes @ 0x1C
   502  00007C                     	ds	4
   503  000080                     determine_color_new@RedRatio:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x20
   507  000080                     	ds	4
   508  000084                     determine_color_new@GreenRatio:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x24
   512  000084                     	ds	4
   513  000088                     determine_color_new@RatioMin:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x28
   517  000088                     	ds	4
   518  00008C                     determine_color_new@RatioMax:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x2C
   522  00008C                     	ds	4
   523  000090                     main@string:
   524                           	callstack 0
   525                           
   526                           ; 20 bytes @ 0x30
   527  000090                     	ds	20
   528  0000A4                     main@frac_part:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x44
   532  0000A4                     	ds	2
   533  0000A6                     main@temp:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x46
   537  0000A6                     	ds	4
   538  0000AA                     main@int_part:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x4A
   542  0000AA                     	ds	2
   543  0000AC                     main@motorL:
   544                           	callstack 0
   545                           
   546                           ; 9 bytes @ 0x4C
   547  0000AC                     	ds	9
   548  0000B5                     main@motorR:
   549                           	callstack 0
   550                           
   551                           ; 9 bytes @ 0x55
   552  0000B5                     	ds	9
   553  0000BE                     main@test:
   554                           	callstack 0
   555                           
   556                           ; 26 bytes @ 0x5E
   557  0000BE                     	ds	26
   558                           
   559                           	psect	cstackCOMRAM
   560  000001                     __pcstackCOMRAM:
   561                           	callstack 0
   562  000001                     ??_getCharFromTxBuf:
   563  000001                     putCharToRxBuf@byte:
   564                           	callstack 0
   565  000001                     
   566                           ; 1 bytes @ 0x0
   567  000001                     	ds	2
   568  000003                     ??_HighISR:
   569                           
   570                           ; 1 bytes @ 0x2
   571  000003                     	ds	2
   572  000005                     ??_I2C_2_Master_Idle:
   573  000005                     ?_strlen:
   574                           	callstack 0
   575  000005                     ?_isdigit:
   576                           	callstack 0
   577  000005                     ?_isspace:
   578                           	callstack 0
   579  000005                     ?___wmul:
   580                           	callstack 0
   581  000005                     ?___fladd:
   582                           	callstack 0
   583  000005                     ?___flmul:
   584                           	callstack 0
   585  000005                     ?___aodiv:
   586                           	callstack 0
   587  000005                     ?___aomod:
   588                           	callstack 0
   589  000005                     putCharToTxBuf@byte:
   590                           	callstack 0
   591  000005                     initDCmotorsPWM@PWMperiod:
   592                           	callstack 0
   593  000005                     ___wmul@multiplier:
   594                           	callstack 0
   595  000005                     isdigit@c:
   596                           	callstack 0
   597  000005                     isspace@c:
   598                           	callstack 0
   599  000005                     fputc@c:
   600                           	callstack 0
   601  000005                     strlen@s:
   602                           	callstack 0
   603  000005                     ___fleq@ff1:
   604                           	callstack 0
   605  000005                     ___flge@ff1:
   606                           	callstack 0
   607  000005                     ___fladd@b:
   608                           	callstack 0
   609  000005                     ___flmul@b:
   610                           	callstack 0
   611  000005                     ___aodiv@dividend:
   612                           	callstack 0
   613  000005                     ___aomod@dividend:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x4
   617  000005                     	ds	1
   618  000006                     ??_I2C_2_Master_Read:
   619  000006                     I2C_2_Master_Write@data_byte:
   620                           	callstack 0
   621  000006                     TxBufferedString@string:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x5
   625  000006                     	ds	1
   626  000007                     ??_isdigit:
   627  000007                     ??_isspace:
   628  000007                     color_writetoaddr@value:
   629                           	callstack 0
   630  000007                     I2C_2_Master_Read@ack:
   631                           	callstack 0
   632  000007                     ___wmul@multiplicand:
   633                           	callstack 0
   634  000007                     fputc@fp:
   635                           	callstack 0
   636  000007                     strlen@a:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x6
   640  000007                     	ds	1
   641  000008                     color_writetoaddr@address:
   642                           	callstack 0
   643  000008                     I2C_2_Master_Read@tmp:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x7
   647  000008                     	ds	1
   648  000009                     ??_fputc:
   649  000009                     ??_color_click_init:
   650  000009                     ?_color_read_Clear:
   651                           	callstack 0
   652  000009                     ?_color_read_Red:
   653                           	callstack 0
   654  000009                     ?_color_read_Green:
   655                           	callstack 0
   656  000009                     ?_color_read_Blue:
   657                           	callstack 0
   658  000009                     ___wmul@product:
   659                           	callstack 0
   660  000009                     ___fleq@ff2:
   661                           	callstack 0
   662  000009                     ___flge@ff2:
   663                           	callstack 0
   664  000009                     ___fladd@a:
   665                           	callstack 0
   666  000009                     ___flmul@a:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x8
   670  000009                     	ds	2
   671  00000B                     ??_color_read_Clear:
   672  00000B                     ??_color_read_Red:
   673  00000B                     ??_color_read_Green:
   674  00000B                     ??_color_read_Blue:
   675  00000B                     ?___xxtofl:
   676                           	callstack 0
   677  00000B                     _isspace$2318:
   678                           	callstack 0
   679  00000B                     ___xxtofl@val:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0xA
   683  00000B                     	ds	1
   684  00000C                     ?_atoi:
   685                           	callstack 0
   686  00000C                     atoi@s:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xB
   690  00000C                     	ds	1
   691  00000D                     ??___fladd:
   692  00000D                     ??___flmul:
   693  00000D                     ??___fleq:
   694  00000D                     ??___flge:
   695  00000D                     ___aodiv@divisor:
   696                           	callstack 0
   697  00000D                     ___aomod@divisor:
   698                           	callstack 0
   699                           
   700                           ; 8 bytes @ 0xC
   701  00000D                     	ds	1
   702  00000E                     ??_atoi:
   703  00000E                     color_read_Clear@tmp:
   704                           	callstack 0
   705  00000E                     color_read_Red@tmp:
   706                           	callstack 0
   707  00000E                     color_read_Green@tmp:
   708                           	callstack 0
   709  00000E                     color_read_Blue@tmp:
   710                           	callstack 0
   711  00000E                     fputs@s:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0xD
   715  00000E                     	ds	1
   716  00000F                     ??___xxtofl:
   717                           
   718                           ; 1 bytes @ 0xE
   719  00000F                     	ds	1
   720  000010                     read_colours@m:
   721                           	callstack 0
   722  000010                     fputs@fp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0xF
   726  000010                     	ds	1
   727  000011                     ___fladd@signs:
   728                           	callstack 0
   729  000011                     ___flmul@sign:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x10
   733  000011                     	ds	1
   734  000012                     ??_read_colours:
   735  000012                     ___fladd@aexp:
   736                           	callstack 0
   737  000012                     fputs@c:
   738                           	callstack 0
   739  000012                     atoi@neg:
   740                           	callstack 0
   741  000012                     ___flmul@grs:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x11
   745  000012                     	ds	1
   746  000013                     ___fladd@bexp:
   747                           	callstack 0
   748  000013                     ___xxtofl@sign:
   749                           	callstack 0
   750  000013                     fputs@i:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x12
   754  000013                     	ds	1
   755  000014                     ___fladd@grs:
   756                           	callstack 0
   757  000014                     ___xxtofl@exp:
   758                           	callstack 0
   759  000014                     _atoi$2300:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x13
   763  000014                     	ds	1
   764  000015                     ?_pad:
   765                           	callstack 0
   766  000015                     ___aodiv@counter:
   767                           	callstack 0
   768  000015                     ___aomod@counter:
   769                           	callstack 0
   770  000015                     pad@fp:
   771                           	callstack 0
   772  000015                     ___xxtofl@arg:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x14
   776  000015                     	ds	1
   777  000016                     ___aodiv@sign:
   778                           	callstack 0
   779  000016                     ___aomod@sign:
   780                           	callstack 0
   781  000016                     ___flmul@aexp:
   782                           	callstack 0
   783  000016                     _atoi$2302:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x15
   787  000016                     	ds	1
   788  000017                     ?_abs:
   789                           	callstack 0
   790  000017                     ___flmul@bexp:
   791                           	callstack 0
   792  000017                     pad@buf:
   793                           	callstack 0
   794  000017                     abs@a:
   795                           	callstack 0
   796  000017                     ___aodiv@quotient:
   797                           	callstack 0
   798                           
   799                           ; 8 bytes @ 0x16
   800  000017                     	ds	1
   801  000018                     _atoi$2301:
   802                           	callstack 0
   803  000018                     ___flmul@prod:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x17
   807  000018                     	ds	1
   808  000019                     ??_abs:
   809  000019                     pad@p:
   810                           	callstack 0
   811  000019                     atoi@n:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x18
   815  000019                     	ds	2
   816  00001B                     ??_pad:
   817                           
   818                           ; 1 bytes @ 0x1A
   819  00001B                     	ds	1
   820  00001C                     ___flmul@temp:
   821                           	callstack 0
   822  00001C                     pad@i:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x1B
   826  00001C                     	ds	2
   827  00001E                     ?___fldiv:
   828                           	callstack 0
   829  00001E                     pad@w:
   830                           	callstack 0
   831  00001E                     ___fldiv@b:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x1D
   835  00001E                     	ds	2
   836  000020                     ?_dtoa:
   837                           	callstack 0
   838  000020                     dtoa@fp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x1F
   842  000020                     	ds	2
   843  000022                     ___fldiv@a:
   844                           	callstack 0
   845  000022                     dtoa@d:
   846                           	callstack 0
   847                           
   848                           ; 8 bytes @ 0x21
   849  000022                     	ds	4
   850  000026                     ??___fldiv:
   851                           
   852                           ; 1 bytes @ 0x25
   853  000026                     	ds	4
   854  00002A                     ??_dtoa:
   855  00002A                     ___fldiv@rem:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x29
   859  00002A                     	ds	4
   860  00002E                     ___fldiv@sign:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x2D
   864  00002E                     	ds	1
   865  00002F                     ___fldiv@new_exp:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x2E
   869  00002F                     	ds	2
   870  000031                     ___fldiv@grs:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x30
   874  000031                     	ds	1
   875  000032                     _dtoa$2265:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x31
   879  000032                     	ds	2
   880  000034                     dtoa@p:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x33
   884  000034                     	ds	1
   885  000035                     ___fldiv@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x34
   889  000035                     	ds	1
   890  000036                     ___fldiv@aexp:
   891                           	callstack 0
   892  000036                     dtoa@w:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x35
   896  000036                     	ds	1
   897  000037                     ?___flsub:
   898                           	callstack 0
   899  000037                     ___flsub@b:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x36
   903  000037                     	ds	1
   904  000038                     dtoa@s:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x37
   908  000038                     	ds	2
   909  00003A                     dtoa@n:
   910                           	callstack 0
   911                           
   912                           ; 8 bytes @ 0x39
   913  00003A                     	ds	1
   914  00003B                     ___flsub@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x3A
   918  00003B                     	ds	4
   919  00003F                     ?_determine_color_new:
   920                           	callstack 0
   921  00003F                     ?___fltol:
   922                           	callstack 0
   923  00003F                     determine_color_new@m:
   924                           	callstack 0
   925  00003F                     ___fltol@f1:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x3E
   929  00003F                     	ds	3
   930  000042                     dtoa@i:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x41
   934  000042                     	ds	1
   935  000043                     ??_determine_color_new:
   936  000043                     ??___fltol:
   937                           
   938                           ; 1 bytes @ 0x42
   939  000043                     	ds	1
   940  000044                     ?_vfpfcnvrt:
   941                           	callstack 0
   942  000044                     vfpfcnvrt@fp:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x43
   946  000044                     	ds	2
   947  000046                     vfpfcnvrt@fmt:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x45
   951  000046                     	ds	1
   952  000047                     ___fltol@sign1:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x46
   956  000047                     	ds	1
   957  000048                     ___fltol@exp1:
   958                           	callstack 0
   959  000048                     vfpfcnvrt@ap:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x47
   963  000048                     	ds	2
   964  00004A                     ??_vfpfcnvrt:
   965                           
   966                           ; 1 bytes @ 0x49
   967  00004A                     	ds	4
   968  00004E                     vfprintf@cfmt:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x4D
   972  00004E                     	ds	2
   973  000050                     ??_main:
   974                           
   975                           ; 1 bytes @ 0x4F
   976  000050                     	ds	2
   977                           
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 19 in file "main.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  temp            4   70[BANK0 ] float 
   988 ;;  int_part        2   74[BANK0 ] unsigned int 
   989 ;;  frac_part       2   68[BANK0 ] unsigned int 
   990 ;;  test           26   94[BANK0 ] struct RGB_val
   991 ;;  string         20   48[BANK0 ] unsigned char [20]
   992 ;;  string3        20    0        unsigned char [20]
   993 ;;  string2        20    0        unsigned char [20]
   994 ;;  string1        20    0        unsigned char [20]
   995 ;;  motorR          9   85[BANK0 ] struct DC_motor
   996 ;;  motorL          9   76[BANK0 ] struct DC_motor
   997 ;;  PWMcycle        2    0        unsigned int 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Totals:         2      72       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;Total ram usage:       74 bytes
  1012 ;; Hardware stack levels required when called: 10
  1013 ;; This function calls:
  1014 ;;		_Interrupts_init
  1015 ;;		_TxBufferedString
  1016 ;;		___fldiv
  1017 ;;		___flmul
  1018 ;;		___flsub
  1019 ;;		___fltol
  1020 ;;		___wmul
  1021 ;;		___xxtofl
  1022 ;;		_color_click_init
  1023 ;;		_determine_color_new
  1024 ;;		_initDCmotorsPWM
  1025 ;;		_initUSART4
  1026 ;;		_read_colours
  1027 ;;		_sendTxBuf
  1028 ;;		_sprintf
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text0
  1035  001566                     __ptext0:
  1036                           	callstack 0
  1037  001566                     _main:
  1038                           	callstack 21
  1039  001566                     
  1040                           ;main.c: 21:     initDCmotorsPWM(99);
  1041  001566  0E00               	movlw	0
  1042  001568  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1043  00156A  0E63               	movlw	99
  1044  00156C  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1045  00156E  EC66  F01E         	call	_initDCmotorsPWM	;wreg free
  1046  001572                     
  1047                           ;main.c: 22:     color_click_init();
  1048  001572  ECDE  F01E         	call	_color_click_init	;wreg free
  1049  001576                     
  1050                           ;main.c: 23:     initUSART4();
  1051  001576  EC8C  F01F         	call	_initUSART4	;wreg free
  1052  00157A                     
  1053                           ;main.c: 24:     Interrupts_init();
  1054  00157A  ECD7  F01F         	call	_Interrupts_init	;wreg free
  1055  00157E                     
  1056                           ;main.c: 26:     char string[20];;main.c: 27:     char string1[20];;main.c: 28:     char
      +                           string2[20];;main.c: 29:     char string3[20];;main.c: 32:     TRISFbits.TRISF2=1;
  1057  00157E  8486               	bsf	134,2,c	;volatile
  1058  001580                     
  1059                           ;main.c: 33:     ANSELFbits.ANSELF2=0;
  1060  001580  010E               	movlb	14	; () banked
  1061  001582  95B4               	bcf	180,2,b	;volatile
  1062  001584                     
  1063                           ; BSR set to: 14
  1064                           ;main.c: 37:     motorL.power=0;
  1065  001584  0E00               	movlw	0
  1066  001586  0100               	movlb	0	; () banked
  1067  001588  6FAC               	movwf	main@motorL& (0+255),b
  1068  00158A                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 38:     motorL.direction=1;
  1071  00158A  0E01               	movlw	1
  1072  00158C  6FAD               	movwf	(main@motorL+1)& (0+255),b
  1073  00158E                     
  1074                           ; BSR set to: 0
  1075                           ;main.c: 39:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1076  00158E  0EA3               	movlw	163
  1077  001590  6FAE               	movwf	(main@motorL+2)& (0+255),b
  1078  001592  0E0F               	movlw	15
  1079  001594  6FAF               	movwf	(main@motorL+3)& (0+255),b
  1080  001596                     
  1081                           ; BSR set to: 0
  1082                           ;main.c: 40:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1083  001596  0E7D               	movlw	125
  1084  001598  6FB0               	movwf	(main@motorL+4)& (0+255),b
  1085  00159A  0E0F               	movlw	15
  1086  00159C  6FB1               	movwf	(main@motorL+5)& (0+255),b
  1087  00159E                     
  1088                           ; BSR set to: 0
  1089                           ;main.c: 41:     motorL.dir_pin=4;
  1090  00159E  0E04               	movlw	4
  1091  0015A0  6FB2               	movwf	(main@motorL+6)& (0+255),b
  1092  0015A2                     
  1093                           ; BSR set to: 0
  1094                           ;main.c: 42:     motorL.PWMperiod=PWMcycle;
  1095  0015A2  0E00               	movlw	0
  1096  0015A4  6FB4               	movwf	(main@motorL+8)& (0+255),b
  1097  0015A6  0E63               	movlw	99
  1098  0015A8  6FB3               	movwf	(main@motorL+7)& (0+255),b
  1099  0015AA                     
  1100                           ; BSR set to: 0
  1101                           ;main.c: 44:     motorR.power=0;
  1102  0015AA  0E00               	movlw	0
  1103  0015AC  6FB5               	movwf	main@motorR& (0+255),b
  1104  0015AE                     
  1105                           ; BSR set to: 0
  1106                           ;main.c: 45:     motorR.direction=1;
  1107  0015AE  0E01               	movlw	1
  1108  0015B0  6FB6               	movwf	(main@motorR+1)& (0+255),b
  1109                           
  1110                           ;main.c: 46:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1111  0015B2  0EA0               	movlw	160
  1112  0015B4  6FB7               	movwf	(main@motorR+2)& (0+255),b
  1113  0015B6  0E0F               	movlw	15
  1114  0015B8  6FB8               	movwf	(main@motorR+3)& (0+255),b
  1115                           
  1116                           ;main.c: 47:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1117  0015BA  0E7F               	movlw	127
  1118  0015BC  6FB9               	movwf	(main@motorR+4)& (0+255),b
  1119  0015BE  0E0F               	movlw	15
  1120  0015C0  6FBA               	movwf	(main@motorR+5)& (0+255),b
  1121  0015C2                     
  1122                           ; BSR set to: 0
  1123                           ;main.c: 48:     motorR.dir_pin=6;
  1124  0015C2  0E06               	movlw	6
  1125  0015C4  6FBB               	movwf	(main@motorR+6)& (0+255),b
  1126  0015C6                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 49:     motorR.PWMperiod=PWMcycle;
  1129  0015C6  0E00               	movlw	0
  1130  0015C8  6FBD               	movwf	(main@motorR+8)& (0+255),b
  1131  0015CA  0E63               	movlw	99
  1132  0015CC  6FBC               	movwf	(main@motorR+7)& (0+255),b
  1133  0015CE                     
  1134                           ; BSR set to: 0
  1135                           ;main.c: 52:     struct RGB_val test;;main.c: 53:     test.R = 0;
  1136  0015CE  0E00               	movlw	0
  1137  0015D0  6FC1               	movwf	(main@test+3)& (0+255),b
  1138  0015D2  0E00               	movlw	0
  1139  0015D4  6FC0               	movwf	(main@test+2)& (0+255),b
  1140  0015D6                     
  1141                           ; BSR set to: 0
  1142                           ;main.c: 54:     test.G = 0;
  1143  0015D6  0E00               	movlw	0
  1144  0015D8  6FC3               	movwf	(main@test+5)& (0+255),b
  1145  0015DA  0E00               	movlw	0
  1146  0015DC  6FC2               	movwf	(main@test+4)& (0+255),b
  1147  0015DE                     
  1148                           ; BSR set to: 0
  1149                           ;main.c: 55:     test.B = 0;
  1150  0015DE  0E00               	movlw	0
  1151  0015E0  6FC5               	movwf	(main@test+7)& (0+255),b
  1152  0015E2  0E00               	movlw	0
  1153  0015E4  6FC4               	movwf	(main@test+6)& (0+255),b
  1154  0015E6                     
  1155                           ; BSR set to: 0
  1156                           ;main.c: 57:     LATDbits.LATD3=1;
  1157  0015E6  867C               	bsf	124,3,c	;volatile
  1158  0015E8                     
  1159                           ; BSR set to: 0
  1160                           ;main.c: 58:     TRISDbits.TRISD3=0;
  1161  0015E8  9684               	bcf	132,3,c	;volatile
  1162  0015EA                     
  1163                           ; BSR set to: 0
  1164                           ;main.c: 59:     LATHbits.LATH1=1;
  1165  0015EA  8280               	bsf	128,1,c	;volatile
  1166  0015EC                     
  1167                           ; BSR set to: 0
  1168                           ;main.c: 60:     TRISHbits.TRISH1=0;
  1169  0015EC  9288               	bcf	136,1,c	;volatile
  1170  0015EE                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 63:     LATGbits.LATG1=0;
  1173  0015EE  927F               	bcf	127,1,c	;volatile
  1174  0015F0                     
  1175                           ; BSR set to: 0
  1176                           ;main.c: 64:     TRISGbits.TRISG1=0;
  1177  0015F0  9287               	bcf	135,1,c	;volatile
  1178  0015F2                     
  1179                           ; BSR set to: 0
  1180                           ;main.c: 65:     LATAbits.LATA4=0;
  1181  0015F2  9879               	bcf	121,4,c	;volatile
  1182  0015F4                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 66:     TRISAbits.TRISA4=0;
  1185  0015F4  9881               	bcf	129,4,c	;volatile
  1186  0015F6                     
  1187                           ; BSR set to: 0
  1188                           ;main.c: 67:     LATFbits.LATF7=1;
  1189  0015F6  8E7E               	bsf	126,7,c	;volatile
  1190  0015F8                     
  1191                           ; BSR set to: 0
  1192                           ;main.c: 68:     TRISFbits.TRISF7=0;
  1193  0015F8  9E86               	bcf	134,7,c	;volatile
  1194  0015FA                     
  1195                           ; BSR set to: 0
  1196                           ;main.c: 75:     TRISDbits.TRISD7 = 0;
  1197  0015FA  9E84               	bcf	132,7,c	;volatile
  1198  0015FC                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 76:     LATDbits.LATD7 = 0;
  1201  0015FC  9E7C               	bcf	124,7,c	;volatile
  1202  0015FE                     l5457:
  1203                           
  1204                           ;main.c: 79:         read_colours(&test);
  1205  0015FE  0EBE               	movlw	low main@test
  1206  001600  6E10               	movwf	read_colours@m^0,c
  1207  001602  0E00               	movlw	high main@test
  1208  001604  6E11               	movwf	(read_colours@m+1)^0,c
  1209  001606  EC67  F01C         	call	_read_colours	;wreg free
  1210  00160A                     
  1211                           ;main.c: 80:         LATDbits.LATD7 = 0;
  1212  00160A  9E7C               	bcf	124,7,c	;volatile
  1213  00160C                     
  1214                           ;main.c: 82:         if (!PORTFbits.RF2){
  1215  00160C  B48E               	btfsc	142,2,c	;volatile
  1216  00160E  EF0B  F00B         	goto	u5391
  1217  001612  EF0D  F00B         	goto	u5390
  1218  001616                     u5391:
  1219  001616  EFFF  F00A         	goto	l5457
  1220  00161A                     u5390:
  1221  00161A                     
  1222                           ;main.c: 83:             LATDbits.LATD7 = 1;
  1223  00161A  8E7C               	bsf	124,7,c	;volatile
  1224                           
  1225                           ;main.c: 84:             LATGbits.LATG1=1;
  1226  00161C  827F               	bsf	127,1,c	;volatile
  1227                           
  1228                           ;main.c: 85:             LATAbits.LATA4=1;
  1229  00161E  8879               	bsf	121,4,c	;volatile
  1230                           
  1231                           ;main.c: 86:             LATFbits.LATF7=1;
  1232  001620  8E7E               	bsf	126,7,c	;volatile
  1233  001622                     
  1234                           ;main.c: 87:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1235  001622  0E09               	movlw	9
  1236  001624  6E51               	movwf	(??_main+1)^0,c
  1237  001626  0E1E               	movlw	30
  1238  001628  6E50               	movwf	??_main^0,c
  1239  00162A  0EE4               	movlw	228
  1240  00162C                     u5407:
  1241  00162C  2EE8               	decfsz	wreg,f,c
  1242  00162E  D7FE               	bra	u5407
  1243  001630  2E50               	decfsz	??_main^0,f,c
  1244  001632  D7FC               	bra	u5407
  1245  001634  2E51               	decfsz	(??_main+1)^0,f,c
  1246  001636  D7FA               	bra	u5407
  1247  001638  D000               	nop2	
  1248  00163A                     
  1249                           ;main.c: 88:             read_colours(&test);
  1250  00163A  0EBE               	movlw	low main@test
  1251  00163C  6E10               	movwf	read_colours@m^0,c
  1252  00163E  0E00               	movlw	high main@test
  1253  001640  6E11               	movwf	(read_colours@m+1)^0,c
  1254  001642  EC67  F01C         	call	_read_colours	;wreg free
  1255  001646                     
  1256                           ;main.c: 89:             float temp = determine_color_new(&test);
  1257  001646  0EBE               	movlw	low main@test
  1258  001648  6E3F               	movwf	determine_color_new@m^0,c
  1259  00164A  0E00               	movlw	high main@test
  1260  00164C  6E40               	movwf	(determine_color_new@m+1)^0,c
  1261  00164E  EC1A  F007         	call	_determine_color_new	;wreg free
  1262  001652  C03F  F0A6         	movff	?_determine_color_new,main@temp
  1263  001656  C040  F0A7         	movff	?_determine_color_new+1,main@temp+1
  1264  00165A  C041  F0A8         	movff	?_determine_color_new+2,main@temp+2
  1265  00165E  C042  F0A9         	movff	?_determine_color_new+3,main@temp+3
  1266  001662                     
  1267                           ;main.c: 90:             unsigned int int_part;;main.c: 91:             unsigned int fra
      +                          c_part;;main.c: 92:             int_part = temp/1;
  1268  001662  0E00               	movlw	0
  1269  001664  6E22               	movwf	___fldiv@a^0,c
  1270  001666  0E00               	movlw	0
  1271  001668  6E23               	movwf	(___fldiv@a+1)^0,c
  1272  00166A  0E80               	movlw	128
  1273  00166C  6E24               	movwf	(___fldiv@a+2)^0,c
  1274  00166E  0E3F               	movlw	63
  1275  001670  6E25               	movwf	(___fldiv@a+3)^0,c
  1276  001672  C0A6  F01E         	movff	main@temp,___fldiv@b
  1277  001676  C0A7  F01F         	movff	main@temp+1,___fldiv@b+1
  1278  00167A  C0A8  F020         	movff	main@temp+2,___fldiv@b+2
  1279  00167E  C0A9  F021         	movff	main@temp+3,___fldiv@b+3
  1280  001682  ECCD  F011         	call	___fldiv	;wreg free
  1281  001686  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1282  00168A  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1283  00168E  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1284  001692  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1285  001696  ECF4  F019         	call	___fltol	;wreg free
  1286  00169A  C03F  F0AA         	movff	?___fltol,main@int_part
  1287  00169E  C040  F0AB         	movff	?___fltol+1,main@int_part+1
  1288  0016A2                     
  1289                           ;main.c: 93:             frac_part =(temp*1000)/1 - int_part*1000;
  1290  0016A2  0E03               	movlw	3
  1291  0016A4  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1292  0016A6  0EE8               	movlw	232
  1293  0016A8  6E07               	movwf	___wmul@multiplicand^0,c
  1294  0016AA  C0AA  F005         	movff	main@int_part,___wmul@multiplier
  1295  0016AE  C0AB  F006         	movff	main@int_part+1,___wmul@multiplier+1
  1296  0016B2  EC79  F01F         	call	___wmul	;wreg free
  1297  0016B6  C005  F00B         	movff	?___wmul,___xxtofl@val
  1298  0016BA  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1299  0016BE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1300  0016C0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1301  0016C2  0E00               	movlw	0
  1302  0016C4  ECD2  F016         	call	___xxtofl
  1303  0016C8  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1304  0016CC  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1305  0016D0  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1306  0016D4  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1307  0016D8  0E00               	movlw	0
  1308  0016DA  6E22               	movwf	___fldiv@a^0,c
  1309  0016DC  0E00               	movlw	0
  1310  0016DE  6E23               	movwf	(___fldiv@a+1)^0,c
  1311  0016E0  0E80               	movlw	128
  1312  0016E2  6E24               	movwf	(___fldiv@a+2)^0,c
  1313  0016E4  0E3F               	movlw	63
  1314  0016E6  6E25               	movwf	(___fldiv@a+3)^0,c
  1315  0016E8  0E00               	movlw	0
  1316  0016EA  6E09               	movwf	___flmul@a^0,c
  1317  0016EC  0E00               	movlw	0
  1318  0016EE  6E0A               	movwf	(___flmul@a+1)^0,c
  1319  0016F0  0E7A               	movlw	122
  1320  0016F2  6E0B               	movwf	(___flmul@a+2)^0,c
  1321  0016F4  0E44               	movlw	68
  1322  0016F6  6E0C               	movwf	(___flmul@a+3)^0,c
  1323  0016F8  C0A6  F005         	movff	main@temp,___flmul@b
  1324  0016FC  C0A7  F006         	movff	main@temp+1,___flmul@b+1
  1325  001700  C0A8  F007         	movff	main@temp+2,___flmul@b+2
  1326  001704  C0A9  F008         	movff	main@temp+3,___flmul@b+3
  1327  001708  ECB8  F00F         	call	___flmul	;wreg free
  1328  00170C  C005  F01E         	movff	?___flmul,___fldiv@b
  1329  001710  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1330  001714  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1331  001718  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1332  00171C  ECCD  F011         	call	___fldiv	;wreg free
  1333  001720  C01E  F037         	movff	?___fldiv,___flsub@b
  1334  001724  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1335  001728  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1336  00172C  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1337  001730  EC00  F01E         	call	___flsub	;wreg free
  1338  001734  C037  F03F         	movff	?___flsub,___fltol@f1
  1339  001738  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1340  00173C  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1341  001740  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1342  001744  ECF4  F019         	call	___fltol	;wreg free
  1343  001748  C03F  F0A4         	movff	?___fltol,main@frac_part
  1344  00174C  C040  F0A5         	movff	?___fltol+1,main@frac_part+1
  1345  001750                     
  1346                           ;main.c: 94:             sprintf(string," Hue1: %d.%03d",int_part, frac_part);
  1347  001750  0E90               	movlw	low main@string
  1348  001752  0100               	movlb	0	; () banked
  1349  001754  6F72               	movwf	sprintf@s& (0+255),b
  1350  001756  0E00               	movlw	high main@string
  1351  001758  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1352  00175A  0E05               	movlw	low STR_1
  1353  00175C  6F74               	movwf	sprintf@fmt& (0+255),b
  1354  00175E  0E0E               	movlw	high STR_1
  1355  001760  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1356  001762  C0AA  F076         	movff	main@int_part,?_sprintf+4
  1357  001766  C0AB  F077         	movff	main@int_part+1,?_sprintf+5
  1358  00176A  C0A4  F078         	movff	main@frac_part,?_sprintf+6
  1359  00176E  C0A5  F079         	movff	main@frac_part+1,?_sprintf+7
  1360  001772  ECE9  F01C         	call	_sprintf	;wreg free
  1361  001776                     
  1362                           ;main.c: 95:             TxBufferedString(string);
  1363  001776  0E90               	movlw	low main@string
  1364  001778  6E06               	movwf	TxBufferedString@string^0,c
  1365  00177A  0E00               	movlw	high main@string
  1366  00177C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1367  00177E  ECF8  F01E         	call	_TxBufferedString	;wreg free
  1368  001782                     
  1369                           ;main.c: 96:             sendTxBuf();
  1370  001782  ECAC  F01F         	call	_sendTxBuf	;wreg free
  1371  001786                     
  1372                           ;main.c: 97:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1373  001786  0E09               	movlw	9
  1374  001788  6E51               	movwf	(??_main+1)^0,c
  1375  00178A  0E1E               	movlw	30
  1376  00178C  6E50               	movwf	??_main^0,c
  1377  00178E  0EE4               	movlw	228
  1378  001790                     u5417:
  1379  001790  2EE8               	decfsz	wreg,f,c
  1380  001792  D7FE               	bra	u5417
  1381  001794  2E50               	decfsz	??_main^0,f,c
  1382  001796  D7FC               	bra	u5417
  1383  001798  2E51               	decfsz	(??_main+1)^0,f,c
  1384  00179A  D7FA               	bra	u5417
  1385  00179C  D000               	nop2	
  1386  00179E                     
  1387                           ;main.c: 99:             LATGbits.LATG1=1;
  1388  00179E  827F               	bsf	127,1,c	;volatile
  1389  0017A0                     
  1390                           ;main.c: 100:             LATAbits.LATA4=0;
  1391  0017A0  9879               	bcf	121,4,c	;volatile
  1392  0017A2                     
  1393                           ;main.c: 101:             LATFbits.LATF7=0;
  1394  0017A2  9E7E               	bcf	126,7,c	;volatile
  1395  0017A4                     
  1396                           ;main.c: 102:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1397  0017A4  0E09               	movlw	9
  1398  0017A6  6E51               	movwf	(??_main+1)^0,c
  1399  0017A8  0E1E               	movlw	30
  1400  0017AA  6E50               	movwf	??_main^0,c
  1401  0017AC  0EE4               	movlw	228
  1402  0017AE                     u5427:
  1403  0017AE  2EE8               	decfsz	wreg,f,c
  1404  0017B0  D7FE               	bra	u5427
  1405  0017B2  2E50               	decfsz	??_main^0,f,c
  1406  0017B4  D7FC               	bra	u5427
  1407  0017B6  2E51               	decfsz	(??_main+1)^0,f,c
  1408  0017B8  D7FA               	bra	u5427
  1409  0017BA  D000               	nop2	
  1410  0017BC                     
  1411                           ;main.c: 103:             read_colours(&test);
  1412  0017BC  0EBE               	movlw	low main@test
  1413  0017BE  6E10               	movwf	read_colours@m^0,c
  1414  0017C0  0E00               	movlw	high main@test
  1415  0017C2  6E11               	movwf	(read_colours@m+1)^0,c
  1416  0017C4  EC67  F01C         	call	_read_colours	;wreg free
  1417  0017C8                     
  1418                           ;main.c: 104:             temp = determine_color_new(&test);
  1419  0017C8  0EBE               	movlw	low main@test
  1420  0017CA  6E3F               	movwf	determine_color_new@m^0,c
  1421  0017CC  0E00               	movlw	high main@test
  1422  0017CE  6E40               	movwf	(determine_color_new@m+1)^0,c
  1423  0017D0  EC1A  F007         	call	_determine_color_new	;wreg free
  1424  0017D4  C03F  F0A6         	movff	?_determine_color_new,main@temp
  1425  0017D8  C040  F0A7         	movff	?_determine_color_new+1,main@temp+1
  1426  0017DC  C041  F0A8         	movff	?_determine_color_new+2,main@temp+2
  1427  0017E0  C042  F0A9         	movff	?_determine_color_new+3,main@temp+3
  1428  0017E4                     
  1429                           ;main.c: 105:             int_part = temp/1;
  1430  0017E4  0E00               	movlw	0
  1431  0017E6  6E22               	movwf	___fldiv@a^0,c
  1432  0017E8  0E00               	movlw	0
  1433  0017EA  6E23               	movwf	(___fldiv@a+1)^0,c
  1434  0017EC  0E80               	movlw	128
  1435  0017EE  6E24               	movwf	(___fldiv@a+2)^0,c
  1436  0017F0  0E3F               	movlw	63
  1437  0017F2  6E25               	movwf	(___fldiv@a+3)^0,c
  1438  0017F4  C0A6  F01E         	movff	main@temp,___fldiv@b
  1439  0017F8  C0A7  F01F         	movff	main@temp+1,___fldiv@b+1
  1440  0017FC  C0A8  F020         	movff	main@temp+2,___fldiv@b+2
  1441  001800  C0A9  F021         	movff	main@temp+3,___fldiv@b+3
  1442  001804  ECCD  F011         	call	___fldiv	;wreg free
  1443  001808  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1444  00180C  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1445  001810  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1446  001814  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1447  001818  ECF4  F019         	call	___fltol	;wreg free
  1448  00181C  C03F  F0AA         	movff	?___fltol,main@int_part
  1449  001820  C040  F0AB         	movff	?___fltol+1,main@int_part+1
  1450  001824                     
  1451                           ;main.c: 106:             frac_part =(temp*1000)/1 - int_part*1000;
  1452  001824  0E03               	movlw	3
  1453  001826  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1454  001828  0EE8               	movlw	232
  1455  00182A  6E07               	movwf	___wmul@multiplicand^0,c
  1456  00182C  C0AA  F005         	movff	main@int_part,___wmul@multiplier
  1457  001830  C0AB  F006         	movff	main@int_part+1,___wmul@multiplier+1
  1458  001834  EC79  F01F         	call	___wmul	;wreg free
  1459  001838  C005  F00B         	movff	?___wmul,___xxtofl@val
  1460  00183C  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1461  001840  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1462  001842  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1463  001844  0E00               	movlw	0
  1464  001846  ECD2  F016         	call	___xxtofl
  1465  00184A  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1466  00184E  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1467  001852  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1468  001856  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1469  00185A  0E00               	movlw	0
  1470  00185C  6E22               	movwf	___fldiv@a^0,c
  1471  00185E  0E00               	movlw	0
  1472  001860  6E23               	movwf	(___fldiv@a+1)^0,c
  1473  001862  0E80               	movlw	128
  1474  001864  6E24               	movwf	(___fldiv@a+2)^0,c
  1475  001866  0E3F               	movlw	63
  1476  001868  6E25               	movwf	(___fldiv@a+3)^0,c
  1477  00186A  0E00               	movlw	0
  1478  00186C  6E09               	movwf	___flmul@a^0,c
  1479  00186E  0E00               	movlw	0
  1480  001870  6E0A               	movwf	(___flmul@a+1)^0,c
  1481  001872  0E7A               	movlw	122
  1482  001874  6E0B               	movwf	(___flmul@a+2)^0,c
  1483  001876  0E44               	movlw	68
  1484  001878  6E0C               	movwf	(___flmul@a+3)^0,c
  1485  00187A  C0A6  F005         	movff	main@temp,___flmul@b
  1486  00187E  C0A7  F006         	movff	main@temp+1,___flmul@b+1
  1487  001882  C0A8  F007         	movff	main@temp+2,___flmul@b+2
  1488  001886  C0A9  F008         	movff	main@temp+3,___flmul@b+3
  1489  00188A  ECB8  F00F         	call	___flmul	;wreg free
  1490  00188E  C005  F01E         	movff	?___flmul,___fldiv@b
  1491  001892  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1492  001896  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1493  00189A  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1494  00189E  ECCD  F011         	call	___fldiv	;wreg free
  1495  0018A2  C01E  F037         	movff	?___fldiv,___flsub@b
  1496  0018A6  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1497  0018AA  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1498  0018AE  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1499  0018B2  EC00  F01E         	call	___flsub	;wreg free
  1500  0018B6  C037  F03F         	movff	?___flsub,___fltol@f1
  1501  0018BA  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1502  0018BE  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1503  0018C2  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1504  0018C6  ECF4  F019         	call	___fltol	;wreg free
  1505  0018CA  C03F  F0A4         	movff	?___fltol,main@frac_part
  1506  0018CE  C040  F0A5         	movff	?___fltol+1,main@frac_part+1
  1507  0018D2                     
  1508                           ;main.c: 107:             sprintf(string," Hue2: %d.%03d",int_part, frac_part);
  1509  0018D2  0E90               	movlw	low main@string
  1510  0018D4  0100               	movlb	0	; () banked
  1511  0018D6  6F72               	movwf	sprintf@s& (0+255),b
  1512  0018D8  0E00               	movlw	high main@string
  1513  0018DA  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1514  0018DC  0E14               	movlw	low STR_2
  1515  0018DE  6F74               	movwf	sprintf@fmt& (0+255),b
  1516  0018E0  0E0E               	movlw	high STR_2
  1517  0018E2  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1518  0018E4  C0AA  F076         	movff	main@int_part,?_sprintf+4
  1519  0018E8  C0AB  F077         	movff	main@int_part+1,?_sprintf+5
  1520  0018EC  C0A4  F078         	movff	main@frac_part,?_sprintf+6
  1521  0018F0  C0A5  F079         	movff	main@frac_part+1,?_sprintf+7
  1522  0018F4  ECE9  F01C         	call	_sprintf	;wreg free
  1523  0018F8                     
  1524                           ;main.c: 108:             TxBufferedString(string);
  1525  0018F8  0E90               	movlw	low main@string
  1526  0018FA  6E06               	movwf	TxBufferedString@string^0,c
  1527  0018FC  0E00               	movlw	high main@string
  1528  0018FE  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1529  001900  ECF8  F01E         	call	_TxBufferedString	;wreg free
  1530  001904                     
  1531                           ;main.c: 109:             sendTxBuf();
  1532  001904  ECAC  F01F         	call	_sendTxBuf	;wreg free
  1533                           
  1534                           ;main.c: 110:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1535  001908  0E09               	movlw	9
  1536  00190A  6E51               	movwf	(??_main+1)^0,c
  1537  00190C  0E1E               	movlw	30
  1538  00190E  6E50               	movwf	??_main^0,c
  1539  001910  0EE4               	movlw	228
  1540  001912                     u5437:
  1541  001912  2EE8               	decfsz	wreg,f,c
  1542  001914  D7FE               	bra	u5437
  1543  001916  2E50               	decfsz	??_main^0,f,c
  1544  001918  D7FC               	bra	u5437
  1545  00191A  2E51               	decfsz	(??_main+1)^0,f,c
  1546  00191C  D7FA               	bra	u5437
  1547  00191E  D000               	nop2	
  1548  001920                     
  1549                           ;main.c: 112:             LATGbits.LATG1=0;
  1550  001920  927F               	bcf	127,1,c	;volatile
  1551  001922                     
  1552                           ;main.c: 113:             LATAbits.LATA4=1;
  1553  001922  8879               	bsf	121,4,c	;volatile
  1554  001924                     
  1555                           ;main.c: 114:             LATFbits.LATF7=0;
  1556  001924  9E7E               	bcf	126,7,c	;volatile
  1557                           
  1558                           ;main.c: 115:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1559  001926  0E09               	movlw	9
  1560  001928  6E51               	movwf	(??_main+1)^0,c
  1561  00192A  0E1E               	movlw	30
  1562  00192C  6E50               	movwf	??_main^0,c
  1563  00192E  0EE4               	movlw	228
  1564  001930                     u5447:
  1565  001930  2EE8               	decfsz	wreg,f,c
  1566  001932  D7FE               	bra	u5447
  1567  001934  2E50               	decfsz	??_main^0,f,c
  1568  001936  D7FC               	bra	u5447
  1569  001938  2E51               	decfsz	(??_main+1)^0,f,c
  1570  00193A  D7FA               	bra	u5447
  1571  00193C  D000               	nop2	
  1572  00193E                     
  1573                           ;main.c: 116:             read_colours(&test);
  1574  00193E  0EBE               	movlw	low main@test
  1575  001940  6E10               	movwf	read_colours@m^0,c
  1576  001942  0E00               	movlw	high main@test
  1577  001944  6E11               	movwf	(read_colours@m+1)^0,c
  1578  001946  EC67  F01C         	call	_read_colours	;wreg free
  1579  00194A                     
  1580                           ;main.c: 117:             temp = determine_color_new(&test);
  1581  00194A  0EBE               	movlw	low main@test
  1582  00194C  6E3F               	movwf	determine_color_new@m^0,c
  1583  00194E  0E00               	movlw	high main@test
  1584  001950  6E40               	movwf	(determine_color_new@m+1)^0,c
  1585  001952  EC1A  F007         	call	_determine_color_new	;wreg free
  1586  001956  C03F  F0A6         	movff	?_determine_color_new,main@temp
  1587  00195A  C040  F0A7         	movff	?_determine_color_new+1,main@temp+1
  1588  00195E  C041  F0A8         	movff	?_determine_color_new+2,main@temp+2
  1589  001962  C042  F0A9         	movff	?_determine_color_new+3,main@temp+3
  1590  001966                     
  1591                           ;main.c: 118:             int_part = temp/1;
  1592  001966  0E00               	movlw	0
  1593  001968  6E22               	movwf	___fldiv@a^0,c
  1594  00196A  0E00               	movlw	0
  1595  00196C  6E23               	movwf	(___fldiv@a+1)^0,c
  1596  00196E  0E80               	movlw	128
  1597  001970  6E24               	movwf	(___fldiv@a+2)^0,c
  1598  001972  0E3F               	movlw	63
  1599  001974  6E25               	movwf	(___fldiv@a+3)^0,c
  1600  001976  C0A6  F01E         	movff	main@temp,___fldiv@b
  1601  00197A  C0A7  F01F         	movff	main@temp+1,___fldiv@b+1
  1602  00197E  C0A8  F020         	movff	main@temp+2,___fldiv@b+2
  1603  001982  C0A9  F021         	movff	main@temp+3,___fldiv@b+3
  1604  001986  ECCD  F011         	call	___fldiv	;wreg free
  1605  00198A  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1606  00198E  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1607  001992  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1608  001996  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1609  00199A  ECF4  F019         	call	___fltol	;wreg free
  1610  00199E  C03F  F0AA         	movff	?___fltol,main@int_part
  1611  0019A2  C040  F0AB         	movff	?___fltol+1,main@int_part+1
  1612  0019A6                     
  1613                           ;main.c: 119:             frac_part =(temp*1000)/1 - int_part*1000;
  1614  0019A6  0E03               	movlw	3
  1615  0019A8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1616  0019AA  0EE8               	movlw	232
  1617  0019AC  6E07               	movwf	___wmul@multiplicand^0,c
  1618  0019AE  C0AA  F005         	movff	main@int_part,___wmul@multiplier
  1619  0019B2  C0AB  F006         	movff	main@int_part+1,___wmul@multiplier+1
  1620  0019B6  EC79  F01F         	call	___wmul	;wreg free
  1621  0019BA  C005  F00B         	movff	?___wmul,___xxtofl@val
  1622  0019BE  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1623  0019C2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1624  0019C4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1625  0019C6  0E00               	movlw	0
  1626  0019C8  ECD2  F016         	call	___xxtofl
  1627  0019CC  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1628  0019D0  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1629  0019D4  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1630  0019D8  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1631  0019DC  0E00               	movlw	0
  1632  0019DE  6E22               	movwf	___fldiv@a^0,c
  1633  0019E0  0E00               	movlw	0
  1634  0019E2  6E23               	movwf	(___fldiv@a+1)^0,c
  1635  0019E4  0E80               	movlw	128
  1636  0019E6  6E24               	movwf	(___fldiv@a+2)^0,c
  1637  0019E8  0E3F               	movlw	63
  1638  0019EA  6E25               	movwf	(___fldiv@a+3)^0,c
  1639  0019EC  0E00               	movlw	0
  1640  0019EE  6E09               	movwf	___flmul@a^0,c
  1641  0019F0  0E00               	movlw	0
  1642  0019F2  6E0A               	movwf	(___flmul@a+1)^0,c
  1643  0019F4  0E7A               	movlw	122
  1644  0019F6  6E0B               	movwf	(___flmul@a+2)^0,c
  1645  0019F8  0E44               	movlw	68
  1646  0019FA  6E0C               	movwf	(___flmul@a+3)^0,c
  1647  0019FC  C0A6  F005         	movff	main@temp,___flmul@b
  1648  001A00  C0A7  F006         	movff	main@temp+1,___flmul@b+1
  1649  001A04  C0A8  F007         	movff	main@temp+2,___flmul@b+2
  1650  001A08  C0A9  F008         	movff	main@temp+3,___flmul@b+3
  1651  001A0C  ECB8  F00F         	call	___flmul	;wreg free
  1652  001A10  C005  F01E         	movff	?___flmul,___fldiv@b
  1653  001A14  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1654  001A18  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1655  001A1C  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1656  001A20  ECCD  F011         	call	___fldiv	;wreg free
  1657  001A24  C01E  F037         	movff	?___fldiv,___flsub@b
  1658  001A28  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1659  001A2C  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1660  001A30  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1661  001A34  EC00  F01E         	call	___flsub	;wreg free
  1662  001A38  C037  F03F         	movff	?___flsub,___fltol@f1
  1663  001A3C  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1664  001A40  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1665  001A44  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1666  001A48  ECF4  F019         	call	___fltol	;wreg free
  1667  001A4C  C03F  F0A4         	movff	?___fltol,main@frac_part
  1668  001A50  C040  F0A5         	movff	?___fltol+1,main@frac_part+1
  1669  001A54                     
  1670                           ;main.c: 120:             sprintf(string," Hue3: %d.%03d",int_part, frac_part);
  1671  001A54  0E90               	movlw	low main@string
  1672  001A56  0100               	movlb	0	; () banked
  1673  001A58  6F72               	movwf	sprintf@s& (0+255),b
  1674  001A5A  0E00               	movlw	high main@string
  1675  001A5C  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1676  001A5E  0E23               	movlw	low STR_3
  1677  001A60  6F74               	movwf	sprintf@fmt& (0+255),b
  1678  001A62  0E0E               	movlw	high STR_3
  1679  001A64  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1680  001A66  C0AA  F076         	movff	main@int_part,?_sprintf+4
  1681  001A6A  C0AB  F077         	movff	main@int_part+1,?_sprintf+5
  1682  001A6E  C0A4  F078         	movff	main@frac_part,?_sprintf+6
  1683  001A72  C0A5  F079         	movff	main@frac_part+1,?_sprintf+7
  1684  001A76  ECE9  F01C         	call	_sprintf	;wreg free
  1685  001A7A                     
  1686                           ;main.c: 121:             TxBufferedString(string);
  1687  001A7A  0E90               	movlw	low main@string
  1688  001A7C  6E06               	movwf	TxBufferedString@string^0,c
  1689  001A7E  0E00               	movlw	high main@string
  1690  001A80  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1691  001A82  ECF8  F01E         	call	_TxBufferedString	;wreg free
  1692  001A86                     
  1693                           ;main.c: 122:             sendTxBuf();
  1694  001A86  ECAC  F01F         	call	_sendTxBuf	;wreg free
  1695  001A8A                     
  1696                           ;main.c: 123:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1697  001A8A  0E09               	movlw	9
  1698  001A8C  6E51               	movwf	(??_main+1)^0,c
  1699  001A8E  0E1E               	movlw	30
  1700  001A90  6E50               	movwf	??_main^0,c
  1701  001A92  0EE4               	movlw	228
  1702  001A94                     u5457:
  1703  001A94  2EE8               	decfsz	wreg,f,c
  1704  001A96  D7FE               	bra	u5457
  1705  001A98  2E50               	decfsz	??_main^0,f,c
  1706  001A9A  D7FC               	bra	u5457
  1707  001A9C  2E51               	decfsz	(??_main+1)^0,f,c
  1708  001A9E  D7FA               	bra	u5457
  1709  001AA0  D000               	nop2	
  1710  001AA2                     
  1711                           ;main.c: 125:             LATGbits.LATG1=0;
  1712  001AA2  927F               	bcf	127,1,c	;volatile
  1713  001AA4                     
  1714                           ;main.c: 126:             LATAbits.LATA4=0;
  1715  001AA4  9879               	bcf	121,4,c	;volatile
  1716  001AA6                     
  1717                           ;main.c: 127:             LATFbits.LATF7=0;
  1718  001AA6  9E7E               	bcf	126,7,c	;volatile
  1719  001AA8  EFFF  F00A         	goto	l5457
  1720  001AAC  EF3B  F000         	goto	start
  1721  001AB0                     __end_of_main:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _sprintf *****************
  1725 ;; Defined at:
  1726 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  s               2   18[BANK0 ] PTR unsigned char 
  1729 ;;		 -> main@string(20), 
  1730 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  1731 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  f               6   28[BANK0 ] struct _IO_FILE
  1734 ;;  ap              2   26[BANK0 ] PTR void [1]
  1735 ;;		 -> ?_sprintf(2), 
  1736 ;;  ret             2    0        int 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2   18[BANK0 ] int 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1746 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;Total ram usage:       16 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 9
  1753 ;; This function calls:
  1754 ;;		_vfprintf
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text1
  1761  0039D2                     __ptext1:
  1762                           	callstack 0
  1763  0039D2                     _sprintf:
  1764                           	callstack 21
  1765  0039D2  0E76               	movlw	low (?_sprintf+4)
  1766  0039D4  0100               	movlb	0	; () banked
  1767  0039D6  6F7A               	movwf	sprintf@ap& (0+255),b
  1768  0039D8  0E00               	movlw	high (?_sprintf+4)
  1769  0039DA  6F7B               	movwf	(sprintf@ap+1)& (0+255),b
  1770  0039DC  C072  F07C         	movff	sprintf@s,sprintf@f
  1771  0039E0  C073  F07D         	movff	sprintf@s+1,sprintf@f+1
  1772  0039E4                     
  1773                           ; BSR set to: 0
  1774  0039E4  0E00               	movlw	0
  1775  0039E6  6F7F               	movwf	(sprintf@f+3)& (0+255),b
  1776  0039E8  0E00               	movlw	0
  1777  0039EA  6F7E               	movwf	(sprintf@f+2)& (0+255),b
  1778  0039EC                     
  1779                           ; BSR set to: 0
  1780  0039EC  0E00               	movlw	0
  1781  0039EE  6F81               	movwf	(sprintf@f+5)& (0+255),b
  1782  0039F0  0E00               	movlw	0
  1783  0039F2  6F80               	movwf	(sprintf@f+4)& (0+255),b
  1784  0039F4                     
  1785                           ; BSR set to: 0
  1786  0039F4  0E7C               	movlw	low sprintf@f
  1787  0039F6  6F6C               	movwf	vfprintf@fp& (0+255),b
  1788  0039F8  0E00               	movlw	high sprintf@f
  1789  0039FA  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  1790  0039FC  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  1791  003A00  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1792  003A04  0E7A               	movlw	low sprintf@ap
  1793  003A06  6F70               	movwf	vfprintf@ap& (0+255),b
  1794  003A08  0E00               	movlw	high sprintf@ap
  1795  003A0A  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  1796  003A0C  ECB6  F01C         	call	_vfprintf	;wreg free
  1797  003A10  0100               	movlb	0	; () banked
  1798  003A12  517E               	movf	(sprintf@f+2)& (0+255),w,b
  1799  003A14  2572               	addwf	sprintf@s& (0+255),w,b
  1800  003A16  6ED9               	movwf	fsr2l,c
  1801  003A18  517F               	movf	(sprintf@f+3)& (0+255),w,b
  1802  003A1A  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  1803  003A1C  6EDA               	movwf	fsr2h,c
  1804  003A1E  0E00               	movlw	0
  1805  003A20  6EDF               	movwf	indf2,c
  1806  003A22                     
  1807                           ; BSR set to: 0
  1808  003A22  0012               	return		;funcret
  1809  003A24                     __end_of_sprintf:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _vfprintf *****************
  1813 ;; Defined at:
  1814 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1817 ;;		 -> sprintf@f(6), 
  1818 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1819 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1820 ;;  ap              2   16[BANK0 ] PTR PTR void 
  1821 ;;		 -> sprintf@ap(2), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1824 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2   12[BANK0 ] int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1834 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;Total ram usage:        8 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 8
  1841 ;; This function calls:
  1842 ;;		_vfpfcnvrt
  1843 ;; This function is called by:
  1844 ;;		_sprintf
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text2
  1849  00396C                     __ptext2:
  1850                           	callstack 0
  1851  00396C                     _vfprintf:
  1852                           	callstack 21
  1853  00396C                     
  1854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1855  00396C  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1856  003970  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1857  003974                     
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1859  003974  0E00               	movlw	0
  1860  003976  0100               	movlb	0	; () banked
  1861  003978  6FEF               	movwf	(_nout+1)& (0+255),b
  1862  00397A  0E00               	movlw	0
  1863  00397C  6FEE               	movwf	_nout& (0+255),b
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1866  00397E  EFD4  F01C         	goto	l5189
  1867  003982                     l5187:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1871  003982  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1872  003986  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1873  00398A  0E4E               	movlw	low vfprintf@cfmt
  1874  00398C  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1875  00398E  0E00               	movlw	high vfprintf@cfmt
  1876  003990  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1877  003992  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1878  003996  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1879  00399A  EC9A  F013         	call	_vfpfcnvrt	;wreg free
  1880  00399E  5044               	movf	?_vfpfcnvrt^0,w,c
  1881  0039A0  0100               	movlb	0	; () banked
  1882  0039A2  27EE               	addwf	_nout& (0+255),f,b
  1883  0039A4  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1884  0039A6  23EF               	addwfc	(_nout+1)& (0+255),f,b
  1885  0039A8                     l5189:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1889  0039A8  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1890  0039AC  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1891  0039B0                     	if	0	;tblptru may be non-zero
  1892  0039B0                     	endif
  1893  0039B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1894  0039B0  0E00               	movlw	low (__mediumconst shr (0+16))
  1895  0039B2  6EF8               	movwf	tblptru,c
  1896  0039B4                     	endif
  1897  0039B4  0008               	tblrd		*
  1898  0039B6  50F5               	movf	tablat,w,c
  1899  0039B8  0900               	iorlw	0
  1900  0039BA  A4D8               	btfss	status,2,c
  1901  0039BC  EFE2  F01C         	goto	u5211
  1902  0039C0  EFE4  F01C         	goto	u5210
  1903  0039C4                     u5211:
  1904  0039C4  EFC1  F01C         	goto	l5187
  1905  0039C8                     u5210:
  1906  0039C8                     
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1909  0039C8  C0EE  F06C         	movff	_nout,?_vfprintf
  1910  0039CC  C0EF  F06D         	movff	_nout+1,?_vfprintf+1
  1911  0039D0                     
  1912                           ; BSR set to: 0
  1913  0039D0  0012               	return		;funcret
  1914  0039D2                     __end_of_vfprintf:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _vfpfcnvrt *****************
  1918 ;; Defined at:
  1919 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1922 ;;		 -> sprintf@f(6), 
  1923 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1924 ;;		 -> vfprintf@cfmt(2), 
  1925 ;;  ap              2   71[COMRAM] PTR PTR void 
  1926 ;;		 -> sprintf@ap(2), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  ll              8    0[BANK0 ] long long 
  1929 ;;  llu             8    0        unsigned long long 
  1930 ;;  f               4    0        unsigned long long 
  1931 ;;  vp              3    0        PTR void 
  1932 ;;  ct              3    0        unsigned char [3]
  1933 ;;  cp              3    0        PTR unsigned char 
  1934 ;;  done            2    8[BANK0 ] int 
  1935 ;;  i               2    0        int 
  1936 ;;  c               1    0        unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2   67[COMRAM] int 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:       22 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 7
  1953 ;; This function calls:
  1954 ;;		_atoi
  1955 ;;		_dtoa
  1956 ;;		_fputc
  1957 ;;		_isdigit
  1958 ;; This function is called by:
  1959 ;;		_vfprintf
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text3
  1964  002734                     __ptext3:
  1965                           	callstack 0
  1966  002734                     _vfpfcnvrt:
  1967                           	callstack 21
  1968  002734                     
  1969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1970  002734  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1971  002738  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1972  00273C  CFDE FFF6          	movff	postinc2,tblptrl
  1973  002740  CFDD FFF7          	movff	postdec2,tblptrh
  1974  002744                     	if	0	;tblptru may be non-zero
  1975  002744                     	endif
  1976  002744                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1977  002744  0E00               	movlw	low (__mediumconst shr (0+16))
  1978  002746  6EF8               	movwf	tblptru,c
  1979  002748                     	endif
  1980  002748  0008               	tblrd		*
  1981  00274A  50F5               	movf	tablat,w,c
  1982  00274C  0A25               	xorlw	37
  1983  00274E  A4D8               	btfss	status,2,c
  1984  002750  EFAC  F013         	goto	u5061
  1985  002754  EFAE  F013         	goto	u5060
  1986  002758                     u5061:
  1987  002758  EF42  F015         	goto	l5123
  1988  00275C                     u5060:
  1989  00275C                     
  1990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1991  00275C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1992  002760  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1993  002764  2ADE               	incf	postinc2,f,c
  1994  002766  0E00               	movlw	0
  1995  002768  22DD               	addwfc	postdec2,f,c
  1996  00276A                     
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1998  00276A  0E00               	movlw	0
  1999  00276C  0100               	movlb	0	; () banked
  2000  00276E  6FF1               	movwf	(_width+1)& (0+255),b
  2001  002770  0E00               	movlw	0
  2002  002772  6FF0               	movwf	_width& (0+255),b
  2003  002774  C0F0  F0F4         	movff	_width,_flags
  2004  002778  C0F1  F0F5         	movff	_width+1,_flags+1
  2005  00277C                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2008  00277C  69F2               	setf	_prec& (0+255),b
  2009  00277E  69F3               	setf	(_prec+1)& (0+255),b
  2010  002780                     
  2011                           ; BSR set to: 0
  2012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2013  002780  0E00               	movlw	0
  2014  002782  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2015  002784  0E00               	movlw	0
  2016  002786  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2019  002788  EF0E  F014         	goto	l5075
  2020  00278C                     l5049:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2024  00278C  81F4               	bsf	_flags& (0+255),0,b
  2025  00278E                     l5051:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2029  00278E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2030  002792  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2031  002796  2ADE               	incf	postinc2,f,c
  2032  002798  0E00               	movlw	0
  2033  00279A  22DD               	addwfc	postdec2,f,c
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2036  00279C  EF0E  F014         	goto	l5075
  2037  0027A0                     l5053:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2041  0027A0  83F4               	bsf	_flags& (0+255),1,b
  2042  0027A2  EFC7  F013         	goto	l5051
  2043  0027A6                     l5057:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2047  0027A6  85F4               	bsf	_flags& (0+255),2,b
  2048  0027A8  EFC7  F013         	goto	l5051
  2049  0027AC                     l5061:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2053  0027AC  87F4               	bsf	_flags& (0+255),3,b
  2054  0027AE  EFC7  F013         	goto	l5051
  2055  0027B2                     l5065:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2059  0027B2  89F4               	bsf	_flags& (0+255),4,b
  2060  0027B4  EFC7  F013         	goto	l5051
  2061  0027B8                     l5069:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2065  0027B8  0E00               	movlw	0
  2066  0027BA  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2067  0027BC  0E01               	movlw	1
  2068  0027BE  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2071  0027C0  EF0E  F014         	goto	l5075
  2072  0027C4                     l5073:
  2073                           
  2074                           ; BSR set to: 0
  2075  0027C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2076  0027C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2077  0027CC  CFDE FFF6          	movff	postinc2,tblptrl
  2078  0027D0  CFDD FFF7          	movff	postdec2,tblptrh
  2079  0027D4                     	if	0	;tblptru may be non-zero
  2080  0027D4                     	endif
  2081  0027D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2082  0027D4  0E00               	movlw	low (__mediumconst shr (0+16))
  2083  0027D6  6EF8               	movwf	tblptru,c
  2084  0027D8                     	endif
  2085  0027D8  0008               	tblrd		*
  2086  0027DA  50F5               	movf	tablat,w,c
  2087  0027DC  6E4A               	movwf	??_vfpfcnvrt^0,c
  2088  0027DE  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  2089                           
  2090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2091                           ; Switch size 1, requested type "simple"
  2092                           ; Number of cases is 1, Range of values is 0 to 0
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; simple_byte            4     3 (average)
  2096                           ;	Chosen strategy is simple_byte
  2097  0027E0  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2098  0027E2  0A00               	xorlw	0	; case 0
  2099  0027E4  B4D8               	btfsc	status,2,c
  2100  0027E6  EFF7  F013         	goto	l5583
  2101  0027EA  EFDC  F013         	goto	l5069
  2102  0027EE                     l5583:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ; Switch size 1, requested type "simple"
  2106                           ; Number of cases is 5, Range of values is 32 to 48
  2107                           ; switch strategies available:
  2108                           ; Name         Instructions Cycles
  2109                           ; simple_byte           16     9 (average)
  2110                           ;	Chosen strategy is simple_byte
  2111  0027EE  504A               	movf	??_vfpfcnvrt^0,w,c
  2112  0027F0  0A20               	xorlw	32	; case 32
  2113  0027F2  B4D8               	btfsc	status,2,c
  2114  0027F4  EFD6  F013         	goto	l5061
  2115  0027F8  0A03               	xorlw	3	; case 35
  2116  0027FA  B4D8               	btfsc	status,2,c
  2117  0027FC  EFD9  F013         	goto	l5065
  2118  002800  0A08               	xorlw	8	; case 43
  2119  002802  B4D8               	btfsc	status,2,c
  2120  002804  EFD3  F013         	goto	l5057
  2121  002808  0A06               	xorlw	6	; case 45
  2122  00280A  B4D8               	btfsc	status,2,c
  2123  00280C  EFC6  F013         	goto	l5049
  2124  002810  0A1D               	xorlw	29	; case 48
  2125  002812  B4D8               	btfsc	status,2,c
  2126  002814  EFD0  F013         	goto	l5053
  2127  002818  EFDC  F013         	goto	l5069
  2128  00281C                     l5075:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2132  00281C  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  2133  00281E  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2134  002820  B4D8               	btfsc	status,2,c
  2135  002822  EF15  F014         	goto	u5071
  2136  002826  EF17  F014         	goto	u5070
  2137  00282A                     u5071:
  2138  00282A  EFE2  F013         	goto	l5073
  2139  00282E                     u5070:
  2140  00282E                     
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2143  00282E  A1F4               	btfss	_flags& (0+255),0,b
  2144  002830  EF1C  F014         	goto	u5081
  2145  002834  EF1E  F014         	goto	u5080
  2146  002838                     u5081:
  2147  002838  EF1F  F014         	goto	l5079
  2148  00283C                     u5080:
  2149  00283C                     
  2150                           ; BSR set to: 0
  2151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2152  00283C  93F4               	bcf	_flags& (0+255),1,b
  2153  00283E                     l5079:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2157  00283E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2158  002842  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2159  002846  CFDE FFF6          	movff	postinc2,tblptrl
  2160  00284A  CFDD FFF7          	movff	postdec2,tblptrh
  2161  00284E                     	if	0	;tblptru may be non-zero
  2162  00284E                     	endif
  2163  00284E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2164  00284E  0E00               	movlw	low (__mediumconst shr (0+16))
  2165  002850  6EF8               	movwf	tblptru,c
  2166  002852                     	endif
  2167  002852  0008               	tblrd		*
  2168  002854  50F5               	movf	tablat,w,c
  2169  002856  0A2A               	xorlw	42
  2170  002858  A4D8               	btfss	status,2,c
  2171  00285A  EF31  F014         	goto	u5091
  2172  00285E  EF33  F014         	goto	u5090
  2173  002862                     u5091:
  2174  002862  EF5C  F014         	goto	l5087
  2175  002866                     u5090:
  2176  002866                     
  2177                           ; BSR set to: 0
  2178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2179  002866  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  00286A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  00286E  2ADE               	incf	postinc2,f,c
  2182  002870  0E00               	movlw	0
  2183  002872  22DD               	addwfc	postdec2,f,c
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2186  002874  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2187  002878  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2188  00287C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2189  002880  0E02               	movlw	2
  2190  002882  26DE               	addwf	postinc2,f,c
  2191  002884  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2192  002888  0E00               	movlw	0
  2193  00288A  22DD               	addwfc	postdec2,f,c
  2194  00288C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2195  002890  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2196  002894  CFDE F0F0          	movff	postinc2,_width
  2197  002898  CFDD F0F1          	movff	postdec2,_width+1
  2198  00289C                     
  2199                           ; BSR set to: 0
  2200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2201  00289C  BFF1               	btfsc	(_width+1)& (0+255),7,b
  2202  00289E  EF55  F014         	goto	u5100
  2203  0028A2  EF53  F014         	goto	u5101
  2204  0028A6                     u5101:
  2205  0028A6  EFA2  F014         	goto	l5097
  2206  0028AA                     u5100:
  2207  0028AA                     
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2210  0028AA  81F4               	bsf	_flags& (0+255),0,b
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2213  0028AC  6DF0               	negf	_width& (0+255),b
  2214  0028AE  1FF1               	comf	(_width+1)& (0+255),f,b
  2215  0028B0  B0D8               	btfsc	status,0,c
  2216  0028B2  2BF1               	incf	(_width+1)& (0+255),f,b
  2217  0028B4  EFA2  F014         	goto	l5097
  2218  0028B8                     l5087:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2222  0028B8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2223  0028BC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2224  0028C0  CFDE F00C          	movff	postinc2,atoi@s
  2225  0028C4  CFDD F00D          	movff	postdec2,atoi@s+1
  2226  0028C8  ECAC  F017         	call	_atoi	;wreg free
  2227  0028CC  C00C  F0F0         	movff	?_atoi,_width
  2228  0028D0  C00D  F0F1         	movff	?_atoi+1,_width+1
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2231  0028D4  EF73  F014         	goto	l5091
  2232  0028D8                     l5089:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2236  0028D8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2237  0028DC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2238  0028E0  2ADE               	incf	postinc2,f,c
  2239  0028E2  0E00               	movlw	0
  2240  0028E4  22DD               	addwfc	postdec2,f,c
  2241  0028E6                     l5091:
  2242  0028E6  0ED0               	movlw	208
  2243  0028E8  6E4A               	movwf	??_vfpfcnvrt^0,c
  2244  0028EA  0EFF               	movlw	255
  2245  0028EC  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2246  0028EE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247  0028F2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248  0028F6  CFDE FFF6          	movff	postinc2,tblptrl
  2249  0028FA  CFDD FFF7          	movff	postdec2,tblptrh
  2250  0028FE                     	if	0	;tblptru may be non-zero
  2251  0028FE                     	endif
  2252  0028FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2253  0028FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2254  002900  6EF8               	movwf	tblptru,c
  2255  002902                     	endif
  2256  002902  0008               	tblrd		*
  2257  002904  50F5               	movf	tablat,w,c
  2258  002906  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  2259  002908  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  2260  00290A  504A               	movf	??_vfpfcnvrt^0,w,c
  2261  00290C  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2262  00290E  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2263  002910  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2264  002912  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2265  002914  E10A               	bnz	u5110
  2266  002916  0E0A               	movlw	10
  2267  002918  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2268  00291A  A0D8               	btfss	status,0,c
  2269  00291C  EF92  F014         	goto	u5111
  2270  002920  EF95  F014         	goto	u5110
  2271  002924                     u5111:
  2272  002924  0E01               	movlw	1
  2273  002926  EF96  F014         	goto	u5120
  2274  00292A                     u5110:
  2275  00292A  0E00               	movlw	0
  2276  00292C                     u5120:
  2277  00292C  0100               	movlb	0	; () banked
  2278  00292E  6F6A               	movwf	_vfpfcnvrt$2280& (0+255),b
  2279  002930  6B6B               	clrf	(_vfpfcnvrt$2280+1)& (0+255),b
  2280  002932                     
  2281                           ; BSR set to: 0
  2282  002932  516A               	movf	_vfpfcnvrt$2280& (0+255),w,b
  2283  002934  116B               	iorwf	(_vfpfcnvrt$2280+1)& (0+255),w,b
  2284  002936  A4D8               	btfss	status,2,c
  2285  002938  EFA0  F014         	goto	u5131
  2286  00293C  EFA2  F014         	goto	u5130
  2287  002940                     u5131:
  2288  002940  EF6C  F014         	goto	l5089
  2289  002944                     u5130:
  2290  002944                     l5097:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2294  002944  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2295  002948  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2296  00294C  CFDE FFF6          	movff	postinc2,tblptrl
  2297  002950  CFDD FFF7          	movff	postdec2,tblptrh
  2298  002954                     	if	0	;tblptru may be non-zero
  2299  002954                     	endif
  2300  002954                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2301  002954  0E00               	movlw	low (__mediumconst shr (0+16))
  2302  002956  6EF8               	movwf	tblptru,c
  2303  002958                     	endif
  2304  002958  0008               	tblrd		*
  2305  00295A  50F5               	movf	tablat,w,c
  2306  00295C  0A64               	xorlw	100
  2307  00295E  B4D8               	btfsc	status,2,c
  2308  002960  EFB4  F014         	goto	u5141
  2309  002964  EFB6  F014         	goto	u5140
  2310  002968                     u5141:
  2311  002968  EFCA  F014         	goto	l5101
  2312  00296C                     u5140:
  2313  00296C                     
  2314                           ; BSR set to: 0
  2315  00296C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  002970  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  002974  CFDE FFF6          	movff	postinc2,tblptrl
  2318  002978  CFDD FFF7          	movff	postdec2,tblptrh
  2319  00297C                     	if	0	;tblptru may be non-zero
  2320  00297C                     	endif
  2321  00297C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2322  00297C  0E00               	movlw	low (__mediumconst shr (0+16))
  2323  00297E  6EF8               	movwf	tblptru,c
  2324  002980                     	endif
  2325  002980  0008               	tblrd		*
  2326  002982  50F5               	movf	tablat,w,c
  2327  002984  0A69               	xorlw	105
  2328  002986  A4D8               	btfss	status,2,c
  2329  002988  EFC8  F014         	goto	u5151
  2330  00298C  EFCA  F014         	goto	u5150
  2331  002990                     u5151:
  2332  002990  EF0A  F015         	goto	l5107
  2333  002994                     u5150:
  2334  002994                     l5101:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2338  002994  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2339  002998  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  00299C  2ADE               	incf	postinc2,f,c
  2341  00299E  0E00               	movlw	0
  2342  0029A0  22DD               	addwfc	postdec2,f,c
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2345  0029A2  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2346  0029A6  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2347  0029AA  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2348  0029AE  0E02               	movlw	2
  2349  0029B0  26DE               	addwf	postinc2,f,c
  2350  0029B2  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2351  0029B6  0E00               	movlw	0
  2352  0029B8  22DD               	addwfc	postdec2,f,c
  2353  0029BA  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2354  0029BE  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2355  0029C2  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  2356  0029C6  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  2357  0029CA  0E00               	movlw	0
  2358  0029CC  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2359  0029CE  0EFF               	movlw	-1
  2360  0029D0  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2361  0029D2  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2362  0029D4  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2363  0029D6  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2364  0029D8  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2365  0029DA  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2366  0029DC                     
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2369  0029DC  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2370  0029E0  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2371  0029E4  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2372  0029E8  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2373  0029EC  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2374  0029F0  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2375  0029F4  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2376  0029F8  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2377  0029FC  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2378  002A00  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2379  002A04  EC60  F015         	call	_dtoa	;wreg free
  2380  002A08  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2381  002A0C  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2382  002A10  EF5F  F015         	goto	l1214
  2383  002A14                     l5107:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2387  002A14  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2388  002A18  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2389  002A1C  CFDE FFF6          	movff	postinc2,tblptrl
  2390  002A20  CFDD FFF7          	movff	postdec2,tblptrh
  2391  002A24                     	if	0	;tblptru may be non-zero
  2392  002A24                     	endif
  2393  002A24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2394  002A24  0E00               	movlw	low (__mediumconst shr (0+16))
  2395  002A26  6EF8               	movwf	tblptru,c
  2396  002A28                     	endif
  2397  002A28  0008               	tblrd		*
  2398  002A2A  50F5               	movf	tablat,w,c
  2399  002A2C  0A25               	xorlw	37
  2400  002A2E  A4D8               	btfss	status,2,c
  2401  002A30  EF1C  F015         	goto	u5161
  2402  002A34  EF1E  F015         	goto	u5160
  2403  002A38                     u5161:
  2404  002A38  EF35  F015         	goto	l5117
  2405  002A3C                     u5160:
  2406  002A3C                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2409  002A3C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2410  002A40  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2411  002A44  2ADE               	incf	postinc2,f,c
  2412  002A46  0E00               	movlw	0
  2413  002A48  22DD               	addwfc	postdec2,f,c
  2414  002A4A                     
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2417  002A4A  0E00               	movlw	0
  2418  002A4C  6E06               	movwf	(fputc@c+1)^0,c
  2419  002A4E  0E25               	movlw	37
  2420  002A50  6E05               	movwf	fputc@c^0,c
  2421  002A52  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2422  002A56  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2423  002A5A  ECF9  F01A         	call	_fputc	;wreg free
  2424  002A5E                     l5113:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2427  002A5E  0E00               	movlw	0
  2428  002A60  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2429  002A62  0E01               	movlw	1
  2430  002A64  6E44               	movwf	?_vfpfcnvrt^0,c
  2431  002A66  EF5F  F015         	goto	l1214
  2432  002A6A                     l5117:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2436  002A6A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2437  002A6E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2438  002A72  2ADE               	incf	postinc2,f,c
  2439  002A74  0E00               	movlw	0
  2440  002A76  22DD               	addwfc	postdec2,f,c
  2441  002A78                     
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2444  002A78  0E00               	movlw	0
  2445  002A7A  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2446  002A7C  0E00               	movlw	0
  2447  002A7E  6E44               	movwf	?_vfpfcnvrt^0,c
  2448  002A80  EF5F  F015         	goto	l1214
  2449  002A84                     l5123:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2452  002A84  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  002A88  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  002A8C  CFDE FFF6          	movff	postinc2,tblptrl
  2455  002A90  CFDD FFF7          	movff	postdec2,tblptrh
  2456  002A94                     	if	0	;tblptru may be non-zero
  2457  002A94                     	endif
  2458  002A94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2459  002A94  0E00               	movlw	low (__mediumconst shr (0+16))
  2460  002A96  6EF8               	movwf	tblptru,c
  2461  002A98                     	endif
  2462  002A98  0008               	tblrd		*
  2463  002A9A  50F5               	movf	tablat,w,c
  2464  002A9C  6E05               	movwf	fputc@c^0,c
  2465  002A9E  6A06               	clrf	(fputc@c+1)^0,c
  2466  002AA0  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2467  002AA4  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2468  002AA8  ECF9  F01A         	call	_fputc	;wreg free
  2469  002AAC                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2471  002AAC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  002AB0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  002AB4  2ADE               	incf	postinc2,f,c
  2474  002AB6  0E00               	movlw	0
  2475  002AB8  22DD               	addwfc	postdec2,f,c
  2476  002ABA  EF2F  F015         	goto	l5113
  2477  002ABE                     l1214:
  2478  002ABE  0012               	return		;funcret
  2479  002AC0                     __end_of_vfpfcnvrt:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _dtoa *****************
  2483 ;; Defined at:
  2484 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2487 ;;		 -> sprintf@f(6), 
  2488 ;;  d               8   33[COMRAM] long long 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  n               8   57[COMRAM] long long 
  2491 ;;  i               2   65[COMRAM] int 
  2492 ;;  s               2   55[COMRAM] int 
  2493 ;;  w               2   53[COMRAM] int 
  2494 ;;  p               2   51[COMRAM] int 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  2   31[COMRAM] int 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2504 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;Total ram usage:       36 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 6
  2511 ;; This function calls:
  2512 ;;		___aodiv
  2513 ;;		___aomod
  2514 ;;		_abs
  2515 ;;		_pad
  2516 ;; This function is called by:
  2517 ;;		_vfpfcnvrt
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text4
  2522  002AC0                     __ptext4:
  2523                           	callstack 0
  2524  002AC0                     _dtoa:
  2525                           	callstack 21
  2526  002AC0                     
  2527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2528  002AC0  C022  F03A         	movff	dtoa@d,dtoa@n
  2529  002AC4  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2530  002AC8  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2531  002ACC  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2532  002AD0  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2533  002AD4  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2534  002AD8  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2535  002ADC  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2536  002AE0                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2538  002AE0  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2539  002AE2  EF75  F015         	goto	u4831
  2540  002AE6  EF78  F015         	goto	u4830
  2541  002AEA                     u4831:
  2542  002AEA  0E01               	movlw	1
  2543  002AEC  EF79  F015         	goto	u4840
  2544  002AF0                     u4830:
  2545  002AF0  0E00               	movlw	0
  2546  002AF2                     u4840:
  2547  002AF2  6E38               	movwf	dtoa@s^0,c
  2548  002AF4  6A39               	clrf	(dtoa@s+1)^0,c
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2551  002AF6  5038               	movf	dtoa@s^0,w,c
  2552  002AF8  1039               	iorwf	(dtoa@s+1)^0,w,c
  2553  002AFA  B4D8               	btfsc	status,2,c
  2554  002AFC  EF82  F015         	goto	u4851
  2555  002B00  EF84  F015         	goto	u4850
  2556  002B04                     u4851:
  2557  002B04  EF94  F015         	goto	l4931
  2558  002B08                     u4850:
  2559  002B08                     
  2560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2561  002B08  1E41               	comf	(dtoa@n+7)^0,f,c
  2562  002B0A  1E40               	comf	(dtoa@n+6)^0,f,c
  2563  002B0C  1E3F               	comf	(dtoa@n+5)^0,f,c
  2564  002B0E  1E3E               	comf	(dtoa@n+4)^0,f,c
  2565  002B10  1E3D               	comf	(dtoa@n+3)^0,f,c
  2566  002B12  1E3C               	comf	(dtoa@n+2)^0,f,c
  2567  002B14  1E3B               	comf	(dtoa@n+1)^0,f,c
  2568  002B16  6C3A               	negf	dtoa@n^0,c
  2569  002B18  0E00               	movlw	0
  2570  002B1A  223B               	addwfc	(dtoa@n+1)^0,f,c
  2571  002B1C  223C               	addwfc	(dtoa@n+2)^0,f,c
  2572  002B1E  223D               	addwfc	(dtoa@n+3)^0,f,c
  2573  002B20  223E               	addwfc	(dtoa@n+4)^0,f,c
  2574  002B22  223F               	addwfc	(dtoa@n+5)^0,f,c
  2575  002B24  2240               	addwfc	(dtoa@n+6)^0,f,c
  2576  002B26  2241               	addwfc	(dtoa@n+7)^0,f,c
  2577  002B28                     l4931:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2580  002B28  0100               	movlb	0	; () banked
  2581  002B2A  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  2582  002B2C  EF9A  F015         	goto	u4861
  2583  002B30  EF9C  F015         	goto	u4860
  2584  002B34                     u4861:
  2585  002B34  EF9D  F015         	goto	l4935
  2586  002B38                     u4860:
  2587  002B38                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2590  002B38  93F4               	bcf	_flags& (0+255),1,b
  2591  002B3A                     l4935:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2595  002B3A  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  2596  002B3C  EFAA  F015         	goto	u4870
  2597  002B40  51F3               	movf	(_prec+1)& (0+255),w,b
  2598  002B42  E106               	bnz	u4871
  2599  002B44  05F2               	decf	_prec& (0+255),w,b
  2600  002B46  B0D8               	btfsc	status,0,c
  2601  002B48  EFA8  F015         	goto	u4871
  2602  002B4C  EFAA  F015         	goto	u4870
  2603  002B50                     u4871:
  2604  002B50  EFB0  F015         	goto	l1165
  2605  002B54                     u4870:
  2606  002B54                     
  2607                           ; BSR set to: 0
  2608  002B54  0E00               	movlw	0
  2609  002B56  6E35               	movwf	(dtoa@p+1)^0,c
  2610  002B58  0E01               	movlw	1
  2611  002B5A  6E34               	movwf	dtoa@p^0,c
  2612  002B5C  EFB4  F015         	goto	l1167
  2613  002B60                     l1165:
  2614                           
  2615                           ; BSR set to: 0
  2616  002B60  C0F2  F034         	movff	_prec,dtoa@p
  2617  002B64  C0F3  F035         	movff	_prec+1,dtoa@p+1
  2618  002B68                     l1167:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2622  002B68  C0F0  F036         	movff	_width,dtoa@w
  2623  002B6C  C0F1  F037         	movff	_width+1,dtoa@w+1
  2624  002B70                     
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2627  002B70  5038               	movf	dtoa@s^0,w,c
  2628  002B72  1039               	iorwf	(dtoa@s+1)^0,w,c
  2629  002B74  A4D8               	btfss	status,2,c
  2630  002B76  EFBF  F015         	goto	u4881
  2631  002B7A  EFC1  F015         	goto	u4880
  2632  002B7E                     u4881:
  2633  002B7E  EFC8  F015         	goto	l4943
  2634  002B82                     u4880:
  2635  002B82                     
  2636                           ; BSR set to: 0
  2637  002B82  A5F4               	btfss	_flags& (0+255),2,b
  2638  002B84  EFC6  F015         	goto	u4891
  2639  002B88  EFC8  F015         	goto	u4890
  2640  002B8C                     u4891:
  2641  002B8C  EFCB  F015         	goto	l4945
  2642  002B90                     u4890:
  2643  002B90                     l4943:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2647  002B90  0636               	decf	dtoa@w^0,f,c
  2648  002B92  A0D8               	btfss	status,0,c
  2649  002B94  0637               	decf	(dtoa@w+1)^0,f,c
  2650  002B96                     l4945:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2654  002B96  0E00               	movlw	0
  2655  002B98  6E43               	movwf	(dtoa@i+1)^0,c
  2656  002B9A  0E1F               	movlw	31
  2657  002B9C  6E42               	movwf	dtoa@i^0,c
  2658  002B9E                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2661  002B9E  0E00               	movlw	0
  2662  002BA0  0101               	movlb	1	; () banked
  2663  002BA2  6FFD               	movwf	(_dbuf+31)& (0+255),b
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2666  002BA4  EF50  F016         	goto	l4959
  2667  002BA8                     l4949:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2670  002BA8  0642               	decf	dtoa@i^0,f,c
  2671  002BAA  A0D8               	btfss	status,0,c
  2672  002BAC  0643               	decf	(dtoa@i+1)^0,f,c
  2673  002BAE                     
  2674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2675  002BAE  0EDE               	movlw	low _dbuf
  2676  002BB0  2442               	addwf	dtoa@i^0,w,c
  2677  002BB2  6ED9               	movwf	fsr2l,c
  2678  002BB4  0E01               	movlw	high _dbuf
  2679  002BB6  2043               	addwfc	(dtoa@i+1)^0,w,c
  2680  002BB8  6EDA               	movwf	fsr2h,c
  2681  002BBA  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2682  002BBE  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2683  002BC2  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2684  002BC6  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2685  002BCA  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2686  002BCE  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2687  002BD2  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2688  002BD6  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2689  002BDA  0E0A               	movlw	10
  2690  002BDC  6E0D               	movwf	___aomod@divisor^0,c
  2691  002BDE  0E00               	movlw	0
  2692  002BE0  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2693  002BE2  0E00               	movlw	0
  2694  002BE4  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2695  002BE6  0E00               	movlw	0
  2696  002BE8  6E10               	movwf	(___aomod@divisor+3)^0,c
  2697  002BEA  0E00               	movlw	0
  2698  002BEC  6E11               	movwf	(___aomod@divisor+4)^0,c
  2699  002BEE  0E00               	movlw	0
  2700  002BF0  6E12               	movwf	(___aomod@divisor+5)^0,c
  2701  002BF2  0E00               	movlw	0
  2702  002BF4  6E13               	movwf	(___aomod@divisor+6)^0,c
  2703  002BF6  0E00               	movlw	0
  2704  002BF8  6E14               	movwf	(___aomod@divisor+7)^0,c
  2705  002BFA  EC42  F019         	call	___aomod	;wreg free
  2706  002BFE  C005  F02A         	movff	?___aomod,??_dtoa
  2707  002C02  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2708  002C06  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2709  002C0A  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2710  002C0E  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2711  002C12  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2712  002C16  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2713  002C1A  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2714  002C1E  C02A  F017         	movff	??_dtoa,abs@a
  2715  002C22  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2716  002C26  EC87  F01E         	call	_abs	;wreg free
  2717  002C2A  5017               	movf	?_abs^0,w,c
  2718  002C2C  0F30               	addlw	48
  2719  002C2E  6EDF               	movwf	indf2,c
  2720  002C30                     
  2721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2722  002C30  0634               	decf	dtoa@p^0,f,c
  2723  002C32  A0D8               	btfss	status,0,c
  2724  002C34  0635               	decf	(dtoa@p+1)^0,f,c
  2725  002C36                     
  2726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2727  002C36  0636               	decf	dtoa@w^0,f,c
  2728  002C38  A0D8               	btfss	status,0,c
  2729  002C3A  0637               	decf	(dtoa@w+1)^0,f,c
  2730  002C3C                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2732  002C3C  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2733  002C40  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2734  002C44  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2735  002C48  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2736  002C4C  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2737  002C50  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2738  002C54  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2739  002C58  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2740  002C5C  0E0A               	movlw	10
  2741  002C5E  6E0D               	movwf	___aodiv@divisor^0,c
  2742  002C60  0E00               	movlw	0
  2743  002C62  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2744  002C64  0E00               	movlw	0
  2745  002C66  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2746  002C68  0E00               	movlw	0
  2747  002C6A  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2748  002C6C  0E00               	movlw	0
  2749  002C6E  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2750  002C70  0E00               	movlw	0
  2751  002C72  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2752  002C74  0E00               	movlw	0
  2753  002C76  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2754  002C78  0E00               	movlw	0
  2755  002C7A  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2756  002C7C  EC7E  F018         	call	___aodiv	;wreg free
  2757  002C80  C005  F03A         	movff	?___aodiv,dtoa@n
  2758  002C84  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2759  002C88  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2760  002C8C  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2761  002C90  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2762  002C94  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2763  002C98  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2764  002C9C  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2765  002CA0                     l4959:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2768  002CA0  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2769  002CA2  EF5B  F016         	goto	u4901
  2770  002CA6  5043               	movf	(dtoa@i+1)^0,w,c
  2771  002CA8  E108               	bnz	u4900
  2772  002CAA  0442               	decf	dtoa@i^0,w,c
  2773  002CAC  A0D8               	btfss	status,0,c
  2774  002CAE  EF5B  F016         	goto	u4901
  2775  002CB2  EF5D  F016         	goto	u4900
  2776  002CB6                     u4901:
  2777  002CB6  EF8E  F016         	goto	l4969
  2778  002CBA                     u4900:
  2779  002CBA  503A               	movf	dtoa@n^0,w,c
  2780  002CBC  103B               	iorwf	(dtoa@n+1)^0,w,c
  2781  002CBE  103C               	iorwf	(dtoa@n+2)^0,w,c
  2782  002CC0  103D               	iorwf	(dtoa@n+3)^0,w,c
  2783  002CC2  103E               	iorwf	(dtoa@n+4)^0,w,c
  2784  002CC4  103F               	iorwf	(dtoa@n+5)^0,w,c
  2785  002CC6  1040               	iorwf	(dtoa@n+6)^0,w,c
  2786  002CC8  1041               	iorwf	(dtoa@n+7)^0,w,c
  2787  002CCA  A4D8               	btfss	status,2,c
  2788  002CCC  EF6A  F016         	goto	u4911
  2789  002CD0  EF6C  F016         	goto	u4910
  2790  002CD4                     u4911:
  2791  002CD4  EFD4  F015         	goto	l4949
  2792  002CD8                     u4910:
  2793  002CD8  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2794  002CDA  EF79  F016         	goto	u4920
  2795  002CDE  5035               	movf	(dtoa@p+1)^0,w,c
  2796  002CE0  E106               	bnz	u4921
  2797  002CE2  0434               	decf	dtoa@p^0,w,c
  2798  002CE4  B0D8               	btfsc	status,0,c
  2799  002CE6  EF77  F016         	goto	u4921
  2800  002CEA  EF79  F016         	goto	u4920
  2801  002CEE                     u4921:
  2802  002CEE  EFD4  F015         	goto	l4949
  2803  002CF2                     u4920:
  2804  002CF2  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2805  002CF4  EF84  F016         	goto	u4931
  2806  002CF8  5037               	movf	(dtoa@w+1)^0,w,c
  2807  002CFA  E108               	bnz	u4930
  2808  002CFC  0436               	decf	dtoa@w^0,w,c
  2809  002CFE  A0D8               	btfss	status,0,c
  2810  002D00  EF84  F016         	goto	u4931
  2811  002D04  EF86  F016         	goto	u4930
  2812  002D08                     u4931:
  2813  002D08  EF8E  F016         	goto	l4969
  2814  002D0C                     u4930:
  2815  002D0C  0100               	movlb	0	; () banked
  2816  002D0E  B3F4               	btfsc	_flags& (0+255),1,b
  2817  002D10  EF8C  F016         	goto	u4941
  2818  002D14  EF8E  F016         	goto	u4940
  2819  002D18                     u4941:
  2820  002D18  EFD4  F015         	goto	l4949
  2821  002D1C                     u4940:
  2822  002D1C                     l4969:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2825  002D1C  5038               	movf	dtoa@s^0,w,c
  2826  002D1E  1039               	iorwf	(dtoa@s+1)^0,w,c
  2827  002D20  A4D8               	btfss	status,2,c
  2828  002D22  EF95  F016         	goto	u4951
  2829  002D26  EF97  F016         	goto	u4950
  2830  002D2A                     u4951:
  2831  002D2A  EF9F  F016         	goto	l4973
  2832  002D2E                     u4950:
  2833  002D2E  0100               	movlb	0	; () banked
  2834  002D30  A5F4               	btfss	_flags& (0+255),2,b
  2835  002D32  EF9D  F016         	goto	u4961
  2836  002D36  EF9F  F016         	goto	u4960
  2837  002D3A                     u4961:
  2838  002D3A  EFBD  F016         	goto	l4983
  2839  002D3E                     u4960:
  2840  002D3E                     l4973:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2843  002D3E  0642               	decf	dtoa@i^0,f,c
  2844  002D40  A0D8               	btfss	status,0,c
  2845  002D42  0643               	decf	(dtoa@i+1)^0,f,c
  2846  002D44                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2848  002D44  5038               	movf	dtoa@s^0,w,c
  2849  002D46  1039               	iorwf	(dtoa@s+1)^0,w,c
  2850  002D48  A4D8               	btfss	status,2,c
  2851  002D4A  EFA9  F016         	goto	u4971
  2852  002D4E  EFAB  F016         	goto	u4970
  2853  002D52                     u4971:
  2854  002D52  EFB1  F016         	goto	l4979
  2855  002D56                     u4970:
  2856  002D56  0E00               	movlw	0
  2857  002D58  6E33               	movwf	(_dtoa$2265+1)^0,c
  2858  002D5A  0E2B               	movlw	43
  2859  002D5C  6E32               	movwf	_dtoa$2265^0,c
  2860  002D5E  EFB5  F016         	goto	l4981
  2861  002D62                     l4979:
  2862  002D62  0E00               	movlw	0
  2863  002D64  6E33               	movwf	(_dtoa$2265+1)^0,c
  2864  002D66  0E2D               	movlw	45
  2865  002D68  6E32               	movwf	_dtoa$2265^0,c
  2866  002D6A                     l4981:
  2867  002D6A  0EDE               	movlw	low _dbuf
  2868  002D6C  2442               	addwf	dtoa@i^0,w,c
  2869  002D6E  6ED9               	movwf	fsr2l,c
  2870  002D70  0E01               	movlw	high _dbuf
  2871  002D72  2043               	addwfc	(dtoa@i+1)^0,w,c
  2872  002D74  6EDA               	movwf	fsr2h,c
  2873  002D76  C032  FFDF         	movff	_dtoa$2265,indf2
  2874  002D7A                     l4983:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2877  002D7A  C020  F015         	movff	dtoa@fp,pad@fp
  2878  002D7E  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2879  002D82  0EDE               	movlw	low _dbuf
  2880  002D84  2442               	addwf	dtoa@i^0,w,c
  2881  002D86  6E17               	movwf	pad@buf^0,c
  2882  002D88  0E01               	movlw	high _dbuf
  2883  002D8A  2043               	addwfc	(dtoa@i+1)^0,w,c
  2884  002D8C  6E18               	movwf	(pad@buf+1)^0,c
  2885  002D8E  C036  F019         	movff	dtoa@w,pad@p
  2886  002D92  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2887  002D96  EC5E  F01B         	call	_pad	;wreg free
  2888  002D9A  C015  F020         	movff	?_pad,?_dtoa
  2889  002D9E  C016  F021         	movff	?_pad+1,?_dtoa+1
  2890  002DA2  0012               	return		;funcret
  2891  002DA4                     __end_of_dtoa:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _pad *****************
  2895 ;; Defined at:
  2896 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2899 ;;		 -> sprintf@f(6), 
  2900 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2901 ;;		 -> dbuf(32), 
  2902 ;;  p               2   24[COMRAM] int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  w               2   29[COMRAM] int 
  2905 ;;  i               2   27[COMRAM] int 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  2   20[COMRAM] int 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2915 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;Total ram usage:       11 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 5
  2922 ;; This function calls:
  2923 ;;		_fputc
  2924 ;;		_fputs
  2925 ;;		_strlen
  2926 ;; This function is called by:
  2927 ;;		_dtoa
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text5
  2932  0036BC                     __ptext5:
  2933                           	callstack 0
  2934  0036BC                     _pad:
  2935                           	callstack 21
  2936  0036BC                     
  2937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2938  0036BC  0100               	movlb	0	; () banked
  2939  0036BE  A1F4               	btfss	_flags& (0+255),0,b
  2940  0036C0  EF64  F01B         	goto	u4741
  2941  0036C4  EF66  F01B         	goto	u4740
  2942  0036C8                     u4741:
  2943  0036C8  EF70  F01B         	goto	l4887
  2944  0036CC                     u4740:
  2945  0036CC                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2948  0036CC  C017  F00E         	movff	pad@buf,fputs@s
  2949  0036D0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2950  0036D4  C015  F010         	movff	pad@fp,fputs@fp
  2951  0036D8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2952  0036DC  EC23  F01E         	call	_fputs	;wreg free
  2953  0036E0                     l4887:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2956  0036E0  BE1A               	btfsc	(pad@p+1)^0,7,c
  2957  0036E2  EF75  F01B         	goto	u4751
  2958  0036E6  EF77  F01B         	goto	u4750
  2959  0036EA                     u4751:
  2960  0036EA  EF7D  F01B         	goto	l4891
  2961  0036EE                     u4750:
  2962  0036EE  C019  F01E         	movff	pad@p,pad@w
  2963  0036F2  C01A  F01F         	movff	pad@p+1,pad@w+1
  2964  0036F6  EF81  F01B         	goto	l1154
  2965  0036FA                     l4891:
  2966  0036FA  0E00               	movlw	0
  2967  0036FC  6E1F               	movwf	(pad@w+1)^0,c
  2968  0036FE  0E00               	movlw	0
  2969  003700  6E1E               	movwf	pad@w^0,c
  2970  003702                     l1154:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2973  003702  0E00               	movlw	0
  2974  003704  6E1D               	movwf	(pad@i+1)^0,c
  2975  003706  0E00               	movlw	0
  2976  003708  6E1C               	movwf	pad@i^0,c
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2979  00370A  EF93  F01B         	goto	l4897
  2980  00370E                     l4893:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2983  00370E  0E00               	movlw	0
  2984  003710  6E06               	movwf	(fputc@c+1)^0,c
  2985  003712  0E20               	movlw	32
  2986  003714  6E05               	movwf	fputc@c^0,c
  2987  003716  C015  F007         	movff	pad@fp,fputc@fp
  2988  00371A  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2989  00371E  ECF9  F01A         	call	_fputc	;wreg free
  2990  003722                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2992  003722  4A1C               	infsnz	pad@i^0,f,c
  2993  003724  2A1D               	incf	(pad@i+1)^0,f,c
  2994  003726                     l4897:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2997  003726  501E               	movf	pad@w^0,w,c
  2998  003728  5C1C               	subwf	pad@i^0,w,c
  2999  00372A  501D               	movf	(pad@i+1)^0,w,c
  3000  00372C  0A80               	xorlw	128
  3001  00372E  6E1B               	movwf	??_pad^0,c
  3002  003730  501F               	movf	(pad@w+1)^0,w,c
  3003  003732  0A80               	xorlw	128
  3004  003734  581B               	subwfb	??_pad^0,w,c
  3005  003736  A0D8               	btfss	status,0,c
  3006  003738  EFA0  F01B         	goto	u4761
  3007  00373C  EFA2  F01B         	goto	u4760
  3008  003740                     u4761:
  3009  003740  EF87  F01B         	goto	l4893
  3010  003744                     u4760:
  3011  003744                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3013  003744  0100               	movlb	0	; () banked
  3014  003746  B1F4               	btfsc	_flags& (0+255),0,b
  3015  003748  EFA8  F01B         	goto	u4771
  3016  00374C  EFAA  F01B         	goto	u4770
  3017  003750                     u4771:
  3018  003750  EFB4  F01B         	goto	l4901
  3019  003754                     u4770:
  3020  003754                     
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3023  003754  C017  F00E         	movff	pad@buf,fputs@s
  3024  003758  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3025  00375C  C015  F010         	movff	pad@fp,fputs@fp
  3026  003760  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3027  003764  EC23  F01E         	call	_fputs	;wreg free
  3028  003768                     l4901:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3031  003768  C017  F005         	movff	pad@buf,strlen@s
  3032  00376C  C018  F006         	movff	pad@buf+1,strlen@s+1
  3033  003770  ECC3  F01E         	call	_strlen	;wreg free
  3034  003774  501E               	movf	pad@w^0,w,c
  3035  003776  2405               	addwf	?_strlen^0,w,c
  3036  003778  6E15               	movwf	?_pad^0,c
  3037  00377A  501F               	movf	(pad@w+1)^0,w,c
  3038  00377C  2006               	addwfc	(?_strlen+1)^0,w,c
  3039  00377E  6E16               	movwf	(?_pad+1)^0,c
  3040  003780  0012               	return		;funcret
  3041  003782                     __end_of_pad:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _strlen *****************
  3045 ;; Defined at:
  3046 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3049 ;;		 -> dbuf(32), 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3052 ;;		 -> dbuf(32), 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  2    4[COMRAM] unsigned int 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;Total ram usage:        4 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_pad
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text6
  3077  003D86                     __ptext6:
  3078                           	callstack 0
  3079  003D86                     _strlen:
  3080                           	callstack 23
  3081  003D86  C005  F007         	movff	strlen@s,strlen@a
  3082  003D8A  C006  F008         	movff	strlen@s+1,strlen@a+1
  3083  003D8E  EFCB  F01E         	goto	l4791
  3084  003D92                     l4789:
  3085  003D92  4A05               	infsnz	strlen@s^0,f,c
  3086  003D94  2A06               	incf	(strlen@s+1)^0,f,c
  3087  003D96                     l4791:
  3088  003D96  C005  FFD9         	movff	strlen@s,fsr2l
  3089  003D9A  C006  FFDA         	movff	strlen@s+1,fsr2h
  3090  003D9E  50DF               	movf	indf2,w,c
  3091  003DA0  A4D8               	btfss	status,2,c
  3092  003DA2  EFD5  F01E         	goto	u4601
  3093  003DA6  EFD7  F01E         	goto	u4600
  3094  003DAA                     u4601:
  3095  003DAA  EFC9  F01E         	goto	l4789
  3096  003DAE                     u4600:
  3097  003DAE  5007               	movf	strlen@a^0,w,c
  3098  003DB0  5C05               	subwf	strlen@s^0,w,c
  3099  003DB2  6E05               	movwf	?_strlen^0,c
  3100  003DB4  5008               	movf	(strlen@a+1)^0,w,c
  3101  003DB6  5806               	subwfb	(strlen@s+1)^0,w,c
  3102  003DB8  6E06               	movwf	(?_strlen+1)^0,c
  3103  003DBA  0012               	return		;funcret
  3104  003DBC                     __end_of_strlen:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _fputs *****************
  3108 ;; Defined at:
  3109 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3112 ;;		 -> dbuf(32), 
  3113 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3114 ;;		 -> sprintf@f(6), 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  i               2   18[COMRAM] int 
  3117 ;;  c               1   17[COMRAM] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2   13[COMRAM] int 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3130 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3131 ;;Total ram usage:        7 bytes
  3132 ;; Hardware stack levels used: 1
  3133 ;; Hardware stack levels required when called: 4
  3134 ;; This function calls:
  3135 ;;		_fputc
  3136 ;; This function is called by:
  3137 ;;		_pad
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text7
  3142  003C46                     __ptext7:
  3143                           	callstack 0
  3144  003C46                     _fputs:
  3145                           	callstack 21
  3146  003C46  0E00               	movlw	0
  3147  003C48  6E14               	movwf	(fputs@i+1)^0,c
  3148  003C4A  0E00               	movlw	0
  3149  003C4C  6E13               	movwf	fputs@i^0,c
  3150  003C4E  EF34  F01E         	goto	l4785
  3151  003C52                     l4781:
  3152  003C52  C012  F005         	movff	fputs@c,fputc@c
  3153  003C56  6A06               	clrf	(fputc@c+1)^0,c
  3154  003C58  C010  F007         	movff	fputs@fp,fputc@fp
  3155  003C5C  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3156  003C60  ECF9  F01A         	call	_fputc	;wreg free
  3157  003C64  4A13               	infsnz	fputs@i^0,f,c
  3158  003C66  2A14               	incf	(fputs@i+1)^0,f,c
  3159  003C68                     l4785:
  3160  003C68  5013               	movf	fputs@i^0,w,c
  3161  003C6A  240E               	addwf	fputs@s^0,w,c
  3162  003C6C  6ED9               	movwf	fsr2l,c
  3163  003C6E  5014               	movf	(fputs@i+1)^0,w,c
  3164  003C70  200F               	addwfc	(fputs@s+1)^0,w,c
  3165  003C72  6EDA               	movwf	fsr2h,c
  3166  003C74  50DF               	movf	indf2,w,c
  3167  003C76  6E12               	movwf	fputs@c^0,c
  3168  003C78  5012               	movf	fputs@c^0,w,c
  3169  003C7A  A4D8               	btfss	status,2,c
  3170  003C7C  EF42  F01E         	goto	u4591
  3171  003C80  EF44  F01E         	goto	u4590
  3172  003C84                     u4591:
  3173  003C84  EF29  F01E         	goto	l4781
  3174  003C88                     u4590:
  3175  003C88  0012               	return		;funcret
  3176  003C8A                     __end_of_fputs:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _fputc *****************
  3180 ;; Defined at:
  3181 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  c               2    4[COMRAM] int 
  3184 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3185 ;;		 -> sprintf@f(6), 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2    4[COMRAM] int 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;Total ram usage:        9 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 3
  3204 ;; This function calls:
  3205 ;;		_putch
  3206 ;; This function is called by:
  3207 ;;		_pad
  3208 ;;		_vfpfcnvrt
  3209 ;;		_fputs
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text8
  3214  0035F2                     __ptext8:
  3215                           	callstack 0
  3216  0035F2                     _fputc:
  3217                           	callstack 24
  3218  0035F2  5007               	movf	fputc@fp^0,w,c
  3219  0035F4  1008               	iorwf	(fputc@fp+1)^0,w,c
  3220  0035F6  B4D8               	btfsc	status,2,c
  3221  0035F8  EF00  F01B         	goto	u4551
  3222  0035FC  EF02  F01B         	goto	u4550
  3223  003600                     u4551:
  3224  003600  EF0B  F01B         	goto	l4769
  3225  003604                     u4550:
  3226  003604  5007               	movf	fputc@fp^0,w,c
  3227  003606  1008               	iorwf	(fputc@fp+1)^0,w,c
  3228  003608  A4D8               	btfss	status,2,c
  3229  00360A  EF09  F01B         	goto	u4561
  3230  00360E  EF0B  F01B         	goto	u4560
  3231  003612                     u4561:
  3232  003612  EF10  F01B         	goto	l4771
  3233  003616                     u4560:
  3234  003616                     l4769:
  3235  003616  5005               	movf	fputc@c^0,w,c
  3236  003618  ECEC  F01F         	call	_putch
  3237  00361C  EF5D  F01B         	goto	l1285
  3238  003620                     l4771:
  3239  003620  EE20 F004          	lfsr	2,4
  3240  003624  5007               	movf	fputc@fp^0,w,c
  3241  003626  26D9               	addwf	fsr2l,f,c
  3242  003628  5008               	movf	(fputc@fp+1)^0,w,c
  3243  00362A  22DA               	addwfc	fsr2h,f,c
  3244  00362C  50DE               	movf	postinc2,w,c
  3245  00362E  10DE               	iorwf	postinc2,w,c
  3246  003630  B4D8               	btfsc	status,2,c
  3247  003632  EF1D  F01B         	goto	u4571
  3248  003636  EF1F  F01B         	goto	u4570
  3249  00363A                     u4571:
  3250  00363A  EF3A  F01B         	goto	l4775
  3251  00363E                     u4570:
  3252  00363E  EE20 F004          	lfsr	2,4
  3253  003642  5007               	movf	fputc@fp^0,w,c
  3254  003644  26D9               	addwf	fsr2l,f,c
  3255  003646  5008               	movf	(fputc@fp+1)^0,w,c
  3256  003648  22DA               	addwfc	fsr2h,f,c
  3257  00364A  EE10 F002          	lfsr	1,2
  3258  00364E  5007               	movf	fputc@fp^0,w,c
  3259  003650  26E1               	addwf	fsr1l,f,c
  3260  003652  5008               	movf	(fputc@fp+1)^0,w,c
  3261  003654  22E2               	addwfc	fsr1h,f,c
  3262  003656  50DE               	movf	postinc2,w,c
  3263  003658  5CE6               	subwf	postinc1,w,c
  3264  00365A  50E6               	movf	postinc1,w,c
  3265  00365C  0A80               	xorlw	128
  3266  00365E  6E0D               	movwf	(??_fputc+4)^0,c
  3267  003660  50DE               	movf	postinc2,w,c
  3268  003662  0A80               	xorlw	128
  3269  003664  580D               	subwfb	(??_fputc+4)^0,w,c
  3270  003666  B0D8               	btfsc	status,0,c
  3271  003668  EF38  F01B         	goto	u4581
  3272  00366C  EF3A  F01B         	goto	u4580
  3273  003670                     u4581:
  3274  003670  EF5D  F01B         	goto	l1285
  3275  003674                     u4580:
  3276  003674                     l4775:
  3277  003674  EE20 F002          	lfsr	2,2
  3278  003678  5007               	movf	fputc@fp^0,w,c
  3279  00367A  26D9               	addwf	fsr2l,f,c
  3280  00367C  5008               	movf	(fputc@fp+1)^0,w,c
  3281  00367E  22DA               	addwfc	fsr2h,f,c
  3282  003680  CFDE F009          	movff	postinc2,??_fputc
  3283  003684  CFDD F00A          	movff	postdec2,??_fputc+1
  3284  003688  C007  FFD9         	movff	fputc@fp,fsr2l
  3285  00368C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3286  003690  CFDE F00B          	movff	postinc2,??_fputc+2
  3287  003694  CFDD F00C          	movff	postdec2,??_fputc+3
  3288  003698  5009               	movf	??_fputc^0,w,c
  3289  00369A  240B               	addwf	(??_fputc+2)^0,w,c
  3290  00369C  6ED9               	movwf	fsr2l,c
  3291  00369E  500A               	movf	(??_fputc+1)^0,w,c
  3292  0036A0  200C               	addwfc	(??_fputc+3)^0,w,c
  3293  0036A2  6EDA               	movwf	fsr2h,c
  3294  0036A4  C005  FFDF         	movff	fputc@c,indf2
  3295  0036A8  EE20 F002          	lfsr	2,2
  3296  0036AC  5007               	movf	fputc@fp^0,w,c
  3297  0036AE  26D9               	addwf	fsr2l,f,c
  3298  0036B0  5008               	movf	(fputc@fp+1)^0,w,c
  3299  0036B2  22DA               	addwfc	fsr2h,f,c
  3300  0036B4  2ADE               	incf	postinc2,f,c
  3301  0036B6  0E00               	movlw	0
  3302  0036B8  22DD               	addwfc	postdec2,f,c
  3303  0036BA                     l1285:
  3304  0036BA  0012               	return		;funcret
  3305  0036BC                     __end_of_fputc:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _putch *****************
  3309 ;; Defined at:
  3310 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  c               1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  c               1    0[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 2
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_fputc
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text9
  3339  003FD8                     __ptext9:
  3340                           	callstack 0
  3341  003FD8                     _putch:
  3342                           	callstack 24
  3343  003FD8  0012               	return		;funcret
  3344  003FDA                     __end_of_putch:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function _abs *****************
  3348 ;; Defined at:
  3349 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  a               2   22[COMRAM] int 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  2   22[COMRAM] int 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;Total ram usage:        4 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 2
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_dtoa
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text10
  3378  003D0E                     __ptext10:
  3379                           	callstack 0
  3380  003D0E                     _abs:
  3381                           	callstack 24
  3382  003D0E  BE18               	btfsc	(abs@a+1)^0,7,c
  3383  003D10  EF94  F01E         	goto	u4780
  3384  003D14  5018               	movf	(abs@a+1)^0,w,c
  3385  003D16  E106               	bnz	u4781
  3386  003D18  0417               	decf	abs@a^0,w,c
  3387  003D1A  B0D8               	btfsc	status,0,c
  3388  003D1C  EF92  F01E         	goto	u4781
  3389  003D20  EF94  F01E         	goto	u4780
  3390  003D24                     u4781:
  3391  003D24  EFA2  F01E         	goto	l1225
  3392  003D28                     u4780:
  3393  003D28  C017  F019         	movff	abs@a,??_abs
  3394  003D2C  C018  F01A         	movff	abs@a+1,??_abs+1
  3395  003D30  1E19               	comf	??_abs^0,f,c
  3396  003D32  1E1A               	comf	(??_abs+1)^0,f,c
  3397  003D34  4A19               	infsnz	??_abs^0,f,c
  3398  003D36  2A1A               	incf	(??_abs+1)^0,f,c
  3399  003D38  C019  F017         	movff	??_abs,?_abs
  3400  003D3C  C01A  F018         	movff	??_abs+1,?_abs+1
  3401  003D40  EFA6  F01E         	goto	l1228
  3402  003D44                     l1225:
  3403  003D44  C017  F017         	movff	abs@a,?_abs
  3404  003D48  C018  F018         	movff	abs@a+1,?_abs+1
  3405  003D4C                     l1228:
  3406  003D4C  0012               	return		;funcret
  3407  003D4E                     __end_of_abs:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function ___aomod *****************
  3411 ;; Defined at:
  3412 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  dividend        8    4[COMRAM] long long 
  3415 ;;  divisor         8   12[COMRAM] long long 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  sign            1   21[COMRAM] unsigned char 
  3418 ;;  counter         1   20[COMRAM] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  8    4[COMRAM] long long 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3428 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;Total ram usage:       18 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 2
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_dtoa
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text11
  3443  003284                     __ptext11:
  3444                           	callstack 0
  3445  003284                     ___aomod:
  3446                           	callstack 24
  3447  003284  0E00               	movlw	0
  3448  003286  6E16               	movwf	___aomod@sign^0,c
  3449  003288  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3450  00328A  EF4B  F019         	goto	u4680
  3451  00328E  EF49  F019         	goto	u4681
  3452  003292                     u4681:
  3453  003292  EF5D  F019         	goto	l4855
  3454  003296                     u4680:
  3455  003296  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3456  003298  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3457  00329A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3458  00329C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3459  00329E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3460  0032A0  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3461  0032A2  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3462  0032A4  6C05               	negf	___aomod@dividend^0,c
  3463  0032A6  0E00               	movlw	0
  3464  0032A8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3465  0032AA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3466  0032AC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3467  0032AE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3468  0032B0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3469  0032B2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3470  0032B4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3471  0032B6  0E01               	movlw	1
  3472  0032B8  6E16               	movwf	___aomod@sign^0,c
  3473  0032BA                     l4855:
  3474  0032BA  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3475  0032BC  EF64  F019         	goto	u4690
  3476  0032C0  EF62  F019         	goto	u4691
  3477  0032C4                     u4691:
  3478  0032C4  EF74  F019         	goto	l4859
  3479  0032C8                     u4690:
  3480  0032C8  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3481  0032CA  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3482  0032CC  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3483  0032CE  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3484  0032D0  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3485  0032D2  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3486  0032D4  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3487  0032D6  6C0D               	negf	___aomod@divisor^0,c
  3488  0032D8  0E00               	movlw	0
  3489  0032DA  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3490  0032DC  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3491  0032DE  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3492  0032E0  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3493  0032E2  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3494  0032E4  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3495  0032E6  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3496  0032E8                     l4859:
  3497  0032E8  500D               	movf	___aomod@divisor^0,w,c
  3498  0032EA  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3499  0032EC  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3500  0032EE  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3501  0032F0  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3502  0032F2  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3503  0032F4  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3504  0032F6  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3505  0032F8  B4D8               	btfsc	status,2,c
  3506  0032FA  EF81  F019         	goto	u4701
  3507  0032FE  EF83  F019         	goto	u4700
  3508  003302                     u4701:
  3509  003302  EFCB  F019         	goto	l4875
  3510  003306                     u4700:
  3511  003306  0E01               	movlw	1
  3512  003308  6E15               	movwf	___aomod@counter^0,c
  3513  00330A  EF91  F019         	goto	l4865
  3514  00330E                     l4863:
  3515  00330E  90D8               	bcf	status,0,c
  3516  003310  360D               	rlcf	___aomod@divisor^0,f,c
  3517  003312  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3518  003314  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3519  003316  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3520  003318  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3521  00331A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3522  00331C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3523  00331E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3524  003320  2A15               	incf	___aomod@counter^0,f,c
  3525  003322                     l4865:
  3526  003322  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3527  003324  EF96  F019         	goto	u4711
  3528  003328  EF98  F019         	goto	u4710
  3529  00332C                     u4711:
  3530  00332C  EF87  F019         	goto	l4863
  3531  003330                     u4710:
  3532  003330                     l4867:
  3533  003330  500D               	movf	___aomod@divisor^0,w,c
  3534  003332  5C05               	subwf	___aomod@dividend^0,w,c
  3535  003334  500E               	movf	(___aomod@divisor+1)^0,w,c
  3536  003336  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3537  003338  500F               	movf	(___aomod@divisor+2)^0,w,c
  3538  00333A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3539  00333C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3540  00333E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3541  003340  5011               	movf	(___aomod@divisor+4)^0,w,c
  3542  003342  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3543  003344  5012               	movf	(___aomod@divisor+5)^0,w,c
  3544  003346  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3545  003348  5013               	movf	(___aomod@divisor+6)^0,w,c
  3546  00334A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3547  00334C  5014               	movf	(___aomod@divisor+7)^0,w,c
  3548  00334E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3549  003350  A0D8               	btfss	status,0,c
  3550  003352  EFAD  F019         	goto	u4721
  3551  003356  EFAF  F019         	goto	u4720
  3552  00335A                     u4721:
  3553  00335A  EFBF  F019         	goto	l4871
  3554  00335E                     u4720:
  3555  00335E  500D               	movf	___aomod@divisor^0,w,c
  3556  003360  5E05               	subwf	___aomod@dividend^0,f,c
  3557  003362  500E               	movf	(___aomod@divisor+1)^0,w,c
  3558  003364  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3559  003366  500F               	movf	(___aomod@divisor+2)^0,w,c
  3560  003368  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3561  00336A  5010               	movf	(___aomod@divisor+3)^0,w,c
  3562  00336C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3563  00336E  5011               	movf	(___aomod@divisor+4)^0,w,c
  3564  003370  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3565  003372  5012               	movf	(___aomod@divisor+5)^0,w,c
  3566  003374  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3567  003376  5013               	movf	(___aomod@divisor+6)^0,w,c
  3568  003378  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3569  00337A  5014               	movf	(___aomod@divisor+7)^0,w,c
  3570  00337C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3571  00337E                     l4871:
  3572  00337E  90D8               	bcf	status,0,c
  3573  003380  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3574  003382  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3575  003384  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3576  003386  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3577  003388  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3578  00338A  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3579  00338C  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3580  00338E  320D               	rrcf	___aomod@divisor^0,f,c
  3581  003390  2E15               	decfsz	___aomod@counter^0,f,c
  3582  003392  EF98  F019         	goto	l4867
  3583  003396                     l4875:
  3584  003396  5016               	movf	___aomod@sign^0,w,c
  3585  003398  B4D8               	btfsc	status,2,c
  3586  00339A  EFD1  F019         	goto	u4731
  3587  00339E  EFD3  F019         	goto	u4730
  3588  0033A2                     u4731:
  3589  0033A2  EFE3  F019         	goto	l4879
  3590  0033A6                     u4730:
  3591  0033A6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3592  0033A8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3593  0033AA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3594  0033AC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3595  0033AE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3596  0033B0  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3597  0033B2  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3598  0033B4  6C05               	negf	___aomod@dividend^0,c
  3599  0033B6  0E00               	movlw	0
  3600  0033B8  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3601  0033BA  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3602  0033BC  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3603  0033BE  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3604  0033C0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3605  0033C2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3606  0033C4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3607  0033C6                     l4879:
  3608  0033C6  C005  F005         	movff	___aomod@dividend,?___aomod
  3609  0033CA  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3610  0033CE  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3611  0033D2  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3612  0033D6  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3613  0033DA  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3614  0033DE  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3615  0033E2  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3616  0033E6  0012               	return		;funcret
  3617  0033E8                     __end_of___aomod:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function ___aodiv *****************
  3621 ;; Defined at:
  3622 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  dividend        8    4[COMRAM] long long 
  3625 ;;  divisor         8   12[COMRAM] long long 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  quotient        8   22[COMRAM] long long 
  3628 ;;  sign            1   21[COMRAM] unsigned char 
  3629 ;;  counter         1   20[COMRAM] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  8    4[COMRAM] long long 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3639 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;Total ram usage:       26 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 2
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_dtoa
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text12
  3654  0030FC                     __ptext12:
  3655                           	callstack 0
  3656  0030FC                     ___aodiv:
  3657                           	callstack 24
  3658  0030FC  0E00               	movlw	0
  3659  0030FE  6E16               	movwf	___aodiv@sign^0,c
  3660  003100  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3661  003102  EF87  F018         	goto	u4610
  3662  003106  EF85  F018         	goto	u4611
  3663  00310A                     u4611:
  3664  00310A  EF99  F018         	goto	l4811
  3665  00310E                     u4610:
  3666  00310E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3667  003110  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3668  003112  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3669  003114  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3670  003116  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3671  003118  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3672  00311A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3673  00311C  6C0D               	negf	___aodiv@divisor^0,c
  3674  00311E  0E00               	movlw	0
  3675  003120  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3676  003122  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3677  003124  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3678  003126  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3679  003128  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3680  00312A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3681  00312C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3682  00312E  0E01               	movlw	1
  3683  003130  6E16               	movwf	___aodiv@sign^0,c
  3684  003132                     l4811:
  3685  003132  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3686  003134  EFA0  F018         	goto	u4620
  3687  003138  EF9E  F018         	goto	u4621
  3688  00313C                     u4621:
  3689  00313C  EFB2  F018         	goto	l4817
  3690  003140                     u4620:
  3691  003140  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3692  003142  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3693  003144  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3694  003146  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3695  003148  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3696  00314A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3697  00314C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3698  00314E  6C05               	negf	___aodiv@dividend^0,c
  3699  003150  0E00               	movlw	0
  3700  003152  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3701  003154  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3702  003156  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3703  003158  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3704  00315A  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3705  00315C  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3706  00315E  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3707  003160  0E01               	movlw	1
  3708  003162  1A16               	xorwf	___aodiv@sign^0,f,c
  3709  003164                     l4817:
  3710  003164  EE20  F017         	lfsr	2,___aodiv@quotient
  3711  003168  0E07               	movlw	7
  3712  00316A                     u4631:
  3713  00316A  6ADE               	clrf	postinc2,c
  3714  00316C  06E8               	decf	wreg,f,c
  3715  00316E  E2FD               	bc	u4631
  3716  003170  500D               	movf	___aodiv@divisor^0,w,c
  3717  003172  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3718  003174  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3719  003176  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3720  003178  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3721  00317A  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3722  00317C  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3723  00317E  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3724  003180  B4D8               	btfsc	status,2,c
  3725  003182  EFC5  F018         	goto	u4641
  3726  003186  EFC7  F018         	goto	u4640
  3727  00318A                     u4641:
  3728  00318A  EF19  F019         	goto	l4839
  3729  00318E                     u4640:
  3730  00318E  0E01               	movlw	1
  3731  003190  6E15               	movwf	___aodiv@counter^0,c
  3732  003192  EFD5  F018         	goto	l4825
  3733  003196                     l4823:
  3734  003196  90D8               	bcf	status,0,c
  3735  003198  360D               	rlcf	___aodiv@divisor^0,f,c
  3736  00319A  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3737  00319C  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3738  00319E  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3739  0031A0  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3740  0031A2  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3741  0031A4  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3742  0031A6  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3743  0031A8  2A15               	incf	___aodiv@counter^0,f,c
  3744  0031AA                     l4825:
  3745  0031AA  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3746  0031AC  EFDA  F018         	goto	u4651
  3747  0031B0  EFDC  F018         	goto	u4650
  3748  0031B4                     u4651:
  3749  0031B4  EFCB  F018         	goto	l4823
  3750  0031B8                     u4650:
  3751  0031B8                     l4827:
  3752  0031B8  90D8               	bcf	status,0,c
  3753  0031BA  3617               	rlcf	___aodiv@quotient^0,f,c
  3754  0031BC  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3755  0031BE  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3756  0031C0  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3757  0031C2  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3758  0031C4  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3759  0031C6  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3760  0031C8  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3761  0031CA  500D               	movf	___aodiv@divisor^0,w,c
  3762  0031CC  5C05               	subwf	___aodiv@dividend^0,w,c
  3763  0031CE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3764  0031D0  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3765  0031D2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3766  0031D4  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3767  0031D6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3768  0031D8  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3769  0031DA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3770  0031DC  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3771  0031DE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3772  0031E0  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3773  0031E2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3774  0031E4  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3775  0031E6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3776  0031E8  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3777  0031EA  A0D8               	btfss	status,0,c
  3778  0031EC  EFFA  F018         	goto	u4661
  3779  0031F0  EFFC  F018         	goto	u4660
  3780  0031F4                     u4661:
  3781  0031F4  EF0D  F019         	goto	l4835
  3782  0031F8                     u4660:
  3783  0031F8  500D               	movf	___aodiv@divisor^0,w,c
  3784  0031FA  5E05               	subwf	___aodiv@dividend^0,f,c
  3785  0031FC  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3786  0031FE  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3787  003200  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3788  003202  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3789  003204  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3790  003206  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3791  003208  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3792  00320A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3793  00320C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3794  00320E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3795  003210  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3796  003212  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3797  003214  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3798  003216  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3799  003218  8017               	bsf	___aodiv@quotient^0,0,c
  3800  00321A                     l4835:
  3801  00321A  90D8               	bcf	status,0,c
  3802  00321C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3803  00321E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3804  003220  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3805  003222  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3806  003224  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3807  003226  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3808  003228  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3809  00322A  320D               	rrcf	___aodiv@divisor^0,f,c
  3810  00322C  2E15               	decfsz	___aodiv@counter^0,f,c
  3811  00322E  EFDC  F018         	goto	l4827
  3812  003232                     l4839:
  3813  003232  5016               	movf	___aodiv@sign^0,w,c
  3814  003234  B4D8               	btfsc	status,2,c
  3815  003236  EF1F  F019         	goto	u4671
  3816  00323A  EF21  F019         	goto	u4670
  3817  00323E                     u4671:
  3818  00323E  EF31  F019         	goto	l4843
  3819  003242                     u4670:
  3820  003242  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3821  003244  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3822  003246  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3823  003248  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3824  00324A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3825  00324C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3826  00324E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3827  003250  6C17               	negf	___aodiv@quotient^0,c
  3828  003252  0E00               	movlw	0
  3829  003254  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3830  003256  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3831  003258  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3832  00325A  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3833  00325C  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3834  00325E  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3835  003260  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3836  003262                     l4843:
  3837  003262  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3838  003266  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3839  00326A  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3840  00326E  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3841  003272  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3842  003276  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3843  00327A  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3844  00327E  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3845  003282  0012               	return		;funcret
  3846  003284                     __end_of___aodiv:
  3847                           	callstack 0
  3848                           
  3849 ;; *************** function _atoi *****************
  3850 ;; Defined at:
  3851 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3854 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  n               2   24[COMRAM] int 
  3857 ;;  neg             2   17[COMRAM] int 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2   11[COMRAM] int 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;Total ram usage:       15 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 3
  3874 ;; This function calls:
  3875 ;;		___wmul
  3876 ;;		_isdigit
  3877 ;;		_isspace
  3878 ;; This function is called by:
  3879 ;;		_vfpfcnvrt
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text13
  3884  002F58                     __ptext13:
  3885                           	callstack 0
  3886  002F58                     _atoi:
  3887                           	callstack 24
  3888  002F58  0E00               	movlw	0
  3889  002F5A  6E1A               	movwf	(atoi@n+1)^0,c
  3890  002F5C  0E00               	movlw	0
  3891  002F5E  6E19               	movwf	atoi@n^0,c
  3892  002F60  0E00               	movlw	0
  3893  002F62  6E13               	movwf	(atoi@neg+1)^0,c
  3894  002F64  0E00               	movlw	0
  3895  002F66  6E12               	movwf	atoi@neg^0,c
  3896  002F68  EFB8  F017         	goto	l4991
  3897  002F6C                     l4989:
  3898  002F6C  4A0C               	infsnz	atoi@s^0,f,c
  3899  002F6E  2A0D               	incf	(atoi@s+1)^0,f,c
  3900  002F70                     l4991:
  3901  002F70  0E01               	movlw	1
  3902  002F72  6E18               	movwf	_atoi$2301^0,c
  3903  002F74  C00C  FFF6         	movff	atoi@s,tblptrl
  3904  002F78  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3905  002F7C                     	if	0	;tblptru may be non-zero
  3906  002F7C                     	endif
  3907  002F7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3908  002F7C  0E00               	movlw	low (__mediumconst shr (0+16))
  3909  002F7E  6EF8               	movwf	tblptru,c
  3910  002F80                     	endif
  3911  002F80  0008               	tblrd		*
  3912  002F82  50F5               	movf	tablat,w,c
  3913  002F84  0A20               	xorlw	32
  3914  002F86  B4D8               	btfsc	status,2,c
  3915  002F88  EFC8  F017         	goto	u4981
  3916  002F8C  EFCA  F017         	goto	u4980
  3917  002F90                     u4981:
  3918  002F90  EFE9  F017         	goto	l4999
  3919  002F94                     u4980:
  3920  002F94  0EF7               	movlw	247
  3921  002F96  6E0E               	movwf	??_atoi^0,c
  3922  002F98  0EFF               	movlw	255
  3923  002F9A  6E0F               	movwf	(??_atoi+1)^0,c
  3924  002F9C  C00C  FFF6         	movff	atoi@s,tblptrl
  3925  002FA0  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3926  002FA4                     	if	0	;tblptru may be non-zero
  3927  002FA4                     	endif
  3928  002FA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3929  002FA4  0E00               	movlw	low (__mediumconst shr (0+16))
  3930  002FA6  6EF8               	movwf	tblptru,c
  3931  002FA8                     	endif
  3932  002FA8  0008               	tblrd		*
  3933  002FAA  50F5               	movf	tablat,w,c
  3934  002FAC  6E10               	movwf	(??_atoi+2)^0,c
  3935  002FAE  6A11               	clrf	(??_atoi+3)^0,c
  3936  002FB0  500E               	movf	??_atoi^0,w,c
  3937  002FB2  2610               	addwf	(??_atoi+2)^0,f,c
  3938  002FB4  500F               	movf	(??_atoi+1)^0,w,c
  3939  002FB6  2211               	addwfc	(??_atoi+3)^0,f,c
  3940  002FB8  5011               	movf	(??_atoi+3)^0,w,c
  3941  002FBA  E109               	bnz	u4990
  3942  002FBC  0E05               	movlw	5
  3943  002FBE  5C10               	subwf	(??_atoi+2)^0,w,c
  3944  002FC0  A0D8               	btfss	status,0,c
  3945  002FC2  EFE5  F017         	goto	u4991
  3946  002FC6  EFE7  F017         	goto	u4990
  3947  002FCA                     u4991:
  3948  002FCA  EFE9  F017         	goto	l4999
  3949  002FCE                     u4990:
  3950  002FCE  0E00               	movlw	0
  3951  002FD0  6E18               	movwf	_atoi$2301^0,c
  3952  002FD2                     l4999:
  3953  002FD2  C018  F014         	movff	_atoi$2301,_atoi$2300
  3954  002FD6  6A15               	clrf	(_atoi$2300+1)^0,c
  3955  002FD8  5014               	movf	_atoi$2300^0,w,c
  3956  002FDA  1015               	iorwf	(_atoi$2300+1)^0,w,c
  3957  002FDC  A4D8               	btfss	status,2,c
  3958  002FDE  EFF3  F017         	goto	u5001
  3959  002FE2  EFF5  F017         	goto	u5000
  3960  002FE6                     u5001:
  3961  002FE6  EFB6  F017         	goto	l4989
  3962  002FEA                     u5000:
  3963  002FEA  EFFF  F017         	goto	l5009
  3964  002FEE                     l5005:
  3965  002FEE  0E00               	movlw	0
  3966  002FF0  6E13               	movwf	(atoi@neg+1)^0,c
  3967  002FF2  0E01               	movlw	1
  3968  002FF4  6E12               	movwf	atoi@neg^0,c
  3969  002FF6                     l5007:
  3970  002FF6  4A0C               	infsnz	atoi@s^0,f,c
  3971  002FF8  2A0D               	incf	(atoi@s+1)^0,f,c
  3972  002FFA  EF38  F018         	goto	l5015
  3973  002FFE                     l5009:
  3974  002FFE  C00C  FFF6         	movff	atoi@s,tblptrl
  3975  003002  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3976  003006                     	if	0	;tblptru may be non-zero
  3977  003006                     	endif
  3978  003006                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3979  003006  0E00               	movlw	low (__mediumconst shr (0+16))
  3980  003008  6EF8               	movwf	tblptru,c
  3981  00300A                     	endif
  3982  00300A  0008               	tblrd		*
  3983  00300C  50F5               	movf	tablat,w,c
  3984  00300E  6E0E               	movwf	??_atoi^0,c
  3985  003010  6A0F               	clrf	(??_atoi+1)^0,c
  3986                           
  3987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3988                           ; Switch size 1, requested type "simple"
  3989                           ; Number of cases is 1, Range of values is 0 to 0
  3990                           ; switch strategies available:
  3991                           ; Name         Instructions Cycles
  3992                           ; simple_byte            4     3 (average)
  3993                           ;	Chosen strategy is simple_byte
  3994  003012  500F               	movf	(??_atoi+1)^0,w,c
  3995  003014  0A00               	xorlw	0	; case 0
  3996  003016  B4D8               	btfsc	status,2,c
  3997  003018  EF10  F018         	goto	l5585
  3998  00301C  EF38  F018         	goto	l5015
  3999  003020                     l5585:
  4000                           
  4001                           ; Switch size 1, requested type "simple"
  4002                           ; Number of cases is 2, Range of values is 43 to 45
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte            7     4 (average)
  4006                           ;	Chosen strategy is simple_byte
  4007  003020  500E               	movf	??_atoi^0,w,c
  4008  003022  0A2B               	xorlw	43	; case 43
  4009  003024  B4D8               	btfsc	status,2,c
  4010  003026  EFFB  F017         	goto	l5007
  4011  00302A  0A06               	xorlw	6	; case 45
  4012  00302C  B4D8               	btfsc	status,2,c
  4013  00302E  EFF7  F017         	goto	l5005
  4014  003032  EF38  F018         	goto	l5015
  4015  003036                     l5011:
  4016  003036  C019  F005         	movff	atoi@n,___wmul@multiplier
  4017  00303A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4018  00303E  0E00               	movlw	0
  4019  003040  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4020  003042  0E0A               	movlw	10
  4021  003044  6E07               	movwf	___wmul@multiplicand^0,c
  4022  003046  EC79  F01F         	call	___wmul	;wreg free
  4023  00304A  C00C  FFF6         	movff	atoi@s,tblptrl
  4024  00304E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4025  003052                     	if	0	;tblptru may be non-zero
  4026  003052                     	endif
  4027  003052                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4028  003052  0E00               	movlw	low (__mediumconst shr (0+16))
  4029  003054  6EF8               	movwf	tblptru,c
  4030  003056                     	endif
  4031  003056  0008               	tblrd		*
  4032  003058  50F5               	movf	tablat,w,c
  4033  00305A  5E05               	subwf	?___wmul^0,f,c
  4034  00305C  0E00               	movlw	0
  4035  00305E  5A06               	subwfb	(?___wmul+1)^0,f,c
  4036  003060  0E30               	movlw	48
  4037  003062  2405               	addwf	?___wmul^0,w,c
  4038  003064  6E19               	movwf	atoi@n^0,c
  4039  003066  0E00               	movlw	0
  4040  003068  2006               	addwfc	(?___wmul+1)^0,w,c
  4041  00306A  6E1A               	movwf	(atoi@n+1)^0,c
  4042  00306C  EFFB  F017         	goto	l5007
  4043  003070                     l5015:
  4044  003070  0ED0               	movlw	208
  4045  003072  6E0E               	movwf	??_atoi^0,c
  4046  003074  0EFF               	movlw	255
  4047  003076  6E0F               	movwf	(??_atoi+1)^0,c
  4048  003078  C00C  FFF6         	movff	atoi@s,tblptrl
  4049  00307C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4050  003080                     	if	0	;tblptru may be non-zero
  4051  003080                     	endif
  4052  003080                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4053  003080  0E00               	movlw	low (__mediumconst shr (0+16))
  4054  003082  6EF8               	movwf	tblptru,c
  4055  003084                     	endif
  4056  003084  0008               	tblrd		*
  4057  003086  50F5               	movf	tablat,w,c
  4058  003088  6E10               	movwf	(??_atoi+2)^0,c
  4059  00308A  6A11               	clrf	(??_atoi+3)^0,c
  4060  00308C  500E               	movf	??_atoi^0,w,c
  4061  00308E  2610               	addwf	(??_atoi+2)^0,f,c
  4062  003090  500F               	movf	(??_atoi+1)^0,w,c
  4063  003092  2211               	addwfc	(??_atoi+3)^0,f,c
  4064  003094  5011               	movf	(??_atoi+3)^0,w,c
  4065  003096  E10A               	bnz	u5010
  4066  003098  0E0A               	movlw	10
  4067  00309A  5C10               	subwf	(??_atoi+2)^0,w,c
  4068  00309C  A0D8               	btfss	status,0,c
  4069  00309E  EF53  F018         	goto	u5011
  4070  0030A2  EF56  F018         	goto	u5010
  4071  0030A6                     u5011:
  4072  0030A6  0E01               	movlw	1
  4073  0030A8  EF57  F018         	goto	u5020
  4074  0030AC                     u5010:
  4075  0030AC  0E00               	movlw	0
  4076  0030AE                     u5020:
  4077  0030AE  6E16               	movwf	_atoi$2302^0,c
  4078  0030B0  6A17               	clrf	(_atoi$2302+1)^0,c
  4079  0030B2  5016               	movf	_atoi$2302^0,w,c
  4080  0030B4  1017               	iorwf	(_atoi$2302+1)^0,w,c
  4081  0030B6  A4D8               	btfss	status,2,c
  4082  0030B8  EF60  F018         	goto	u5031
  4083  0030BC  EF62  F018         	goto	u5030
  4084  0030C0                     u5031:
  4085  0030C0  EF1B  F018         	goto	l5011
  4086  0030C4                     u5030:
  4087  0030C4  5012               	movf	atoi@neg^0,w,c
  4088  0030C6  1013               	iorwf	(atoi@neg+1)^0,w,c
  4089  0030C8  A4D8               	btfss	status,2,c
  4090  0030CA  EF69  F018         	goto	u5041
  4091  0030CE  EF6B  F018         	goto	u5040
  4092  0030D2                     u5041:
  4093  0030D2  EF79  F018         	goto	l1256
  4094  0030D6                     u5040:
  4095  0030D6  C019  F00E         	movff	atoi@n,??_atoi
  4096  0030DA  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  4097  0030DE  1E0E               	comf	??_atoi^0,f,c
  4098  0030E0  1E0F               	comf	(??_atoi+1)^0,f,c
  4099  0030E2  4A0E               	infsnz	??_atoi^0,f,c
  4100  0030E4  2A0F               	incf	(??_atoi+1)^0,f,c
  4101  0030E6  C00E  F00C         	movff	??_atoi,?_atoi
  4102  0030EA  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4103  0030EE  EF7D  F018         	goto	l1259
  4104  0030F2                     l1256:
  4105  0030F2  C019  F00C         	movff	atoi@n,?_atoi
  4106  0030F6  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  4107  0030FA                     l1259:
  4108  0030FA  0012               	return		;funcret
  4109  0030FC                     __end_of_atoi:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _isspace *****************
  4113 ;; Defined at:
  4114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  c               2    4[COMRAM] int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2    4[COMRAM] int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;Total ram usage:        7 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 2
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_atoi
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text14
  4143  003A24                     __ptext14:
  4144                           	callstack 0
  4145  003A24                     _isspace:
  4146                           	callstack 24
  4147  003A24  0E01               	movlw	1
  4148  003A26  6E0B               	movwf	_isspace$2318^0,c
  4149  003A28  0E20               	movlw	32
  4150  003A2A  1805               	xorwf	isspace@c^0,w,c
  4151  003A2C  1006               	iorwf	(isspace@c+1)^0,w,c
  4152  003A2E  B4D8               	btfsc	status,2,c
  4153  003A30  EF1C  F01D         	goto	u4811
  4154  003A34  EF1E  F01D         	goto	u4810
  4155  003A38                     u4811:
  4156  003A38  EF37  F01D         	goto	l4921
  4157  003A3C                     u4810:
  4158  003A3C  0EF7               	movlw	247
  4159  003A3E  6E07               	movwf	??_isspace^0,c
  4160  003A40  0EFF               	movlw	255
  4161  003A42  6E08               	movwf	(??_isspace+1)^0,c
  4162  003A44  C005  F009         	movff	isspace@c,??_isspace+2
  4163  003A48  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4164  003A4C  5007               	movf	??_isspace^0,w,c
  4165  003A4E  2609               	addwf	(??_isspace+2)^0,f,c
  4166  003A50  5008               	movf	(??_isspace+1)^0,w,c
  4167  003A52  220A               	addwfc	(??_isspace+3)^0,f,c
  4168  003A54  500A               	movf	(??_isspace+3)^0,w,c
  4169  003A56  E109               	bnz	u4820
  4170  003A58  0E05               	movlw	5
  4171  003A5A  5C09               	subwf	(??_isspace+2)^0,w,c
  4172  003A5C  A0D8               	btfss	status,0,c
  4173  003A5E  EF33  F01D         	goto	u4821
  4174  003A62  EF35  F01D         	goto	u4820
  4175  003A66                     u4821:
  4176  003A66  EF37  F01D         	goto	l4921
  4177  003A6A                     u4820:
  4178  003A6A  0E00               	movlw	0
  4179  003A6C  6E0B               	movwf	_isspace$2318^0,c
  4180  003A6E                     l4921:
  4181  003A6E  C00B  F005         	movff	_isspace$2318,?_isspace
  4182  003A72  6A06               	clrf	(?_isspace+1)^0,c
  4183  003A74  0012               	return		;funcret
  4184  003A76                     __end_of_isspace:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _isdigit *****************
  4188 ;; Defined at:
  4189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  c               2    4[COMRAM] int 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  2    4[COMRAM] int 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;Total ram usage:        6 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 2
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_vfpfcnvrt
  4214 ;;		_atoi
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text15
  4219  003D4E                     __ptext15:
  4220                           	callstack 0
  4221  003D4E                     _isdigit:
  4222                           	callstack 25
  4223  003D4E  0ED0               	movlw	208
  4224  003D50  6E07               	movwf	??_isdigit^0,c
  4225  003D52  0EFF               	movlw	255
  4226  003D54  6E08               	movwf	(??_isdigit+1)^0,c
  4227  003D56  C005  F009         	movff	isdigit@c,??_isdigit+2
  4228  003D5A  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4229  003D5E  5007               	movf	??_isdigit^0,w,c
  4230  003D60  2609               	addwf	(??_isdigit+2)^0,f,c
  4231  003D62  5008               	movf	(??_isdigit+1)^0,w,c
  4232  003D64  220A               	addwfc	(??_isdigit+3)^0,f,c
  4233  003D66  500A               	movf	(??_isdigit+3)^0,w,c
  4234  003D68  E10A               	bnz	u4790
  4235  003D6A  0E0A               	movlw	10
  4236  003D6C  5C09               	subwf	(??_isdigit+2)^0,w,c
  4237  003D6E  A0D8               	btfss	status,0,c
  4238  003D70  EFBC  F01E         	goto	u4791
  4239  003D74  EFBF  F01E         	goto	u4790
  4240  003D78                     u4791:
  4241  003D78  0E01               	movlw	1
  4242  003D7A  EFC0  F01E         	goto	u4800
  4243  003D7E                     u4790:
  4244  003D7E  0E00               	movlw	0
  4245  003D80                     u4800:
  4246  003D80  6E05               	movwf	?_isdigit^0,c
  4247  003D82  6A06               	clrf	(?_isdigit+1)^0,c
  4248  003D84  0012               	return		;funcret
  4249  003D86                     __end_of_isdigit:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function ___wmul *****************
  4253 ;; Defined at:
  4254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  multiplier      2    4[COMRAM] unsigned int 
  4257 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  product         2    8[COMRAM] unsigned int 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2    4[COMRAM] unsigned int 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, prodl, prodh
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;Total ram usage:        6 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 2
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_main
  4280 ;;		_atoi
  4281 ;;		_determine_color1
  4282 ;;		_determine_color2
  4283 ;;		_determine_color3
  4284 ;;		_setMotorPWM
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text16
  4289  003EF2                     __ptext16:
  4290                           	callstack 0
  4291  003EF2                     ___wmul:
  4292                           	callstack 24
  4293  003EF2  5005               	movf	___wmul@multiplier^0,w,c
  4294  003EF4  0207               	mulwf	___wmul@multiplicand^0,c
  4295  003EF6  CFF3 F009          	movff	prodl,___wmul@product
  4296  003EFA  CFF4 F00A          	movff	prodh,___wmul@product+1
  4297  003EFE  5005               	movf	___wmul@multiplier^0,w,c
  4298  003F00  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4299  003F02  50F3               	movf	243,w,c
  4300  003F04  260A               	addwf	(___wmul@product+1)^0,f,c
  4301  003F06  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4302  003F08  0207               	mulwf	___wmul@multiplicand^0,c
  4303  003F0A  50F3               	movf	243,w,c
  4304  003F0C  260A               	addwf	(___wmul@product+1)^0,f,c
  4305  003F0E  C009  F005         	movff	___wmul@product,?___wmul
  4306  003F12  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4307  003F16  0012               	return		;funcret
  4308  003F18                     __end_of___wmul:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _sendTxBuf *****************
  4312 ;; Defined at:
  4313 ;;		line 106 in file "serial.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 3
  4334 ;; This function calls:
  4335 ;;		_isDataInTxBuf
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text17
  4342  003F58                     __ptext17:
  4343                           	callstack 0
  4344  003F58                     _sendTxBuf:
  4345                           	callstack 27
  4346  003F58                     
  4347                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  4348  003F58  ECB9  F01F         	call	_isDataInTxBuf	;wreg free
  4349  003F5C  0900               	iorlw	0
  4350  003F5E  B4D8               	btfsc	status,2,c
  4351  003F60  EFB4  F01F         	goto	u3901
  4352  003F64  EFB6  F01F         	goto	u3900
  4353  003F68                     u3901:
  4354  003F68  EFB8  F01F         	goto	l402
  4355  003F6C                     u3900:
  4356  003F6C  010E               	movlb	14	; () banked
  4357  003F6E  852D               	bsf	45,2,b	;volatile
  4358  003F70                     l402:
  4359  003F70  0012               	return		;funcret
  4360  003F72                     __end_of_sendTxBuf:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _isDataInTxBuf *****************
  4364 ;; Defined at:
  4365 ;;		line 93 in file "serial.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      unsigned char 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 2
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_sendTxBuf
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text18
  4394  003F72                     __ptext18:
  4395                           	callstack 0
  4396  003F72                     _isDataInTxBuf:
  4397                           	callstack 27
  4398  003F72                     
  4399                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  4400  003F72  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  4401  003F74  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4402  003F76  A4D8               	btfss	status,2,c
  4403  003F78  EFC0  F01F         	goto	u3331
  4404  003F7C  EFC3  F01F         	goto	u3330
  4405  003F80                     u3331:
  4406  003F80  0E01               	movlw	1
  4407  003F82  EFC4  F01F         	goto	u3340
  4408  003F86                     u3330:
  4409  003F86  0E00               	movlw	0
  4410  003F88                     u3340:
  4411  003F88  0012               	return		;funcret
  4412  003F8A                     __end_of_isDataInTxBuf:
  4413                           	callstack 0
  4414                           
  4415 ;; *************** function _read_colours *****************
  4416 ;; Defined at:
  4417 ;;		line 83 in file "color.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  m               2   15[COMRAM] PTR struct RGB_val
  4420 ;;		 -> main@test(26), 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4436 ;;Total ram usage:        3 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 5
  4439 ;; This function calls:
  4440 ;;		_color_read_Blue
  4441 ;;		_color_read_Clear
  4442 ;;		_color_read_Green
  4443 ;;		_color_read_Red
  4444 ;; This function is called by:
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text19
  4450  0038CE                     __ptext19:
  4451                           	callstack 0
  4452  0038CE                     _read_colours:
  4453                           	callstack 25
  4454  0038CE                     
  4455                           ;color.c: 84:     (m->C) = color_read_Clear();
  4456  0038CE  EC8B  F01D         	call	_color_read_Clear	;wreg free
  4457  0038D2  C010  FFD9         	movff	read_colours@m,fsr2l
  4458  0038D6  C011  FFDA         	movff	read_colours@m+1,fsr2h
  4459  0038DA  C009  FFDE         	movff	?_color_read_Clear,postinc2
  4460  0038DE  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  4461  0038E2                     
  4462                           ;color.c: 85:     _delay((unsigned long)((1)*(64000000/4000.0)));
  4463  0038E2  0E15               	movlw	21
  4464  0038E4  6E12               	movwf	??_read_colours^0,c
  4465  0038E6  0EC6               	movlw	198
  4466  0038E8                     u5467:
  4467  0038E8  2EE8               	decfsz	wreg,f,c
  4468  0038EA  D7FE               	bra	u5467
  4469  0038EC  2E12               	decfsz	??_read_colours^0,f,c
  4470  0038EE  D7FC               	bra	u5467
  4471  0038F0  D000               	nop2	
  4472  0038F2                     
  4473                           ;color.c: 86:     (m->R) = color_read_Red();
  4474  0038F2  EC3B  F01D         	call	_color_read_Red	;wreg free
  4475  0038F6  EE20 F002          	lfsr	2,2
  4476  0038FA  5010               	movf	read_colours@m^0,w,c
  4477  0038FC  26D9               	addwf	fsr2l,f,c
  4478  0038FE  5011               	movf	(read_colours@m+1)^0,w,c
  4479  003900  22DA               	addwfc	fsr2h,f,c
  4480  003902  C009  FFDE         	movff	?_color_read_Red,postinc2
  4481  003906  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  4482                           
  4483                           ;color.c: 87:     _delay((unsigned long)((1)*(64000000/4000.0)));
  4484  00390A  0E15               	movlw	21
  4485  00390C  6E12               	movwf	??_read_colours^0,c
  4486  00390E  0EC6               	movlw	198
  4487  003910                     u5477:
  4488  003910  2EE8               	decfsz	wreg,f,c
  4489  003912  D7FE               	bra	u5477
  4490  003914  2E12               	decfsz	??_read_colours^0,f,c
  4491  003916  D7FC               	bra	u5477
  4492  003918  D000               	nop2	
  4493  00391A                     
  4494                           ;color.c: 88:     (m->G) = color_read_Green();
  4495  00391A  EC63  F01D         	call	_color_read_Green	;wreg free
  4496  00391E  EE20 F004          	lfsr	2,4
  4497  003922  5010               	movf	read_colours@m^0,w,c
  4498  003924  26D9               	addwf	fsr2l,f,c
  4499  003926  5011               	movf	(read_colours@m+1)^0,w,c
  4500  003928  22DA               	addwfc	fsr2h,f,c
  4501  00392A  C009  FFDE         	movff	?_color_read_Green,postinc2
  4502  00392E  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  4503  003932                     
  4504                           ;color.c: 89:     _delay((unsigned long)((1)*(64000000/4000.0)));
  4505  003932  0E15               	movlw	21
  4506  003934  6E12               	movwf	??_read_colours^0,c
  4507  003936  0EC6               	movlw	198
  4508  003938                     u5487:
  4509  003938  2EE8               	decfsz	wreg,f,c
  4510  00393A  D7FE               	bra	u5487
  4511  00393C  2E12               	decfsz	??_read_colours^0,f,c
  4512  00393E  D7FC               	bra	u5487
  4513  003940  D000               	nop2	
  4514                           
  4515                           ;color.c: 90:     (m->B) = color_read_Blue();
  4516  003942  ECB3  F01D         	call	_color_read_Blue	;wreg free
  4517  003946  EE20 F006          	lfsr	2,6
  4518  00394A  5010               	movf	read_colours@m^0,w,c
  4519  00394C  26D9               	addwf	fsr2l,f,c
  4520  00394E  5011               	movf	(read_colours@m+1)^0,w,c
  4521  003950  22DA               	addwfc	fsr2h,f,c
  4522  003952  C009  FFDE         	movff	?_color_read_Blue,postinc2
  4523  003956  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  4524  00395A                     
  4525                           ;color.c: 91:     _delay((unsigned long)((1)*(64000000/4000.0)));
  4526  00395A  0E15               	movlw	21
  4527  00395C  6E12               	movwf	??_read_colours^0,c
  4528  00395E  0EC6               	movlw	198
  4529  003960                     u5497:
  4530  003960  2EE8               	decfsz	wreg,f,c
  4531  003962  D7FE               	bra	u5497
  4532  003964  2E12               	decfsz	??_read_colours^0,f,c
  4533  003966  D7FC               	bra	u5497
  4534  003968  D000               	nop2	
  4535  00396A  0012               	return		;funcret
  4536  00396C                     __end_of_read_colours:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _color_read_Red *****************
  4540 ;; Defined at:
  4541 ;;		line 43 in file "color.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  tmp             2   13[COMRAM] unsigned int 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  2    8[COMRAM] unsigned int 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;Total ram usage:        7 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 4
  4562 ;; This function calls:
  4563 ;;		_I2C_2_Master_Read
  4564 ;;		_I2C_2_Master_RepStart
  4565 ;;		_I2C_2_Master_Start
  4566 ;;		_I2C_2_Master_Stop
  4567 ;;		_I2C_2_Master_Write
  4568 ;; This function is called by:
  4569 ;;		_read_colours
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text20
  4574  003A76                     __ptext20:
  4575                           	callstack 0
  4576  003A76                     _color_read_Red:
  4577                           	callstack 25
  4578  003A76                     
  4579                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  4580  003A76  ECE7  F01F         	call	_I2C_2_Master_Start	;wreg free
  4581                           
  4582                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  4583  003A7A  0E52               	movlw	82
  4584  003A7C  ECD1  F01F         	call	_I2C_2_Master_Write
  4585                           
  4586                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x16);
  4587  003A80  0EB6               	movlw	182
  4588  003A82  ECD1  F01F         	call	_I2C_2_Master_Write
  4589                           
  4590                           ;color.c: 49:  I2C_2_Master_RepStart();
  4591  003A86  ECDD  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  4592                           
  4593                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  4594  003A8A  0E53               	movlw	83
  4595  003A8C  ECD1  F01F         	call	_I2C_2_Master_Write
  4596                           
  4597                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  4598  003A90  0E01               	movlw	1
  4599  003A92  EC45  F01E         	call	_I2C_2_Master_Read
  4600  003A96  6E0B               	movwf	??_color_read_Red^0,c
  4601  003A98  500B               	movf	??_color_read_Red^0,w,c
  4602  003A9A  6E0E               	movwf	color_read_Red@tmp^0,c
  4603  003A9C  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  4604                           
  4605                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4606  003A9E  0E00               	movlw	0
  4607  003AA0  EC45  F01E         	call	_I2C_2_Master_Read
  4608  003AA4  6E0B               	movwf	??_color_read_Red^0,c
  4609  003AA6  500B               	movf	??_color_read_Red^0,w,c
  4610  003AA8  6E0D               	movwf	(??_color_read_Red+2)^0,c
  4611  003AAA  6A0C               	clrf	(??_color_read_Red+1)^0,c
  4612  003AAC  500E               	movf	color_read_Red@tmp^0,w,c
  4613  003AAE  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  4614  003AB0  6E0E               	movwf	color_read_Red@tmp^0,c
  4615  003AB2  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  4616  003AB4  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  4617  003AB6  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  4618                           
  4619                           ;color.c: 53:  I2C_2_Master_Stop();
  4620  003AB8  ECE2  F01F         	call	_I2C_2_Master_Stop	;wreg free
  4621  003ABC                     
  4622                           ;color.c: 54:  return tmp;
  4623  003ABC  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  4624  003AC0  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4625  003AC4  0012               	return		;funcret
  4626  003AC6                     __end_of_color_read_Red:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _color_read_Green *****************
  4630 ;; Defined at:
  4631 ;;		line 57 in file "color.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  tmp             2   13[COMRAM] unsigned int 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  2    8[COMRAM] unsigned int 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;Total ram usage:        7 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 4
  4652 ;; This function calls:
  4653 ;;		_I2C_2_Master_Read
  4654 ;;		_I2C_2_Master_RepStart
  4655 ;;		_I2C_2_Master_Start
  4656 ;;		_I2C_2_Master_Stop
  4657 ;;		_I2C_2_Master_Write
  4658 ;; This function is called by:
  4659 ;;		_read_colours
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text21
  4664  003AC6                     __ptext21:
  4665                           	callstack 0
  4666  003AC6                     _color_read_Green:
  4667                           	callstack 25
  4668  003AC6                     
  4669                           ;color.c: 58:     unsigned int tmp;;color.c: 59:     I2C_2_Master_Start();
  4670  003AC6  ECE7  F01F         	call	_I2C_2_Master_Start	;wreg free
  4671                           
  4672                           ;color.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  4673  003ACA  0E52               	movlw	82
  4674  003ACC  ECD1  F01F         	call	_I2C_2_Master_Write
  4675                           
  4676                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  4677  003AD0  0EB8               	movlw	184
  4678  003AD2  ECD1  F01F         	call	_I2C_2_Master_Write
  4679                           
  4680                           ;color.c: 62:  I2C_2_Master_RepStart();
  4681  003AD6  ECDD  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  4682                           
  4683                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  4684  003ADA  0E53               	movlw	83
  4685  003ADC  ECD1  F01F         	call	_I2C_2_Master_Write
  4686                           
  4687                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  4688  003AE0  0E01               	movlw	1
  4689  003AE2  EC45  F01E         	call	_I2C_2_Master_Read
  4690  003AE6  6E0B               	movwf	??_color_read_Green^0,c
  4691  003AE8  500B               	movf	??_color_read_Green^0,w,c
  4692  003AEA  6E0E               	movwf	color_read_Green@tmp^0,c
  4693  003AEC  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  4694                           
  4695                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4696  003AEE  0E00               	movlw	0
  4697  003AF0  EC45  F01E         	call	_I2C_2_Master_Read
  4698  003AF4  6E0B               	movwf	??_color_read_Green^0,c
  4699  003AF6  500B               	movf	??_color_read_Green^0,w,c
  4700  003AF8  6E0D               	movwf	(??_color_read_Green+2)^0,c
  4701  003AFA  6A0C               	clrf	(??_color_read_Green+1)^0,c
  4702  003AFC  500E               	movf	color_read_Green@tmp^0,w,c
  4703  003AFE  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  4704  003B00  6E0E               	movwf	color_read_Green@tmp^0,c
  4705  003B02  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  4706  003B04  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  4707  003B06  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  4708                           
  4709                           ;color.c: 66:     I2C_2_Master_Stop();
  4710  003B08  ECE2  F01F         	call	_I2C_2_Master_Stop	;wreg free
  4711  003B0C                     
  4712                           ;color.c: 67:     return tmp;
  4713  003B0C  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  4714  003B10  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4715  003B14  0012               	return		;funcret
  4716  003B16                     __end_of_color_read_Green:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _color_read_Clear *****************
  4720 ;; Defined at:
  4721 ;;		line 30 in file "color.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  tmp             2   13[COMRAM] unsigned int 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  2    8[COMRAM] unsigned int 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;Total ram usage:        7 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 4
  4742 ;; This function calls:
  4743 ;;		_I2C_2_Master_Read
  4744 ;;		_I2C_2_Master_RepStart
  4745 ;;		_I2C_2_Master_Start
  4746 ;;		_I2C_2_Master_Stop
  4747 ;;		_I2C_2_Master_Write
  4748 ;; This function is called by:
  4749 ;;		_read_colours
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text22
  4754  003B16                     __ptext22:
  4755                           	callstack 0
  4756  003B16                     _color_read_Clear:
  4757                           	callstack 25
  4758  003B16                     
  4759                           ;color.c: 31:     unsigned int tmp;;color.c: 32:     I2C_2_Master_Start();
  4760  003B16  ECE7  F01F         	call	_I2C_2_Master_Start	;wreg free
  4761                           
  4762                           ;color.c: 33:     I2C_2_Master_Write(0x52 | 0x00);
  4763  003B1A  0E52               	movlw	82
  4764  003B1C  ECD1  F01F         	call	_I2C_2_Master_Write
  4765                           
  4766                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x14);
  4767  003B20  0EB4               	movlw	180
  4768  003B22  ECD1  F01F         	call	_I2C_2_Master_Write
  4769                           
  4770                           ;color.c: 35:  I2C_2_Master_RepStart();
  4771  003B26  ECDD  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  4772                           
  4773                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  4774  003B2A  0E53               	movlw	83
  4775  003B2C  ECD1  F01F         	call	_I2C_2_Master_Write
  4776                           
  4777                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  4778  003B30  0E01               	movlw	1
  4779  003B32  EC45  F01E         	call	_I2C_2_Master_Read
  4780  003B36  6E0B               	movwf	??_color_read_Clear^0,c
  4781  003B38  500B               	movf	??_color_read_Clear^0,w,c
  4782  003B3A  6E0E               	movwf	color_read_Clear@tmp^0,c
  4783  003B3C  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  4784                           
  4785                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4786  003B3E  0E00               	movlw	0
  4787  003B40  EC45  F01E         	call	_I2C_2_Master_Read
  4788  003B44  6E0B               	movwf	??_color_read_Clear^0,c
  4789  003B46  500B               	movf	??_color_read_Clear^0,w,c
  4790  003B48  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  4791  003B4A  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  4792  003B4C  500E               	movf	color_read_Clear@tmp^0,w,c
  4793  003B4E  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  4794  003B50  6E0E               	movwf	color_read_Clear@tmp^0,c
  4795  003B52  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  4796  003B54  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  4797  003B56  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  4798                           
  4799                           ;color.c: 39:     I2C_2_Master_Stop();
  4800  003B58  ECE2  F01F         	call	_I2C_2_Master_Stop	;wreg free
  4801  003B5C                     
  4802                           ;color.c: 40:     return tmp;
  4803  003B5C  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  4804  003B60  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4805  003B64  0012               	return		;funcret
  4806  003B66                     __end_of_color_read_Clear:
  4807                           	callstack 0
  4808                           
  4809 ;; *************** function _color_read_Blue *****************
  4810 ;; Defined at:
  4811 ;;		line 70 in file "color.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  tmp             2   13[COMRAM] unsigned int 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    8[COMRAM] unsigned int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;Total ram usage:        7 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 4
  4832 ;; This function calls:
  4833 ;;		_I2C_2_Master_Read
  4834 ;;		_I2C_2_Master_RepStart
  4835 ;;		_I2C_2_Master_Start
  4836 ;;		_I2C_2_Master_Stop
  4837 ;;		_I2C_2_Master_Write
  4838 ;; This function is called by:
  4839 ;;		_read_colours
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text23
  4844  003B66                     __ptext23:
  4845                           	callstack 0
  4846  003B66                     _color_read_Blue:
  4847                           	callstack 25
  4848  003B66                     
  4849                           ;color.c: 71:     unsigned int tmp;;color.c: 72:     I2C_2_Master_Start();
  4850  003B66  ECE7  F01F         	call	_I2C_2_Master_Start	;wreg free
  4851                           
  4852                           ;color.c: 73:     I2C_2_Master_Write(0x52 | 0x00);
  4853  003B6A  0E52               	movlw	82
  4854  003B6C  ECD1  F01F         	call	_I2C_2_Master_Write
  4855                           
  4856                           ;color.c: 74:  I2C_2_Master_Write(0xA0 | 0x1A);
  4857  003B70  0EBA               	movlw	186
  4858  003B72  ECD1  F01F         	call	_I2C_2_Master_Write
  4859                           
  4860                           ;color.c: 75:  I2C_2_Master_RepStart();
  4861  003B76  ECDD  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  4862                           
  4863                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  4864  003B7A  0E53               	movlw	83
  4865  003B7C  ECD1  F01F         	call	_I2C_2_Master_Write
  4866                           
  4867                           ;color.c: 77:  tmp=I2C_2_Master_Read(1);
  4868  003B80  0E01               	movlw	1
  4869  003B82  EC45  F01E         	call	_I2C_2_Master_Read
  4870  003B86  6E0B               	movwf	??_color_read_Blue^0,c
  4871  003B88  500B               	movf	??_color_read_Blue^0,w,c
  4872  003B8A  6E0E               	movwf	color_read_Blue@tmp^0,c
  4873  003B8C  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  4874                           
  4875                           ;color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4876  003B8E  0E00               	movlw	0
  4877  003B90  EC45  F01E         	call	_I2C_2_Master_Read
  4878  003B94  6E0B               	movwf	??_color_read_Blue^0,c
  4879  003B96  500B               	movf	??_color_read_Blue^0,w,c
  4880  003B98  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  4881  003B9A  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  4882  003B9C  500E               	movf	color_read_Blue@tmp^0,w,c
  4883  003B9E  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  4884  003BA0  6E0E               	movwf	color_read_Blue@tmp^0,c
  4885  003BA2  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  4886  003BA4  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  4887  003BA6  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  4888                           
  4889                           ;color.c: 79:     I2C_2_Master_Stop();
  4890  003BA8  ECE2  F01F         	call	_I2C_2_Master_Stop	;wreg free
  4891  003BAC                     
  4892                           ;color.c: 80:     return tmp;
  4893  003BAC  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  4894  003BB0  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4895  003BB4  0012               	return		;funcret
  4896  003BB6                     __end_of_color_read_Blue:
  4897                           	callstack 0
  4898                           
  4899 ;; *************** function _I2C_2_Master_RepStart *****************
  4900 ;; Defined at:
  4901 ;;		line 33 in file "i2c.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 3
  4922 ;; This function calls:
  4923 ;;		_I2C_2_Master_Idle
  4924 ;; This function is called by:
  4925 ;;		_color_read_Clear
  4926 ;;		_color_read_Red
  4927 ;;		_color_read_Green
  4928 ;;		_color_read_Blue
  4929 ;;		_read_color_sensor
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text24
  4934  003FBA                     __ptext24:
  4935                           	callstack 0
  4936  003FBA                     _I2C_2_Master_RepStart:
  4937                           	callstack 25
  4938  003FBA                     
  4939                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4940  003FBA  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  4941  003FBE                     
  4942                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4943  003FBE  010E               	movlb	14	; () banked
  4944  003FC0  83DA               	bsf	218,1,b	;volatile
  4945  003FC2                     
  4946                           ; BSR set to: 14
  4947  003FC2  0012               	return		;funcret
  4948  003FC4                     __end_of_I2C_2_Master_RepStart:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _I2C_2_Master_Read *****************
  4952 ;; Defined at:
  4953 ;;		line 51 in file "i2c.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  ack             1    wreg     unsigned char 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  ack             1    6[COMRAM] unsigned char 
  4958 ;;  tmp             1    7[COMRAM] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      unsigned char 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;Total ram usage:        3 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 3
  4975 ;; This function calls:
  4976 ;;		_I2C_2_Master_Idle
  4977 ;; This function is called by:
  4978 ;;		_color_read_Clear
  4979 ;;		_color_read_Red
  4980 ;;		_color_read_Green
  4981 ;;		_color_read_Blue
  4982 ;;		_read_color_sensor
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text25
  4987  003C8A                     __ptext25:
  4988                           	callstack 0
  4989  003C8A                     _I2C_2_Master_Read:
  4990                           	callstack 25
  4991                           
  4992                           ; BSR set to: 14
  4993                           ;incstack = 0
  4994                           ;I2C_2_Master_Read@ack stored from wreg
  4995  003C8A  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4996  003C8C                     
  4997                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4998  003C8C  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  4999  003C90                     
  5000                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5001  003C90  010E               	movlb	14	; () banked
  5002  003C92  87DA               	bsf	218,3,b	;volatile
  5003                           
  5004                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5005  003C94  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  5006  003C98                     
  5007                           ;i2c.c: 57:   tmp = SSP2BUF;
  5008  003C98  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5009                           
  5010                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5011  003C9C  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  5012  003CA0                     
  5013                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5014  003CA0  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  5015  003CA2  B4D8               	btfsc	status,2,c
  5016  003CA4  EF56  F01E         	goto	u2751
  5017  003CA8  EF5A  F01E         	goto	u2750
  5018  003CAC                     u2751:
  5019  003CAC  6A06               	clrf	??_I2C_2_Master_Read^0,c
  5020  003CAE  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  5021  003CB0  EF5B  F01E         	goto	u2768
  5022  003CB4                     u2750:
  5023  003CB4  6A06               	clrf	??_I2C_2_Master_Read^0,c
  5024  003CB6                     u2768:
  5025  003CB6  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  5026  003CB8  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  5027  003CBA  010E               	movlb	14	; () banked
  5028  003CBC  51DA               	movf	218,w,b	;volatile
  5029  003CBE  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  5030  003CC0  0BDF               	andlw	-33
  5031  003CC2  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  5032  003CC4  6FDA               	movwf	218,b	;volatile
  5033  003CC6                     
  5034                           ; BSR set to: 14
  5035                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5036  003CC6  89DA               	bsf	218,4,b	;volatile
  5037  003CC8                     
  5038                           ; BSR set to: 14
  5039                           ;i2c.c: 61:   return tmp;
  5040  003CC8  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  5041  003CCA                     
  5042                           ; BSR set to: 14
  5043  003CCA  0012               	return		;funcret
  5044  003CCC                     __end_of_I2C_2_Master_Read:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function _initUSART4 *****************
  5048 ;; Defined at:
  5049 ;;		line 4 in file "serial.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;Total ram usage:        0 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 2
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text26
  5078  003F18                     __ptext26:
  5079                           	callstack 0
  5080  003F18                     _initUSART4:
  5081                           	callstack 28
  5082  003F18                     
  5083                           ;serial.c: 8:     RC0PPS = 0x12;
  5084  003F18  0E12               	movlw	18
  5085  003F1A  010E               	movlb	14	; () banked
  5086  003F1C  6F62               	movwf	98,b	;volatile
  5087                           
  5088                           ;serial.c: 9:     RX4PPS = 0x11;
  5089  003F1E  0E11               	movlw	17
  5090  003F20  6F15               	movwf	21,b	;volatile
  5091  003F22                     
  5092                           ; BSR set to: 14
  5093                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  5094  003F22  8283               	bsf	131,1,c	;volatile
  5095  003F24                     
  5096                           ; BSR set to: 14
  5097                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  5098  003F24  97E9               	bcf	233,3,b	;volatile
  5099  003F26                     
  5100                           ; BSR set to: 14
  5101                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  5102  003F26  95E8               	bcf	232,2,b	;volatile
  5103                           
  5104                           ;serial.c: 14:     SP4BRGL = 51;
  5105  003F28  0E33               	movlw	51
  5106  003F2A  6FE5               	movwf	229,b	;volatile
  5107                           
  5108                           ;serial.c: 15:     SP4BRGH = 0;
  5109  003F2C  0E00               	movlw	0
  5110  003F2E  6FE6               	movwf	230,b	;volatile
  5111  003F30                     
  5112                           ; BSR set to: 14
  5113                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  5114  003F30  89E7               	bsf	231,4,b	;volatile
  5115  003F32                     
  5116                           ; BSR set to: 14
  5117                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  5118  003F32  8BE8               	bsf	232,5,b	;volatile
  5119  003F34                     
  5120                           ; BSR set to: 14
  5121                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  5122  003F34  8FE7               	bsf	231,7,b	;volatile
  5123  003F36                     
  5124                           ; BSR set to: 14
  5125  003F36  0012               	return		;funcret
  5126  003F38                     __end_of_initUSART4:
  5127                           	callstack 0
  5128                           
  5129 ;; *************** function _initDCmotorsPWM *****************
  5130 ;; Defined at:
  5131 ;;		line 5 in file "dc_motor.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  PWMperiod       2    4[COMRAM] int 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;		None
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;Total ram usage:        2 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 2
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text27
  5160  003CCC                     __ptext27:
  5161                           	callstack 0
  5162  003CCC                     _initDCmotorsPWM:
  5163                           	callstack 28
  5164  003CCC                     
  5165                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  5166  003CCC  9485               	bcf	133,2,c	;volatile
  5167                           
  5168                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  5169  003CCE  9E83               	bcf	131,7,c	;volatile
  5170                           
  5171                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  5172  003CD0  9C87               	bcf	135,6,c	;volatile
  5173                           
  5174                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  5175  003CD2  9885               	bcf	133,4,c	;volatile
  5176                           
  5177                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5178  003CD4  947D               	bcf	125,2,c	;volatile
  5179                           
  5180                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  5181  003CD6  9E7B               	bcf	123,7,c	;volatile
  5182                           
  5183                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  5184  003CD8  9C7F               	bcf	127,6,c	;volatile
  5185                           
  5186                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  5187  003CDA  987D               	bcf	125,4,c	;volatile
  5188  003CDC                     
  5189                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  5190  003CDC  50BD               	movf	189,w,c	;volatile
  5191  003CDE  0B8F               	andlw	-113
  5192  003CE0  0940               	iorlw	64
  5193  003CE2  6EBD               	movwf	189,c	;volatile
  5194                           
  5195                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  5196  003CE4  0EE0               	movlw	-32
  5197  003CE6  16BE               	andwf	190,f,c	;volatile
  5198                           
  5199                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  5200  003CE8  50BF               	movf	191,w,c	;volatile
  5201  003CEA  0BF0               	andlw	-16
  5202  003CEC  0901               	iorlw	1
  5203  003CEE  6EBF               	movwf	191,c	;volatile
  5204                           
  5205                           ;dc_motor.c: 22:     T2PR=99;
  5206  003CF0  0E63               	movlw	99
  5207  003CF2  6EBC               	movwf	188,c	;volatile
  5208  003CF4                     
  5209                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  5210  003CF4  8EBD               	bsf	189,7,c	;volatile
  5211                           
  5212                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  5213  003CF6  0E0A               	movlw	10
  5214  003CF8  010E               	movlb	14	; () banked
  5215  003CFA  6F74               	movwf	116,b	;volatile
  5216                           
  5217                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  5218  003CFC  0E0B               	movlw	11
  5219  003CFE  6F69               	movwf	105,b	;volatile
  5220                           
  5221                           ;dc_motor.c: 28:     PWM6DCH=0;
  5222  003D00  0E00               	movlw	0
  5223  003D02  6EA3               	movwf	163,c	;volatile
  5224                           
  5225                           ;dc_motor.c: 29:     PWM7DCH=0;
  5226  003D04  0E00               	movlw	0
  5227  003D06  6EA0               	movwf	160,c	;volatile
  5228  003D08                     
  5229                           ; BSR set to: 14
  5230                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  5231  003D08  8EA4               	bsf	164,7,c	;volatile
  5232  003D0A                     
  5233                           ; BSR set to: 14
  5234                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  5235  003D0A  8EA1               	bsf	161,7,c	;volatile
  5236  003D0C                     
  5237                           ; BSR set to: 14
  5238  003D0C  0012               	return		;funcret
  5239  003D0E                     __end_of_initDCmotorsPWM:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _determine_color_new *****************
  5243 ;; Defined at:
  5244 ;;		line 295 in file "color.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  m               2   62[COMRAM] PTR struct RGB_val
  5247 ;;		 -> main@test(26), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  GreenRatio      4   36[BANK0 ] float 
  5250 ;;  RedRatio        4   32[BANK0 ] float 
  5251 ;;  RatioMax        4   44[BANK0 ] volatile float 
  5252 ;;  BlueRatio       4   24[BANK0 ] float 
  5253 ;;  Hue             4   20[BANK0 ] float 
  5254 ;;  RatioMin        4   40[BANK0 ] volatile float 
  5255 ;;  Saturation      4   28[BANK0 ] volatile float 
  5256 ;;  temp            2    0        unsigned int 
  5257 ;;  out             2    0        unsigned int 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  4   62[COMRAM] float 
  5260 ;; Registers used:
  5261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Locals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Totals:         8      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;Total ram usage:       56 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 4
  5274 ;; This function calls:
  5275 ;;		___fladd
  5276 ;;		___fldiv
  5277 ;;		___fleq
  5278 ;;		___flge
  5279 ;;		___flsub
  5280 ;;		___xxtofl
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text28
  5287  000E34                     __ptext28:
  5288                           	callstack 0
  5289  000E34                     _determine_color_new:
  5290                           	callstack 26
  5291  000E34                     
  5292                           ;color.c: 297:     unsigned int out;;color.c: 298:     float RedRatio, GreenRatio, BlueR
      +                          atio, Hue;;color.c: 299:     float volatile RatioMax, RatioMin, Saturation;;color.c: 301
      +                          :     RedRatio = ((float)(m->R) / (float)(m->C));
  5293  000E34  EE20 F002          	lfsr	2,2
  5294  000E38  503F               	movf	determine_color_new@m^0,w,c
  5295  000E3A  26D9               	addwf	fsr2l,f,c
  5296  000E3C  5040               	movf	(determine_color_new@m+1)^0,w,c
  5297  000E3E  22DA               	addwfc	fsr2h,f,c
  5298  000E40  CFDE F043          	movff	postinc2,??_determine_color_new
  5299  000E44  CFDD F044          	movff	postdec2,??_determine_color_new+1
  5300  000E48  C043  F00B         	movff	??_determine_color_new,___xxtofl@val
  5301  000E4C  C044  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5302  000E50  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5303  000E52  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5304  000E54  0E00               	movlw	0
  5305  000E56  ECD2  F016         	call	___xxtofl
  5306  000E5A  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5307  000E5E  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5308  000E62  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5309  000E66  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5310  000E6A  C03F  FFD9         	movff	determine_color_new@m,fsr2l
  5311  000E6E  C040  FFDA         	movff	determine_color_new@m+1,fsr2h
  5312  000E72  CFDE F045          	movff	postinc2,??_determine_color_new+2
  5313  000E76  CFDD F046          	movff	postdec2,??_determine_color_new+3
  5314  000E7A  C045  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5315  000E7E  C046  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5316  000E82  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5317  000E84  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5318  000E86  0E00               	movlw	0
  5319  000E88  ECD2  F016         	call	___xxtofl
  5320  000E8C  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5321  000E90  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5322  000E94  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5323  000E98  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5324  000E9C  ECCD  F011         	call	___fldiv	;wreg free
  5325  000EA0  C01E  F080         	movff	?___fldiv,determine_color_new@RedRatio
  5326  000EA4  C01F  F081         	movff	?___fldiv+1,determine_color_new@RedRatio+1
  5327  000EA8  C020  F082         	movff	?___fldiv+2,determine_color_new@RedRatio+2
  5328  000EAC  C021  F083         	movff	?___fldiv+3,determine_color_new@RedRatio+3
  5329  000EB0                     
  5330                           ;color.c: 302:     GreenRatio = ((float)(m->G) / (float)(m->C));
  5331  000EB0  EE20 F004          	lfsr	2,4
  5332  000EB4  503F               	movf	determine_color_new@m^0,w,c
  5333  000EB6  26D9               	addwf	fsr2l,f,c
  5334  000EB8  5040               	movf	(determine_color_new@m+1)^0,w,c
  5335  000EBA  22DA               	addwfc	fsr2h,f,c
  5336  000EBC  CFDE F043          	movff	postinc2,??_determine_color_new
  5337  000EC0  CFDD F044          	movff	postdec2,??_determine_color_new+1
  5338  000EC4  C043  F00B         	movff	??_determine_color_new,___xxtofl@val
  5339  000EC8  C044  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5340  000ECC  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5341  000ECE  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5342  000ED0  0E00               	movlw	0
  5343  000ED2  ECD2  F016         	call	___xxtofl
  5344  000ED6  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5345  000EDA  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5346  000EDE  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5347  000EE2  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5348  000EE6  C03F  FFD9         	movff	determine_color_new@m,fsr2l
  5349  000EEA  C040  FFDA         	movff	determine_color_new@m+1,fsr2h
  5350  000EEE  CFDE F045          	movff	postinc2,??_determine_color_new+2
  5351  000EF2  CFDD F046          	movff	postdec2,??_determine_color_new+3
  5352  000EF6  C045  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5353  000EFA  C046  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5354  000EFE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5355  000F00  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5356  000F02  0E00               	movlw	0
  5357  000F04  ECD2  F016         	call	___xxtofl
  5358  000F08  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5359  000F0C  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5360  000F10  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5361  000F14  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5362  000F18  ECCD  F011         	call	___fldiv	;wreg free
  5363  000F1C  C01E  F084         	movff	?___fldiv,determine_color_new@GreenRatio
  5364  000F20  C01F  F085         	movff	?___fldiv+1,determine_color_new@GreenRatio+1
  5365  000F24  C020  F086         	movff	?___fldiv+2,determine_color_new@GreenRatio+2
  5366  000F28  C021  F087         	movff	?___fldiv+3,determine_color_new@GreenRatio+3
  5367  000F2C                     
  5368                           ;color.c: 303:     BlueRatio = ((float)(m->B) / (float)(m->C));
  5369  000F2C  EE20 F006          	lfsr	2,6
  5370  000F30  503F               	movf	determine_color_new@m^0,w,c
  5371  000F32  26D9               	addwf	fsr2l,f,c
  5372  000F34  5040               	movf	(determine_color_new@m+1)^0,w,c
  5373  000F36  22DA               	addwfc	fsr2h,f,c
  5374  000F38  CFDE F043          	movff	postinc2,??_determine_color_new
  5375  000F3C  CFDD F044          	movff	postdec2,??_determine_color_new+1
  5376  000F40  C043  F00B         	movff	??_determine_color_new,___xxtofl@val
  5377  000F44  C044  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5378  000F48  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5379  000F4A  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5380  000F4C  0E00               	movlw	0
  5381  000F4E  ECD2  F016         	call	___xxtofl
  5382  000F52  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5383  000F56  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5384  000F5A  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5385  000F5E  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5386  000F62  C03F  FFD9         	movff	determine_color_new@m,fsr2l
  5387  000F66  C040  FFDA         	movff	determine_color_new@m+1,fsr2h
  5388  000F6A  CFDE F045          	movff	postinc2,??_determine_color_new+2
  5389  000F6E  CFDD F046          	movff	postdec2,??_determine_color_new+3
  5390  000F72  C045  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5391  000F76  C046  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5392  000F7A  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5393  000F7C  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5394  000F7E  0E00               	movlw	0
  5395  000F80  ECD2  F016         	call	___xxtofl
  5396  000F84  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5397  000F88  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5398  000F8C  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5399  000F90  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5400  000F94  ECCD  F011         	call	___fldiv	;wreg free
  5401  000F98  C01E  F078         	movff	?___fldiv,determine_color_new@BlueRatio
  5402  000F9C  C01F  F079         	movff	?___fldiv+1,determine_color_new@BlueRatio+1
  5403  000FA0  C020  F07A         	movff	?___fldiv+2,determine_color_new@BlueRatio+2
  5404  000FA4  C021  F07B         	movff	?___fldiv+3,determine_color_new@BlueRatio+3
  5405  000FA8                     
  5406                           ;color.c: 305:     RatioMax = ((((((RedRatio) > (GreenRatio)) ? (RedRatio) : (GreenRatio
      +                          ))) > (BlueRatio)) ? ((((RedRatio) > (GreenRatio)) ? (RedRatio) : (GreenRatio))) : (Blue
      +                          Ratio));
  5407  000FA8  C084  F005         	movff	determine_color_new@GreenRatio,___flge@ff1
  5408  000FAC  C085  F006         	movff	determine_color_new@GreenRatio+1,___flge@ff1+1
  5409  000FB0  C086  F007         	movff	determine_color_new@GreenRatio+2,___flge@ff1+2
  5410  000FB4  C087  F008         	movff	determine_color_new@GreenRatio+3,___flge@ff1+3
  5411  000FB8  C080  F009         	movff	determine_color_new@RedRatio,___flge@ff2
  5412  000FBC  C081  F00A         	movff	determine_color_new@RedRatio+1,___flge@ff2+1
  5413  000FC0  C082  F00B         	movff	determine_color_new@RedRatio+2,___flge@ff2+2
  5414  000FC4  C083  F00C         	movff	determine_color_new@RedRatio+3,___flge@ff2+3
  5415  000FC8  EC77  F01A         	call	___flge	;wreg free
  5416  000FCC  A0D8               	btfss	status,0,c
  5417  000FCE  EFEB  F007         	goto	u3771
  5418  000FD2  EFED  F007         	goto	u3770
  5419  000FD6                     u3771:
  5420  000FD6  EFF7  F007         	goto	l80
  5421  000FDA                     u3770:
  5422  000FDA  C084  F060         	movff	determine_color_new@GreenRatio,_determine_color_new$230
  5423  000FDE  C085  F061         	movff	determine_color_new@GreenRatio+1,_determine_color_new$230+1
  5424  000FE2  C086  F062         	movff	determine_color_new@GreenRatio+2,_determine_color_new$230+2
  5425  000FE6  C087  F063         	movff	determine_color_new@GreenRatio+3,_determine_color_new$230+3
  5426  000FEA  EFFF  F007         	goto	l3989
  5427  000FEE                     l80:
  5428  000FEE  C080  F060         	movff	determine_color_new@RedRatio,_determine_color_new$230
  5429  000FF2  C081  F061         	movff	determine_color_new@RedRatio+1,_determine_color_new$230+1
  5430  000FF6  C082  F062         	movff	determine_color_new@RedRatio+2,_determine_color_new$230+2
  5431  000FFA  C083  F063         	movff	determine_color_new@RedRatio+3,_determine_color_new$230+3
  5432  000FFE                     l3989:
  5433  000FFE  C078  F005         	movff	determine_color_new@BlueRatio,___flge@ff1
  5434  001002  C079  F006         	movff	determine_color_new@BlueRatio+1,___flge@ff1+1
  5435  001006  C07A  F007         	movff	determine_color_new@BlueRatio+2,___flge@ff1+2
  5436  00100A  C07B  F008         	movff	determine_color_new@BlueRatio+3,___flge@ff1+3
  5437  00100E  C060  F009         	movff	_determine_color_new$230,___flge@ff2
  5438  001012  C061  F00A         	movff	_determine_color_new$230+1,___flge@ff2+1
  5439  001016  C062  F00B         	movff	_determine_color_new$230+2,___flge@ff2+2
  5440  00101A  C063  F00C         	movff	_determine_color_new$230+3,___flge@ff2+3
  5441  00101E  EC77  F01A         	call	___flge	;wreg free
  5442  001022  A0D8               	btfss	status,0,c
  5443  001024  EF16  F008         	goto	u3781
  5444  001028  EF18  F008         	goto	u3780
  5445  00102C                     u3781:
  5446  00102C  EF22  F008         	goto	l3993
  5447  001030                     u3780:
  5448  001030  C078  F08C         	movff	determine_color_new@BlueRatio,determine_color_new@RatioMax	;volatile
  5449  001034  C079  F08D         	movff	determine_color_new@BlueRatio+1,determine_color_new@RatioMax+1	;volatile
  5450  001038  C07A  F08E         	movff	determine_color_new@BlueRatio+2,determine_color_new@RatioMax+2	;volatile
  5451  00103C  C07B  F08F         	movff	determine_color_new@BlueRatio+3,determine_color_new@RatioMax+3	;volatile
  5452  001040  EF55  F008         	goto	l3997
  5453  001044                     l3993:
  5454  001044  C084  F005         	movff	determine_color_new@GreenRatio,___flge@ff1
  5455  001048  C085  F006         	movff	determine_color_new@GreenRatio+1,___flge@ff1+1
  5456  00104C  C086  F007         	movff	determine_color_new@GreenRatio+2,___flge@ff1+2
  5457  001050  C087  F008         	movff	determine_color_new@GreenRatio+3,___flge@ff1+3
  5458  001054  C080  F009         	movff	determine_color_new@RedRatio,___flge@ff2
  5459  001058  C081  F00A         	movff	determine_color_new@RedRatio+1,___flge@ff2+1
  5460  00105C  C082  F00B         	movff	determine_color_new@RedRatio+2,___flge@ff2+2
  5461  001060  C083  F00C         	movff	determine_color_new@RedRatio+3,___flge@ff2+3
  5462  001064  EC77  F01A         	call	___flge	;wreg free
  5463  001068  A0D8               	btfss	status,0,c
  5464  00106A  EF39  F008         	goto	u3791
  5465  00106E  EF3B  F008         	goto	u3790
  5466  001072                     u3791:
  5467  001072  EF45  F008         	goto	l84
  5468  001076                     u3790:
  5469  001076  C084  F064         	movff	determine_color_new@GreenRatio,_determine_color_new$231
  5470  00107A  C085  F065         	movff	determine_color_new@GreenRatio+1,_determine_color_new$231+1
  5471  00107E  C086  F066         	movff	determine_color_new@GreenRatio+2,_determine_color_new$231+2
  5472  001082  C087  F067         	movff	determine_color_new@GreenRatio+3,_determine_color_new$231+3
  5473  001086  EF4D  F008         	goto	l86
  5474  00108A                     l84:
  5475  00108A  C080  F064         	movff	determine_color_new@RedRatio,_determine_color_new$231
  5476  00108E  C081  F065         	movff	determine_color_new@RedRatio+1,_determine_color_new$231+1
  5477  001092  C082  F066         	movff	determine_color_new@RedRatio+2,_determine_color_new$231+2
  5478  001096  C083  F067         	movff	determine_color_new@RedRatio+3,_determine_color_new$231+3
  5479  00109A                     l86:
  5480  00109A  C064  F08C         	movff	_determine_color_new$231,determine_color_new@RatioMax	;volatile
  5481  00109E  C065  F08D         	movff	_determine_color_new$231+1,determine_color_new@RatioMax+1	;volatile
  5482  0010A2  C066  F08E         	movff	_determine_color_new$231+2,determine_color_new@RatioMax+2	;volatile
  5483  0010A6  C067  F08F         	movff	_determine_color_new$231+3,determine_color_new@RatioMax+3	;volatile
  5484  0010AA                     l3997:
  5485                           
  5486                           ;color.c: 306:     RatioMin = ((((((RedRatio) < (GreenRatio)) ? (RedRatio) : (GreenRatio
      +                          ))) < (BlueRatio)) ? ((((RedRatio) < (GreenRatio)) ? (RedRatio) : (GreenRatio))) : (Blue
      +                          Ratio));
  5487  0010AA  C080  F005         	movff	determine_color_new@RedRatio,___flge@ff1
  5488  0010AE  C081  F006         	movff	determine_color_new@RedRatio+1,___flge@ff1+1
  5489  0010B2  C082  F007         	movff	determine_color_new@RedRatio+2,___flge@ff1+2
  5490  0010B6  C083  F008         	movff	determine_color_new@RedRatio+3,___flge@ff1+3
  5491  0010BA  C084  F009         	movff	determine_color_new@GreenRatio,___flge@ff2
  5492  0010BE  C085  F00A         	movff	determine_color_new@GreenRatio+1,___flge@ff2+1
  5493  0010C2  C086  F00B         	movff	determine_color_new@GreenRatio+2,___flge@ff2+2
  5494  0010C6  C087  F00C         	movff	determine_color_new@GreenRatio+3,___flge@ff2+3
  5495  0010CA  EC77  F01A         	call	___flge	;wreg free
  5496  0010CE  A0D8               	btfss	status,0,c
  5497  0010D0  EF6C  F008         	goto	u3801
  5498  0010D4  EF6E  F008         	goto	u3800
  5499  0010D8                     u3801:
  5500  0010D8  EF78  F008         	goto	l92
  5501  0010DC                     u3800:
  5502  0010DC  C084  F068         	movff	determine_color_new@GreenRatio,_determine_color_new$232
  5503  0010E0  C085  F069         	movff	determine_color_new@GreenRatio+1,_determine_color_new$232+1
  5504  0010E4  C086  F06A         	movff	determine_color_new@GreenRatio+2,_determine_color_new$232+2
  5505  0010E8  C087  F06B         	movff	determine_color_new@GreenRatio+3,_determine_color_new$232+3
  5506  0010EC  EF80  F008         	goto	l4001
  5507  0010F0                     l92:
  5508  0010F0  C080  F068         	movff	determine_color_new@RedRatio,_determine_color_new$232
  5509  0010F4  C081  F069         	movff	determine_color_new@RedRatio+1,_determine_color_new$232+1
  5510  0010F8  C082  F06A         	movff	determine_color_new@RedRatio+2,_determine_color_new$232+2
  5511  0010FC  C083  F06B         	movff	determine_color_new@RedRatio+3,_determine_color_new$232+3
  5512  001100                     l4001:
  5513  001100  C068  F005         	movff	_determine_color_new$232,___flge@ff1
  5514  001104  C069  F006         	movff	_determine_color_new$232+1,___flge@ff1+1
  5515  001108  C06A  F007         	movff	_determine_color_new$232+2,___flge@ff1+2
  5516  00110C  C06B  F008         	movff	_determine_color_new$232+3,___flge@ff1+3
  5517  001110  C078  F009         	movff	determine_color_new@BlueRatio,___flge@ff2
  5518  001114  C079  F00A         	movff	determine_color_new@BlueRatio+1,___flge@ff2+1
  5519  001118  C07A  F00B         	movff	determine_color_new@BlueRatio+2,___flge@ff2+2
  5520  00111C  C07B  F00C         	movff	determine_color_new@BlueRatio+3,___flge@ff2+3
  5521  001120  EC77  F01A         	call	___flge	;wreg free
  5522  001124  A0D8               	btfss	status,0,c
  5523  001126  EF97  F008         	goto	u3811
  5524  00112A  EF99  F008         	goto	u3810
  5525  00112E                     u3811:
  5526  00112E  EFA3  F008         	goto	l4005
  5527  001132                     u3810:
  5528  001132  C078  F088         	movff	determine_color_new@BlueRatio,determine_color_new@RatioMin	;volatile
  5529  001136  C079  F089         	movff	determine_color_new@BlueRatio+1,determine_color_new@RatioMin+1	;volatile
  5530  00113A  C07A  F08A         	movff	determine_color_new@BlueRatio+2,determine_color_new@RatioMin+2	;volatile
  5531  00113E  C07B  F08B         	movff	determine_color_new@BlueRatio+3,determine_color_new@RatioMin+3	;volatile
  5532  001142  EFD6  F008         	goto	l4009
  5533  001146                     l4005:
  5534  001146  C080  F005         	movff	determine_color_new@RedRatio,___flge@ff1
  5535  00114A  C081  F006         	movff	determine_color_new@RedRatio+1,___flge@ff1+1
  5536  00114E  C082  F007         	movff	determine_color_new@RedRatio+2,___flge@ff1+2
  5537  001152  C083  F008         	movff	determine_color_new@RedRatio+3,___flge@ff1+3
  5538  001156  C084  F009         	movff	determine_color_new@GreenRatio,___flge@ff2
  5539  00115A  C085  F00A         	movff	determine_color_new@GreenRatio+1,___flge@ff2+1
  5540  00115E  C086  F00B         	movff	determine_color_new@GreenRatio+2,___flge@ff2+2
  5541  001162  C087  F00C         	movff	determine_color_new@GreenRatio+3,___flge@ff2+3
  5542  001166  EC77  F01A         	call	___flge	;wreg free
  5543  00116A  A0D8               	btfss	status,0,c
  5544  00116C  EFBA  F008         	goto	u3821
  5545  001170  EFBC  F008         	goto	u3820
  5546  001174                     u3821:
  5547  001174  EFC6  F008         	goto	l96
  5548  001178                     u3820:
  5549  001178  C084  F06C         	movff	determine_color_new@GreenRatio,_determine_color_new$233
  5550  00117C  C085  F06D         	movff	determine_color_new@GreenRatio+1,_determine_color_new$233+1
  5551  001180  C086  F06E         	movff	determine_color_new@GreenRatio+2,_determine_color_new$233+2
  5552  001184  C087  F06F         	movff	determine_color_new@GreenRatio+3,_determine_color_new$233+3
  5553  001188  EFCE  F008         	goto	l98
  5554  00118C                     l96:
  5555  00118C  C080  F06C         	movff	determine_color_new@RedRatio,_determine_color_new$233
  5556  001190  C081  F06D         	movff	determine_color_new@RedRatio+1,_determine_color_new$233+1
  5557  001194  C082  F06E         	movff	determine_color_new@RedRatio+2,_determine_color_new$233+2
  5558  001198  C083  F06F         	movff	determine_color_new@RedRatio+3,_determine_color_new$233+3
  5559  00119C                     l98:
  5560  00119C  C06C  F088         	movff	_determine_color_new$233,determine_color_new@RatioMin	;volatile
  5561  0011A0  C06D  F089         	movff	_determine_color_new$233+1,determine_color_new@RatioMin+1	;volatile
  5562  0011A4  C06E  F08A         	movff	_determine_color_new$233+2,determine_color_new@RatioMin+2	;volatile
  5563  0011A8  C06F  F08B         	movff	_determine_color_new$233+3,determine_color_new@RatioMin+3	;volatile
  5564  0011AC                     l4009:
  5565                           
  5566                           ;color.c: 308:     if (RatioMax > 0)
  5567  0011AC  0E00               	movlw	0
  5568  0011AE  6E05               	movwf	___flge@ff1^0,c
  5569  0011B0  0E00               	movlw	0
  5570  0011B2  6E06               	movwf	(___flge@ff1+1)^0,c
  5571  0011B4  0E00               	movlw	0
  5572  0011B6  6E07               	movwf	(___flge@ff1+2)^0,c
  5573  0011B8  0E00               	movlw	0
  5574  0011BA  6E08               	movwf	(___flge@ff1+3)^0,c
  5575  0011BC  C08C  F009         	movff	determine_color_new@RatioMax,___flge@ff2	;volatile
  5576  0011C0  C08D  F00A         	movff	determine_color_new@RatioMax+1,___flge@ff2+1	;volatile
  5577  0011C4  C08E  F00B         	movff	determine_color_new@RatioMax+2,___flge@ff2+2	;volatile
  5578  0011C8  C08F  F00C         	movff	determine_color_new@RatioMax+3,___flge@ff2+3	;volatile
  5579  0011CC  EC77  F01A         	call	___flge	;wreg free
  5580  0011D0  B0D8               	btfsc	status,0,c
  5581  0011D2  EFED  F008         	goto	u3831
  5582  0011D6  EFEF  F008         	goto	u3830
  5583  0011DA                     u3831:
  5584  0011DA  EF1D  F009         	goto	l4013
  5585  0011DE                     u3830:
  5586  0011DE                     
  5587                           ;color.c: 309:         Saturation = (RatioMax - RatioMin) / RatioMax;
  5588  0011DE  C088  F03B         	movff	determine_color_new@RatioMin,___flsub@a	;volatile
  5589  0011E2  C089  F03C         	movff	determine_color_new@RatioMin+1,___flsub@a+1	;volatile
  5590  0011E6  C08A  F03D         	movff	determine_color_new@RatioMin+2,___flsub@a+2	;volatile
  5591  0011EA  C08B  F03E         	movff	determine_color_new@RatioMin+3,___flsub@a+3	;volatile
  5592  0011EE  C08C  F037         	movff	determine_color_new@RatioMax,___flsub@b	;volatile
  5593  0011F2  C08D  F038         	movff	determine_color_new@RatioMax+1,___flsub@b+1	;volatile
  5594  0011F6  C08E  F039         	movff	determine_color_new@RatioMax+2,___flsub@b+2	;volatile
  5595  0011FA  C08F  F03A         	movff	determine_color_new@RatioMax+3,___flsub@b+3	;volatile
  5596  0011FE  EC00  F01E         	call	___flsub	;wreg free
  5597  001202  C037  F01E         	movff	?___flsub,___fldiv@b
  5598  001206  C038  F01F         	movff	?___flsub+1,___fldiv@b+1
  5599  00120A  C039  F020         	movff	?___flsub+2,___fldiv@b+2
  5600  00120E  C03A  F021         	movff	?___flsub+3,___fldiv@b+3
  5601  001212  C08C  F022         	movff	determine_color_new@RatioMax,___fldiv@a	;volatile
  5602  001216  C08D  F023         	movff	determine_color_new@RatioMax+1,___fldiv@a+1	;volatile
  5603  00121A  C08E  F024         	movff	determine_color_new@RatioMax+2,___fldiv@a+2	;volatile
  5604  00121E  C08F  F025         	movff	determine_color_new@RatioMax+3,___fldiv@a+3	;volatile
  5605  001222  ECCD  F011         	call	___fldiv	;wreg free
  5606  001226  C01E  F07C         	movff	?___fldiv,determine_color_new@Saturation	;volatile
  5607  00122A  C01F  F07D         	movff	?___fldiv+1,determine_color_new@Saturation+1	;volatile
  5608  00122E  C020  F07E         	movff	?___fldiv+2,determine_color_new@Saturation+2	;volatile
  5609  001232  C021  F07F         	movff	?___fldiv+3,determine_color_new@Saturation+3	;volatile
  5610  001236  EF26  F009         	goto	l4015
  5611  00123A                     l4013:
  5612                           
  5613                           ;color.c: 311:         Saturation = 0;
  5614  00123A  0E00               	movlw	0
  5615  00123C  0100               	movlb	0	; () banked
  5616  00123E  6F7C               	movwf	determine_color_new@Saturation& (0+255),b	;volatile
  5617  001240  0E00               	movlw	0
  5618  001242  6F7D               	movwf	(determine_color_new@Saturation+1)& (0+255),b	;volatile
  5619  001244  0E00               	movlw	0
  5620  001246  6F7E               	movwf	(determine_color_new@Saturation+2)& (0+255),b	;volatile
  5621  001248  0E00               	movlw	0
  5622  00124A  6F7F               	movwf	(determine_color_new@Saturation+3)& (0+255),b	;volatile
  5623  00124C                     l4015:
  5624                           
  5625                           ;color.c: 313:     if (Saturation == 0)
  5626  00124C  C07C  F005         	movff	determine_color_new@Saturation,___fleq@ff1	;volatile
  5627  001250  C07D  F006         	movff	determine_color_new@Saturation+1,___fleq@ff1+1	;volatile
  5628  001254  C07E  F007         	movff	determine_color_new@Saturation+2,___fleq@ff1+2	;volatile
  5629  001258  C07F  F008         	movff	determine_color_new@Saturation+3,___fleq@ff1+3	;volatile
  5630  00125C  0E00               	movlw	0
  5631  00125E  6E09               	movwf	___fleq@ff2^0,c
  5632  001260  0E00               	movlw	0
  5633  001262  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5634  001264  0E00               	movlw	0
  5635  001266  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5636  001268  0E00               	movlw	0
  5637  00126A  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5638  00126C  ECC1  F01B         	call	___fleq	;wreg free
  5639  001270  A0D8               	btfss	status,0,c
  5640  001272  EF3D  F009         	goto	u3841
  5641  001276  EF3F  F009         	goto	u3840
  5642  00127A                     u3841:
  5643  00127A  EF4A  F009         	goto	l4019
  5644  00127E                     u3840:
  5645  00127E                     
  5646                           ;color.c: 314:         Hue = 0;
  5647  00127E  0E00               	movlw	0
  5648  001280  0100               	movlb	0	; () banked
  5649  001282  6F74               	movwf	determine_color_new@Hue& (0+255),b
  5650  001284  0E00               	movlw	0
  5651  001286  6F75               	movwf	(determine_color_new@Hue+1)& (0+255),b
  5652  001288  0E00               	movlw	0
  5653  00128A  6F76               	movwf	(determine_color_new@Hue+2)& (0+255),b
  5654  00128C  0E00               	movlw	0
  5655  00128E  6F77               	movwf	(determine_color_new@Hue+3)& (0+255),b
  5656  001290  EFAA  F00A         	goto	l4033
  5657  001294                     l4019:
  5658                           
  5659                           ;color.c: 316:     {;color.c: 317:         if (RatioMax == RedRatio)
  5660  001294  C08C  F005         	movff	determine_color_new@RatioMax,___fleq@ff1	;volatile
  5661  001298  C08D  F006         	movff	determine_color_new@RatioMax+1,___fleq@ff1+1	;volatile
  5662  00129C  C08E  F007         	movff	determine_color_new@RatioMax+2,___fleq@ff1+2	;volatile
  5663  0012A0  C08F  F008         	movff	determine_color_new@RatioMax+3,___fleq@ff1+3	;volatile
  5664  0012A4  C080  F009         	movff	determine_color_new@RedRatio,___fleq@ff2
  5665  0012A8  C081  F00A         	movff	determine_color_new@RedRatio+1,___fleq@ff2+1
  5666  0012AC  C082  F00B         	movff	determine_color_new@RedRatio+2,___fleq@ff2+2
  5667  0012B0  C083  F00C         	movff	determine_color_new@RedRatio+3,___fleq@ff2+3
  5668  0012B4  ECC1  F01B         	call	___fleq	;wreg free
  5669  0012B8  A0D8               	btfss	status,0,c
  5670  0012BA  EF61  F009         	goto	u3851
  5671  0012BE  EF63  F009         	goto	u3850
  5672  0012C2                     u3851:
  5673  0012C2  EFA3  F009         	goto	l4023
  5674  0012C6                     u3850:
  5675  0012C6                     
  5676                           ;color.c: 318:             Hue = (GreenRatio - BlueRatio) / (RatioMax - RatioMin);
  5677  0012C6  C078  F03B         	movff	determine_color_new@BlueRatio,___flsub@a
  5678  0012CA  C079  F03C         	movff	determine_color_new@BlueRatio+1,___flsub@a+1
  5679  0012CE  C07A  F03D         	movff	determine_color_new@BlueRatio+2,___flsub@a+2
  5680  0012D2  C07B  F03E         	movff	determine_color_new@BlueRatio+3,___flsub@a+3
  5681  0012D6  C084  F037         	movff	determine_color_new@GreenRatio,___flsub@b
  5682  0012DA  C085  F038         	movff	determine_color_new@GreenRatio+1,___flsub@b+1
  5683  0012DE  C086  F039         	movff	determine_color_new@GreenRatio+2,___flsub@b+2
  5684  0012E2  C087  F03A         	movff	determine_color_new@GreenRatio+3,___flsub@b+3
  5685  0012E6  EC00  F01E         	call	___flsub	;wreg free
  5686  0012EA  C037  F01E         	movff	?___flsub,___fldiv@b
  5687  0012EE  C038  F01F         	movff	?___flsub+1,___fldiv@b+1
  5688  0012F2  C039  F020         	movff	?___flsub+2,___fldiv@b+2
  5689  0012F6  C03A  F021         	movff	?___flsub+3,___fldiv@b+3
  5690  0012FA  C088  F03B         	movff	determine_color_new@RatioMin,___flsub@a	;volatile
  5691  0012FE  C089  F03C         	movff	determine_color_new@RatioMin+1,___flsub@a+1	;volatile
  5692  001302  C08A  F03D         	movff	determine_color_new@RatioMin+2,___flsub@a+2	;volatile
  5693  001306  C08B  F03E         	movff	determine_color_new@RatioMin+3,___flsub@a+3	;volatile
  5694  00130A  C08C  F037         	movff	determine_color_new@RatioMax,___flsub@b	;volatile
  5695  00130E  C08D  F038         	movff	determine_color_new@RatioMax+1,___flsub@b+1	;volatile
  5696  001312  C08E  F039         	movff	determine_color_new@RatioMax+2,___flsub@b+2	;volatile
  5697  001316  C08F  F03A         	movff	determine_color_new@RatioMax+3,___flsub@b+3	;volatile
  5698  00131A  EC00  F01E         	call	___flsub	;wreg free
  5699  00131E  C037  F022         	movff	?___flsub,___fldiv@a
  5700  001322  C038  F023         	movff	?___flsub+1,___fldiv@a+1
  5701  001326  C039  F024         	movff	?___flsub+2,___fldiv@a+2
  5702  00132A  C03A  F025         	movff	?___flsub+3,___fldiv@a+3
  5703  00132E  ECCD  F011         	call	___fldiv	;wreg free
  5704  001332  C01E  F074         	movff	?___fldiv,determine_color_new@Hue
  5705  001336  C01F  F075         	movff	?___fldiv+1,determine_color_new@Hue+1
  5706  00133A  C020  F076         	movff	?___fldiv+2,determine_color_new@Hue+2
  5707  00133E  C021  F077         	movff	?___fldiv+3,determine_color_new@Hue+3
  5708  001342  EF6E  F00A         	goto	l104
  5709  001346                     l4023:
  5710  001346  C08C  F005         	movff	determine_color_new@RatioMax,___fleq@ff1	;volatile
  5711  00134A  C08D  F006         	movff	determine_color_new@RatioMax+1,___fleq@ff1+1	;volatile
  5712  00134E  C08E  F007         	movff	determine_color_new@RatioMax+2,___fleq@ff1+2	;volatile
  5713  001352  C08F  F008         	movff	determine_color_new@RatioMax+3,___fleq@ff1+3	;volatile
  5714  001356  C084  F009         	movff	determine_color_new@GreenRatio,___fleq@ff2
  5715  00135A  C085  F00A         	movff	determine_color_new@GreenRatio+1,___fleq@ff2+1
  5716  00135E  C086  F00B         	movff	determine_color_new@GreenRatio+2,___fleq@ff2+2
  5717  001362  C087  F00C         	movff	determine_color_new@GreenRatio+3,___fleq@ff2+3
  5718  001366  ECC1  F01B         	call	___fleq	;wreg free
  5719  00136A  A0D8               	btfss	status,0,c
  5720  00136C  EFBA  F009         	goto	u3861
  5721  001370  EFBC  F009         	goto	u3860
  5722  001374                     u3861:
  5723  001374  EF16  F00A         	goto	l4027
  5724  001378                     u3860:
  5725  001378                     
  5726                           ;color.c: 320:             Hue = 2 + (BlueRatio - RedRatio) / (RatioMax - RatioMin);
  5727  001378  C088  F03B         	movff	determine_color_new@RatioMin,___flsub@a	;volatile
  5728  00137C  C089  F03C         	movff	determine_color_new@RatioMin+1,___flsub@a+1	;volatile
  5729  001380  C08A  F03D         	movff	determine_color_new@RatioMin+2,___flsub@a+2	;volatile
  5730  001384  C08B  F03E         	movff	determine_color_new@RatioMin+3,___flsub@a+3	;volatile
  5731  001388  C08C  F037         	movff	determine_color_new@RatioMax,___flsub@b	;volatile
  5732  00138C  C08D  F038         	movff	determine_color_new@RatioMax+1,___flsub@b+1	;volatile
  5733  001390  C08E  F039         	movff	determine_color_new@RatioMax+2,___flsub@b+2	;volatile
  5734  001394  C08F  F03A         	movff	determine_color_new@RatioMax+3,___flsub@b+3	;volatile
  5735  001398  EC00  F01E         	call	___flsub	;wreg free
  5736  00139C  C037  F022         	movff	?___flsub,___fldiv@a
  5737  0013A0  C038  F023         	movff	?___flsub+1,___fldiv@a+1
  5738  0013A4  C039  F024         	movff	?___flsub+2,___fldiv@a+2
  5739  0013A8  C03A  F025         	movff	?___flsub+3,___fldiv@a+3
  5740  0013AC  C080  F03B         	movff	determine_color_new@RedRatio,___flsub@a
  5741  0013B0  C081  F03C         	movff	determine_color_new@RedRatio+1,___flsub@a+1
  5742  0013B4  C082  F03D         	movff	determine_color_new@RedRatio+2,___flsub@a+2
  5743  0013B8  C083  F03E         	movff	determine_color_new@RedRatio+3,___flsub@a+3
  5744  0013BC  C078  F037         	movff	determine_color_new@BlueRatio,___flsub@b
  5745  0013C0  C079  F038         	movff	determine_color_new@BlueRatio+1,___flsub@b+1
  5746  0013C4  C07A  F039         	movff	determine_color_new@BlueRatio+2,___flsub@b+2
  5747  0013C8  C07B  F03A         	movff	determine_color_new@BlueRatio+3,___flsub@b+3
  5748  0013CC  EC00  F01E         	call	___flsub	;wreg free
  5749  0013D0  C037  F01E         	movff	?___flsub,___fldiv@b
  5750  0013D4  C038  F01F         	movff	?___flsub+1,___fldiv@b+1
  5751  0013D8  C039  F020         	movff	?___flsub+2,___fldiv@b+2
  5752  0013DC  C03A  F021         	movff	?___flsub+3,___fldiv@b+3
  5753  0013E0  ECCD  F011         	call	___fldiv	;wreg free
  5754  0013E4  C01E  F070         	movff	?___fldiv,_determine_color_new$2652
  5755  0013E8  C01F  F071         	movff	?___fldiv+1,_determine_color_new$2652+1
  5756  0013EC  C020  F072         	movff	?___fldiv+2,_determine_color_new$2652+2
  5757  0013F0  C021  F073         	movff	?___fldiv+3,_determine_color_new$2652+3
  5758                           
  5759                           ;color.c: 320:             Hue = 2 + (BlueRatio - RedRatio) / (RatioMax - RatioMin);
  5760  0013F4  C070  F005         	movff	_determine_color_new$2652,___fladd@b
  5761  0013F8  C071  F006         	movff	_determine_color_new$2652+1,___fladd@b+1
  5762  0013FC  C072  F007         	movff	_determine_color_new$2652+2,___fladd@b+2
  5763  001400  C073  F008         	movff	_determine_color_new$2652+3,___fladd@b+3
  5764  001404  0E00               	movlw	0
  5765  001406  6E09               	movwf	___fladd@a^0,c
  5766  001408  0E00               	movlw	0
  5767  00140A  6E0A               	movwf	(___fladd@a+1)^0,c
  5768  00140C  0E00               	movlw	0
  5769  00140E  6E0B               	movwf	(___fladd@a+2)^0,c
  5770  001410  0E40               	movlw	64
  5771  001412  6E0C               	movwf	(___fladd@a+3)^0,c
  5772  001414  EC58  F00D         	call	___fladd	;wreg free
  5773  001418  C005  F074         	movff	?___fladd,determine_color_new@Hue
  5774  00141C  C006  F075         	movff	?___fladd+1,determine_color_new@Hue+1
  5775  001420  C007  F076         	movff	?___fladd+2,determine_color_new@Hue+2
  5776  001424  C008  F077         	movff	?___fladd+3,determine_color_new@Hue+3
  5777  001428  EF6E  F00A         	goto	l104
  5778  00142C                     l4027:
  5779                           
  5780                           ;color.c: 322:             Hue = 4 + (RedRatio - GreenRatio) / (RatioMax - RatioMin);
  5781  00142C  C088  F03B         	movff	determine_color_new@RatioMin,___flsub@a	;volatile
  5782  001430  C089  F03C         	movff	determine_color_new@RatioMin+1,___flsub@a+1	;volatile
  5783  001434  C08A  F03D         	movff	determine_color_new@RatioMin+2,___flsub@a+2	;volatile
  5784  001438  C08B  F03E         	movff	determine_color_new@RatioMin+3,___flsub@a+3	;volatile
  5785  00143C  C08C  F037         	movff	determine_color_new@RatioMax,___flsub@b	;volatile
  5786  001440  C08D  F038         	movff	determine_color_new@RatioMax+1,___flsub@b+1	;volatile
  5787  001444  C08E  F039         	movff	determine_color_new@RatioMax+2,___flsub@b+2	;volatile
  5788  001448  C08F  F03A         	movff	determine_color_new@RatioMax+3,___flsub@b+3	;volatile
  5789  00144C  EC00  F01E         	call	___flsub	;wreg free
  5790  001450  C037  F022         	movff	?___flsub,___fldiv@a
  5791  001454  C038  F023         	movff	?___flsub+1,___fldiv@a+1
  5792  001458  C039  F024         	movff	?___flsub+2,___fldiv@a+2
  5793  00145C  C03A  F025         	movff	?___flsub+3,___fldiv@a+3
  5794  001460  C084  F03B         	movff	determine_color_new@GreenRatio,___flsub@a
  5795  001464  C085  F03C         	movff	determine_color_new@GreenRatio+1,___flsub@a+1
  5796  001468  C086  F03D         	movff	determine_color_new@GreenRatio+2,___flsub@a+2
  5797  00146C  C087  F03E         	movff	determine_color_new@GreenRatio+3,___flsub@a+3
  5798  001470  C080  F037         	movff	determine_color_new@RedRatio,___flsub@b
  5799  001474  C081  F038         	movff	determine_color_new@RedRatio+1,___flsub@b+1
  5800  001478  C082  F039         	movff	determine_color_new@RedRatio+2,___flsub@b+2
  5801  00147C  C083  F03A         	movff	determine_color_new@RedRatio+3,___flsub@b+3
  5802  001480  EC00  F01E         	call	___flsub	;wreg free
  5803  001484  C037  F01E         	movff	?___flsub,___fldiv@b
  5804  001488  C038  F01F         	movff	?___flsub+1,___fldiv@b+1
  5805  00148C  C039  F020         	movff	?___flsub+2,___fldiv@b+2
  5806  001490  C03A  F021         	movff	?___flsub+3,___fldiv@b+3
  5807  001494  ECCD  F011         	call	___fldiv	;wreg free
  5808  001498  C01E  F070         	movff	?___fldiv,_determine_color_new$2652
  5809  00149C  C01F  F071         	movff	?___fldiv+1,_determine_color_new$2652+1
  5810  0014A0  C020  F072         	movff	?___fldiv+2,_determine_color_new$2652+2
  5811  0014A4  C021  F073         	movff	?___fldiv+3,_determine_color_new$2652+3
  5812                           
  5813                           ;color.c: 322:             Hue = 4 + (RedRatio - GreenRatio) / (RatioMax - RatioMin);
  5814  0014A8  C070  F005         	movff	_determine_color_new$2652,___fladd@b
  5815  0014AC  C071  F006         	movff	_determine_color_new$2652+1,___fladd@b+1
  5816  0014B0  C072  F007         	movff	_determine_color_new$2652+2,___fladd@b+2
  5817  0014B4  C073  F008         	movff	_determine_color_new$2652+3,___fladd@b+3
  5818  0014B8  0E00               	movlw	0
  5819  0014BA  6E09               	movwf	___fladd@a^0,c
  5820  0014BC  0E00               	movlw	0
  5821  0014BE  6E0A               	movwf	(___fladd@a+1)^0,c
  5822  0014C0  0E80               	movlw	128
  5823  0014C2  6E0B               	movwf	(___fladd@a+2)^0,c
  5824  0014C4  0E40               	movlw	64
  5825  0014C6  6E0C               	movwf	(___fladd@a+3)^0,c
  5826  0014C8  EC58  F00D         	call	___fladd	;wreg free
  5827  0014CC  C005  F074         	movff	?___fladd,determine_color_new@Hue
  5828  0014D0  C006  F075         	movff	?___fladd+1,determine_color_new@Hue+1
  5829  0014D4  C007  F076         	movff	?___fladd+2,determine_color_new@Hue+2
  5830  0014D8  C008  F077         	movff	?___fladd+3,determine_color_new@Hue+3
  5831  0014DC                     l104:
  5832                           
  5833                           ;color.c: 324:         Hue = Hue / 6;
  5834  0014DC  C074  F01E         	movff	determine_color_new@Hue,___fldiv@b
  5835  0014E0  C075  F01F         	movff	determine_color_new@Hue+1,___fldiv@b+1
  5836  0014E4  C076  F020         	movff	determine_color_new@Hue+2,___fldiv@b+2
  5837  0014E8  C077  F021         	movff	determine_color_new@Hue+3,___fldiv@b+3
  5838  0014EC  0E00               	movlw	0
  5839  0014EE  6E22               	movwf	___fldiv@a^0,c
  5840  0014F0  0E00               	movlw	0
  5841  0014F2  6E23               	movwf	(___fldiv@a+1)^0,c
  5842  0014F4  0EC0               	movlw	192
  5843  0014F6  6E24               	movwf	(___fldiv@a+2)^0,c
  5844  0014F8  0E40               	movlw	64
  5845  0014FA  6E25               	movwf	(___fldiv@a+3)^0,c
  5846  0014FC  ECCD  F011         	call	___fldiv	;wreg free
  5847  001500  C01E  F074         	movff	?___fldiv,determine_color_new@Hue
  5848  001504  C01F  F075         	movff	?___fldiv+1,determine_color_new@Hue+1
  5849  001508  C020  F076         	movff	?___fldiv+2,determine_color_new@Hue+2
  5850  00150C  C021  F077         	movff	?___fldiv+3,determine_color_new@Hue+3
  5851  001510                     
  5852                           ;color.c: 326:         if (Hue < 0)
  5853  001510  0100               	movlb	0	; () banked
  5854  001512  BF77               	btfsc	(determine_color_new@Hue+3)& (0+255),7,b
  5855  001514  EF90  F00A         	goto	u3870
  5856  001518  EF8E  F00A         	goto	u3871
  5857  00151C                     u3871:
  5858  00151C  EFAA  F00A         	goto	l4033
  5859  001520                     u3870:
  5860  001520                     
  5861                           ; BSR set to: 0
  5862                           ;color.c: 327:             Hue += 1;
  5863  001520  C074  F005         	movff	determine_color_new@Hue,___fladd@b
  5864  001524  C075  F006         	movff	determine_color_new@Hue+1,___fladd@b+1
  5865  001528  C076  F007         	movff	determine_color_new@Hue+2,___fladd@b+2
  5866  00152C  C077  F008         	movff	determine_color_new@Hue+3,___fladd@b+3
  5867  001530  0E00               	movlw	0
  5868  001532  6E09               	movwf	___fladd@a^0,c
  5869  001534  0E00               	movlw	0
  5870  001536  6E0A               	movwf	(___fladd@a+1)^0,c
  5871  001538  0E80               	movlw	128
  5872  00153A  6E0B               	movwf	(___fladd@a+2)^0,c
  5873  00153C  0E3F               	movlw	63
  5874  00153E  6E0C               	movwf	(___fladd@a+3)^0,c
  5875  001540  EC58  F00D         	call	___fladd	;wreg free
  5876  001544  C005  F074         	movff	?___fladd,determine_color_new@Hue
  5877  001548  C006  F075         	movff	?___fladd+1,determine_color_new@Hue+1
  5878  00154C  C007  F076         	movff	?___fladd+2,determine_color_new@Hue+2
  5879  001550  C008  F077         	movff	?___fladd+3,determine_color_new@Hue+3
  5880  001554                     l4033:
  5881                           
  5882                           ;color.c: 330:     return Hue;
  5883  001554  C074  F03F         	movff	determine_color_new@Hue,?_determine_color_new
  5884  001558  C075  F040         	movff	determine_color_new@Hue+1,?_determine_color_new+1
  5885  00155C  C076  F041         	movff	determine_color_new@Hue+2,?_determine_color_new+2
  5886  001560  C077  F042         	movff	determine_color_new@Hue+3,?_determine_color_new+3
  5887  001564  0012               	return		;funcret
  5888  001566                     __end_of_determine_color_new:
  5889                           	callstack 0
  5890                           
  5891 ;; *************** function ___xxtofl *****************
  5892 ;; Defined at:
  5893 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  sign            1    wreg     unsigned char 
  5896 ;;  val             4   10[COMRAM] long 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  sign            1   18[COMRAM] unsigned char 
  5899 ;;  arg             4   20[COMRAM] unsigned long 
  5900 ;;  exp             1   19[COMRAM] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  4   10[COMRAM] unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;Total ram usage:       14 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 2
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_determine_color_new
  5921 ;;		_main
  5922 ;;		_determine_color1
  5923 ;;		_determine_color2
  5924 ;;		_determine_color3
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text29
  5929  002DA4                     __ptext29:
  5930                           	callstack 0
  5931  002DA4                     ___xxtofl:
  5932                           	callstack 27
  5933                           
  5934                           ;incstack = 0
  5935                           ;___xxtofl@sign stored from wreg
  5936  002DA4  6E13               	movwf	___xxtofl@sign^0,c
  5937  002DA6  5013               	movf	___xxtofl@sign^0,w,c
  5938  002DA8  B4D8               	btfsc	status,2,c
  5939  002DAA  EFD9  F016         	goto	u3661
  5940  002DAE  EFDB  F016         	goto	u3660
  5941  002DB2                     u3661:
  5942  002DB2  EFFD  F016         	goto	l1100
  5943  002DB6                     u3660:
  5944  002DB6  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  5945  002DB8  EFE2  F016         	goto	u3670
  5946  002DBC  EFE0  F016         	goto	u3671
  5947  002DC0                     u3671:
  5948  002DC0  EFFD  F016         	goto	l1100
  5949  002DC4                     u3670:
  5950  002DC4  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  5951  002DC8  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  5952  002DCC  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  5953  002DD0  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  5954  002DD4  1E0F               	comf	??___xxtofl^0,f,c
  5955  002DD6  1E10               	comf	(??___xxtofl+1)^0,f,c
  5956  002DD8  1E11               	comf	(??___xxtofl+2)^0,f,c
  5957  002DDA  1E12               	comf	(??___xxtofl+3)^0,f,c
  5958  002DDC  2A0F               	incf	??___xxtofl^0,f,c
  5959  002DDE  0E00               	movlw	0
  5960  002DE0  2210               	addwfc	(??___xxtofl+1)^0,f,c
  5961  002DE2  2211               	addwfc	(??___xxtofl+2)^0,f,c
  5962  002DE4  2212               	addwfc	(??___xxtofl+3)^0,f,c
  5963  002DE6  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  5964  002DEA  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  5965  002DEE  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  5966  002DF2  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  5967  002DF6  EF05  F017         	goto	l3905
  5968  002DFA                     l1100:
  5969  002DFA  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  5970  002DFE  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5971  002E02  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5972  002E06  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5973  002E0A                     l3905:
  5974  002E0A  500B               	movf	___xxtofl@val^0,w,c
  5975  002E0C  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  5976  002E0E  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  5977  002E10  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  5978  002E12  A4D8               	btfss	status,2,c
  5979  002E14  EF0E  F017         	goto	u3681
  5980  002E18  EF10  F017         	goto	u3680
  5981  002E1C                     u3681:
  5982  002E1C  EF1A  F017         	goto	l3911
  5983  002E20                     u3680:
  5984  002E20  0E00               	movlw	0
  5985  002E22  6E0B               	movwf	?___xxtofl^0,c
  5986  002E24  0E00               	movlw	0
  5987  002E26  6E0C               	movwf	(?___xxtofl+1)^0,c
  5988  002E28  0E00               	movlw	0
  5989  002E2A  6E0D               	movwf	(?___xxtofl+2)^0,c
  5990  002E2C  0E00               	movlw	0
  5991  002E2E  6E0E               	movwf	(?___xxtofl+3)^0,c
  5992  002E30  EFAB  F017         	goto	l1103
  5993  002E34                     l3911:
  5994  002E34  0E96               	movlw	150
  5995  002E36  6E14               	movwf	___xxtofl@exp^0,c
  5996  002E38  EF24  F017         	goto	l3915
  5997  002E3C                     l3913:
  5998  002E3C  2A14               	incf	___xxtofl@exp^0,f,c
  5999  002E3E  90D8               	bcf	status,0,c
  6000  002E40  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  6001  002E42  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  6002  002E44  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  6003  002E46  3215               	rrcf	___xxtofl@arg^0,f,c
  6004  002E48                     l3915:
  6005  002E48  0E00               	movlw	0
  6006  002E4A  1415               	andwf	___xxtofl@arg^0,w,c
  6007  002E4C  6E0F               	movwf	??___xxtofl^0,c
  6008  002E4E  0E00               	movlw	0
  6009  002E50  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  6010  002E52  6E10               	movwf	(??___xxtofl+1)^0,c
  6011  002E54  0E00               	movlw	0
  6012  002E56  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  6013  002E58  6E11               	movwf	(??___xxtofl+2)^0,c
  6014  002E5A  0EFE               	movlw	254
  6015  002E5C  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  6016  002E5E  6E12               	movwf	(??___xxtofl+3)^0,c
  6017  002E60  500F               	movf	??___xxtofl^0,w,c
  6018  002E62  1010               	iorwf	(??___xxtofl+1)^0,w,c
  6019  002E64  1011               	iorwf	(??___xxtofl+2)^0,w,c
  6020  002E66  1012               	iorwf	(??___xxtofl+3)^0,w,c
  6021  002E68  A4D8               	btfss	status,2,c
  6022  002E6A  EF39  F017         	goto	u3691
  6023  002E6E  EF3B  F017         	goto	u3690
  6024  002E72                     u3691:
  6025  002E72  EF1E  F017         	goto	l3913
  6026  002E76                     u3690:
  6027  002E76  EF49  F017         	goto	l1107
  6028  002E7A                     l3917:
  6029  002E7A  2A14               	incf	___xxtofl@exp^0,f,c
  6030  002E7C  0E01               	movlw	1
  6031  002E7E  2615               	addwf	___xxtofl@arg^0,f,c
  6032  002E80  0E00               	movlw	0
  6033  002E82  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  6034  002E84  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  6035  002E86  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  6036  002E88  90D8               	bcf	status,0,c
  6037  002E8A  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  6038  002E8C  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  6039  002E8E  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  6040  002E90  3215               	rrcf	___xxtofl@arg^0,f,c
  6041  002E92                     l1107:
  6042  002E92  0E00               	movlw	0
  6043  002E94  1415               	andwf	___xxtofl@arg^0,w,c
  6044  002E96  6E0F               	movwf	??___xxtofl^0,c
  6045  002E98  0E00               	movlw	0
  6046  002E9A  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  6047  002E9C  6E10               	movwf	(??___xxtofl+1)^0,c
  6048  002E9E  0E00               	movlw	0
  6049  002EA0  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  6050  002EA2  6E11               	movwf	(??___xxtofl+2)^0,c
  6051  002EA4  0EFF               	movlw	255
  6052  002EA6  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  6053  002EA8  6E12               	movwf	(??___xxtofl+3)^0,c
  6054  002EAA  500F               	movf	??___xxtofl^0,w,c
  6055  002EAC  1010               	iorwf	(??___xxtofl+1)^0,w,c
  6056  002EAE  1011               	iorwf	(??___xxtofl+2)^0,w,c
  6057  002EB0  1012               	iorwf	(??___xxtofl+3)^0,w,c
  6058  002EB2  A4D8               	btfss	status,2,c
  6059  002EB4  EF5E  F017         	goto	u3701
  6060  002EB8  EF60  F017         	goto	u3700
  6061  002EBC                     u3701:
  6062  002EBC  EF3D  F017         	goto	l3917
  6063  002EC0                     u3700:
  6064  002EC0  EF68  F017         	goto	l3925
  6065  002EC4                     l3923:
  6066  002EC4  0614               	decf	___xxtofl@exp^0,f,c
  6067  002EC6  90D8               	bcf	status,0,c
  6068  002EC8  3615               	rlcf	___xxtofl@arg^0,f,c
  6069  002ECA  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  6070  002ECC  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  6071  002ECE  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  6072  002ED0                     l3925:
  6073  002ED0  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  6074  002ED2  EF6D  F017         	goto	u3711
  6075  002ED6  EF6F  F017         	goto	u3710
  6076  002EDA                     u3711:
  6077  002EDA  EF77  F017         	goto	l1114
  6078  002EDE                     u3710:
  6079  002EDE  0E02               	movlw	2
  6080  002EE0  6014               	cpfslt	___xxtofl@exp^0,c
  6081  002EE2  EF75  F017         	goto	u3721
  6082  002EE6  EF77  F017         	goto	u3720
  6083  002EEA                     u3721:
  6084  002EEA  EF62  F017         	goto	l3923
  6085  002EEE                     u3720:
  6086  002EEE                     l1114:
  6087  002EEE  B014               	btfsc	___xxtofl@exp^0,0,c
  6088  002EF0  EF7C  F017         	goto	u3731
  6089  002EF4  EF7E  F017         	goto	u3730
  6090  002EF8                     u3731:
  6091  002EF8  EF7F  F017         	goto	l3931
  6092  002EFC                     u3730:
  6093  002EFC  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  6094  002EFE                     l3931:
  6095  002EFE  90D8               	bcf	status,0,c
  6096  002F00  3214               	rrcf	___xxtofl@exp^0,f,c
  6097  002F02  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  6098  002F06  6A10               	clrf	(??___xxtofl+1)^0,c
  6099  002F08  6A11               	clrf	(??___xxtofl+2)^0,c
  6100  002F0A  6A12               	clrf	(??___xxtofl+3)^0,c
  6101  002F0C  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  6102  002F10  6A11               	clrf	(??___xxtofl+2)^0,c
  6103  002F12  6A10               	clrf	(??___xxtofl+1)^0,c
  6104  002F14  6A0F               	clrf	??___xxtofl^0,c
  6105  002F16  500F               	movf	??___xxtofl^0,w,c
  6106  002F18  1215               	iorwf	___xxtofl@arg^0,f,c
  6107  002F1A  5010               	movf	(??___xxtofl+1)^0,w,c
  6108  002F1C  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  6109  002F1E  5011               	movf	(??___xxtofl+2)^0,w,c
  6110  002F20  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  6111  002F22  5012               	movf	(??___xxtofl+3)^0,w,c
  6112  002F24  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  6113  002F26  5013               	movf	___xxtofl@sign^0,w,c
  6114  002F28  B4D8               	btfsc	status,2,c
  6115  002F2A  EF99  F017         	goto	u3741
  6116  002F2E  EF9B  F017         	goto	u3740
  6117  002F32                     u3741:
  6118  002F32  EFA3  F017         	goto	l3941
  6119  002F36                     u3740:
  6120  002F36  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  6121  002F38  EFA2  F017         	goto	u3750
  6122  002F3C  EFA0  F017         	goto	u3751
  6123  002F40                     u3751:
  6124  002F40  EFA3  F017         	goto	l3941
  6125  002F44                     u3750:
  6126  002F44  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  6127  002F46                     l3941:
  6128  002F46  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  6129  002F4A  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  6130  002F4E  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  6131  002F52  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  6132  002F56                     l1103:
  6133  002F56  0012               	return		;funcret
  6134  002F58                     __end_of___xxtofl:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function ___flsub *****************
  6138 ;; Defined at:
  6139 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  b               4   54[COMRAM] unsigned char 
  6142 ;;  a               4   58[COMRAM] unsigned char 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  4   54[COMRAM] unsigned char 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6154 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;Total ram usage:        8 bytes
  6159 ;; Hardware stack levels used: 1
  6160 ;; Hardware stack levels required when called: 3
  6161 ;; This function calls:
  6162 ;;		___fladd
  6163 ;; This function is called by:
  6164 ;;		_determine_color_new
  6165 ;;		_main
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text30
  6170  003C00                     __ptext30:
  6171                           	callstack 0
  6172  003C00                     ___flsub:
  6173                           	callstack 26
  6174  003C00  0E00               	movlw	0
  6175  003C02  1A3B               	xorwf	___flsub@a^0,f,c
  6176  003C04  0E00               	movlw	0
  6177  003C06  1A3C               	xorwf	(___flsub@a+1)^0,f,c
  6178  003C08  0E00               	movlw	0
  6179  003C0A  1A3D               	xorwf	(___flsub@a+2)^0,f,c
  6180  003C0C  0E80               	movlw	128
  6181  003C0E  1A3E               	xorwf	(___flsub@a+3)^0,f,c
  6182  003C10  C037  F005         	movff	___flsub@b,___fladd@b
  6183  003C14  C038  F006         	movff	___flsub@b+1,___fladd@b+1
  6184  003C18  C039  F007         	movff	___flsub@b+2,___fladd@b+2
  6185  003C1C  C03A  F008         	movff	___flsub@b+3,___fladd@b+3
  6186  003C20  C03B  F009         	movff	___flsub@a,___fladd@a
  6187  003C24  C03C  F00A         	movff	___flsub@a+1,___fladd@a+1
  6188  003C28  C03D  F00B         	movff	___flsub@a+2,___fladd@a+2
  6189  003C2C  C03E  F00C         	movff	___flsub@a+3,___fladd@a+3
  6190  003C30  EC58  F00D         	call	___fladd	;wreg free
  6191  003C34  C005  F037         	movff	?___fladd,?___flsub
  6192  003C38  C006  F038         	movff	?___fladd+1,?___flsub+1
  6193  003C3C  C007  F039         	movff	?___fladd+2,?___flsub+2
  6194  003C40  C008  F03A         	movff	?___fladd+3,?___flsub+3
  6195  003C44  0012               	return		;funcret
  6196  003C46                     __end_of___flsub:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function ___fladd *****************
  6200 ;; Defined at:
  6201 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  b               4    4[COMRAM] unsigned char 
  6204 ;;  a               4    8[COMRAM] unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  grs             1   19[COMRAM] unsigned char 
  6207 ;;  bexp            1   18[COMRAM] unsigned char 
  6208 ;;  aexp            1   17[COMRAM] unsigned char 
  6209 ;;  signs           1   16[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  4    4[COMRAM] unsigned char 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;Total ram usage:       16 bytes
  6224 ;; Hardware stack levels used: 1
  6225 ;; Hardware stack levels required when called: 2
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_determine_color_new
  6230 ;;		___flsub
  6231 ;;		_sqrtf
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text31
  6236  001AB0                     __ptext31:
  6237                           	callstack 0
  6238  001AB0                     ___fladd:
  6239                           	callstack 26
  6240  001AB0  5008               	movf	(___fladd@b+3)^0,w,c
  6241  001AB2  0B80               	andlw	128
  6242  001AB4  6E11               	movwf	___fladd@signs^0,c
  6243  001AB6  5008               	movf	(___fladd@b+3)^0,w,c
  6244  001AB8  2408               	addwf	(___fladd@b+3)^0,w,c
  6245  001ABA  6E13               	movwf	___fladd@bexp^0,c
  6246  001ABC  AE07               	btfss	(___fladd@b+2)^0,7,c
  6247  001ABE  EF63  F00D         	goto	u2781
  6248  001AC2  EF65  F00D         	goto	u2780
  6249  001AC6                     u2781:
  6250  001AC6  EF66  F00D         	goto	l3327
  6251  001ACA                     u2780:
  6252  001ACA  8013               	bsf	___fladd@bexp^0,0,c
  6253  001ACC                     l3327:
  6254  001ACC  5013               	movf	___fladd@bexp^0,w,c
  6255  001ACE  B4D8               	btfsc	status,2,c
  6256  001AD0  EF6C  F00D         	goto	u2791
  6257  001AD4  EF6E  F00D         	goto	u2790
  6258  001AD8                     u2791:
  6259  001AD8  EF83  F00D         	goto	l3337
  6260  001ADC                     u2790:
  6261  001ADC  2813               	incf	___fladd@bexp^0,w,c
  6262  001ADE  A4D8               	btfss	status,2,c
  6263  001AE0  EF74  F00D         	goto	u2801
  6264  001AE4  EF76  F00D         	goto	u2800
  6265  001AE8                     u2801:
  6266  001AE8  EF7E  F00D         	goto	l3333
  6267  001AEC                     u2800:
  6268  001AEC  0E00               	movlw	0
  6269  001AEE  6E05               	movwf	___fladd@b^0,c
  6270  001AF0  0E00               	movlw	0
  6271  001AF2  6E06               	movwf	(___fladd@b+1)^0,c
  6272  001AF4  0E00               	movlw	0
  6273  001AF6  6E07               	movwf	(___fladd@b+2)^0,c
  6274  001AF8  0E00               	movlw	0
  6275  001AFA  6E08               	movwf	(___fladd@b+3)^0,c
  6276  001AFC                     l3333:
  6277  001AFC  8E07               	bsf	(___fladd@b+2)^0,7,c
  6278  001AFE  0E00               	movlw	0
  6279  001B00  6E08               	movwf	(___fladd@b+3)^0,c
  6280  001B02  EF8B  F00D         	goto	l3339
  6281  001B06                     l3337:
  6282  001B06  0E00               	movlw	0
  6283  001B08  6E05               	movwf	___fladd@b^0,c
  6284  001B0A  0E00               	movlw	0
  6285  001B0C  6E06               	movwf	(___fladd@b+1)^0,c
  6286  001B0E  0E00               	movlw	0
  6287  001B10  6E07               	movwf	(___fladd@b+2)^0,c
  6288  001B12  0E00               	movlw	0
  6289  001B14  6E08               	movwf	(___fladd@b+3)^0,c
  6290  001B16                     l3339:
  6291  001B16  500C               	movf	(___fladd@a+3)^0,w,c
  6292  001B18  0B80               	andlw	128
  6293  001B1A  6E12               	movwf	___fladd@aexp^0,c
  6294  001B1C  5011               	movf	___fladd@signs^0,w,c
  6295  001B1E  1812               	xorwf	___fladd@aexp^0,w,c
  6296  001B20  B4D8               	btfsc	status,2,c
  6297  001B22  EF95  F00D         	goto	u2811
  6298  001B26  EF97  F00D         	goto	u2810
  6299  001B2A                     u2811:
  6300  001B2A  EF98  F00D         	goto	l3345
  6301  001B2E                     u2810:
  6302  001B2E  8C11               	bsf	___fladd@signs^0,6,c
  6303  001B30                     l3345:
  6304  001B30  500C               	movf	(___fladd@a+3)^0,w,c
  6305  001B32  240C               	addwf	(___fladd@a+3)^0,w,c
  6306  001B34  6E12               	movwf	___fladd@aexp^0,c
  6307  001B36  AE0B               	btfss	(___fladd@a+2)^0,7,c
  6308  001B38  EFA0  F00D         	goto	u2821
  6309  001B3C  EFA2  F00D         	goto	u2820
  6310  001B40                     u2821:
  6311  001B40  EFA3  F00D         	goto	l3351
  6312  001B44                     u2820:
  6313  001B44  8012               	bsf	___fladd@aexp^0,0,c
  6314  001B46                     l3351:
  6315  001B46  5012               	movf	___fladd@aexp^0,w,c
  6316  001B48  B4D8               	btfsc	status,2,c
  6317  001B4A  EFA9  F00D         	goto	u2831
  6318  001B4E  EFAB  F00D         	goto	u2830
  6319  001B52                     u2831:
  6320  001B52  EFC0  F00D         	goto	l3361
  6321  001B56                     u2830:
  6322  001B56  2812               	incf	___fladd@aexp^0,w,c
  6323  001B58  A4D8               	btfss	status,2,c
  6324  001B5A  EFB1  F00D         	goto	u2841
  6325  001B5E  EFB3  F00D         	goto	u2840
  6326  001B62                     u2841:
  6327  001B62  EFBB  F00D         	goto	l3357
  6328  001B66                     u2840:
  6329  001B66  0E00               	movlw	0
  6330  001B68  6E09               	movwf	___fladd@a^0,c
  6331  001B6A  0E00               	movlw	0
  6332  001B6C  6E0A               	movwf	(___fladd@a+1)^0,c
  6333  001B6E  0E00               	movlw	0
  6334  001B70  6E0B               	movwf	(___fladd@a+2)^0,c
  6335  001B72  0E00               	movlw	0
  6336  001B74  6E0C               	movwf	(___fladd@a+3)^0,c
  6337  001B76                     l3357:
  6338  001B76  8E0B               	bsf	(___fladd@a+2)^0,7,c
  6339  001B78  0E00               	movlw	0
  6340  001B7A  6E0C               	movwf	(___fladd@a+3)^0,c
  6341  001B7C  EFC8  F00D         	goto	l3363
  6342  001B80                     l3361:
  6343  001B80  0E00               	movlw	0
  6344  001B82  6E09               	movwf	___fladd@a^0,c
  6345  001B84  0E00               	movlw	0
  6346  001B86  6E0A               	movwf	(___fladd@a+1)^0,c
  6347  001B88  0E00               	movlw	0
  6348  001B8A  6E0B               	movwf	(___fladd@a+2)^0,c
  6349  001B8C  0E00               	movlw	0
  6350  001B8E  6E0C               	movwf	(___fladd@a+3)^0,c
  6351  001B90                     l3363:
  6352  001B90  5013               	movf	___fladd@bexp^0,w,c
  6353  001B92  5C12               	subwf	___fladd@aexp^0,w,c
  6354  001B94  B0D8               	btfsc	status,0,c
  6355  001B96  EFCF  F00D         	goto	u2851
  6356  001B9A  EFD1  F00D         	goto	u2850
  6357  001B9E                     u2851:
  6358  001B9E  EFF8  F00D         	goto	l3399
  6359  001BA2                     u2850:
  6360  001BA2  AC11               	btfss	___fladd@signs^0,6,c
  6361  001BA4  EFD6  F00D         	goto	u2861
  6362  001BA8  EFD8  F00D         	goto	u2860
  6363  001BAC                     u2861:
  6364  001BAC  EFDA  F00D         	goto	l3369
  6365  001BB0                     u2860:
  6366  001BB0  0E80               	movlw	128
  6367  001BB2  1A11               	xorwf	___fladd@signs^0,f,c
  6368  001BB4                     l3369:
  6369  001BB4  C013  F014         	movff	___fladd@bexp,___fladd@grs
  6370  001BB8  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6371  001BBC  C014  F012         	movff	___fladd@grs,___fladd@aexp
  6372  001BC0  C005  F014         	movff	___fladd@b,___fladd@grs
  6373  001BC4  C009  F005         	movff	___fladd@a,___fladd@b
  6374  001BC8  C014  F009         	movff	___fladd@grs,___fladd@a
  6375  001BCC  C006  F014         	movff	___fladd@b+1,___fladd@grs
  6376  001BD0  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  6377  001BD4  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  6378  001BD8  C007  F014         	movff	___fladd@b+2,___fladd@grs
  6379  001BDC  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  6380  001BE0  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  6381  001BE4  C008  F014         	movff	___fladd@b+3,___fladd@grs
  6382  001BE8  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  6383  001BEC  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  6384  001BF0                     l3399:
  6385  001BF0  0E00               	movlw	0
  6386  001BF2  6E14               	movwf	___fladd@grs^0,c
  6387  001BF4  5013               	movf	___fladd@bexp^0,w,c
  6388  001BF6  C012  F00D         	movff	___fladd@aexp,??___fladd
  6389  001BFA  6A0E               	clrf	(??___fladd+1)^0,c
  6390  001BFC  5E0D               	subwf	??___fladd^0,f,c
  6391  001BFE  0E00               	movlw	0
  6392  001C00  5A0E               	subwfb	(??___fladd+1)^0,f,c
  6393  001C02  BE0E               	btfsc	(??___fladd+1)^0,7,c
  6394  001C04  EF0D  F00E         	goto	u2871
  6395  001C08  500E               	movf	(??___fladd+1)^0,w,c
  6396  001C0A  E109               	bnz	u2870
  6397  001C0C  0E1A               	movlw	26
  6398  001C0E  5C0D               	subwf	??___fladd^0,w,c
  6399  001C10  A0D8               	btfss	status,0,c
  6400  001C12  EF0D  F00E         	goto	u2871
  6401  001C16  EF0F  F00E         	goto	u2870
  6402  001C1A                     u2871:
  6403  001C1A  EF46  F00E         	goto	l974
  6404  001C1E                     u2870:
  6405  001C1E  5005               	movf	___fladd@b^0,w,c
  6406  001C20  1006               	iorwf	(___fladd@b+1)^0,w,c
  6407  001C22  1007               	iorwf	(___fladd@b+2)^0,w,c
  6408  001C24  1008               	iorwf	(___fladd@b+3)^0,w,c
  6409  001C26  A4D8               	btfss	status,2,c
  6410  001C28  EF18  F00E         	goto	u2881
  6411  001C2C  EF1B  F00E         	goto	u2880
  6412  001C30                     u2881:
  6413  001C30  0E01               	movlw	1
  6414  001C32  EF1C  F00E         	goto	u2890
  6415  001C36                     u2880:
  6416  001C36  0E00               	movlw	0
  6417  001C38                     u2890:
  6418  001C38  6E14               	movwf	___fladd@grs^0,c
  6419  001C3A  0E00               	movlw	0
  6420  001C3C  6E05               	movwf	___fladd@b^0,c
  6421  001C3E  0E00               	movlw	0
  6422  001C40  6E06               	movwf	(___fladd@b+1)^0,c
  6423  001C42  0E00               	movlw	0
  6424  001C44  6E07               	movwf	(___fladd@b+2)^0,c
  6425  001C46  0E00               	movlw	0
  6426  001C48  6E08               	movwf	(___fladd@b+3)^0,c
  6427  001C4A  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6428  001C4E  EF4F  F00E         	goto	l973
  6429  001C52                     l975:
  6430  001C52  A014               	btfss	___fladd@grs^0,0,c
  6431  001C54  EF2E  F00E         	goto	u2901
  6432  001C58  EF30  F00E         	goto	u2900
  6433  001C5C                     u2901:
  6434  001C5C  EF36  F00E         	goto	l3411
  6435  001C60                     u2900:
  6436  001C60  90D8               	bcf	status,0,c
  6437  001C62  3014               	rrcf	___fladd@grs^0,w,c
  6438  001C64  0901               	iorlw	1
  6439  001C66  6E14               	movwf	___fladd@grs^0,c
  6440  001C68  EF38  F00E         	goto	l3413
  6441  001C6C                     l3411:
  6442  001C6C  90D8               	bcf	status,0,c
  6443  001C6E  3214               	rrcf	___fladd@grs^0,f,c
  6444  001C70                     l3413:
  6445  001C70  A005               	btfss	___fladd@b^0,0,c
  6446  001C72  EF3D  F00E         	goto	u2911
  6447  001C76  EF3F  F00E         	goto	u2910
  6448  001C7A                     u2911:
  6449  001C7A  EF40  F00E         	goto	l3417
  6450  001C7E                     u2910:
  6451  001C7E  8E14               	bsf	___fladd@grs^0,7,c
  6452  001C80                     l3417:
  6453  001C80  3408               	rlcf	(___fladd@b+3)^0,w,c
  6454  001C82  3208               	rrcf	(___fladd@b+3)^0,f,c
  6455  001C84  3207               	rrcf	(___fladd@b+2)^0,f,c
  6456  001C86  3206               	rrcf	(___fladd@b+1)^0,f,c
  6457  001C88  3205               	rrcf	___fladd@b^0,f,c
  6458  001C8A  2A13               	incf	___fladd@bexp^0,f,c
  6459  001C8C                     l974:
  6460  001C8C  5012               	movf	___fladd@aexp^0,w,c
  6461  001C8E  5C13               	subwf	___fladd@bexp^0,w,c
  6462  001C90  A0D8               	btfss	status,0,c
  6463  001C92  EF4D  F00E         	goto	u2921
  6464  001C96  EF4F  F00E         	goto	u2920
  6465  001C9A                     u2921:
  6466  001C9A  EF29  F00E         	goto	l975
  6467  001C9E                     u2920:
  6468  001C9E                     l973:
  6469  001C9E  BC11               	btfsc	___fladd@signs^0,6,c
  6470  001CA0  EF54  F00E         	goto	u2931
  6471  001CA4  EF56  F00E         	goto	u2930
  6472  001CA8                     u2931:
  6473  001CA8  EF96  F00E         	goto	l3445
  6474  001CAC                     u2930:
  6475  001CAC  5013               	movf	___fladd@bexp^0,w,c
  6476  001CAE  A4D8               	btfss	status,2,c
  6477  001CB0  EF5C  F00E         	goto	u2941
  6478  001CB4  EF5E  F00E         	goto	u2940
  6479  001CB8                     u2941:
  6480  001CB8  EF68  F00E         	goto	l3427
  6481  001CBC                     u2940:
  6482  001CBC  0E00               	movlw	0
  6483  001CBE  6E05               	movwf	?___fladd^0,c
  6484  001CC0  0E00               	movlw	0
  6485  001CC2  6E06               	movwf	(?___fladd+1)^0,c
  6486  001CC4  0E00               	movlw	0
  6487  001CC6  6E07               	movwf	(?___fladd+2)^0,c
  6488  001CC8  0E00               	movlw	0
  6489  001CCA  6E08               	movwf	(?___fladd+3)^0,c
  6490  001CCC  EFB7  F00F         	goto	l982
  6491  001CD0                     l3427:
  6492  001CD0  5009               	movf	___fladd@a^0,w,c
  6493  001CD2  2605               	addwf	___fladd@b^0,f,c
  6494  001CD4  500A               	movf	(___fladd@a+1)^0,w,c
  6495  001CD6  2206               	addwfc	(___fladd@b+1)^0,f,c
  6496  001CD8  500B               	movf	(___fladd@a+2)^0,w,c
  6497  001CDA  2207               	addwfc	(___fladd@b+2)^0,f,c
  6498  001CDC  500C               	movf	(___fladd@a+3)^0,w,c
  6499  001CDE  2208               	addwfc	(___fladd@b+3)^0,f,c
  6500  001CE0  A008               	btfss	(___fladd@b+3)^0,0,c
  6501  001CE2  EF75  F00E         	goto	u2951
  6502  001CE6  EF77  F00E         	goto	u2950
  6503  001CEA                     u2951:
  6504  001CEA  EF23  F00F         	goto	l3481
  6505  001CEE                     u2950:
  6506  001CEE  A014               	btfss	___fladd@grs^0,0,c
  6507  001CF0  EF7C  F00E         	goto	u2961
  6508  001CF4  EF7E  F00E         	goto	u2960
  6509  001CF8                     u2961:
  6510  001CF8  EF84  F00E         	goto	l3435
  6511  001CFC                     u2960:
  6512  001CFC  90D8               	bcf	status,0,c
  6513  001CFE  3014               	rrcf	___fladd@grs^0,w,c
  6514  001D00  0901               	iorlw	1
  6515  001D02  6E14               	movwf	___fladd@grs^0,c
  6516  001D04  EF86  F00E         	goto	l3437
  6517  001D08                     l3435:
  6518  001D08  90D8               	bcf	status,0,c
  6519  001D0A  3214               	rrcf	___fladd@grs^0,f,c
  6520  001D0C                     l3437:
  6521  001D0C  A005               	btfss	___fladd@b^0,0,c
  6522  001D0E  EF8B  F00E         	goto	u2971
  6523  001D12  EF8D  F00E         	goto	u2970
  6524  001D16                     u2971:
  6525  001D16  EF8E  F00E         	goto	l3441
  6526  001D1A                     u2970:
  6527  001D1A  8E14               	bsf	___fladd@grs^0,7,c
  6528  001D1C                     l3441:
  6529  001D1C  3408               	rlcf	(___fladd@b+3)^0,w,c
  6530  001D1E  3208               	rrcf	(___fladd@b+3)^0,f,c
  6531  001D20  3207               	rrcf	(___fladd@b+2)^0,f,c
  6532  001D22  3206               	rrcf	(___fladd@b+1)^0,f,c
  6533  001D24  3205               	rrcf	___fladd@b^0,f,c
  6534  001D26  2A13               	incf	___fladd@bexp^0,f,c
  6535  001D28  EF23  F00F         	goto	l3481
  6536  001D2C                     l3445:
  6537  001D2C  5009               	movf	___fladd@a^0,w,c
  6538  001D2E  5C05               	subwf	___fladd@b^0,w,c
  6539  001D30  500A               	movf	(___fladd@a+1)^0,w,c
  6540  001D32  5806               	subwfb	(___fladd@b+1)^0,w,c
  6541  001D34  500B               	movf	(___fladd@a+2)^0,w,c
  6542  001D36  5807               	subwfb	(___fladd@b+2)^0,w,c
  6543  001D38  5008               	movf	(___fladd@b+3)^0,w,c
  6544  001D3A  0A80               	xorlw	128
  6545  001D3C  6E0D               	movwf	??___fladd^0,c
  6546  001D3E  500C               	movf	(___fladd@a+3)^0,w,c
  6547  001D40  0A80               	xorlw	128
  6548  001D42  580D               	subwfb	??___fladd^0,w,c
  6549  001D44  B0D8               	btfsc	status,0,c
  6550  001D46  EFA7  F00E         	goto	u2981
  6551  001D4A  EFA9  F00E         	goto	u2980
  6552  001D4E                     u2981:
  6553  001D4E  EFD4  F00E         	goto	l3455
  6554  001D52                     u2980:
  6555  001D52  5005               	movf	___fladd@b^0,w,c
  6556  001D54  5C09               	subwf	___fladd@a^0,w,c
  6557  001D56  6E0D               	movwf	??___fladd^0,c
  6558  001D58  5006               	movf	(___fladd@b+1)^0,w,c
  6559  001D5A  580A               	subwfb	(___fladd@a+1)^0,w,c
  6560  001D5C  6E0E               	movwf	(??___fladd+1)^0,c
  6561  001D5E  5007               	movf	(___fladd@b+2)^0,w,c
  6562  001D60  580B               	subwfb	(___fladd@a+2)^0,w,c
  6563  001D62  6E0F               	movwf	(??___fladd+2)^0,c
  6564  001D64  5008               	movf	(___fladd@b+3)^0,w,c
  6565  001D66  580C               	subwfb	(___fladd@a+3)^0,w,c
  6566  001D68  6E10               	movwf	(??___fladd+3)^0,c
  6567  001D6A  0EFF               	movlw	255
  6568  001D6C  240D               	addwf	??___fladd^0,w,c
  6569  001D6E  6E05               	movwf	___fladd@b^0,c
  6570  001D70  0EFF               	movlw	255
  6571  001D72  200E               	addwfc	(??___fladd+1)^0,w,c
  6572  001D74  6E06               	movwf	(___fladd@b+1)^0,c
  6573  001D76  0EFF               	movlw	255
  6574  001D78  200F               	addwfc	(??___fladd+2)^0,w,c
  6575  001D7A  6E07               	movwf	(___fladd@b+2)^0,c
  6576  001D7C  0EFF               	movlw	255
  6577  001D7E  2010               	addwfc	(??___fladd+3)^0,w,c
  6578  001D80  6E08               	movwf	(___fladd@b+3)^0,c
  6579  001D82  0E80               	movlw	128
  6580  001D84  1A11               	xorwf	___fladd@signs^0,f,c
  6581  001D86  6C14               	negf	___fladd@grs^0,c
  6582  001D88  5014               	movf	___fladd@grs^0,w,c
  6583  001D8A  A4D8               	btfss	status,2,c
  6584  001D8C  EFCA  F00E         	goto	u2991
  6585  001D90  EFCC  F00E         	goto	u2990
  6586  001D94                     u2991:
  6587  001D94  EFDC  F00E         	goto	l990
  6588  001D98                     u2990:
  6589  001D98  0E01               	movlw	1
  6590  001D9A  2605               	addwf	___fladd@b^0,f,c
  6591  001D9C  0E00               	movlw	0
  6592  001D9E  2206               	addwfc	(___fladd@b+1)^0,f,c
  6593  001DA0  2207               	addwfc	(___fladd@b+2)^0,f,c
  6594  001DA2  2208               	addwfc	(___fladd@b+3)^0,f,c
  6595  001DA4  EFDC  F00E         	goto	l990
  6596  001DA8                     l3455:
  6597  001DA8  5009               	movf	___fladd@a^0,w,c
  6598  001DAA  5E05               	subwf	___fladd@b^0,f,c
  6599  001DAC  500A               	movf	(___fladd@a+1)^0,w,c
  6600  001DAE  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6601  001DB0  500B               	movf	(___fladd@a+2)^0,w,c
  6602  001DB2  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6603  001DB4  500C               	movf	(___fladd@a+3)^0,w,c
  6604  001DB6  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6605  001DB8                     l990:
  6606  001DB8  5005               	movf	___fladd@b^0,w,c
  6607  001DBA  1006               	iorwf	(___fladd@b+1)^0,w,c
  6608  001DBC  1007               	iorwf	(___fladd@b+2)^0,w,c
  6609  001DBE  1008               	iorwf	(___fladd@b+3)^0,w,c
  6610  001DC0  A4D8               	btfss	status,2,c
  6611  001DC2  EFE5  F00E         	goto	u3001
  6612  001DC6  EFE7  F00E         	goto	u3000
  6613  001DCA                     u3001:
  6614  001DCA  EF1C  F00F         	goto	l3479
  6615  001DCE                     u3000:
  6616  001DCE  5014               	movf	___fladd@grs^0,w,c
  6617  001DD0  A4D8               	btfss	status,2,c
  6618  001DD2  EFED  F00E         	goto	u3011
  6619  001DD6  EFEF  F00E         	goto	u3010
  6620  001DDA                     u3011:
  6621  001DDA  EF1C  F00F         	goto	l3479
  6622  001DDE                     u3010:
  6623  001DDE  0E00               	movlw	0
  6624  001DE0  6E05               	movwf	?___fladd^0,c
  6625  001DE2  0E00               	movlw	0
  6626  001DE4  6E06               	movwf	(?___fladd+1)^0,c
  6627  001DE6  0E00               	movlw	0
  6628  001DE8  6E07               	movwf	(?___fladd+2)^0,c
  6629  001DEA  0E00               	movlw	0
  6630  001DEC  6E08               	movwf	(?___fladd+3)^0,c
  6631  001DEE  EFB7  F00F         	goto	l982
  6632  001DF2                     l3463:
  6633  001DF2  90D8               	bcf	status,0,c
  6634  001DF4  3605               	rlcf	___fladd@b^0,f,c
  6635  001DF6  3606               	rlcf	(___fladd@b+1)^0,f,c
  6636  001DF8  3607               	rlcf	(___fladd@b+2)^0,f,c
  6637  001DFA  3608               	rlcf	(___fladd@b+3)^0,f,c
  6638  001DFC  AE14               	btfss	___fladd@grs^0,7,c
  6639  001DFE  EF03  F00F         	goto	u3021
  6640  001E02  EF05  F00F         	goto	u3020
  6641  001E06                     u3021:
  6642  001E06  EF06  F00F         	goto	l3469
  6643  001E0A                     u3020:
  6644  001E0A  8005               	bsf	___fladd@b^0,0,c
  6645  001E0C                     l3469:
  6646  001E0C  A014               	btfss	___fladd@grs^0,0,c
  6647  001E0E  EF0B  F00F         	goto	u3031
  6648  001E12  EF0D  F00F         	goto	u3030
  6649  001E16                     u3031:
  6650  001E16  EF11  F00F         	goto	l3473
  6651  001E1A                     u3030:
  6652  001E1A  80D8               	bsf	status,0,c
  6653  001E1C  3614               	rlcf	___fladd@grs^0,f,c
  6654  001E1E  EF13  F00F         	goto	l3475
  6655  001E22                     l3473:
  6656  001E22  90D8               	bcf	status,0,c
  6657  001E24  3614               	rlcf	___fladd@grs^0,f,c
  6658  001E26                     l3475:
  6659  001E26  5013               	movf	___fladd@bexp^0,w,c
  6660  001E28  B4D8               	btfsc	status,2,c
  6661  001E2A  EF19  F00F         	goto	u3041
  6662  001E2E  EF1B  F00F         	goto	u3040
  6663  001E32                     u3041:
  6664  001E32  EF1C  F00F         	goto	l3479
  6665  001E36                     u3040:
  6666  001E36  0613               	decf	___fladd@bexp^0,f,c
  6667  001E38                     l3479:
  6668  001E38  AE07               	btfss	(___fladd@b+2)^0,7,c
  6669  001E3A  EF21  F00F         	goto	u3051
  6670  001E3E  EF23  F00F         	goto	u3050
  6671  001E42                     u3051:
  6672  001E42  EFF9  F00E         	goto	l3463
  6673  001E46                     u3050:
  6674  001E46                     l3481:
  6675  001E46  0E00               	movlw	0
  6676  001E48  6E12               	movwf	___fladd@aexp^0,c
  6677  001E4A  AE14               	btfss	___fladd@grs^0,7,c
  6678  001E4C  EF2A  F00F         	goto	u3061
  6679  001E50  EF2C  F00F         	goto	u3060
  6680  001E54                     u3061:
  6681  001E54  EF44  F00F         	goto	l999
  6682  001E58                     u3060:
  6683  001E58  C014  F00D         	movff	___fladd@grs,??___fladd
  6684  001E5C  0E7F               	movlw	127
  6685  001E5E  160D               	andwf	??___fladd^0,f,c
  6686  001E60  B4D8               	btfsc	status,2,c
  6687  001E62  EF35  F00F         	goto	u3071
  6688  001E66  EF37  F00F         	goto	u3070
  6689  001E6A                     u3071:
  6690  001E6A  EF3B  F00F         	goto	l1000
  6691  001E6E                     u3070:
  6692  001E6E                     l3487:
  6693  001E6E  0E01               	movlw	1
  6694  001E70  6E12               	movwf	___fladd@aexp^0,c
  6695  001E72  EF44  F00F         	goto	l999
  6696  001E76                     l1000:
  6697  001E76  A005               	btfss	___fladd@b^0,0,c
  6698  001E78  EF40  F00F         	goto	u3081
  6699  001E7C  EF42  F00F         	goto	u3080
  6700  001E80                     u3081:
  6701  001E80  EF44  F00F         	goto	l999
  6702  001E84                     u3080:
  6703  001E84  EF37  F00F         	goto	l3487
  6704  001E88                     l999:
  6705  001E88  5012               	movf	___fladd@aexp^0,w,c
  6706  001E8A  B4D8               	btfsc	status,2,c
  6707  001E8C  EF4A  F00F         	goto	u3091
  6708  001E90  EF4C  F00F         	goto	u3090
  6709  001E94                     u3091:
  6710  001E94  EF77  F00F         	goto	l3499
  6711  001E98                     u3090:
  6712  001E98  0E01               	movlw	1
  6713  001E9A  2605               	addwf	___fladd@b^0,f,c
  6714  001E9C  0E00               	movlw	0
  6715  001E9E  2206               	addwfc	(___fladd@b+1)^0,f,c
  6716  001EA0  2207               	addwfc	(___fladd@b+2)^0,f,c
  6717  001EA2  2208               	addwfc	(___fladd@b+3)^0,f,c
  6718  001EA4  A008               	btfss	(___fladd@b+3)^0,0,c
  6719  001EA6  EF57  F00F         	goto	u3101
  6720  001EAA  EF59  F00F         	goto	u3100
  6721  001EAE                     u3101:
  6722  001EAE  EF77  F00F         	goto	l3499
  6723  001EB2                     u3100:
  6724  001EB2  C005  F00D         	movff	___fladd@b,??___fladd
  6725  001EB6  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6726  001EBA  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6727  001EBE  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6728  001EC2  3410               	rlcf	(??___fladd+3)^0,w,c
  6729  001EC4  3210               	rrcf	(??___fladd+3)^0,f,c
  6730  001EC6  320F               	rrcf	(??___fladd+2)^0,f,c
  6731  001EC8  320E               	rrcf	(??___fladd+1)^0,f,c
  6732  001ECA  320D               	rrcf	??___fladd^0,f,c
  6733  001ECC  C00D  F005         	movff	??___fladd,___fladd@b
  6734  001ED0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6735  001ED4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6736  001ED8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6737  001EDC  2813               	incf	___fladd@bexp^0,w,c
  6738  001EDE  B4D8               	btfsc	status,2,c
  6739  001EE0  EF74  F00F         	goto	u3111
  6740  001EE4  EF76  F00F         	goto	u3110
  6741  001EE8                     u3111:
  6742  001EE8  EF77  F00F         	goto	l3499
  6743  001EEC                     u3110:
  6744  001EEC  2A13               	incf	___fladd@bexp^0,f,c
  6745  001EEE                     l3499:
  6746  001EEE  2813               	incf	___fladd@bexp^0,w,c
  6747  001EF0  B4D8               	btfsc	status,2,c
  6748  001EF2  EF7D  F00F         	goto	u3121
  6749  001EF6  EF7F  F00F         	goto	u3120
  6750  001EFA                     u3121:
  6751  001EFA  EF87  F00F         	goto	l3503
  6752  001EFE                     u3120:
  6753  001EFE  5013               	movf	___fladd@bexp^0,w,c
  6754  001F00  A4D8               	btfss	status,2,c
  6755  001F02  EF85  F00F         	goto	u3131
  6756  001F06  EF87  F00F         	goto	u3130
  6757  001F0A                     u3131:
  6758  001F0A  EF99  F00F         	goto	l3507
  6759  001F0E                     u3130:
  6760  001F0E                     l3503:
  6761  001F0E  0E00               	movlw	0
  6762  001F10  6E05               	movwf	___fladd@b^0,c
  6763  001F12  0E00               	movlw	0
  6764  001F14  6E06               	movwf	(___fladd@b+1)^0,c
  6765  001F16  0E00               	movlw	0
  6766  001F18  6E07               	movwf	(___fladd@b+2)^0,c
  6767  001F1A  0E00               	movlw	0
  6768  001F1C  6E08               	movwf	(___fladd@b+3)^0,c
  6769  001F1E  5013               	movf	___fladd@bexp^0,w,c
  6770  001F20  A4D8               	btfss	status,2,c
  6771  001F22  EF95  F00F         	goto	u3141
  6772  001F26  EF97  F00F         	goto	u3140
  6773  001F2A                     u3141:
  6774  001F2A  EF99  F00F         	goto	l3507
  6775  001F2E                     u3140:
  6776  001F2E  0E00               	movlw	0
  6777  001F30  6E11               	movwf	___fladd@signs^0,c
  6778  001F32                     l3507:
  6779  001F32  A013               	btfss	___fladd@bexp^0,0,c
  6780  001F34  EF9E  F00F         	goto	u3151
  6781  001F38  EFA0  F00F         	goto	u3150
  6782  001F3C                     u3151:
  6783  001F3C  EFA3  F00F         	goto	l3511
  6784  001F40                     u3150:
  6785  001F40  8E07               	bsf	(___fladd@b+2)^0,7,c
  6786  001F42  EFA4  F00F         	goto	l3513
  6787  001F46                     l3511:
  6788  001F46  9E07               	bcf	(___fladd@b+2)^0,7,c
  6789  001F48                     l3513:
  6790  001F48  90D8               	bcf	status,0,c
  6791  001F4A  3013               	rrcf	___fladd@bexp^0,w,c
  6792  001F4C  6E08               	movwf	(___fladd@b+3)^0,c
  6793  001F4E  AE11               	btfss	___fladd@signs^0,7,c
  6794  001F50  EFAC  F00F         	goto	u3161
  6795  001F54  EFAE  F00F         	goto	u3160
  6796  001F58                     u3161:
  6797  001F58  EFAF  F00F         	goto	l3519
  6798  001F5C                     u3160:
  6799  001F5C  8E08               	bsf	(___fladd@b+3)^0,7,c
  6800  001F5E                     l3519:
  6801  001F5E  C005  F005         	movff	___fladd@b,?___fladd
  6802  001F62  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6803  001F66  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6804  001F6A  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6805  001F6E                     l982:
  6806  001F6E  0012               	return		;funcret
  6807  001F70                     __end_of___fladd:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function ___flge *****************
  6811 ;; Defined at:
  6812 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  ff1             4    4[COMRAM] unsigned char 
  6815 ;;  ff2             4    8[COMRAM] unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;		None               void
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6827 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6831 ;;Total ram usage:       12 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 2
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_determine_color_new
  6838 ;;		_sqrtf
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text32
  6843  0034EE                     __ptext32:
  6844                           	callstack 0
  6845  0034EE                     ___flge:
  6846                           	callstack 27
  6847  0034EE  0E00               	movlw	0
  6848  0034F0  1405               	andwf	___flge@ff1^0,w,c
  6849  0034F2  6E0D               	movwf	??___flge^0,c
  6850  0034F4  0E00               	movlw	0
  6851  0034F6  1406               	andwf	(___flge@ff1+1)^0,w,c
  6852  0034F8  6E0E               	movwf	(??___flge+1)^0,c
  6853  0034FA  0E80               	movlw	128
  6854  0034FC  1407               	andwf	(___flge@ff1+2)^0,w,c
  6855  0034FE  6E0F               	movwf	(??___flge+2)^0,c
  6856  003500  0E7F               	movlw	127
  6857  003502  1408               	andwf	(___flge@ff1+3)^0,w,c
  6858  003504  6E10               	movwf	(??___flge+3)^0,c
  6859  003506  500D               	movf	??___flge^0,w,c
  6860  003508  100E               	iorwf	(??___flge+1)^0,w,c
  6861  00350A  100F               	iorwf	(??___flge+2)^0,w,c
  6862  00350C  1010               	iorwf	(??___flge+3)^0,w,c
  6863  00350E  A4D8               	btfss	status,2,c
  6864  003510  EF8C  F01A         	goto	u3611
  6865  003514  EF8E  F01A         	goto	u3610
  6866  003518                     u3611:
  6867  003518  EF96  F01A         	goto	l3881
  6868  00351C                     u3610:
  6869  00351C  0E00               	movlw	0
  6870  00351E  6E05               	movwf	___flge@ff1^0,c
  6871  003520  0E00               	movlw	0
  6872  003522  6E06               	movwf	(___flge@ff1+1)^0,c
  6873  003524  0E00               	movlw	0
  6874  003526  6E07               	movwf	(___flge@ff1+2)^0,c
  6875  003528  0E00               	movlw	0
  6876  00352A  6E08               	movwf	(___flge@ff1+3)^0,c
  6877  00352C                     l3881:
  6878  00352C  0E00               	movlw	0
  6879  00352E  1409               	andwf	___flge@ff2^0,w,c
  6880  003530  6E0D               	movwf	??___flge^0,c
  6881  003532  0E00               	movlw	0
  6882  003534  140A               	andwf	(___flge@ff2+1)^0,w,c
  6883  003536  6E0E               	movwf	(??___flge+1)^0,c
  6884  003538  0E80               	movlw	128
  6885  00353A  140B               	andwf	(___flge@ff2+2)^0,w,c
  6886  00353C  6E0F               	movwf	(??___flge+2)^0,c
  6887  00353E  0E7F               	movlw	127
  6888  003540  140C               	andwf	(___flge@ff2+3)^0,w,c
  6889  003542  6E10               	movwf	(??___flge+3)^0,c
  6890  003544  500D               	movf	??___flge^0,w,c
  6891  003546  100E               	iorwf	(??___flge+1)^0,w,c
  6892  003548  100F               	iorwf	(??___flge+2)^0,w,c
  6893  00354A  1010               	iorwf	(??___flge+3)^0,w,c
  6894  00354C  A4D8               	btfss	status,2,c
  6895  00354E  EFAB  F01A         	goto	u3621
  6896  003552  EFAD  F01A         	goto	u3620
  6897  003556                     u3621:
  6898  003556  EFB5  F01A         	goto	l3885
  6899  00355A                     u3620:
  6900  00355A  0E00               	movlw	0
  6901  00355C  6E09               	movwf	___flge@ff2^0,c
  6902  00355E  0E00               	movlw	0
  6903  003560  6E0A               	movwf	(___flge@ff2+1)^0,c
  6904  003562  0E00               	movlw	0
  6905  003564  6E0B               	movwf	(___flge@ff2+2)^0,c
  6906  003566  0E00               	movlw	0
  6907  003568  6E0C               	movwf	(___flge@ff2+3)^0,c
  6908  00356A                     l3885:
  6909  00356A  AE08               	btfss	(___flge@ff1+3)^0,7,c
  6910  00356C  EFBA  F01A         	goto	u3631
  6911  003570  EFBC  F01A         	goto	u3630
  6912  003574                     u3631:
  6913  003574  EFC5  F01A         	goto	l3889
  6914  003578                     u3630:
  6915  003578  6C05               	negf	___flge@ff1^0,c
  6916  00357A  1E06               	comf	(___flge@ff1+1)^0,f,c
  6917  00357C  B0D8               	btfsc	status,0,c
  6918  00357E  2A06               	incf	(___flge@ff1+1)^0,f,c
  6919  003580  1E07               	comf	(___flge@ff1+2)^0,f,c
  6920  003582  B0D8               	btfsc	status,0,c
  6921  003584  2A07               	incf	(___flge@ff1+2)^0,f,c
  6922  003586  0E80               	movlw	128
  6923  003588  5608               	subfwb	(___flge@ff1+3)^0,f,c
  6924  00358A                     l3889:
  6925  00358A  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  6926  00358C  EFCA  F01A         	goto	u3641
  6927  003590  EFCC  F01A         	goto	u3640
  6928  003594                     u3641:
  6929  003594  EFD5  F01A         	goto	l710
  6930  003598                     u3640:
  6931  003598  6C09               	negf	___flge@ff2^0,c
  6932  00359A  1E0A               	comf	(___flge@ff2+1)^0,f,c
  6933  00359C  B0D8               	btfsc	status,0,c
  6934  00359E  2A0A               	incf	(___flge@ff2+1)^0,f,c
  6935  0035A0  1E0B               	comf	(___flge@ff2+2)^0,f,c
  6936  0035A2  B0D8               	btfsc	status,0,c
  6937  0035A4  2A0B               	incf	(___flge@ff2+2)^0,f,c
  6938  0035A6  0E80               	movlw	128
  6939  0035A8  560C               	subfwb	(___flge@ff2+3)^0,f,c
  6940  0035AA                     l710:
  6941  0035AA  0E00               	movlw	0
  6942  0035AC  1A05               	xorwf	___flge@ff1^0,f,c
  6943  0035AE  0E00               	movlw	0
  6944  0035B0  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  6945  0035B2  0E00               	movlw	0
  6946  0035B4  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  6947  0035B6  0E80               	movlw	128
  6948  0035B8  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  6949  0035BA  0E00               	movlw	0
  6950  0035BC  1A09               	xorwf	___flge@ff2^0,f,c
  6951  0035BE  0E00               	movlw	0
  6952  0035C0  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  6953  0035C2  0E00               	movlw	0
  6954  0035C4  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  6955  0035C6  0E80               	movlw	128
  6956  0035C8  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  6957  0035CA  5009               	movf	___flge@ff2^0,w,c
  6958  0035CC  5C05               	subwf	___flge@ff1^0,w,c
  6959  0035CE  500A               	movf	(___flge@ff2+1)^0,w,c
  6960  0035D0  5806               	subwfb	(___flge@ff1+1)^0,w,c
  6961  0035D2  500B               	movf	(___flge@ff2+2)^0,w,c
  6962  0035D4  5807               	subwfb	(___flge@ff1+2)^0,w,c
  6963  0035D6  500C               	movf	(___flge@ff2+3)^0,w,c
  6964  0035D8  5808               	subwfb	(___flge@ff1+3)^0,w,c
  6965  0035DA  B0D8               	btfsc	status,0,c
  6966  0035DC  EFF2  F01A         	goto	u3651
  6967  0035E0  EFF4  F01A         	goto	u3650
  6968  0035E4                     u3651:
  6969  0035E4  EFF7  F01A         	goto	l3895
  6970  0035E8                     u3650:
  6971  0035E8  90D8               	bcf	status,0,c
  6972  0035EA  EFF8  F01A         	goto	l715
  6973  0035EE                     l3895:
  6974  0035EE  80D8               	bsf	status,0,c
  6975  0035F0                     l715:
  6976  0035F0  0012               	return		;funcret
  6977  0035F2                     __end_of___flge:
  6978                           	callstack 0
  6979                           
  6980 ;; *************** function ___fleq *****************
  6981 ;; Defined at:
  6982 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  ff1             4    4[COMRAM] unsigned char 
  6985 ;;  ff2             4    8[COMRAM] unsigned char 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;		None               void
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;Total ram usage:       12 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 2
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_determine_color_new
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text33
  7012  003782                     __ptext33:
  7013                           	callstack 0
  7014  003782                     ___fleq:
  7015                           	callstack 27
  7016  003782  0E00               	movlw	0
  7017  003784  1405               	andwf	___fleq@ff1^0,w,c
  7018  003786  6E0D               	movwf	??___fleq^0,c
  7019  003788  0E00               	movlw	0
  7020  00378A  1406               	andwf	(___fleq@ff1+1)^0,w,c
  7021  00378C  6E0E               	movwf	(??___fleq+1)^0,c
  7022  00378E  0E80               	movlw	128
  7023  003790  1407               	andwf	(___fleq@ff1+2)^0,w,c
  7024  003792  6E0F               	movwf	(??___fleq+2)^0,c
  7025  003794  0E7F               	movlw	127
  7026  003796  1408               	andwf	(___fleq@ff1+3)^0,w,c
  7027  003798  6E10               	movwf	(??___fleq+3)^0,c
  7028  00379A  500D               	movf	??___fleq^0,w,c
  7029  00379C  100E               	iorwf	(??___fleq+1)^0,w,c
  7030  00379E  100F               	iorwf	(??___fleq+2)^0,w,c
  7031  0037A0  1010               	iorwf	(??___fleq+3)^0,w,c
  7032  0037A2  A4D8               	btfss	status,2,c
  7033  0037A4  EFD6  F01B         	goto	u3581
  7034  0037A8  EFD8  F01B         	goto	u3580
  7035  0037AC                     u3581:
  7036  0037AC  EFE0  F01B         	goto	l3865
  7037  0037B0                     u3580:
  7038  0037B0  0E00               	movlw	0
  7039  0037B2  6E05               	movwf	___fleq@ff1^0,c
  7040  0037B4  0E00               	movlw	0
  7041  0037B6  6E06               	movwf	(___fleq@ff1+1)^0,c
  7042  0037B8  0E00               	movlw	0
  7043  0037BA  6E07               	movwf	(___fleq@ff1+2)^0,c
  7044  0037BC  0E00               	movlw	0
  7045  0037BE  6E08               	movwf	(___fleq@ff1+3)^0,c
  7046  0037C0                     l3865:
  7047  0037C0  0E00               	movlw	0
  7048  0037C2  1409               	andwf	___fleq@ff2^0,w,c
  7049  0037C4  6E0D               	movwf	??___fleq^0,c
  7050  0037C6  0E00               	movlw	0
  7051  0037C8  140A               	andwf	(___fleq@ff2+1)^0,w,c
  7052  0037CA  6E0E               	movwf	(??___fleq+1)^0,c
  7053  0037CC  0E80               	movlw	128
  7054  0037CE  140B               	andwf	(___fleq@ff2+2)^0,w,c
  7055  0037D0  6E0F               	movwf	(??___fleq+2)^0,c
  7056  0037D2  0E7F               	movlw	127
  7057  0037D4  140C               	andwf	(___fleq@ff2+3)^0,w,c
  7058  0037D6  6E10               	movwf	(??___fleq+3)^0,c
  7059  0037D8  500D               	movf	??___fleq^0,w,c
  7060  0037DA  100E               	iorwf	(??___fleq+1)^0,w,c
  7061  0037DC  100F               	iorwf	(??___fleq+2)^0,w,c
  7062  0037DE  1010               	iorwf	(??___fleq+3)^0,w,c
  7063  0037E0  A4D8               	btfss	status,2,c
  7064  0037E2  EFF5  F01B         	goto	u3591
  7065  0037E6  EFF7  F01B         	goto	u3590
  7066  0037EA                     u3591:
  7067  0037EA  EFFF  F01B         	goto	l3869
  7068  0037EE                     u3590:
  7069  0037EE  0E00               	movlw	0
  7070  0037F0  6E09               	movwf	___fleq@ff2^0,c
  7071  0037F2  0E00               	movlw	0
  7072  0037F4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  7073  0037F6  0E00               	movlw	0
  7074  0037F8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  7075  0037FA  0E00               	movlw	0
  7076  0037FC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  7077  0037FE                     l3869:
  7078  0037FE  5009               	movf	___fleq@ff2^0,w,c
  7079  003800  1805               	xorwf	___fleq@ff1^0,w,c
  7080  003802  E10F               	bnz	u3600
  7081  003804  500A               	movf	(___fleq@ff2+1)^0,w,c
  7082  003806  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  7083  003808  E10C               	bnz	u3600
  7084  00380A  500B               	movf	(___fleq@ff2+2)^0,w,c
  7085  00380C  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  7086  00380E  E109               	bnz	u3600
  7087  003810  500C               	movf	(___fleq@ff2+3)^0,w,c
  7088  003812  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  7089  003814  B4D8               	btfsc	status,2,c
  7090  003816  EF0F  F01C         	goto	u3601
  7091  00381A  EF11  F01C         	goto	u3600
  7092  00381E                     u3601:
  7093  00381E  EF14  F01C         	goto	l3873
  7094  003822                     u3600:
  7095  003822  90D8               	bcf	status,0,c
  7096  003824  EF15  F01C         	goto	l704
  7097  003828                     l3873:
  7098  003828  80D8               	bsf	status,0,c
  7099  00382A                     l704:
  7100  00382A  0012               	return		;funcret
  7101  00382C                     __end_of___fleq:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function ___fldiv *****************
  7105 ;; Defined at:
  7106 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  b               4   29[COMRAM] unsigned char 
  7109 ;;  a               4   33[COMRAM] unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  grs             4   48[COMRAM] unsigned long 
  7112 ;;  rem             4   41[COMRAM] unsigned long 
  7113 ;;  new_exp         2   46[COMRAM] short 
  7114 ;;  aexp            1   53[COMRAM] unsigned char 
  7115 ;;  bexp            1   52[COMRAM] unsigned char 
  7116 ;;  sign            1   45[COMRAM] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  4   29[COMRAM] unsigned char 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7130 ;;Total ram usage:       25 bytes
  7131 ;; Hardware stack levels used: 1
  7132 ;; Hardware stack levels required when called: 2
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_determine_color_new
  7137 ;;		_main
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text34
  7142  00239A                     __ptext34:
  7143                           	callstack 0
  7144  00239A                     ___fldiv:
  7145                           	callstack 27
  7146  00239A  5021               	movf	(___fldiv@b+3)^0,w,c
  7147  00239C  0B80               	andlw	128
  7148  00239E  6E2E               	movwf	___fldiv@sign^0,c
  7149  0023A0  5021               	movf	(___fldiv@b+3)^0,w,c
  7150  0023A2  2421               	addwf	(___fldiv@b+3)^0,w,c
  7151  0023A4  6E35               	movwf	___fldiv@bexp^0,c
  7152  0023A6  AE20               	btfss	(___fldiv@b+2)^0,7,c
  7153  0023A8  EFD8  F011         	goto	u3351
  7154  0023AC  EFDA  F011         	goto	u3350
  7155  0023B0                     u3351:
  7156  0023B0  EFDB  F011         	goto	l3723
  7157  0023B4                     u3350:
  7158  0023B4  8035               	bsf	___fldiv@bexp^0,0,c
  7159  0023B6                     l3723:
  7160  0023B6  5035               	movf	___fldiv@bexp^0,w,c
  7161  0023B8  B4D8               	btfsc	status,2,c
  7162  0023BA  EFE1  F011         	goto	u3361
  7163  0023BE  EFE3  F011         	goto	u3360
  7164  0023C2                     u3361:
  7165  0023C2  EFF8  F011         	goto	l3733
  7166  0023C6                     u3360:
  7167  0023C6  2835               	incf	___fldiv@bexp^0,w,c
  7168  0023C8  A4D8               	btfss	status,2,c
  7169  0023CA  EFE9  F011         	goto	u3371
  7170  0023CE  EFEB  F011         	goto	u3370
  7171  0023D2                     u3371:
  7172  0023D2  EFF3  F011         	goto	l3729
  7173  0023D6                     u3370:
  7174  0023D6  0E00               	movlw	0
  7175  0023D8  6E1E               	movwf	___fldiv@b^0,c
  7176  0023DA  0E00               	movlw	0
  7177  0023DC  6E1F               	movwf	(___fldiv@b+1)^0,c
  7178  0023DE  0E00               	movlw	0
  7179  0023E0  6E20               	movwf	(___fldiv@b+2)^0,c
  7180  0023E2  0E00               	movlw	0
  7181  0023E4  6E21               	movwf	(___fldiv@b+3)^0,c
  7182  0023E6                     l3729:
  7183  0023E6  8E20               	bsf	(___fldiv@b+2)^0,7,c
  7184  0023E8  0E00               	movlw	0
  7185  0023EA  6E21               	movwf	(___fldiv@b+3)^0,c
  7186  0023EC  EF00  F012         	goto	l3735
  7187  0023F0                     l3733:
  7188  0023F0  0E00               	movlw	0
  7189  0023F2  6E1E               	movwf	___fldiv@b^0,c
  7190  0023F4  0E00               	movlw	0
  7191  0023F6  6E1F               	movwf	(___fldiv@b+1)^0,c
  7192  0023F8  0E00               	movlw	0
  7193  0023FA  6E20               	movwf	(___fldiv@b+2)^0,c
  7194  0023FC  0E00               	movlw	0
  7195  0023FE  6E21               	movwf	(___fldiv@b+3)^0,c
  7196  002400                     l3735:
  7197  002400  5025               	movf	(___fldiv@a+3)^0,w,c
  7198  002402  0B80               	andlw	128
  7199  002404  1A2E               	xorwf	___fldiv@sign^0,f,c
  7200  002406  5025               	movf	(___fldiv@a+3)^0,w,c
  7201  002408  2425               	addwf	(___fldiv@a+3)^0,w,c
  7202  00240A  6E36               	movwf	___fldiv@aexp^0,c
  7203  00240C  AE24               	btfss	(___fldiv@a+2)^0,7,c
  7204  00240E  EF0B  F012         	goto	u3381
  7205  002412  EF0D  F012         	goto	u3380
  7206  002416                     u3381:
  7207  002416  EF0E  F012         	goto	l3743
  7208  00241A                     u3380:
  7209  00241A  8036               	bsf	___fldiv@aexp^0,0,c
  7210  00241C                     l3743:
  7211  00241C  5036               	movf	___fldiv@aexp^0,w,c
  7212  00241E  B4D8               	btfsc	status,2,c
  7213  002420  EF14  F012         	goto	u3391
  7214  002424  EF16  F012         	goto	u3390
  7215  002428                     u3391:
  7216  002428  EF2B  F012         	goto	l3753
  7217  00242C                     u3390:
  7218  00242C  2836               	incf	___fldiv@aexp^0,w,c
  7219  00242E  A4D8               	btfss	status,2,c
  7220  002430  EF1C  F012         	goto	u3401
  7221  002434  EF1E  F012         	goto	u3400
  7222  002438                     u3401:
  7223  002438  EF26  F012         	goto	l3749
  7224  00243C                     u3400:
  7225  00243C  0E00               	movlw	0
  7226  00243E  6E22               	movwf	___fldiv@a^0,c
  7227  002440  0E00               	movlw	0
  7228  002442  6E23               	movwf	(___fldiv@a+1)^0,c
  7229  002444  0E00               	movlw	0
  7230  002446  6E24               	movwf	(___fldiv@a+2)^0,c
  7231  002448  0E00               	movlw	0
  7232  00244A  6E25               	movwf	(___fldiv@a+3)^0,c
  7233  00244C                     l3749:
  7234  00244C  8E24               	bsf	(___fldiv@a+2)^0,7,c
  7235  00244E  0E00               	movlw	0
  7236  002450  6E25               	movwf	(___fldiv@a+3)^0,c
  7237  002452  EF33  F012         	goto	l3755
  7238  002456                     l3753:
  7239  002456  0E00               	movlw	0
  7240  002458  6E22               	movwf	___fldiv@a^0,c
  7241  00245A  0E00               	movlw	0
  7242  00245C  6E23               	movwf	(___fldiv@a+1)^0,c
  7243  00245E  0E00               	movlw	0
  7244  002460  6E24               	movwf	(___fldiv@a+2)^0,c
  7245  002462  0E00               	movlw	0
  7246  002464  6E25               	movwf	(___fldiv@a+3)^0,c
  7247  002466                     l3755:
  7248  002466  5022               	movf	___fldiv@a^0,w,c
  7249  002468  1023               	iorwf	(___fldiv@a+1)^0,w,c
  7250  00246A  1024               	iorwf	(___fldiv@a+2)^0,w,c
  7251  00246C  1025               	iorwf	(___fldiv@a+3)^0,w,c
  7252  00246E  A4D8               	btfss	status,2,c
  7253  002470  EF3C  F012         	goto	u3411
  7254  002474  EF3E  F012         	goto	u3410
  7255  002478                     u3411:
  7256  002478  EF56  F012         	goto	l3767
  7257  00247C                     u3410:
  7258  00247C  0E00               	movlw	0
  7259  00247E  6E1E               	movwf	___fldiv@b^0,c
  7260  002480  0E00               	movlw	0
  7261  002482  6E1F               	movwf	(___fldiv@b+1)^0,c
  7262  002484  0E00               	movlw	0
  7263  002486  6E20               	movwf	(___fldiv@b+2)^0,c
  7264  002488  0E00               	movlw	0
  7265  00248A  6E21               	movwf	(___fldiv@b+3)^0,c
  7266  00248C  0E80               	movlw	128
  7267  00248E  1220               	iorwf	(___fldiv@b+2)^0,f,c
  7268  002490  0E7F               	movlw	127
  7269  002492  1221               	iorwf	(___fldiv@b+3)^0,f,c
  7270  002494                     l3761:
  7271  002494  502E               	movf	___fldiv@sign^0,w,c
  7272  002496  1221               	iorwf	(___fldiv@b+3)^0,f,c
  7273  002498  C01E  F01E         	movff	___fldiv@b,?___fldiv
  7274  00249C  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
  7275  0024A0  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
  7276  0024A4  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
  7277  0024A8  EF99  F013         	goto	l1027
  7278  0024AC                     l3767:
  7279  0024AC  5035               	movf	___fldiv@bexp^0,w,c
  7280  0024AE  A4D8               	btfss	status,2,c
  7281  0024B0  EF5C  F012         	goto	u3421
  7282  0024B4  EF5E  F012         	goto	u3420
  7283  0024B8                     u3421:
  7284  0024B8  EF68  F012         	goto	l3775
  7285  0024BC                     u3420:
  7286  0024BC  0E00               	movlw	0
  7287  0024BE  6E1E               	movwf	?___fldiv^0,c
  7288  0024C0  0E00               	movlw	0
  7289  0024C2  6E1F               	movwf	(?___fldiv+1)^0,c
  7290  0024C4  0E00               	movlw	0
  7291  0024C6  6E20               	movwf	(?___fldiv+2)^0,c
  7292  0024C8  0E00               	movlw	0
  7293  0024CA  6E21               	movwf	(?___fldiv+3)^0,c
  7294  0024CC  EF99  F013         	goto	l1027
  7295  0024D0                     l3775:
  7296  0024D0  5036               	movf	___fldiv@aexp^0,w,c
  7297  0024D2  C035  F026         	movff	___fldiv@bexp,??___fldiv
  7298  0024D6  6A27               	clrf	(??___fldiv+1)^0,c
  7299  0024D8  5E26               	subwf	??___fldiv^0,f,c
  7300  0024DA  0E00               	movlw	0
  7301  0024DC  5A27               	subwfb	(??___fldiv+1)^0,f,c
  7302  0024DE  0E7F               	movlw	127
  7303  0024E0  2426               	addwf	??___fldiv^0,w,c
  7304  0024E2  6E2F               	movwf	___fldiv@new_exp^0,c
  7305  0024E4  0E00               	movlw	0
  7306  0024E6  2027               	addwfc	(??___fldiv+1)^0,w,c
  7307  0024E8  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  7308  0024EA  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
  7309  0024EE  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
  7310  0024F2  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
  7311  0024F6  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
  7312  0024FA  0E00               	movlw	0
  7313  0024FC  6E1E               	movwf	___fldiv@b^0,c
  7314  0024FE  0E00               	movlw	0
  7315  002500  6E1F               	movwf	(___fldiv@b+1)^0,c
  7316  002502  0E00               	movlw	0
  7317  002504  6E20               	movwf	(___fldiv@b+2)^0,c
  7318  002506  0E00               	movlw	0
  7319  002508  6E21               	movwf	(___fldiv@b+3)^0,c
  7320  00250A  0E00               	movlw	0
  7321  00250C  6E31               	movwf	___fldiv@grs^0,c
  7322  00250E  0E00               	movlw	0
  7323  002510  6E32               	movwf	(___fldiv@grs+1)^0,c
  7324  002512  0E00               	movlw	0
  7325  002514  6E33               	movwf	(___fldiv@grs+2)^0,c
  7326  002516  0E00               	movlw	0
  7327  002518  6E34               	movwf	(___fldiv@grs+3)^0,c
  7328  00251A  0E00               	movlw	0
  7329  00251C  6E36               	movwf	___fldiv@aexp^0,c
  7330  00251E  EFC9  F012         	goto	l1029
  7331  002522                     l3785:
  7332  002522  5036               	movf	___fldiv@aexp^0,w,c
  7333  002524  B4D8               	btfsc	status,2,c
  7334  002526  EF97  F012         	goto	u3431
  7335  00252A  EF99  F012         	goto	u3430
  7336  00252E                     u3431:
  7337  00252E  EFB0  F012         	goto	l3793
  7338  002532                     u3430:
  7339  002532  90D8               	bcf	status,0,c
  7340  002534  362A               	rlcf	___fldiv@rem^0,f,c
  7341  002536  362B               	rlcf	(___fldiv@rem+1)^0,f,c
  7342  002538  362C               	rlcf	(___fldiv@rem+2)^0,f,c
  7343  00253A  362D               	rlcf	(___fldiv@rem+3)^0,f,c
  7344  00253C  90D8               	bcf	status,0,c
  7345  00253E  361E               	rlcf	___fldiv@b^0,f,c
  7346  002540  361F               	rlcf	(___fldiv@b+1)^0,f,c
  7347  002542  3620               	rlcf	(___fldiv@b+2)^0,f,c
  7348  002544  3621               	rlcf	(___fldiv@b+3)^0,f,c
  7349  002546  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  7350  002548  EFA8  F012         	goto	u3441
  7351  00254C  EFAA  F012         	goto	u3440
  7352  002550                     u3441:
  7353  002550  EFAB  F012         	goto	l1032
  7354  002554                     u3440:
  7355  002554  801E               	bsf	___fldiv@b^0,0,c
  7356  002556                     l1032:
  7357  002556  90D8               	bcf	status,0,c
  7358  002558  3631               	rlcf	___fldiv@grs^0,f,c
  7359  00255A  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  7360  00255C  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  7361  00255E  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  7362  002560                     l3793:
  7363  002560  5022               	movf	___fldiv@a^0,w,c
  7364  002562  5C2A               	subwf	___fldiv@rem^0,w,c
  7365  002564  5023               	movf	(___fldiv@a+1)^0,w,c
  7366  002566  582B               	subwfb	(___fldiv@rem+1)^0,w,c
  7367  002568  5024               	movf	(___fldiv@a+2)^0,w,c
  7368  00256A  582C               	subwfb	(___fldiv@rem+2)^0,w,c
  7369  00256C  5025               	movf	(___fldiv@a+3)^0,w,c
  7370  00256E  582D               	subwfb	(___fldiv@rem+3)^0,w,c
  7371  002570  A0D8               	btfss	status,0,c
  7372  002572  EFBD  F012         	goto	u3451
  7373  002576  EFBF  F012         	goto	u3450
  7374  00257A                     u3451:
  7375  00257A  EFC8  F012         	goto	l3799
  7376  00257E                     u3450:
  7377  00257E  8C34               	bsf	(___fldiv@grs+3)^0,6,c
  7378  002580  5022               	movf	___fldiv@a^0,w,c
  7379  002582  5E2A               	subwf	___fldiv@rem^0,f,c
  7380  002584  5023               	movf	(___fldiv@a+1)^0,w,c
  7381  002586  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
  7382  002588  5024               	movf	(___fldiv@a+2)^0,w,c
  7383  00258A  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
  7384  00258C  5025               	movf	(___fldiv@a+3)^0,w,c
  7385  00258E  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
  7386  002590                     l3799:
  7387  002590  2A36               	incf	___fldiv@aexp^0,f,c
  7388  002592                     l1029:
  7389  002592  0E19               	movlw	25
  7390  002594  6436               	cpfsgt	___fldiv@aexp^0,c
  7391  002596  EFCF  F012         	goto	u3461
  7392  00259A  EFD1  F012         	goto	u3460
  7393  00259E                     u3461:
  7394  00259E  EF91  F012         	goto	l3785
  7395  0025A2                     u3460:
  7396  0025A2  502A               	movf	___fldiv@rem^0,w,c
  7397  0025A4  102B               	iorwf	(___fldiv@rem+1)^0,w,c
  7398  0025A6  102C               	iorwf	(___fldiv@rem+2)^0,w,c
  7399  0025A8  102D               	iorwf	(___fldiv@rem+3)^0,w,c
  7400  0025AA  B4D8               	btfsc	status,2,c
  7401  0025AC  EFDA  F012         	goto	u3471
  7402  0025B0  EFDC  F012         	goto	u3470
  7403  0025B4                     u3471:
  7404  0025B4  EFF4  F012         	goto	l3811
  7405  0025B8                     u3470:
  7406  0025B8  8031               	bsf	___fldiv@grs^0,0,c
  7407  0025BA  EFF4  F012         	goto	l3811
  7408  0025BE                     l3805:
  7409  0025BE  90D8               	bcf	status,0,c
  7410  0025C0  361E               	rlcf	___fldiv@b^0,f,c
  7411  0025C2  361F               	rlcf	(___fldiv@b+1)^0,f,c
  7412  0025C4  3620               	rlcf	(___fldiv@b+2)^0,f,c
  7413  0025C6  3621               	rlcf	(___fldiv@b+3)^0,f,c
  7414  0025C8  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  7415  0025CA  EFE9  F012         	goto	u3481
  7416  0025CE  EFEB  F012         	goto	u3480
  7417  0025D2                     u3481:
  7418  0025D2  EFEC  F012         	goto	l1038
  7419  0025D6                     u3480:
  7420  0025D6  801E               	bsf	___fldiv@b^0,0,c
  7421  0025D8                     l1038:
  7422  0025D8  90D8               	bcf	status,0,c
  7423  0025DA  3631               	rlcf	___fldiv@grs^0,f,c
  7424  0025DC  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  7425  0025DE  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  7426  0025E0  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  7427  0025E2  062F               	decf	___fldiv@new_exp^0,f,c
  7428  0025E4  A0D8               	btfss	status,0,c
  7429  0025E6  0630               	decf	(___fldiv@new_exp+1)^0,f,c
  7430  0025E8                     l3811:
  7431  0025E8  AE20               	btfss	(___fldiv@b+2)^0,7,c
  7432  0025EA  EFF9  F012         	goto	u3491
  7433  0025EE  EFFB  F012         	goto	u3490
  7434  0025F2                     u3491:
  7435  0025F2  EFDF  F012         	goto	l3805
  7436  0025F6                     u3490:
  7437  0025F6  0E00               	movlw	0
  7438  0025F8  6E36               	movwf	___fldiv@aexp^0,c
  7439  0025FA  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  7440  0025FC  EF02  F013         	goto	u3501
  7441  002600  EF04  F013         	goto	u3500
  7442  002604                     u3501:
  7443  002604  EF28  F013         	goto	l1040
  7444  002608                     u3500:
  7445  002608  0EFF               	movlw	255
  7446  00260A  1431               	andwf	___fldiv@grs^0,w,c
  7447  00260C  6E26               	movwf	??___fldiv^0,c
  7448  00260E  0EFF               	movlw	255
  7449  002610  1432               	andwf	(___fldiv@grs+1)^0,w,c
  7450  002612  6E27               	movwf	(??___fldiv+1)^0,c
  7451  002614  0EFF               	movlw	255
  7452  002616  1433               	andwf	(___fldiv@grs+2)^0,w,c
  7453  002618  6E28               	movwf	(??___fldiv+2)^0,c
  7454  00261A  0E7F               	movlw	127
  7455  00261C  1434               	andwf	(___fldiv@grs+3)^0,w,c
  7456  00261E  6E29               	movwf	(??___fldiv+3)^0,c
  7457  002620  5026               	movf	??___fldiv^0,w,c
  7458  002622  1027               	iorwf	(??___fldiv+1)^0,w,c
  7459  002624  1028               	iorwf	(??___fldiv+2)^0,w,c
  7460  002626  1029               	iorwf	(??___fldiv+3)^0,w,c
  7461  002628  B4D8               	btfsc	status,2,c
  7462  00262A  EF19  F013         	goto	u3511
  7463  00262E  EF1B  F013         	goto	u3510
  7464  002632                     u3511:
  7465  002632  EF1F  F013         	goto	l1041
  7466  002636                     u3510:
  7467  002636                     l3819:
  7468  002636  0E01               	movlw	1
  7469  002638  6E36               	movwf	___fldiv@aexp^0,c
  7470  00263A  EF28  F013         	goto	l1040
  7471  00263E                     l1041:
  7472  00263E  A01E               	btfss	___fldiv@b^0,0,c
  7473  002640  EF24  F013         	goto	u3521
  7474  002644  EF26  F013         	goto	u3520
  7475  002648                     u3521:
  7476  002648  EF28  F013         	goto	l1040
  7477  00264C                     u3520:
  7478  00264C  EF1B  F013         	goto	l3819
  7479  002650                     l1040:
  7480  002650  5036               	movf	___fldiv@aexp^0,w,c
  7481  002652  B4D8               	btfsc	status,2,c
  7482  002654  EF2E  F013         	goto	u3531
  7483  002658  EF30  F013         	goto	u3530
  7484  00265C                     u3531:
  7485  00265C  EF54  F013         	goto	l3831
  7486  002660                     u3530:
  7487  002660  0E01               	movlw	1
  7488  002662  261E               	addwf	___fldiv@b^0,f,c
  7489  002664  0E00               	movlw	0
  7490  002666  221F               	addwfc	(___fldiv@b+1)^0,f,c
  7491  002668  2220               	addwfc	(___fldiv@b+2)^0,f,c
  7492  00266A  2221               	addwfc	(___fldiv@b+3)^0,f,c
  7493  00266C  A021               	btfss	(___fldiv@b+3)^0,0,c
  7494  00266E  EF3B  F013         	goto	u3541
  7495  002672  EF3D  F013         	goto	u3540
  7496  002676                     u3541:
  7497  002676  EF54  F013         	goto	l3831
  7498  00267A                     u3540:
  7499  00267A  C01E  F026         	movff	___fldiv@b,??___fldiv
  7500  00267E  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
  7501  002682  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
  7502  002686  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
  7503  00268A  3429               	rlcf	(??___fldiv+3)^0,w,c
  7504  00268C  3229               	rrcf	(??___fldiv+3)^0,f,c
  7505  00268E  3228               	rrcf	(??___fldiv+2)^0,f,c
  7506  002690  3227               	rrcf	(??___fldiv+1)^0,f,c
  7507  002692  3226               	rrcf	??___fldiv^0,f,c
  7508  002694  C026  F01E         	movff	??___fldiv,___fldiv@b
  7509  002698  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
  7510  00269C  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
  7511  0026A0  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
  7512  0026A4  4A2F               	infsnz	___fldiv@new_exp^0,f,c
  7513  0026A6  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
  7514  0026A8                     l3831:
  7515  0026A8  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7516  0026AA  EF5F  F013         	goto	u3551
  7517  0026AE  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  7518  0026B0  E108               	bnz	u3550
  7519  0026B2  282F               	incf	___fldiv@new_exp^0,w,c
  7520  0026B4  A0D8               	btfss	status,0,c
  7521  0026B6  EF5F  F013         	goto	u3551
  7522  0026BA  EF61  F013         	goto	u3550
  7523  0026BE                     u3551:
  7524  0026BE  EF6C  F013         	goto	l3835
  7525  0026C2                     u3550:
  7526  0026C2  0E00               	movlw	0
  7527  0026C4  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  7528  0026C6  682F               	setf	___fldiv@new_exp^0,c
  7529  0026C8  0E00               	movlw	0
  7530  0026CA  6E1E               	movwf	___fldiv@b^0,c
  7531  0026CC  0E00               	movlw	0
  7532  0026CE  6E1F               	movwf	(___fldiv@b+1)^0,c
  7533  0026D0  0E00               	movlw	0
  7534  0026D2  6E20               	movwf	(___fldiv@b+2)^0,c
  7535  0026D4  0E00               	movlw	0
  7536  0026D6  6E21               	movwf	(___fldiv@b+3)^0,c
  7537  0026D8                     l3835:
  7538  0026D8  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7539  0026DA  EF79  F013         	goto	u3560
  7540  0026DE  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  7541  0026E0  E106               	bnz	u3561
  7542  0026E2  042F               	decf	___fldiv@new_exp^0,w,c
  7543  0026E4  B0D8               	btfsc	status,0,c
  7544  0026E6  EF77  F013         	goto	u3561
  7545  0026EA  EF79  F013         	goto	u3560
  7546  0026EE                     u3561:
  7547  0026EE  EF87  F013         	goto	l3839
  7548  0026F2                     u3560:
  7549  0026F2  0E00               	movlw	0
  7550  0026F4  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  7551  0026F6  0E00               	movlw	0
  7552  0026F8  6E2F               	movwf	___fldiv@new_exp^0,c
  7553  0026FA  0E00               	movlw	0
  7554  0026FC  6E1E               	movwf	___fldiv@b^0,c
  7555  0026FE  0E00               	movlw	0
  7556  002700  6E1F               	movwf	(___fldiv@b+1)^0,c
  7557  002702  0E00               	movlw	0
  7558  002704  6E20               	movwf	(___fldiv@b+2)^0,c
  7559  002706  0E00               	movlw	0
  7560  002708  6E21               	movwf	(___fldiv@b+3)^0,c
  7561  00270A  0E00               	movlw	0
  7562  00270C  6E2E               	movwf	___fldiv@sign^0,c
  7563  00270E                     l3839:
  7564  00270E  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
  7565  002712  A035               	btfss	___fldiv@bexp^0,0,c
  7566  002714  EF8E  F013         	goto	u3571
  7567  002718  EF90  F013         	goto	u3570
  7568  00271C                     u3571:
  7569  00271C  EF93  F013         	goto	l3845
  7570  002720                     u3570:
  7571  002720  8E20               	bsf	(___fldiv@b+2)^0,7,c
  7572  002722  EF94  F013         	goto	l3847
  7573  002726                     l3845:
  7574  002726  9E20               	bcf	(___fldiv@b+2)^0,7,c
  7575  002728                     l3847:
  7576  002728  90D8               	bcf	status,0,c
  7577  00272A  3035               	rrcf	___fldiv@bexp^0,w,c
  7578  00272C  6E21               	movwf	(___fldiv@b+3)^0,c
  7579  00272E  EF4A  F012         	goto	l3761
  7580  002732                     l1027:
  7581  002732  0012               	return		;funcret
  7582  002734                     __end_of___fldiv:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function _color_click_init *****************
  7586 ;; Defined at:
  7587 ;;		line 6 in file "color.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        1 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 5
  7608 ;; This function calls:
  7609 ;;		_I2C_2_Master_Init
  7610 ;;		_color_writetoaddr
  7611 ;; This function is called by:
  7612 ;;		_main
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text35
  7617  003DBC                     __ptext35:
  7618                           	callstack 0
  7619  003DBC                     _color_click_init:
  7620                           	callstack 25
  7621  003DBC                     
  7622                           ;color.c: 9:     I2C_2_Master_Init();
  7623  003DBC  EC26  F01F         	call	_I2C_2_Master_Init	;wreg free
  7624  003DC0                     
  7625                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  7626  003DC0  0E01               	movlw	1
  7627  003DC2  6E07               	movwf	color_writetoaddr@value^0,c
  7628  003DC4  0E00               	movlw	0
  7629  003DC6  EC9C  F01F         	call	_color_writetoaddr
  7630  003DCA                     
  7631                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7632  003DCA  0E3F               	movlw	63
  7633  003DCC  6E09               	movwf	??_color_click_init^0,c
  7634  003DCE  0E55               	movlw	85
  7635  003DD0                     u5507:
  7636  003DD0  2EE8               	decfsz	wreg,f,c
  7637  003DD2  D7FE               	bra	u5507
  7638  003DD4  2E09               	decfsz	??_color_click_init^0,f,c
  7639  003DD6  D7FC               	bra	u5507
  7640  003DD8  F000               	nop	
  7641  003DDA                     
  7642                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  7643  003DDA  0E03               	movlw	3
  7644  003DDC  6E07               	movwf	color_writetoaddr@value^0,c
  7645  003DDE  0E00               	movlw	0
  7646  003DE0  EC9C  F01F         	call	_color_writetoaddr
  7647  003DE4                     
  7648                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  7649  003DE4  0ED5               	movlw	213
  7650  003DE6  6E07               	movwf	color_writetoaddr@value^0,c
  7651  003DE8  0E01               	movlw	1
  7652  003DEA  EC9C  F01F         	call	_color_writetoaddr
  7653  003DEE  0012               	return		;funcret
  7654  003DF0                     __end_of_color_click_init:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _color_writetoaddr *****************
  7658 ;; Defined at:
  7659 ;;		line 22 in file "color.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  address         1    wreg     unsigned char 
  7662 ;;  value           1    6[COMRAM] unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  address         1    7[COMRAM] unsigned char 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      void 
  7667 ;; Registers used:
  7668 ;;		wreg, status,2, status,0, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7674 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;Total ram usage:        2 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 4
  7681 ;; This function calls:
  7682 ;;		_I2C_2_Master_Start
  7683 ;;		_I2C_2_Master_Stop
  7684 ;;		_I2C_2_Master_Write
  7685 ;; This function is called by:
  7686 ;;		_color_click_init
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text36
  7691  003F38                     __ptext36:
  7692                           	callstack 0
  7693  003F38                     _color_writetoaddr:
  7694                           	callstack 25
  7695                           
  7696                           ;incstack = 0
  7697                           ;color_writetoaddr@address stored from wreg
  7698  003F38  6E08               	movwf	color_writetoaddr@address^0,c
  7699  003F3A                     
  7700                           ;color.c: 23:     I2C_2_Master_Start();
  7701  003F3A  ECE7  F01F         	call	_I2C_2_Master_Start	;wreg free
  7702                           
  7703                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7704  003F3E  0E52               	movlw	82
  7705  003F40  ECD1  F01F         	call	_I2C_2_Master_Write
  7706                           
  7707                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7708  003F44  5008               	movf	color_writetoaddr@address^0,w,c
  7709  003F46  0980               	iorlw	128
  7710  003F48  ECD1  F01F         	call	_I2C_2_Master_Write
  7711                           
  7712                           ;color.c: 26:     I2C_2_Master_Write(value);
  7713  003F4C  5007               	movf	color_writetoaddr@value^0,w,c
  7714  003F4E  ECD1  F01F         	call	_I2C_2_Master_Write
  7715                           
  7716                           ;color.c: 27:     I2C_2_Master_Stop();
  7717  003F52  ECE2  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7718  003F56  0012               	return		;funcret
  7719  003F58                     __end_of_color_writetoaddr:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function _I2C_2_Master_Write *****************
  7723 ;; Defined at:
  7724 ;;		line 45 in file "i2c.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  data_byte       1    wreg     unsigned char 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  data_byte       1    5[COMRAM] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1    wreg      void 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;Total ram usage:        1 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 3
  7745 ;; This function calls:
  7746 ;;		_I2C_2_Master_Idle
  7747 ;; This function is called by:
  7748 ;;		_color_writetoaddr
  7749 ;;		_color_read_Clear
  7750 ;;		_color_read_Red
  7751 ;;		_color_read_Green
  7752 ;;		_color_read_Blue
  7753 ;;		_read_color_sensor
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text37
  7758  003FA2                     __ptext37:
  7759                           	callstack 0
  7760  003FA2                     _I2C_2_Master_Write:
  7761                           	callstack 25
  7762                           
  7763                           ;incstack = 0
  7764                           ;I2C_2_Master_Write@data_byte stored from wreg
  7765  003FA2  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  7766  003FA4                     
  7767                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7768  003FA4  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7769  003FA8                     
  7770                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7771  003FA8  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7772  003FAC  0012               	return		;funcret
  7773  003FAE                     __end_of_I2C_2_Master_Write:
  7774                           	callstack 0
  7775                           
  7776 ;; *************** function _I2C_2_Master_Stop *****************
  7777 ;; Defined at:
  7778 ;;		line 39 in file "i2c.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;		None
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  1    wreg      void 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0, cstack
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7796 ;;Total ram usage:        0 bytes
  7797 ;; Hardware stack levels used: 1
  7798 ;; Hardware stack levels required when called: 3
  7799 ;; This function calls:
  7800 ;;		_I2C_2_Master_Idle
  7801 ;; This function is called by:
  7802 ;;		_color_writetoaddr
  7803 ;;		_color_read_Clear
  7804 ;;		_color_read_Red
  7805 ;;		_color_read_Green
  7806 ;;		_color_read_Blue
  7807 ;;		_read_color_sensor
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text38
  7812  003FC4                     __ptext38:
  7813                           	callstack 0
  7814  003FC4                     _I2C_2_Master_Stop:
  7815                           	callstack 25
  7816  003FC4                     
  7817                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7818  003FC4  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7819  003FC8                     
  7820                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7821  003FC8  010E               	movlb	14	; () banked
  7822  003FCA  85DA               	bsf	218,2,b	;volatile
  7823  003FCC                     
  7824                           ; BSR set to: 14
  7825  003FCC  0012               	return		;funcret
  7826  003FCE                     __end_of_I2C_2_Master_Stop:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _I2C_2_Master_Start *****************
  7830 ;; Defined at:
  7831 ;;		line 27 in file "i2c.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;		None
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;		None
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, status,2, status,0, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;Total ram usage:        0 bytes
  7850 ;; Hardware stack levels used: 1
  7851 ;; Hardware stack levels required when called: 3
  7852 ;; This function calls:
  7853 ;;		_I2C_2_Master_Idle
  7854 ;; This function is called by:
  7855 ;;		_color_writetoaddr
  7856 ;;		_color_read_Clear
  7857 ;;		_color_read_Red
  7858 ;;		_color_read_Green
  7859 ;;		_color_read_Blue
  7860 ;;		_read_color_sensor
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text39
  7865  003FCE                     __ptext39:
  7866                           	callstack 0
  7867  003FCE                     _I2C_2_Master_Start:
  7868                           	callstack 25
  7869  003FCE                     
  7870                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7871  003FCE  EC65  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7872  003FD2                     
  7873                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7874  003FD2  010E               	movlb	14	; () banked
  7875  003FD4  81DA               	bsf	218,0,b	;volatile
  7876  003FD6                     
  7877                           ; BSR set to: 14
  7878  003FD6  0012               	return		;funcret
  7879  003FD8                     __end_of_I2C_2_Master_Start:
  7880                           	callstack 0
  7881                           
  7882 ;; *************** function _I2C_2_Master_Idle *****************
  7883 ;; Defined at:
  7884 ;;		line 22 in file "i2c.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;		None
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;		None
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;Total ram usage:        1 bytes
  7903 ;; Hardware stack levels used: 1
  7904 ;; Hardware stack levels required when called: 2
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_I2C_2_Master_Start
  7909 ;;		_I2C_2_Master_RepStart
  7910 ;;		_I2C_2_Master_Stop
  7911 ;;		_I2C_2_Master_Write
  7912 ;;		_I2C_2_Master_Read
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text40
  7917  003ECA                     __ptext40:
  7918                           	callstack 0
  7919  003ECA                     _I2C_2_Master_Idle:
  7920                           	callstack 25
  7921  003ECA                     l138:
  7922  003ECA  010E               	movlb	14	; () banked
  7923  003ECC  B5D8               	btfsc	216,2,b	;volatile
  7924  003ECE  EF6B  F01F         	goto	u2511
  7925  003ED2  EF6D  F01F         	goto	u2510
  7926  003ED6                     u2511:
  7927  003ED6  EF65  F01F         	goto	l138
  7928  003EDA                     u2510:
  7929  003EDA                     
  7930                           ; BSR set to: 14
  7931  003EDA  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7932  003EDE  0E1F               	movlw	31
  7933  003EE0  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  7934  003EE2  A4D8               	btfss	status,2,c
  7935  003EE4  EF76  F01F         	goto	u2521
  7936  003EE8  EF78  F01F         	goto	u2520
  7937  003EEC                     u2521:
  7938  003EEC  EF65  F01F         	goto	l138
  7939  003EF0                     u2520:
  7940  003EF0                     
  7941                           ; BSR set to: 14
  7942  003EF0  0012               	return		;funcret
  7943  003EF2                     __end_of_I2C_2_Master_Idle:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _I2C_2_Master_Init *****************
  7947 ;; Defined at:
  7948 ;;		line 4 in file "i2c.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;		None
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;Total ram usage:        0 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 2
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_color_click_init
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text41
  7977  003E4C                     __ptext41:
  7978                           	callstack 0
  7979  003E4C                     _I2C_2_Master_Init:
  7980                           	callstack 27
  7981  003E4C                     
  7982                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7983  003E4C  010E               	movlb	14	; () banked
  7984  003E4E  51D9               	movf	217,w,b	;volatile
  7985  003E50  0BF0               	andlw	-16
  7986  003E52  0908               	iorlw	8
  7987  003E54  6FD9               	movwf	217,b	;volatile
  7988  003E56                     
  7989                           ; BSR set to: 14
  7990                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7991  003E56  8BD9               	bsf	217,5,b	;volatile
  7992                           
  7993                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7994  003E58  0E9F               	movlw	159
  7995  003E5A  6FD6               	movwf	214,b	;volatile
  7996  003E5C                     
  7997                           ; BSR set to: 14
  7998                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7999  003E5C  8A84               	bsf	132,5,c	;volatile
  8000  003E5E                     
  8001                           ; BSR set to: 14
  8002                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8003  003E5E  8C84               	bsf	132,6,c	;volatile
  8004  003E60                     
  8005                           ; BSR set to: 14
  8006                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8007  003E60  9BA7               	bcf	167,5,b	;volatile
  8008  003E62                     
  8009                           ; BSR set to: 14
  8010                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8011  003E62  9DA7               	bcf	167,6,b	;volatile
  8012                           
  8013                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8014  003E64  0E1D               	movlw	29
  8015  003E66  6F1D               	movwf	29,b	;volatile
  8016                           
  8017                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8018  003E68  0E1E               	movlw	30
  8019  003E6A  6F1C               	movwf	28,b	;volatile
  8020                           
  8021                           ;i2c.c: 18:   RD5PPS=0x1C;
  8022  003E6C  0E1C               	movlw	28
  8023  003E6E  6F6F               	movwf	111,b	;volatile
  8024                           
  8025                           ;i2c.c: 19:   RD6PPS=0x1B;
  8026  003E70  0E1B               	movlw	27
  8027  003E72  6F70               	movwf	112,b	;volatile
  8028  003E74                     
  8029                           ; BSR set to: 14
  8030  003E74  0012               	return		;funcret
  8031  003E76                     __end_of_I2C_2_Master_Init:
  8032                           	callstack 0
  8033                           
  8034 ;; *************** function ___fltol *****************
  8035 ;; Defined at:
  8036 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  f1              4   62[COMRAM] void 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  exp1            1   71[COMRAM] unsigned char 
  8041 ;;  sign1           1   70[COMRAM] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  4   62[COMRAM] long 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;Total ram usage:       10 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; Hardware stack levels required when called: 2
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_main
  8062 ;;		_determine_color1
  8063 ;;		_determine_color2
  8064 ;;		_determine_color3
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text42
  8069  0033E8                     __ptext42:
  8070                           	callstack 0
  8071  0033E8                     ___fltol:
  8072                           	callstack 28
  8073  0033E8  3441               	rlcf	(___fltol@f1+2)^0,w,c
  8074  0033EA  3442               	rlcf	(___fltol@f1+3)^0,w,c
  8075  0033EC  6E48               	movwf	___fltol@exp1^0,c
  8076  0033EE  5048               	movf	___fltol@exp1^0,w,c
  8077  0033F0  A4D8               	btfss	status,2,c
  8078  0033F2  EFFD  F019         	goto	u4121
  8079  0033F6  EFFF  F019         	goto	u4120
  8080  0033FA                     u4121:
  8081  0033FA  EF09  F01A         	goto	l4265
  8082  0033FE                     u4120:
  8083  0033FE                     l4261:
  8084  0033FE  0E00               	movlw	0
  8085  003400  6E3F               	movwf	?___fltol^0,c
  8086  003402  0E00               	movlw	0
  8087  003404  6E40               	movwf	(?___fltol+1)^0,c
  8088  003406  0E00               	movlw	0
  8089  003408  6E41               	movwf	(?___fltol+2)^0,c
  8090  00340A  0E00               	movlw	0
  8091  00340C  6E42               	movwf	(?___fltol+3)^0,c
  8092  00340E  EF76  F01A         	goto	l742
  8093  003412                     l4265:
  8094  003412  C03F  F043         	movff	___fltol@f1,??___fltol
  8095  003416  C040  F044         	movff	___fltol@f1+1,??___fltol+1
  8096  00341A  C041  F045         	movff	___fltol@f1+2,??___fltol+2
  8097  00341E  C042  F046         	movff	___fltol@f1+3,??___fltol+3
  8098  003422  0E20               	movlw	32
  8099  003424  EF19  F01A         	goto	u4130
  8100  003428                     u4135:
  8101  003428  90D8               	bcf	status,0,c
  8102  00342A  3246               	rrcf	(??___fltol+3)^0,f,c
  8103  00342C  3245               	rrcf	(??___fltol+2)^0,f,c
  8104  00342E  3244               	rrcf	(??___fltol+1)^0,f,c
  8105  003430  3243               	rrcf	??___fltol^0,f,c
  8106  003432                     u4130:
  8107  003432  2EE8               	decfsz	wreg,f,c
  8108  003434  EF14  F01A         	goto	u4135
  8109  003438  5043               	movf	??___fltol^0,w,c
  8110  00343A  6E47               	movwf	___fltol@sign1^0,c
  8111  00343C  8E41               	bsf	(___fltol@f1+2)^0,7,c
  8112  00343E  0EFF               	movlw	255
  8113  003440  163F               	andwf	___fltol@f1^0,f,c
  8114  003442  0EFF               	movlw	255
  8115  003444  1640               	andwf	(___fltol@f1+1)^0,f,c
  8116  003446  0EFF               	movlw	255
  8117  003448  1641               	andwf	(___fltol@f1+2)^0,f,c
  8118  00344A  0E00               	movlw	0
  8119  00344C  1642               	andwf	(___fltol@f1+3)^0,f,c
  8120  00344E  0E96               	movlw	150
  8121  003450  5E48               	subwf	___fltol@exp1^0,f,c
  8122  003452  BE48               	btfsc	___fltol@exp1^0,7,c
  8123  003454  EF30  F01A         	goto	u4140
  8124  003458  EF2E  F01A         	goto	u4141
  8125  00345C                     u4141:
  8126  00345C  EF46  F01A         	goto	l4285
  8127  003460                     u4140:
  8128  003460  5048               	movf	___fltol@exp1^0,w,c
  8129  003462  0A80               	xorlw	128
  8130  003464  0F97               	addlw	151
  8131  003466  B0D8               	btfsc	status,0,c
  8132  003468  EF38  F01A         	goto	u4151
  8133  00346C  EF3A  F01A         	goto	u4150
  8134  003470                     u4151:
  8135  003470  EF3C  F01A         	goto	l4281
  8136  003474                     u4150:
  8137  003474  EFFF  F019         	goto	l4261
  8138  003478                     l4281:
  8139  003478  90D8               	bcf	status,0,c
  8140  00347A  3242               	rrcf	(___fltol@f1+3)^0,f,c
  8141  00347C  3241               	rrcf	(___fltol@f1+2)^0,f,c
  8142  00347E  3240               	rrcf	(___fltol@f1+1)^0,f,c
  8143  003480  323F               	rrcf	___fltol@f1^0,f,c
  8144  003482  3E48               	incfsz	___fltol@exp1^0,f,c
  8145  003484  EF3C  F01A         	goto	l4281
  8146  003488  EF5E  F01A         	goto	l4295
  8147  00348C                     l4285:
  8148  00348C  0E1F               	movlw	31
  8149  00348E  6448               	cpfsgt	___fltol@exp1^0,c
  8150  003490  EF4C  F01A         	goto	u4161
  8151  003494  EF4E  F01A         	goto	u4160
  8152  003498                     u4161:
  8153  003498  EF56  F01A         	goto	l4293
  8154  00349C                     u4160:
  8155  00349C  EFFF  F019         	goto	l4261
  8156  0034A0                     l4291:
  8157  0034A0  90D8               	bcf	status,0,c
  8158  0034A2  363F               	rlcf	___fltol@f1^0,f,c
  8159  0034A4  3640               	rlcf	(___fltol@f1+1)^0,f,c
  8160  0034A6  3641               	rlcf	(___fltol@f1+2)^0,f,c
  8161  0034A8  3642               	rlcf	(___fltol@f1+3)^0,f,c
  8162  0034AA  0648               	decf	___fltol@exp1^0,f,c
  8163  0034AC                     l4293:
  8164  0034AC  5048               	movf	___fltol@exp1^0,w,c
  8165  0034AE  A4D8               	btfss	status,2,c
  8166  0034B0  EF5C  F01A         	goto	u4171
  8167  0034B4  EF5E  F01A         	goto	u4170
  8168  0034B8                     u4171:
  8169  0034B8  EF50  F01A         	goto	l4291
  8170  0034BC                     u4170:
  8171  0034BC                     l4295:
  8172  0034BC  5047               	movf	___fltol@sign1^0,w,c
  8173  0034BE  B4D8               	btfsc	status,2,c
  8174  0034C0  EF64  F01A         	goto	u4181
  8175  0034C4  EF66  F01A         	goto	u4180
  8176  0034C8                     u4181:
  8177  0034C8  EF6E  F01A         	goto	l4299
  8178  0034CC                     u4180:
  8179  0034CC  1E42               	comf	(___fltol@f1+3)^0,f,c
  8180  0034CE  1E41               	comf	(___fltol@f1+2)^0,f,c
  8181  0034D0  1E40               	comf	(___fltol@f1+1)^0,f,c
  8182  0034D2  6C3F               	negf	___fltol@f1^0,c
  8183  0034D4  0E00               	movlw	0
  8184  0034D6  2240               	addwfc	(___fltol@f1+1)^0,f,c
  8185  0034D8  2241               	addwfc	(___fltol@f1+2)^0,f,c
  8186  0034DA  2242               	addwfc	(___fltol@f1+3)^0,f,c
  8187  0034DC                     l4299:
  8188  0034DC  C03F  F03F         	movff	___fltol@f1,?___fltol
  8189  0034E0  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  8190  0034E4  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  8191  0034E8  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  8192  0034EC                     l742:
  8193  0034EC  0012               	return		;funcret
  8194  0034EE                     __end_of___fltol:
  8195                           	callstack 0
  8196                           
  8197 ;; *************** function ___flmul *****************
  8198 ;; Defined at:
  8199 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  b               4    4[COMRAM] long 
  8202 ;;  a               4    8[COMRAM] long 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  prod            4   23[COMRAM] struct .
  8205 ;;  grs             4   17[COMRAM] unsigned long 
  8206 ;;  temp            2   27[COMRAM] struct .
  8207 ;;  bexp            1   22[COMRAM] unsigned char 
  8208 ;;  aexp            1   21[COMRAM] unsigned char 
  8209 ;;  sign            1   16[COMRAM] unsigned char 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  4    4[COMRAM] unsigned char 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0, prodl, prodh
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;Total ram usage:       25 bytes
  8224 ;; Hardware stack levels used: 1
  8225 ;; Hardware stack levels required when called: 2
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		_main
  8230 ;;		_sqrtf
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text43
  8235  001F70                     __ptext43:
  8236                           	callstack 0
  8237  001F70                     ___flmul:
  8238                           	callstack 28
  8239  001F70  5008               	movf	(___flmul@b+3)^0,w,c
  8240  001F72  0B80               	andlw	128
  8241  001F74  6E11               	movwf	___flmul@sign^0,c
  8242  001F76  5008               	movf	(___flmul@b+3)^0,w,c
  8243  001F78  2408               	addwf	(___flmul@b+3)^0,w,c
  8244  001F7A  6E17               	movwf	___flmul@bexp^0,c
  8245  001F7C  AE07               	btfss	(___flmul@b+2)^0,7,c
  8246  001F7E  EFC3  F00F         	goto	u3931
  8247  001F82  EFC5  F00F         	goto	u3930
  8248  001F86                     u3931:
  8249  001F86  EFC6  F00F         	goto	l4135
  8250  001F8A                     u3930:
  8251  001F8A  8017               	bsf	___flmul@bexp^0,0,c
  8252  001F8C                     l4135:
  8253  001F8C  5017               	movf	___flmul@bexp^0,w,c
  8254  001F8E  B4D8               	btfsc	status,2,c
  8255  001F90  EFCC  F00F         	goto	u3941
  8256  001F94  EFCE  F00F         	goto	u3940
  8257  001F98                     u3941:
  8258  001F98  EFE1  F00F         	goto	l4143
  8259  001F9C                     u3940:
  8260  001F9C  2817               	incf	___flmul@bexp^0,w,c
  8261  001F9E  A4D8               	btfss	status,2,c
  8262  001FA0  EFD4  F00F         	goto	u3951
  8263  001FA4  EFD6  F00F         	goto	u3950
  8264  001FA8                     u3951:
  8265  001FA8  EFDE  F00F         	goto	l4141
  8266  001FAC                     u3950:
  8267  001FAC  0E00               	movlw	0
  8268  001FAE  6E05               	movwf	___flmul@b^0,c
  8269  001FB0  0E00               	movlw	0
  8270  001FB2  6E06               	movwf	(___flmul@b+1)^0,c
  8271  001FB4  0E00               	movlw	0
  8272  001FB6  6E07               	movwf	(___flmul@b+2)^0,c
  8273  001FB8  0E00               	movlw	0
  8274  001FBA  6E08               	movwf	(___flmul@b+3)^0,c
  8275  001FBC                     l4141:
  8276  001FBC  8E07               	bsf	(___flmul@b+2)^0,7,c
  8277  001FBE  EFE9  F00F         	goto	l4145
  8278  001FC2                     l4143:
  8279  001FC2  0E00               	movlw	0
  8280  001FC4  6E05               	movwf	___flmul@b^0,c
  8281  001FC6  0E00               	movlw	0
  8282  001FC8  6E06               	movwf	(___flmul@b+1)^0,c
  8283  001FCA  0E00               	movlw	0
  8284  001FCC  6E07               	movwf	(___flmul@b+2)^0,c
  8285  001FCE  0E00               	movlw	0
  8286  001FD0  6E08               	movwf	(___flmul@b+3)^0,c
  8287  001FD2                     l4145:
  8288  001FD2  500C               	movf	(___flmul@a+3)^0,w,c
  8289  001FD4  0B80               	andlw	128
  8290  001FD6  1A11               	xorwf	___flmul@sign^0,f,c
  8291  001FD8  500C               	movf	(___flmul@a+3)^0,w,c
  8292  001FDA  240C               	addwf	(___flmul@a+3)^0,w,c
  8293  001FDC  6E16               	movwf	___flmul@aexp^0,c
  8294  001FDE  AE0B               	btfss	(___flmul@a+2)^0,7,c
  8295  001FE0  EFF4  F00F         	goto	u3961
  8296  001FE4  EFF6  F00F         	goto	u3960
  8297  001FE8                     u3961:
  8298  001FE8  EFF7  F00F         	goto	l4153
  8299  001FEC                     u3960:
  8300  001FEC  8016               	bsf	___flmul@aexp^0,0,c
  8301  001FEE                     l4153:
  8302  001FEE  5016               	movf	___flmul@aexp^0,w,c
  8303  001FF0  B4D8               	btfsc	status,2,c
  8304  001FF2  EFFD  F00F         	goto	u3971
  8305  001FF6  EFFF  F00F         	goto	u3970
  8306  001FFA                     u3971:
  8307  001FFA  EF12  F010         	goto	l4161
  8308  001FFE                     u3970:
  8309  001FFE  2816               	incf	___flmul@aexp^0,w,c
  8310  002000  A4D8               	btfss	status,2,c
  8311  002002  EF05  F010         	goto	u3981
  8312  002006  EF07  F010         	goto	u3980
  8313  00200A                     u3981:
  8314  00200A  EF0F  F010         	goto	l4159
  8315  00200E                     u3980:
  8316  00200E  0E00               	movlw	0
  8317  002010  6E09               	movwf	___flmul@a^0,c
  8318  002012  0E00               	movlw	0
  8319  002014  6E0A               	movwf	(___flmul@a+1)^0,c
  8320  002016  0E00               	movlw	0
  8321  002018  6E0B               	movwf	(___flmul@a+2)^0,c
  8322  00201A  0E00               	movlw	0
  8323  00201C  6E0C               	movwf	(___flmul@a+3)^0,c
  8324  00201E                     l4159:
  8325  00201E  8E0B               	bsf	(___flmul@a+2)^0,7,c
  8326  002020  EF1A  F010         	goto	l1059
  8327  002024                     l4161:
  8328  002024  0E00               	movlw	0
  8329  002026  6E09               	movwf	___flmul@a^0,c
  8330  002028  0E00               	movlw	0
  8331  00202A  6E0A               	movwf	(___flmul@a+1)^0,c
  8332  00202C  0E00               	movlw	0
  8333  00202E  6E0B               	movwf	(___flmul@a+2)^0,c
  8334  002030  0E00               	movlw	0
  8335  002032  6E0C               	movwf	(___flmul@a+3)^0,c
  8336  002034                     l1059:
  8337  002034  5016               	movf	___flmul@aexp^0,w,c
  8338  002036  B4D8               	btfsc	status,2,c
  8339  002038  EF20  F010         	goto	u3991
  8340  00203C  EF22  F010         	goto	u3990
  8341  002040                     u3991:
  8342  002040  EF2A  F010         	goto	l4165
  8343  002044                     u3990:
  8344  002044  5017               	movf	___flmul@bexp^0,w,c
  8345  002046  A4D8               	btfss	status,2,c
  8346  002048  EF28  F010         	goto	u4001
  8347  00204C  EF2A  F010         	goto	u4000
  8348  002050                     u4001:
  8349  002050  EF34  F010         	goto	l4169
  8350  002054                     u4000:
  8351  002054                     l4165:
  8352  002054  0E00               	movlw	0
  8353  002056  6E05               	movwf	?___flmul^0,c
  8354  002058  0E00               	movlw	0
  8355  00205A  6E06               	movwf	(?___flmul+1)^0,c
  8356  00205C  0E00               	movlw	0
  8357  00205E  6E07               	movwf	(?___flmul+2)^0,c
  8358  002060  0E00               	movlw	0
  8359  002062  6E08               	movwf	(?___flmul+3)^0,c
  8360  002064  EFCC  F011         	goto	l1063
  8361  002068                     l4169:
  8362  002068  500B               	movf	(___flmul@a+2)^0,w,c
  8363  00206A  0205               	mulwf	___flmul@b^0,c
  8364  00206C  CFF3 F01C          	movff	prodl,___flmul@temp
  8365  002070  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8366  002074  501C               	movf	___flmul@temp^0,w,c
  8367  002076  6E12               	movwf	___flmul@grs^0,c
  8368  002078  6A13               	clrf	(___flmul@grs+1)^0,c
  8369  00207A  6A14               	clrf	(___flmul@grs+2)^0,c
  8370  00207C  6A15               	clrf	(___flmul@grs+3)^0,c
  8371  00207E  501D               	movf	(___flmul@temp+1)^0,w,c
  8372  002080  6E18               	movwf	___flmul@prod^0,c
  8373  002082  6A19               	clrf	(___flmul@prod+1)^0,c
  8374  002084  6A1A               	clrf	(___flmul@prod+2)^0,c
  8375  002086  6A1B               	clrf	(___flmul@prod+3)^0,c
  8376  002088  500A               	movf	(___flmul@a+1)^0,w,c
  8377  00208A  0206               	mulwf	(___flmul@b+1)^0,c
  8378  00208C  CFF3 F01C          	movff	prodl,___flmul@temp
  8379  002090  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8380  002094  501C               	movf	___flmul@temp^0,w,c
  8381  002096  2612               	addwf	___flmul@grs^0,f,c
  8382  002098  0E00               	movlw	0
  8383  00209A  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8384  00209C  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8385  00209E  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8386  0020A0  501D               	movf	(___flmul@temp+1)^0,w,c
  8387  0020A2  2618               	addwf	___flmul@prod^0,f,c
  8388  0020A4  0E00               	movlw	0
  8389  0020A6  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8390  0020A8  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8391  0020AA  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8392  0020AC  5009               	movf	___flmul@a^0,w,c
  8393  0020AE  0207               	mulwf	(___flmul@b+2)^0,c
  8394  0020B0  CFF3 F01C          	movff	prodl,___flmul@temp
  8395  0020B4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8396  0020B8  501C               	movf	___flmul@temp^0,w,c
  8397  0020BA  2612               	addwf	___flmul@grs^0,f,c
  8398  0020BC  0E00               	movlw	0
  8399  0020BE  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8400  0020C0  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8401  0020C2  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8402  0020C4  501D               	movf	(___flmul@temp+1)^0,w,c
  8403  0020C6  2618               	addwf	___flmul@prod^0,f,c
  8404  0020C8  0E00               	movlw	0
  8405  0020CA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8406  0020CC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8407  0020CE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8408  0020D0  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8409  0020D4  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8410  0020D8  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8411  0020DC  6A12               	clrf	___flmul@grs^0,c
  8412  0020DE  5009               	movf	___flmul@a^0,w,c
  8413  0020E0  0206               	mulwf	(___flmul@b+1)^0,c
  8414  0020E2  CFF3 F01C          	movff	prodl,___flmul@temp
  8415  0020E6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8416  0020EA  501C               	movf	___flmul@temp^0,w,c
  8417  0020EC  2612               	addwf	___flmul@grs^0,f,c
  8418  0020EE  501D               	movf	(___flmul@temp+1)^0,w,c
  8419  0020F0  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8420  0020F2  0E00               	movlw	0
  8421  0020F4  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8422  0020F6  0E00               	movlw	0
  8423  0020F8  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8424  0020FA  500A               	movf	(___flmul@a+1)^0,w,c
  8425  0020FC  0205               	mulwf	___flmul@b^0,c
  8426  0020FE  CFF3 F01C          	movff	prodl,___flmul@temp
  8427  002102  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8428  002106  501C               	movf	___flmul@temp^0,w,c
  8429  002108  2612               	addwf	___flmul@grs^0,f,c
  8430  00210A  501D               	movf	(___flmul@temp+1)^0,w,c
  8431  00210C  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8432  00210E  0E00               	movlw	0
  8433  002110  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8434  002112  0E00               	movlw	0
  8435  002114  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8436  002116  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8437  00211A  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8438  00211E  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8439  002122  6A12               	clrf	___flmul@grs^0,c
  8440  002124  5009               	movf	___flmul@a^0,w,c
  8441  002126  0205               	mulwf	___flmul@b^0,c
  8442  002128  CFF3 F01C          	movff	prodl,___flmul@temp
  8443  00212C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8444  002130  501C               	movf	___flmul@temp^0,w,c
  8445  002132  2612               	addwf	___flmul@grs^0,f,c
  8446  002134  501D               	movf	(___flmul@temp+1)^0,w,c
  8447  002136  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8448  002138  0E00               	movlw	0
  8449  00213A  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8450  00213C  0E00               	movlw	0
  8451  00213E  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8452  002140  500B               	movf	(___flmul@a+2)^0,w,c
  8453  002142  0206               	mulwf	(___flmul@b+1)^0,c
  8454  002144  CFF3 F01C          	movff	prodl,___flmul@temp
  8455  002148  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8456  00214C  501C               	movf	___flmul@temp^0,w,c
  8457  00214E  2618               	addwf	___flmul@prod^0,f,c
  8458  002150  501D               	movf	(___flmul@temp+1)^0,w,c
  8459  002152  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8460  002154  0E00               	movlw	0
  8461  002156  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8462  002158  0E00               	movlw	0
  8463  00215A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8464  00215C  500A               	movf	(___flmul@a+1)^0,w,c
  8465  00215E  0207               	mulwf	(___flmul@b+2)^0,c
  8466  002160  CFF3 F01C          	movff	prodl,___flmul@temp
  8467  002164  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8468  002168  501C               	movf	___flmul@temp^0,w,c
  8469  00216A  2618               	addwf	___flmul@prod^0,f,c
  8470  00216C  501D               	movf	(___flmul@temp+1)^0,w,c
  8471  00216E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8472  002170  0E00               	movlw	0
  8473  002172  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8474  002174  0E00               	movlw	0
  8475  002176  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8476  002178  500B               	movf	(___flmul@a+2)^0,w,c
  8477  00217A  0207               	mulwf	(___flmul@b+2)^0,c
  8478  00217C  CFF3 F01C          	movff	prodl,___flmul@temp
  8479  002180  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8480  002184  501C               	movf	___flmul@temp^0,w,c
  8481  002186  6E0D               	movwf	??___flmul^0,c
  8482  002188  501D               	movf	(___flmul@temp+1)^0,w,c
  8483  00218A  6E0E               	movwf	(??___flmul+1)^0,c
  8484  00218C  6A0F               	clrf	(??___flmul+2)^0,c
  8485  00218E  6A10               	clrf	(??___flmul+3)^0,c
  8486  002190  C00F  F010         	movff	??___flmul+2,??___flmul+3
  8487  002194  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  8488  002198  C00D  F00E         	movff	??___flmul,??___flmul+1
  8489  00219C  6A0D               	clrf	??___flmul^0,c
  8490  00219E  500D               	movf	??___flmul^0,w,c
  8491  0021A0  2618               	addwf	___flmul@prod^0,f,c
  8492  0021A2  500E               	movf	(??___flmul+1)^0,w,c
  8493  0021A4  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8494  0021A6  500F               	movf	(??___flmul+2)^0,w,c
  8495  0021A8  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8496  0021AA  5010               	movf	(??___flmul+3)^0,w,c
  8497  0021AC  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8498  0021AE  C012  F00D         	movff	___flmul@grs,??___flmul
  8499  0021B2  C013  F00E         	movff	___flmul@grs+1,??___flmul+1
  8500  0021B6  C014  F00F         	movff	___flmul@grs+2,??___flmul+2
  8501  0021BA  C015  F010         	movff	___flmul@grs+3,??___flmul+3
  8502  0021BE  0E19               	movlw	25
  8503  0021C0  EFE7  F010         	goto	u4010
  8504  0021C4                     u4015:
  8505  0021C4  90D8               	bcf	status,0,c
  8506  0021C6  3210               	rrcf	(??___flmul+3)^0,f,c
  8507  0021C8  320F               	rrcf	(??___flmul+2)^0,f,c
  8508  0021CA  320E               	rrcf	(??___flmul+1)^0,f,c
  8509  0021CC  320D               	rrcf	??___flmul^0,f,c
  8510  0021CE                     u4010:
  8511  0021CE  2EE8               	decfsz	wreg,f,c
  8512  0021D0  EFE2  F010         	goto	u4015
  8513  0021D4  500D               	movf	??___flmul^0,w,c
  8514  0021D6  2618               	addwf	___flmul@prod^0,f,c
  8515  0021D8  500E               	movf	(??___flmul+1)^0,w,c
  8516  0021DA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8517  0021DC  500F               	movf	(??___flmul+2)^0,w,c
  8518  0021DE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8519  0021E0  5010               	movf	(??___flmul+3)^0,w,c
  8520  0021E2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8521  0021E4  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8522  0021E8  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8523  0021EC  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8524  0021F0  6A12               	clrf	___flmul@grs^0,c
  8525  0021F2  5016               	movf	___flmul@aexp^0,w,c
  8526  0021F4  C017  F00D         	movff	___flmul@bexp,??___flmul
  8527  0021F8  6A0E               	clrf	(??___flmul+1)^0,c
  8528  0021FA  260D               	addwf	??___flmul^0,f,c
  8529  0021FC  0E00               	movlw	0
  8530  0021FE  220E               	addwfc	(??___flmul+1)^0,f,c
  8531  002200  0E82               	movlw	130
  8532  002202  240D               	addwf	??___flmul^0,w,c
  8533  002204  6E1C               	movwf	___flmul@temp^0,c
  8534  002206  0EFF               	movlw	255
  8535  002208  200E               	addwfc	(??___flmul+1)^0,w,c
  8536  00220A  6E1D               	movwf	(___flmul@temp+1)^0,c
  8537  00220C  EF1D  F011         	goto	l4217
  8538  002210                     l4211:
  8539  002210  90D8               	bcf	status,0,c
  8540  002212  3618               	rlcf	___flmul@prod^0,f,c
  8541  002214  3619               	rlcf	(___flmul@prod+1)^0,f,c
  8542  002216  361A               	rlcf	(___flmul@prod+2)^0,f,c
  8543  002218  361B               	rlcf	(___flmul@prod+3)^0,f,c
  8544  00221A  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8545  00221C  EF12  F011         	goto	u4021
  8546  002220  EF14  F011         	goto	u4020
  8547  002224                     u4021:
  8548  002224  EF15  F011         	goto	l1066
  8549  002228                     u4020:
  8550  002228  8018               	bsf	___flmul@prod^0,0,c
  8551  00222A                     l1066:
  8552  00222A  90D8               	bcf	status,0,c
  8553  00222C  3612               	rlcf	___flmul@grs^0,f,c
  8554  00222E  3613               	rlcf	(___flmul@grs+1)^0,f,c
  8555  002230  3614               	rlcf	(___flmul@grs+2)^0,f,c
  8556  002232  3615               	rlcf	(___flmul@grs+3)^0,f,c
  8557  002234  061C               	decf	___flmul@temp^0,f,c
  8558  002236  A0D8               	btfss	status,0,c
  8559  002238  061D               	decf	(___flmul@temp+1)^0,f,c
  8560  00223A                     l4217:
  8561  00223A  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  8562  00223C  EF22  F011         	goto	u4031
  8563  002240  EF24  F011         	goto	u4030
  8564  002244                     u4031:
  8565  002244  EF08  F011         	goto	l4211
  8566  002248                     u4030:
  8567  002248  0E00               	movlw	0
  8568  00224A  6E16               	movwf	___flmul@aexp^0,c
  8569  00224C  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8570  00224E  EF2B  F011         	goto	u4041
  8571  002252  EF2D  F011         	goto	u4040
  8572  002256                     u4041:
  8573  002256  EF51  F011         	goto	l1068
  8574  00225A                     u4040:
  8575  00225A  0EFF               	movlw	255
  8576  00225C  1412               	andwf	___flmul@grs^0,w,c
  8577  00225E  6E0D               	movwf	??___flmul^0,c
  8578  002260  0EFF               	movlw	255
  8579  002262  1413               	andwf	(___flmul@grs+1)^0,w,c
  8580  002264  6E0E               	movwf	(??___flmul+1)^0,c
  8581  002266  0EFF               	movlw	255
  8582  002268  1414               	andwf	(___flmul@grs+2)^0,w,c
  8583  00226A  6E0F               	movwf	(??___flmul+2)^0,c
  8584  00226C  0E7F               	movlw	127
  8585  00226E  1415               	andwf	(___flmul@grs+3)^0,w,c
  8586  002270  6E10               	movwf	(??___flmul+3)^0,c
  8587  002272  500D               	movf	??___flmul^0,w,c
  8588  002274  100E               	iorwf	(??___flmul+1)^0,w,c
  8589  002276  100F               	iorwf	(??___flmul+2)^0,w,c
  8590  002278  1010               	iorwf	(??___flmul+3)^0,w,c
  8591  00227A  B4D8               	btfsc	status,2,c
  8592  00227C  EF42  F011         	goto	u4051
  8593  002280  EF44  F011         	goto	u4050
  8594  002284                     u4051:
  8595  002284  EF48  F011         	goto	l1069
  8596  002288                     u4050:
  8597  002288                     l4225:
  8598  002288  0E01               	movlw	1
  8599  00228A  6E16               	movwf	___flmul@aexp^0,c
  8600  00228C  EF51  F011         	goto	l1068
  8601  002290                     l1069:
  8602  002290  A018               	btfss	___flmul@prod^0,0,c
  8603  002292  EF4D  F011         	goto	u4061
  8604  002296  EF4F  F011         	goto	u4060
  8605  00229A                     u4061:
  8606  00229A  EF51  F011         	goto	l1068
  8607  00229E                     u4060:
  8608  00229E  EF44  F011         	goto	l4225
  8609  0022A2                     l1068:
  8610  0022A2  5016               	movf	___flmul@aexp^0,w,c
  8611  0022A4  B4D8               	btfsc	status,2,c
  8612  0022A6  EF57  F011         	goto	u4071
  8613  0022AA  EF59  F011         	goto	u4070
  8614  0022AE                     u4071:
  8615  0022AE  EF7D  F011         	goto	l4237
  8616  0022B2                     u4070:
  8617  0022B2  0E01               	movlw	1
  8618  0022B4  2618               	addwf	___flmul@prod^0,f,c
  8619  0022B6  0E00               	movlw	0
  8620  0022B8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8621  0022BA  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8622  0022BC  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8623  0022BE  A01B               	btfss	(___flmul@prod+3)^0,0,c
  8624  0022C0  EF64  F011         	goto	u4081
  8625  0022C4  EF66  F011         	goto	u4080
  8626  0022C8                     u4081:
  8627  0022C8  EF7D  F011         	goto	l4237
  8628  0022CC                     u4080:
  8629  0022CC  C018  F00D         	movff	___flmul@prod,??___flmul
  8630  0022D0  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  8631  0022D4  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  8632  0022D8  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  8633  0022DC  3410               	rlcf	(??___flmul+3)^0,w,c
  8634  0022DE  3210               	rrcf	(??___flmul+3)^0,f,c
  8635  0022E0  320F               	rrcf	(??___flmul+2)^0,f,c
  8636  0022E2  320E               	rrcf	(??___flmul+1)^0,f,c
  8637  0022E4  320D               	rrcf	??___flmul^0,f,c
  8638  0022E6  C00D  F018         	movff	??___flmul,___flmul@prod
  8639  0022EA  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  8640  0022EE  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  8641  0022F2  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  8642  0022F6  4A1C               	infsnz	___flmul@temp^0,f,c
  8643  0022F8  2A1D               	incf	(___flmul@temp+1)^0,f,c
  8644  0022FA                     l4237:
  8645  0022FA  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8646  0022FC  EF88  F011         	goto	u4091
  8647  002300  501D               	movf	(___flmul@temp+1)^0,w,c
  8648  002302  E108               	bnz	u4090
  8649  002304  281C               	incf	___flmul@temp^0,w,c
  8650  002306  A0D8               	btfss	status,0,c
  8651  002308  EF88  F011         	goto	u4091
  8652  00230C  EF8A  F011         	goto	u4090
  8653  002310                     u4091:
  8654  002310  EF94  F011         	goto	l4241
  8655  002314                     u4090:
  8656  002314  0E00               	movlw	0
  8657  002316  6E18               	movwf	___flmul@prod^0,c
  8658  002318  0E00               	movlw	0
  8659  00231A  6E19               	movwf	(___flmul@prod+1)^0,c
  8660  00231C  0E80               	movlw	128
  8661  00231E  6E1A               	movwf	(___flmul@prod+2)^0,c
  8662  002320  0E7F               	movlw	127
  8663  002322  6E1B               	movwf	(___flmul@prod+3)^0,c
  8664  002324  EFC2  F011         	goto	l4253
  8665  002328                     l4241:
  8666  002328  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8667  00232A  EFA1  F011         	goto	u4100
  8668  00232E  501D               	movf	(___flmul@temp+1)^0,w,c
  8669  002330  E106               	bnz	u4101
  8670  002332  041C               	decf	___flmul@temp^0,w,c
  8671  002334  B0D8               	btfsc	status,0,c
  8672  002336  EF9F  F011         	goto	u4101
  8673  00233A  EFA1  F011         	goto	u4100
  8674  00233E                     u4101:
  8675  00233E  EFAD  F011         	goto	l1076
  8676  002342                     u4100:
  8677  002342  0E00               	movlw	0
  8678  002344  6E18               	movwf	___flmul@prod^0,c
  8679  002346  0E00               	movlw	0
  8680  002348  6E19               	movwf	(___flmul@prod+1)^0,c
  8681  00234A  0E00               	movlw	0
  8682  00234C  6E1A               	movwf	(___flmul@prod+2)^0,c
  8683  00234E  0E00               	movlw	0
  8684  002350  6E1B               	movwf	(___flmul@prod+3)^0,c
  8685  002352  0E00               	movlw	0
  8686  002354  6E11               	movwf	___flmul@sign^0,c
  8687  002356  EFC2  F011         	goto	l4253
  8688  00235A                     l1076:
  8689  00235A  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  8690  00235E  0EFF               	movlw	255
  8691  002360  1618               	andwf	___flmul@prod^0,f,c
  8692  002362  0EFF               	movlw	255
  8693  002364  1619               	andwf	(___flmul@prod+1)^0,f,c
  8694  002366  0E7F               	movlw	127
  8695  002368  161A               	andwf	(___flmul@prod+2)^0,f,c
  8696  00236A  0E00               	movlw	0
  8697  00236C  161B               	andwf	(___flmul@prod+3)^0,f,c
  8698  00236E  A017               	btfss	___flmul@bexp^0,0,c
  8699  002370  EFBC  F011         	goto	u4111
  8700  002374  EFBE  F011         	goto	u4110
  8701  002378                     u4111:
  8702  002378  EFBF  F011         	goto	l4251
  8703  00237C                     u4110:
  8704  00237C  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  8705  00237E                     l4251:
  8706  00237E  90D8               	bcf	status,0,c
  8707  002380  3017               	rrcf	___flmul@bexp^0,w,c
  8708  002382  6E1B               	movwf	(___flmul@prod+3)^0,c
  8709  002384                     l4253:
  8710  002384  5011               	movf	___flmul@sign^0,w,c
  8711  002386  121B               	iorwf	(___flmul@prod+3)^0,f,c
  8712  002388  C018  F005         	movff	___flmul@prod,?___flmul
  8713  00238C  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  8714  002390  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  8715  002394  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  8716  002398                     l1063:
  8717  002398  0012               	return		;funcret
  8718  00239A                     __end_of___flmul:
  8719                           	callstack 0
  8720                           
  8721 ;; *************** function _TxBufferedString *****************
  8722 ;; Defined at:
  8723 ;;		line 98 in file "serial.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  string          2    5[COMRAM] PTR unsigned char 
  8726 ;;		 -> main@string(20), 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;Total ram usage:        2 bytes
  8743 ;; Hardware stack levels used: 1
  8744 ;; Hardware stack levels required when called: 3
  8745 ;; This function calls:
  8746 ;;		_putCharToTxBuf
  8747 ;; This function is called by:
  8748 ;;		_main
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text44
  8753  003DF0                     __ptext44:
  8754                           	callstack 0
  8755  003DF0                     _TxBufferedString:
  8756                           	callstack 27
  8757  003DF0                     
  8758                           ;serial.c: 100:     while(*string != 0){
  8759  003DF0  EF03  F01F         	goto	l4107
  8760  003DF4                     l4103:
  8761                           
  8762                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  8763  003DF4  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8764  003DF8  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8765  003DFC  50DF               	movf	indf2,w,c
  8766  003DFE  EC3B  F01F         	call	_putCharToTxBuf
  8767  003E02  4A06               	infsnz	TxBufferedString@string^0,f,c
  8768  003E04  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  8769  003E06                     l4107:
  8770                           
  8771                           ;serial.c: 100:     while(*string != 0){
  8772  003E06  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8773  003E0A  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8774  003E0E  50DF               	movf	indf2,w,c
  8775  003E10  A4D8               	btfss	status,2,c
  8776  003E12  EF0D  F01F         	goto	u3891
  8777  003E16  EF0F  F01F         	goto	u3890
  8778  003E1A                     u3891:
  8779  003E1A  EFFA  F01E         	goto	l4103
  8780  003E1E                     u3890:
  8781  003E1E  0012               	return		;funcret
  8782  003E20                     __end_of_TxBufferedString:
  8783                           	callstack 0
  8784                           
  8785 ;; *************** function _putCharToTxBuf *****************
  8786 ;; Defined at:
  8787 ;;		line 85 in file "serial.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  byte            1    wreg     unsigned char 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  byte            1    4[COMRAM] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;Total ram usage:        1 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 2
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_TxBufferedString
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text45
  8816  003E76                     __ptext45:
  8817                           	callstack 0
  8818  003E76                     _putCharToTxBuf:
  8819                           	callstack 27
  8820                           
  8821                           ;incstack = 0
  8822                           ;putCharToTxBuf@byte stored from wreg
  8823  003E76  6E05               	movwf	putCharToTxBuf@byte^0,c
  8824  003E78                     
  8825                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8826  003E78  0E3B               	movlw	59
  8827  003E7A  6453               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8828  003E7C  EF42  F01F         	goto	u3321
  8829  003E80  EF44  F01F         	goto	u3320
  8830  003E84                     u3321:
  8831  003E84  EF46  F01F         	goto	l3709
  8832  003E88                     u3320:
  8833  003E88  0E00               	movlw	0
  8834  003E8A  6E53               	movwf	_TxBufWriteCnt^0,c	;volatile
  8835  003E8C                     l3709:
  8836                           
  8837                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8838  003E8C  0EA2               	movlw	low _EUSART4TXbuf
  8839  003E8E  2453               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8840  003E90  6ED9               	movwf	fsr2l,c
  8841  003E92  6ADA               	clrf	fsr2h,c
  8842  003E94  0E01               	movlw	high _EUSART4TXbuf
  8843  003E96  22DA               	addwfc	fsr2h,f,c
  8844  003E98  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8845  003E9C  2A53               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8846  003E9E  0012               	return		;funcret
  8847  003EA0                     __end_of_putCharToTxBuf:
  8848                           	callstack 0
  8849                           
  8850 ;; *************** function _Interrupts_init *****************
  8851 ;; Defined at:
  8852 ;;		line 10 in file "interrupts.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;		None
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;		None
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  1    wreg      void 
  8859 ;; Registers used:
  8860 ;;		None
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;Total ram usage:        0 bytes
  8871 ;; Hardware stack levels used: 1
  8872 ;; Hardware stack levels required when called: 2
  8873 ;; This function calls:
  8874 ;;		Nothing
  8875 ;; This function is called by:
  8876 ;;		_main
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           	psect	text46
  8881  003FAE                     __ptext46:
  8882                           	callstack 0
  8883  003FAE                     _Interrupts_init:
  8884                           	callstack 28
  8885  003FAE                     
  8886                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8887  003FAE  8CF2               	bsf	242,6,c	;volatile
  8888                           
  8889                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  8890  003FB0  010E               	movlb	14	; () banked
  8891  003FB2  872D               	bsf	45,3,b	;volatile
  8892                           
  8893                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  8894  003FB4  952D               	bcf	45,2,b	;volatile
  8895                           
  8896                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  8897  003FB6  8EF2               	bsf	242,7,c	;volatile
  8898  003FB8                     
  8899                           ; BSR set to: 14
  8900  003FB8  0012               	return		;funcret
  8901  003FBA                     __end_of_Interrupts_init:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _HighISR *****************
  8905 ;; Defined at:
  8906 ;;		line 24 in file "interrupts.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;		None
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  1    wreg      void 
  8913 ;; Registers used:
  8914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8924 ;;Total ram usage:        2 bytes
  8925 ;; Hardware stack levels used: 1
  8926 ;; Hardware stack levels required when called: 1
  8927 ;; This function calls:
  8928 ;;		_getCharFromTxBuf
  8929 ;;		_putCharToRxBuf
  8930 ;;		i2_isDataInTxBuf
  8931 ;; This function is called by:
  8932 ;;		Interrupt level 2
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	intcode
  8937  000008                     __pintcode:
  8938                           	callstack 0
  8939  000008                     _HighISR:
  8940                           	callstack 21
  8941                           
  8942                           ; BSR set to: 14
  8943                           ;incstack = 0
  8944  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8945  00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  8946  00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  8947  000012                     
  8948                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  8949  000012  010E               	movlb	14	; () banked
  8950  000014  A737               	btfss	55,3,b	;volatile
  8951  000016  EF0F  F000         	goto	i2u451_41
  8952  00001A  EF11  F000         	goto	i2u451_40
  8953  00001E                     i2u451_41:
  8954  00001E  EF14  F000         	goto	i2l4701
  8955  000022                     i2u451_40:
  8956  000022                     
  8957                           ; BSR set to: 14
  8958                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  8959  000022  51E3               	movf	227,w,b	;volatile
  8960  000024  EC50  F01F         	call	_putCharToRxBuf
  8961  000028                     i2l4701:
  8962                           
  8963                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  8964  000028  010E               	movlb	14	; () banked
  8965  00002A  A537               	btfss	55,2,b	;volatile
  8966  00002C  EF1A  F000         	goto	i2u452_41
  8967  000030  EF1C  F000         	goto	i2u452_40
  8968  000034                     i2u452_41:
  8969  000034  EF35  F000         	goto	i2l442
  8970  000038                     i2u452_40:
  8971  000038                     
  8972                           ; BSR set to: 14
  8973  000038  A52D               	btfss	45,2,b	;volatile
  8974  00003A  EF21  F000         	goto	i2u453_41
  8975  00003E  EF23  F000         	goto	i2u453_40
  8976  000042                     i2u453_41:
  8977  000042  EF35  F000         	goto	i2l442
  8978  000046                     i2u453_40:
  8979  000046                     
  8980                           ; BSR set to: 14
  8981                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  8982  000046  ECC5  F01F         	call	i2_isDataInTxBuf	;wreg free
  8983  00004A  06E8               	decf	wreg,f,c
  8984  00004C  A4D8               	btfss	status,2,c
  8985  00004E  EF2B  F000         	goto	i2u454_41
  8986  000052  EF2D  F000         	goto	i2u454_40
  8987  000056                     i2u454_41:
  8988  000056  EF33  F000         	goto	i2l440
  8989  00005A                     i2u454_40:
  8990  00005A  EC10  F01F         	call	_getCharFromTxBuf	;wreg free
  8991  00005E  010E               	movlb	14	; () banked
  8992  000060  6FE4               	movwf	228,b	;volatile
  8993  000062  EF35  F000         	goto	i2l442
  8994  000066                     i2l440:
  8995  000066  010E               	movlb	14	; () banked
  8996  000068  952D               	bcf	45,2,b	;volatile
  8997  00006A                     i2l442:
  8998                           
  8999                           ; BSR set to: 14
  9000  00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9001  00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  9002  000072  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9003  000074  0011               	retfie		f
  9004  000076                     __end_of_HighISR:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function i2_isDataInTxBuf *****************
  9008 ;; Defined at:
  9009 ;;		line 93 in file "serial.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;		None
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      unsigned char 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;Total ram usage:        0 bytes
  9028 ;; Hardware stack levels used: 1
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_HighISR
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text48
  9037  003F8A                     __ptext48:
  9038                           	callstack 0
  9039  003F8A                     i2_isDataInTxBuf:
  9040                           	callstack 21
  9041  003F8A                     
  9042                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  9043  003F8A  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  9044  003F8C  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9045  003F8E  A4D8               	btfss	status,2,c
  9046  003F90  EFCC  F01F         	goto	i2u197_41
  9047  003F94  EFCF  F01F         	goto	i2u197_40
  9048  003F98                     i2u197_41:
  9049  003F98  0E01               	movlw	1
  9050  003F9A  EFD0  F01F         	goto	i2u198_40
  9051  003F9E                     i2u197_40:
  9052  003F9E  0E00               	movlw	0
  9053  003FA0                     i2u198_40:
  9054  003FA0  0012               	return		;funcret
  9055  003FA2                     __end_ofi2_isDataInTxBuf:
  9056                           	callstack 0
  9057                           
  9058 ;; *************** function _putCharToRxBuf *****************
  9059 ;; Defined at:
  9060 ;;		line 63 in file "serial.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  byte            1    wreg     unsigned char 
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  byte            1    0[COMRAM] unsigned char 
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      void 
  9067 ;; Registers used:
  9068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9078 ;;Total ram usage:        1 bytes
  9079 ;; Hardware stack levels used: 1
  9080 ;; This function calls:
  9081 ;;		Nothing
  9082 ;; This function is called by:
  9083 ;;		_HighISR
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text49
  9088  003EA0                     __ptext49:
  9089                           	callstack 0
  9090  003EA0                     _putCharToRxBuf:
  9091                           	callstack 21
  9092                           
  9093                           ;incstack = 0
  9094                           ;putCharToRxBuf@byte stored from wreg
  9095  003EA0  6E01               	movwf	putCharToRxBuf@byte^0,c
  9096  003EA2                     
  9097                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9098  003EA2  0E13               	movlw	19
  9099  003EA4  6455               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9100  003EA6  EF57  F01F         	goto	i2u391_41
  9101  003EAA  EF59  F01F         	goto	i2u391_40
  9102  003EAE                     i2u391_41:
  9103  003EAE  EF5B  F01F         	goto	i2l4117
  9104  003EB2                     i2u391_40:
  9105  003EB2  0E00               	movlw	0
  9106  003EB4  6E55               	movwf	_RxBufWriteCnt^0,c	;volatile
  9107  003EB6                     i2l4117:
  9108                           
  9109                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9110  003EB6  0ED8               	movlw	low _EUSART4RXbuf
  9111  003EB8  2455               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9112  003EBA  6ED9               	movwf	fsr2l,c
  9113  003EBC  6ADA               	clrf	fsr2h,c
  9114  003EBE  0E00               	movlw	high _EUSART4RXbuf
  9115  003EC0  22DA               	addwfc	fsr2h,f,c
  9116  003EC2  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9117  003EC6  2A55               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9118  003EC8  0012               	return		;funcret
  9119  003ECA                     __end_of_putCharToRxBuf:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _getCharFromTxBuf *****************
  9123 ;; Defined at:
  9124 ;;		line 79 in file "serial.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      unsigned char 
  9131 ;; Registers used:
  9132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9142 ;;Total ram usage:        2 bytes
  9143 ;; Hardware stack levels used: 1
  9144 ;; This function calls:
  9145 ;;		Nothing
  9146 ;; This function is called by:
  9147 ;;		_HighISR
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text50
  9152  003E20                     __ptext50:
  9153                           	callstack 0
  9154  003E20                     _getCharFromTxBuf:
  9155                           	callstack 21
  9156  003E20                     
  9157                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9158  003E20  0E3B               	movlw	59
  9159  003E22  6452               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9160  003E24  EF16  F01F         	goto	i2u392_41
  9161  003E28  EF18  F01F         	goto	i2u392_40
  9162  003E2C                     i2u392_41:
  9163  003E2C  EF1A  F01F         	goto	i2l4125
  9164  003E30                     i2u392_40:
  9165  003E30  0E00               	movlw	0
  9166  003E32  6E52               	movwf	_TxBufReadCnt^0,c	;volatile
  9167  003E34                     i2l4125:
  9168                           
  9169                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  9170  003E34  2A52               	incf	_TxBufReadCnt^0,f,c	;volatile
  9171  003E36  0452               	decf	_TxBufReadCnt^0,w,c	;volatile
  9172  003E38  6E01               	movwf	??_getCharFromTxBuf^0,c
  9173  003E3A  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9174  003E3C  0EA2               	movlw	low _EUSART4TXbuf
  9175  003E3E  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9176  003E40  6ED9               	movwf	fsr2l,c
  9177  003E42  0E01               	movlw	high _EUSART4TXbuf
  9178  003E44  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9179  003E46  6EDA               	movwf	fsr2h,c
  9180  003E48  50DF               	movf	indf2,w,c
  9181  003E4A  0012               	return		;funcret
  9182  003E4C                     __end_of_getCharFromTxBuf:
  9183                           	callstack 0
  9184                           
  9185                           	psect	rparam
  9186  0000                     
  9187                           	psect	temp
  9188  000056                     btemp:
  9189                           	callstack 0
  9190  000056                     	ds	1
  9191  0000                     int$flags	set	btemp
  9192  0000                     wtemp8	set	btemp+1
  9193  0000                     ttemp5	set	btemp+1
  9194  0000                     ttemp6	set	btemp+4
  9195  0000                     ttemp7	set	btemp+8
  9196                           
  9197                           	psect	idloc
  9198                           
  9199                           ;Config register IDLOC0 @ 0x200000
  9200                           ;	unspecified, using default values
  9201  200000                     	org	2097152
  9202  200000  0FFF               	dw	4095
  9203                           
  9204                           ;Config register IDLOC1 @ 0x200002
  9205                           ;	unspecified, using default values
  9206  200002                     	org	2097154
  9207  200002  0FFF               	dw	4095
  9208                           
  9209                           ;Config register IDLOC2 @ 0x200004
  9210                           ;	unspecified, using default values
  9211  200004                     	org	2097156
  9212  200004  0FFF               	dw	4095
  9213                           
  9214                           ;Config register IDLOC3 @ 0x200006
  9215                           ;	unspecified, using default values
  9216  200006                     	org	2097158
  9217  200006  0FFF               	dw	4095
  9218                           
  9219                           ;Config register IDLOC4 @ 0x200008
  9220                           ;	unspecified, using default values
  9221  200008                     	org	2097160
  9222  200008  0FFF               	dw	4095
  9223                           
  9224                           ;Config register IDLOC5 @ 0x20000A
  9225                           ;	unspecified, using default values
  9226  20000A                     	org	2097162
  9227  20000A  0FFF               	dw	4095
  9228                           
  9229                           ;Config register IDLOC6 @ 0x20000C
  9230                           ;	unspecified, using default values
  9231  20000C                     	org	2097164
  9232  20000C  0FFF               	dw	4095
  9233                           
  9234                           ;Config register IDLOC7 @ 0x20000E
  9235                           ;	unspecified, using default values
  9236  20000E                     	org	2097166
  9237  20000E  0FFF               	dw	4095
  9238                           
  9239                           	psect	config
  9240                           
  9241                           ;Config register CONFIG1L @ 0x300000
  9242                           ;	External Oscillator mode Selection bits
  9243                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9244                           ;	Power-up default value for COSC bits
  9245                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9246  300000                     	org	3145728
  9247  300000  AA                 	db	170
  9248                           
  9249                           ;Config register CONFIG1H @ 0x300001
  9250                           ;	unspecified, using default values
  9251                           ;	Clock Out Enable bit
  9252                           ;	CLKOUTEN = 0x1, unprogrammed default
  9253                           ;	Clock Switch Enable bit
  9254                           ;	CSWEN = 0x1, unprogrammed default
  9255                           ;	Fail-Safe Clock Monitor Enable bit
  9256                           ;	FCMEN = 0x1, unprogrammed default
  9257  300001                     	org	3145729
  9258  300001  FF                 	db	255
  9259                           
  9260                           ;Config register CONFIG2L @ 0x300002
  9261                           ;	unspecified, using default values
  9262                           ;	Master Clear Enable bit
  9263                           ;	MCLRE = 0x1, unprogrammed default
  9264                           ;	Power-up Timer Enable bit
  9265                           ;	PWRTE = 0x1, unprogrammed default
  9266                           ;	Low-power BOR enable bit
  9267                           ;	LPBOREN = 0x1, unprogrammed default
  9268                           ;	Brown-out Reset Enable bits
  9269                           ;	BOREN = 0x3, unprogrammed default
  9270  300002                     	org	3145730
  9271  300002  FF                 	db	255
  9272                           
  9273                           ;Config register CONFIG2H @ 0x300003
  9274                           ;	unspecified, using default values
  9275                           ;	Brown Out Reset Voltage selection bits
  9276                           ;	BORV = 0x3, unprogrammed default
  9277                           ;	ZCD Disable bit
  9278                           ;	ZCD = 0x1, unprogrammed default
  9279                           ;	PPSLOCK bit One-Way Set Enable bit
  9280                           ;	PPS1WAY = 0x1, unprogrammed default
  9281                           ;	Stack Full/Underflow Reset Enable bit
  9282                           ;	STVREN = 0x1, unprogrammed default
  9283                           ;	Debugger Enable bit
  9284                           ;	DEBUG = 0x1, unprogrammed default
  9285                           ;	Extended Instruction Set Enable bit
  9286                           ;	XINST = 0x1, unprogrammed default
  9287  300003                     	org	3145731
  9288  300003  FF                 	db	255
  9289                           
  9290                           ;Config register CONFIG3L @ 0x300004
  9291                           ;	WDT Period Select bits
  9292                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9293                           ;	WDT operating mode
  9294                           ;	WDTE = OFF, WDT Disabled
  9295  300004                     	org	3145732
  9296  300004  9F                 	db	159
  9297                           
  9298                           ;Config register CONFIG3H @ 0x300005
  9299                           ;	unspecified, using default values
  9300                           ;	WDT Window Select bits
  9301                           ;	WDTCWS = 0x7, unprogrammed default
  9302                           ;	WDT input clock selector
  9303                           ;	WDTCCS = 0x7, unprogrammed default
  9304  300005                     	org	3145733
  9305  300005  FF                 	db	255
  9306                           
  9307                           ;Config register CONFIG4L @ 0x300006
  9308                           ;	unspecified, using default values
  9309                           ;	Write Protection Block 0
  9310                           ;	WRT0 = 0x1, unprogrammed default
  9311                           ;	Write Protection Block 1
  9312                           ;	WRT1 = 0x1, unprogrammed default
  9313                           ;	Write Protection Block 2
  9314                           ;	WRT2 = 0x1, unprogrammed default
  9315                           ;	Write Protection Block 3
  9316                           ;	WRT3 = 0x1, unprogrammed default
  9317                           ;	Write Protection Block 3
  9318                           ;	WRT4 = 0x1, unprogrammed default
  9319                           ;	Write Protection Block 3
  9320                           ;	WRT5 = 0x1, unprogrammed default
  9321                           ;	Write Protection Block 3
  9322                           ;	WRT6 = 0x1, unprogrammed default
  9323                           ;	Write Protection Block 3
  9324                           ;	WRT7 = 0x1, unprogrammed default
  9325  300006                     	org	3145734
  9326  300006  FF                 	db	255
  9327                           
  9328                           ;Config register CONFIG4H @ 0x300007
  9329                           ;	unspecified, using default values
  9330                           ;	Configuration Register Write Protection bit
  9331                           ;	WRTC = 0x1, unprogrammed default
  9332                           ;	Boot Block Write Protection bit
  9333                           ;	WRTB = 0x1, unprogrammed default
  9334                           ;	Data EEPROM Write Protection bit
  9335                           ;	WRTD = 0x1, unprogrammed default
  9336                           ;	Scanner Enable bit
  9337                           ;	SCANE = 0x1, unprogrammed default
  9338                           ;	Low Voltage Programming Enable bit
  9339                           ;	LVP = 0x1, unprogrammed default
  9340  300007                     	org	3145735
  9341  300007  FF                 	db	255
  9342                           
  9343                           ;Config register CONFIG5L @ 0x300008
  9344                           ;	unspecified, using default values
  9345                           ;	UserNVM Program Memory Code Protection bit
  9346                           ;	CP = 0x1, unprogrammed default
  9347                           ;	DataNVM Memory Code Protection bit
  9348                           ;	CPD = 0x1, unprogrammed default
  9349  300008                     	org	3145736
  9350  300008  FF                 	db	255
  9351                           
  9352                           ;Config register CONFIG5H @ 0x300009
  9353                           ;	unspecified, using default values
  9354  300009                     	org	3145737
  9355  300009  FF                 	db	255
  9356                           
  9357                           ;Config register CONFIG6L @ 0x30000A
  9358                           ;	unspecified, using default values
  9359                           ;	Table Read Protection Block 0
  9360                           ;	EBTR0 = 0x1, unprogrammed default
  9361                           ;	Table Read Protection Block 1
  9362                           ;	EBTR1 = 0x1, unprogrammed default
  9363                           ;	Table Read Protection Block 2
  9364                           ;	EBTR2 = 0x1, unprogrammed default
  9365                           ;	Table Read Protection Block 3
  9366                           ;	EBTR3 = 0x1, unprogrammed default
  9367                           ;	Table Read Protection Block 4
  9368                           ;	EBTR4 = 0x1, unprogrammed default
  9369                           ;	Table Read Protection Block 5
  9370                           ;	EBTR5 = 0x1, unprogrammed default
  9371                           ;	Table Read Protection Block 6
  9372                           ;	EBTR6 = 0x1, unprogrammed default
  9373                           ;	Table Read Protection Block 7
  9374                           ;	EBTR7 = 0x1, unprogrammed default
  9375  30000A                     	org	3145738
  9376  30000A  FF                 	db	255
  9377                           
  9378                           ;Config register CONFIG6H @ 0x30000B
  9379                           ;	unspecified, using default values
  9380                           ;	Boot Block Table Read Protection bit
  9381                           ;	EBTRB = 0x1, unprogrammed default
  9382  30000B                     	org	3145739
  9383  30000B  FF                 	db	255
  9384                           tosu	equ	0xFFF
  9385                           tosh	equ	0xFFE
  9386                           tosl	equ	0xFFD
  9387                           stkptr	equ	0xFFC
  9388                           pclatu	equ	0xFFB
  9389                           pclath	equ	0xFFA
  9390                           pcl	equ	0xFF9
  9391                           tblptru	equ	0xFF8
  9392                           tblptrh	equ	0xFF7
  9393                           tblptrl	equ	0xFF6
  9394                           tablat	equ	0xFF5
  9395                           prodh	equ	0xFF4
  9396                           prodl	equ	0xFF3
  9397                           indf0	equ	0xFEF
  9398                           postinc0	equ	0xFEE
  9399                           postdec0	equ	0xFED
  9400                           preinc0	equ	0xFEC
  9401                           plusw0	equ	0xFEB
  9402                           fsr0h	equ	0xFEA
  9403                           fsr0l	equ	0xFE9
  9404                           wreg	equ	0xFE8
  9405                           indf1	equ	0xFE7
  9406                           postinc1	equ	0xFE6
  9407                           postdec1	equ	0xFE5
  9408                           preinc1	equ	0xFE4
  9409                           plusw1	equ	0xFE3
  9410                           fsr1h	equ	0xFE2
  9411                           fsr1l	equ	0xFE1
  9412                           bsr	equ	0xFE0
  9413                           indf2	equ	0xFDF
  9414                           postinc2	equ	0xFDE
  9415                           postdec2	equ	0xFDD
  9416                           preinc2	equ	0xFDC
  9417                           plusw2	equ	0xFDB
  9418                           fsr2h	equ	0xFDA
  9419                           fsr2l	equ	0xFD9
  9420                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    4
    Data        162
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160    120     150
    BANK1           256      0     254
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2182_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S824DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S824DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 26
		 -> main@test(BANK0[26]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 26
		 -> main@test(BANK0[26]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _determine_color_new->___flsub
    ___xxtofl->___wmul
    ___flsub->___fldiv
    ___fldiv->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    ___fltol->___flsub
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_determine_color_new
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               136   136      0   53648
                                             79 COMRAM     2     2      0
                                             48 BANK0     72    72      0
                    _Interrupts_init
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                   _color_click_init
                _determine_color_new
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   16973
                                             18 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   16121
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   15591
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    7375
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    6272
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         3     1      2     844
                                             15 COMRAM     3     1      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 60    56      4   15476
                                             62 COMRAM     8     4      4
                                              0 BANK0     48    48      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1072
                                             10 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4537
                                             54 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2846
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1502
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     798
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3213
                                             29 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     913
                                             62 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2176
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     295
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___fldiv (ARG)
     ___flmul (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _determine_color_new
     ___fladd
     ___fldiv
     ___fleq
     ___flge
     ___flsub
     ___xxtofl
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9       8        0.0%
DATA                 0      0     1E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 01 17:02:31 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 3A76                    ___fldiv@aexp 0036  
                  ___fldiv@bexp 0035                    ___fldiv@sign 002E                 _color_read_Blue 3B66  
                            l21 3DEE                              l30 3AC4                              l24 3F56  
                            l33 3B14                              l27 3B64                              l36 3BB4  
                            l39 396A                              l80 0FEE                              l92 10F0  
                            l84 108A                              l86 109A                              l96 118C  
                            l98 119C             ___wmul@multiplicand 0007                _color_read_Clear 3B16  
              _color_read_Green 3AC6               ??_Interrupts_init 0005                             l104 14DC  
                           l108 1564                             l141 3EF0                             l150 3FCC  
                           l135 3E74                             l144 3FD6                             l153 3FAC  
                           l138 3ECA                             l402 3F70                             l147 3FC2  
                           l156 3CCA                             l433 3FB8                             l193 3D0C  
                           l445 3F16                             l710 35AA                             l358 3F36  
                           l704 382A                             l392 3F88                             l715 35F0  
                           l572 33E6                             l389 3E9E                             l398 3E1E  
                           l742 34EC                             l559 3282                             l973 1C9E  
                           l990 1DB8                             l982 1F6E                             l974 1C8C  
                           l975 1C52                             l999 1E88                             _abs 3D0E  
                           _pad 36BC                             wreg 000FE8                    ___flmul@aexp 0016  
                  ___flmul@bexp 0017                    ___flmul@sign 0011                    ___flmul@temp 001C  
                  ___flmul@prod 0018                    ___fltol@exp1 0048                            l1000 1E76  
                          l1100 2DFA                            l1015 3C44                            l1103 2F56  
                          l1040 2650                            l1032 2556                            l1041 263E  
                          l1114 2EEE                            l1027 2732                            l1107 2E92  
                          l1123 3A22                            ?_abs 0017                            l1220 39C8  
                          l1029 2592                            l1221 39D0                            l1038 25D8  
                          l1214 2ABE                            l1063 2398                            l1225 3D44  
                          l1066 222A                            l1154 3702                            l1059 2034  
                          l1076 235A                            l1068 22A2                            l1228 3D4C  
                          l1069 2290                            l1157 3744                            l1165 2B60  
                          l1262 3D84                            l1270 3A74                            l1159 3780  
                          l1167 2B68                            l1256 30F2                            l4001 1100  
                          l1337 3DBA                            l1185 2DA2                            l4011 11DE  
                          l4003 1132                            l1259 30FA                            l4101 3DF0  
                          l4021 12C6                            l4013 123A                            l4005 1146  
                          l3301 3C98                            l1285 36BA                            l1293 3C88  
                          l4103 3DF4                            l4031 1520                            l4023 1346  
                          l4015 124C                            l4007 1178                            l3303 3CA0  
                          l4111 3F6C                            l1199 282E                            l1296 3FD8  
                          l4105 3E02                            l4201 2168                            l3401 1BF4  
                          l3321 1AB0                            l4025 1378                            l4033 1554  
                          l4017 127E                            l4009 11AC                            l4041 3CF4  
                          l3305 3CC6                            l4107 3E06                            l4211 2210  
                          l4203 2184                            l4131 1F7C                            l3411 1C6C  
                          l3403 1C1E                            l3331 1AEC                            l3323 1ABC  
                          l4027 142C                            l4019 1294                            l4043 3D08  
                          l3307 3CC8                            l5011 3036                            l5003 2FD8  
                          l4221 224C                            l4213 221A                            l4205 21AE  
                          l4141 1FBC                            l4133 1F8A                            l3173 3ECA  
                          l3501 1EFE                            l3421 1CAC                            l3413 1C70  
                          l3405 1C3A                            l3341 1B1C                            l3333 1AFC  
                          l3325 1ACA                            l4029 1510                            l4045 3D0A  
                          l4037 3CCC                            l4109 3F58                            l5021 30C4  
                          l5005 2FEE                            l5101 2994                            l4231 22BE  
                          l4223 225A                            l4215 2228                            l4207 21E4  
                          l4151 1FEC                            l4143 1FC2                            l4135 1F8C  
                          l3175 3EDA                            l3511 1F46                            l3503 1F0E  
                          l3431 1CEE                            l3423 1CBC                            l3415 1C7E  
                          l3407 1C4A                            l3351 1B46                            l3343 1B2E  
                          l3335 1AFE                            l3327 1ACC                            l4039 3CDC  
                          l5023 30D6                            l5015 3070                            l5007 2FF6  
                          l5111 2A4A                            l5103 29DC                            l4241 2328  
                          l4233 22CC                            l4225 2288                            l4217 223A  
                          l4209 21F2                            l4161 2024                            l4153 1FEE  
                          l4145 1FD2                            l4137 1F9C                            l4129 1F70  
                          l3281 3FCE                            l3513 1F48                            l3505 1F2E  
                          l3441 1D1C                            l3433 1CFC                            l3417 1C80  
                          l3409 1C60                            l3353 1B56                            l3361 1B80  
                          l3345 1B30                            l3329 1ADC                            l3337 1B06  
                          l4081 3F30                            l4073 3F18                            l5009 2FFE  
                          l5113 2A5E                            l5041 275C                            l4251 237E  
                          l4243 2342                            l4235 22F6                            l4219 2248  
                          l4171 2074                            l4163 2044                            l4155 1FFE  
                          l4147 1FD8                            l4139 1FAC                            l3283 3FD2  
                          l3291 3FC8                            l3515 1F4E                            l3507 1F32  
                          l3451 1D88                            l3443 1D26                            l3435 1D08  
                          l3427 1CD0                            l3419 1C8A                            l3371 1BB8  
                          l3363 1B90                            l3355 1B66                            l3347 1B36  
                          l3339 1B16                            l4083 3F32                            l4075 3F22  
                          l5019 30B2                            l5107 2A14                            l5051 278E  
                          l5043 276A                            l5123 2A84                            l4245 235E  
                          l4253 2384                            l4229 22B2                            l4237 22FA  
                          l4181 20C4                            l4173 207E                            l4165 2054  
                          l4157 200E                            l4149 1FDE                            l4261 33FE  
                          l3621 3E4C                            l3285 3FA4                            l3517 1F5C  
                          l3509 1F40                            l3453 1D98                            l3437 1D0C  
                          l3429 1CE0                            l3445 1D2C                            l3381 1BCC  
                          l3373 1BBC                            l3365 1BA2                            l3357 1B76  
                          l3349 1B44                            l4085 3F34                            l4077 3F24  
                          l3293 3FBA                            l5125 2AAC                            l5109 2A3C  
                          l5117 2A6A                            l5061 27AC                            l5053 27A0  
                          l5045 277C                            l5221 39EC                            l4087 3FAE  
                          l3711 3E9C                            l4255 2388                            l4247 236E  
                          l4239 2314                            l4191 2106                            l4183 20D0  
                          l4175 2094                            l4159 201E                            l4271 344E  
                          l3631 3E62                            l3623 3E56                            l3287 3FA8  
                          l3519 1F5E                            l3471 1E1A                            l3463 1DF2  
                          l3447 1D52                            l3455 1DA8                            l3439 1D1A  
                          l3391 1BE0                            l3383 1BD0                            l3375 1BC0  
                          l3367 1BB0                            l3359 1B78                            l4079 3F26  
                          l3295 3FBE                            l5119 2A78                            l5047 2780  
                          l5039 2734                            l5223 39F4                            l3705 3E78  
                          l4249 237C                            l4193 2116                            l4185 20DE  
                          l4177 20A0                            l4169 2068                            l4281 3478  
                          l4273 3452                            l4265 3412                            l3625 3E5C  
                          l3289 3FC4                            l3633 3F3A                            l3801 25A2  
                          l3721 23B4                            l3473 1E22                            l3465 1DFC  
                          l3457 1DCE                            l3449 1D86                            l3481 1E46  
                          l3393 1BE4                            l3385 1BD4                            l3377 1BC4  
                          l3369 1BB4                            l3297 3C8C                            l3641 3A76  
                          l3713 3F72                            l5081 2866                            l5073 27C4  
                          l5065 27B2                            l5057 27A6                            l5049 278C  
                          l5225 3A10                            l5217 39D2                            l5401 157E  
                          l3707 3E88                            l4195 2130                            l4187 20EA  
                          l4179 20B8                            l4291 34A0                            l4283 3482  
                          l4275 3460                            l4267 343C                            l4259 33E8  
                          l3627 3E5E                            l3803 25B8                            l3811 25E8  
                          l3731 23E8                            l3723 23B6                            l3491 1E98  
                          l3483 1E4A                            l3475 1E26                            l3467 1E0A  
                          l3459 1DDE                            l3395 1BE8                            l3387 1BD8  
                          l3379 1BC8                            l3299 3C90                            l3635 3B16  
                          l3643 3ABC                            l5091 28E6                            l5083 289C  
                          l5075 281C                            l5219 39E4                            l5411 158E  
                          l5403 1580                            l3709 3E8C                            l4197 2140  
                          l4189 20FA                            l4293 34AC                            l4285 348C  
                          l4269 343E                            l3629 3E60                            l3813 25F6  
                          l3805 25BE                            l3741 241A                            l3725 23C6  
                          l3733 23F0                            l3717 239A                            l3493 1EA4  
                          l3485 1E58                            l3477 1E36                            l3469 1E0C  
                          l3397 1BEC                            l3389 1BDC                            l3901 2DB6  
                          l3653 3B66                            l3637 3B5C                            l5085 28AA  
                          l5077 283C                            l5069 27B8                            l5501 18F8  
                          l5421 15AE                            l5413 1596                            l5405 1584  
                          ?_pad 0015                            l4199 215C                            l4295 34BC  
                          l3823 2660                            l3831 26A8                            l3815 25FA  
                          l3807 25C8                            l3751 244E                            l3743 241C  
                          l3735 2400                            l3727 23D6                            l3719 23A6  
                          l3495 1EB2                            l3487 1E6E                            l3479 1E38  
                          l3399 1BF0                            l3911 2E34                            l3903 2DC4  
                          l3655 3BAC                            l3647 3AC6                            l5095 2932  
                          l5087 28B8                            l5079 283E                            l5183 396C  
                          l5511 193E                            l5503 1904                            l5431 15DE  
                          l5423 15C2                            l5415 159E                            l5407 1584  
                          l4297 34CC                            l3841 2712                            l3833 26C2  
                          l3825 266C                            l3817 2608                            l3809 25D6  
                          l3761 2494                            l3745 242C                            l3753 2456  
                          l3737 2406                            l3729 23E6                            l3497 1EEC  
                          l3921 2E88                            l3913 2E3C                            l3905 2E0A  
                          l3649 3B0C                            l5089 28D8                            l5097 2944  
                          l5185 3974                            l5521 1A7A                            l5513 194A  
                          l5505 1920                            l5441 15EE                            l5433 15E6  
                          l5425 15C6                            l5417 15A2                            l5409 158A  
                          l4299 34DC                            l3843 2720                            l3835 26D8  
                          l3827 267A                            l3819 2636                            l3771 24BC  
                          l3763 2498                            l3755 2466                            l3747 243C  
                          l3739 240C                            l3499 1EEE                            l3931 2EFE  
                          l3923 2EC4                            l3915 2E48                            l3907 2E20  
                          l4811 3132                            l4803 30FC                            l5099 296C  
                          l5187 3982                            l5531 1AA6                            l5523 1A86  
                          l5515 1966                            l5507 1922                            l5451 15F8  
                          l5443 15F0                            l5435 15E8                            l5427 15CE  
                          l5419 15AA                            l3845 2726                            l3837 26F2  
                          l3829 26A4                            l3781 250A                            l3757 247C  
                          l3749 244C                            l3861 3782                            l3941 2F46  
                          l3933 2F02                            l3925 2ED0                            l3917 2E7A  
                          l4821 318E                            l4813 3140                            l4805 3100  
                          l4901 3768                            l5189 39A8                            l5525 1A8A  
                          l5517 19A6                            l5509 1924                            l5461 160C  
                          l5453 15FA                            l5445 15F2                            l5437 15EA  
                          l5429 15D6                            l3847 2728                            l3839 270E  
                          l3791 2554                            l3783 251A                            l3775 24D0  
                          l3759 248C                            l3767 24AC                            l3871 3822  
                          l3863 37B0                            l3855 3C00                            l3935 2F26  
                          l3927 2EDE                            l3919 2E7C                            l4831 31F8  
                          l4823 3196                            l4815 3160                            l4807 310E  
                          l5527 1AA2                            l5519 1A54                            l5471 1662  
                          l5463 161A                            l5455 15FC                            l5447 15F4  
                          l5439 15EC                            l3961 3DE4                            l3953 3DBC  
                          l3793 2560                            l3785 2522                            l3777 24EA  
                          l3769 24BC                            l3873 3828                            l3865 37C0  
                          l3881 352C                            l3857 3C10                            l3937 2F36  
                          l3929 2EFC                            l4921 3A6E                            l4913 3A24  
                          l4841 3242                            l4833 3218                            l4825 31AA  
                          l4817 3164                            l4809 312E                            l4905 3D0E  
                          l5529 1AA4                            l5481 1786                            l5473 16A2  
                          l5465 1622                            l5457 15FE                            l5449 15F6  
                          l5393 1566                            l3955 3DC0                            l3795 257E  
                          l3787 2532                            l3779 24FA                            l3867 37EE  
                          l3891 3598                            l3883 355A                            l3939 2F44  
                          l3971 3932                            l3963 38CE                            l4915 3A28  
                          l4843 3262                            l4835 321A                            l4827 31B8  
                          l4819 3170                            l4851 3296                            l4907 3D28  
                          l4771 3620                            l4931 2B28                            l5491 17BC  
                          l5483 179E                            l5475 1750                            l5467 163A  
                          l5459 160A                            l5395 1572                            l3957 3DCA  
                          l3797 2580                            l3789 2546                            l3869 37FE  
                          l3893 35E8                            l3885 356A                            l3877 34EE  
                          l3981 0EB0                            l3973 395A                            l3965 38E2  
                          l4909 3D4E                            l4917 3A3C                            l4837 322C  
                          l4829 31CA                            l4861 3306                            l4853 32B6  
                          l4773 363E                            l4765 35F2                            l4781 3C52  
                          l4941 2B82                            l4933 2B38                            l4925 2AC0  
                          l5493 17C8                            l5485 17A0                            l5477 1776  
                          l5469 1646                            l5397 1576                            l3959 3DDA  
                          l3799 2590                            l3895 35EE                            l3887 3578  
                          l3879 351C                            l3991 1030                            l3983 0F2C  
                          l3967 38F2                            l4919 3A6A                            l4839 3232  
                          l4871 337E                            l4863 330E                            l4855 32BA  
                          l4847 3284                            l4775 3674                            l4767 3604  
                          l4783 3C64                            l4791 3D96                            l4951 2BAE  
                          l4943 2B90                            l4935 2B3A                            l4927 2AE0  
                          l5583 27EE                            l5495 17E4                            l5487 17A2  
                          l5479 1782                            l5399 157A                            l3889 358A  
                          l3993 1044                            l3985 0FA8                            l3977 0E34  
                          l3969 391A                            l5585 3020                            l4873 3390  
                          l4865 3322                            l4857 32C8                            l4849 3288  
                          l4769 3616                            l4785 3C68                            l4793 3DAE  
                          l4961 2CBA                            l4953 2C30                            l4945 2B96  
                          l4937 2B54                            l4929 2B08                            l5497 1824  
                          l5489 17A4                            l3899 2DA6                            l3995 1076  
                          l3987 0FDA                            l3979 0E34                            l4867 3330  
                          l4875 3396                            l4859 32E8                            l4779 3C46  
                          l4787 3D86                            l4891 36FA                            l4883 36BC  
                          l4971 2D2E                            l4963 2CD8                            l4955 2C36  
                          l4947 2B9E                            l4939 2B70                            l5499 18D2  
                          l3997 10AA                            l3989 0FFE                            l4797 3EF2  
                          l4877 33A6                            l4869 335E                            l4789 3D92  
                          l4893 370E                            l4885 36CC                            l4981 2D6A  
                          l4973 2D3E                            l4965 2CF2                            l4957 2C3C  
                          l4949 2BA8                            l3999 10DC                            l4799 3F0E  
                          l4991 2F70                            l4879 33C6                            l4895 3722  
                          l4887 36E0                            l4975 2D44                            l4983 2D7A  
                          l4967 2D0C                            l4959 2CA0                            l4993 2F74  
                          l4897 3726                            l4889 36EE                            l4977 2D56  
                          l4969 2D1C                            l4995 2F94                            l4987 2F58  
                          l4899 3754                            l4979 2D62                            l4997 2FCE  
                          l4989 2F6C                            l4999 2FD2                            STR_1 0E05  
                          STR_2 0E14                            STR_3 0E23                            u3000 1DCE  
                          u3001 1DCA                            u3010 1DDE                            u3011 1DDA  
                          u3100 1EB2                            u3020 1E0A                            u3101 1EAE  
                          u3021 1E06                            u3110 1EEC                            u3030 1E1A  
                          u3111 1EE8                            u3031 1E16                            u4000 2054  
                          u3120 1EFE                            u3040 1E36                    _BAUD4CONbits 000EE9  
                          u4001 2050                            u3121 1EFA                            u3041 1E32  
                          _LATE 000F7D                            u4010 21CE                            u3130 1F0E  
                          u3050 1E46                            u3131 1F0A                            u3051 1E42  
                          _LATG 000F7F                            u4100 2342                            u4020 2228  
                          u3140 1F2E                            u3060 1E58                            u4101 233E  
                          u4021 2224                            u3141 1F2A                            u3061 1E54  
                          u4110 237C                            u4030 2248                            u2510 3EDA  
                          u3150 1F40                            u3070 1E6E                            u4111 2378  
                          u4031 2244                            u4015 21C4                            u2511 3ED6  
                          u3151 1F3C                            u3071 1E6A                            u3320 3E88  
                          u4040 225A                            u4120 33FE                            u2520 3EF0  
                          u3400 243C                            u3160 1F5C                            u3080 1E84  
                          u5000 2FEA                            u3321 3E84                            u4041 2256  
                          u4121 33FA                            u2521 3EEC                            u3401 2438  
                          u3161 1F58                            u3081 1E80                            u5001 2FE6  
                          u4050 2288                            u4130 3432                            u3410 247C  
                          u3090 1E98                            u3330 3F86                            u5010 30AC  
                          _T2PR 000FBC                            u4051 2284                            u3411 2478  
                          u3091 1E94                            u3331 3F80                            u5011 30A6  
                          u4060 229E                            u4140 3460                            u3500 2608  
                          u3420 24BC                            u3340 3F88                            u5020 30AE  
                          u5100 28AA                            u4061 229A                            u4141 345C  
                          u3501 2604                            u3421 24B8                            u5101 28A6  
                          u4070 22B2                            u4150 3474                            u3510 2636  
                          u3430 2532                            u3350 23B4                            u5030 30C4  
                          u5110 292A                            u4071 22AE                            u4151 3470  
                          u4135 3428                            u3511 2632                            u3431 252E  
                          u3351 23B0                            u5031 30C0                            u5111 2924  
                          u4080 22CC                            u4160 349C                            u3520 264C  
                          u3440 2554                            u3360 23C6                            u3600 3822  
                          u2800 1AEC                            u5040 30D6                            u5120 292C  
                          u4081 22C8                            u4161 3498                            u3521 2648  
                          u3441 2550                            u3361 23C2                            u3601 381E  
                          u2801 1AE8                            u5041 30D2                            u4090 2314  
                          u4170 34BC                            u3530 2660                            u3450 257E  
                          u3370 23D6                            u3610 351C                            u2810 1B2E  
                          u5130 2944                            u5210 39C8                            u4091 2310  
                          u4171 34B8                            u3531 265C                            u3451 257A  
                          u3371 23D2                            u3611 3518                            u2811 1B2A  
                          u5131 2940                            u5211 39C4                            u4180 34CC  
                          u3540 267A                            u3460 25A2                            u3380 241A  
                          u3620 355A                            u2900 1C60                            u2820 1B44  
                          u3700 2EC0                            u5140 296C                            u5060 275C  
                          u4181 34C8                            u3541 2676                            u3461 259E  
                          u3381 2416                            u3621 3556                            u2901 1C5C  
                          u2821 1B40                            u3701 2EBC                            u5141 2968  
                          u5061 2758                            u3550 26C2                            u3470 25B8  
                          u3390 242C                            u3630 3578                            u2910 1C7E  
                          u2830 1B56                            u3710 2EDE                            u2750 3CB4  
                          u5150 2994                            u5070 282E                            u3551 26BE  
                          u3471 25B4                            u3391 2428                            u3631 3574  
                          u2911 1C7A                            u2831 1B52                            u3711 2EDA  
                          u2751 3CAC                            u5151 2990                            u5071 282A  
                          u3560 26F2                            u3480 25D6                            u3640 3598  
                          u2920 1C9E                            u2840 1B66                            u3720 2EEE  
                          u3800 10DC                            u4600 3DAE                            u5160 2A3C  
                          u5080 283C                            u3561 26EE                            u3481 25D2  
                          u3641 3594                            u2921 1C9A                            u2841 1B62  
                          u3721 2EEA                            u3801 10D8                            u4601 3DAA  
                          u5161 2A38                            u5081 2838                            u3570 2720  
                          u3490 25F6                            u3650 35E8                            u2930 1CAC  
                          u2850 1BA2                            u3730 2EFC                            u3810 1132  
                          u4610 310E                            u5090 2866                            u3571 271C  
                          u3491 25F2                            u3651 35E4                            u2931 1CA8  
                          u2851 1B9E                            u3731 2EF8                            u3811 112E  
                          u4611 310A                            u5091 2862                            u3580 37B0  
                          u2940 1CBC                            u2860 1BB0                            u2780 1ACA  
                          u3740 2F36                            u3660 2DB6                            u3820 1178  
                          u3900 3F6C                            u4620 3140                            u4700 3306  
                          u3581 37AC                            u2941 1CB8                            u2861 1BAC  
                          u2781 1AC6                            u3741 2F32                            u3661 2DB2  
                          u3821 1174                            u3901 3F68                            u4621 313C  
                          u4701 3302                            u3590 37EE                            u2950 1CEE  
                          u2870 1C1E                            u2790 1ADC                            u3750 2F44  
                          u3670 2DC4                            u3830 11DE                            u4710 3330  
                          u4550 3604                            u3591 37EA                            u2951 1CEA  
                          u2871 1C1A                            u2791 1AD8                            u3751 2F40  
                          u3671 2DC0                            u3831 11DA                            u4631 316A  
                          u4711 332C                            u4551 3600                            u5407 162C  
                          u2960 1CFC                            u2880 1C36                            u3680 2E20  
                          u3840 127E                            u2768 3CB6                            u4800 3D80  
                          u4640 318E                            u4720 335E                            u4560 3616  
                          u2961 1CF8                            u2881 1C30                            u3681 2E1C  
                          u3841 127A                            u4641 318A                            u4721 335A  
                          u4561 3612                            u5417 1790                            u3930 1F8A  
                          u2970 1D1A                            u2890 1C38                            u3690 2E76  
                          u3850 12C6                            u3770 0FDA                            u4810 3A3C  
                          u4650 31B8                            u4730 33A6                            u4570 363E  
                          u3931 1F86                            u5507 3DD0                            u2971 1D16  
                          u3691 2E72                            u3851 12C2                            u3771 0FD6  
                          u4811 3A38                            u4651 31B4                            u4731 33A2  
                          u4571 363A                            u5427 17AE                            u3940 1F9C  
                          u2980 1D52                            u3860 1378                            u3780 1030  
                          u4820 3A6A                            u4660 31F8                            u4580 3674  
                          u4740 36CC                            u4900 2CBA                            u3941 1F98  
                          u2981 1D4E                            u3861 1374                            u3781 102C  
                          u4821 3A66                            u4661 31F4                            u4581 3670  
                          u4741 36C8                            u4901 2CB6                            u5437 1912  
                          u3950 1FAC                            u2990 1D98                            u3870 1520  
                          u3790 1076                            u4670 3242                            u4590 3C88  
                          u4750 36EE                            u4910 2CD8                            u4830 2AF0  
                          u5390 161A                            u3951 1FA8                            u2991 1D94  
                          u3871 151C                            u3791 1072                            u4671 323E  
                          u4591 3C84                            u4751 36EA                            u4911 2CD4  
                          u4831 2AEA                            u5447 1930                            u5391 1616  
                          u3960 1FEC                            u4680 3296                            u4760 3744  
                          u4920 2CF2                            u4840 2AF2                            u3961 1FE8  
                          u4681 3292                            u4761 3740                            u4921 2CEE  
                          u5457 1A94                            u3890 3E1E                            u3970 1FFE  
                          u4690 32C8                            u4770 3754                            u4930 2D0C  
                          u4850 2B08                            u3891 3E1A                            u3971 1FFA  
                          u5467 38E8                            u4691 32C4                            u4771 3750  
                          u4931 2D08                            u4851 2B04                            u3980 200E  
                          u4780 3D28                            u4940 2D1C                            u4860 2B38  
                          u3981 200A                            u5477 3910                            u4781 3D24  
                          u4941 2D18                            u4861 2B34                            u3990 2044  
                          u4790 3D7E                            u4950 2D2E                            u4870 2B54  
                          u3991 2040                            u5487 3938                            u4791 3D78  
                          u4951 2D2A                            u4871 2B50                            u4960 2D3E  
                          u4880 2B82                            u5497 3960                            u4961 2D3A  
                          u4881 2B7E                            u4970 2D56                            u4890 2B90  
                          u4971 2D52                            u4891 2B8C                            u4980 2F94  
                          u4981 2F90                            u4990 2FCE                            u4991 2FCA  
                          abs@a 0017                            _dbuf 01DE                            _atoi 2F58  
                          _main 1566                            _dtoa 2AC0                            _prec 00F2  
                          _nout 00EE                            pad@i 001C                            pad@p 0019  
                          _tiny 0E01                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001E  
                          fsr2l 000FD9                            btemp 0056                            prodh 000FF4  
                          prodl 000FF3                            start 0076                 ___fldiv@new_exp 002F  
        __end_of_color_read_Red 3AC6                 __end_of_HighISR 0076                    ___param_bank 000000  
                         ??_abs 0019                           ??_pad 001B                   ___fltol@sign1 0047  
               __end_of___aodiv 3284                           ?_atoi 000C                 __end_of___fladd 1F70  
                         ?_main 0001                           ?_dtoa 0020                 __end_of___aomod 33E8  
               __end_of___fldiv 2734                 __end_of___flmul 239A                 __end_of___flsub 3C46  
               __end_of___fltol 34EE        __size_of_initDCmotorsPWM 0042                           i2l440 0066  
                         i2l442 006A                           i2l392 3FA0                           i2l385 3E4A  
                         i2l378 3EC8                    vfpfcnvrt@fmt 0046                    main@int_part 00AA  
    __end_of_I2C_2_Master_Start 3FD8      __end_of_I2C_2_Master_Write 3FAE                           _flags 00F4  
                         _errno 00EC                           _fputc 35F2                           _fputs 3C46  
               __end_of_isdigit 3D86                           atoi@n 0019                           pad@fp 0015  
                         atoi@s 000C                           _width 00F0                           _putch 3FD8  
                         dtoa@d 0022                           dtoa@i 0042                           dtoa@n 003A  
                         dtoa@p 0034                           dtoa@s 0038                           dtoa@w 0036  
               __end_of_isspace 3A76                           tablat 000FF5                           ttemp5 0057  
                         ttemp6 005A                           ttemp7 005E                           status 000FD8  
                         wtemp8 0057                 __end_of_sprintf 3A24         __end_of_color_read_Blue 3BB6  
         _I2C_2_Master_RepStart 3FBA              putCharToRxBuf@byte 0001                 ?_color_read_Red 0009  
               __initialization 3BB6                    __end_of_atoi 30FC                    __end_of_main 1AB0  
                  __end_of_dtoa 2DA4                    __end_of_tiny 0E05                 i2_isDataInTxBuf 3F8A  
            putCharToTxBuf@byte 0005                          ??_atoi 000E                          ??_main 0050  
                        ??_dtoa 002A                   __activetblptr 000003                   main@frac_part 00A4  
                        ?_fputc 0005                          ?_fputs 000E                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l4121 3E20                          i2l4113 3EA2                          i2l4123 3E30  
                        i2l4115 3EB2                          i2l4125 3E34                          i2l4117 3EB6  
                        i2l4119 3EC6                          i2l2627 3F8A                          i2l4701 0028  
                        i2l4703 0038                          i2l4705 0046                          i2l4707 005A  
                        i2l4697 0012                          i2l4699 0022                   vfpfcnvrt@done 0068  
                     ??_HighISR 0003        __end_of_color_click_init 3DF0                          _RX4PPS 000E15  
                        _TX4REG 000EE4                __end_of___xxtofl 2F58                   ?_read_colours 0010  
                  vfprintf@cfmt 004E                          ___flge 34EE                _getCharFromTxBuf 3E20  
                        ___fleq 3782                       ??___aodiv 0015     __end_of_determine_color_new 1566  
                     ??___fladd 000D                       ??___aomod 0015                          ___wmul 3EF2  
                     ??___fldiv 0026                       ??___flmul 000D                       ??___flsub 003F  
                     ??___fltol 0043                          clear_0 3BDC                          clear_1 3BE8  
                        isa$std 000001                          pad@buf 0017                          dtoa@fp 0020  
                        _strlen 3D86                          fputc@c 0005               ?_TxBufferedString 0006  
                        fputs@c 0012                          fputs@i 0013                          fputs@s 000E  
                     ??_isdigit 0007                    __mediumconst 0000                       ??_isspace 0007  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
            ??_TxBufferedString 0008                          putch@c 0001                __end_of_vfprintf 39D2  
             ??_initDCmotorsPWM 0007                       ??_sprintf 0050                      ___flge@ff1 0005  
                    ___flge@ff2 0009                    ___xxtofl@arg 0015                    ___xxtofl@exp 0014  
                  ___xxtofl@val 000B                      ___fleq@ff1 0005                      ___fleq@ff2 0009  
         __end_of_isDataInTxBuf 3F8A                      __accesstop 0060         __end_of__initialization 3BF6  
      __end_of_color_read_Clear 3B66        __end_of_color_read_Green 3B16          ?_I2C_2_Master_RepStart 0001  
       __end_ofi2_isDataInTxBuf 3FA2                   ___rparam_used 000001                      ___fltol@f1 003F  
              ?_color_read_Blue 0009                  ??_read_colours 0012                 _Interrupts_init 3FAE  
                __pcstackCOMRAM 0001                    __pidataBANK1 382C                   __end_of_fputc 36BC  
                 __end_of_fputs 3C8A                   __end_of_putch 3FDA        _determine_color_new$2652 0070  
                       ??_fputc 0009                         ??_fputs 0012                         ??_putch 0005  
                    __pbssBANK0 00D8                      __pbssBANK1 01A2               _color_writetoaddr 3F38  
                  _T2CLKCONbits 000FBF                         ?___flge 0005                         ?___fleq 0005  
            ?_color_writetoaddr 0007                         ?___wmul 0005              __size_of_sendTxBuf 001A  
           ??_color_writetoaddr 0008                         ?_strlen 0005                       ?___xxtofl 000B  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5              __size_of_vfpfcnvrt 038C  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5         __end_of_Interrupts_init 3FBA          color_writetoaddr@value 0007  
              ??_color_read_Red 000B                         _HighISR 0008       __end_of_color_writetoaddr 3F58  
              ?i2_isDataInTxBuf 0001              _I2C_2_Master_Start 3FCE                      _initUSART4 3F18  
            _I2C_2_Master_Write 3FA2                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000E                 __size_of___flge 0104                 __size_of___fleq 00AA  
                       ___aodiv 30FC                         ___fladd 1AB0                         ___aomod 3284  
                       ___fldiv 239A                         ___flmul 1F70                         ___flsub 3C00  
                       ___fltol 33E8                 __size_of___wmul 0026             ?_I2C_2_Master_Start 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 006C                    __psmallconst 0E00  
       __size_of_putCharToRxBuf 002A         __size_of_putCharToTxBuf 002A                         __pcinit 3BB6  
                       __ramtop 0E00                         __ptext0 1566                         __ptext1 39D2  
                       __ptext2 396C                         __ptext3 2734                         __ptext4 2AC0  
                       __ptext5 36BC                         __ptext6 3D86                         __ptext7 3C46  
                       __ptext8 35F2                         __ptext9 3FD8                 __size_of_strlen 0036  
                     _T2CONbits 000FBD                    __size_of_abs 0040                    __size_of_pad 00C6  
                       _isdigit 3D4E                      ??___xxtofl 000F                         _isspace 3A24  
                     _T2HLTbits 000FBE            __end_of_read_colours 396C                   _RxBufWriteCnt 0055  
                       atoi@neg 0012        __end_of_getCharFromTxBuf 3E4C                         _sprintf 39D2  
          ??_I2C_2_Master_Start 0006            ??_I2C_2_Master_Write 0006            end_of_initialization 3BF6  
             __end_of_sendTxBuf 3F72                         fputc@fp 0007                         fputs@fp 0010  
             ?_color_click_init 0001              ??_color_click_init 0009               __end_of_vfpfcnvrt 2AC0  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 004E  
                       strlen@a 0007                         strlen@s 0005                 _initDCmotorsPWM 3CCC  
                     _PORTFbits 000F8E                     ___fladd@grs 0014                   ___xxtofl@sign 0013  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0031                     ___fldiv@rem 002A  
      color_writetoaddr@address 0008         ??_I2C_2_Master_RepStart 0006     determine_color_new@RedRatio 0080  
              ?_Interrupts_init 0001                     ___flmul@grs 0012               ?_color_read_Clear 0009  
    __size_of_color_writetoaddr 0020                    _EUSART4RXbuf 00D8                    _EUSART4TXbuf 01A2  
     __size_of_TxBufferedString 0030               ?_color_read_Green 0009     determine_color_new@RatioMax 008C  
   determine_color_new@RatioMin 0088                     ?_initUSART4 0001                      main@motorL 00AC  
                    main@motorR 00B5              ??_color_read_Clear 000B              ??_color_read_Green 000B  
                    main@string 0090                  __end_of___flge 35F2                  __end_of___fleq 382C  
                   vfpfcnvrt@ap 0048                     vfpfcnvrt@fp 0044                     vfpfcnvrt@ll 0060  
                __end_of___wmul 3F18    __size_of_determine_color_new 0732                  __end_of_strlen 3DBC  
           color_read_Clear@tmp 000E             start_initialization 3BB6                     __end_of_abs 3D4E  
                   __end_of_pad 3782                   _TxBufWriteCnt 0053             color_read_Green@tmp 000E  
       __end_of_initDCmotorsPWM 3D0E                     vfprintf@fmt 006E                        ??___flge 000D  
                      ??___fleq 000D                        ??___wmul 0009                  _putCharToRxBuf 3EA0  
                _putCharToTxBuf 3E76                     __pdataBANK1 0100        __size_of_color_read_Blue 0050  
         __size_of_read_colours 009E                        ??_strlen 0007          __size_of_isDataInTxBuf 0018  
                     ___fladd@a 0009                       ___fladd@b 0005                       ___fldiv@a 0022  
                     ___fldiv@b 001E   determine_color_new@GreenRatio 0084                       ___flmul@a 0009  
                     ___flmul@b 0005                     __pbssCOMRAM 0052                       ___flsub@a 003B  
                     ___flsub@b 0037             __size_of_initUSART4 0020                   __pcstackBANK0 0060  
              ___aodiv@dividend 0005               __size_of___xxtofl 01B4         _determine_color_new$230 0060  
       _determine_color_new$231 0064         _determine_color_new$232 0068         _determine_color_new$233 006C  
                      ?_HighISR 0001                       _atoi$2300 0014                       _atoi$2301 0018  
                     _atoi$2302 0016                       _dtoa$2265 0032          __end_of_putCharToRxBuf 3ECA  
        __end_of_putCharToTxBuf 3EA0                    _read_colours 38CE                       __pintcode 0008  
                      ?___aodiv 0005                        ?___fladd 0005                        ?___aomod 0005  
                      ?___fldiv 001E                ___aodiv@quotient 0017                        ?___flmul 0005  
                      ?___flsub 0037                        ?___fltol 003F          TxBufferedString@string 0006  
          I2C_2_Master_Read@ack 0007               __size_of_vfprintf 0066            I2C_2_Master_Read@tmp 0008  
                   __smallconst 0E00                        ?_isdigit 0005               _I2C_2_Master_Idle 3ECA  
             _I2C_2_Master_Init 3E4C               _I2C_2_Master_Read 3C8A               _I2C_2_Master_Stop 3FC4  
                      ?_isspace 0005                    _RxBufReadCnt 0054              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0005                        ?_sprintf 0072               ?_getCharFromTxBuf 0001  
                __size_of_fputc 00CA                  __size_of_fputs 0044                  __size_of_putch 0002  
 determine_color_new@Saturation 007C              ??_getCharFromTxBuf 0001             ??_I2C_2_Master_Idle 0005  
           ??_I2C_2_Master_Init 0005             ??_I2C_2_Master_Read 0006                  ___wmul@product 0009  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0006                        _LATCbits 000F7B  
                 _isDataInTxBuf 3F72                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                _TxBufferedString 3DF0                        _LATGbits 000F7F  
                      _LATHbits 000F80                       _sendTxBuf 3F58                        _PIE4bits 000E2D  
                      i2u451_40 0022                        i2u451_41 001E                        i2u452_40 0038  
                      i2u452_41 0034                        i2u197_40 3F9E                        i2u453_40 0046  
                      i2u197_41 3F98                        i2u453_41 0042                        i2u198_40 3FA0  
                      i2u454_40 005A                        i2u454_41 0056                        i2u391_40 3EB2  
                      i2u391_41 3EAE                        _PIR4bits 000E37                        i2u392_40 3E30  
                      i2u392_41 3E2C            determine_color_new@m 003F                 ?_putCharToRxBuf 0001  
              ?_initDCmotorsPWM 0005                 ?_putCharToTxBuf 0001                        _SSP2CON2 000EDA  
                      _SSP2STAT 000ED8        __size_ofi2_isDataInTxBuf 0018                       _vfpfcnvrt 2734  
        determine_color1@F14710 016C       __size_of_color_click_init 0034          determine_color2@F14729 0136  
     __end_of_I2C_2_Master_Idle 3EF2       __end_of_I2C_2_Master_Init 3E76       __end_of_I2C_2_Master_Read 3CCC  
             ___wmul@multiplier 0005          determine_color3@F14748 0100       __end_of_I2C_2_Master_Stop 3FCE  
   I2C_2_Master_Write@data_byte 0006               ??_color_read_Blue 000B                    _TxBufReadCnt 0052  
                  _isspace$2318 000B                       copy_data0 3BCA     __size_of_I2C_2_Master_Start 000A  
   __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A                  ?_isDataInTxBuf 0001  
 __end_of_I2C_2_Master_RepStart 3FC4              color_read_Blue@tmp 000E                __size_of_HighISR 006E  
                    ?_sendTxBuf 0001             _determine_color_new 0E34                    ??_initUSART4 0005  
                      __Hrparam 0000                      vfprintf@ap 0070                        __Lrparam 0000  
                    vfprintf@fp 006C         __size_of_color_read_Red 0050                __size_of___aodiv 0188  
              __size_of___fladd 04C0                __size_of___aomod 0164                __size_of___fldiv 039A  
              __size_of___flmul 042A                __size_of___flsub 0046                __size_of___fltol 0106  
                    ?_vfpfcnvrt 0044                 ___aodiv@divisor 000D       __size_of_color_read_Clear 0050  
     __size_of_color_read_Green 0050                 ___aodiv@counter 0015                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4            ?_determine_color_new 003F                      sprintf@fmt 0074  
                      ___xxtofl 2DA4                __size_of_isdigit 0038              __end_of_initUSART4 3F38  
              __size_of_isspace 0052                        __ptext10 3D0E                        __ptext11 3284  
                      __ptext20 3A76                        __ptext12 30FC                        __ptext21 3AC6  
                      __ptext13 2F58                        __ptext30 3C00                        __ptext22 3B16  
                      __ptext14 3A24                        __ptext31 1AB0                        __ptext23 3B66  
                      __ptext15 3D4E                        __ptext40 3ECA                        __ptext32 34EE  
                      __ptext24 3FBA                        __ptext16 3EF2                        __ptext41 3E4C  
                      __ptext33 3782                        __ptext25 3C8A                        __ptext17 3F58  
                      __ptext50 3E20                        __ptext42 33E8                        __ptext34 239A  
                      __ptext26 3F18                        __ptext18 3F72                        __ptext43 1F70  
                      __ptext35 3DBC                        __ptext27 3CCC                        __ptext19 38CE  
                      __ptext44 3DF0                        __ptext36 3F38                        __ptext28 0E34  
                      __ptext45 3E76                        __ptext37 3FA2                        __ptext29 2DA4  
                      __ptext46 3FAE                        __ptext38 3FC4                        __ptext39 3FCE  
                      __ptext48 3F8A                        __ptext49 3EA0                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                __size_of_sprintf 0052                   __size_of_atoi 01A4  
                 __size_of_main 054A                   __size_of_dtoa 02E4                        isa$xinst 000000  
      __size_of_Interrupts_init 000C                      _RC4STAbits 000EE7                        int$flags 0056  
                      _vfprintf 396C                        main@temp 00A6                        main@test 00BE  
    __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042  
         ??_determine_color_new 0043                ___aomod@dividend 0005      __size_of_I2C_2_Master_Stop 000A  
                _vfpfcnvrt$2280 006A                      _INTCONbits 000FF2               ??i2_isDataInTxBuf 0001  
                      isdigit@c 0005                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
               ??_isDataInTxBuf 0005                        intlevel2 0000                       sprintf@ap 007A  
                      isspace@c 0005                     ??_sendTxBuf 0005          determine_color_new@Hue 0074  
                 read_colours@m 0010                 ___aomod@divisor 000D                     ??_vfpfcnvrt 004A  
               ___aomod@counter 0015                _color_click_init 3DBC        __end_of_TxBufferedString 3E20  
                      sprintf@f 007C                        sprintf@s 0072                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                   ___fladd@signs 0011                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0016                    ___fladd@aexp 0012                    ___fladd@bexp 0013  
              ??_putCharToRxBuf 0001                ??_putCharToTxBuf 0005                    ___aomod@sign 0016  
  determine_color_new@BlueRatio 0078  
