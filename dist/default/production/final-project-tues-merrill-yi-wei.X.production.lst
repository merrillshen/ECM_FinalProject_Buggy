

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 10 17:51:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 05/05/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _RC7PPS	set	3689
   111  0000                     _RE2PPS	set	3700
   112  0000                     _SSP2BUF	set	3797
   113  0000                     _SSP2CON2bits	set	3802
   114  0000                     _SSP2CON2	set	3802
   115  0000                     _SSP2STAT	set	3800
   116  0000                     _RD6PPS	set	3696
   117  0000                     _RD5PPS	set	3695
   118  0000                     _SSP2CLKPPS	set	3612
   119  0000                     _SSP2DATPPS	set	3613
   120  0000                     _ANSELDbits	set	3751
   121  0000                     _SSP2ADD	set	3798
   122  0000                     _SSP2CON1bits	set	3801
   123  0000                     _INTCONbits	set	4082
   124  0000                     _PORTFbits	set	3982
   125  0000                     _LATHbits	set	3968
   126  0000                     _TRISHbits	set	3976
   127  0000                     _LATDbits	set	3964
   128  0000                     _LATFbits	set	3966
   129  0000                     _TRISAbits	set	3969
   130  0000                     _LATAbits	set	3961
   131  0000                     _TRISFbits	set	3974
   132  0000                     _PWM7CONbits	set	4001
   133  0000                     _PWM6CONbits	set	4004
   134  0000                     _T2PR	set	4028
   135  0000                     _T2CLKCONbits	set	4031
   136  0000                     _T2HLTbits	set	4030
   137  0000                     _T2CONbits	set	4029
   138  0000                     _LATGbits	set	3967
   139  0000                     _LATCbits	set	3963
   140  0000                     _LATEbits	set	3965
   141  0000                     _TRISGbits	set	3975
   142  0000                     _TRISCbits	set	3971
   143  0000                     _TRISEbits	set	3973
   144  0000                     _TRISDbits	set	3972
   145  0000                     _LATG	set	3967
   146  0000                     _LATE	set	3965
   147  0000                     _PWM7DCH	set	4000
   148  0000                     _PWM6DCH	set	4003
   149                           
   150                           	psect	smallconst
   151  000E00                     __psmallconst:
   152                           	callstack 0
   153  000E00  00                 	db	0
   154  000E01                     STR_2:
   155  000E01  20                 	db	32
   156  000E02  42                 	db	66	;'B'
   157  000E03  20                 	db	32
   158  000E04  52                 	db	82	;'R'
   159  000E05  3A                 	db	58	;':'
   160  000E06  25                 	db	37
   161  000E07  64                 	db	100	;'d'
   162  000E08  20                 	db	32
   163  000E09  47                 	db	71	;'G'
   164  000E0A  3A                 	db	58	;':'
   165  000E0B  25                 	db	37
   166  000E0C  64                 	db	100	;'d'
   167  000E0D  20                 	db	32
   168  000E0E  42                 	db	66	;'B'
   169  000E0F  3A                 	db	58	;':'
   170  000E10  25                 	db	37
   171  000E11  64                 	db	100	;'d'
   172  000E12  20                 	db	32
   173  000E13  0D                 	db	13
   174  000E14  0A                 	db	10
   175  000E15  00                 	db	0
   176  000E16                     STR_1:
   177  000E16  20                 	db	32
   178  000E17  57                 	db	87	;'W'
   179  000E18  20                 	db	32
   180  000E19  52                 	db	82	;'R'
   181  000E1A  3A                 	db	58	;':'
   182  000E1B  25                 	db	37
   183  000E1C  64                 	db	100	;'d'
   184  000E1D  20                 	db	32
   185  000E1E  47                 	db	71	;'G'
   186  000E1F  3A                 	db	58	;':'
   187  000E20  25                 	db	37
   188  000E21  64                 	db	100	;'d'
   189  000E22  20                 	db	32
   190  000E23  42                 	db	66	;'B'
   191  000E24  3A                 	db	58	;':'
   192  000E25  25                 	db	37
   193  000E26  64                 	db	100	;'d'
   194  000E27  20                 	db	32
   195  000E28  0D                 	db	13
   196  000E29  0A                 	db	10
   197  000E2A  00                 	db	0
   198  000E2B                     STR_6:
   199  000E2B  20                 	db	32
   200  000E2C  43                 	db	67	;'C'
   201  000E2D  6F                 	db	111	;'o'
   202  000E2E  6C                 	db	108	;'l'
   203  000E2F  6F                 	db	111	;'o'
   204  000E30  72                 	db	114	;'r'
   205  000E31  3A                 	db	58	;':'
   206  000E32  25                 	db	37
   207  000E33  64                 	db	100	;'d'
   208  000E34  20                 	db	32
   209  000E35  0D                 	db	13
   210  000E36  0A                 	db	10
   211  000E37  00                 	db	0
   212  000E38                     STR_5:
   213  000E38  20                 	db	32
   214  000E39  42                 	db	66	;'B'
   215  000E3A  3A                 	db	58	;':'
   216  000E3B  25                 	db	37
   217  000E3C  64                 	db	100	;'d'
   218  000E3D  20                 	db	32
   219  000E3E  00                 	db	0
   220  000E3F                     STR_4:
   221  000E3F  20                 	db	32
   222  000E40  47                 	db	71	;'G'
   223  000E41  3A                 	db	58	;':'
   224  000E42  25                 	db	37
   225  000E43  64                 	db	100	;'d'
   226  000E44  20                 	db	32
   227  000E45  00                 	db	0
   228  000E46                     STR_3:
   229  000E46  20                 	db	32
   230  000E47  52                 	db	82	;'R'
   231  000E48  3A                 	db	58	;':'
   232  000E49  25                 	db	37
   233  000E4A  64                 	db	100	;'d'
   234  000E4B  20                 	db	32
   235  000E4C  00                 	db	0
   236  000E4D  00                 	db	0	; dummy byte at the end
   237  0000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241  0038C6                     __pcinit:
   242                           	callstack 0
   243  0038C6                     start_initialization:
   244                           	callstack 0
   245  0038C6                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Clear objects allocated to BANK0 (120 bytes)
   249  0038C6  EE00  F060         	lfsr	0,__pbssBANK0
   250  0038CA  0E78               	movlw	120
   251  0038CC                     clear_0:
   252  0038CC  6AEE               	clrf	postinc0,c
   253  0038CE  06E8               	decf	wreg,f,c
   254  0038D0  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to COMRAM (4 bytes)
   257  0038D2  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   258  0038D4  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   259  0038D6  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   260  0038D8  6A56               	clrf	__pbssCOMRAM& (0+255),c
   261  0038DA                     end_of_initialization:
   262                           	callstack 0
   263  0038DA                     __end_of__initialization:
   264                           	callstack 0
   265  0038DA  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   266  0038DC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   267  0038DE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   268  0038E0  6EF8               	movwf	tblptru,c
   269  0038E2  0E0E               	movlw	high __Lsmallconst
   270  0038E4  6EF7               	movwf	tblptrh,c
   271  0038E6  0100               	movlb	0
   272  0038E8  EFA8  F00C         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMRAM
   275  000056                     __pbssCOMRAM:
   276                           	callstack 0
   277  000056                     _TxBufReadCnt:
   278                           	callstack 0
   279  000056                     	ds	1
   280  000057                     _TxBufWriteCnt:
   281                           	callstack 0
   282  000057                     	ds	1
   283  000058                     _RxBufReadCnt:
   284                           	callstack 0
   285  000058                     	ds	1
   286  000059                     _RxBufWriteCnt:
   287                           	callstack 0
   288  000059                     	ds	1
   289                           
   290                           	psect	bssBANK0
   291  000060                     __pbssBANK0:
   292                           	callstack 0
   293  000060                     _EUSART4TXbuf:
   294                           	callstack 0
   295  000060                     	ds	60
   296  00009C                     _EUSART4RXbuf:
   297                           	callstack 0
   298  00009C                     	ds	20
   299  0000B0                     _nout:
   300                           	callstack 0
   301  0000B0                     	ds	2
   302  0000B2                     _width:
   303                           	callstack 0
   304  0000B2                     	ds	2
   305  0000B4                     _prec:
   306                           	callstack 0
   307  0000B4                     	ds	2
   308  0000B6                     _flags:
   309                           	callstack 0
   310  0000B6                     	ds	2
   311  0000B8                     _dbuf:
   312                           	callstack 0
   313  0000B8                     	ds	32
   314                           
   315                           	psect	cstackBANK1
   316  000100                     __pcstackBANK1:
   317                           	callstack 0
   318  000100                     main@string0:
   319                           	callstack 0
   320                           
   321                           ; 30 bytes @ 0x0
   322  000100                     	ds	30
   323  00011E                     main@string1:
   324                           	callstack 0
   325                           
   326                           ; 30 bytes @ 0x1E
   327  00011E                     	ds	30
   328  00013C                     main@string2:
   329                           	callstack 0
   330                           
   331                           ; 30 bytes @ 0x3C
   332  00013C                     	ds	30
   333  00015A                     main@string3:
   334                           	callstack 0
   335                           
   336                           ; 30 bytes @ 0x5A
   337  00015A                     	ds	30
   338  000178                     main@string:
   339                           	callstack 0
   340                           
   341                           ; 30 bytes @ 0x78
   342  000178                     	ds	30
   343  000196                     main@RedRatio:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x96
   347  000196                     	ds	2
   348  000198                     main@GreenRatio:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x98
   352  000198                     	ds	2
   353  00019A                     main@BlueRatio:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x9A
   357  00019A                     	ds	2
   358  00019C                     main@output:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x9C
   362  00019C                     	ds	2
   363  00019E                     main@cal:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x9E
   367  00019E                     	ds	2
   368  0001A0                     main@motorL:
   369                           	callstack 0
   370                           
   371                           ; 9 bytes @ 0xA0
   372  0001A0                     	ds	9
   373  0001A9                     main@motorR:
   374                           	callstack 0
   375                           
   376                           ; 9 bytes @ 0xA9
   377  0001A9                     	ds	9
   378  0001B2                     main@test:
   379                           	callstack 0
   380                           
   381                           ; 18 bytes @ 0xB2
   382  0001B2                     	ds	18
   383                           
   384                           	psect	cstackBANK0
   385  0000D8                     __pcstackBANK0:
   386                           	callstack 0
   387  0000D8                     ??_determine_color_new:
   388  0000D8                     ?_vfprintf:
   389                           	callstack 0
   390  0000D8                     vfprintf@fp:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x0
   394  0000D8                     	ds	2
   395  0000DA                     vfprintf@fmt:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x2
   399  0000DA                     	ds	2
   400  0000DC                     vfprintf@ap:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  0000DC                     	ds	2
   405  0000DE                     ?_sprintf:
   406                           	callstack 0
   407  0000DE                     sprintf@s:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x6
   411  0000DE                     	ds	2
   412  0000E0                     determine_color_new@RedRatio:
   413                           	callstack 0
   414  0000E0                     sprintf@fmt:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x8
   418  0000E0                     	ds	2
   419  0000E2                     determine_color_new@GreenRatio:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xA
   423  0000E2                     	ds	2
   424  0000E4                     determine_color_new@BlueRatio:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xC
   428  0000E4                     	ds	2
   429  0000E6                     determine_color_new@out:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xE
   433  0000E6                     	ds	2
   434  0000E8                     sprintf@ap:
   435                           	callstack 0
   436  0000E8                     determine_color_new@RelR:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x10
   440  0000E8                     	ds	2
   441  0000EA                     sprintf@f:
   442                           	callstack 0
   443                           
   444                           ; 6 bytes @ 0x12
   445  0000EA                     	ds	2
   446  0000EC                     determine_color_new@RelG:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x14
   450  0000EC                     	ds	4
   451  0000F0                     determine_color_new@RelB:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x18
   455  0000F0                     	ds	4
   456  0000F4                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x1C
   459  0000F4                     	ds	4
   460                           
   461                           	psect	cstackCOMRAM
   462  000001                     __pcstackCOMRAM:
   463                           	callstack 0
   464  000001                     ??_getCharFromTxBuf:
   465  000001                     putCharToRxBuf@byte:
   466                           	callstack 0
   467  000001                     
   468                           ; 1 bytes @ 0x0
   469  000001                     	ds	2
   470  000003                     ??_HighISR:
   471                           
   472                           ; 1 bytes @ 0x2
   473  000003                     	ds	2
   474  000005                     ??_I2C_2_Master_Idle:
   475  000005                     ?_strlen:
   476                           	callstack 0
   477  000005                     ?___xxtofl:
   478                           	callstack 0
   479  000005                     ?___aodiv:
   480                           	callstack 0
   481  000005                     ?___aomod:
   482                           	callstack 0
   483  000005                     putCharToTxBuf@byte:
   484                           	callstack 0
   485  000005                     initDCmotorsPWM@PWMperiod:
   486                           	callstack 0
   487  000005                     fputc@c:
   488                           	callstack 0
   489  000005                     strlen@s:
   490                           	callstack 0
   491  000005                     ___flge@ff1:
   492                           	callstack 0
   493  000005                     ___xxtofl@val:
   494                           	callstack 0
   495  000005                     ___aodiv@dividend:
   496                           	callstack 0
   497  000005                     ___aomod@dividend:
   498                           	callstack 0
   499                           
   500                           ; 8 bytes @ 0x4
   501  000005                     	ds	1
   502  000006                     ??_I2C_2_Master_Read:
   503  000006                     I2C_2_Master_Write@data_byte:
   504                           	callstack 0
   505  000006                     TxBufferedString@string:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x5
   509  000006                     	ds	1
   510  000007                     color_writetoaddr@value:
   511                           	callstack 0
   512  000007                     I2C_2_Master_Read@ack:
   513                           	callstack 0
   514  000007                     fputc@fp:
   515                           	callstack 0
   516  000007                     strlen@a:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x6
   520  000007                     	ds	1
   521  000008                     color_writetoaddr@address:
   522                           	callstack 0
   523  000008                     I2C_2_Master_Read@tmp:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x7
   527  000008                     	ds	1
   528  000009                     ??_fputc:
   529  000009                     ??_color_click_init:
   530  000009                     ??___xxtofl:
   531  000009                     ?_color_read_Red:
   532                           	callstack 0
   533  000009                     ?_color_read_Green:
   534                           	callstack 0
   535  000009                     ?_color_read_Blue:
   536                           	callstack 0
   537  000009                     ___flge@ff2:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x8
   541  000009                     	ds	2
   542  00000B                     ??_color_read_Red:
   543  00000B                     ??_color_read_Green:
   544  00000B                     ??_color_read_Blue:
   545                           
   546                           ; 1 bytes @ 0xA
   547  00000B                     	ds	2
   548  00000D                     ??___flge:
   549  00000D                     ___xxtofl@sign:
   550                           	callstack 0
   551  00000D                     ___aodiv@divisor:
   552                           	callstack 0
   553  00000D                     ___aomod@divisor:
   554                           	callstack 0
   555                           
   556                           ; 8 bytes @ 0xC
   557  00000D                     	ds	1
   558  00000E                     ___xxtofl@exp:
   559                           	callstack 0
   560  00000E                     color_read_Red@tmp:
   561                           	callstack 0
   562  00000E                     color_read_Green@tmp:
   563                           	callstack 0
   564  00000E                     color_read_Blue@tmp:
   565                           	callstack 0
   566  00000E                     fputs@s:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0xD
   570  00000E                     	ds	1
   571  00000F                     ___xxtofl@arg:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0xE
   575  00000F                     	ds	1
   576  000010                     read_colours@m:
   577                           	callstack 0
   578  000010                     calibrateW@m:
   579                           	callstack 0
   580  000010                     calibrateB@m:
   581                           	callstack 0
   582  000010                     fputs@fp:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xF
   586  000010                     	ds	1
   587  000011                     ?_isbtw:
   588                           	callstack 0
   589  000011                     isbtw@num:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x10
   593  000011                     	ds	1
   594  000012                     fputs@c:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x11
   598  000012                     	ds	1
   599  000013                     ?___fldiv:
   600                           	callstack 0
   601  000013                     fputs@i:
   602                           	callstack 0
   603  000013                     ___fldiv@b:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x12
   607  000013                     	ds	2
   608  000015                     ?_pad:
   609                           	callstack 0
   610  000015                     ___aodiv@counter:
   611                           	callstack 0
   612  000015                     ___aomod@counter:
   613                           	callstack 0
   614  000015                     pad@fp:
   615                           	callstack 0
   616  000015                     isbtw@low:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x14
   620  000015                     	ds	1
   621  000016                     ___aodiv@sign:
   622                           	callstack 0
   623  000016                     ___aomod@sign:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x15
   627  000016                     	ds	1
   628  000017                     ?_abs:
   629                           	callstack 0
   630  000017                     pad@buf:
   631                           	callstack 0
   632  000017                     abs@a:
   633                           	callstack 0
   634  000017                     ___fldiv@a:
   635                           	callstack 0
   636  000017                     ___aodiv@quotient:
   637                           	callstack 0
   638                           
   639                           ; 8 bytes @ 0x16
   640  000017                     	ds	2
   641  000019                     ??_abs:
   642  000019                     pad@p:
   643                           	callstack 0
   644  000019                     isbtw@high:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x18
   648  000019                     	ds	2
   649  00001B                     ??___fldiv:
   650  00001B                     ??_pad:
   651                           
   652                           ; 1 bytes @ 0x1A
   653  00001B                     	ds	1
   654  00001C                     pad@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x1B
   658  00001C                     	ds	1
   659  00001D                     
   660                           ; 1 bytes @ 0x1C
   661  00001D                     	ds	1
   662  00001E                     pad@w:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x1D
   666  00001E                     	ds	1
   667  00001F                     ___fldiv@rem:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x1E
   671  00001F                     	ds	1
   672  000020                     ?_dtoa:
   673                           	callstack 0
   674  000020                     dtoa@fp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x1F
   678  000020                     	ds	2
   679  000022                     dtoa@d:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x21
   683  000022                     	ds	1
   684  000023                     ___fldiv@sign:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x22
   688  000023                     	ds	1
   689  000024                     ___fldiv@new_exp:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x23
   693  000024                     	ds	2
   694  000026                     ___fldiv@grs:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x25
   698  000026                     	ds	4
   699  00002A                     ??_dtoa:
   700  00002A                     ___fldiv@bexp:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x29
   704  00002A                     	ds	1
   705  00002B                     ___fldiv@aexp:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x2A
   709  00002B                     	ds	1
   710  00002C                     ?___flmul:
   711                           	callstack 0
   712  00002C                     ___flmul@b:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x2B
   716  00002C                     	ds	4
   717  000030                     ___flmul@a:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x2F
   721  000030                     	ds	2
   722  000032                     _dtoa$2170:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x31
   726  000032                     	ds	2
   727  000034                     ??___flmul:
   728  000034                     dtoa@p:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x33
   732  000034                     	ds	2
   733  000036                     dtoa@w:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x35
   737  000036                     	ds	2
   738  000038                     ___flmul@sign:
   739                           	callstack 0
   740  000038                     dtoa@s:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x37
   744  000038                     	ds	1
   745  000039                     ___flmul@grs:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x38
   749  000039                     	ds	1
   750  00003A                     dtoa@n:
   751                           	callstack 0
   752                           
   753                           ; 8 bytes @ 0x39
   754  00003A                     	ds	3
   755  00003D                     ___flmul@aexp:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x3C
   759  00003D                     	ds	1
   760  00003E                     ___flmul@bexp:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x3D
   764  00003E                     	ds	1
   765  00003F                     ___flmul@prod:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x3E
   769  00003F                     	ds	3
   770  000042                     dtoa@i:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x41
   774  000042                     	ds	1
   775  000043                     ___flmul@temp:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x42
   779  000043                     	ds	1
   780  000044                     ?_vfpfcnvrt:
   781                           	callstack 0
   782  000044                     vfpfcnvrt@fp:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x43
   786  000044                     	ds	1
   787  000045                     ?___fltol:
   788                           	callstack 0
   789  000045                     ___fltol@f1:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x44
   793  000045                     	ds	1
   794  000046                     vfpfcnvrt@fmt:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x45
   798  000046                     	ds	2
   799  000048                     vfpfcnvrt@ap:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x47
   803  000048                     	ds	1
   804  000049                     ??___fltol:
   805                           
   806                           ; 1 bytes @ 0x48
   807  000049                     	ds	1
   808  00004A                     ??_vfpfcnvrt:
   809                           
   810                           ; 1 bytes @ 0x49
   811  00004A                     	ds	2
   812  00004C                     vfpfcnvrt@ll:
   813                           	callstack 0
   814                           
   815                           ; 8 bytes @ 0x4B
   816  00004C                     	ds	1
   817  00004D                     ___fltol@sign1:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x4C
   821  00004D                     	ds	1
   822  00004E                     ___fltol@exp1:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x4D
   826  00004E                     	ds	1
   827  00004F                     ?_determine_color_new:
   828                           	callstack 0
   829  00004F                     determine_color_new@m:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x4E
   833  00004F                     	ds	5
   834  000054                     vfprintf@cfmt:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x53
   838  000054                     	ds	2
   839  000056                     
   840                           ; 1 bytes @ 0x55
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 19 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  output          2  156[BANK1 ] unsigned int 
   851 ;;  string         30  120[BANK1 ] unsigned char [30]
   852 ;;  string3        30   90[BANK1 ] unsigned char [30]
   853 ;;  string2        30   60[BANK1 ] unsigned char [30]
   854 ;;  string1        30   30[BANK1 ] unsigned char [30]
   855 ;;  string0        30    0[BANK1 ] unsigned char [30]
   856 ;;  test           18  178[BANK1 ] struct RGB_val
   857 ;;  motorR          9  169[BANK1 ] struct DC_motor
   858 ;;  motorL          9  160[BANK1 ] struct DC_motor
   859 ;;  PWMcycle        2    0        unsigned int 
   860 ;;  cal             2  158[BANK1 ] unsigned int 
   861 ;;  BlueRatio       2  154[BANK1 ] unsigned int 
   862 ;;  GreenRatio      2  152[BANK1 ] unsigned int 
   863 ;;  RedRatio        2  150[BANK1 ] unsigned int 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Locals:         0       0     196       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Totals:         0       4     196       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;Total ram usage:      200 bytes
   878 ;; Hardware stack levels required when called: 10
   879 ;; This function calls:
   880 ;;		_Interrupts_init
   881 ;;		_TxBufferedString
   882 ;;		___fldiv
   883 ;;		___flmul
   884 ;;		___fltol
   885 ;;		___xxtofl
   886 ;;		_calibrateB
   887 ;;		_calibrateW
   888 ;;		_color_click_init
   889 ;;		_determine_color_new
   890 ;;		_initDCmotorsPWM
   891 ;;		_initUSART4
   892 ;;		_read_colours
   893 ;;		_sendTxBuf
   894 ;;		_sprintf
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text0
   901  001950                     __ptext0:
   902                           	callstack 0
   903  001950                     _main:
   904                           	callstack 21
   905  001950                     
   906                           ;main.c: 21:     initDCmotorsPWM(99);
   907  001950  0E00               	movlw	0
   908  001952  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   909  001954  0E63               	movlw	99
   910  001956  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   911  001958  EC4B  F01B         	call	_initDCmotorsPWM	;wreg free
   912  00195C                     
   913                           ;main.c: 22:     color_click_init();
   914  00195C  ECC8  F01B         	call	_color_click_init	;wreg free
   915  001960                     
   916                           ;main.c: 23:     initUSART4();
   917  001960  EC76  F01C         	call	_initUSART4	;wreg free
   918  001964                     
   919                           ;main.c: 24:     Interrupts_init();
   920  001964  ECC1  F01C         	call	_Interrupts_init	;wreg free
   921  001968                     
   922                           ;main.c: 27:     TRISFbits.TRISF2=1;
   923  001968  8486               	bsf	134,2,c	;volatile
   924  00196A                     
   925                           ;main.c: 28:     ANSELFbits.ANSELF2=0;
   926  00196A  010E               	movlb	14	; () banked
   927  00196C  95B4               	bcf	180,2,b	;volatile
   928  00196E                     
   929                           ; BSR set to: 14
   930                           ;main.c: 29:     TRISFbits.TRISF3=1;
   931  00196E  8686               	bsf	134,3,c	;volatile
   932  001970                     
   933                           ; BSR set to: 14
   934                           ;main.c: 30:     ANSELFbits.ANSELF3=0;
   935  001970  97B4               	bcf	180,3,b	;volatile
   936  001972                     
   937                           ; BSR set to: 14
   938                           ;main.c: 34:     motorL.power=0;
   939  001972  0E00               	movlw	0
   940  001974  0101               	movlb	1	; () banked
   941  001976  6FA0               	movwf	main@motorL& (0+255),b
   942  001978                     
   943                           ; BSR set to: 1
   944                           ;main.c: 35:     motorL.direction=1;
   945  001978  0E01               	movlw	1
   946  00197A  6FA1               	movwf	(main@motorL+1)& (0+255),b
   947  00197C                     
   948                           ; BSR set to: 1
   949                           ;main.c: 36:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   950  00197C  0EA3               	movlw	163
   951  00197E  6FA2               	movwf	(main@motorL+2)& (0+255),b
   952  001980  0E0F               	movlw	15
   953  001982  6FA3               	movwf	(main@motorL+3)& (0+255),b
   954  001984                     
   955                           ; BSR set to: 1
   956                           ;main.c: 37:     motorL.dir_LAT=(unsigned char *)(&LATE);
   957  001984  0E7D               	movlw	125
   958  001986  6FA4               	movwf	(main@motorL+4)& (0+255),b
   959  001988  0E0F               	movlw	15
   960  00198A  6FA5               	movwf	(main@motorL+5)& (0+255),b
   961  00198C                     
   962                           ; BSR set to: 1
   963                           ;main.c: 38:     motorL.dir_pin=4;
   964  00198C  0E04               	movlw	4
   965  00198E  6FA6               	movwf	(main@motorL+6)& (0+255),b
   966  001990                     
   967                           ; BSR set to: 1
   968                           ;main.c: 39:     motorL.PWMperiod=PWMcycle;
   969  001990  0E00               	movlw	0
   970  001992  6FA8               	movwf	(main@motorL+8)& (0+255),b
   971  001994  0E63               	movlw	99
   972  001996  6FA7               	movwf	(main@motorL+7)& (0+255),b
   973  001998                     
   974                           ; BSR set to: 1
   975                           ;main.c: 41:     motorR.power=0;
   976  001998  0E00               	movlw	0
   977  00199A  6FA9               	movwf	main@motorR& (0+255),b
   978  00199C                     
   979                           ; BSR set to: 1
   980                           ;main.c: 42:     motorR.direction=1;
   981  00199C  0E01               	movlw	1
   982  00199E  6FAA               	movwf	(main@motorR+1)& (0+255),b
   983                           
   984                           ;main.c: 43:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   985  0019A0  0EA0               	movlw	160
   986  0019A2  6FAB               	movwf	(main@motorR+2)& (0+255),b
   987  0019A4  0E0F               	movlw	15
   988  0019A6  6FAC               	movwf	(main@motorR+3)& (0+255),b
   989                           
   990                           ;main.c: 44:     motorR.dir_LAT=(unsigned char *)(&LATG);
   991  0019A8  0E7F               	movlw	127
   992  0019AA  6FAD               	movwf	(main@motorR+4)& (0+255),b
   993  0019AC  0E0F               	movlw	15
   994  0019AE  6FAE               	movwf	(main@motorR+5)& (0+255),b
   995  0019B0                     
   996                           ; BSR set to: 1
   997                           ;main.c: 45:     motorR.dir_pin=6;
   998  0019B0  0E06               	movlw	6
   999  0019B2  6FAF               	movwf	(main@motorR+6)& (0+255),b
  1000  0019B4                     
  1001                           ; BSR set to: 1
  1002                           ;main.c: 46:     motorR.PWMperiod=PWMcycle;
  1003  0019B4  0E00               	movlw	0
  1004  0019B6  6FB1               	movwf	(main@motorR+8)& (0+255),b
  1005  0019B8  0E63               	movlw	99
  1006  0019BA  6FB0               	movwf	(main@motorR+7)& (0+255),b
  1007  0019BC                     
  1008                           ; BSR set to: 1
  1009                           ;main.c: 49:     struct RGB_val test;;main.c: 50:     test.R = 0;
  1010  0019BC  0E00               	movlw	0
  1011  0019BE  6FBF               	movwf	(main@test+13)& (0+255),b
  1012  0019C0  0E00               	movlw	0
  1013  0019C2  6FBE               	movwf	(main@test+12)& (0+255),b
  1014  0019C4                     
  1015                           ; BSR set to: 1
  1016                           ;main.c: 51:     test.G = 0;
  1017  0019C4  0E00               	movlw	0
  1018  0019C6  6FC1               	movwf	(main@test+15)& (0+255),b
  1019  0019C8  0E00               	movlw	0
  1020  0019CA  6FC0               	movwf	(main@test+14)& (0+255),b
  1021  0019CC                     
  1022                           ; BSR set to: 1
  1023                           ;main.c: 52:     test.B = 0;
  1024  0019CC  0E00               	movlw	0
  1025  0019CE  6FC3               	movwf	(main@test+17)& (0+255),b
  1026  0019D0  0E00               	movlw	0
  1027  0019D2  6FC2               	movwf	(main@test+16)& (0+255),b
  1028  0019D4                     
  1029                           ; BSR set to: 1
  1030                           ;main.c: 55:     LATGbits.LATG1=0;
  1031  0019D4  927F               	bcf	127,1,c	;volatile
  1032  0019D6                     
  1033                           ; BSR set to: 1
  1034                           ;main.c: 56:     TRISGbits.TRISG1=0;
  1035  0019D6  9287               	bcf	135,1,c	;volatile
  1036  0019D8                     
  1037                           ; BSR set to: 1
  1038                           ;main.c: 57:     LATAbits.LATA4=0;
  1039  0019D8  9879               	bcf	121,4,c	;volatile
  1040  0019DA                     
  1041                           ; BSR set to: 1
  1042                           ;main.c: 58:     TRISAbits.TRISA4=0;
  1043  0019DA  9881               	bcf	129,4,c	;volatile
  1044  0019DC                     
  1045                           ; BSR set to: 1
  1046                           ;main.c: 59:     LATFbits.LATF7=0;
  1047  0019DC  9E7E               	bcf	126,7,c	;volatile
  1048  0019DE                     
  1049                           ; BSR set to: 1
  1050                           ;main.c: 60:     TRISFbits.TRISF7=0;
  1051  0019DE  9E86               	bcf	134,7,c	;volatile
  1052  0019E0                     
  1053                           ; BSR set to: 1
  1054                           ;main.c: 63:     TRISDbits.TRISD7 = 0;
  1055  0019E0  9E84               	bcf	132,7,c	;volatile
  1056  0019E2                     
  1057                           ; BSR set to: 1
  1058                           ;main.c: 64:     LATDbits.LATD7 = 0;
  1059  0019E2  9E7C               	bcf	124,7,c	;volatile
  1060  0019E4                     
  1061                           ; BSR set to: 1
  1062                           ;main.c: 67:     TRISHbits.TRISH3 = 0;
  1063  0019E4  9688               	bcf	136,3,c	;volatile
  1064  0019E6                     
  1065                           ; BSR set to: 1
  1066                           ;main.c: 68:     LATHbits.LATH3 = 0;
  1067  0019E6  9680               	bcf	128,3,c	;volatile
  1068  0019E8                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 70:     char string[30];;main.c: 71:     char string0[30];;main.c: 72:     char
      +                           string1[30];;main.c: 73:     char string2[30];;main.c: 74:     char string3[30];;main.c
      +                          : 75:     unsigned int RedRatio, GreenRatio, BlueRatio;;main.c: 77:     LATGbits.LATG1=1
      +                          ;
  1071  0019E8  827F               	bsf	127,1,c	;volatile
  1072  0019EA                     
  1073                           ; BSR set to: 1
  1074                           ;main.c: 78:     LATAbits.LATA4=1;
  1075  0019EA  8879               	bsf	121,4,c	;volatile
  1076  0019EC                     
  1077                           ; BSR set to: 1
  1078                           ;main.c: 79:     LATFbits.LATF7=1;
  1079  0019EC  8E7E               	bsf	126,7,c	;volatile
  1080  0019EE                     
  1081                           ; BSR set to: 1
  1082                           ;main.c: 81:     unsigned int cal = 0;
  1083  0019EE  0E00               	movlw	0
  1084  0019F0  6F9F               	movwf	(main@cal+1)& (0+255),b
  1085  0019F2  0E00               	movlw	0
  1086  0019F4  6F9E               	movwf	main@cal& (0+255),b
  1087                           
  1088                           ;main.c: 84:     while(cal==0){
  1089  0019F6  EFAE  F00D         	goto	l3956
  1090  0019FA                     l281:
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;main.c: 85:         LATDbits.LATD7 = 1;
  1094  0019FA  8E7C               	bsf	124,7,c	;volatile
  1095  0019FC                     l282:
  1096  0019FC  B48E               	btfsc	142,2,c	;volatile
  1097  0019FE  EF03  F00D         	goto	u4061
  1098  001A02  EF05  F00D         	goto	u4060
  1099  001A06                     u4061:
  1100  001A06  EFFE  F00C         	goto	l282
  1101  001A0A                     u4060:
  1102  001A0A                     
  1103                           ;main.c: 87:         if (!PORTFbits.RF2){
  1104  001A0A  B48E               	btfsc	142,2,c	;volatile
  1105  001A0C  EF0A  F00D         	goto	u4071
  1106  001A10  EF0C  F00D         	goto	u4070
  1107  001A14                     u4071:
  1108  001A14  EF20  F00D         	goto	l3926
  1109  001A18                     u4070:
  1110  001A18                     
  1111                           ;main.c: 88:             LATDbits.LATD7 = 0;
  1112  001A18  9E7C               	bcf	124,7,c	;volatile
  1113  001A1A                     
  1114                           ;main.c: 89:             calibrateW(&test);
  1115  001A1A  0EB2               	movlw	low main@test
  1116  001A1C  6E10               	movwf	calibrateW@m^0,c
  1117  001A1E  0E01               	movlw	high main@test
  1118  001A20  6E11               	movwf	(calibrateW@m+1)^0,c
  1119  001A22  ECE1  F01A         	call	_calibrateW	;wreg free
  1120  001A26                     
  1121                           ;main.c: 90:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1122  001A26  0E19               	movlw	25
  1123  001A28  0100               	movlb	0	; () banked
  1124  001A2A  6FF5               	movwf	(??_main+1)& (0+255),b
  1125  001A2C  0E5A               	movlw	90
  1126  001A2E  6FF4               	movwf	??_main& (0+255),b
  1127  001A30  0EB1               	movlw	177
  1128  001A32                     u4137:
  1129  001A32  2EE8               	decfsz	wreg,f,c
  1130  001A34  D7FE               	bra	u4137
  1131  001A36  2FF4               	decfsz	??_main& (0+255),f,b
  1132  001A38  D7FC               	bra	u4137
  1133  001A3A  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1134  001A3C  D7FA               	bra	u4137
  1135  001A3E  D000               	nop2	
  1136  001A40                     l3926:
  1137                           
  1138                           ;main.c: 93:         LATDbits.LATD7 = 1;
  1139  001A40  8E7C               	bsf	124,7,c	;volatile
  1140  001A42                     l286:
  1141  001A42  B48E               	btfsc	142,2,c	;volatile
  1142  001A44  EF26  F00D         	goto	u4081
  1143  001A48  EF28  F00D         	goto	u4080
  1144  001A4C                     u4081:
  1145  001A4C  EF21  F00D         	goto	l286
  1146  001A50                     u4080:
  1147  001A50                     
  1148                           ;main.c: 95:         if (!PORTFbits.RF2){
  1149  001A50  B48E               	btfsc	142,2,c	;volatile
  1150  001A52  EF2D  F00D         	goto	u4091
  1151  001A56  EF2F  F00D         	goto	u4090
  1152  001A5A                     u4091:
  1153  001A5A  EF43  F00D         	goto	l3934
  1154  001A5E                     u4090:
  1155  001A5E                     
  1156                           ;main.c: 96:             LATDbits.LATD7 = 0;
  1157  001A5E  9E7C               	bcf	124,7,c	;volatile
  1158  001A60                     
  1159                           ;main.c: 97:             calibrateB(&test);
  1160  001A60  0EB2               	movlw	low main@test
  1161  001A62  6E10               	movwf	calibrateB@m^0,c
  1162  001A64  0E01               	movlw	high main@test
  1163  001A66  6E11               	movwf	(calibrateB@m+1)^0,c
  1164  001A68  EC06  F01B         	call	_calibrateB	;wreg free
  1165  001A6C                     
  1166                           ;main.c: 98:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1167  001A6C  0E19               	movlw	25
  1168  001A6E  0100               	movlb	0	; () banked
  1169  001A70  6FF5               	movwf	(??_main+1)& (0+255),b
  1170  001A72  0E5A               	movlw	90
  1171  001A74  6FF4               	movwf	??_main& (0+255),b
  1172  001A76  0EB1               	movlw	177
  1173  001A78                     u4147:
  1174  001A78  2EE8               	decfsz	wreg,f,c
  1175  001A7A  D7FE               	bra	u4147
  1176  001A7C  2FF4               	decfsz	??_main& (0+255),f,b
  1177  001A7E  D7FC               	bra	u4147
  1178  001A80  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1179  001A82  D7FA               	bra	u4147
  1180  001A84  D000               	nop2	
  1181  001A86                     l3934:
  1182                           
  1183                           ;main.c: 101:         sprintf(string0," W R:%d G:%d B:%d \r\n",test.whiteR,test.whiteG,t
      +                          est.whiteB);
  1184  001A86  0E00               	movlw	low main@string0
  1185  001A88  0100               	movlb	0	; () banked
  1186  001A8A  6FDE               	movwf	sprintf@s& (0+255),b
  1187  001A8C  0E01               	movlw	high main@string0
  1188  001A8E  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  1189  001A90  0E16               	movlw	low STR_1
  1190  001A92  6FE0               	movwf	sprintf@fmt& (0+255),b
  1191  001A94  0E0E               	movlw	high STR_1
  1192  001A96  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  1193  001A98  C1B8  F0E2         	movff	main@test+6,?_sprintf+4
  1194  001A9C  C1B9  F0E3         	movff	main@test+7,?_sprintf+5
  1195  001AA0  C1BA  F0E4         	movff	main@test+8,?_sprintf+6
  1196  001AA4  C1BB  F0E5         	movff	main@test+9,?_sprintf+7
  1197  001AA8  C1BC  F0E6         	movff	main@test+10,?_sprintf+8
  1198  001AAC  C1BD  F0E7         	movff	main@test+11,?_sprintf+9
  1199  001AB0  EC1B  F01A         	call	_sprintf	;wreg free
  1200  001AB4                     
  1201                           ;main.c: 102:         TxBufferedString(string0);
  1202  001AB4  0E00               	movlw	low main@string0
  1203  001AB6  6E06               	movwf	TxBufferedString@string^0,c
  1204  001AB8  0E01               	movlw	high main@string0
  1205  001ABA  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1206  001ABC  ECE2  F01B         	call	_TxBufferedString	;wreg free
  1207  001AC0                     
  1208                           ;main.c: 103:         sendTxBuf();
  1209  001AC0  EC96  F01C         	call	_sendTxBuf	;wreg free
  1210  001AC4                     
  1211                           ;main.c: 104:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1212  001AC4  0E05               	movlw	5
  1213  001AC6  0100               	movlb	0	; () banked
  1214  001AC8  6FF5               	movwf	(??_main+1)& (0+255),b
  1215  001ACA  0E0F               	movlw	15
  1216  001ACC  6FF4               	movwf	??_main& (0+255),b
  1217  001ACE  0EF1               	movlw	241
  1218  001AD0                     u4157:
  1219  001AD0  2EE8               	decfsz	wreg,f,c
  1220  001AD2  D7FE               	bra	u4157
  1221  001AD4  2FF4               	decfsz	??_main& (0+255),f,b
  1222  001AD6  D7FC               	bra	u4157
  1223  001AD8  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1224  001ADA  D7FA               	bra	u4157
  1225  001ADC                     
  1226                           ;main.c: 106:         sprintf(string," B R:%d G:%d B:%d \r\n",test.blackR,test.blackG,te
      +                          st.blackB);
  1227  001ADC  0E78               	movlw	low main@string
  1228  001ADE  0100               	movlb	0	; () banked
  1229  001AE0  6FDE               	movwf	sprintf@s& (0+255),b
  1230  001AE2  0E01               	movlw	high main@string
  1231  001AE4  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  1232  001AE6  0E01               	movlw	low STR_2
  1233  001AE8  6FE0               	movwf	sprintf@fmt& (0+255),b
  1234  001AEA  0E0E               	movlw	high STR_2
  1235  001AEC  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  1236  001AEE  C1B2  F0E2         	movff	main@test,?_sprintf+4
  1237  001AF2  C1B3  F0E3         	movff	main@test+1,?_sprintf+5
  1238  001AF6  C1B4  F0E4         	movff	main@test+2,?_sprintf+6
  1239  001AFA  C1B5  F0E5         	movff	main@test+3,?_sprintf+7
  1240  001AFE  C1B6  F0E6         	movff	main@test+4,?_sprintf+8
  1241  001B02  C1B7  F0E7         	movff	main@test+5,?_sprintf+9
  1242  001B06  EC1B  F01A         	call	_sprintf	;wreg free
  1243  001B0A                     
  1244                           ;main.c: 107:         TxBufferedString(string);
  1245  001B0A  0E78               	movlw	low main@string
  1246  001B0C  6E06               	movwf	TxBufferedString@string^0,c
  1247  001B0E  0E01               	movlw	high main@string
  1248  001B10  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1249  001B12  ECE2  F01B         	call	_TxBufferedString	;wreg free
  1250  001B16                     
  1251                           ;main.c: 108:         sendTxBuf();
  1252  001B16  EC96  F01C         	call	_sendTxBuf	;wreg free
  1253  001B1A                     
  1254                           ;main.c: 109:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1255  001B1A  0E05               	movlw	5
  1256  001B1C  0100               	movlb	0	; () banked
  1257  001B1E  6FF5               	movwf	(??_main+1)& (0+255),b
  1258  001B20  0E0F               	movlw	15
  1259  001B22  6FF4               	movwf	??_main& (0+255),b
  1260  001B24  0EF1               	movlw	241
  1261  001B26                     u4167:
  1262  001B26  2EE8               	decfsz	wreg,f,c
  1263  001B28  D7FE               	bra	u4167
  1264  001B2A  2FF4               	decfsz	??_main& (0+255),f,b
  1265  001B2C  D7FC               	bra	u4167
  1266  001B2E  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1267  001B30  D7FA               	bra	u4167
  1268  001B32                     
  1269                           ;main.c: 111:         LATHbits.LATH3 = 1;
  1270  001B32  8680               	bsf	128,3,c	;volatile
  1271  001B34                     l290:
  1272  001B34  B68E               	btfsc	142,3,c	;volatile
  1273  001B36  EF9F  F00D         	goto	u4101
  1274  001B3A  EFA1  F00D         	goto	u4100
  1275  001B3E                     u4101:
  1276  001B3E  EF9A  F00D         	goto	l290
  1277  001B42                     u4100:
  1278  001B42                     
  1279                           ;main.c: 113:         if (!PORTFbits.RF3){
  1280  001B42  B68E               	btfsc	142,3,c	;volatile
  1281  001B44  EFA6  F00D         	goto	u4111
  1282  001B48  EFA8  F00D         	goto	u4110
  1283  001B4C                     u4111:
  1284  001B4C  EFAE  F00D         	goto	l3956
  1285  001B50                     u4110:
  1286  001B50                     
  1287                           ;main.c: 114:             LATHbits.LATH3 = 0;
  1288  001B50  9680               	bcf	128,3,c	;volatile
  1289  001B52                     
  1290                           ;main.c: 115:             cal = 1;
  1291  001B52  0E00               	movlw	0
  1292  001B54  0101               	movlb	1	; () banked
  1293  001B56  6F9F               	movwf	(main@cal+1)& (0+255),b
  1294  001B58  0E01               	movlw	1
  1295  001B5A  6F9E               	movwf	main@cal& (0+255),b
  1296  001B5C                     l3956:
  1297                           
  1298                           ;main.c: 84:     while(cal==0){
  1299  001B5C  0101               	movlb	1	; () banked
  1300  001B5E  519E               	movf	main@cal& (0+255),w,b
  1301  001B60  119F               	iorwf	(main@cal+1)& (0+255),w,b
  1302  001B62  B4D8               	btfsc	status,2,c
  1303  001B64  EFB6  F00D         	goto	u4121
  1304  001B68  EFB8  F00D         	goto	u4120
  1305  001B6C                     u4121:
  1306  001B6C  EFFD  F00C         	goto	l281
  1307  001B70                     u4120:
  1308  001B70                     l3958:
  1309                           
  1310                           ;main.c: 120:         unsigned int output;;main.c: 121:         read_colours(&test);
  1311  001B70  0EB2               	movlw	low main@test
  1312  001B72  6E10               	movwf	read_colours@m^0,c
  1313  001B74  0E01               	movlw	high main@test
  1314  001B76  6E11               	movwf	(read_colours@m+1)^0,c
  1315  001B78  ECBC  F01A         	call	_read_colours	;wreg free
  1316  001B7C                     
  1317                           ;main.c: 122:         output = determine_color_new(&test);
  1318  001B7C  0EB2               	movlw	low main@test
  1319  001B7E  6E4F               	movwf	determine_color_new@m^0,c
  1320  001B80  0E01               	movlw	high main@test
  1321  001B82  6E50               	movwf	(determine_color_new@m+1)^0,c
  1322  001B84  EC27  F007         	call	_determine_color_new	;wreg free
  1323  001B88  C04F  F19C         	movff	?_determine_color_new,main@output
  1324  001B8C  C050  F19D         	movff	?_determine_color_new+1,main@output+1
  1325  001B90                     
  1326                           ;main.c: 123:         RedRatio = ((float)(test.R - test.blackR) / (float)(test.whiteR - 
      +                          test.blackR)) * 10000;
  1327  001B90  0E00               	movlw	0
  1328  001B92  6E30               	movwf	___flmul@a^0,c
  1329  001B94  0E40               	movlw	64
  1330  001B96  6E31               	movwf	(___flmul@a+1)^0,c
  1331  001B98  0E1C               	movlw	28
  1332  001B9A  6E32               	movwf	(___flmul@a+2)^0,c
  1333  001B9C  0E46               	movlw	70
  1334  001B9E  6E33               	movwf	(___flmul@a+3)^0,c
  1335  001BA0  0101               	movlb	1	; () banked
  1336  001BA2  51B2               	movf	main@test& (0+255),w,b
  1337  001BA4  5DB8               	subwf	(main@test+6)& (0+255),w,b
  1338  001BA6  0100               	movlb	0	; () banked
  1339  001BA8  6FF4               	movwf	??_main& (0+255),b
  1340  001BAA  0101               	movlb	1	; () banked
  1341  001BAC  51B3               	movf	(main@test+1)& (0+255),w,b
  1342  001BAE  59B9               	subwfb	(main@test+7)& (0+255),w,b
  1343  001BB0  0100               	movlb	0	; () banked
  1344  001BB2  6FF5               	movwf	(??_main+1)& (0+255),b
  1345  001BB4  C0F4  F005         	movff	??_main,___xxtofl@val
  1346  001BB8  C0F5  F006         	movff	??_main+1,___xxtofl@val+1
  1347  001BBC  6A07               	clrf	(___xxtofl@val+2)^0,c
  1348  001BBE  6A08               	clrf	(___xxtofl@val+3)^0,c
  1349  001BC0  0E00               	movlw	0
  1350  001BC2  EC90  F015         	call	___xxtofl
  1351  001BC6  C005  F017         	movff	?___xxtofl,___fldiv@a
  1352  001BCA  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1353  001BCE  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1354  001BD2  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1355  001BD6  0101               	movlb	1	; () banked
  1356  001BD8  51B2               	movf	main@test& (0+255),w,b
  1357  001BDA  5DBE               	subwf	(main@test+12)& (0+255),w,b
  1358  001BDC  0100               	movlb	0	; () banked
  1359  001BDE  6FF6               	movwf	(??_main+2)& (0+255),b
  1360  001BE0  0101               	movlb	1	; () banked
  1361  001BE2  51B3               	movf	(main@test+1)& (0+255),w,b
  1362  001BE4  59BF               	subwfb	(main@test+13)& (0+255),w,b
  1363  001BE6  0100               	movlb	0	; () banked
  1364  001BE8  6FF7               	movwf	(??_main+3)& (0+255),b
  1365  001BEA  C0F6  F005         	movff	??_main+2,___xxtofl@val
  1366  001BEE  C0F7  F006         	movff	??_main+3,___xxtofl@val+1
  1367  001BF2  6A07               	clrf	(___xxtofl@val+2)^0,c
  1368  001BF4  6A08               	clrf	(___xxtofl@val+3)^0,c
  1369  001BF6  0E00               	movlw	0
  1370  001BF8  EC90  F015         	call	___xxtofl
  1371  001BFC  C005  F013         	movff	?___xxtofl,___fldiv@b
  1372  001C00  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1373  001C04  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1374  001C08  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1375  001C0C  EC78  F011         	call	___fldiv	;wreg free
  1376  001C10  C013  F02C         	movff	?___fldiv,___flmul@b
  1377  001C14  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1378  001C18  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1379  001C1C  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1380  001C20  EC63  F00F         	call	___flmul	;wreg free
  1381  001C24  C02C  F045         	movff	?___flmul,___fltol@f1
  1382  001C28  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  1383  001C2C  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  1384  001C30  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  1385  001C34  ECE0  F017         	call	___fltol	;wreg free
  1386  001C38  C045  F196         	movff	?___fltol,main@RedRatio
  1387  001C3C  C046  F197         	movff	?___fltol+1,main@RedRatio+1
  1388  001C40                     
  1389                           ;main.c: 124:         GreenRatio = ((float)(test.G - test.blackG) / (float)(test.whiteG 
      +                          - test.blackG)) * 10000;
  1390  001C40  0E00               	movlw	0
  1391  001C42  6E30               	movwf	___flmul@a^0,c
  1392  001C44  0E40               	movlw	64
  1393  001C46  6E31               	movwf	(___flmul@a+1)^0,c
  1394  001C48  0E1C               	movlw	28
  1395  001C4A  6E32               	movwf	(___flmul@a+2)^0,c
  1396  001C4C  0E46               	movlw	70
  1397  001C4E  6E33               	movwf	(___flmul@a+3)^0,c
  1398  001C50  0101               	movlb	1	; () banked
  1399  001C52  51B4               	movf	(main@test+2)& (0+255),w,b
  1400  001C54  5DBA               	subwf	(main@test+8)& (0+255),w,b
  1401  001C56  0100               	movlb	0	; () banked
  1402  001C58  6FF4               	movwf	??_main& (0+255),b
  1403  001C5A  0101               	movlb	1	; () banked
  1404  001C5C  51B5               	movf	(main@test+3)& (0+255),w,b
  1405  001C5E  59BB               	subwfb	(main@test+9)& (0+255),w,b
  1406  001C60  0100               	movlb	0	; () banked
  1407  001C62  6FF5               	movwf	(??_main+1)& (0+255),b
  1408  001C64  C0F4  F005         	movff	??_main,___xxtofl@val
  1409  001C68  C0F5  F006         	movff	??_main+1,___xxtofl@val+1
  1410  001C6C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1411  001C6E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1412  001C70  0E00               	movlw	0
  1413  001C72  EC90  F015         	call	___xxtofl
  1414  001C76  C005  F017         	movff	?___xxtofl,___fldiv@a
  1415  001C7A  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1416  001C7E  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1417  001C82  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1418  001C86  0101               	movlb	1	; () banked
  1419  001C88  51B4               	movf	(main@test+2)& (0+255),w,b
  1420  001C8A  5DC0               	subwf	(main@test+14)& (0+255),w,b
  1421  001C8C  0100               	movlb	0	; () banked
  1422  001C8E  6FF6               	movwf	(??_main+2)& (0+255),b
  1423  001C90  0101               	movlb	1	; () banked
  1424  001C92  51B5               	movf	(main@test+3)& (0+255),w,b
  1425  001C94  59C1               	subwfb	(main@test+15)& (0+255),w,b
  1426  001C96  0100               	movlb	0	; () banked
  1427  001C98  6FF7               	movwf	(??_main+3)& (0+255),b
  1428  001C9A  C0F6  F005         	movff	??_main+2,___xxtofl@val
  1429  001C9E  C0F7  F006         	movff	??_main+3,___xxtofl@val+1
  1430  001CA2  6A07               	clrf	(___xxtofl@val+2)^0,c
  1431  001CA4  6A08               	clrf	(___xxtofl@val+3)^0,c
  1432  001CA6  0E00               	movlw	0
  1433  001CA8  EC90  F015         	call	___xxtofl
  1434  001CAC  C005  F013         	movff	?___xxtofl,___fldiv@b
  1435  001CB0  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1436  001CB4  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1437  001CB8  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1438  001CBC  EC78  F011         	call	___fldiv	;wreg free
  1439  001CC0  C013  F02C         	movff	?___fldiv,___flmul@b
  1440  001CC4  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1441  001CC8  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1442  001CCC  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1443  001CD0  EC63  F00F         	call	___flmul	;wreg free
  1444  001CD4  C02C  F045         	movff	?___flmul,___fltol@f1
  1445  001CD8  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  1446  001CDC  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  1447  001CE0  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  1448  001CE4  ECE0  F017         	call	___fltol	;wreg free
  1449  001CE8  C045  F198         	movff	?___fltol,main@GreenRatio
  1450  001CEC  C046  F199         	movff	?___fltol+1,main@GreenRatio+1
  1451  001CF0                     
  1452                           ;main.c: 125:         BlueRatio = ((float)(test.B - test.blackB) / (float)(test.whiteB -
      +                           test.blackB)) * 10000;
  1453  001CF0  0E00               	movlw	0
  1454  001CF2  6E30               	movwf	___flmul@a^0,c
  1455  001CF4  0E40               	movlw	64
  1456  001CF6  6E31               	movwf	(___flmul@a+1)^0,c
  1457  001CF8  0E1C               	movlw	28
  1458  001CFA  6E32               	movwf	(___flmul@a+2)^0,c
  1459  001CFC  0E46               	movlw	70
  1460  001CFE  6E33               	movwf	(___flmul@a+3)^0,c
  1461  001D00  0101               	movlb	1	; () banked
  1462  001D02  51B6               	movf	(main@test+4)& (0+255),w,b
  1463  001D04  5DBC               	subwf	(main@test+10)& (0+255),w,b
  1464  001D06  0100               	movlb	0	; () banked
  1465  001D08  6FF4               	movwf	??_main& (0+255),b
  1466  001D0A  0101               	movlb	1	; () banked
  1467  001D0C  51B7               	movf	(main@test+5)& (0+255),w,b
  1468  001D0E  59BD               	subwfb	(main@test+11)& (0+255),w,b
  1469  001D10  0100               	movlb	0	; () banked
  1470  001D12  6FF5               	movwf	(??_main+1)& (0+255),b
  1471  001D14  C0F4  F005         	movff	??_main,___xxtofl@val
  1472  001D18  C0F5  F006         	movff	??_main+1,___xxtofl@val+1
  1473  001D1C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1474  001D1E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1475  001D20  0E00               	movlw	0
  1476  001D22  EC90  F015         	call	___xxtofl
  1477  001D26  C005  F017         	movff	?___xxtofl,___fldiv@a
  1478  001D2A  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1479  001D2E  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1480  001D32  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1481  001D36  0101               	movlb	1	; () banked
  1482  001D38  51B6               	movf	(main@test+4)& (0+255),w,b
  1483  001D3A  5DC2               	subwf	(main@test+16)& (0+255),w,b
  1484  001D3C  0100               	movlb	0	; () banked
  1485  001D3E  6FF6               	movwf	(??_main+2)& (0+255),b
  1486  001D40  0101               	movlb	1	; () banked
  1487  001D42  51B7               	movf	(main@test+5)& (0+255),w,b
  1488  001D44  59C3               	subwfb	(main@test+17)& (0+255),w,b
  1489  001D46  0100               	movlb	0	; () banked
  1490  001D48  6FF7               	movwf	(??_main+3)& (0+255),b
  1491  001D4A  C0F6  F005         	movff	??_main+2,___xxtofl@val
  1492  001D4E  C0F7  F006         	movff	??_main+3,___xxtofl@val+1
  1493  001D52  6A07               	clrf	(___xxtofl@val+2)^0,c
  1494  001D54  6A08               	clrf	(___xxtofl@val+3)^0,c
  1495  001D56  0E00               	movlw	0
  1496  001D58  EC90  F015         	call	___xxtofl
  1497  001D5C  C005  F013         	movff	?___xxtofl,___fldiv@b
  1498  001D60  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1499  001D64  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1500  001D68  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1501  001D6C  EC78  F011         	call	___fldiv	;wreg free
  1502  001D70  C013  F02C         	movff	?___fldiv,___flmul@b
  1503  001D74  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1504  001D78  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1505  001D7C  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1506  001D80  EC63  F00F         	call	___flmul	;wreg free
  1507  001D84  C02C  F045         	movff	?___flmul,___fltol@f1
  1508  001D88  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  1509  001D8C  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  1510  001D90  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  1511  001D94  ECE0  F017         	call	___fltol	;wreg free
  1512  001D98  C045  F19A         	movff	?___fltol,main@BlueRatio
  1513  001D9C  C046  F19B         	movff	?___fltol+1,main@BlueRatio+1
  1514  001DA0                     
  1515                           ;main.c: 127:         sprintf(string1," R:%d ",RedRatio);
  1516  001DA0  0E1E               	movlw	low main@string1
  1517  001DA2  0100               	movlb	0	; () banked
  1518  001DA4  6FDE               	movwf	sprintf@s& (0+255),b
  1519  001DA6  0E01               	movlw	high main@string1
  1520  001DA8  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  1521  001DAA  0E46               	movlw	low STR_3
  1522  001DAC  6FE0               	movwf	sprintf@fmt& (0+255),b
  1523  001DAE  0E0E               	movlw	high STR_3
  1524  001DB0  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  1525  001DB2  C196  F0E2         	movff	main@RedRatio,?_sprintf+4
  1526  001DB6  C197  F0E3         	movff	main@RedRatio+1,?_sprintf+5
  1527  001DBA  EC1B  F01A         	call	_sprintf	;wreg free
  1528  001DBE                     
  1529                           ;main.c: 128:         TxBufferedString(string1);
  1530  001DBE  0E1E               	movlw	low main@string1
  1531  001DC0  6E06               	movwf	TxBufferedString@string^0,c
  1532  001DC2  0E01               	movlw	high main@string1
  1533  001DC4  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1534  001DC6  ECE2  F01B         	call	_TxBufferedString	;wreg free
  1535  001DCA                     
  1536                           ;main.c: 129:         sendTxBuf();
  1537  001DCA  EC96  F01C         	call	_sendTxBuf	;wreg free
  1538  001DCE                     
  1539                           ;main.c: 130:         _delay((unsigned long)((150)*(64000000/4000.0)));
  1540  001DCE  0E0D               	movlw	13
  1541  001DD0  0100               	movlb	0	; () banked
  1542  001DD2  6FF5               	movwf	(??_main+1)& (0+255),b
  1543  001DD4  0E2D               	movlw	45
  1544  001DD6  6FF4               	movwf	??_main& (0+255),b
  1545  001DD8  0ED7               	movlw	215
  1546  001DDA                     u4177:
  1547  001DDA  2EE8               	decfsz	wreg,f,c
  1548  001DDC  D7FE               	bra	u4177
  1549  001DDE  2FF4               	decfsz	??_main& (0+255),f,b
  1550  001DE0  D7FC               	bra	u4177
  1551  001DE2  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1552  001DE4  D7FA               	bra	u4177
  1553  001DE6  D000               	nop2	
  1554  001DE8                     
  1555                           ;main.c: 132:         sprintf(string2," G:%d ",GreenRatio);
  1556  001DE8  0E3C               	movlw	low main@string2
  1557  001DEA  0100               	movlb	0	; () banked
  1558  001DEC  6FDE               	movwf	sprintf@s& (0+255),b
  1559  001DEE  0E01               	movlw	high main@string2
  1560  001DF0  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  1561  001DF2  0E3F               	movlw	low STR_4
  1562  001DF4  6FE0               	movwf	sprintf@fmt& (0+255),b
  1563  001DF6  0E0E               	movlw	high STR_4
  1564  001DF8  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  1565  001DFA  C198  F0E2         	movff	main@GreenRatio,?_sprintf+4
  1566  001DFE  C199  F0E3         	movff	main@GreenRatio+1,?_sprintf+5
  1567  001E02  EC1B  F01A         	call	_sprintf	;wreg free
  1568  001E06                     
  1569                           ;main.c: 133:         TxBufferedString(string2);
  1570  001E06  0E3C               	movlw	low main@string2
  1571  001E08  6E06               	movwf	TxBufferedString@string^0,c
  1572  001E0A  0E01               	movlw	high main@string2
  1573  001E0C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1574  001E0E  ECE2  F01B         	call	_TxBufferedString	;wreg free
  1575  001E12                     
  1576                           ;main.c: 134:         sendTxBuf();
  1577  001E12  EC96  F01C         	call	_sendTxBuf	;wreg free
  1578  001E16                     
  1579                           ;main.c: 135:         _delay((unsigned long)((150)*(64000000/4000.0)));
  1580  001E16  0E0D               	movlw	13
  1581  001E18  0100               	movlb	0	; () banked
  1582  001E1A  6FF5               	movwf	(??_main+1)& (0+255),b
  1583  001E1C  0E2D               	movlw	45
  1584  001E1E  6FF4               	movwf	??_main& (0+255),b
  1585  001E20  0ED7               	movlw	215
  1586  001E22                     u4187:
  1587  001E22  2EE8               	decfsz	wreg,f,c
  1588  001E24  D7FE               	bra	u4187
  1589  001E26  2FF4               	decfsz	??_main& (0+255),f,b
  1590  001E28  D7FC               	bra	u4187
  1591  001E2A  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1592  001E2C  D7FA               	bra	u4187
  1593  001E2E  D000               	nop2	
  1594  001E30                     
  1595                           ;main.c: 137:         sprintf(string3," B:%d ",BlueRatio);
  1596  001E30  0E5A               	movlw	low main@string3
  1597  001E32  0100               	movlb	0	; () banked
  1598  001E34  6FDE               	movwf	sprintf@s& (0+255),b
  1599  001E36  0E01               	movlw	high main@string3
  1600  001E38  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  1601  001E3A  0E38               	movlw	low STR_5
  1602  001E3C  6FE0               	movwf	sprintf@fmt& (0+255),b
  1603  001E3E  0E0E               	movlw	high STR_5
  1604  001E40  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  1605  001E42  C19A  F0E2         	movff	main@BlueRatio,?_sprintf+4
  1606  001E46  C19B  F0E3         	movff	main@BlueRatio+1,?_sprintf+5
  1607  001E4A  EC1B  F01A         	call	_sprintf	;wreg free
  1608  001E4E                     
  1609                           ;main.c: 138:         TxBufferedString(string3);
  1610  001E4E  0E5A               	movlw	low main@string3
  1611  001E50  6E06               	movwf	TxBufferedString@string^0,c
  1612  001E52  0E01               	movlw	high main@string3
  1613  001E54  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1614  001E56  ECE2  F01B         	call	_TxBufferedString	;wreg free
  1615  001E5A                     
  1616                           ;main.c: 139:         sendTxBuf();
  1617  001E5A  EC96  F01C         	call	_sendTxBuf	;wreg free
  1618  001E5E                     
  1619                           ;main.c: 140:         _delay((unsigned long)((150)*(64000000/4000.0)));
  1620  001E5E  0E0D               	movlw	13
  1621  001E60  0100               	movlb	0	; () banked
  1622  001E62  6FF5               	movwf	(??_main+1)& (0+255),b
  1623  001E64  0E2D               	movlw	45
  1624  001E66  6FF4               	movwf	??_main& (0+255),b
  1625  001E68  0ED7               	movlw	215
  1626  001E6A                     u4197:
  1627  001E6A  2EE8               	decfsz	wreg,f,c
  1628  001E6C  D7FE               	bra	u4197
  1629  001E6E  2FF4               	decfsz	??_main& (0+255),f,b
  1630  001E70  D7FC               	bra	u4197
  1631  001E72  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1632  001E74  D7FA               	bra	u4197
  1633  001E76  D000               	nop2	
  1634  001E78                     
  1635                           ;main.c: 142:         sprintf(string," Color:%d \r\n",output);
  1636  001E78  0E78               	movlw	low main@string
  1637  001E7A  0100               	movlb	0	; () banked
  1638  001E7C  6FDE               	movwf	sprintf@s& (0+255),b
  1639  001E7E  0E01               	movlw	high main@string
  1640  001E80  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  1641  001E82  0E2B               	movlw	low STR_6
  1642  001E84  6FE0               	movwf	sprintf@fmt& (0+255),b
  1643  001E86  0E0E               	movlw	high STR_6
  1644  001E88  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  1645  001E8A  C19C  F0E2         	movff	main@output,?_sprintf+4
  1646  001E8E  C19D  F0E3         	movff	main@output+1,?_sprintf+5
  1647  001E92  EC1B  F01A         	call	_sprintf	;wreg free
  1648  001E96                     
  1649                           ;main.c: 143:         TxBufferedString(string);
  1650  001E96  0E78               	movlw	low main@string
  1651  001E98  6E06               	movwf	TxBufferedString@string^0,c
  1652  001E9A  0E01               	movlw	high main@string
  1653  001E9C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1654  001E9E  ECE2  F01B         	call	_TxBufferedString	;wreg free
  1655  001EA2                     
  1656                           ;main.c: 144:         sendTxBuf();
  1657  001EA2  EC96  F01C         	call	_sendTxBuf	;wreg free
  1658  001EA6                     
  1659                           ;main.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1660  001EA6  0E05               	movlw	5
  1661  001EA8  0100               	movlb	0	; () banked
  1662  001EAA  6FF5               	movwf	(??_main+1)& (0+255),b
  1663  001EAC  0E0F               	movlw	15
  1664  001EAE  6FF4               	movwf	??_main& (0+255),b
  1665  001EB0  0EF1               	movlw	241
  1666  001EB2                     u4207:
  1667  001EB2  2EE8               	decfsz	wreg,f,c
  1668  001EB4  D7FE               	bra	u4207
  1669  001EB6  2FF4               	decfsz	??_main& (0+255),f,b
  1670  001EB8  D7FC               	bra	u4207
  1671  001EBA  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1672  001EBC  D7FA               	bra	u4207
  1673  001EBE  EFB8  F00D         	goto	l3958
  1674  001EC2  EF3B  F000         	goto	start
  1675  001EC6                     __end_of_main:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _sprintf *****************
  1679 ;; Defined at:
  1680 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1683 ;;		 -> main@string3(30), main@string2(30), main@string1(30), main@string(30), 
  1684 ;;		 -> main@string0(30), 
  1685 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1686 ;;		 -> STR_6(13), STR_5(7), STR_4(7), STR_3(7), 
  1687 ;;		 -> STR_2(21), STR_1(21), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  f               6   18[BANK0 ] struct _IO_FILE
  1690 ;;  ap              2   16[BANK0 ] PTR void [1]
  1691 ;;		 -> ?_sprintf(2), 
  1692 ;;  ret             2    0        int 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2    6[BANK0 ] int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1702 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;Total ram usage:       18 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 9
  1709 ;; This function calls:
  1710 ;;		_vfprintf
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text1
  1717  003436                     __ptext1:
  1718                           	callstack 0
  1719  003436                     _sprintf:
  1720                           	callstack 21
  1721  003436  0EE2               	movlw	low (?_sprintf+4)
  1722  003438  0100               	movlb	0	; () banked
  1723  00343A  6FE8               	movwf	sprintf@ap& (0+255),b
  1724  00343C  0E00               	movlw	high (?_sprintf+4)
  1725  00343E  6FE9               	movwf	(sprintf@ap+1)& (0+255),b
  1726  003440  C0DE  F0EA         	movff	sprintf@s,sprintf@f
  1727  003444  C0DF  F0EB         	movff	sprintf@s+1,sprintf@f+1
  1728  003448                     
  1729                           ; BSR set to: 0
  1730  003448  0E00               	movlw	0
  1731  00344A  6FED               	movwf	(sprintf@f+3)& (0+255),b
  1732  00344C  0E00               	movlw	0
  1733  00344E  6FEC               	movwf	(sprintf@f+2)& (0+255),b
  1734  003450                     
  1735                           ; BSR set to: 0
  1736  003450  0E00               	movlw	0
  1737  003452  6FEF               	movwf	(sprintf@f+5)& (0+255),b
  1738  003454  0E00               	movlw	0
  1739  003456  6FEE               	movwf	(sprintf@f+4)& (0+255),b
  1740  003458                     
  1741                           ; BSR set to: 0
  1742  003458  0EEA               	movlw	low sprintf@f
  1743  00345A  6FD8               	movwf	vfprintf@fp& (0+255),b
  1744  00345C  0E00               	movlw	high sprintf@f
  1745  00345E  6FD9               	movwf	(vfprintf@fp+1)& (0+255),b
  1746  003460  C0E0  F0DA         	movff	sprintf@fmt,vfprintf@fmt
  1747  003464  C0E1  F0DB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1748  003468  0EE8               	movlw	low sprintf@ap
  1749  00346A  6FDC               	movwf	vfprintf@ap& (0+255),b
  1750  00346C  0E00               	movlw	high sprintf@ap
  1751  00346E  6FDD               	movwf	(vfprintf@ap+1)& (0+255),b
  1752  003470  ECEA  F019         	call	_vfprintf	;wreg free
  1753  003474  0100               	movlb	0	; () banked
  1754  003476  51EC               	movf	(sprintf@f+2)& (0+255),w,b
  1755  003478  25DE               	addwf	sprintf@s& (0+255),w,b
  1756  00347A  6ED9               	movwf	fsr2l,c
  1757  00347C  51ED               	movf	(sprintf@f+3)& (0+255),w,b
  1758  00347E  21DF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1759  003480  6EDA               	movwf	fsr2h,c
  1760  003482  0E00               	movlw	0
  1761  003484  6EDF               	movwf	indf2,c
  1762  003486                     
  1763                           ; BSR set to: 0
  1764  003486  0012               	return		;funcret
  1765  003488                     __end_of_sprintf:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _vfprintf *****************
  1769 ;; Defined at:
  1770 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1773 ;;		 -> sprintf@f(6), 
  1774 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1775 ;;		 -> STR_6(13), STR_5(7), STR_4(7), STR_3(7), 
  1776 ;;		 -> STR_2(21), STR_1(21), 
  1777 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1778 ;;		 -> sprintf@ap(2), 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1781 ;;		 -> STR_6(13), STR_5(7), STR_4(7), STR_3(7), 
  1782 ;;		 -> STR_2(21), STR_1(21), 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2    0[BANK0 ] int 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1792 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;Total ram usage:        8 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 8
  1799 ;; This function calls:
  1800 ;;		_vfpfcnvrt
  1801 ;; This function is called by:
  1802 ;;		_sprintf
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text2
  1807  0033D4                     __ptext2:
  1808                           	callstack 0
  1809  0033D4                     _vfprintf:
  1810                           	callstack 21
  1811  0033D4                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1813  0033D4  C0DA  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1814  0033D8  C0DB  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1815  0033DC                     
  1816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1817  0033DC  0E00               	movlw	0
  1818  0033DE  0100               	movlb	0	; () banked
  1819  0033E0  6FB1               	movwf	(_nout+1)& (0+255),b
  1820  0033E2  0E00               	movlw	0
  1821  0033E4  6FB0               	movwf	_nout& (0+255),b
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1824  0033E6  EF08  F01A         	goto	l3744
  1825  0033EA                     l3742:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1829  0033EA  C0D8  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1830  0033EE  C0D9  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1831  0033F2  0E54               	movlw	low vfprintf@cfmt
  1832  0033F4  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1833  0033F6  0E00               	movlw	high vfprintf@cfmt
  1834  0033F8  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1835  0033FA  C0DC  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1836  0033FE  C0DD  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1837  003402  ECB6  F014         	call	_vfpfcnvrt	;wreg free
  1838  003406  5044               	movf	?_vfpfcnvrt^0,w,c
  1839  003408  0100               	movlb	0	; () banked
  1840  00340A  27B0               	addwf	_nout& (0+255),f,b
  1841  00340C  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1842  00340E  23B1               	addwfc	(_nout+1)& (0+255),f,b
  1843  003410                     l3744:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1847  003410  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1848  003414  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1849  003418                     	if	0	;tblptru may be non-zero
  1850  003418                     	endif
  1851  003418                     	if	0	;tblptru may be non-zero
  1852  003418                     	endif
  1853  003418  0008               	tblrd		*
  1854  00341A  50F5               	movf	tablat,w,c
  1855  00341C  0900               	iorlw	0
  1856  00341E  A4D8               	btfss	status,2,c
  1857  003420  EF14  F01A         	goto	u3781
  1858  003424  EF16  F01A         	goto	u3780
  1859  003428                     u3781:
  1860  003428  EFF5  F019         	goto	l3742
  1861  00342C                     u3780:
  1862  00342C                     
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1865  00342C  C0B0  F0D8         	movff	_nout,?_vfprintf
  1866  003430  C0B1  F0D9         	movff	_nout+1,?_vfprintf+1
  1867  003434                     
  1868                           ; BSR set to: 0
  1869  003434  0012               	return		;funcret
  1870  003436                     __end_of_vfprintf:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _vfpfcnvrt *****************
  1874 ;; Defined at:
  1875 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1878 ;;		 -> sprintf@f(6), 
  1879 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1880 ;;		 -> vfprintf@cfmt(2), 
  1881 ;;  ap              2   71[COMRAM] PTR PTR void 
  1882 ;;		 -> sprintf@ap(2), 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  ll              8   75[COMRAM] long long 
  1885 ;;  llu             8    0        unsigned long long 
  1886 ;;  f               4    0        unsigned long long 
  1887 ;;  vp              3    0        PTR void 
  1888 ;;  ct              3    0        unsigned char [3]
  1889 ;;  cp              3    0        PTR unsigned char 
  1890 ;;  i               2    0        int 
  1891 ;;  done            2    0        int 
  1892 ;;  c               1    0        unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  2   67[COMRAM] int 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1902 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1906 ;;Total ram usage:       16 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 7
  1909 ;; This function calls:
  1910 ;;		_dtoa
  1911 ;;		_fputc
  1912 ;; This function is called by:
  1913 ;;		_vfprintf
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text3
  1918  00296C                     __ptext3:
  1919                           	callstack 0
  1920  00296C                     _vfpfcnvrt:
  1921                           	callstack 21
  1922  00296C                     
  1923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1924  00296C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1925  002970  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1926  002974  CFDE FFF6          	movff	postinc2,tblptrl
  1927  002978  CFDD FFF7          	movff	postdec2,tblptrh
  1928  00297C                     	if	0	;tblptru may be non-zero
  1929  00297C                     	endif
  1930  00297C                     	if	0	;tblptru may be non-zero
  1931  00297C                     	endif
  1932  00297C  0008               	tblrd		*
  1933  00297E  50F5               	movf	tablat,w,c
  1934  002980  0A25               	xorlw	37
  1935  002982  A4D8               	btfss	status,2,c
  1936  002984  EFC6  F014         	goto	u3741
  1937  002988  EFC8  F014         	goto	u3740
  1938  00298C                     u3741:
  1939  00298C  EF74  F015         	goto	l3730
  1940  002990                     u3740:
  1941  002990                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1943  002990  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1944  002994  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1945  002998  2ADE               	incf	postinc2,f,c
  1946  00299A  0E00               	movlw	0
  1947  00299C  22DD               	addwfc	postdec2,f,c
  1948  00299E                     
  1949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1950  00299E  0E00               	movlw	0
  1951  0029A0  0100               	movlb	0	; () banked
  1952  0029A2  6FB3               	movwf	(_width+1)& (0+255),b
  1953  0029A4  0E00               	movlw	0
  1954  0029A6  6FB2               	movwf	_width& (0+255),b
  1955  0029A8  C0B2  F0B6         	movff	_width,_flags
  1956  0029AC  C0B3  F0B7         	movff	_width+1,_flags+1
  1957  0029B0                     
  1958                           ; BSR set to: 0
  1959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1960  0029B0  69B4               	setf	_prec& (0+255),b
  1961  0029B2  69B5               	setf	(_prec+1)& (0+255),b
  1962  0029B4                     
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1965  0029B4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1966  0029B8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1967  0029BC  CFDE FFF6          	movff	postinc2,tblptrl
  1968  0029C0  CFDD FFF7          	movff	postdec2,tblptrh
  1969  0029C4                     	if	0	;tblptru may be non-zero
  1970  0029C4                     	endif
  1971  0029C4                     	if	0	;tblptru may be non-zero
  1972  0029C4                     	endif
  1973  0029C4  0008               	tblrd		*
  1974  0029C6  50F5               	movf	tablat,w,c
  1975  0029C8  0A64               	xorlw	100
  1976  0029CA  B4D8               	btfsc	status,2,c
  1977  0029CC  EFEA  F014         	goto	u3751
  1978  0029D0  EFEC  F014         	goto	u3750
  1979  0029D4                     u3751:
  1980  0029D4  EFFE  F014         	goto	l3708
  1981  0029D8                     u3750:
  1982  0029D8                     
  1983                           ; BSR set to: 0
  1984  0029D8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1985  0029DC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1986  0029E0  CFDE FFF6          	movff	postinc2,tblptrl
  1987  0029E4  CFDD FFF7          	movff	postdec2,tblptrh
  1988  0029E8                     	if	0	;tblptru may be non-zero
  1989  0029E8                     	endif
  1990  0029E8                     	if	0	;tblptru may be non-zero
  1991  0029E8                     	endif
  1992  0029E8  0008               	tblrd		*
  1993  0029EA  50F5               	movf	tablat,w,c
  1994  0029EC  0A69               	xorlw	105
  1995  0029EE  A4D8               	btfss	status,2,c
  1996  0029F0  EFFC  F014         	goto	u3761
  1997  0029F4  EFFE  F014         	goto	u3760
  1998  0029F8                     u3761:
  1999  0029F8  EF3E  F015         	goto	l3714
  2000  0029FC                     u3760:
  2001  0029FC                     l3708:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2005  0029FC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2006  002A00  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2007  002A04  2ADE               	incf	postinc2,f,c
  2008  002A06  0E00               	movlw	0
  2009  002A08  22DD               	addwfc	postdec2,f,c
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2012  002A0A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2013  002A0E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2014  002A12  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2015  002A16  0E02               	movlw	2
  2016  002A18  26DE               	addwf	postinc2,f,c
  2017  002A1A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2018  002A1E  0E00               	movlw	0
  2019  002A20  22DD               	addwfc	postdec2,f,c
  2020  002A22  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2021  002A26  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2022  002A2A  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  2023  002A2E  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  2024  002A32  0E00               	movlw	0
  2025  002A34  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2026  002A36  0EFF               	movlw	-1
  2027  002A38  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  2028  002A3A  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  2029  002A3C  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  2030  002A3E  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  2031  002A40  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  2032  002A42  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  2033  002A44                     
  2034                           ; BSR set to: 0
  2035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2036  002A44  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2037  002A48  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2038  002A4C  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2039  002A50  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2040  002A54  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2041  002A58  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2042  002A5C  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2043  002A60  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2044  002A64  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2045  002A68  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2046  002A6C  EC45  F013         	call	_dtoa	;wreg free
  2047  002A70  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2048  002A74  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2049  002A78  EF8F  F015         	goto	l1167
  2050  002A7C                     l3714:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2054  002A7C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2055  002A80  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2056  002A84  CFDE FFF6          	movff	postinc2,tblptrl
  2057  002A88  CFDD FFF7          	movff	postdec2,tblptrh
  2058  002A8C                     	if	0	;tblptru may be non-zero
  2059  002A8C                     	endif
  2060  002A8C                     	if	0	;tblptru may be non-zero
  2061  002A8C                     	endif
  2062  002A8C  0008               	tblrd		*
  2063  002A8E  50F5               	movf	tablat,w,c
  2064  002A90  0A25               	xorlw	37
  2065  002A92  A4D8               	btfss	status,2,c
  2066  002A94  EF4E  F015         	goto	u3771
  2067  002A98  EF50  F015         	goto	u3770
  2068  002A9C                     u3771:
  2069  002A9C  EF67  F015         	goto	l3724
  2070  002AA0                     u3770:
  2071  002AA0                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2074  002AA0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2075  002AA4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2076  002AA8  2ADE               	incf	postinc2,f,c
  2077  002AAA  0E00               	movlw	0
  2078  002AAC  22DD               	addwfc	postdec2,f,c
  2079  002AAE                     
  2080                           ; BSR set to: 0
  2081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2082  002AAE  0E00               	movlw	0
  2083  002AB0  6E06               	movwf	(fputc@c+1)^0,c
  2084  002AB2  0E25               	movlw	37
  2085  002AB4  6E05               	movwf	fputc@c^0,c
  2086  002AB6  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2087  002ABA  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2088  002ABE  ECE5  F018         	call	_fputc	;wreg free
  2089  002AC2                     l3720:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2092  002AC2  0E00               	movlw	0
  2093  002AC4  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2094  002AC6  0E01               	movlw	1
  2095  002AC8  6E44               	movwf	?_vfpfcnvrt^0,c
  2096  002ACA  EF8F  F015         	goto	l1167
  2097  002ACE                     l3724:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2101  002ACE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2102  002AD2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2103  002AD6  2ADE               	incf	postinc2,f,c
  2104  002AD8  0E00               	movlw	0
  2105  002ADA  22DD               	addwfc	postdec2,f,c
  2106  002ADC                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2109  002ADC  0E00               	movlw	0
  2110  002ADE  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2111  002AE0  0E00               	movlw	0
  2112  002AE2  6E44               	movwf	?_vfpfcnvrt^0,c
  2113  002AE4  EF8F  F015         	goto	l1167
  2114  002AE8                     l3730:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2117  002AE8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  002AEC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  002AF0  CFDE FFF6          	movff	postinc2,tblptrl
  2120  002AF4  CFDD FFF7          	movff	postdec2,tblptrh
  2121  002AF8                     	if	0	;tblptru may be non-zero
  2122  002AF8                     	endif
  2123  002AF8                     	if	0	;tblptru may be non-zero
  2124  002AF8                     	endif
  2125  002AF8  0008               	tblrd		*
  2126  002AFA  50F5               	movf	tablat,w,c
  2127  002AFC  6E05               	movwf	fputc@c^0,c
  2128  002AFE  6A06               	clrf	(fputc@c+1)^0,c
  2129  002B00  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2130  002B04  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2131  002B08  ECE5  F018         	call	_fputc	;wreg free
  2132  002B0C                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2134  002B0C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2135  002B10  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2136  002B14  2ADE               	incf	postinc2,f,c
  2137  002B16  0E00               	movlw	0
  2138  002B18  22DD               	addwfc	postdec2,f,c
  2139  002B1A  EF61  F015         	goto	l3720
  2140  002B1E                     l1167:
  2141  002B1E  0012               	return		;funcret
  2142  002B20                     __end_of_vfpfcnvrt:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _dtoa *****************
  2146 ;; Defined at:
  2147 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2150 ;;		 -> sprintf@f(6), 
  2151 ;;  d               8   33[COMRAM] long long 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  n               8   57[COMRAM] long long 
  2154 ;;  i               2   65[COMRAM] int 
  2155 ;;  s               2   55[COMRAM] int 
  2156 ;;  w               2   53[COMRAM] int 
  2157 ;;  p               2   51[COMRAM] int 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2   31[COMRAM] int 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2167 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;Total ram usage:       36 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 6
  2174 ;; This function calls:
  2175 ;;		___aodiv
  2176 ;;		___aomod
  2177 ;;		_abs
  2178 ;;		_pad
  2179 ;; This function is called by:
  2180 ;;		_vfpfcnvrt
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text4
  2185  00268A                     __ptext4:
  2186                           	callstack 0
  2187  00268A                     _dtoa:
  2188                           	callstack 21
  2189  00268A                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2191  00268A  C022  F03A         	movff	dtoa@d,dtoa@n
  2192  00268E  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2193  002692  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2194  002696  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2195  00269A  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2196  00269E  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2197  0026A2  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2198  0026A6  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2199  0026AA                     
  2200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2201  0026AA  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2202  0026AC  EF5A  F013         	goto	u3591
  2203  0026B0  EF5D  F013         	goto	u3590
  2204  0026B4                     u3591:
  2205  0026B4  0E01               	movlw	1
  2206  0026B6  EF5E  F013         	goto	u3600
  2207  0026BA                     u3590:
  2208  0026BA  0E00               	movlw	0
  2209  0026BC                     u3600:
  2210  0026BC  6E38               	movwf	dtoa@s^0,c
  2211  0026BE  6A39               	clrf	(dtoa@s+1)^0,c
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2214  0026C0  5038               	movf	dtoa@s^0,w,c
  2215  0026C2  1039               	iorwf	(dtoa@s+1)^0,w,c
  2216  0026C4  B4D8               	btfsc	status,2,c
  2217  0026C6  EF67  F013         	goto	u3611
  2218  0026CA  EF69  F013         	goto	u3610
  2219  0026CE                     u3611:
  2220  0026CE  EF79  F013         	goto	l3640
  2221  0026D2                     u3610:
  2222  0026D2                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2224  0026D2  1E41               	comf	(dtoa@n+7)^0,f,c
  2225  0026D4  1E40               	comf	(dtoa@n+6)^0,f,c
  2226  0026D6  1E3F               	comf	(dtoa@n+5)^0,f,c
  2227  0026D8  1E3E               	comf	(dtoa@n+4)^0,f,c
  2228  0026DA  1E3D               	comf	(dtoa@n+3)^0,f,c
  2229  0026DC  1E3C               	comf	(dtoa@n+2)^0,f,c
  2230  0026DE  1E3B               	comf	(dtoa@n+1)^0,f,c
  2231  0026E0  6C3A               	negf	dtoa@n^0,c
  2232  0026E2  0E00               	movlw	0
  2233  0026E4  223B               	addwfc	(dtoa@n+1)^0,f,c
  2234  0026E6  223C               	addwfc	(dtoa@n+2)^0,f,c
  2235  0026E8  223D               	addwfc	(dtoa@n+3)^0,f,c
  2236  0026EA  223E               	addwfc	(dtoa@n+4)^0,f,c
  2237  0026EC  223F               	addwfc	(dtoa@n+5)^0,f,c
  2238  0026EE  2240               	addwfc	(dtoa@n+6)^0,f,c
  2239  0026F0  2241               	addwfc	(dtoa@n+7)^0,f,c
  2240  0026F2                     l3640:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2243  0026F2  0100               	movlb	0	; () banked
  2244  0026F4  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  2245  0026F6  EF7F  F013         	goto	u3621
  2246  0026FA  EF81  F013         	goto	u3620
  2247  0026FE                     u3621:
  2248  0026FE  EF82  F013         	goto	l3644
  2249  002702                     u3620:
  2250  002702                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2253  002702  93B6               	bcf	_flags& (0+255),1,b
  2254  002704                     l3644:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2258  002704  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  2259  002706  EF8F  F013         	goto	u3630
  2260  00270A  51B5               	movf	(_prec+1)& (0+255),w,b
  2261  00270C  E106               	bnz	u3631
  2262  00270E  05B4               	decf	_prec& (0+255),w,b
  2263  002710  B0D8               	btfsc	status,0,c
  2264  002712  EF8D  F013         	goto	u3631
  2265  002716  EF8F  F013         	goto	u3630
  2266  00271A                     u3631:
  2267  00271A  EF95  F013         	goto	l1140
  2268  00271E                     u3630:
  2269  00271E                     
  2270                           ; BSR set to: 0
  2271  00271E  0E00               	movlw	0
  2272  002720  6E35               	movwf	(dtoa@p+1)^0,c
  2273  002722  0E01               	movlw	1
  2274  002724  6E34               	movwf	dtoa@p^0,c
  2275  002726  EF99  F013         	goto	l1142
  2276  00272A                     l1140:
  2277                           
  2278                           ; BSR set to: 0
  2279  00272A  C0B4  F034         	movff	_prec,dtoa@p
  2280  00272E  C0B5  F035         	movff	_prec+1,dtoa@p+1
  2281  002732                     l1142:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2285  002732  C0B2  F036         	movff	_width,dtoa@w
  2286  002736  C0B3  F037         	movff	_width+1,dtoa@w+1
  2287  00273A                     
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2290  00273A  5038               	movf	dtoa@s^0,w,c
  2291  00273C  1039               	iorwf	(dtoa@s+1)^0,w,c
  2292  00273E  A4D8               	btfss	status,2,c
  2293  002740  EFA4  F013         	goto	u3641
  2294  002744  EFA6  F013         	goto	u3640
  2295  002748                     u3641:
  2296  002748  EFAD  F013         	goto	l3652
  2297  00274C                     u3640:
  2298  00274C                     
  2299                           ; BSR set to: 0
  2300  00274C  A5B6               	btfss	_flags& (0+255),2,b
  2301  00274E  EFAB  F013         	goto	u3651
  2302  002752  EFAD  F013         	goto	u3650
  2303  002756                     u3651:
  2304  002756  EFB0  F013         	goto	l3654
  2305  00275A                     u3650:
  2306  00275A                     l3652:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2310  00275A  0636               	decf	dtoa@w^0,f,c
  2311  00275C  A0D8               	btfss	status,0,c
  2312  00275E  0637               	decf	(dtoa@w+1)^0,f,c
  2313  002760                     l3654:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2317  002760  0E00               	movlw	0
  2318  002762  6E43               	movwf	(dtoa@i+1)^0,c
  2319  002764  0E1F               	movlw	31
  2320  002766  6E42               	movwf	dtoa@i^0,c
  2321  002768                     
  2322                           ; BSR set to: 0
  2323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2324  002768  0E00               	movlw	0
  2325  00276A  6FD7               	movwf	(_dbuf+31)& (0+255),b
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2328  00276C  EF34  F014         	goto	l3668
  2329  002770                     l3658:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2332  002770  0642               	decf	dtoa@i^0,f,c
  2333  002772  A0D8               	btfss	status,0,c
  2334  002774  0643               	decf	(dtoa@i+1)^0,f,c
  2335  002776                     
  2336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2337  002776  0EB8               	movlw	low _dbuf
  2338  002778  2442               	addwf	dtoa@i^0,w,c
  2339  00277A  6ED9               	movwf	fsr2l,c
  2340  00277C  0E00               	movlw	high _dbuf
  2341  00277E  2043               	addwfc	(dtoa@i+1)^0,w,c
  2342  002780  6EDA               	movwf	fsr2h,c
  2343  002782  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2344  002786  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2345  00278A  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2346  00278E  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2347  002792  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2348  002796  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2349  00279A  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2350  00279E  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2351  0027A2  0E0A               	movlw	10
  2352  0027A4  6E0D               	movwf	___aomod@divisor^0,c
  2353  0027A6  0E00               	movlw	0
  2354  0027A8  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2355  0027AA  0E00               	movlw	0
  2356  0027AC  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2357  0027AE  0E00               	movlw	0
  2358  0027B0  6E10               	movwf	(___aomod@divisor+3)^0,c
  2359  0027B2  0E00               	movlw	0
  2360  0027B4  6E11               	movwf	(___aomod@divisor+4)^0,c
  2361  0027B6  0E00               	movlw	0
  2362  0027B8  6E12               	movwf	(___aomod@divisor+5)^0,c
  2363  0027BA  0E00               	movlw	0
  2364  0027BC  6E13               	movwf	(___aomod@divisor+6)^0,c
  2365  0027BE  0E00               	movlw	0
  2366  0027C0  6E14               	movwf	(___aomod@divisor+7)^0,c
  2367  0027C2  EC2E  F017         	call	___aomod	;wreg free
  2368  0027C6  C005  F02A         	movff	?___aomod,??_dtoa
  2369  0027CA  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2370  0027CE  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2371  0027D2  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2372  0027D6  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2373  0027DA  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2374  0027DE  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2375  0027E2  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2376  0027E6  C02A  F017         	movff	??_dtoa,abs@a
  2377  0027EA  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2378  0027EE  EC8D  F01B         	call	_abs	;wreg free
  2379  0027F2  5017               	movf	?_abs^0,w,c
  2380  0027F4  0F30               	addlw	48
  2381  0027F6  6EDF               	movwf	indf2,c
  2382  0027F8                     
  2383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2384  0027F8  0634               	decf	dtoa@p^0,f,c
  2385  0027FA  A0D8               	btfss	status,0,c
  2386  0027FC  0635               	decf	(dtoa@p+1)^0,f,c
  2387  0027FE                     
  2388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2389  0027FE  0636               	decf	dtoa@w^0,f,c
  2390  002800  A0D8               	btfss	status,0,c
  2391  002802  0637               	decf	(dtoa@w+1)^0,f,c
  2392  002804                     
  2393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2394  002804  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2395  002808  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2396  00280C  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2397  002810  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2398  002814  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2399  002818  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2400  00281C  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2401  002820  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2402  002824  0E0A               	movlw	10
  2403  002826  6E0D               	movwf	___aodiv@divisor^0,c
  2404  002828  0E00               	movlw	0
  2405  00282A  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2406  00282C  0E00               	movlw	0
  2407  00282E  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2408  002830  0E00               	movlw	0
  2409  002832  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2410  002834  0E00               	movlw	0
  2411  002836  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2412  002838  0E00               	movlw	0
  2413  00283A  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2414  00283C  0E00               	movlw	0
  2415  00283E  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2416  002840  0E00               	movlw	0
  2417  002842  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2418  002844  EC6A  F016         	call	___aodiv	;wreg free
  2419  002848  C005  F03A         	movff	?___aodiv,dtoa@n
  2420  00284C  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2421  002850  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2422  002854  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2423  002858  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2424  00285C  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2425  002860  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2426  002864  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2427  002868                     l3668:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2430  002868  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2431  00286A  EF3F  F014         	goto	u3661
  2432  00286E  5043               	movf	(dtoa@i+1)^0,w,c
  2433  002870  E108               	bnz	u3660
  2434  002872  0442               	decf	dtoa@i^0,w,c
  2435  002874  A0D8               	btfss	status,0,c
  2436  002876  EF3F  F014         	goto	u3661
  2437  00287A  EF41  F014         	goto	u3660
  2438  00287E                     u3661:
  2439  00287E  EF72  F014         	goto	l3678
  2440  002882                     u3660:
  2441  002882  503A               	movf	dtoa@n^0,w,c
  2442  002884  103B               	iorwf	(dtoa@n+1)^0,w,c
  2443  002886  103C               	iorwf	(dtoa@n+2)^0,w,c
  2444  002888  103D               	iorwf	(dtoa@n+3)^0,w,c
  2445  00288A  103E               	iorwf	(dtoa@n+4)^0,w,c
  2446  00288C  103F               	iorwf	(dtoa@n+5)^0,w,c
  2447  00288E  1040               	iorwf	(dtoa@n+6)^0,w,c
  2448  002890  1041               	iorwf	(dtoa@n+7)^0,w,c
  2449  002892  A4D8               	btfss	status,2,c
  2450  002894  EF4E  F014         	goto	u3671
  2451  002898  EF50  F014         	goto	u3670
  2452  00289C                     u3671:
  2453  00289C  EFB8  F013         	goto	l3658
  2454  0028A0                     u3670:
  2455  0028A0  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2456  0028A2  EF5D  F014         	goto	u3680
  2457  0028A6  5035               	movf	(dtoa@p+1)^0,w,c
  2458  0028A8  E106               	bnz	u3681
  2459  0028AA  0434               	decf	dtoa@p^0,w,c
  2460  0028AC  B0D8               	btfsc	status,0,c
  2461  0028AE  EF5B  F014         	goto	u3681
  2462  0028B2  EF5D  F014         	goto	u3680
  2463  0028B6                     u3681:
  2464  0028B6  EFB8  F013         	goto	l3658
  2465  0028BA                     u3680:
  2466  0028BA  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2467  0028BC  EF68  F014         	goto	u3691
  2468  0028C0  5037               	movf	(dtoa@w+1)^0,w,c
  2469  0028C2  E108               	bnz	u3690
  2470  0028C4  0436               	decf	dtoa@w^0,w,c
  2471  0028C6  A0D8               	btfss	status,0,c
  2472  0028C8  EF68  F014         	goto	u3691
  2473  0028CC  EF6A  F014         	goto	u3690
  2474  0028D0                     u3691:
  2475  0028D0  EF72  F014         	goto	l3678
  2476  0028D4                     u3690:
  2477  0028D4  0100               	movlb	0	; () banked
  2478  0028D6  B3B6               	btfsc	_flags& (0+255),1,b
  2479  0028D8  EF70  F014         	goto	u3701
  2480  0028DC  EF72  F014         	goto	u3700
  2481  0028E0                     u3701:
  2482  0028E0  EFB8  F013         	goto	l3658
  2483  0028E4                     u3700:
  2484  0028E4                     l3678:
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2487  0028E4  5038               	movf	dtoa@s^0,w,c
  2488  0028E6  1039               	iorwf	(dtoa@s+1)^0,w,c
  2489  0028E8  A4D8               	btfss	status,2,c
  2490  0028EA  EF79  F014         	goto	u3711
  2491  0028EE  EF7B  F014         	goto	u3710
  2492  0028F2                     u3711:
  2493  0028F2  EF83  F014         	goto	l3682
  2494  0028F6                     u3710:
  2495  0028F6  0100               	movlb	0	; () banked
  2496  0028F8  A5B6               	btfss	_flags& (0+255),2,b
  2497  0028FA  EF81  F014         	goto	u3721
  2498  0028FE  EF83  F014         	goto	u3720
  2499  002902                     u3721:
  2500  002902  EFA1  F014         	goto	l3692
  2501  002906                     u3720:
  2502  002906                     l3682:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2505  002906  0642               	decf	dtoa@i^0,f,c
  2506  002908  A0D8               	btfss	status,0,c
  2507  00290A  0643               	decf	(dtoa@i+1)^0,f,c
  2508  00290C                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2510  00290C  5038               	movf	dtoa@s^0,w,c
  2511  00290E  1039               	iorwf	(dtoa@s+1)^0,w,c
  2512  002910  A4D8               	btfss	status,2,c
  2513  002912  EF8D  F014         	goto	u3731
  2514  002916  EF8F  F014         	goto	u3730
  2515  00291A                     u3731:
  2516  00291A  EF95  F014         	goto	l3688
  2517  00291E                     u3730:
  2518  00291E  0E00               	movlw	0
  2519  002920  6E33               	movwf	(_dtoa$2170+1)^0,c
  2520  002922  0E2B               	movlw	43
  2521  002924  6E32               	movwf	_dtoa$2170^0,c
  2522  002926  EF99  F014         	goto	l3690
  2523  00292A                     l3688:
  2524  00292A  0E00               	movlw	0
  2525  00292C  6E33               	movwf	(_dtoa$2170+1)^0,c
  2526  00292E  0E2D               	movlw	45
  2527  002930  6E32               	movwf	_dtoa$2170^0,c
  2528  002932                     l3690:
  2529  002932  0EB8               	movlw	low _dbuf
  2530  002934  2442               	addwf	dtoa@i^0,w,c
  2531  002936  6ED9               	movwf	fsr2l,c
  2532  002938  0E00               	movlw	high _dbuf
  2533  00293A  2043               	addwfc	(dtoa@i+1)^0,w,c
  2534  00293C  6EDA               	movwf	fsr2h,c
  2535  00293E  C032  FFDF         	movff	_dtoa$2170,indf2
  2536  002942                     l3692:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2539  002942  C020  F015         	movff	dtoa@fp,pad@fp
  2540  002946  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2541  00294A  0EB8               	movlw	low _dbuf
  2542  00294C  2442               	addwf	dtoa@i^0,w,c
  2543  00294E  6E17               	movwf	pad@buf^0,c
  2544  002950  0E00               	movlw	high _dbuf
  2545  002952  2043               	addwfc	(dtoa@i+1)^0,w,c
  2546  002954  6E18               	movwf	(pad@buf+1)^0,c
  2547  002956  C036  F019         	movff	dtoa@w,pad@p
  2548  00295A  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2549  00295E  EC4A  F019         	call	_pad	;wreg free
  2550  002962  C015  F020         	movff	?_pad,?_dtoa
  2551  002966  C016  F021         	movff	?_pad+1,?_dtoa+1
  2552  00296A  0012               	return		;funcret
  2553  00296C                     __end_of_dtoa:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _pad *****************
  2557 ;; Defined at:
  2558 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2561 ;;		 -> sprintf@f(6), 
  2562 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2563 ;;		 -> dbuf(32), 
  2564 ;;  p               2   24[COMRAM] int 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  w               2   29[COMRAM] int 
  2567 ;;  i               2   27[COMRAM] int 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2   20[COMRAM] int 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;Total ram usage:       11 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 5
  2584 ;; This function calls:
  2585 ;;		_fputc
  2586 ;;		_fputs
  2587 ;;		_strlen
  2588 ;; This function is called by:
  2589 ;;		_dtoa
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text5
  2594  003294                     __ptext5:
  2595                           	callstack 0
  2596  003294                     _pad:
  2597                           	callstack 21
  2598  003294                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2600  003294  0100               	movlb	0	; () banked
  2601  003296  A1B6               	btfss	_flags& (0+255),0,b
  2602  003298  EF50  F019         	goto	u3541
  2603  00329C  EF52  F019         	goto	u3540
  2604  0032A0                     u3541:
  2605  0032A0  EF5C  F019         	goto	l3612
  2606  0032A4                     u3540:
  2607  0032A4                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2610  0032A4  C017  F00E         	movff	pad@buf,fputs@s
  2611  0032A8  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2612  0032AC  C015  F010         	movff	pad@fp,fputs@fp
  2613  0032B0  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2614  0032B4  EC29  F01B         	call	_fputs	;wreg free
  2615  0032B8                     l3612:
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2618  0032B8  BE1A               	btfsc	(pad@p+1)^0,7,c
  2619  0032BA  EF61  F019         	goto	u3551
  2620  0032BE  EF63  F019         	goto	u3550
  2621  0032C2                     u3551:
  2622  0032C2  EF69  F019         	goto	l3616
  2623  0032C6                     u3550:
  2624  0032C6  C019  F01E         	movff	pad@p,pad@w
  2625  0032CA  C01A  F01F         	movff	pad@p+1,pad@w+1
  2626  0032CE  EF6D  F019         	goto	l1129
  2627  0032D2                     l3616:
  2628  0032D2  0E00               	movlw	0
  2629  0032D4  6E1F               	movwf	(pad@w+1)^0,c
  2630  0032D6  0E00               	movlw	0
  2631  0032D8  6E1E               	movwf	pad@w^0,c
  2632  0032DA                     l1129:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2635  0032DA  0E00               	movlw	0
  2636  0032DC  6E1D               	movwf	(pad@i+1)^0,c
  2637  0032DE  0E00               	movlw	0
  2638  0032E0  6E1C               	movwf	pad@i^0,c
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2641  0032E2  EF7F  F019         	goto	l3622
  2642  0032E6                     l3618:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2645  0032E6  0E00               	movlw	0
  2646  0032E8  6E06               	movwf	(fputc@c+1)^0,c
  2647  0032EA  0E20               	movlw	32
  2648  0032EC  6E05               	movwf	fputc@c^0,c
  2649  0032EE  C015  F007         	movff	pad@fp,fputc@fp
  2650  0032F2  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2651  0032F6  ECE5  F018         	call	_fputc	;wreg free
  2652  0032FA                     
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2654  0032FA  4A1C               	infsnz	pad@i^0,f,c
  2655  0032FC  2A1D               	incf	(pad@i+1)^0,f,c
  2656  0032FE                     l3622:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2659  0032FE  501E               	movf	pad@w^0,w,c
  2660  003300  5C1C               	subwf	pad@i^0,w,c
  2661  003302  501D               	movf	(pad@i+1)^0,w,c
  2662  003304  0A80               	xorlw	128
  2663  003306  6E1B               	movwf	??_pad^0,c
  2664  003308  501F               	movf	(pad@w+1)^0,w,c
  2665  00330A  0A80               	xorlw	128
  2666  00330C  581B               	subwfb	??_pad^0,w,c
  2667  00330E  A0D8               	btfss	status,0,c
  2668  003310  EF8C  F019         	goto	u3561
  2669  003314  EF8E  F019         	goto	u3560
  2670  003318                     u3561:
  2671  003318  EF73  F019         	goto	l3618
  2672  00331C                     u3560:
  2673  00331C                     
  2674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2675  00331C  0100               	movlb	0	; () banked
  2676  00331E  B1B6               	btfsc	_flags& (0+255),0,b
  2677  003320  EF94  F019         	goto	u3571
  2678  003324  EF96  F019         	goto	u3570
  2679  003328                     u3571:
  2680  003328  EFA0  F019         	goto	l3626
  2681  00332C                     u3570:
  2682  00332C                     
  2683                           ; BSR set to: 0
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2685  00332C  C017  F00E         	movff	pad@buf,fputs@s
  2686  003330  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2687  003334  C015  F010         	movff	pad@fp,fputs@fp
  2688  003338  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2689  00333C  EC29  F01B         	call	_fputs	;wreg free
  2690  003340                     l3626:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2693  003340  C017  F005         	movff	pad@buf,strlen@s
  2694  003344  C018  F006         	movff	pad@buf+1,strlen@s+1
  2695  003348  ECAD  F01B         	call	_strlen	;wreg free
  2696  00334C  501E               	movf	pad@w^0,w,c
  2697  00334E  2405               	addwf	?_strlen^0,w,c
  2698  003350  6E15               	movwf	?_pad^0,c
  2699  003352  501F               	movf	(pad@w+1)^0,w,c
  2700  003354  2006               	addwfc	(?_strlen+1)^0,w,c
  2701  003356  6E16               	movwf	(?_pad+1)^0,c
  2702  003358  0012               	return		;funcret
  2703  00335A                     __end_of_pad:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _strlen *****************
  2707 ;; Defined at:
  2708 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2711 ;;		 -> dbuf(32), 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2714 ;;		 -> dbuf(32), 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    4[COMRAM] unsigned int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;Total ram usage:        4 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 2
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_pad
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text6
  2739  00375A                     __ptext6:
  2740                           	callstack 0
  2741  00375A                     _strlen:
  2742                           	callstack 23
  2743  00375A  C005  F007         	movff	strlen@s,strlen@a
  2744  00375E  C006  F008         	movff	strlen@s+1,strlen@a+1
  2745  003762  EFB5  F01B         	goto	l3522
  2746  003766                     l3520:
  2747  003766  4A05               	infsnz	strlen@s^0,f,c
  2748  003768  2A06               	incf	(strlen@s+1)^0,f,c
  2749  00376A                     l3522:
  2750  00376A  C005  FFD9         	movff	strlen@s,fsr2l
  2751  00376E  C006  FFDA         	movff	strlen@s+1,fsr2h
  2752  003772  50DF               	movf	indf2,w,c
  2753  003774  A4D8               	btfss	status,2,c
  2754  003776  EFBF  F01B         	goto	u3401
  2755  00377A  EFC1  F01B         	goto	u3400
  2756  00377E                     u3401:
  2757  00377E  EFB3  F01B         	goto	l3520
  2758  003782                     u3400:
  2759  003782  5007               	movf	strlen@a^0,w,c
  2760  003784  5C05               	subwf	strlen@s^0,w,c
  2761  003786  6E05               	movwf	?_strlen^0,c
  2762  003788  5008               	movf	(strlen@a+1)^0,w,c
  2763  00378A  5806               	subwfb	(strlen@s+1)^0,w,c
  2764  00378C  6E06               	movwf	(?_strlen+1)^0,c
  2765  00378E  0012               	return		;funcret
  2766  003790                     __end_of_strlen:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _fputs *****************
  2770 ;; Defined at:
  2771 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2774 ;;		 -> dbuf(32), 
  2775 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2776 ;;		 -> sprintf@f(6), 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  i               2   18[COMRAM] int 
  2779 ;;  c               1   17[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  2   13[COMRAM] int 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:        7 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 4
  2796 ;; This function calls:
  2797 ;;		_fputc
  2798 ;; This function is called by:
  2799 ;;		_pad
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text7
  2804  003652                     __ptext7:
  2805                           	callstack 0
  2806  003652                     _fputs:
  2807                           	callstack 21
  2808  003652  0E00               	movlw	0
  2809  003654  6E14               	movwf	(fputs@i+1)^0,c
  2810  003656  0E00               	movlw	0
  2811  003658  6E13               	movwf	fputs@i^0,c
  2812  00365A  EF3A  F01B         	goto	l3516
  2813  00365E                     l3512:
  2814  00365E  C012  F005         	movff	fputs@c,fputc@c
  2815  003662  6A06               	clrf	(fputc@c+1)^0,c
  2816  003664  C010  F007         	movff	fputs@fp,fputc@fp
  2817  003668  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2818  00366C  ECE5  F018         	call	_fputc	;wreg free
  2819  003670  4A13               	infsnz	fputs@i^0,f,c
  2820  003672  2A14               	incf	(fputs@i+1)^0,f,c
  2821  003674                     l3516:
  2822  003674  5013               	movf	fputs@i^0,w,c
  2823  003676  240E               	addwf	fputs@s^0,w,c
  2824  003678  6ED9               	movwf	fsr2l,c
  2825  00367A  5014               	movf	(fputs@i+1)^0,w,c
  2826  00367C  200F               	addwfc	(fputs@s+1)^0,w,c
  2827  00367E  6EDA               	movwf	fsr2h,c
  2828  003680  50DF               	movf	indf2,w,c
  2829  003682  6E12               	movwf	fputs@c^0,c
  2830  003684  5012               	movf	fputs@c^0,w,c
  2831  003686  A4D8               	btfss	status,2,c
  2832  003688  EF48  F01B         	goto	u3391
  2833  00368C  EF4A  F01B         	goto	u3390
  2834  003690                     u3391:
  2835  003690  EF2F  F01B         	goto	l3512
  2836  003694                     u3390:
  2837  003694  0012               	return		;funcret
  2838  003696                     __end_of_fputs:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _fputc *****************
  2842 ;; Defined at:
  2843 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  c               2    4[COMRAM] int 
  2846 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2847 ;;		 -> sprintf@f(6), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    4[COMRAM] int 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;Total ram usage:        9 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 3
  2866 ;; This function calls:
  2867 ;;		_putch
  2868 ;; This function is called by:
  2869 ;;		_pad
  2870 ;;		_vfpfcnvrt
  2871 ;;		_fputs
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text8
  2876  0031CA                     __ptext8:
  2877                           	callstack 0
  2878  0031CA                     _fputc:
  2879                           	callstack 24
  2880  0031CA  5007               	movf	fputc@fp^0,w,c
  2881  0031CC  1008               	iorwf	(fputc@fp+1)^0,w,c
  2882  0031CE  B4D8               	btfsc	status,2,c
  2883  0031D0  EFEC  F018         	goto	u3351
  2884  0031D4  EFEE  F018         	goto	u3350
  2885  0031D8                     u3351:
  2886  0031D8  EFF7  F018         	goto	l3500
  2887  0031DC                     u3350:
  2888  0031DC  5007               	movf	fputc@fp^0,w,c
  2889  0031DE  1008               	iorwf	(fputc@fp+1)^0,w,c
  2890  0031E0  A4D8               	btfss	status,2,c
  2891  0031E2  EFF5  F018         	goto	u3361
  2892  0031E6  EFF7  F018         	goto	u3360
  2893  0031EA                     u3361:
  2894  0031EA  EFFC  F018         	goto	l3502
  2895  0031EE                     u3360:
  2896  0031EE                     l3500:
  2897  0031EE  5005               	movf	fputc@c^0,w,c
  2898  0031F0  ECD6  F01C         	call	_putch
  2899  0031F4  EF49  F019         	goto	l1193
  2900  0031F8                     l3502:
  2901  0031F8  EE20 F004          	lfsr	2,4
  2902  0031FC  5007               	movf	fputc@fp^0,w,c
  2903  0031FE  26D9               	addwf	fsr2l,f,c
  2904  003200  5008               	movf	(fputc@fp+1)^0,w,c
  2905  003202  22DA               	addwfc	fsr2h,f,c
  2906  003204  50DE               	movf	postinc2,w,c
  2907  003206  10DE               	iorwf	postinc2,w,c
  2908  003208  B4D8               	btfsc	status,2,c
  2909  00320A  EF09  F019         	goto	u3371
  2910  00320E  EF0B  F019         	goto	u3370
  2911  003212                     u3371:
  2912  003212  EF26  F019         	goto	l3506
  2913  003216                     u3370:
  2914  003216  EE20 F004          	lfsr	2,4
  2915  00321A  5007               	movf	fputc@fp^0,w,c
  2916  00321C  26D9               	addwf	fsr2l,f,c
  2917  00321E  5008               	movf	(fputc@fp+1)^0,w,c
  2918  003220  22DA               	addwfc	fsr2h,f,c
  2919  003222  EE10 F002          	lfsr	1,2
  2920  003226  5007               	movf	fputc@fp^0,w,c
  2921  003228  26E1               	addwf	fsr1l,f,c
  2922  00322A  5008               	movf	(fputc@fp+1)^0,w,c
  2923  00322C  22E2               	addwfc	fsr1h,f,c
  2924  00322E  50DE               	movf	postinc2,w,c
  2925  003230  5CE6               	subwf	postinc1,w,c
  2926  003232  50E6               	movf	postinc1,w,c
  2927  003234  0A80               	xorlw	128
  2928  003236  6E0D               	movwf	(??_fputc+4)^0,c
  2929  003238  50DE               	movf	postinc2,w,c
  2930  00323A  0A80               	xorlw	128
  2931  00323C  580D               	subwfb	(??_fputc+4)^0,w,c
  2932  00323E  B0D8               	btfsc	status,0,c
  2933  003240  EF24  F019         	goto	u3381
  2934  003244  EF26  F019         	goto	u3380
  2935  003248                     u3381:
  2936  003248  EF49  F019         	goto	l1193
  2937  00324C                     u3380:
  2938  00324C                     l3506:
  2939  00324C  EE20 F002          	lfsr	2,2
  2940  003250  5007               	movf	fputc@fp^0,w,c
  2941  003252  26D9               	addwf	fsr2l,f,c
  2942  003254  5008               	movf	(fputc@fp+1)^0,w,c
  2943  003256  22DA               	addwfc	fsr2h,f,c
  2944  003258  CFDE F009          	movff	postinc2,??_fputc
  2945  00325C  CFDD F00A          	movff	postdec2,??_fputc+1
  2946  003260  C007  FFD9         	movff	fputc@fp,fsr2l
  2947  003264  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2948  003268  CFDE F00B          	movff	postinc2,??_fputc+2
  2949  00326C  CFDD F00C          	movff	postdec2,??_fputc+3
  2950  003270  5009               	movf	??_fputc^0,w,c
  2951  003272  240B               	addwf	(??_fputc+2)^0,w,c
  2952  003274  6ED9               	movwf	fsr2l,c
  2953  003276  500A               	movf	(??_fputc+1)^0,w,c
  2954  003278  200C               	addwfc	(??_fputc+3)^0,w,c
  2955  00327A  6EDA               	movwf	fsr2h,c
  2956  00327C  C005  FFDF         	movff	fputc@c,indf2
  2957  003280  EE20 F002          	lfsr	2,2
  2958  003284  5007               	movf	fputc@fp^0,w,c
  2959  003286  26D9               	addwf	fsr2l,f,c
  2960  003288  5008               	movf	(fputc@fp+1)^0,w,c
  2961  00328A  22DA               	addwfc	fsr2h,f,c
  2962  00328C  2ADE               	incf	postinc2,f,c
  2963  00328E  0E00               	movlw	0
  2964  003290  22DD               	addwfc	postdec2,f,c
  2965  003292                     l1193:
  2966  003292  0012               	return		;funcret
  2967  003294                     __end_of_fputc:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function _putch *****************
  2971 ;; Defined at:
  2972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  c               1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  c               1    0[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;Total ram usage:        0 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 2
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_fputc
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text9
  3001  0039AC                     __ptext9:
  3002                           	callstack 0
  3003  0039AC                     _putch:
  3004                           	callstack 24
  3005  0039AC  0012               	return		;funcret
  3006  0039AE                     __end_of_putch:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _abs *****************
  3010 ;; Defined at:
  3011 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  a               2   22[COMRAM] int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2   22[COMRAM] int 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;Total ram usage:        4 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 2
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_dtoa
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text10
  3040  00371A                     __ptext10:
  3041                           	callstack 0
  3042  00371A                     _abs:
  3043                           	callstack 24
  3044  00371A  BE18               	btfsc	(abs@a+1)^0,7,c
  3045  00371C  EF9A  F01B         	goto	u3580
  3046  003720  5018               	movf	(abs@a+1)^0,w,c
  3047  003722  E106               	bnz	u3581
  3048  003724  0417               	decf	abs@a^0,w,c
  3049  003726  B0D8               	btfsc	status,0,c
  3050  003728  EF98  F01B         	goto	u3581
  3051  00372C  EF9A  F01B         	goto	u3580
  3052  003730                     u3581:
  3053  003730  EFA8  F01B         	goto	l1178
  3054  003734                     u3580:
  3055  003734  C017  F019         	movff	abs@a,??_abs
  3056  003738  C018  F01A         	movff	abs@a+1,??_abs+1
  3057  00373C  1E19               	comf	??_abs^0,f,c
  3058  00373E  1E1A               	comf	(??_abs+1)^0,f,c
  3059  003740  4A19               	infsnz	??_abs^0,f,c
  3060  003742  2A1A               	incf	(??_abs+1)^0,f,c
  3061  003744  C019  F017         	movff	??_abs,?_abs
  3062  003748  C01A  F018         	movff	??_abs+1,?_abs+1
  3063  00374C  EFAC  F01B         	goto	l1181
  3064  003750                     l1178:
  3065  003750  C017  F017         	movff	abs@a,?_abs
  3066  003754  C018  F018         	movff	abs@a+1,?_abs+1
  3067  003758                     l1181:
  3068  003758  0012               	return		;funcret
  3069  00375A                     __end_of_abs:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function ___aomod *****************
  3073 ;; Defined at:
  3074 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  dividend        8    4[COMRAM] long long 
  3077 ;;  divisor         8   12[COMRAM] long long 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  sign            1   21[COMRAM] unsigned char 
  3080 ;;  counter         1   20[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  8    4[COMRAM] long long 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3090 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;Total ram usage:       18 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 2
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_dtoa
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text11
  3105  002E5C                     __ptext11:
  3106                           	callstack 0
  3107  002E5C                     ___aomod:
  3108                           	callstack 24
  3109  002E5C  0E00               	movlw	0
  3110  002E5E  6E16               	movwf	___aomod@sign^0,c
  3111  002E60  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3112  002E62  EF37  F017         	goto	u3480
  3113  002E66  EF35  F017         	goto	u3481
  3114  002E6A                     u3481:
  3115  002E6A  EF49  F017         	goto	l3580
  3116  002E6E                     u3480:
  3117  002E6E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3118  002E70  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3119  002E72  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3120  002E74  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3121  002E76  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3122  002E78  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3123  002E7A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3124  002E7C  6C05               	negf	___aomod@dividend^0,c
  3125  002E7E  0E00               	movlw	0
  3126  002E80  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3127  002E82  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3128  002E84  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3129  002E86  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3130  002E88  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3131  002E8A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3132  002E8C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3133  002E8E  0E01               	movlw	1
  3134  002E90  6E16               	movwf	___aomod@sign^0,c
  3135  002E92                     l3580:
  3136  002E92  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3137  002E94  EF50  F017         	goto	u3490
  3138  002E98  EF4E  F017         	goto	u3491
  3139  002E9C                     u3491:
  3140  002E9C  EF60  F017         	goto	l3584
  3141  002EA0                     u3490:
  3142  002EA0  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3143  002EA2  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3144  002EA4  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3145  002EA6  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3146  002EA8  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3147  002EAA  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3148  002EAC  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3149  002EAE  6C0D               	negf	___aomod@divisor^0,c
  3150  002EB0  0E00               	movlw	0
  3151  002EB2  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3152  002EB4  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3153  002EB6  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3154  002EB8  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3155  002EBA  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3156  002EBC  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3157  002EBE  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3158  002EC0                     l3584:
  3159  002EC0  500D               	movf	___aomod@divisor^0,w,c
  3160  002EC2  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3161  002EC4  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3162  002EC6  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3163  002EC8  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3164  002ECA  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3165  002ECC  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3166  002ECE  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3167  002ED0  B4D8               	btfsc	status,2,c
  3168  002ED2  EF6D  F017         	goto	u3501
  3169  002ED6  EF6F  F017         	goto	u3500
  3170  002EDA                     u3501:
  3171  002EDA  EFB7  F017         	goto	l3600
  3172  002EDE                     u3500:
  3173  002EDE  0E01               	movlw	1
  3174  002EE0  6E15               	movwf	___aomod@counter^0,c
  3175  002EE2  EF7D  F017         	goto	l3590
  3176  002EE6                     l3588:
  3177  002EE6  90D8               	bcf	status,0,c
  3178  002EE8  360D               	rlcf	___aomod@divisor^0,f,c
  3179  002EEA  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3180  002EEC  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3181  002EEE  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3182  002EF0  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3183  002EF2  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3184  002EF4  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3185  002EF6  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3186  002EF8  2A15               	incf	___aomod@counter^0,f,c
  3187  002EFA                     l3590:
  3188  002EFA  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3189  002EFC  EF82  F017         	goto	u3511
  3190  002F00  EF84  F017         	goto	u3510
  3191  002F04                     u3511:
  3192  002F04  EF73  F017         	goto	l3588
  3193  002F08                     u3510:
  3194  002F08                     l3592:
  3195  002F08  500D               	movf	___aomod@divisor^0,w,c
  3196  002F0A  5C05               	subwf	___aomod@dividend^0,w,c
  3197  002F0C  500E               	movf	(___aomod@divisor+1)^0,w,c
  3198  002F0E  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3199  002F10  500F               	movf	(___aomod@divisor+2)^0,w,c
  3200  002F12  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3201  002F14  5010               	movf	(___aomod@divisor+3)^0,w,c
  3202  002F16  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3203  002F18  5011               	movf	(___aomod@divisor+4)^0,w,c
  3204  002F1A  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3205  002F1C  5012               	movf	(___aomod@divisor+5)^0,w,c
  3206  002F1E  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3207  002F20  5013               	movf	(___aomod@divisor+6)^0,w,c
  3208  002F22  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3209  002F24  5014               	movf	(___aomod@divisor+7)^0,w,c
  3210  002F26  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3211  002F28  A0D8               	btfss	status,0,c
  3212  002F2A  EF99  F017         	goto	u3521
  3213  002F2E  EF9B  F017         	goto	u3520
  3214  002F32                     u3521:
  3215  002F32  EFAB  F017         	goto	l3596
  3216  002F36                     u3520:
  3217  002F36  500D               	movf	___aomod@divisor^0,w,c
  3218  002F38  5E05               	subwf	___aomod@dividend^0,f,c
  3219  002F3A  500E               	movf	(___aomod@divisor+1)^0,w,c
  3220  002F3C  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3221  002F3E  500F               	movf	(___aomod@divisor+2)^0,w,c
  3222  002F40  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3223  002F42  5010               	movf	(___aomod@divisor+3)^0,w,c
  3224  002F44  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3225  002F46  5011               	movf	(___aomod@divisor+4)^0,w,c
  3226  002F48  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3227  002F4A  5012               	movf	(___aomod@divisor+5)^0,w,c
  3228  002F4C  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3229  002F4E  5013               	movf	(___aomod@divisor+6)^0,w,c
  3230  002F50  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3231  002F52  5014               	movf	(___aomod@divisor+7)^0,w,c
  3232  002F54  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3233  002F56                     l3596:
  3234  002F56  90D8               	bcf	status,0,c
  3235  002F58  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3236  002F5A  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3237  002F5C  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3238  002F5E  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3239  002F60  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3240  002F62  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3241  002F64  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3242  002F66  320D               	rrcf	___aomod@divisor^0,f,c
  3243  002F68  2E15               	decfsz	___aomod@counter^0,f,c
  3244  002F6A  EF84  F017         	goto	l3592
  3245  002F6E                     l3600:
  3246  002F6E  5016               	movf	___aomod@sign^0,w,c
  3247  002F70  B4D8               	btfsc	status,2,c
  3248  002F72  EFBD  F017         	goto	u3531
  3249  002F76  EFBF  F017         	goto	u3530
  3250  002F7A                     u3531:
  3251  002F7A  EFCF  F017         	goto	l3604
  3252  002F7E                     u3530:
  3253  002F7E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3254  002F80  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3255  002F82  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3256  002F84  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3257  002F86  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3258  002F88  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3259  002F8A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3260  002F8C  6C05               	negf	___aomod@dividend^0,c
  3261  002F8E  0E00               	movlw	0
  3262  002F90  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3263  002F92  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3264  002F94  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3265  002F96  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3266  002F98  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3267  002F9A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3268  002F9C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3269  002F9E                     l3604:
  3270  002F9E  C005  F005         	movff	___aomod@dividend,?___aomod
  3271  002FA2  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3272  002FA6  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3273  002FAA  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3274  002FAE  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3275  002FB2  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3276  002FB6  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3277  002FBA  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3278  002FBE  0012               	return		;funcret
  3279  002FC0                     __end_of___aomod:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function ___aodiv *****************
  3283 ;; Defined at:
  3284 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  dividend        8    4[COMRAM] long long 
  3287 ;;  divisor         8   12[COMRAM] long long 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  quotient        8   22[COMRAM] long long 
  3290 ;;  sign            1   21[COMRAM] unsigned char 
  3291 ;;  counter         1   20[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  8    4[COMRAM] long long 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3301 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;Total ram usage:       26 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 2
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_dtoa
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text12
  3316  002CD4                     __ptext12:
  3317                           	callstack 0
  3318  002CD4                     ___aodiv:
  3319                           	callstack 24
  3320  002CD4  0E00               	movlw	0
  3321  002CD6  6E16               	movwf	___aodiv@sign^0,c
  3322  002CD8  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3323  002CDA  EF73  F016         	goto	u3410
  3324  002CDE  EF71  F016         	goto	u3411
  3325  002CE2                     u3411:
  3326  002CE2  EF85  F016         	goto	l3536
  3327  002CE6                     u3410:
  3328  002CE6  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3329  002CE8  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3330  002CEA  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3331  002CEC  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3332  002CEE  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3333  002CF0  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3334  002CF2  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3335  002CF4  6C0D               	negf	___aodiv@divisor^0,c
  3336  002CF6  0E00               	movlw	0
  3337  002CF8  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3338  002CFA  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3339  002CFC  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3340  002CFE  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3341  002D00  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3342  002D02  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3343  002D04  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3344  002D06  0E01               	movlw	1
  3345  002D08  6E16               	movwf	___aodiv@sign^0,c
  3346  002D0A                     l3536:
  3347  002D0A  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3348  002D0C  EF8C  F016         	goto	u3420
  3349  002D10  EF8A  F016         	goto	u3421
  3350  002D14                     u3421:
  3351  002D14  EF9E  F016         	goto	l3542
  3352  002D18                     u3420:
  3353  002D18  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3354  002D1A  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3355  002D1C  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3356  002D1E  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3357  002D20  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3358  002D22  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3359  002D24  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3360  002D26  6C05               	negf	___aodiv@dividend^0,c
  3361  002D28  0E00               	movlw	0
  3362  002D2A  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3363  002D2C  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3364  002D2E  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3365  002D30  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3366  002D32  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3367  002D34  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3368  002D36  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3369  002D38  0E01               	movlw	1
  3370  002D3A  1A16               	xorwf	___aodiv@sign^0,f,c
  3371  002D3C                     l3542:
  3372  002D3C  EE20  F017         	lfsr	2,___aodiv@quotient
  3373  002D40  0E07               	movlw	7
  3374  002D42                     u3431:
  3375  002D42  6ADE               	clrf	postinc2,c
  3376  002D44  06E8               	decf	wreg,f,c
  3377  002D46  E2FD               	bc	u3431
  3378  002D48  500D               	movf	___aodiv@divisor^0,w,c
  3379  002D4A  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3380  002D4C  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3381  002D4E  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3382  002D50  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3383  002D52  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3384  002D54  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3385  002D56  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3386  002D58  B4D8               	btfsc	status,2,c
  3387  002D5A  EFB1  F016         	goto	u3441
  3388  002D5E  EFB3  F016         	goto	u3440
  3389  002D62                     u3441:
  3390  002D62  EF05  F017         	goto	l3564
  3391  002D66                     u3440:
  3392  002D66  0E01               	movlw	1
  3393  002D68  6E15               	movwf	___aodiv@counter^0,c
  3394  002D6A  EFC1  F016         	goto	l3550
  3395  002D6E                     l3548:
  3396  002D6E  90D8               	bcf	status,0,c
  3397  002D70  360D               	rlcf	___aodiv@divisor^0,f,c
  3398  002D72  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3399  002D74  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3400  002D76  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3401  002D78  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3402  002D7A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3403  002D7C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3404  002D7E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3405  002D80  2A15               	incf	___aodiv@counter^0,f,c
  3406  002D82                     l3550:
  3407  002D82  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3408  002D84  EFC6  F016         	goto	u3451
  3409  002D88  EFC8  F016         	goto	u3450
  3410  002D8C                     u3451:
  3411  002D8C  EFB7  F016         	goto	l3548
  3412  002D90                     u3450:
  3413  002D90                     l3552:
  3414  002D90  90D8               	bcf	status,0,c
  3415  002D92  3617               	rlcf	___aodiv@quotient^0,f,c
  3416  002D94  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3417  002D96  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3418  002D98  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3419  002D9A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3420  002D9C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3421  002D9E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3422  002DA0  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3423  002DA2  500D               	movf	___aodiv@divisor^0,w,c
  3424  002DA4  5C05               	subwf	___aodiv@dividend^0,w,c
  3425  002DA6  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3426  002DA8  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3427  002DAA  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3428  002DAC  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3429  002DAE  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3430  002DB0  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3431  002DB2  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3432  002DB4  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3433  002DB6  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3434  002DB8  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3435  002DBA  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3436  002DBC  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3437  002DBE  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3438  002DC0  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3439  002DC2  A0D8               	btfss	status,0,c
  3440  002DC4  EFE6  F016         	goto	u3461
  3441  002DC8  EFE8  F016         	goto	u3460
  3442  002DCC                     u3461:
  3443  002DCC  EFF9  F016         	goto	l3560
  3444  002DD0                     u3460:
  3445  002DD0  500D               	movf	___aodiv@divisor^0,w,c
  3446  002DD2  5E05               	subwf	___aodiv@dividend^0,f,c
  3447  002DD4  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3448  002DD6  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3449  002DD8  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3450  002DDA  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3451  002DDC  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3452  002DDE  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3453  002DE0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3454  002DE2  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3455  002DE4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3456  002DE6  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3457  002DE8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3458  002DEA  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3459  002DEC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3460  002DEE  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3461  002DF0  8017               	bsf	___aodiv@quotient^0,0,c
  3462  002DF2                     l3560:
  3463  002DF2  90D8               	bcf	status,0,c
  3464  002DF4  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3465  002DF6  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3466  002DF8  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3467  002DFA  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3468  002DFC  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3469  002DFE  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3470  002E00  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3471  002E02  320D               	rrcf	___aodiv@divisor^0,f,c
  3472  002E04  2E15               	decfsz	___aodiv@counter^0,f,c
  3473  002E06  EFC8  F016         	goto	l3552
  3474  002E0A                     l3564:
  3475  002E0A  5016               	movf	___aodiv@sign^0,w,c
  3476  002E0C  B4D8               	btfsc	status,2,c
  3477  002E0E  EF0B  F017         	goto	u3471
  3478  002E12  EF0D  F017         	goto	u3470
  3479  002E16                     u3471:
  3480  002E16  EF1D  F017         	goto	l3568
  3481  002E1A                     u3470:
  3482  002E1A  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3483  002E1C  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3484  002E1E  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3485  002E20  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3486  002E22  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3487  002E24  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3488  002E26  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3489  002E28  6C17               	negf	___aodiv@quotient^0,c
  3490  002E2A  0E00               	movlw	0
  3491  002E2C  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3492  002E2E  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3493  002E30  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3494  002E32  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3495  002E34  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3496  002E36  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3497  002E38  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3498  002E3A                     l3568:
  3499  002E3A  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3500  002E3E  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3501  002E42  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3502  002E46  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3503  002E4A  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3504  002E4E  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3505  002E52  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3506  002E56  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3507  002E5A  0012               	return		;funcret
  3508  002E5C                     __end_of___aodiv:
  3509                           	callstack 0
  3510                           
  3511 ;; *************** function _sendTxBuf *****************
  3512 ;; Defined at:
  3513 ;;		line 106 in file "serial.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;Total ram usage:        0 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 3
  3534 ;; This function calls:
  3535 ;;		_isDataInTxBuf
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text13
  3542  00392C                     __ptext13:
  3543                           	callstack 0
  3544  00392C                     _sendTxBuf:
  3545                           	callstack 27
  3546  00392C                     
  3547                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3548  00392C  ECA3  F01C         	call	_isDataInTxBuf	;wreg free
  3549  003930  0900               	iorlw	0
  3550  003932  B4D8               	btfsc	status,2,c
  3551  003934  EF9E  F01C         	goto	u3201
  3552  003938  EFA0  F01C         	goto	u3200
  3553  00393C                     u3201:
  3554  00393C  EFA2  F01C         	goto	l381
  3555  003940                     u3200:
  3556  003940  010E               	movlb	14	; () banked
  3557  003942  852D               	bsf	45,2,b	;volatile
  3558  003944                     l381:
  3559  003944  0012               	return		;funcret
  3560  003946                     __end_of_sendTxBuf:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _isDataInTxBuf *****************
  3564 ;; Defined at:
  3565 ;;		line 93 in file "serial.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 2
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_sendTxBuf
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text14
  3594  003946                     __ptext14:
  3595                           	callstack 0
  3596  003946                     _isDataInTxBuf:
  3597                           	callstack 27
  3598  003946                     
  3599                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  3600  003946  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  3601  003948  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3602  00394A  A4D8               	btfss	status,2,c
  3603  00394C  EFAA  F01C         	goto	u2301
  3604  003950  EFAD  F01C         	goto	u2300
  3605  003954                     u2301:
  3606  003954  0E01               	movlw	1
  3607  003956  EFAE  F01C         	goto	u2310
  3608  00395A                     u2300:
  3609  00395A  0E00               	movlw	0
  3610  00395C                     u2310:
  3611  00395C  0012               	return		;funcret
  3612  00395E                     __end_of_isDataInTxBuf:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _read_colours *****************
  3616 ;; Defined at:
  3617 ;;		line 72 in file "color.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  m               2   15[COMRAM] PTR struct RGB_val
  3620 ;;		 -> main@test(18), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 5
  3639 ;; This function calls:
  3640 ;;		_color_read_Blue
  3641 ;;		_color_read_Green
  3642 ;;		_color_read_Red
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text15
  3649  003578                     __ptext15:
  3650                           	callstack 0
  3651  003578                     _read_colours:
  3652                           	callstack 25
  3653  003578                     
  3654                           ;color.c: 73:     (m->R) = color_read_Red();
  3655  003578  EC44  F01A         	call	_color_read_Red	;wreg free
  3656  00357C  EE20 F00C          	lfsr	2,12
  3657  003580  5010               	movf	read_colours@m^0,w,c
  3658  003582  26D9               	addwf	fsr2l,f,c
  3659  003584  5011               	movf	(read_colours@m+1)^0,w,c
  3660  003586  22DA               	addwfc	fsr2h,f,c
  3661  003588  C009  FFDE         	movff	?_color_read_Red,postinc2
  3662  00358C  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  3663                           
  3664                           ;color.c: 74:     (m->G) = color_read_Green();
  3665  003590  EC6C  F01A         	call	_color_read_Green	;wreg free
  3666  003594  EE20 F00E          	lfsr	2,14
  3667  003598  5010               	movf	read_colours@m^0,w,c
  3668  00359A  26D9               	addwf	fsr2l,f,c
  3669  00359C  5011               	movf	(read_colours@m+1)^0,w,c
  3670  00359E  22DA               	addwfc	fsr2h,f,c
  3671  0035A0  C009  FFDE         	movff	?_color_read_Green,postinc2
  3672  0035A4  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  3673                           
  3674                           ;color.c: 75:     (m->B) = color_read_Blue();
  3675  0035A8  EC94  F01A         	call	_color_read_Blue	;wreg free
  3676  0035AC  EE20 F010          	lfsr	2,16
  3677  0035B0  5010               	movf	read_colours@m^0,w,c
  3678  0035B2  26D9               	addwf	fsr2l,f,c
  3679  0035B4  5011               	movf	(read_colours@m+1)^0,w,c
  3680  0035B6  22DA               	addwfc	fsr2h,f,c
  3681  0035B8  C009  FFDE         	movff	?_color_read_Blue,postinc2
  3682  0035BC  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  3683  0035C0  0012               	return		;funcret
  3684  0035C2                     __end_of_read_colours:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _initUSART4 *****************
  3688 ;; Defined at:
  3689 ;;		line 4 in file "serial.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; Hardware stack levels required when called: 2
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text16
  3718  0038EC                     __ptext16:
  3719                           	callstack 0
  3720  0038EC                     _initUSART4:
  3721                           	callstack 28
  3722  0038EC                     
  3723                           ;serial.c: 8:     RC0PPS = 0x12;
  3724  0038EC  0E12               	movlw	18
  3725  0038EE  010E               	movlb	14	; () banked
  3726  0038F0  6F62               	movwf	98,b	;volatile
  3727                           
  3728                           ;serial.c: 9:     RX4PPS = 0x11;
  3729  0038F2  0E11               	movlw	17
  3730  0038F4  6F15               	movwf	21,b	;volatile
  3731  0038F6                     
  3732                           ; BSR set to: 14
  3733                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  3734  0038F6  8283               	bsf	131,1,c	;volatile
  3735  0038F8                     
  3736                           ; BSR set to: 14
  3737                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3738  0038F8  97E9               	bcf	233,3,b	;volatile
  3739  0038FA                     
  3740                           ; BSR set to: 14
  3741                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3742  0038FA  95E8               	bcf	232,2,b	;volatile
  3743                           
  3744                           ;serial.c: 14:     SP4BRGL = 51;
  3745  0038FC  0E33               	movlw	51
  3746  0038FE  6FE5               	movwf	229,b	;volatile
  3747                           
  3748                           ;serial.c: 15:     SP4BRGH = 0;
  3749  003900  0E00               	movlw	0
  3750  003902  6FE6               	movwf	230,b	;volatile
  3751  003904                     
  3752                           ; BSR set to: 14
  3753                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3754  003904  89E7               	bsf	231,4,b	;volatile
  3755  003906                     
  3756                           ; BSR set to: 14
  3757                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3758  003906  8BE8               	bsf	232,5,b	;volatile
  3759  003908                     
  3760                           ; BSR set to: 14
  3761                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3762  003908  8FE7               	bsf	231,7,b	;volatile
  3763  00390A                     
  3764                           ; BSR set to: 14
  3765  00390A  0012               	return		;funcret
  3766  00390C                     __end_of_initUSART4:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _initDCmotorsPWM *****************
  3770 ;; Defined at:
  3771 ;;		line 5 in file "dc_motor.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  PWMperiod       2    4[COMRAM] int 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 2
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text17
  3800  003696                     __ptext17:
  3801                           	callstack 0
  3802  003696                     _initDCmotorsPWM:
  3803                           	callstack 28
  3804  003696                     
  3805                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  3806  003696  9485               	bcf	133,2,c	;volatile
  3807                           
  3808                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  3809  003698  9E83               	bcf	131,7,c	;volatile
  3810                           
  3811                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  3812  00369A  9C87               	bcf	135,6,c	;volatile
  3813                           
  3814                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  3815  00369C  9885               	bcf	133,4,c	;volatile
  3816                           
  3817                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  3818  00369E  947D               	bcf	125,2,c	;volatile
  3819                           
  3820                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  3821  0036A0  9E7B               	bcf	123,7,c	;volatile
  3822                           
  3823                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  3824  0036A2  9C7F               	bcf	127,6,c	;volatile
  3825                           
  3826                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  3827  0036A4  987D               	bcf	125,4,c	;volatile
  3828  0036A6                     
  3829                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  3830  0036A6  50BD               	movf	189,w,c	;volatile
  3831  0036A8  0B8F               	andlw	-113
  3832  0036AA  0940               	iorlw	64
  3833  0036AC  6EBD               	movwf	189,c	;volatile
  3834                           
  3835                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  3836  0036AE  0EE0               	movlw	-32
  3837  0036B0  16BE               	andwf	190,f,c	;volatile
  3838                           
  3839                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  3840  0036B2  50BF               	movf	191,w,c	;volatile
  3841  0036B4  0BF0               	andlw	-16
  3842  0036B6  0901               	iorlw	1
  3843  0036B8  6EBF               	movwf	191,c	;volatile
  3844                           
  3845                           ;dc_motor.c: 22:     T2PR=99;
  3846  0036BA  0E63               	movlw	99
  3847  0036BC  6EBC               	movwf	188,c	;volatile
  3848  0036BE                     
  3849                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  3850  0036BE  8EBD               	bsf	189,7,c	;volatile
  3851                           
  3852                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  3853  0036C0  0E0A               	movlw	10
  3854  0036C2  010E               	movlb	14	; () banked
  3855  0036C4  6F74               	movwf	116,b	;volatile
  3856                           
  3857                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  3858  0036C6  0E0B               	movlw	11
  3859  0036C8  6F69               	movwf	105,b	;volatile
  3860                           
  3861                           ;dc_motor.c: 28:     PWM6DCH=0;
  3862  0036CA  0E00               	movlw	0
  3863  0036CC  6EA3               	movwf	163,c	;volatile
  3864                           
  3865                           ;dc_motor.c: 29:     PWM7DCH=0;
  3866  0036CE  0E00               	movlw	0
  3867  0036D0  6EA0               	movwf	160,c	;volatile
  3868  0036D2                     
  3869                           ; BSR set to: 14
  3870                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  3871  0036D2  8EA4               	bsf	164,7,c	;volatile
  3872  0036D4                     
  3873                           ; BSR set to: 14
  3874                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  3875  0036D4  8EA1               	bsf	161,7,c	;volatile
  3876  0036D6                     
  3877                           ; BSR set to: 14
  3878  0036D6  0012               	return		;funcret
  3879  0036D8                     __end_of_initDCmotorsPWM:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function _determine_color_new *****************
  3883 ;; Defined at:
  3884 ;;		line 95 in file "color.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  m               2   78[COMRAM] PTR struct RGB_val
  3887 ;;		 -> main@test(18), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  RelB            4   24[BANK0 ] float 
  3890 ;;  RelG            4   20[BANK0 ] float 
  3891 ;;  RelR            4   16[BANK0 ] float 
  3892 ;;  out             2   14[BANK0 ] unsigned int 
  3893 ;;  BlueRatio       2   12[BANK0 ] unsigned int 
  3894 ;;  GreenRatio      2   10[BANK0 ] unsigned int 
  3895 ;;  RedRatio        2    8[BANK0 ] unsigned int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2   78[COMRAM] unsigned int 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Totals:         2      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;Total ram usage:       30 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 4
  3912 ;; This function calls:
  3913 ;;		___fldiv
  3914 ;;		___flmul
  3915 ;;		___fltol
  3916 ;;		___xxtofl
  3917 ;;		_isbtw
  3918 ;; This function is called by:
  3919 ;;		_main
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text18
  3924  000E4E                     __ptext18:
  3925                           	callstack 0
  3926  000E4E                     _determine_color_new:
  3927                           	callstack 26
  3928  000E4E                     
  3929                           ;color.c: 96:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 97:     float R
      +                          elR, RelG, RelB;;color.c: 98:     unsigned int out = 9;
  3930  000E4E  0E00               	movlw	0
  3931  000E50  0100               	movlb	0	; () banked
  3932  000E52  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  3933  000E54  0E09               	movlw	9
  3934  000E56  6FE6               	movwf	determine_color_new@out& (0+255),b
  3935  000E58                     
  3936                           ; BSR set to: 0
  3937                           ;color.c: 101:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  3938  000E58  0E00               	movlw	0
  3939  000E5A  6E30               	movwf	___flmul@a^0,c
  3940  000E5C  0E40               	movlw	64
  3941  000E5E  6E31               	movwf	(___flmul@a+1)^0,c
  3942  000E60  0E1C               	movlw	28
  3943  000E62  6E32               	movwf	(___flmul@a+2)^0,c
  3944  000E64  0E46               	movlw	70
  3945  000E66  6E33               	movwf	(___flmul@a+3)^0,c
  3946  000E68  C04F  FFD9         	movff	determine_color_new@m,fsr2l
  3947  000E6C  C050  FFDA         	movff	determine_color_new@m+1,fsr2h
  3948  000E70  CFDE F0D8          	movff	postinc2,??_determine_color_new
  3949  000E74  CFDD F0D9          	movff	postdec2,??_determine_color_new+1
  3950  000E78  EE20 F006          	lfsr	2,6
  3951  000E7C  504F               	movf	determine_color_new@m^0,w,c
  3952  000E7E  26D9               	addwf	fsr2l,f,c
  3953  000E80  5050               	movf	(determine_color_new@m+1)^0,w,c
  3954  000E82  22DA               	addwfc	fsr2h,f,c
  3955  000E84  CFDE F0DA          	movff	postinc2,??_determine_color_new+2
  3956  000E88  CFDD F0DB          	movff	postdec2,??_determine_color_new+3
  3957  000E8C  51D8               	movf	??_determine_color_new& (0+255),w,b
  3958  000E8E  5FDA               	subwf	(??_determine_color_new+2)& (0+255),f,b
  3959  000E90  51D9               	movf	(??_determine_color_new+1)& (0+255),w,b
  3960  000E92  5BDB               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  3961  000E94  C0DA  F005         	movff	??_determine_color_new+2,___xxtofl@val
  3962  000E98  C0DB  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  3963  000E9C  6A07               	clrf	(___xxtofl@val+2)^0,c
  3964  000E9E  6A08               	clrf	(___xxtofl@val+3)^0,c
  3965  000EA0  0E00               	movlw	0
  3966  000EA2  EC90  F015         	call	___xxtofl
  3967  000EA6  C005  F017         	movff	?___xxtofl,___fldiv@a
  3968  000EAA  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  3969  000EAE  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  3970  000EB2  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  3971  000EB6  C04F  FFD9         	movff	determine_color_new@m,fsr2l
  3972  000EBA  C050  FFDA         	movff	determine_color_new@m+1,fsr2h
  3973  000EBE  CFDE F0DC          	movff	postinc2,??_determine_color_new+4
  3974  000EC2  CFDD F0DD          	movff	postdec2,??_determine_color_new+5
  3975  000EC6  EE20 F00C          	lfsr	2,12
  3976  000ECA  504F               	movf	determine_color_new@m^0,w,c
  3977  000ECC  26D9               	addwf	fsr2l,f,c
  3978  000ECE  5050               	movf	(determine_color_new@m+1)^0,w,c
  3979  000ED0  22DA               	addwfc	fsr2h,f,c
  3980  000ED2  CFDE F0DE          	movff	postinc2,??_determine_color_new+6
  3981  000ED6  CFDD F0DF          	movff	postdec2,??_determine_color_new+7
  3982  000EDA  0100               	movlb	0	; () banked
  3983  000EDC  51DC               	movf	(??_determine_color_new+4)& (0+255),w,b
  3984  000EDE  5FDE               	subwf	(??_determine_color_new+6)& (0+255),f,b
  3985  000EE0  51DD               	movf	(??_determine_color_new+5)& (0+255),w,b
  3986  000EE2  5BDF               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  3987  000EE4  C0DE  F005         	movff	??_determine_color_new+6,___xxtofl@val
  3988  000EE8  C0DF  F006         	movff	??_determine_color_new+7,___xxtofl@val+1
  3989  000EEC  6A07               	clrf	(___xxtofl@val+2)^0,c
  3990  000EEE  6A08               	clrf	(___xxtofl@val+3)^0,c
  3991  000EF0  0E00               	movlw	0
  3992  000EF2  EC90  F015         	call	___xxtofl
  3993  000EF6  C005  F013         	movff	?___xxtofl,___fldiv@b
  3994  000EFA  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  3995  000EFE  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  3996  000F02  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  3997  000F06  EC78  F011         	call	___fldiv	;wreg free
  3998  000F0A  C013  F02C         	movff	?___fldiv,___flmul@b
  3999  000F0E  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4000  000F12  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4001  000F16  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4002  000F1A  EC63  F00F         	call	___flmul	;wreg free
  4003  000F1E  C02C  F045         	movff	?___flmul,___fltol@f1
  4004  000F22  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  4005  000F26  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  4006  000F2A  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  4007  000F2E  ECE0  F017         	call	___fltol	;wreg free
  4008  000F32  C045  F0E0         	movff	?___fltol,determine_color_new@RedRatio
  4009  000F36  C046  F0E1         	movff	?___fltol+1,determine_color_new@RedRatio+1
  4010  000F3A                     
  4011                           ;color.c: 102:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  4012  000F3A  0E00               	movlw	0
  4013  000F3C  6E30               	movwf	___flmul@a^0,c
  4014  000F3E  0E40               	movlw	64
  4015  000F40  6E31               	movwf	(___flmul@a+1)^0,c
  4016  000F42  0E1C               	movlw	28
  4017  000F44  6E32               	movwf	(___flmul@a+2)^0,c
  4018  000F46  0E46               	movlw	70
  4019  000F48  6E33               	movwf	(___flmul@a+3)^0,c
  4020  000F4A  EE20 F002          	lfsr	2,2
  4021  000F4E  504F               	movf	determine_color_new@m^0,w,c
  4022  000F50  26D9               	addwf	fsr2l,f,c
  4023  000F52  5050               	movf	(determine_color_new@m+1)^0,w,c
  4024  000F54  22DA               	addwfc	fsr2h,f,c
  4025  000F56  CFDE F0D8          	movff	postinc2,??_determine_color_new
  4026  000F5A  CFDD F0D9          	movff	postdec2,??_determine_color_new+1
  4027  000F5E  EE20 F008          	lfsr	2,8
  4028  000F62  504F               	movf	determine_color_new@m^0,w,c
  4029  000F64  26D9               	addwf	fsr2l,f,c
  4030  000F66  5050               	movf	(determine_color_new@m+1)^0,w,c
  4031  000F68  22DA               	addwfc	fsr2h,f,c
  4032  000F6A  CFDE F0DA          	movff	postinc2,??_determine_color_new+2
  4033  000F6E  CFDD F0DB          	movff	postdec2,??_determine_color_new+3
  4034  000F72  0100               	movlb	0	; () banked
  4035  000F74  51D8               	movf	??_determine_color_new& (0+255),w,b
  4036  000F76  5FDA               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4037  000F78  51D9               	movf	(??_determine_color_new+1)& (0+255),w,b
  4038  000F7A  5BDB               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4039  000F7C  C0DA  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4040  000F80  C0DB  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4041  000F84  6A07               	clrf	(___xxtofl@val+2)^0,c
  4042  000F86  6A08               	clrf	(___xxtofl@val+3)^0,c
  4043  000F88  0E00               	movlw	0
  4044  000F8A  EC90  F015         	call	___xxtofl
  4045  000F8E  C005  F017         	movff	?___xxtofl,___fldiv@a
  4046  000F92  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4047  000F96  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4048  000F9A  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4049  000F9E  EE20 F002          	lfsr	2,2
  4050  000FA2  504F               	movf	determine_color_new@m^0,w,c
  4051  000FA4  26D9               	addwf	fsr2l,f,c
  4052  000FA6  5050               	movf	(determine_color_new@m+1)^0,w,c
  4053  000FA8  22DA               	addwfc	fsr2h,f,c
  4054  000FAA  CFDE F0DC          	movff	postinc2,??_determine_color_new+4
  4055  000FAE  CFDD F0DD          	movff	postdec2,??_determine_color_new+5
  4056  000FB2  EE20 F00E          	lfsr	2,14
  4057  000FB6  504F               	movf	determine_color_new@m^0,w,c
  4058  000FB8  26D9               	addwf	fsr2l,f,c
  4059  000FBA  5050               	movf	(determine_color_new@m+1)^0,w,c
  4060  000FBC  22DA               	addwfc	fsr2h,f,c
  4061  000FBE  CFDE F0DE          	movff	postinc2,??_determine_color_new+6
  4062  000FC2  CFDD F0DF          	movff	postdec2,??_determine_color_new+7
  4063  000FC6  0100               	movlb	0	; () banked
  4064  000FC8  51DC               	movf	(??_determine_color_new+4)& (0+255),w,b
  4065  000FCA  5FDE               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4066  000FCC  51DD               	movf	(??_determine_color_new+5)& (0+255),w,b
  4067  000FCE  5BDF               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4068  000FD0  C0DE  F005         	movff	??_determine_color_new+6,___xxtofl@val
  4069  000FD4  C0DF  F006         	movff	??_determine_color_new+7,___xxtofl@val+1
  4070  000FD8  6A07               	clrf	(___xxtofl@val+2)^0,c
  4071  000FDA  6A08               	clrf	(___xxtofl@val+3)^0,c
  4072  000FDC  0E00               	movlw	0
  4073  000FDE  EC90  F015         	call	___xxtofl
  4074  000FE2  C005  F013         	movff	?___xxtofl,___fldiv@b
  4075  000FE6  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4076  000FEA  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4077  000FEE  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4078  000FF2  EC78  F011         	call	___fldiv	;wreg free
  4079  000FF6  C013  F02C         	movff	?___fldiv,___flmul@b
  4080  000FFA  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4081  000FFE  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4082  001002  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4083  001006  EC63  F00F         	call	___flmul	;wreg free
  4084  00100A  C02C  F045         	movff	?___flmul,___fltol@f1
  4085  00100E  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  4086  001012  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  4087  001016  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  4088  00101A  ECE0  F017         	call	___fltol	;wreg free
  4089  00101E  C045  F0E2         	movff	?___fltol,determine_color_new@GreenRatio
  4090  001022  C046  F0E3         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  4091  001026                     
  4092                           ;color.c: 103:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  4093  001026  0E00               	movlw	0
  4094  001028  6E30               	movwf	___flmul@a^0,c
  4095  00102A  0E40               	movlw	64
  4096  00102C  6E31               	movwf	(___flmul@a+1)^0,c
  4097  00102E  0E1C               	movlw	28
  4098  001030  6E32               	movwf	(___flmul@a+2)^0,c
  4099  001032  0E46               	movlw	70
  4100  001034  6E33               	movwf	(___flmul@a+3)^0,c
  4101  001036  EE20 F004          	lfsr	2,4
  4102  00103A  504F               	movf	determine_color_new@m^0,w,c
  4103  00103C  26D9               	addwf	fsr2l,f,c
  4104  00103E  5050               	movf	(determine_color_new@m+1)^0,w,c
  4105  001040  22DA               	addwfc	fsr2h,f,c
  4106  001042  CFDE F0D8          	movff	postinc2,??_determine_color_new
  4107  001046  CFDD F0D9          	movff	postdec2,??_determine_color_new+1
  4108  00104A  EE20 F00A          	lfsr	2,10
  4109  00104E  504F               	movf	determine_color_new@m^0,w,c
  4110  001050  26D9               	addwf	fsr2l,f,c
  4111  001052  5050               	movf	(determine_color_new@m+1)^0,w,c
  4112  001054  22DA               	addwfc	fsr2h,f,c
  4113  001056  CFDE F0DA          	movff	postinc2,??_determine_color_new+2
  4114  00105A  CFDD F0DB          	movff	postdec2,??_determine_color_new+3
  4115  00105E  0100               	movlb	0	; () banked
  4116  001060  51D8               	movf	??_determine_color_new& (0+255),w,b
  4117  001062  5FDA               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4118  001064  51D9               	movf	(??_determine_color_new+1)& (0+255),w,b
  4119  001066  5BDB               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4120  001068  C0DA  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4121  00106C  C0DB  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4122  001070  6A07               	clrf	(___xxtofl@val+2)^0,c
  4123  001072  6A08               	clrf	(___xxtofl@val+3)^0,c
  4124  001074  0E00               	movlw	0
  4125  001076  EC90  F015         	call	___xxtofl
  4126  00107A  C005  F017         	movff	?___xxtofl,___fldiv@a
  4127  00107E  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4128  001082  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4129  001086  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4130  00108A  EE20 F004          	lfsr	2,4
  4131  00108E  504F               	movf	determine_color_new@m^0,w,c
  4132  001090  26D9               	addwf	fsr2l,f,c
  4133  001092  5050               	movf	(determine_color_new@m+1)^0,w,c
  4134  001094  22DA               	addwfc	fsr2h,f,c
  4135  001096  CFDE F0DC          	movff	postinc2,??_determine_color_new+4
  4136  00109A  CFDD F0DD          	movff	postdec2,??_determine_color_new+5
  4137  00109E  EE20 F010          	lfsr	2,16
  4138  0010A2  504F               	movf	determine_color_new@m^0,w,c
  4139  0010A4  26D9               	addwf	fsr2l,f,c
  4140  0010A6  5050               	movf	(determine_color_new@m+1)^0,w,c
  4141  0010A8  22DA               	addwfc	fsr2h,f,c
  4142  0010AA  CFDE F0DE          	movff	postinc2,??_determine_color_new+6
  4143  0010AE  CFDD F0DF          	movff	postdec2,??_determine_color_new+7
  4144  0010B2  0100               	movlb	0	; () banked
  4145  0010B4  51DC               	movf	(??_determine_color_new+4)& (0+255),w,b
  4146  0010B6  5FDE               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4147  0010B8  51DD               	movf	(??_determine_color_new+5)& (0+255),w,b
  4148  0010BA  5BDF               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4149  0010BC  C0DE  F005         	movff	??_determine_color_new+6,___xxtofl@val
  4150  0010C0  C0DF  F006         	movff	??_determine_color_new+7,___xxtofl@val+1
  4151  0010C4  6A07               	clrf	(___xxtofl@val+2)^0,c
  4152  0010C6  6A08               	clrf	(___xxtofl@val+3)^0,c
  4153  0010C8  0E00               	movlw	0
  4154  0010CA  EC90  F015         	call	___xxtofl
  4155  0010CE  C005  F013         	movff	?___xxtofl,___fldiv@b
  4156  0010D2  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4157  0010D6  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4158  0010DA  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4159  0010DE  EC78  F011         	call	___fldiv	;wreg free
  4160  0010E2  C013  F02C         	movff	?___fldiv,___flmul@b
  4161  0010E6  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4162  0010EA  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4163  0010EE  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4164  0010F2  EC63  F00F         	call	___flmul	;wreg free
  4165  0010F6  C02C  F045         	movff	?___flmul,___fltol@f1
  4166  0010FA  C02D  F046         	movff	?___flmul+1,___fltol@f1+1
  4167  0010FE  C02E  F047         	movff	?___flmul+2,___fltol@f1+2
  4168  001102  C02F  F048         	movff	?___flmul+3,___fltol@f1+3
  4169  001106  ECE0  F017         	call	___fltol	;wreg free
  4170  00110A  C045  F0E4         	movff	?___fltol,determine_color_new@BlueRatio
  4171  00110E  C046  F0E5         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  4172  001112                     
  4173                           ;color.c: 105:     RelR = (float)RedRatio / (float)GreenRatio;
  4174  001112  C0E0  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4175  001116  C0E1  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4176  00111A  6A07               	clrf	(___xxtofl@val+2)^0,c
  4177  00111C  6A08               	clrf	(___xxtofl@val+3)^0,c
  4178  00111E  0E00               	movlw	0
  4179  001120  EC90  F015         	call	___xxtofl
  4180  001124  C005  F013         	movff	?___xxtofl,___fldiv@b
  4181  001128  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4182  00112C  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4183  001130  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4184  001134  C0E2  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4185  001138  C0E3  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4186  00113C  6A07               	clrf	(___xxtofl@val+2)^0,c
  4187  00113E  6A08               	clrf	(___xxtofl@val+3)^0,c
  4188  001140  0E00               	movlw	0
  4189  001142  EC90  F015         	call	___xxtofl
  4190  001146  C005  F017         	movff	?___xxtofl,___fldiv@a
  4191  00114A  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4192  00114E  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4193  001152  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4194  001156  EC78  F011         	call	___fldiv	;wreg free
  4195  00115A  C013  F0E8         	movff	?___fldiv,determine_color_new@RelR
  4196  00115E  C014  F0E9         	movff	?___fldiv+1,determine_color_new@RelR+1
  4197  001162  C015  F0EA         	movff	?___fldiv+2,determine_color_new@RelR+2
  4198  001166  C016  F0EB         	movff	?___fldiv+3,determine_color_new@RelR+3
  4199  00116A                     
  4200                           ;color.c: 106:     RelG = (float)RedRatio / (float)BlueRatio;
  4201  00116A  C0E0  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4202  00116E  C0E1  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4203  001172  6A07               	clrf	(___xxtofl@val+2)^0,c
  4204  001174  6A08               	clrf	(___xxtofl@val+3)^0,c
  4205  001176  0E00               	movlw	0
  4206  001178  EC90  F015         	call	___xxtofl
  4207  00117C  C005  F013         	movff	?___xxtofl,___fldiv@b
  4208  001180  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4209  001184  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4210  001188  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4211  00118C  C0E4  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4212  001190  C0E5  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4213  001194  6A07               	clrf	(___xxtofl@val+2)^0,c
  4214  001196  6A08               	clrf	(___xxtofl@val+3)^0,c
  4215  001198  0E00               	movlw	0
  4216  00119A  EC90  F015         	call	___xxtofl
  4217  00119E  C005  F017         	movff	?___xxtofl,___fldiv@a
  4218  0011A2  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4219  0011A6  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4220  0011AA  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4221  0011AE  EC78  F011         	call	___fldiv	;wreg free
  4222  0011B2  C013  F0EC         	movff	?___fldiv,determine_color_new@RelG
  4223  0011B6  C014  F0ED         	movff	?___fldiv+1,determine_color_new@RelG+1
  4224  0011BA  C015  F0EE         	movff	?___fldiv+2,determine_color_new@RelG+2
  4225  0011BE  C016  F0EF         	movff	?___fldiv+3,determine_color_new@RelG+3
  4226  0011C2                     
  4227                           ;color.c: 107:     RelB = (float)BlueRatio / (float)GreenRatio;
  4228  0011C2  C0E4  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4229  0011C6  C0E5  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4230  0011CA  6A07               	clrf	(___xxtofl@val+2)^0,c
  4231  0011CC  6A08               	clrf	(___xxtofl@val+3)^0,c
  4232  0011CE  0E00               	movlw	0
  4233  0011D0  EC90  F015         	call	___xxtofl
  4234  0011D4  C005  F013         	movff	?___xxtofl,___fldiv@b
  4235  0011D8  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4236  0011DC  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4237  0011E0  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4238  0011E4  C0E2  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4239  0011E8  C0E3  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4240  0011EC  6A07               	clrf	(___xxtofl@val+2)^0,c
  4241  0011EE  6A08               	clrf	(___xxtofl@val+3)^0,c
  4242  0011F0  0E00               	movlw	0
  4243  0011F2  EC90  F015         	call	___xxtofl
  4244  0011F6  C005  F017         	movff	?___xxtofl,___fldiv@a
  4245  0011FA  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4246  0011FE  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4247  001202  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4248  001206  EC78  F011         	call	___fldiv	;wreg free
  4249  00120A  C013  F0F0         	movff	?___fldiv,determine_color_new@RelB
  4250  00120E  C014  F0F1         	movff	?___fldiv+1,determine_color_new@RelB+1
  4251  001212  C015  F0F2         	movff	?___fldiv+2,determine_color_new@RelB+2
  4252  001216  C016  F0F3         	movff	?___fldiv+3,determine_color_new@RelB+3
  4253  00121A                     
  4254                           ;color.c: 110:     if (isbtw(RelR,5.1,9.9)==1 && isbtw(RelG,2.2,3.4)==1 && isbtw(RelB,1.
      +                          8,3.1)==1)
  4255  00121A  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4256  00121E  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4257  001222  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4258  001226  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4259  00122A  0E33               	movlw	51
  4260  00122C  6E15               	movwf	isbtw@low^0,c
  4261  00122E  0E33               	movlw	51
  4262  001230  6E16               	movwf	(isbtw@low+1)^0,c
  4263  001232  0EA3               	movlw	163
  4264  001234  6E17               	movwf	(isbtw@low+2)^0,c
  4265  001236  0E40               	movlw	64
  4266  001238  6E18               	movwf	(isbtw@low+3)^0,c
  4267  00123A  0E66               	movlw	102
  4268  00123C  6E19               	movwf	isbtw@high^0,c
  4269  00123E  0E66               	movlw	102
  4270  001240  6E1A               	movwf	(isbtw@high+1)^0,c
  4271  001242  0E1E               	movlw	30
  4272  001244  6E1B               	movwf	(isbtw@high+2)^0,c
  4273  001246  0E41               	movlw	65
  4274  001248  6E1C               	movwf	(isbtw@high+3)^0,c
  4275  00124A  ECAD  F019         	call	_isbtw	;wreg free
  4276  00124E  0411               	decf	?_isbtw^0,w,c
  4277  001250  1012               	iorwf	(?_isbtw+1)^0,w,c
  4278  001252  A4D8               	btfss	status,2,c
  4279  001254  EF2E  F009         	goto	u3791
  4280  001258  EF30  F009         	goto	u3790
  4281  00125C                     u3791:
  4282  00125C  EF7B  F009         	goto	l3768
  4283  001260                     u3790:
  4284  001260  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4285  001264  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4286  001268  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4287  00126C  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4288  001270  0ECD               	movlw	205
  4289  001272  6E15               	movwf	isbtw@low^0,c
  4290  001274  0ECC               	movlw	204
  4291  001276  6E16               	movwf	(isbtw@low+1)^0,c
  4292  001278  0E0C               	movlw	12
  4293  00127A  6E17               	movwf	(isbtw@low+2)^0,c
  4294  00127C  0E40               	movlw	64
  4295  00127E  6E18               	movwf	(isbtw@low+3)^0,c
  4296  001280  0E9A               	movlw	154
  4297  001282  6E19               	movwf	isbtw@high^0,c
  4298  001284  0E99               	movlw	153
  4299  001286  6E1A               	movwf	(isbtw@high+1)^0,c
  4300  001288  0E59               	movlw	89
  4301  00128A  6E1B               	movwf	(isbtw@high+2)^0,c
  4302  00128C  0E40               	movlw	64
  4303  00128E  6E1C               	movwf	(isbtw@high+3)^0,c
  4304  001290  ECAD  F019         	call	_isbtw	;wreg free
  4305  001294  0411               	decf	?_isbtw^0,w,c
  4306  001296  1012               	iorwf	(?_isbtw+1)^0,w,c
  4307  001298  A4D8               	btfss	status,2,c
  4308  00129A  EF51  F009         	goto	u3801
  4309  00129E  EF53  F009         	goto	u3800
  4310  0012A2                     u3801:
  4311  0012A2  EF7B  F009         	goto	l3768
  4312  0012A6                     u3800:
  4313  0012A6  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4314  0012AA  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4315  0012AE  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4316  0012B2  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4317  0012B6  0E66               	movlw	102
  4318  0012B8  6E15               	movwf	isbtw@low^0,c
  4319  0012BA  0E66               	movlw	102
  4320  0012BC  6E16               	movwf	(isbtw@low+1)^0,c
  4321  0012BE  0EE6               	movlw	230
  4322  0012C0  6E17               	movwf	(isbtw@low+2)^0,c
  4323  0012C2  0E3F               	movlw	63
  4324  0012C4  6E18               	movwf	(isbtw@low+3)^0,c
  4325  0012C6  0E66               	movlw	102
  4326  0012C8  6E19               	movwf	isbtw@high^0,c
  4327  0012CA  0E66               	movlw	102
  4328  0012CC  6E1A               	movwf	(isbtw@high+1)^0,c
  4329  0012CE  0E46               	movlw	70
  4330  0012D0  6E1B               	movwf	(isbtw@high+2)^0,c
  4331  0012D2  0E40               	movlw	64
  4332  0012D4  6E1C               	movwf	(isbtw@high+3)^0,c
  4333  0012D6  ECAD  F019         	call	_isbtw	;wreg free
  4334  0012DA  0411               	decf	?_isbtw^0,w,c
  4335  0012DC  1012               	iorwf	(?_isbtw+1)^0,w,c
  4336  0012DE  A4D8               	btfss	status,2,c
  4337  0012E0  EF74  F009         	goto	u3811
  4338  0012E4  EF76  F009         	goto	u3810
  4339  0012E8                     u3811:
  4340  0012E8  EF7B  F009         	goto	l3768
  4341  0012EC                     u3810:
  4342  0012EC                     
  4343                           ;color.c: 111:     {out = 0;}
  4344  0012EC  0E00               	movlw	0
  4345  0012EE  0100               	movlb	0	; () banked
  4346  0012F0  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4347  0012F2  0E00               	movlw	0
  4348  0012F4  6FE6               	movwf	determine_color_new@out& (0+255),b
  4349  0012F6                     l3768:
  4350                           
  4351                           ;color.c: 114:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1)
  4352  0012F6  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4353  0012FA  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4354  0012FE  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4355  001302  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4356  001306  0ECD               	movlw	205
  4357  001308  6E15               	movwf	isbtw@low^0,c
  4358  00130A  0ECC               	movlw	204
  4359  00130C  6E16               	movwf	(isbtw@low+1)^0,c
  4360  00130E  0E4C               	movlw	76
  4361  001310  6E17               	movwf	(isbtw@low+2)^0,c
  4362  001312  0E3E               	movlw	62
  4363  001314  6E18               	movwf	(isbtw@low+3)^0,c
  4364  001316  0E48               	movlw	72
  4365  001318  6E19               	movwf	isbtw@high^0,c
  4366  00131A  0EE1               	movlw	225
  4367  00131C  6E1A               	movwf	(isbtw@high+1)^0,c
  4368  00131E  0EFA               	movlw	250
  4369  001320  6E1B               	movwf	(isbtw@high+2)^0,c
  4370  001322  0E3E               	movlw	62
  4371  001324  6E1C               	movwf	(isbtw@high+3)^0,c
  4372  001326  ECAD  F019         	call	_isbtw	;wreg free
  4373  00132A  0411               	decf	?_isbtw^0,w,c
  4374  00132C  1012               	iorwf	(?_isbtw+1)^0,w,c
  4375  00132E  A4D8               	btfss	status,2,c
  4376  001330  EF9C  F009         	goto	u3821
  4377  001334  EF9E  F009         	goto	u3820
  4378  001338                     u3821:
  4379  001338  EFE9  F009         	goto	l3776
  4380  00133C                     u3820:
  4381  00133C  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4382  001340  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4383  001344  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4384  001348  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4385  00134C  0E29               	movlw	41
  4386  00134E  6E15               	movwf	isbtw@low^0,c
  4387  001350  0E5C               	movlw	92
  4388  001352  6E16               	movwf	(isbtw@low+1)^0,c
  4389  001354  0E8F               	movlw	143
  4390  001356  6E17               	movwf	(isbtw@low+2)^0,c
  4391  001358  0E3E               	movlw	62
  4392  00135A  6E18               	movwf	(isbtw@low+3)^0,c
  4393  00135C  0E3D               	movlw	61
  4394  00135E  6E19               	movwf	isbtw@high^0,c
  4395  001360  0E0A               	movlw	10
  4396  001362  6E1A               	movwf	(isbtw@high+1)^0,c
  4397  001364  0E17               	movlw	23
  4398  001366  6E1B               	movwf	(isbtw@high+2)^0,c
  4399  001368  0E3F               	movlw	63
  4400  00136A  6E1C               	movwf	(isbtw@high+3)^0,c
  4401  00136C  ECAD  F019         	call	_isbtw	;wreg free
  4402  001370  0411               	decf	?_isbtw^0,w,c
  4403  001372  1012               	iorwf	(?_isbtw+1)^0,w,c
  4404  001374  A4D8               	btfss	status,2,c
  4405  001376  EFBF  F009         	goto	u3831
  4406  00137A  EFC1  F009         	goto	u3830
  4407  00137E                     u3831:
  4408  00137E  EFE9  F009         	goto	l3776
  4409  001382                     u3830:
  4410  001382  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4411  001386  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4412  00138A  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4413  00138E  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4414  001392  0E33               	movlw	51
  4415  001394  6E15               	movwf	isbtw@low^0,c
  4416  001396  0E33               	movlw	51
  4417  001398  6E16               	movwf	(isbtw@low+1)^0,c
  4418  00139A  0E33               	movlw	51
  4419  00139C  6E17               	movwf	(isbtw@low+2)^0,c
  4420  00139E  0E3F               	movlw	63
  4421  0013A0  6E18               	movwf	(isbtw@low+3)^0,c
  4422  0013A2  0E66               	movlw	102
  4423  0013A4  6E19               	movwf	isbtw@high^0,c
  4424  0013A6  0E66               	movlw	102
  4425  0013A8  6E1A               	movwf	(isbtw@high+1)^0,c
  4426  0013AA  0E66               	movlw	102
  4427  0013AC  6E1B               	movwf	(isbtw@high+2)^0,c
  4428  0013AE  0E3F               	movlw	63
  4429  0013B0  6E1C               	movwf	(isbtw@high+3)^0,c
  4430  0013B2  ECAD  F019         	call	_isbtw	;wreg free
  4431  0013B6  0411               	decf	?_isbtw^0,w,c
  4432  0013B8  1012               	iorwf	(?_isbtw+1)^0,w,c
  4433  0013BA  A4D8               	btfss	status,2,c
  4434  0013BC  EFE2  F009         	goto	u3841
  4435  0013C0  EFE4  F009         	goto	u3840
  4436  0013C4                     u3841:
  4437  0013C4  EFE9  F009         	goto	l3776
  4438  0013C8                     u3840:
  4439  0013C8                     
  4440                           ;color.c: 115:     {out = 1;}
  4441  0013C8  0E00               	movlw	0
  4442  0013CA  0100               	movlb	0	; () banked
  4443  0013CC  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4444  0013CE  0E01               	movlw	1
  4445  0013D0  6FE6               	movwf	determine_color_new@out& (0+255),b
  4446  0013D2                     l3776:
  4447                           
  4448                           ;color.c: 118:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1)
  4449  0013D2  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4450  0013D6  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4451  0013DA  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4452  0013DE  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4453  0013E2  0ECD               	movlw	205
  4454  0013E4  6E15               	movwf	isbtw@low^0,c
  4455  0013E6  0ECC               	movlw	204
  4456  0013E8  6E16               	movwf	(isbtw@low+1)^0,c
  4457  0013EA  0ECC               	movlw	204
  4458  0013EC  6E17               	movwf	(isbtw@low+2)^0,c
  4459  0013EE  0E3D               	movlw	61
  4460  0013F0  6E18               	movwf	(isbtw@low+3)^0,c
  4461  0013F2  0ECD               	movlw	205
  4462  0013F4  6E19               	movwf	isbtw@high^0,c
  4463  0013F6  0ECC               	movlw	204
  4464  0013F8  6E1A               	movwf	(isbtw@high+1)^0,c
  4465  0013FA  0E0C               	movlw	12
  4466  0013FC  6E1B               	movwf	(isbtw@high+2)^0,c
  4467  0013FE  0E3F               	movlw	63
  4468  001400  6E1C               	movwf	(isbtw@high+3)^0,c
  4469  001402  ECAD  F019         	call	_isbtw	;wreg free
  4470  001406  0411               	decf	?_isbtw^0,w,c
  4471  001408  1012               	iorwf	(?_isbtw+1)^0,w,c
  4472  00140A  A4D8               	btfss	status,2,c
  4473  00140C  EF0A  F00A         	goto	u3851
  4474  001410  EF0C  F00A         	goto	u3850
  4475  001414                     u3851:
  4476  001414  EF57  F00A         	goto	l3784
  4477  001418                     u3850:
  4478  001418  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4479  00141C  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4480  001420  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4481  001424  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4482  001428  0ECD               	movlw	205
  4483  00142A  6E15               	movwf	isbtw@low^0,c
  4484  00142C  0ECC               	movlw	204
  4485  00142E  6E16               	movwf	(isbtw@low+1)^0,c
  4486  001430  0ECC               	movlw	204
  4487  001432  6E17               	movwf	(isbtw@low+2)^0,c
  4488  001434  0E3D               	movlw	61
  4489  001436  6E18               	movwf	(isbtw@low+3)^0,c
  4490  001438  0E14               	movlw	20
  4491  00143A  6E19               	movwf	isbtw@high^0,c
  4492  00143C  0EAE               	movlw	174
  4493  00143E  6E1A               	movwf	(isbtw@high+1)^0,c
  4494  001440  0EC7               	movlw	199
  4495  001442  6E1B               	movwf	(isbtw@high+2)^0,c
  4496  001444  0E3E               	movlw	62
  4497  001446  6E1C               	movwf	(isbtw@high+3)^0,c
  4498  001448  ECAD  F019         	call	_isbtw	;wreg free
  4499  00144C  0411               	decf	?_isbtw^0,w,c
  4500  00144E  1012               	iorwf	(?_isbtw+1)^0,w,c
  4501  001450  A4D8               	btfss	status,2,c
  4502  001452  EF2D  F00A         	goto	u3861
  4503  001456  EF2F  F00A         	goto	u3860
  4504  00145A                     u3861:
  4505  00145A  EF57  F00A         	goto	l3784
  4506  00145E                     u3860:
  4507  00145E  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4508  001462  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4509  001466  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4510  00146A  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4511  00146E  0E00               	movlw	0
  4512  001470  6E15               	movwf	isbtw@low^0,c
  4513  001472  0E00               	movlw	0
  4514  001474  6E16               	movwf	(isbtw@low+1)^0,c
  4515  001476  0E80               	movlw	128
  4516  001478  6E17               	movwf	(isbtw@low+2)^0,c
  4517  00147A  0E3F               	movlw	63
  4518  00147C  6E18               	movwf	(isbtw@low+3)^0,c
  4519  00147E  0E9A               	movlw	154
  4520  001480  6E19               	movwf	isbtw@high^0,c
  4521  001482  0E99               	movlw	153
  4522  001484  6E1A               	movwf	(isbtw@high+1)^0,c
  4523  001486  0E99               	movlw	153
  4524  001488  6E1B               	movwf	(isbtw@high+2)^0,c
  4525  00148A  0E3F               	movlw	63
  4526  00148C  6E1C               	movwf	(isbtw@high+3)^0,c
  4527  00148E  ECAD  F019         	call	_isbtw	;wreg free
  4528  001492  0411               	decf	?_isbtw^0,w,c
  4529  001494  1012               	iorwf	(?_isbtw+1)^0,w,c
  4530  001496  A4D8               	btfss	status,2,c
  4531  001498  EF50  F00A         	goto	u3871
  4532  00149C  EF52  F00A         	goto	u3870
  4533  0014A0                     u3871:
  4534  0014A0  EF57  F00A         	goto	l3784
  4535  0014A4                     u3870:
  4536  0014A4                     
  4537                           ;color.c: 119:     {out = 2;}
  4538  0014A4  0E00               	movlw	0
  4539  0014A6  0100               	movlb	0	; () banked
  4540  0014A8  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4541  0014AA  0E02               	movlw	2
  4542  0014AC  6FE6               	movwf	determine_color_new@out& (0+255),b
  4543  0014AE                     l3784:
  4544                           
  4545                           ;color.c: 122:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1)
  4546  0014AE  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4547  0014B2  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4548  0014B6  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4549  0014BA  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4550  0014BE  0E9A               	movlw	154
  4551  0014C0  6E15               	movwf	isbtw@low^0,c
  4552  0014C2  0E99               	movlw	153
  4553  0014C4  6E16               	movwf	(isbtw@low+1)^0,c
  4554  0014C6  0E99               	movlw	153
  4555  0014C8  6E17               	movwf	(isbtw@low+2)^0,c
  4556  0014CA  0E3F               	movlw	63
  4557  0014CC  6E18               	movwf	(isbtw@low+3)^0,c
  4558  0014CE  0E33               	movlw	51
  4559  0014D0  6E19               	movwf	isbtw@high^0,c
  4560  0014D2  0E33               	movlw	51
  4561  0014D4  6E1A               	movwf	(isbtw@high+1)^0,c
  4562  0014D6  0EB3               	movlw	179
  4563  0014D8  6E1B               	movwf	(isbtw@high+2)^0,c
  4564  0014DA  0E3F               	movlw	63
  4565  0014DC  6E1C               	movwf	(isbtw@high+3)^0,c
  4566  0014DE  ECAD  F019         	call	_isbtw	;wreg free
  4567  0014E2  0411               	decf	?_isbtw^0,w,c
  4568  0014E4  1012               	iorwf	(?_isbtw+1)^0,w,c
  4569  0014E6  A4D8               	btfss	status,2,c
  4570  0014E8  EF78  F00A         	goto	u3881
  4571  0014EC  EF7A  F00A         	goto	u3880
  4572  0014F0                     u3881:
  4573  0014F0  EFC5  F00A         	goto	l3792
  4574  0014F4                     u3880:
  4575  0014F4  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4576  0014F8  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4577  0014FC  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4578  001500  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4579  001504  0E00               	movlw	0
  4580  001506  6E15               	movwf	isbtw@low^0,c
  4581  001508  0E00               	movlw	0
  4582  00150A  6E16               	movwf	(isbtw@low+1)^0,c
  4583  00150C  0EC0               	movlw	192
  4584  00150E  6E17               	movwf	(isbtw@low+2)^0,c
  4585  001510  0E3F               	movlw	63
  4586  001512  6E18               	movwf	(isbtw@low+3)^0,c
  4587  001514  0EEC               	movlw	236
  4588  001516  6E19               	movwf	isbtw@high^0,c
  4589  001518  0E51               	movlw	81
  4590  00151A  6E1A               	movwf	(isbtw@high+1)^0,c
  4591  00151C  0ED8               	movlw	216
  4592  00151E  6E1B               	movwf	(isbtw@high+2)^0,c
  4593  001520  0E3F               	movlw	63
  4594  001522  6E1C               	movwf	(isbtw@high+3)^0,c
  4595  001524  ECAD  F019         	call	_isbtw	;wreg free
  4596  001528  0411               	decf	?_isbtw^0,w,c
  4597  00152A  1012               	iorwf	(?_isbtw+1)^0,w,c
  4598  00152C  A4D8               	btfss	status,2,c
  4599  00152E  EF9B  F00A         	goto	u3891
  4600  001532  EF9D  F00A         	goto	u3890
  4601  001536                     u3891:
  4602  001536  EFC5  F00A         	goto	l3792
  4603  00153A                     u3890:
  4604  00153A  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4605  00153E  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4606  001542  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4607  001546  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4608  00154A  0ECD               	movlw	205
  4609  00154C  6E15               	movwf	isbtw@low^0,c
  4610  00154E  0ECC               	movlw	204
  4611  001550  6E16               	movwf	(isbtw@low+1)^0,c
  4612  001552  0E4C               	movlw	76
  4613  001554  6E17               	movwf	(isbtw@low+2)^0,c
  4614  001556  0E3F               	movlw	63
  4615  001558  6E18               	movwf	(isbtw@low+3)^0,c
  4616  00155A  0E66               	movlw	102
  4617  00155C  6E19               	movwf	isbtw@high^0,c
  4618  00155E  0E66               	movlw	102
  4619  001560  6E1A               	movwf	(isbtw@high+1)^0,c
  4620  001562  0E66               	movlw	102
  4621  001564  6E1B               	movwf	(isbtw@high+2)^0,c
  4622  001566  0E3F               	movlw	63
  4623  001568  6E1C               	movwf	(isbtw@high+3)^0,c
  4624  00156A  ECAD  F019         	call	_isbtw	;wreg free
  4625  00156E  0411               	decf	?_isbtw^0,w,c
  4626  001570  1012               	iorwf	(?_isbtw+1)^0,w,c
  4627  001572  A4D8               	btfss	status,2,c
  4628  001574  EFBE  F00A         	goto	u3901
  4629  001578  EFC0  F00A         	goto	u3900
  4630  00157C                     u3901:
  4631  00157C  EFC5  F00A         	goto	l3792
  4632  001580                     u3900:
  4633  001580                     
  4634                           ;color.c: 123:     {out = 3;}
  4635  001580  0E00               	movlw	0
  4636  001582  0100               	movlb	0	; () banked
  4637  001584  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4638  001586  0E03               	movlw	3
  4639  001588  6FE6               	movwf	determine_color_new@out& (0+255),b
  4640  00158A                     l3792:
  4641                           
  4642                           ;color.c: 126:     if (isbtw(RelR,1.6,1.83)==1 && isbtw(RelG,1.3,1.50)==1 && isbtw(RelB,
      +                          1.15,1.3)==1)
  4643  00158A  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4644  00158E  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4645  001592  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4646  001596  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4647  00159A  0ECD               	movlw	205
  4648  00159C  6E15               	movwf	isbtw@low^0,c
  4649  00159E  0ECC               	movlw	204
  4650  0015A0  6E16               	movwf	(isbtw@low+1)^0,c
  4651  0015A2  0ECC               	movlw	204
  4652  0015A4  6E17               	movwf	(isbtw@low+2)^0,c
  4653  0015A6  0E3F               	movlw	63
  4654  0015A8  6E18               	movwf	(isbtw@low+3)^0,c
  4655  0015AA  0E71               	movlw	113
  4656  0015AC  6E19               	movwf	isbtw@high^0,c
  4657  0015AE  0E3D               	movlw	61
  4658  0015B0  6E1A               	movwf	(isbtw@high+1)^0,c
  4659  0015B2  0EEA               	movlw	234
  4660  0015B4  6E1B               	movwf	(isbtw@high+2)^0,c
  4661  0015B6  0E3F               	movlw	63
  4662  0015B8  6E1C               	movwf	(isbtw@high+3)^0,c
  4663  0015BA  ECAD  F019         	call	_isbtw	;wreg free
  4664  0015BE  0411               	decf	?_isbtw^0,w,c
  4665  0015C0  1012               	iorwf	(?_isbtw+1)^0,w,c
  4666  0015C2  A4D8               	btfss	status,2,c
  4667  0015C4  EFE6  F00A         	goto	u3911
  4668  0015C8  EFE8  F00A         	goto	u3910
  4669  0015CC                     u3911:
  4670  0015CC  EF33  F00B         	goto	l3800
  4671  0015D0                     u3910:
  4672  0015D0  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4673  0015D4  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4674  0015D8  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4675  0015DC  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4676  0015E0  0E66               	movlw	102
  4677  0015E2  6E15               	movwf	isbtw@low^0,c
  4678  0015E4  0E66               	movlw	102
  4679  0015E6  6E16               	movwf	(isbtw@low+1)^0,c
  4680  0015E8  0EA6               	movlw	166
  4681  0015EA  6E17               	movwf	(isbtw@low+2)^0,c
  4682  0015EC  0E3F               	movlw	63
  4683  0015EE  6E18               	movwf	(isbtw@low+3)^0,c
  4684  0015F0  0E00               	movlw	0
  4685  0015F2  6E19               	movwf	isbtw@high^0,c
  4686  0015F4  0E00               	movlw	0
  4687  0015F6  6E1A               	movwf	(isbtw@high+1)^0,c
  4688  0015F8  0EC0               	movlw	192
  4689  0015FA  6E1B               	movwf	(isbtw@high+2)^0,c
  4690  0015FC  0E3F               	movlw	63
  4691  0015FE  6E1C               	movwf	(isbtw@high+3)^0,c
  4692  001600  ECAD  F019         	call	_isbtw	;wreg free
  4693  001604  0411               	decf	?_isbtw^0,w,c
  4694  001606  1012               	iorwf	(?_isbtw+1)^0,w,c
  4695  001608  A4D8               	btfss	status,2,c
  4696  00160A  EF09  F00B         	goto	u3921
  4697  00160E  EF0B  F00B         	goto	u3920
  4698  001612                     u3921:
  4699  001612  EF33  F00B         	goto	l3800
  4700  001616                     u3920:
  4701  001616  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4702  00161A  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4703  00161E  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4704  001622  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4705  001626  0E33               	movlw	51
  4706  001628  6E15               	movwf	isbtw@low^0,c
  4707  00162A  0E33               	movlw	51
  4708  00162C  6E16               	movwf	(isbtw@low+1)^0,c
  4709  00162E  0E93               	movlw	147
  4710  001630  6E17               	movwf	(isbtw@low+2)^0,c
  4711  001632  0E3F               	movlw	63
  4712  001634  6E18               	movwf	(isbtw@low+3)^0,c
  4713  001636  0E66               	movlw	102
  4714  001638  6E19               	movwf	isbtw@high^0,c
  4715  00163A  0E66               	movlw	102
  4716  00163C  6E1A               	movwf	(isbtw@high+1)^0,c
  4717  00163E  0EA6               	movlw	166
  4718  001640  6E1B               	movwf	(isbtw@high+2)^0,c
  4719  001642  0E3F               	movlw	63
  4720  001644  6E1C               	movwf	(isbtw@high+3)^0,c
  4721  001646  ECAD  F019         	call	_isbtw	;wreg free
  4722  00164A  0411               	decf	?_isbtw^0,w,c
  4723  00164C  1012               	iorwf	(?_isbtw+1)^0,w,c
  4724  00164E  A4D8               	btfss	status,2,c
  4725  001650  EF2C  F00B         	goto	u3931
  4726  001654  EF2E  F00B         	goto	u3930
  4727  001658                     u3931:
  4728  001658  EF33  F00B         	goto	l3800
  4729  00165C                     u3930:
  4730  00165C                     
  4731                           ;color.c: 127:     {out = 4;}
  4732  00165C  0E00               	movlw	0
  4733  00165E  0100               	movlb	0	; () banked
  4734  001660  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4735  001662  0E04               	movlw	4
  4736  001664  6FE6               	movwf	determine_color_new@out& (0+255),b
  4737  001666                     l3800:
  4738                           
  4739                           ;color.c: 130:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1)
  4740  001666  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4741  00166A  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4742  00166E  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4743  001672  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4744  001676  0E66               	movlw	102
  4745  001678  6E15               	movwf	isbtw@low^0,c
  4746  00167A  0E66               	movlw	102
  4747  00167C  6E16               	movwf	(isbtw@low+1)^0,c
  4748  00167E  0E46               	movlw	70
  4749  001680  6E17               	movwf	(isbtw@low+2)^0,c
  4750  001682  0E40               	movlw	64
  4751  001684  6E18               	movwf	(isbtw@low+3)^0,c
  4752  001686  0E33               	movlw	51
  4753  001688  6E19               	movwf	isbtw@high^0,c
  4754  00168A  0E33               	movlw	51
  4755  00168C  6E1A               	movwf	(isbtw@high+1)^0,c
  4756  00168E  0E9B               	movlw	155
  4757  001690  6E1B               	movwf	(isbtw@high+2)^0,c
  4758  001692  0E40               	movlw	64
  4759  001694  6E1C               	movwf	(isbtw@high+3)^0,c
  4760  001696  ECAD  F019         	call	_isbtw	;wreg free
  4761  00169A  0411               	decf	?_isbtw^0,w,c
  4762  00169C  1012               	iorwf	(?_isbtw+1)^0,w,c
  4763  00169E  A4D8               	btfss	status,2,c
  4764  0016A0  EF54  F00B         	goto	u3941
  4765  0016A4  EF56  F00B         	goto	u3940
  4766  0016A8                     u3941:
  4767  0016A8  EFA1  F00B         	goto	l3808
  4768  0016AC                     u3940:
  4769  0016AC  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4770  0016B0  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4771  0016B4  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4772  0016B8  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4773  0016BC  0ECD               	movlw	205
  4774  0016BE  6E15               	movwf	isbtw@low^0,c
  4775  0016C0  0ECC               	movlw	204
  4776  0016C2  6E16               	movwf	(isbtw@low+1)^0,c
  4777  0016C4  0E0C               	movlw	12
  4778  0016C6  6E17               	movwf	(isbtw@low+2)^0,c
  4779  0016C8  0E40               	movlw	64
  4780  0016CA  6E18               	movwf	(isbtw@low+3)^0,c
  4781  0016CC  0EB8               	movlw	184
  4782  0016CE  6E19               	movwf	isbtw@high^0,c
  4783  0016D0  0E1E               	movlw	30
  4784  0016D2  6E1A               	movwf	(isbtw@high+1)^0,c
  4785  0016D4  0E35               	movlw	53
  4786  0016D6  6E1B               	movwf	(isbtw@high+2)^0,c
  4787  0016D8  0E40               	movlw	64
  4788  0016DA  6E1C               	movwf	(isbtw@high+3)^0,c
  4789  0016DC  ECAD  F019         	call	_isbtw	;wreg free
  4790  0016E0  0411               	decf	?_isbtw^0,w,c
  4791  0016E2  1012               	iorwf	(?_isbtw+1)^0,w,c
  4792  0016E4  A4D8               	btfss	status,2,c
  4793  0016E6  EF77  F00B         	goto	u3951
  4794  0016EA  EF79  F00B         	goto	u3950
  4795  0016EE                     u3951:
  4796  0016EE  EFA1  F00B         	goto	l3808
  4797  0016F2                     u3950:
  4798  0016F2  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4799  0016F6  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4800  0016FA  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4801  0016FE  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4802  001702  0E5C               	movlw	92
  4803  001704  6E15               	movwf	isbtw@low^0,c
  4804  001706  0E8F               	movlw	143
  4805  001708  6E16               	movwf	(isbtw@low+1)^0,c
  4806  00170A  0EA2               	movlw	162
  4807  00170C  6E17               	movwf	(isbtw@low+2)^0,c
  4808  00170E  0E3F               	movlw	63
  4809  001710  6E18               	movwf	(isbtw@low+3)^0,c
  4810  001712  0E66               	movlw	102
  4811  001714  6E19               	movwf	isbtw@high^0,c
  4812  001716  0E66               	movlw	102
  4813  001718  6E1A               	movwf	(isbtw@high+1)^0,c
  4814  00171A  0EE6               	movlw	230
  4815  00171C  6E1B               	movwf	(isbtw@high+2)^0,c
  4816  00171E  0E3F               	movlw	63
  4817  001720  6E1C               	movwf	(isbtw@high+3)^0,c
  4818  001722  ECAD  F019         	call	_isbtw	;wreg free
  4819  001726  0411               	decf	?_isbtw^0,w,c
  4820  001728  1012               	iorwf	(?_isbtw+1)^0,w,c
  4821  00172A  A4D8               	btfss	status,2,c
  4822  00172C  EF9A  F00B         	goto	u3961
  4823  001730  EF9C  F00B         	goto	u3960
  4824  001734                     u3961:
  4825  001734  EFA1  F00B         	goto	l3808
  4826  001738                     u3960:
  4827  001738                     
  4828                           ;color.c: 131:     {out = 5;}
  4829  001738  0E00               	movlw	0
  4830  00173A  0100               	movlb	0	; () banked
  4831  00173C  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4832  00173E  0E05               	movlw	5
  4833  001740  6FE6               	movwf	determine_color_new@out& (0+255),b
  4834  001742                     l3808:
  4835                           
  4836                           ;color.c: 134:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1)
  4837  001742  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4838  001746  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4839  00174A  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4840  00174E  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4841  001752  0E9A               	movlw	154
  4842  001754  6E15               	movwf	isbtw@low^0,c
  4843  001756  0E99               	movlw	153
  4844  001758  6E16               	movwf	(isbtw@low+1)^0,c
  4845  00175A  0E19               	movlw	25
  4846  00175C  6E17               	movwf	(isbtw@low+2)^0,c
  4847  00175E  0E3F               	movlw	63
  4848  001760  6E18               	movwf	(isbtw@low+3)^0,c
  4849  001762  0EF6               	movlw	246
  4850  001764  6E19               	movwf	isbtw@high^0,c
  4851  001766  0E28               	movlw	40
  4852  001768  6E1A               	movwf	(isbtw@high+1)^0,c
  4853  00176A  0E5C               	movlw	92
  4854  00176C  6E1B               	movwf	(isbtw@high+2)^0,c
  4855  00176E  0E3F               	movlw	63
  4856  001770  6E1C               	movwf	(isbtw@high+3)^0,c
  4857  001772  ECAD  F019         	call	_isbtw	;wreg free
  4858  001776  0411               	decf	?_isbtw^0,w,c
  4859  001778  1012               	iorwf	(?_isbtw+1)^0,w,c
  4860  00177A  A4D8               	btfss	status,2,c
  4861  00177C  EFC2  F00B         	goto	u3971
  4862  001780  EFC4  F00B         	goto	u3970
  4863  001784                     u3971:
  4864  001784  EF0F  F00C         	goto	l3816
  4865  001788                     u3970:
  4866  001788  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4867  00178C  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4868  001790  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4869  001794  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4870  001798  0E9A               	movlw	154
  4871  00179A  6E15               	movwf	isbtw@low^0,c
  4872  00179C  0E99               	movlw	153
  4873  00179E  6E16               	movwf	(isbtw@low+1)^0,c
  4874  0017A0  0E19               	movlw	25
  4875  0017A2  6E17               	movwf	(isbtw@low+2)^0,c
  4876  0017A4  0E3F               	movlw	63
  4877  0017A6  6E18               	movwf	(isbtw@low+3)^0,c
  4878  0017A8  0E9A               	movlw	154
  4879  0017AA  6E19               	movwf	isbtw@high^0,c
  4880  0017AC  0E99               	movlw	153
  4881  0017AE  6E1A               	movwf	(isbtw@high+1)^0,c
  4882  0017B0  0E59               	movlw	89
  4883  0017B2  6E1B               	movwf	(isbtw@high+2)^0,c
  4884  0017B4  0E3F               	movlw	63
  4885  0017B6  6E1C               	movwf	(isbtw@high+3)^0,c
  4886  0017B8  ECAD  F019         	call	_isbtw	;wreg free
  4887  0017BC  0411               	decf	?_isbtw^0,w,c
  4888  0017BE  1012               	iorwf	(?_isbtw+1)^0,w,c
  4889  0017C0  A4D8               	btfss	status,2,c
  4890  0017C2  EFE5  F00B         	goto	u3981
  4891  0017C6  EFE7  F00B         	goto	u3980
  4892  0017CA                     u3981:
  4893  0017CA  EF0F  F00C         	goto	l3816
  4894  0017CE                     u3980:
  4895  0017CE  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4896  0017D2  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4897  0017D6  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4898  0017DA  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4899  0017DE  0E33               	movlw	51
  4900  0017E0  6E15               	movwf	isbtw@low^0,c
  4901  0017E2  0E33               	movlw	51
  4902  0017E4  6E16               	movwf	(isbtw@low+1)^0,c
  4903  0017E6  0E73               	movlw	115
  4904  0017E8  6E17               	movwf	(isbtw@low+2)^0,c
  4905  0017EA  0E3F               	movlw	63
  4906  0017EC  6E18               	movwf	(isbtw@low+3)^0,c
  4907  0017EE  0E29               	movlw	41
  4908  0017F0  6E19               	movwf	isbtw@high^0,c
  4909  0017F2  0E5C               	movlw	92
  4910  0017F4  6E1A               	movwf	(isbtw@high+1)^0,c
  4911  0017F6  0E8F               	movlw	143
  4912  0017F8  6E1B               	movwf	(isbtw@high+2)^0,c
  4913  0017FA  0E3F               	movlw	63
  4914  0017FC  6E1C               	movwf	(isbtw@high+3)^0,c
  4915  0017FE  ECAD  F019         	call	_isbtw	;wreg free
  4916  001802  0411               	decf	?_isbtw^0,w,c
  4917  001804  1012               	iorwf	(?_isbtw+1)^0,w,c
  4918  001806  A4D8               	btfss	status,2,c
  4919  001808  EF08  F00C         	goto	u3991
  4920  00180C  EF0A  F00C         	goto	u3990
  4921  001810                     u3991:
  4922  001810  EF0F  F00C         	goto	l3816
  4923  001814                     u3990:
  4924  001814                     
  4925                           ;color.c: 135:     {out = 6;}
  4926  001814  0E00               	movlw	0
  4927  001816  0100               	movlb	0	; () banked
  4928  001818  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  4929  00181A  0E06               	movlw	6
  4930  00181C  6FE6               	movwf	determine_color_new@out& (0+255),b
  4931  00181E                     l3816:
  4932                           
  4933                           ;color.c: 138:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1)
  4934  00181E  C0E8  F011         	movff	determine_color_new@RelR,isbtw@num
  4935  001822  C0E9  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4936  001826  C0EA  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4937  00182A  C0EB  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4938  00182E  0E66               	movlw	102
  4939  001830  6E15               	movwf	isbtw@low^0,c
  4940  001832  0E66               	movlw	102
  4941  001834  6E16               	movwf	(isbtw@low+1)^0,c
  4942  001836  0E66               	movlw	102
  4943  001838  6E17               	movwf	(isbtw@low+2)^0,c
  4944  00183A  0E3F               	movlw	63
  4945  00183C  6E18               	movwf	(isbtw@low+3)^0,c
  4946  00183E  0ECD               	movlw	205
  4947  001840  6E19               	movwf	isbtw@high^0,c
  4948  001842  0ECC               	movlw	204
  4949  001844  6E1A               	movwf	(isbtw@high+1)^0,c
  4950  001846  0E8C               	movlw	140
  4951  001848  6E1B               	movwf	(isbtw@high+2)^0,c
  4952  00184A  0E3F               	movlw	63
  4953  00184C  6E1C               	movwf	(isbtw@high+3)^0,c
  4954  00184E  ECAD  F019         	call	_isbtw	;wreg free
  4955  001852  0411               	decf	?_isbtw^0,w,c
  4956  001854  1012               	iorwf	(?_isbtw+1)^0,w,c
  4957  001856  A4D8               	btfss	status,2,c
  4958  001858  EF30  F00C         	goto	u4001
  4959  00185C  EF32  F00C         	goto	u4000
  4960  001860                     u4001:
  4961  001860  EF7D  F00C         	goto	l3824
  4962  001864                     u4000:
  4963  001864  C0EC  F011         	movff	determine_color_new@RelG,isbtw@num
  4964  001868  C0ED  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4965  00186C  C0EE  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4966  001870  C0EF  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4967  001874  0ECD               	movlw	205
  4968  001876  6E15               	movwf	isbtw@low^0,c
  4969  001878  0ECC               	movlw	204
  4970  00187A  6E16               	movwf	(isbtw@low+1)^0,c
  4971  00187C  0E4C               	movlw	76
  4972  00187E  6E17               	movwf	(isbtw@low+2)^0,c
  4973  001880  0E3F               	movlw	63
  4974  001882  6E18               	movwf	(isbtw@low+3)^0,c
  4975  001884  0E00               	movlw	0
  4976  001886  6E19               	movwf	isbtw@high^0,c
  4977  001888  0E00               	movlw	0
  4978  00188A  6E1A               	movwf	(isbtw@high+1)^0,c
  4979  00188C  0E80               	movlw	128
  4980  00188E  6E1B               	movwf	(isbtw@high+2)^0,c
  4981  001890  0E3F               	movlw	63
  4982  001892  6E1C               	movwf	(isbtw@high+3)^0,c
  4983  001894  ECAD  F019         	call	_isbtw	;wreg free
  4984  001898  0411               	decf	?_isbtw^0,w,c
  4985  00189A  1012               	iorwf	(?_isbtw+1)^0,w,c
  4986  00189C  A4D8               	btfss	status,2,c
  4987  00189E  EF53  F00C         	goto	u4011
  4988  0018A2  EF55  F00C         	goto	u4010
  4989  0018A6                     u4011:
  4990  0018A6  EF7D  F00C         	goto	l3824
  4991  0018AA                     u4010:
  4992  0018AA  C0F0  F011         	movff	determine_color_new@RelB,isbtw@num
  4993  0018AE  C0F1  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  4994  0018B2  C0F2  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  4995  0018B6  C0F3  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  4996  0018BA  0E33               	movlw	51
  4997  0018BC  6E15               	movwf	isbtw@low^0,c
  4998  0018BE  0E33               	movlw	51
  4999  0018C0  6E16               	movwf	(isbtw@low+1)^0,c
  5000  0018C2  0E73               	movlw	115
  5001  0018C4  6E17               	movwf	(isbtw@low+2)^0,c
  5002  0018C6  0E3F               	movlw	63
  5003  0018C8  6E18               	movwf	(isbtw@low+3)^0,c
  5004  0018CA  0ECD               	movlw	205
  5005  0018CC  6E19               	movwf	isbtw@high^0,c
  5006  0018CE  0ECC               	movlw	204
  5007  0018D0  6E1A               	movwf	(isbtw@high+1)^0,c
  5008  0018D2  0E8C               	movlw	140
  5009  0018D4  6E1B               	movwf	(isbtw@high+2)^0,c
  5010  0018D6  0E3F               	movlw	63
  5011  0018D8  6E1C               	movwf	(isbtw@high+3)^0,c
  5012  0018DA  ECAD  F019         	call	_isbtw	;wreg free
  5013  0018DE  0411               	decf	?_isbtw^0,w,c
  5014  0018E0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5015  0018E2  A4D8               	btfss	status,2,c
  5016  0018E4  EF76  F00C         	goto	u4021
  5017  0018E8  EF78  F00C         	goto	u4020
  5018  0018EC                     u4021:
  5019  0018EC  EF7D  F00C         	goto	l3824
  5020  0018F0                     u4020:
  5021  0018F0                     
  5022                           ;color.c: 139:     {out = 7;}
  5023  0018F0  0E00               	movlw	0
  5024  0018F2  0100               	movlb	0	; () banked
  5025  0018F4  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  5026  0018F6  0E07               	movlw	7
  5027  0018F8  6FE6               	movwf	determine_color_new@out& (0+255),b
  5028  0018FA                     l3824:
  5029                           
  5030                           ;color.c: 142:     if (RedRatio < 50 && GreenRatio < 50 && BlueRatio < 50) {out = 8;}
  5031  0018FA  0100               	movlb	0	; () banked
  5032  0018FC  51E1               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  5033  0018FE  E107               	bnz	u4031
  5034  001900  0E32               	movlw	50
  5035  001902  5DE0               	subwf	determine_color_new@RedRatio& (0+255),w,b
  5036  001904  B0D8               	btfsc	status,0,c
  5037  001906  EF87  F00C         	goto	u4031
  5038  00190A  EF89  F00C         	goto	u4030
  5039  00190E                     u4031:
  5040  00190E  EFA3  F00C         	goto	l3832
  5041  001912                     u4030:
  5042  001912                     
  5043                           ; BSR set to: 0
  5044  001912  51E3               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  5045  001914  E107               	bnz	u4041
  5046  001916  0E32               	movlw	50
  5047  001918  5DE2               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  5048  00191A  B0D8               	btfsc	status,0,c
  5049  00191C  EF92  F00C         	goto	u4041
  5050  001920  EF94  F00C         	goto	u4040
  5051  001924                     u4041:
  5052  001924  EFA3  F00C         	goto	l3832
  5053  001928                     u4040:
  5054  001928                     
  5055                           ; BSR set to: 0
  5056  001928  51E5               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  5057  00192A  E107               	bnz	u4051
  5058  00192C  0E32               	movlw	50
  5059  00192E  5DE4               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  5060  001930  B0D8               	btfsc	status,0,c
  5061  001932  EF9D  F00C         	goto	u4051
  5062  001936  EF9F  F00C         	goto	u4050
  5063  00193A                     u4051:
  5064  00193A  EFA3  F00C         	goto	l3832
  5065  00193E                     u4050:
  5066  00193E                     
  5067                           ; BSR set to: 0
  5068  00193E  0E00               	movlw	0
  5069  001940  6FE7               	movwf	(determine_color_new@out+1)& (0+255),b
  5070  001942  0E08               	movlw	8
  5071  001944  6FE6               	movwf	determine_color_new@out& (0+255),b
  5072  001946                     l3832:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;color.c: 144:     return out;
  5076  001946  C0E6  F04F         	movff	determine_color_new@out,?_determine_color_new
  5077  00194A  C0E7  F050         	movff	determine_color_new@out+1,?_determine_color_new+1
  5078  00194E                     
  5079                           ; BSR set to: 0
  5080  00194E  0012               	return		;funcret
  5081  001950                     __end_of_determine_color_new:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _isbtw *****************
  5085 ;; Defined at:
  5086 ;;		line 78 in file "color.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  num             4   16[COMRAM] float 
  5089 ;;  low             4   20[COMRAM] float 
  5090 ;;  high            4   24[COMRAM] float 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  2   16[COMRAM] unsigned int 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5102 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5106 ;;Total ram usage:       12 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 3
  5109 ;; This function calls:
  5110 ;;		___flge
  5111 ;; This function is called by:
  5112 ;;		_determine_color_new
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text19
  5117  00335A                     __ptext19:
  5118                           	callstack 0
  5119  00335A                     _isbtw:
  5120                           	callstack 26
  5121  00335A                     
  5122                           ;color.c: 79:     if (num>=low && num<=high){return 1;}
  5123  00335A  C011  F005         	movff	isbtw@num,___flge@ff1
  5124  00335E  C012  F006         	movff	isbtw@num+1,___flge@ff1+1
  5125  003362  C013  F007         	movff	isbtw@num+2,___flge@ff1+2
  5126  003366  C014  F008         	movff	isbtw@num+3,___flge@ff1+3
  5127  00336A  C015  F009         	movff	isbtw@low,___flge@ff2
  5128  00336E  C016  F00A         	movff	isbtw@low+1,___flge@ff2+1
  5129  003372  C017  F00B         	movff	isbtw@low+2,___flge@ff2+2
  5130  003376  C018  F00C         	movff	isbtw@low+3,___flge@ff2+3
  5131  00337A  EC63  F018         	call	___flge	;wreg free
  5132  00337E  A0D8               	btfss	status,0,c
  5133  003380  EFC4  F019         	goto	u2271
  5134  003384  EFC6  F019         	goto	u2270
  5135  003388                     u2271:
  5136  003388  EFE5  F019         	goto	l2768
  5137  00338C                     u2270:
  5138  00338C  C019  F005         	movff	isbtw@high,___flge@ff1
  5139  003390  C01A  F006         	movff	isbtw@high+1,___flge@ff1+1
  5140  003394  C01B  F007         	movff	isbtw@high+2,___flge@ff1+2
  5141  003398  C01C  F008         	movff	isbtw@high+3,___flge@ff1+3
  5142  00339C  C011  F009         	movff	isbtw@num,___flge@ff2
  5143  0033A0  C012  F00A         	movff	isbtw@num+1,___flge@ff2+1
  5144  0033A4  C013  F00B         	movff	isbtw@num+2,___flge@ff2+2
  5145  0033A8  C014  F00C         	movff	isbtw@num+3,___flge@ff2+3
  5146  0033AC  EC63  F018         	call	___flge	;wreg free
  5147  0033B0  A0D8               	btfss	status,0,c
  5148  0033B2  EFDD  F019         	goto	u2281
  5149  0033B6  EFDF  F019         	goto	u2280
  5150  0033BA                     u2281:
  5151  0033BA  EFE5  F019         	goto	l2768
  5152  0033BE                     u2280:
  5153  0033BE  0E00               	movlw	0
  5154  0033C0  6E12               	movwf	(?_isbtw+1)^0,c
  5155  0033C2  0E01               	movlw	1
  5156  0033C4  6E11               	movwf	?_isbtw^0,c
  5157  0033C6  EFE9  F019         	goto	l50
  5158  0033CA                     l2768:
  5159  0033CA  0E00               	movlw	0
  5160  0033CC  6E12               	movwf	(?_isbtw+1)^0,c
  5161  0033CE  0E00               	movlw	0
  5162  0033D0  6E11               	movwf	?_isbtw^0,c
  5163  0033D2                     l50:
  5164  0033D2  0012               	return		;funcret
  5165  0033D4                     __end_of_isbtw:
  5166                           	callstack 0
  5167                           
  5168 ;; *************** function ___flge *****************
  5169 ;; Defined at:
  5170 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  ff1             4    4[COMRAM] unsigned int 
  5173 ;;  ff2             4    8[COMRAM] unsigned int 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;		None               void
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5185 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5188 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5189 ;;Total ram usage:       12 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 2
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_isbtw
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text20
  5200  0030C6                     __ptext20:
  5201                           	callstack 0
  5202  0030C6                     ___flge:
  5203                           	callstack 26
  5204  0030C6  0E00               	movlw	0
  5205  0030C8  1405               	andwf	___flge@ff1^0,w,c
  5206  0030CA  6E0D               	movwf	??___flge^0,c
  5207  0030CC  0E00               	movlw	0
  5208  0030CE  1406               	andwf	(___flge@ff1+1)^0,w,c
  5209  0030D0  6E0E               	movwf	(??___flge+1)^0,c
  5210  0030D2  0E80               	movlw	128
  5211  0030D4  1407               	andwf	(___flge@ff1+2)^0,w,c
  5212  0030D6  6E0F               	movwf	(??___flge+2)^0,c
  5213  0030D8  0E7F               	movlw	127
  5214  0030DA  1408               	andwf	(___flge@ff1+3)^0,w,c
  5215  0030DC  6E10               	movwf	(??___flge+3)^0,c
  5216  0030DE  500D               	movf	??___flge^0,w,c
  5217  0030E0  100E               	iorwf	(??___flge+1)^0,w,c
  5218  0030E2  100F               	iorwf	(??___flge+2)^0,w,c
  5219  0030E4  1010               	iorwf	(??___flge+3)^0,w,c
  5220  0030E6  A4D8               	btfss	status,2,c
  5221  0030E8  EF78  F018         	goto	u2181
  5222  0030EC  EF7A  F018         	goto	u2180
  5223  0030F0                     u2181:
  5224  0030F0  EF82  F018         	goto	l2666
  5225  0030F4                     u2180:
  5226  0030F4  0E00               	movlw	0
  5227  0030F6  6E05               	movwf	___flge@ff1^0,c
  5228  0030F8  0E00               	movlw	0
  5229  0030FA  6E06               	movwf	(___flge@ff1+1)^0,c
  5230  0030FC  0E00               	movlw	0
  5231  0030FE  6E07               	movwf	(___flge@ff1+2)^0,c
  5232  003100  0E00               	movlw	0
  5233  003102  6E08               	movwf	(___flge@ff1+3)^0,c
  5234  003104                     l2666:
  5235  003104  0E00               	movlw	0
  5236  003106  1409               	andwf	___flge@ff2^0,w,c
  5237  003108  6E0D               	movwf	??___flge^0,c
  5238  00310A  0E00               	movlw	0
  5239  00310C  140A               	andwf	(___flge@ff2+1)^0,w,c
  5240  00310E  6E0E               	movwf	(??___flge+1)^0,c
  5241  003110  0E80               	movlw	128
  5242  003112  140B               	andwf	(___flge@ff2+2)^0,w,c
  5243  003114  6E0F               	movwf	(??___flge+2)^0,c
  5244  003116  0E7F               	movlw	127
  5245  003118  140C               	andwf	(___flge@ff2+3)^0,w,c
  5246  00311A  6E10               	movwf	(??___flge+3)^0,c
  5247  00311C  500D               	movf	??___flge^0,w,c
  5248  00311E  100E               	iorwf	(??___flge+1)^0,w,c
  5249  003120  100F               	iorwf	(??___flge+2)^0,w,c
  5250  003122  1010               	iorwf	(??___flge+3)^0,w,c
  5251  003124  A4D8               	btfss	status,2,c
  5252  003126  EF97  F018         	goto	u2191
  5253  00312A  EF99  F018         	goto	u2190
  5254  00312E                     u2191:
  5255  00312E  EFA1  F018         	goto	l2670
  5256  003132                     u2190:
  5257  003132  0E00               	movlw	0
  5258  003134  6E09               	movwf	___flge@ff2^0,c
  5259  003136  0E00               	movlw	0
  5260  003138  6E0A               	movwf	(___flge@ff2+1)^0,c
  5261  00313A  0E00               	movlw	0
  5262  00313C  6E0B               	movwf	(___flge@ff2+2)^0,c
  5263  00313E  0E00               	movlw	0
  5264  003140  6E0C               	movwf	(___flge@ff2+3)^0,c
  5265  003142                     l2670:
  5266  003142  AE08               	btfss	(___flge@ff1+3)^0,7,c
  5267  003144  EFA6  F018         	goto	u2201
  5268  003148  EFA8  F018         	goto	u2200
  5269  00314C                     u2201:
  5270  00314C  EFB1  F018         	goto	l2674
  5271  003150                     u2200:
  5272  003150  6C05               	negf	___flge@ff1^0,c
  5273  003152  1E06               	comf	(___flge@ff1+1)^0,f,c
  5274  003154  B0D8               	btfsc	status,0,c
  5275  003156  2A06               	incf	(___flge@ff1+1)^0,f,c
  5276  003158  1E07               	comf	(___flge@ff1+2)^0,f,c
  5277  00315A  B0D8               	btfsc	status,0,c
  5278  00315C  2A07               	incf	(___flge@ff1+2)^0,f,c
  5279  00315E  0E80               	movlw	128
  5280  003160  5608               	subfwb	(___flge@ff1+3)^0,f,c
  5281  003162                     l2674:
  5282  003162  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  5283  003164  EFB6  F018         	goto	u2211
  5284  003168  EFB8  F018         	goto	u2210
  5285  00316C                     u2211:
  5286  00316C  EFC1  F018         	goto	l689
  5287  003170                     u2210:
  5288  003170  6C09               	negf	___flge@ff2^0,c
  5289  003172  1E0A               	comf	(___flge@ff2+1)^0,f,c
  5290  003174  B0D8               	btfsc	status,0,c
  5291  003176  2A0A               	incf	(___flge@ff2+1)^0,f,c
  5292  003178  1E0B               	comf	(___flge@ff2+2)^0,f,c
  5293  00317A  B0D8               	btfsc	status,0,c
  5294  00317C  2A0B               	incf	(___flge@ff2+2)^0,f,c
  5295  00317E  0E80               	movlw	128
  5296  003180  560C               	subfwb	(___flge@ff2+3)^0,f,c
  5297  003182                     l689:
  5298  003182  0E00               	movlw	0
  5299  003184  1A05               	xorwf	___flge@ff1^0,f,c
  5300  003186  0E00               	movlw	0
  5301  003188  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  5302  00318A  0E00               	movlw	0
  5303  00318C  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  5304  00318E  0E80               	movlw	128
  5305  003190  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  5306  003192  0E00               	movlw	0
  5307  003194  1A09               	xorwf	___flge@ff2^0,f,c
  5308  003196  0E00               	movlw	0
  5309  003198  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  5310  00319A  0E00               	movlw	0
  5311  00319C  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  5312  00319E  0E80               	movlw	128
  5313  0031A0  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  5314  0031A2  5009               	movf	___flge@ff2^0,w,c
  5315  0031A4  5C05               	subwf	___flge@ff1^0,w,c
  5316  0031A6  500A               	movf	(___flge@ff2+1)^0,w,c
  5317  0031A8  5806               	subwfb	(___flge@ff1+1)^0,w,c
  5318  0031AA  500B               	movf	(___flge@ff2+2)^0,w,c
  5319  0031AC  5807               	subwfb	(___flge@ff1+2)^0,w,c
  5320  0031AE  500C               	movf	(___flge@ff2+3)^0,w,c
  5321  0031B0  5808               	subwfb	(___flge@ff1+3)^0,w,c
  5322  0031B2  B0D8               	btfsc	status,0,c
  5323  0031B4  EFDE  F018         	goto	u2221
  5324  0031B8  EFE0  F018         	goto	u2220
  5325  0031BC                     u2221:
  5326  0031BC  EFE3  F018         	goto	l2680
  5327  0031C0                     u2220:
  5328  0031C0  90D8               	bcf	status,0,c
  5329  0031C2  EFE4  F018         	goto	l694
  5330  0031C6                     l2680:
  5331  0031C6  80D8               	bsf	status,0,c
  5332  0031C8                     l694:
  5333  0031C8  0012               	return		;funcret
  5334  0031CA                     __end_of___flge:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function ___xxtofl *****************
  5338 ;; Defined at:
  5339 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  sign            1    wreg     unsigned char 
  5342 ;;  val             4    4[COMRAM] long 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  sign            1   12[COMRAM] unsigned char 
  5345 ;;  arg             4   14[COMRAM] unsigned long 
  5346 ;;  exp             1   13[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  4    4[COMRAM] unsigned char 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;Total ram usage:       14 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 2
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_determine_color_new
  5367 ;;		_main
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text21
  5372  002B20                     __ptext21:
  5373                           	callstack 0
  5374  002B20                     ___xxtofl:
  5375                           	callstack 27
  5376                           
  5377                           ;incstack = 0
  5378                           ;___xxtofl@sign stored from wreg
  5379  002B20  6E0D               	movwf	___xxtofl@sign^0,c
  5380  002B22  500D               	movf	___xxtofl@sign^0,w,c
  5381  002B24  B4D8               	btfsc	status,2,c
  5382  002B26  EF97  F015         	goto	u2811
  5383  002B2A  EF99  F015         	goto	u2810
  5384  002B2E                     u2811:
  5385  002B2E  EFBB  F015         	goto	l1079
  5386  002B32                     u2810:
  5387  002B32  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  5388  002B34  EFA0  F015         	goto	u2820
  5389  002B38  EF9E  F015         	goto	u2821
  5390  002B3C                     u2821:
  5391  002B3C  EFBB  F015         	goto	l1079
  5392  002B40                     u2820:
  5393  002B40  C005  F009         	movff	___xxtofl@val,??___xxtofl
  5394  002B44  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  5395  002B48  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  5396  002B4C  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  5397  002B50  1E09               	comf	??___xxtofl^0,f,c
  5398  002B52  1E0A               	comf	(??___xxtofl+1)^0,f,c
  5399  002B54  1E0B               	comf	(??___xxtofl+2)^0,f,c
  5400  002B56  1E0C               	comf	(??___xxtofl+3)^0,f,c
  5401  002B58  2A09               	incf	??___xxtofl^0,f,c
  5402  002B5A  0E00               	movlw	0
  5403  002B5C  220A               	addwfc	(??___xxtofl+1)^0,f,c
  5404  002B5E  220B               	addwfc	(??___xxtofl+2)^0,f,c
  5405  002B60  220C               	addwfc	(??___xxtofl+3)^0,f,c
  5406  002B62  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  5407  002B66  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  5408  002B6A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  5409  002B6E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  5410  002B72  EFC3  F015         	goto	l3102
  5411  002B76                     l1079:
  5412  002B76  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  5413  002B7A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5414  002B7E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5415  002B82  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5416  002B86                     l3102:
  5417  002B86  5005               	movf	___xxtofl@val^0,w,c
  5418  002B88  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  5419  002B8A  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  5420  002B8C  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  5421  002B8E  A4D8               	btfss	status,2,c
  5422  002B90  EFCC  F015         	goto	u2831
  5423  002B94  EFCE  F015         	goto	u2830
  5424  002B98                     u2831:
  5425  002B98  EFD8  F015         	goto	l3108
  5426  002B9C                     u2830:
  5427  002B9C  0E00               	movlw	0
  5428  002B9E  6E05               	movwf	?___xxtofl^0,c
  5429  002BA0  0E00               	movlw	0
  5430  002BA2  6E06               	movwf	(?___xxtofl+1)^0,c
  5431  002BA4  0E00               	movlw	0
  5432  002BA6  6E07               	movwf	(?___xxtofl+2)^0,c
  5433  002BA8  0E00               	movlw	0
  5434  002BAA  6E08               	movwf	(?___xxtofl+3)^0,c
  5435  002BAC  EF69  F016         	goto	l1082
  5436  002BB0                     l3108:
  5437  002BB0  0E96               	movlw	150
  5438  002BB2  6E0E               	movwf	___xxtofl@exp^0,c
  5439  002BB4  EFE2  F015         	goto	l3112
  5440  002BB8                     l3110:
  5441  002BB8  2A0E               	incf	___xxtofl@exp^0,f,c
  5442  002BBA  90D8               	bcf	status,0,c
  5443  002BBC  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  5444  002BBE  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  5445  002BC0  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  5446  002BC2  320F               	rrcf	___xxtofl@arg^0,f,c
  5447  002BC4                     l3112:
  5448  002BC4  0E00               	movlw	0
  5449  002BC6  140F               	andwf	___xxtofl@arg^0,w,c
  5450  002BC8  6E09               	movwf	??___xxtofl^0,c
  5451  002BCA  0E00               	movlw	0
  5452  002BCC  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  5453  002BCE  6E0A               	movwf	(??___xxtofl+1)^0,c
  5454  002BD0  0E00               	movlw	0
  5455  002BD2  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  5456  002BD4  6E0B               	movwf	(??___xxtofl+2)^0,c
  5457  002BD6  0EFE               	movlw	254
  5458  002BD8  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  5459  002BDA  6E0C               	movwf	(??___xxtofl+3)^0,c
  5460  002BDC  5009               	movf	??___xxtofl^0,w,c
  5461  002BDE  100A               	iorwf	(??___xxtofl+1)^0,w,c
  5462  002BE0  100B               	iorwf	(??___xxtofl+2)^0,w,c
  5463  002BE2  100C               	iorwf	(??___xxtofl+3)^0,w,c
  5464  002BE4  A4D8               	btfss	status,2,c
  5465  002BE6  EFF7  F015         	goto	u2841
  5466  002BEA  EFF9  F015         	goto	u2840
  5467  002BEE                     u2841:
  5468  002BEE  EFDC  F015         	goto	l3110
  5469  002BF2                     u2840:
  5470  002BF2  EF07  F016         	goto	l1086
  5471  002BF6                     l3114:
  5472  002BF6  2A0E               	incf	___xxtofl@exp^0,f,c
  5473  002BF8  0E01               	movlw	1
  5474  002BFA  260F               	addwf	___xxtofl@arg^0,f,c
  5475  002BFC  0E00               	movlw	0
  5476  002BFE  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  5477  002C00  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  5478  002C02  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  5479  002C04  90D8               	bcf	status,0,c
  5480  002C06  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  5481  002C08  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  5482  002C0A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  5483  002C0C  320F               	rrcf	___xxtofl@arg^0,f,c
  5484  002C0E                     l1086:
  5485  002C0E  0E00               	movlw	0
  5486  002C10  140F               	andwf	___xxtofl@arg^0,w,c
  5487  002C12  6E09               	movwf	??___xxtofl^0,c
  5488  002C14  0E00               	movlw	0
  5489  002C16  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  5490  002C18  6E0A               	movwf	(??___xxtofl+1)^0,c
  5491  002C1A  0E00               	movlw	0
  5492  002C1C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  5493  002C1E  6E0B               	movwf	(??___xxtofl+2)^0,c
  5494  002C20  0EFF               	movlw	255
  5495  002C22  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  5496  002C24  6E0C               	movwf	(??___xxtofl+3)^0,c
  5497  002C26  5009               	movf	??___xxtofl^0,w,c
  5498  002C28  100A               	iorwf	(??___xxtofl+1)^0,w,c
  5499  002C2A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  5500  002C2C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  5501  002C2E  A4D8               	btfss	status,2,c
  5502  002C30  EF1C  F016         	goto	u2851
  5503  002C34  EF1E  F016         	goto	u2850
  5504  002C38                     u2851:
  5505  002C38  EFFB  F015         	goto	l3114
  5506  002C3C                     u2850:
  5507  002C3C  EF26  F016         	goto	l3122
  5508  002C40                     l3120:
  5509  002C40  060E               	decf	___xxtofl@exp^0,f,c
  5510  002C42  90D8               	bcf	status,0,c
  5511  002C44  360F               	rlcf	___xxtofl@arg^0,f,c
  5512  002C46  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  5513  002C48  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  5514  002C4A  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  5515  002C4C                     l3122:
  5516  002C4C  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  5517  002C4E  EF2B  F016         	goto	u2861
  5518  002C52  EF2D  F016         	goto	u2860
  5519  002C56                     u2861:
  5520  002C56  EF35  F016         	goto	l1093
  5521  002C5A                     u2860:
  5522  002C5A  0E02               	movlw	2
  5523  002C5C  600E               	cpfslt	___xxtofl@exp^0,c
  5524  002C5E  EF33  F016         	goto	u2871
  5525  002C62  EF35  F016         	goto	u2870
  5526  002C66                     u2871:
  5527  002C66  EF20  F016         	goto	l3120
  5528  002C6A                     u2870:
  5529  002C6A                     l1093:
  5530  002C6A  B00E               	btfsc	___xxtofl@exp^0,0,c
  5531  002C6C  EF3A  F016         	goto	u2881
  5532  002C70  EF3C  F016         	goto	u2880
  5533  002C74                     u2881:
  5534  002C74  EF3D  F016         	goto	l3128
  5535  002C78                     u2880:
  5536  002C78  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  5537  002C7A                     l3128:
  5538  002C7A  90D8               	bcf	status,0,c
  5539  002C7C  320E               	rrcf	___xxtofl@exp^0,f,c
  5540  002C7E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  5541  002C82  6A0A               	clrf	(??___xxtofl+1)^0,c
  5542  002C84  6A0B               	clrf	(??___xxtofl+2)^0,c
  5543  002C86  6A0C               	clrf	(??___xxtofl+3)^0,c
  5544  002C88  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  5545  002C8C  6A0B               	clrf	(??___xxtofl+2)^0,c
  5546  002C8E  6A0A               	clrf	(??___xxtofl+1)^0,c
  5547  002C90  6A09               	clrf	??___xxtofl^0,c
  5548  002C92  5009               	movf	??___xxtofl^0,w,c
  5549  002C94  120F               	iorwf	___xxtofl@arg^0,f,c
  5550  002C96  500A               	movf	(??___xxtofl+1)^0,w,c
  5551  002C98  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  5552  002C9A  500B               	movf	(??___xxtofl+2)^0,w,c
  5553  002C9C  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  5554  002C9E  500C               	movf	(??___xxtofl+3)^0,w,c
  5555  002CA0  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  5556  002CA2  500D               	movf	___xxtofl@sign^0,w,c
  5557  002CA4  B4D8               	btfsc	status,2,c
  5558  002CA6  EF57  F016         	goto	u2891
  5559  002CAA  EF59  F016         	goto	u2890
  5560  002CAE                     u2891:
  5561  002CAE  EF61  F016         	goto	l3138
  5562  002CB2                     u2890:
  5563  002CB2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  5564  002CB4  EF60  F016         	goto	u2900
  5565  002CB8  EF5E  F016         	goto	u2901
  5566  002CBC                     u2901:
  5567  002CBC  EF61  F016         	goto	l3138
  5568  002CC0                     u2900:
  5569  002CC0  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  5570  002CC2                     l3138:
  5571  002CC2  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  5572  002CC6  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  5573  002CCA  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  5574  002CCE  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  5575  002CD2                     l1082:
  5576  002CD2  0012               	return		;funcret
  5577  002CD4                     __end_of___xxtofl:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function ___fltol *****************
  5581 ;; Defined at:
  5582 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  f1              4   68[COMRAM] unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  exp1            1   77[COMRAM] unsigned char 
  5587 ;;  sign1           1   76[COMRAM] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  4   68[COMRAM] long 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;Total ram usage:       10 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 2
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_determine_color_new
  5608 ;;		_main
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text22
  5613  002FC0                     __ptext22:
  5614                           	callstack 0
  5615  002FC0                     ___fltol:
  5616                           	callstack 27
  5617  002FC0  3447               	rlcf	(___fltol@f1+2)^0,w,c
  5618  002FC2  3448               	rlcf	(___fltol@f1+3)^0,w,c
  5619  002FC4  6E4E               	movwf	___fltol@exp1^0,c
  5620  002FC6  504E               	movf	___fltol@exp1^0,w,c
  5621  002FC8  A4D8               	btfss	status,2,c
  5622  002FCA  EFE9  F017         	goto	u2741
  5623  002FCE  EFEB  F017         	goto	u2740
  5624  002FD2                     u2741:
  5625  002FD2  EFF5  F017         	goto	l3058
  5626  002FD6                     u2740:
  5627  002FD6                     l3054:
  5628  002FD6  0E00               	movlw	0
  5629  002FD8  6E45               	movwf	?___fltol^0,c
  5630  002FDA  0E00               	movlw	0
  5631  002FDC  6E46               	movwf	(?___fltol+1)^0,c
  5632  002FDE  0E00               	movlw	0
  5633  002FE0  6E47               	movwf	(?___fltol+2)^0,c
  5634  002FE2  0E00               	movlw	0
  5635  002FE4  6E48               	movwf	(?___fltol+3)^0,c
  5636  002FE6  EF62  F018         	goto	l721
  5637  002FEA                     l3058:
  5638  002FEA  C045  F049         	movff	___fltol@f1,??___fltol
  5639  002FEE  C046  F04A         	movff	___fltol@f1+1,??___fltol+1
  5640  002FF2  C047  F04B         	movff	___fltol@f1+2,??___fltol+2
  5641  002FF6  C048  F04C         	movff	___fltol@f1+3,??___fltol+3
  5642  002FFA  0E20               	movlw	32
  5643  002FFC  EF05  F018         	goto	u2750
  5644  003000                     u2755:
  5645  003000  90D8               	bcf	status,0,c
  5646  003002  324C               	rrcf	(??___fltol+3)^0,f,c
  5647  003004  324B               	rrcf	(??___fltol+2)^0,f,c
  5648  003006  324A               	rrcf	(??___fltol+1)^0,f,c
  5649  003008  3249               	rrcf	??___fltol^0,f,c
  5650  00300A                     u2750:
  5651  00300A  2EE8               	decfsz	wreg,f,c
  5652  00300C  EF00  F018         	goto	u2755
  5653  003010  5049               	movf	??___fltol^0,w,c
  5654  003012  6E4D               	movwf	___fltol@sign1^0,c
  5655  003014  8E47               	bsf	(___fltol@f1+2)^0,7,c
  5656  003016  0EFF               	movlw	255
  5657  003018  1645               	andwf	___fltol@f1^0,f,c
  5658  00301A  0EFF               	movlw	255
  5659  00301C  1646               	andwf	(___fltol@f1+1)^0,f,c
  5660  00301E  0EFF               	movlw	255
  5661  003020  1647               	andwf	(___fltol@f1+2)^0,f,c
  5662  003022  0E00               	movlw	0
  5663  003024  1648               	andwf	(___fltol@f1+3)^0,f,c
  5664  003026  0E96               	movlw	150
  5665  003028  5E4E               	subwf	___fltol@exp1^0,f,c
  5666  00302A  BE4E               	btfsc	___fltol@exp1^0,7,c
  5667  00302C  EF1C  F018         	goto	u2760
  5668  003030  EF1A  F018         	goto	u2761
  5669  003034                     u2761:
  5670  003034  EF32  F018         	goto	l3078
  5671  003038                     u2760:
  5672  003038  504E               	movf	___fltol@exp1^0,w,c
  5673  00303A  0A80               	xorlw	128
  5674  00303C  0F97               	addlw	151
  5675  00303E  B0D8               	btfsc	status,0,c
  5676  003040  EF24  F018         	goto	u2771
  5677  003044  EF26  F018         	goto	u2770
  5678  003048                     u2771:
  5679  003048  EF28  F018         	goto	l3074
  5680  00304C                     u2770:
  5681  00304C  EFEB  F017         	goto	l3054
  5682  003050                     l3074:
  5683  003050  90D8               	bcf	status,0,c
  5684  003052  3248               	rrcf	(___fltol@f1+3)^0,f,c
  5685  003054  3247               	rrcf	(___fltol@f1+2)^0,f,c
  5686  003056  3246               	rrcf	(___fltol@f1+1)^0,f,c
  5687  003058  3245               	rrcf	___fltol@f1^0,f,c
  5688  00305A  3E4E               	incfsz	___fltol@exp1^0,f,c
  5689  00305C  EF28  F018         	goto	l3074
  5690  003060  EF4A  F018         	goto	l3088
  5691  003064                     l3078:
  5692  003064  0E1F               	movlw	31
  5693  003066  644E               	cpfsgt	___fltol@exp1^0,c
  5694  003068  EF38  F018         	goto	u2781
  5695  00306C  EF3A  F018         	goto	u2780
  5696  003070                     u2781:
  5697  003070  EF42  F018         	goto	l3086
  5698  003074                     u2780:
  5699  003074  EFEB  F017         	goto	l3054
  5700  003078                     l3084:
  5701  003078  90D8               	bcf	status,0,c
  5702  00307A  3645               	rlcf	___fltol@f1^0,f,c
  5703  00307C  3646               	rlcf	(___fltol@f1+1)^0,f,c
  5704  00307E  3647               	rlcf	(___fltol@f1+2)^0,f,c
  5705  003080  3648               	rlcf	(___fltol@f1+3)^0,f,c
  5706  003082  064E               	decf	___fltol@exp1^0,f,c
  5707  003084                     l3086:
  5708  003084  504E               	movf	___fltol@exp1^0,w,c
  5709  003086  A4D8               	btfss	status,2,c
  5710  003088  EF48  F018         	goto	u2791
  5711  00308C  EF4A  F018         	goto	u2790
  5712  003090                     u2791:
  5713  003090  EF3C  F018         	goto	l3084
  5714  003094                     u2790:
  5715  003094                     l3088:
  5716  003094  504D               	movf	___fltol@sign1^0,w,c
  5717  003096  B4D8               	btfsc	status,2,c
  5718  003098  EF50  F018         	goto	u2801
  5719  00309C  EF52  F018         	goto	u2800
  5720  0030A0                     u2801:
  5721  0030A0  EF5A  F018         	goto	l3092
  5722  0030A4                     u2800:
  5723  0030A4  1E48               	comf	(___fltol@f1+3)^0,f,c
  5724  0030A6  1E47               	comf	(___fltol@f1+2)^0,f,c
  5725  0030A8  1E46               	comf	(___fltol@f1+1)^0,f,c
  5726  0030AA  6C45               	negf	___fltol@f1^0,c
  5727  0030AC  0E00               	movlw	0
  5728  0030AE  2246               	addwfc	(___fltol@f1+1)^0,f,c
  5729  0030B0  2247               	addwfc	(___fltol@f1+2)^0,f,c
  5730  0030B2  2248               	addwfc	(___fltol@f1+3)^0,f,c
  5731  0030B4                     l3092:
  5732  0030B4  C045  F045         	movff	___fltol@f1,?___fltol
  5733  0030B8  C046  F046         	movff	___fltol@f1+1,?___fltol+1
  5734  0030BC  C047  F047         	movff	___fltol@f1+2,?___fltol+2
  5735  0030C0  C048  F048         	movff	___fltol@f1+3,?___fltol+3
  5736  0030C4                     l721:
  5737  0030C4  0012               	return		;funcret
  5738  0030C6                     __end_of___fltol:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function ___flmul *****************
  5742 ;; Defined at:
  5743 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  b               4   43[COMRAM] long 
  5746 ;;  a               4   47[COMRAM] long 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  prod            4   62[COMRAM] struct .
  5749 ;;  grs             4   56[COMRAM] unsigned long 
  5750 ;;  temp            2   66[COMRAM] struct .
  5751 ;;  bexp            1   61[COMRAM] unsigned char 
  5752 ;;  aexp            1   60[COMRAM] unsigned char 
  5753 ;;  sign            1   55[COMRAM] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  4   43[COMRAM] unsigned char 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, prodl, prodh
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5763 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;Total ram usage:       25 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 2
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_determine_color_new
  5774 ;;		_main
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text23
  5779  001EC6                     __ptext23:
  5780                           	callstack 0
  5781  001EC6                     ___flmul:
  5782                           	callstack 27
  5783  001EC6  502F               	movf	(___flmul@b+3)^0,w,c
  5784  001EC8  0B80               	andlw	128
  5785  001ECA  6E38               	movwf	___flmul@sign^0,c
  5786  001ECC  502F               	movf	(___flmul@b+3)^0,w,c
  5787  001ECE  242F               	addwf	(___flmul@b+3)^0,w,c
  5788  001ED0  6E3E               	movwf	___flmul@bexp^0,c
  5789  001ED2  AE2E               	btfss	(___flmul@b+2)^0,7,c
  5790  001ED4  EF6E  F00F         	goto	u2551
  5791  001ED8  EF70  F00F         	goto	u2550
  5792  001EDC                     u2551:
  5793  001EDC  EF71  F00F         	goto	l2928
  5794  001EE0                     u2550:
  5795  001EE0  803E               	bsf	___flmul@bexp^0,0,c
  5796  001EE2                     l2928:
  5797  001EE2  503E               	movf	___flmul@bexp^0,w,c
  5798  001EE4  B4D8               	btfsc	status,2,c
  5799  001EE6  EF77  F00F         	goto	u2561
  5800  001EEA  EF79  F00F         	goto	u2560
  5801  001EEE                     u2561:
  5802  001EEE  EF8C  F00F         	goto	l2936
  5803  001EF2                     u2560:
  5804  001EF2  283E               	incf	___flmul@bexp^0,w,c
  5805  001EF4  A4D8               	btfss	status,2,c
  5806  001EF6  EF7F  F00F         	goto	u2571
  5807  001EFA  EF81  F00F         	goto	u2570
  5808  001EFE                     u2571:
  5809  001EFE  EF89  F00F         	goto	l2934
  5810  001F02                     u2570:
  5811  001F02  0E00               	movlw	0
  5812  001F04  6E2C               	movwf	___flmul@b^0,c
  5813  001F06  0E00               	movlw	0
  5814  001F08  6E2D               	movwf	(___flmul@b+1)^0,c
  5815  001F0A  0E00               	movlw	0
  5816  001F0C  6E2E               	movwf	(___flmul@b+2)^0,c
  5817  001F0E  0E00               	movlw	0
  5818  001F10  6E2F               	movwf	(___flmul@b+3)^0,c
  5819  001F12                     l2934:
  5820  001F12  8E2E               	bsf	(___flmul@b+2)^0,7,c
  5821  001F14  EF94  F00F         	goto	l2938
  5822  001F18                     l2936:
  5823  001F18  0E00               	movlw	0
  5824  001F1A  6E2C               	movwf	___flmul@b^0,c
  5825  001F1C  0E00               	movlw	0
  5826  001F1E  6E2D               	movwf	(___flmul@b+1)^0,c
  5827  001F20  0E00               	movlw	0
  5828  001F22  6E2E               	movwf	(___flmul@b+2)^0,c
  5829  001F24  0E00               	movlw	0
  5830  001F26  6E2F               	movwf	(___flmul@b+3)^0,c
  5831  001F28                     l2938:
  5832  001F28  5033               	movf	(___flmul@a+3)^0,w,c
  5833  001F2A  0B80               	andlw	128
  5834  001F2C  1A38               	xorwf	___flmul@sign^0,f,c
  5835  001F2E  5033               	movf	(___flmul@a+3)^0,w,c
  5836  001F30  2433               	addwf	(___flmul@a+3)^0,w,c
  5837  001F32  6E3D               	movwf	___flmul@aexp^0,c
  5838  001F34  AE32               	btfss	(___flmul@a+2)^0,7,c
  5839  001F36  EF9F  F00F         	goto	u2581
  5840  001F3A  EFA1  F00F         	goto	u2580
  5841  001F3E                     u2581:
  5842  001F3E  EFA2  F00F         	goto	l2946
  5843  001F42                     u2580:
  5844  001F42  803D               	bsf	___flmul@aexp^0,0,c
  5845  001F44                     l2946:
  5846  001F44  503D               	movf	___flmul@aexp^0,w,c
  5847  001F46  B4D8               	btfsc	status,2,c
  5848  001F48  EFA8  F00F         	goto	u2591
  5849  001F4C  EFAA  F00F         	goto	u2590
  5850  001F50                     u2591:
  5851  001F50  EFBD  F00F         	goto	l2954
  5852  001F54                     u2590:
  5853  001F54  283D               	incf	___flmul@aexp^0,w,c
  5854  001F56  A4D8               	btfss	status,2,c
  5855  001F58  EFB0  F00F         	goto	u2601
  5856  001F5C  EFB2  F00F         	goto	u2600
  5857  001F60                     u2601:
  5858  001F60  EFBA  F00F         	goto	l2952
  5859  001F64                     u2600:
  5860  001F64  0E00               	movlw	0
  5861  001F66  6E30               	movwf	___flmul@a^0,c
  5862  001F68  0E00               	movlw	0
  5863  001F6A  6E31               	movwf	(___flmul@a+1)^0,c
  5864  001F6C  0E00               	movlw	0
  5865  001F6E  6E32               	movwf	(___flmul@a+2)^0,c
  5866  001F70  0E00               	movlw	0
  5867  001F72  6E33               	movwf	(___flmul@a+3)^0,c
  5868  001F74                     l2952:
  5869  001F74  8E32               	bsf	(___flmul@a+2)^0,7,c
  5870  001F76  EFC5  F00F         	goto	l1038
  5871  001F7A                     l2954:
  5872  001F7A  0E00               	movlw	0
  5873  001F7C  6E30               	movwf	___flmul@a^0,c
  5874  001F7E  0E00               	movlw	0
  5875  001F80  6E31               	movwf	(___flmul@a+1)^0,c
  5876  001F82  0E00               	movlw	0
  5877  001F84  6E32               	movwf	(___flmul@a+2)^0,c
  5878  001F86  0E00               	movlw	0
  5879  001F88  6E33               	movwf	(___flmul@a+3)^0,c
  5880  001F8A                     l1038:
  5881  001F8A  503D               	movf	___flmul@aexp^0,w,c
  5882  001F8C  B4D8               	btfsc	status,2,c
  5883  001F8E  EFCB  F00F         	goto	u2611
  5884  001F92  EFCD  F00F         	goto	u2610
  5885  001F96                     u2611:
  5886  001F96  EFD5  F00F         	goto	l2958
  5887  001F9A                     u2610:
  5888  001F9A  503E               	movf	___flmul@bexp^0,w,c
  5889  001F9C  A4D8               	btfss	status,2,c
  5890  001F9E  EFD3  F00F         	goto	u2621
  5891  001FA2  EFD5  F00F         	goto	u2620
  5892  001FA6                     u2621:
  5893  001FA6  EFDF  F00F         	goto	l2962
  5894  001FAA                     u2620:
  5895  001FAA                     l2958:
  5896  001FAA  0E00               	movlw	0
  5897  001FAC  6E2C               	movwf	?___flmul^0,c
  5898  001FAE  0E00               	movlw	0
  5899  001FB0  6E2D               	movwf	(?___flmul+1)^0,c
  5900  001FB2  0E00               	movlw	0
  5901  001FB4  6E2E               	movwf	(?___flmul+2)^0,c
  5902  001FB6  0E00               	movlw	0
  5903  001FB8  6E2F               	movwf	(?___flmul+3)^0,c
  5904  001FBA  EF77  F011         	goto	l1042
  5905  001FBE                     l2962:
  5906  001FBE  5032               	movf	(___flmul@a+2)^0,w,c
  5907  001FC0  022C               	mulwf	___flmul@b^0,c
  5908  001FC2  CFF3 F043          	movff	prodl,___flmul@temp
  5909  001FC6  CFF4 F044          	movff	prodh,___flmul@temp+1
  5910  001FCA  5043               	movf	___flmul@temp^0,w,c
  5911  001FCC  6E39               	movwf	___flmul@grs^0,c
  5912  001FCE  6A3A               	clrf	(___flmul@grs+1)^0,c
  5913  001FD0  6A3B               	clrf	(___flmul@grs+2)^0,c
  5914  001FD2  6A3C               	clrf	(___flmul@grs+3)^0,c
  5915  001FD4  5044               	movf	(___flmul@temp+1)^0,w,c
  5916  001FD6  6E3F               	movwf	___flmul@prod^0,c
  5917  001FD8  6A40               	clrf	(___flmul@prod+1)^0,c
  5918  001FDA  6A41               	clrf	(___flmul@prod+2)^0,c
  5919  001FDC  6A42               	clrf	(___flmul@prod+3)^0,c
  5920  001FDE  5031               	movf	(___flmul@a+1)^0,w,c
  5921  001FE0  022D               	mulwf	(___flmul@b+1)^0,c
  5922  001FE2  CFF3 F043          	movff	prodl,___flmul@temp
  5923  001FE6  CFF4 F044          	movff	prodh,___flmul@temp+1
  5924  001FEA  5043               	movf	___flmul@temp^0,w,c
  5925  001FEC  2639               	addwf	___flmul@grs^0,f,c
  5926  001FEE  0E00               	movlw	0
  5927  001FF0  223A               	addwfc	(___flmul@grs+1)^0,f,c
  5928  001FF2  223B               	addwfc	(___flmul@grs+2)^0,f,c
  5929  001FF4  223C               	addwfc	(___flmul@grs+3)^0,f,c
  5930  001FF6  5044               	movf	(___flmul@temp+1)^0,w,c
  5931  001FF8  263F               	addwf	___flmul@prod^0,f,c
  5932  001FFA  0E00               	movlw	0
  5933  001FFC  2240               	addwfc	(___flmul@prod+1)^0,f,c
  5934  001FFE  2241               	addwfc	(___flmul@prod+2)^0,f,c
  5935  002000  2242               	addwfc	(___flmul@prod+3)^0,f,c
  5936  002002  5030               	movf	___flmul@a^0,w,c
  5937  002004  022E               	mulwf	(___flmul@b+2)^0,c
  5938  002006  CFF3 F043          	movff	prodl,___flmul@temp
  5939  00200A  CFF4 F044          	movff	prodh,___flmul@temp+1
  5940  00200E  5043               	movf	___flmul@temp^0,w,c
  5941  002010  2639               	addwf	___flmul@grs^0,f,c
  5942  002012  0E00               	movlw	0
  5943  002014  223A               	addwfc	(___flmul@grs+1)^0,f,c
  5944  002016  223B               	addwfc	(___flmul@grs+2)^0,f,c
  5945  002018  223C               	addwfc	(___flmul@grs+3)^0,f,c
  5946  00201A  5044               	movf	(___flmul@temp+1)^0,w,c
  5947  00201C  263F               	addwf	___flmul@prod^0,f,c
  5948  00201E  0E00               	movlw	0
  5949  002020  2240               	addwfc	(___flmul@prod+1)^0,f,c
  5950  002022  2241               	addwfc	(___flmul@prod+2)^0,f,c
  5951  002024  2242               	addwfc	(___flmul@prod+3)^0,f,c
  5952  002026  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  5953  00202A  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  5954  00202E  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  5955  002032  6A39               	clrf	___flmul@grs^0,c
  5956  002034  5030               	movf	___flmul@a^0,w,c
  5957  002036  022D               	mulwf	(___flmul@b+1)^0,c
  5958  002038  CFF3 F043          	movff	prodl,___flmul@temp
  5959  00203C  CFF4 F044          	movff	prodh,___flmul@temp+1
  5960  002040  5043               	movf	___flmul@temp^0,w,c
  5961  002042  2639               	addwf	___flmul@grs^0,f,c
  5962  002044  5044               	movf	(___flmul@temp+1)^0,w,c
  5963  002046  223A               	addwfc	(___flmul@grs+1)^0,f,c
  5964  002048  0E00               	movlw	0
  5965  00204A  223B               	addwfc	(___flmul@grs+2)^0,f,c
  5966  00204C  0E00               	movlw	0
  5967  00204E  223C               	addwfc	(___flmul@grs+3)^0,f,c
  5968  002050  5031               	movf	(___flmul@a+1)^0,w,c
  5969  002052  022C               	mulwf	___flmul@b^0,c
  5970  002054  CFF3 F043          	movff	prodl,___flmul@temp
  5971  002058  CFF4 F044          	movff	prodh,___flmul@temp+1
  5972  00205C  5043               	movf	___flmul@temp^0,w,c
  5973  00205E  2639               	addwf	___flmul@grs^0,f,c
  5974  002060  5044               	movf	(___flmul@temp+1)^0,w,c
  5975  002062  223A               	addwfc	(___flmul@grs+1)^0,f,c
  5976  002064  0E00               	movlw	0
  5977  002066  223B               	addwfc	(___flmul@grs+2)^0,f,c
  5978  002068  0E00               	movlw	0
  5979  00206A  223C               	addwfc	(___flmul@grs+3)^0,f,c
  5980  00206C  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  5981  002070  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  5982  002074  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  5983  002078  6A39               	clrf	___flmul@grs^0,c
  5984  00207A  5030               	movf	___flmul@a^0,w,c
  5985  00207C  022C               	mulwf	___flmul@b^0,c
  5986  00207E  CFF3 F043          	movff	prodl,___flmul@temp
  5987  002082  CFF4 F044          	movff	prodh,___flmul@temp+1
  5988  002086  5043               	movf	___flmul@temp^0,w,c
  5989  002088  2639               	addwf	___flmul@grs^0,f,c
  5990  00208A  5044               	movf	(___flmul@temp+1)^0,w,c
  5991  00208C  223A               	addwfc	(___flmul@grs+1)^0,f,c
  5992  00208E  0E00               	movlw	0
  5993  002090  223B               	addwfc	(___flmul@grs+2)^0,f,c
  5994  002092  0E00               	movlw	0
  5995  002094  223C               	addwfc	(___flmul@grs+3)^0,f,c
  5996  002096  5032               	movf	(___flmul@a+2)^0,w,c
  5997  002098  022D               	mulwf	(___flmul@b+1)^0,c
  5998  00209A  CFF3 F043          	movff	prodl,___flmul@temp
  5999  00209E  CFF4 F044          	movff	prodh,___flmul@temp+1
  6000  0020A2  5043               	movf	___flmul@temp^0,w,c
  6001  0020A4  263F               	addwf	___flmul@prod^0,f,c
  6002  0020A6  5044               	movf	(___flmul@temp+1)^0,w,c
  6003  0020A8  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6004  0020AA  0E00               	movlw	0
  6005  0020AC  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6006  0020AE  0E00               	movlw	0
  6007  0020B0  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6008  0020B2  5031               	movf	(___flmul@a+1)^0,w,c
  6009  0020B4  022E               	mulwf	(___flmul@b+2)^0,c
  6010  0020B6  CFF3 F043          	movff	prodl,___flmul@temp
  6011  0020BA  CFF4 F044          	movff	prodh,___flmul@temp+1
  6012  0020BE  5043               	movf	___flmul@temp^0,w,c
  6013  0020C0  263F               	addwf	___flmul@prod^0,f,c
  6014  0020C2  5044               	movf	(___flmul@temp+1)^0,w,c
  6015  0020C4  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6016  0020C6  0E00               	movlw	0
  6017  0020C8  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6018  0020CA  0E00               	movlw	0
  6019  0020CC  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6020  0020CE  5032               	movf	(___flmul@a+2)^0,w,c
  6021  0020D0  022E               	mulwf	(___flmul@b+2)^0,c
  6022  0020D2  CFF3 F043          	movff	prodl,___flmul@temp
  6023  0020D6  CFF4 F044          	movff	prodh,___flmul@temp+1
  6024  0020DA  5043               	movf	___flmul@temp^0,w,c
  6025  0020DC  6E34               	movwf	??___flmul^0,c
  6026  0020DE  5044               	movf	(___flmul@temp+1)^0,w,c
  6027  0020E0  6E35               	movwf	(??___flmul+1)^0,c
  6028  0020E2  6A36               	clrf	(??___flmul+2)^0,c
  6029  0020E4  6A37               	clrf	(??___flmul+3)^0,c
  6030  0020E6  C036  F037         	movff	??___flmul+2,??___flmul+3
  6031  0020EA  C035  F036         	movff	??___flmul+1,??___flmul+2
  6032  0020EE  C034  F035         	movff	??___flmul,??___flmul+1
  6033  0020F2  6A34               	clrf	??___flmul^0,c
  6034  0020F4  5034               	movf	??___flmul^0,w,c
  6035  0020F6  263F               	addwf	___flmul@prod^0,f,c
  6036  0020F8  5035               	movf	(??___flmul+1)^0,w,c
  6037  0020FA  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6038  0020FC  5036               	movf	(??___flmul+2)^0,w,c
  6039  0020FE  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6040  002100  5037               	movf	(??___flmul+3)^0,w,c
  6041  002102  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6042  002104  C039  F034         	movff	___flmul@grs,??___flmul
  6043  002108  C03A  F035         	movff	___flmul@grs+1,??___flmul+1
  6044  00210C  C03B  F036         	movff	___flmul@grs+2,??___flmul+2
  6045  002110  C03C  F037         	movff	___flmul@grs+3,??___flmul+3
  6046  002114  0E19               	movlw	25
  6047  002116  EF92  F010         	goto	u2630
  6048  00211A                     u2635:
  6049  00211A  90D8               	bcf	status,0,c
  6050  00211C  3237               	rrcf	(??___flmul+3)^0,f,c
  6051  00211E  3236               	rrcf	(??___flmul+2)^0,f,c
  6052  002120  3235               	rrcf	(??___flmul+1)^0,f,c
  6053  002122  3234               	rrcf	??___flmul^0,f,c
  6054  002124                     u2630:
  6055  002124  2EE8               	decfsz	wreg,f,c
  6056  002126  EF8D  F010         	goto	u2635
  6057  00212A  5034               	movf	??___flmul^0,w,c
  6058  00212C  263F               	addwf	___flmul@prod^0,f,c
  6059  00212E  5035               	movf	(??___flmul+1)^0,w,c
  6060  002130  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6061  002132  5036               	movf	(??___flmul+2)^0,w,c
  6062  002134  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6063  002136  5037               	movf	(??___flmul+3)^0,w,c
  6064  002138  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6065  00213A  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6066  00213E  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6067  002142  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6068  002146  6A39               	clrf	___flmul@grs^0,c
  6069  002148  503D               	movf	___flmul@aexp^0,w,c
  6070  00214A  C03E  F034         	movff	___flmul@bexp,??___flmul
  6071  00214E  6A35               	clrf	(??___flmul+1)^0,c
  6072  002150  2634               	addwf	??___flmul^0,f,c
  6073  002152  0E00               	movlw	0
  6074  002154  2235               	addwfc	(??___flmul+1)^0,f,c
  6075  002156  0E82               	movlw	130
  6076  002158  2434               	addwf	??___flmul^0,w,c
  6077  00215A  6E43               	movwf	___flmul@temp^0,c
  6078  00215C  0EFF               	movlw	255
  6079  00215E  2035               	addwfc	(??___flmul+1)^0,w,c
  6080  002160  6E44               	movwf	(___flmul@temp+1)^0,c
  6081  002162  EFC8  F010         	goto	l3010
  6082  002166                     l3004:
  6083  002166  90D8               	bcf	status,0,c
  6084  002168  363F               	rlcf	___flmul@prod^0,f,c
  6085  00216A  3640               	rlcf	(___flmul@prod+1)^0,f,c
  6086  00216C  3641               	rlcf	(___flmul@prod+2)^0,f,c
  6087  00216E  3642               	rlcf	(___flmul@prod+3)^0,f,c
  6088  002170  AE3C               	btfss	(___flmul@grs+3)^0,7,c
  6089  002172  EFBD  F010         	goto	u2641
  6090  002176  EFBF  F010         	goto	u2640
  6091  00217A                     u2641:
  6092  00217A  EFC0  F010         	goto	l1045
  6093  00217E                     u2640:
  6094  00217E  803F               	bsf	___flmul@prod^0,0,c
  6095  002180                     l1045:
  6096  002180  90D8               	bcf	status,0,c
  6097  002182  3639               	rlcf	___flmul@grs^0,f,c
  6098  002184  363A               	rlcf	(___flmul@grs+1)^0,f,c
  6099  002186  363B               	rlcf	(___flmul@grs+2)^0,f,c
  6100  002188  363C               	rlcf	(___flmul@grs+3)^0,f,c
  6101  00218A  0643               	decf	___flmul@temp^0,f,c
  6102  00218C  A0D8               	btfss	status,0,c
  6103  00218E  0644               	decf	(___flmul@temp+1)^0,f,c
  6104  002190                     l3010:
  6105  002190  AE41               	btfss	(___flmul@prod+2)^0,7,c
  6106  002192  EFCD  F010         	goto	u2651
  6107  002196  EFCF  F010         	goto	u2650
  6108  00219A                     u2651:
  6109  00219A  EFB3  F010         	goto	l3004
  6110  00219E                     u2650:
  6111  00219E  0E00               	movlw	0
  6112  0021A0  6E3D               	movwf	___flmul@aexp^0,c
  6113  0021A2  AE3C               	btfss	(___flmul@grs+3)^0,7,c
  6114  0021A4  EFD6  F010         	goto	u2661
  6115  0021A8  EFD8  F010         	goto	u2660
  6116  0021AC                     u2661:
  6117  0021AC  EFFC  F010         	goto	l1047
  6118  0021B0                     u2660:
  6119  0021B0  0EFF               	movlw	255
  6120  0021B2  1439               	andwf	___flmul@grs^0,w,c
  6121  0021B4  6E34               	movwf	??___flmul^0,c
  6122  0021B6  0EFF               	movlw	255
  6123  0021B8  143A               	andwf	(___flmul@grs+1)^0,w,c
  6124  0021BA  6E35               	movwf	(??___flmul+1)^0,c
  6125  0021BC  0EFF               	movlw	255
  6126  0021BE  143B               	andwf	(___flmul@grs+2)^0,w,c
  6127  0021C0  6E36               	movwf	(??___flmul+2)^0,c
  6128  0021C2  0E7F               	movlw	127
  6129  0021C4  143C               	andwf	(___flmul@grs+3)^0,w,c
  6130  0021C6  6E37               	movwf	(??___flmul+3)^0,c
  6131  0021C8  5034               	movf	??___flmul^0,w,c
  6132  0021CA  1035               	iorwf	(??___flmul+1)^0,w,c
  6133  0021CC  1036               	iorwf	(??___flmul+2)^0,w,c
  6134  0021CE  1037               	iorwf	(??___flmul+3)^0,w,c
  6135  0021D0  B4D8               	btfsc	status,2,c
  6136  0021D2  EFED  F010         	goto	u2671
  6137  0021D6  EFEF  F010         	goto	u2670
  6138  0021DA                     u2671:
  6139  0021DA  EFF3  F010         	goto	l1048
  6140  0021DE                     u2670:
  6141  0021DE                     l3018:
  6142  0021DE  0E01               	movlw	1
  6143  0021E0  6E3D               	movwf	___flmul@aexp^0,c
  6144  0021E2  EFFC  F010         	goto	l1047
  6145  0021E6                     l1048:
  6146  0021E6  A03F               	btfss	___flmul@prod^0,0,c
  6147  0021E8  EFF8  F010         	goto	u2681
  6148  0021EC  EFFA  F010         	goto	u2680
  6149  0021F0                     u2681:
  6150  0021F0  EFFC  F010         	goto	l1047
  6151  0021F4                     u2680:
  6152  0021F4  EFEF  F010         	goto	l3018
  6153  0021F8                     l1047:
  6154  0021F8  503D               	movf	___flmul@aexp^0,w,c
  6155  0021FA  B4D8               	btfsc	status,2,c
  6156  0021FC  EF02  F011         	goto	u2691
  6157  002200  EF04  F011         	goto	u2690
  6158  002204                     u2691:
  6159  002204  EF28  F011         	goto	l3030
  6160  002208                     u2690:
  6161  002208  0E01               	movlw	1
  6162  00220A  263F               	addwf	___flmul@prod^0,f,c
  6163  00220C  0E00               	movlw	0
  6164  00220E  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6165  002210  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6166  002212  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6167  002214  A042               	btfss	(___flmul@prod+3)^0,0,c
  6168  002216  EF0F  F011         	goto	u2701
  6169  00221A  EF11  F011         	goto	u2700
  6170  00221E                     u2701:
  6171  00221E  EF28  F011         	goto	l3030
  6172  002222                     u2700:
  6173  002222  C03F  F034         	movff	___flmul@prod,??___flmul
  6174  002226  C040  F035         	movff	___flmul@prod+1,??___flmul+1
  6175  00222A  C041  F036         	movff	___flmul@prod+2,??___flmul+2
  6176  00222E  C042  F037         	movff	___flmul@prod+3,??___flmul+3
  6177  002232  3437               	rlcf	(??___flmul+3)^0,w,c
  6178  002234  3237               	rrcf	(??___flmul+3)^0,f,c
  6179  002236  3236               	rrcf	(??___flmul+2)^0,f,c
  6180  002238  3235               	rrcf	(??___flmul+1)^0,f,c
  6181  00223A  3234               	rrcf	??___flmul^0,f,c
  6182  00223C  C034  F03F         	movff	??___flmul,___flmul@prod
  6183  002240  C035  F040         	movff	??___flmul+1,___flmul@prod+1
  6184  002244  C036  F041         	movff	??___flmul+2,___flmul@prod+2
  6185  002248  C037  F042         	movff	??___flmul+3,___flmul@prod+3
  6186  00224C  4A43               	infsnz	___flmul@temp^0,f,c
  6187  00224E  2A44               	incf	(___flmul@temp+1)^0,f,c
  6188  002250                     l3030:
  6189  002250  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6190  002252  EF33  F011         	goto	u2711
  6191  002256  5044               	movf	(___flmul@temp+1)^0,w,c
  6192  002258  E108               	bnz	u2710
  6193  00225A  2843               	incf	___flmul@temp^0,w,c
  6194  00225C  A0D8               	btfss	status,0,c
  6195  00225E  EF33  F011         	goto	u2711
  6196  002262  EF35  F011         	goto	u2710
  6197  002266                     u2711:
  6198  002266  EF3F  F011         	goto	l3034
  6199  00226A                     u2710:
  6200  00226A  0E00               	movlw	0
  6201  00226C  6E3F               	movwf	___flmul@prod^0,c
  6202  00226E  0E00               	movlw	0
  6203  002270  6E40               	movwf	(___flmul@prod+1)^0,c
  6204  002272  0E80               	movlw	128
  6205  002274  6E41               	movwf	(___flmul@prod+2)^0,c
  6206  002276  0E7F               	movlw	127
  6207  002278  6E42               	movwf	(___flmul@prod+3)^0,c
  6208  00227A  EF6D  F011         	goto	l3046
  6209  00227E                     l3034:
  6210  00227E  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6211  002280  EF4C  F011         	goto	u2720
  6212  002284  5044               	movf	(___flmul@temp+1)^0,w,c
  6213  002286  E106               	bnz	u2721
  6214  002288  0443               	decf	___flmul@temp^0,w,c
  6215  00228A  B0D8               	btfsc	status,0,c
  6216  00228C  EF4A  F011         	goto	u2721
  6217  002290  EF4C  F011         	goto	u2720
  6218  002294                     u2721:
  6219  002294  EF58  F011         	goto	l1055
  6220  002298                     u2720:
  6221  002298  0E00               	movlw	0
  6222  00229A  6E3F               	movwf	___flmul@prod^0,c
  6223  00229C  0E00               	movlw	0
  6224  00229E  6E40               	movwf	(___flmul@prod+1)^0,c
  6225  0022A0  0E00               	movlw	0
  6226  0022A2  6E41               	movwf	(___flmul@prod+2)^0,c
  6227  0022A4  0E00               	movlw	0
  6228  0022A6  6E42               	movwf	(___flmul@prod+3)^0,c
  6229  0022A8  0E00               	movlw	0
  6230  0022AA  6E38               	movwf	___flmul@sign^0,c
  6231  0022AC  EF6D  F011         	goto	l3046
  6232  0022B0                     l1055:
  6233  0022B0  C043  F03E         	movff	___flmul@temp,___flmul@bexp
  6234  0022B4  0EFF               	movlw	255
  6235  0022B6  163F               	andwf	___flmul@prod^0,f,c
  6236  0022B8  0EFF               	movlw	255
  6237  0022BA  1640               	andwf	(___flmul@prod+1)^0,f,c
  6238  0022BC  0E7F               	movlw	127
  6239  0022BE  1641               	andwf	(___flmul@prod+2)^0,f,c
  6240  0022C0  0E00               	movlw	0
  6241  0022C2  1642               	andwf	(___flmul@prod+3)^0,f,c
  6242  0022C4  A03E               	btfss	___flmul@bexp^0,0,c
  6243  0022C6  EF67  F011         	goto	u2731
  6244  0022CA  EF69  F011         	goto	u2730
  6245  0022CE                     u2731:
  6246  0022CE  EF6A  F011         	goto	l3044
  6247  0022D2                     u2730:
  6248  0022D2  8E41               	bsf	(___flmul@prod+2)^0,7,c
  6249  0022D4                     l3044:
  6250  0022D4  90D8               	bcf	status,0,c
  6251  0022D6  303E               	rrcf	___flmul@bexp^0,w,c
  6252  0022D8  6E42               	movwf	(___flmul@prod+3)^0,c
  6253  0022DA                     l3046:
  6254  0022DA  5038               	movf	___flmul@sign^0,w,c
  6255  0022DC  1242               	iorwf	(___flmul@prod+3)^0,f,c
  6256  0022DE  C03F  F02C         	movff	___flmul@prod,?___flmul
  6257  0022E2  C040  F02D         	movff	___flmul@prod+1,?___flmul+1
  6258  0022E6  C041  F02E         	movff	___flmul@prod+2,?___flmul+2
  6259  0022EA  C042  F02F         	movff	___flmul@prod+3,?___flmul+3
  6260  0022EE                     l1042:
  6261  0022EE  0012               	return		;funcret
  6262  0022F0                     __end_of___flmul:
  6263                           	callstack 0
  6264                           
  6265 ;; *************** function ___fldiv *****************
  6266 ;; Defined at:
  6267 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  b               4   18[COMRAM] unsigned char 
  6270 ;;  a               4   22[COMRAM] unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  grs             4   37[COMRAM] unsigned long 
  6273 ;;  rem             4   30[COMRAM] unsigned long 
  6274 ;;  new_exp         2   35[COMRAM] short 
  6275 ;;  aexp            1   42[COMRAM] unsigned char 
  6276 ;;  bexp            1   41[COMRAM] unsigned char 
  6277 ;;  sign            1   34[COMRAM] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  4   18[COMRAM] unsigned char 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;Total ram usage:       25 bytes
  6292 ;; Hardware stack levels used: 1
  6293 ;; Hardware stack levels required when called: 2
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_determine_color_new
  6298 ;;		_main
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text24
  6303  0022F0                     __ptext24:
  6304                           	callstack 0
  6305  0022F0                     ___fldiv:
  6306                           	callstack 27
  6307  0022F0  5016               	movf	(___fldiv@b+3)^0,w,c
  6308  0022F2  0B80               	andlw	128
  6309  0022F4  6E23               	movwf	___fldiv@sign^0,c
  6310  0022F6  5016               	movf	(___fldiv@b+3)^0,w,c
  6311  0022F8  2416               	addwf	(___fldiv@b+3)^0,w,c
  6312  0022FA  6E2A               	movwf	___fldiv@bexp^0,c
  6313  0022FC  AE15               	btfss	(___fldiv@b+2)^0,7,c
  6314  0022FE  EF83  F011         	goto	u2321
  6315  002302  EF85  F011         	goto	u2320
  6316  002306                     u2321:
  6317  002306  EF86  F011         	goto	l2790
  6318  00230A                     u2320:
  6319  00230A  802A               	bsf	___fldiv@bexp^0,0,c
  6320  00230C                     l2790:
  6321  00230C  502A               	movf	___fldiv@bexp^0,w,c
  6322  00230E  B4D8               	btfsc	status,2,c
  6323  002310  EF8C  F011         	goto	u2331
  6324  002314  EF8E  F011         	goto	u2330
  6325  002318                     u2331:
  6326  002318  EFA3  F011         	goto	l2800
  6327  00231C                     u2330:
  6328  00231C  282A               	incf	___fldiv@bexp^0,w,c
  6329  00231E  A4D8               	btfss	status,2,c
  6330  002320  EF94  F011         	goto	u2341
  6331  002324  EF96  F011         	goto	u2340
  6332  002328                     u2341:
  6333  002328  EF9E  F011         	goto	l2796
  6334  00232C                     u2340:
  6335  00232C  0E00               	movlw	0
  6336  00232E  6E13               	movwf	___fldiv@b^0,c
  6337  002330  0E00               	movlw	0
  6338  002332  6E14               	movwf	(___fldiv@b+1)^0,c
  6339  002334  0E00               	movlw	0
  6340  002336  6E15               	movwf	(___fldiv@b+2)^0,c
  6341  002338  0E00               	movlw	0
  6342  00233A  6E16               	movwf	(___fldiv@b+3)^0,c
  6343  00233C                     l2796:
  6344  00233C  8E15               	bsf	(___fldiv@b+2)^0,7,c
  6345  00233E  0E00               	movlw	0
  6346  002340  6E16               	movwf	(___fldiv@b+3)^0,c
  6347  002342  EFAB  F011         	goto	l2802
  6348  002346                     l2800:
  6349  002346  0E00               	movlw	0
  6350  002348  6E13               	movwf	___fldiv@b^0,c
  6351  00234A  0E00               	movlw	0
  6352  00234C  6E14               	movwf	(___fldiv@b+1)^0,c
  6353  00234E  0E00               	movlw	0
  6354  002350  6E15               	movwf	(___fldiv@b+2)^0,c
  6355  002352  0E00               	movlw	0
  6356  002354  6E16               	movwf	(___fldiv@b+3)^0,c
  6357  002356                     l2802:
  6358  002356  501A               	movf	(___fldiv@a+3)^0,w,c
  6359  002358  0B80               	andlw	128
  6360  00235A  1A23               	xorwf	___fldiv@sign^0,f,c
  6361  00235C  501A               	movf	(___fldiv@a+3)^0,w,c
  6362  00235E  241A               	addwf	(___fldiv@a+3)^0,w,c
  6363  002360  6E2B               	movwf	___fldiv@aexp^0,c
  6364  002362  AE19               	btfss	(___fldiv@a+2)^0,7,c
  6365  002364  EFB6  F011         	goto	u2351
  6366  002368  EFB8  F011         	goto	u2350
  6367  00236C                     u2351:
  6368  00236C  EFB9  F011         	goto	l2810
  6369  002370                     u2350:
  6370  002370  802B               	bsf	___fldiv@aexp^0,0,c
  6371  002372                     l2810:
  6372  002372  502B               	movf	___fldiv@aexp^0,w,c
  6373  002374  B4D8               	btfsc	status,2,c
  6374  002376  EFBF  F011         	goto	u2361
  6375  00237A  EFC1  F011         	goto	u2360
  6376  00237E                     u2361:
  6377  00237E  EFD6  F011         	goto	l2820
  6378  002382                     u2360:
  6379  002382  282B               	incf	___fldiv@aexp^0,w,c
  6380  002384  A4D8               	btfss	status,2,c
  6381  002386  EFC7  F011         	goto	u2371
  6382  00238A  EFC9  F011         	goto	u2370
  6383  00238E                     u2371:
  6384  00238E  EFD1  F011         	goto	l2816
  6385  002392                     u2370:
  6386  002392  0E00               	movlw	0
  6387  002394  6E17               	movwf	___fldiv@a^0,c
  6388  002396  0E00               	movlw	0
  6389  002398  6E18               	movwf	(___fldiv@a+1)^0,c
  6390  00239A  0E00               	movlw	0
  6391  00239C  6E19               	movwf	(___fldiv@a+2)^0,c
  6392  00239E  0E00               	movlw	0
  6393  0023A0  6E1A               	movwf	(___fldiv@a+3)^0,c
  6394  0023A2                     l2816:
  6395  0023A2  8E19               	bsf	(___fldiv@a+2)^0,7,c
  6396  0023A4  0E00               	movlw	0
  6397  0023A6  6E1A               	movwf	(___fldiv@a+3)^0,c
  6398  0023A8  EFDE  F011         	goto	l2822
  6399  0023AC                     l2820:
  6400  0023AC  0E00               	movlw	0
  6401  0023AE  6E17               	movwf	___fldiv@a^0,c
  6402  0023B0  0E00               	movlw	0
  6403  0023B2  6E18               	movwf	(___fldiv@a+1)^0,c
  6404  0023B4  0E00               	movlw	0
  6405  0023B6  6E19               	movwf	(___fldiv@a+2)^0,c
  6406  0023B8  0E00               	movlw	0
  6407  0023BA  6E1A               	movwf	(___fldiv@a+3)^0,c
  6408  0023BC                     l2822:
  6409  0023BC  5017               	movf	___fldiv@a^0,w,c
  6410  0023BE  1018               	iorwf	(___fldiv@a+1)^0,w,c
  6411  0023C0  1019               	iorwf	(___fldiv@a+2)^0,w,c
  6412  0023C2  101A               	iorwf	(___fldiv@a+3)^0,w,c
  6413  0023C4  A4D8               	btfss	status,2,c
  6414  0023C6  EFE7  F011         	goto	u2381
  6415  0023CA  EFE9  F011         	goto	u2380
  6416  0023CE                     u2381:
  6417  0023CE  EF01  F012         	goto	l2834
  6418  0023D2                     u2380:
  6419  0023D2  0E00               	movlw	0
  6420  0023D4  6E13               	movwf	___fldiv@b^0,c
  6421  0023D6  0E00               	movlw	0
  6422  0023D8  6E14               	movwf	(___fldiv@b+1)^0,c
  6423  0023DA  0E00               	movlw	0
  6424  0023DC  6E15               	movwf	(___fldiv@b+2)^0,c
  6425  0023DE  0E00               	movlw	0
  6426  0023E0  6E16               	movwf	(___fldiv@b+3)^0,c
  6427  0023E2  0E80               	movlw	128
  6428  0023E4  1215               	iorwf	(___fldiv@b+2)^0,f,c
  6429  0023E6  0E7F               	movlw	127
  6430  0023E8  1216               	iorwf	(___fldiv@b+3)^0,f,c
  6431  0023EA                     l2828:
  6432  0023EA  5023               	movf	___fldiv@sign^0,w,c
  6433  0023EC  1216               	iorwf	(___fldiv@b+3)^0,f,c
  6434  0023EE  C013  F013         	movff	___fldiv@b,?___fldiv
  6435  0023F2  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
  6436  0023F6  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
  6437  0023FA  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
  6438  0023FE  EF44  F013         	goto	l1006
  6439  002402                     l2834:
  6440  002402  502A               	movf	___fldiv@bexp^0,w,c
  6441  002404  A4D8               	btfss	status,2,c
  6442  002406  EF07  F012         	goto	u2391
  6443  00240A  EF09  F012         	goto	u2390
  6444  00240E                     u2391:
  6445  00240E  EF13  F012         	goto	l2842
  6446  002412                     u2390:
  6447  002412  0E00               	movlw	0
  6448  002414  6E13               	movwf	?___fldiv^0,c
  6449  002416  0E00               	movlw	0
  6450  002418  6E14               	movwf	(?___fldiv+1)^0,c
  6451  00241A  0E00               	movlw	0
  6452  00241C  6E15               	movwf	(?___fldiv+2)^0,c
  6453  00241E  0E00               	movlw	0
  6454  002420  6E16               	movwf	(?___fldiv+3)^0,c
  6455  002422  EF44  F013         	goto	l1006
  6456  002426                     l2842:
  6457  002426  502B               	movf	___fldiv@aexp^0,w,c
  6458  002428  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
  6459  00242C  6A1C               	clrf	(??___fldiv+1)^0,c
  6460  00242E  5E1B               	subwf	??___fldiv^0,f,c
  6461  002430  0E00               	movlw	0
  6462  002432  5A1C               	subwfb	(??___fldiv+1)^0,f,c
  6463  002434  0E7F               	movlw	127
  6464  002436  241B               	addwf	??___fldiv^0,w,c
  6465  002438  6E24               	movwf	___fldiv@new_exp^0,c
  6466  00243A  0E00               	movlw	0
  6467  00243C  201C               	addwfc	(??___fldiv+1)^0,w,c
  6468  00243E  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  6469  002440  C013  F01F         	movff	___fldiv@b,___fldiv@rem
  6470  002444  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
  6471  002448  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
  6472  00244C  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
  6473  002450  0E00               	movlw	0
  6474  002452  6E13               	movwf	___fldiv@b^0,c
  6475  002454  0E00               	movlw	0
  6476  002456  6E14               	movwf	(___fldiv@b+1)^0,c
  6477  002458  0E00               	movlw	0
  6478  00245A  6E15               	movwf	(___fldiv@b+2)^0,c
  6479  00245C  0E00               	movlw	0
  6480  00245E  6E16               	movwf	(___fldiv@b+3)^0,c
  6481  002460  0E00               	movlw	0
  6482  002462  6E26               	movwf	___fldiv@grs^0,c
  6483  002464  0E00               	movlw	0
  6484  002466  6E27               	movwf	(___fldiv@grs+1)^0,c
  6485  002468  0E00               	movlw	0
  6486  00246A  6E28               	movwf	(___fldiv@grs+2)^0,c
  6487  00246C  0E00               	movlw	0
  6488  00246E  6E29               	movwf	(___fldiv@grs+3)^0,c
  6489  002470  0E00               	movlw	0
  6490  002472  6E2B               	movwf	___fldiv@aexp^0,c
  6491  002474  EF74  F012         	goto	l1008
  6492  002478                     l2852:
  6493  002478  502B               	movf	___fldiv@aexp^0,w,c
  6494  00247A  B4D8               	btfsc	status,2,c
  6495  00247C  EF42  F012         	goto	u2401
  6496  002480  EF44  F012         	goto	u2400
  6497  002484                     u2401:
  6498  002484  EF5B  F012         	goto	l2860
  6499  002488                     u2400:
  6500  002488  90D8               	bcf	status,0,c
  6501  00248A  361F               	rlcf	___fldiv@rem^0,f,c
  6502  00248C  3620               	rlcf	(___fldiv@rem+1)^0,f,c
  6503  00248E  3621               	rlcf	(___fldiv@rem+2)^0,f,c
  6504  002490  3622               	rlcf	(___fldiv@rem+3)^0,f,c
  6505  002492  90D8               	bcf	status,0,c
  6506  002494  3613               	rlcf	___fldiv@b^0,f,c
  6507  002496  3614               	rlcf	(___fldiv@b+1)^0,f,c
  6508  002498  3615               	rlcf	(___fldiv@b+2)^0,f,c
  6509  00249A  3616               	rlcf	(___fldiv@b+3)^0,f,c
  6510  00249C  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  6511  00249E  EF53  F012         	goto	u2411
  6512  0024A2  EF55  F012         	goto	u2410
  6513  0024A6                     u2411:
  6514  0024A6  EF56  F012         	goto	l1011
  6515  0024AA                     u2410:
  6516  0024AA  8013               	bsf	___fldiv@b^0,0,c
  6517  0024AC                     l1011:
  6518  0024AC  90D8               	bcf	status,0,c
  6519  0024AE  3626               	rlcf	___fldiv@grs^0,f,c
  6520  0024B0  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  6521  0024B2  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  6522  0024B4  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  6523  0024B6                     l2860:
  6524  0024B6  5017               	movf	___fldiv@a^0,w,c
  6525  0024B8  5C1F               	subwf	___fldiv@rem^0,w,c
  6526  0024BA  5018               	movf	(___fldiv@a+1)^0,w,c
  6527  0024BC  5820               	subwfb	(___fldiv@rem+1)^0,w,c
  6528  0024BE  5019               	movf	(___fldiv@a+2)^0,w,c
  6529  0024C0  5821               	subwfb	(___fldiv@rem+2)^0,w,c
  6530  0024C2  501A               	movf	(___fldiv@a+3)^0,w,c
  6531  0024C4  5822               	subwfb	(___fldiv@rem+3)^0,w,c
  6532  0024C6  A0D8               	btfss	status,0,c
  6533  0024C8  EF68  F012         	goto	u2421
  6534  0024CC  EF6A  F012         	goto	u2420
  6535  0024D0                     u2421:
  6536  0024D0  EF73  F012         	goto	l2866
  6537  0024D4                     u2420:
  6538  0024D4  8C29               	bsf	(___fldiv@grs+3)^0,6,c
  6539  0024D6  5017               	movf	___fldiv@a^0,w,c
  6540  0024D8  5E1F               	subwf	___fldiv@rem^0,f,c
  6541  0024DA  5018               	movf	(___fldiv@a+1)^0,w,c
  6542  0024DC  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
  6543  0024DE  5019               	movf	(___fldiv@a+2)^0,w,c
  6544  0024E0  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
  6545  0024E2  501A               	movf	(___fldiv@a+3)^0,w,c
  6546  0024E4  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
  6547  0024E6                     l2866:
  6548  0024E6  2A2B               	incf	___fldiv@aexp^0,f,c
  6549  0024E8                     l1008:
  6550  0024E8  0E19               	movlw	25
  6551  0024EA  642B               	cpfsgt	___fldiv@aexp^0,c
  6552  0024EC  EF7A  F012         	goto	u2431
  6553  0024F0  EF7C  F012         	goto	u2430
  6554  0024F4                     u2431:
  6555  0024F4  EF3C  F012         	goto	l2852
  6556  0024F8                     u2430:
  6557  0024F8  501F               	movf	___fldiv@rem^0,w,c
  6558  0024FA  1020               	iorwf	(___fldiv@rem+1)^0,w,c
  6559  0024FC  1021               	iorwf	(___fldiv@rem+2)^0,w,c
  6560  0024FE  1022               	iorwf	(___fldiv@rem+3)^0,w,c
  6561  002500  B4D8               	btfsc	status,2,c
  6562  002502  EF85  F012         	goto	u2441
  6563  002506  EF87  F012         	goto	u2440
  6564  00250A                     u2441:
  6565  00250A  EF9F  F012         	goto	l2878
  6566  00250E                     u2440:
  6567  00250E  8026               	bsf	___fldiv@grs^0,0,c
  6568  002510  EF9F  F012         	goto	l2878
  6569  002514                     l2872:
  6570  002514  90D8               	bcf	status,0,c
  6571  002516  3613               	rlcf	___fldiv@b^0,f,c
  6572  002518  3614               	rlcf	(___fldiv@b+1)^0,f,c
  6573  00251A  3615               	rlcf	(___fldiv@b+2)^0,f,c
  6574  00251C  3616               	rlcf	(___fldiv@b+3)^0,f,c
  6575  00251E  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  6576  002520  EF94  F012         	goto	u2451
  6577  002524  EF96  F012         	goto	u2450
  6578  002528                     u2451:
  6579  002528  EF97  F012         	goto	l1017
  6580  00252C                     u2450:
  6581  00252C  8013               	bsf	___fldiv@b^0,0,c
  6582  00252E                     l1017:
  6583  00252E  90D8               	bcf	status,0,c
  6584  002530  3626               	rlcf	___fldiv@grs^0,f,c
  6585  002532  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  6586  002534  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  6587  002536  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  6588  002538  0624               	decf	___fldiv@new_exp^0,f,c
  6589  00253A  A0D8               	btfss	status,0,c
  6590  00253C  0625               	decf	(___fldiv@new_exp+1)^0,f,c
  6591  00253E                     l2878:
  6592  00253E  AE15               	btfss	(___fldiv@b+2)^0,7,c
  6593  002540  EFA4  F012         	goto	u2461
  6594  002544  EFA6  F012         	goto	u2460
  6595  002548                     u2461:
  6596  002548  EF8A  F012         	goto	l2872
  6597  00254C                     u2460:
  6598  00254C  0E00               	movlw	0
  6599  00254E  6E2B               	movwf	___fldiv@aexp^0,c
  6600  002550  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  6601  002552  EFAD  F012         	goto	u2471
  6602  002556  EFAF  F012         	goto	u2470
  6603  00255A                     u2471:
  6604  00255A  EFD3  F012         	goto	l1019
  6605  00255E                     u2470:
  6606  00255E  0EFF               	movlw	255
  6607  002560  1426               	andwf	___fldiv@grs^0,w,c
  6608  002562  6E1B               	movwf	??___fldiv^0,c
  6609  002564  0EFF               	movlw	255
  6610  002566  1427               	andwf	(___fldiv@grs+1)^0,w,c
  6611  002568  6E1C               	movwf	(??___fldiv+1)^0,c
  6612  00256A  0EFF               	movlw	255
  6613  00256C  1428               	andwf	(___fldiv@grs+2)^0,w,c
  6614  00256E  6E1D               	movwf	(??___fldiv+2)^0,c
  6615  002570  0E7F               	movlw	127
  6616  002572  1429               	andwf	(___fldiv@grs+3)^0,w,c
  6617  002574  6E1E               	movwf	(??___fldiv+3)^0,c
  6618  002576  501B               	movf	??___fldiv^0,w,c
  6619  002578  101C               	iorwf	(??___fldiv+1)^0,w,c
  6620  00257A  101D               	iorwf	(??___fldiv+2)^0,w,c
  6621  00257C  101E               	iorwf	(??___fldiv+3)^0,w,c
  6622  00257E  B4D8               	btfsc	status,2,c
  6623  002580  EFC4  F012         	goto	u2481
  6624  002584  EFC6  F012         	goto	u2480
  6625  002588                     u2481:
  6626  002588  EFCA  F012         	goto	l1020
  6627  00258C                     u2480:
  6628  00258C                     l2886:
  6629  00258C  0E01               	movlw	1
  6630  00258E  6E2B               	movwf	___fldiv@aexp^0,c
  6631  002590  EFD3  F012         	goto	l1019
  6632  002594                     l1020:
  6633  002594  A013               	btfss	___fldiv@b^0,0,c
  6634  002596  EFCF  F012         	goto	u2491
  6635  00259A  EFD1  F012         	goto	u2490
  6636  00259E                     u2491:
  6637  00259E  EFD3  F012         	goto	l1019
  6638  0025A2                     u2490:
  6639  0025A2  EFC6  F012         	goto	l2886
  6640  0025A6                     l1019:
  6641  0025A6  502B               	movf	___fldiv@aexp^0,w,c
  6642  0025A8  B4D8               	btfsc	status,2,c
  6643  0025AA  EFD9  F012         	goto	u2501
  6644  0025AE  EFDB  F012         	goto	u2500
  6645  0025B2                     u2501:
  6646  0025B2  EFFF  F012         	goto	l2898
  6647  0025B6                     u2500:
  6648  0025B6  0E01               	movlw	1
  6649  0025B8  2613               	addwf	___fldiv@b^0,f,c
  6650  0025BA  0E00               	movlw	0
  6651  0025BC  2214               	addwfc	(___fldiv@b+1)^0,f,c
  6652  0025BE  2215               	addwfc	(___fldiv@b+2)^0,f,c
  6653  0025C0  2216               	addwfc	(___fldiv@b+3)^0,f,c
  6654  0025C2  A016               	btfss	(___fldiv@b+3)^0,0,c
  6655  0025C4  EFE6  F012         	goto	u2511
  6656  0025C8  EFE8  F012         	goto	u2510
  6657  0025CC                     u2511:
  6658  0025CC  EFFF  F012         	goto	l2898
  6659  0025D0                     u2510:
  6660  0025D0  C013  F01B         	movff	___fldiv@b,??___fldiv
  6661  0025D4  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
  6662  0025D8  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
  6663  0025DC  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
  6664  0025E0  341E               	rlcf	(??___fldiv+3)^0,w,c
  6665  0025E2  321E               	rrcf	(??___fldiv+3)^0,f,c
  6666  0025E4  321D               	rrcf	(??___fldiv+2)^0,f,c
  6667  0025E6  321C               	rrcf	(??___fldiv+1)^0,f,c
  6668  0025E8  321B               	rrcf	??___fldiv^0,f,c
  6669  0025EA  C01B  F013         	movff	??___fldiv,___fldiv@b
  6670  0025EE  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
  6671  0025F2  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
  6672  0025F6  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
  6673  0025FA  4A24               	infsnz	___fldiv@new_exp^0,f,c
  6674  0025FC  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
  6675  0025FE                     l2898:
  6676  0025FE  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6677  002600  EF0A  F013         	goto	u2521
  6678  002604  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  6679  002606  E108               	bnz	u2520
  6680  002608  2824               	incf	___fldiv@new_exp^0,w,c
  6681  00260A  A0D8               	btfss	status,0,c
  6682  00260C  EF0A  F013         	goto	u2521
  6683  002610  EF0C  F013         	goto	u2520
  6684  002614                     u2521:
  6685  002614  EF17  F013         	goto	l2902
  6686  002618                     u2520:
  6687  002618  0E00               	movlw	0
  6688  00261A  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  6689  00261C  6824               	setf	___fldiv@new_exp^0,c
  6690  00261E  0E00               	movlw	0
  6691  002620  6E13               	movwf	___fldiv@b^0,c
  6692  002622  0E00               	movlw	0
  6693  002624  6E14               	movwf	(___fldiv@b+1)^0,c
  6694  002626  0E00               	movlw	0
  6695  002628  6E15               	movwf	(___fldiv@b+2)^0,c
  6696  00262A  0E00               	movlw	0
  6697  00262C  6E16               	movwf	(___fldiv@b+3)^0,c
  6698  00262E                     l2902:
  6699  00262E  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6700  002630  EF24  F013         	goto	u2530
  6701  002634  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  6702  002636  E106               	bnz	u2531
  6703  002638  0424               	decf	___fldiv@new_exp^0,w,c
  6704  00263A  B0D8               	btfsc	status,0,c
  6705  00263C  EF22  F013         	goto	u2531
  6706  002640  EF24  F013         	goto	u2530
  6707  002644                     u2531:
  6708  002644  EF32  F013         	goto	l2906
  6709  002648                     u2530:
  6710  002648  0E00               	movlw	0
  6711  00264A  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  6712  00264C  0E00               	movlw	0
  6713  00264E  6E24               	movwf	___fldiv@new_exp^0,c
  6714  002650  0E00               	movlw	0
  6715  002652  6E13               	movwf	___fldiv@b^0,c
  6716  002654  0E00               	movlw	0
  6717  002656  6E14               	movwf	(___fldiv@b+1)^0,c
  6718  002658  0E00               	movlw	0
  6719  00265A  6E15               	movwf	(___fldiv@b+2)^0,c
  6720  00265C  0E00               	movlw	0
  6721  00265E  6E16               	movwf	(___fldiv@b+3)^0,c
  6722  002660  0E00               	movlw	0
  6723  002662  6E23               	movwf	___fldiv@sign^0,c
  6724  002664                     l2906:
  6725  002664  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
  6726  002668  A02A               	btfss	___fldiv@bexp^0,0,c
  6727  00266A  EF39  F013         	goto	u2541
  6728  00266E  EF3B  F013         	goto	u2540
  6729  002672                     u2541:
  6730  002672  EF3E  F013         	goto	l2912
  6731  002676                     u2540:
  6732  002676  8E15               	bsf	(___fldiv@b+2)^0,7,c
  6733  002678  EF3F  F013         	goto	l2914
  6734  00267C                     l2912:
  6735  00267C  9E15               	bcf	(___fldiv@b+2)^0,7,c
  6736  00267E                     l2914:
  6737  00267E  90D8               	bcf	status,0,c
  6738  002680  302A               	rrcf	___fldiv@bexp^0,w,c
  6739  002682  6E16               	movwf	(___fldiv@b+3)^0,c
  6740  002684  EFF5  F011         	goto	l2828
  6741  002688                     l1006:
  6742  002688  0012               	return		;funcret
  6743  00268A                     __end_of___fldiv:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _color_click_init *****************
  6747 ;; Defined at:
  6748 ;;		line 8 in file "color.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;Total ram usage:        1 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 5
  6769 ;; This function calls:
  6770 ;;		_I2C_2_Master_Init
  6771 ;;		_color_writetoaddr
  6772 ;; This function is called by:
  6773 ;;		_main
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text25
  6778  003790                     __ptext25:
  6779                           	callstack 0
  6780  003790                     _color_click_init:
  6781                           	callstack 25
  6782  003790                     
  6783                           ;color.c: 11:     I2C_2_Master_Init();
  6784  003790  EC10  F01C         	call	_I2C_2_Master_Init	;wreg free
  6785  003794                     
  6786                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  6787  003794  0E01               	movlw	1
  6788  003796  6E07               	movwf	color_writetoaddr@value^0,c
  6789  003798  0E00               	movlw	0
  6790  00379A  EC86  F01C         	call	_color_writetoaddr
  6791  00379E                     
  6792                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6793  00379E  0E3F               	movlw	63
  6794  0037A0  6E09               	movwf	??_color_click_init^0,c
  6795  0037A2  0E55               	movlw	85
  6796  0037A4                     u4217:
  6797  0037A4  2EE8               	decfsz	wreg,f,c
  6798  0037A6  D7FE               	bra	u4217
  6799  0037A8  2E09               	decfsz	??_color_click_init^0,f,c
  6800  0037AA  D7FC               	bra	u4217
  6801  0037AC  F000               	nop	
  6802  0037AE                     
  6803                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  6804  0037AE  0E03               	movlw	3
  6805  0037B0  6E07               	movwf	color_writetoaddr@value^0,c
  6806  0037B2  0E00               	movlw	0
  6807  0037B4  EC86  F01C         	call	_color_writetoaddr
  6808  0037B8                     
  6809                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  6810  0037B8  0ED5               	movlw	213
  6811  0037BA  6E07               	movwf	color_writetoaddr@value^0,c
  6812  0037BC  0E01               	movlw	1
  6813  0037BE  EC86  F01C         	call	_color_writetoaddr
  6814  0037C2  0012               	return		;funcret
  6815  0037C4                     __end_of_color_click_init:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _color_writetoaddr *****************
  6819 ;; Defined at:
  6820 ;;		line 24 in file "color.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  address         1    wreg     unsigned char 
  6823 ;;  value           1    6[COMRAM] unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  address         1    7[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6835 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;Total ram usage:        2 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 4
  6842 ;; This function calls:
  6843 ;;		_I2C_2_Master_Start
  6844 ;;		_I2C_2_Master_Stop
  6845 ;;		_I2C_2_Master_Write
  6846 ;; This function is called by:
  6847 ;;		_color_click_init
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text26
  6852  00390C                     __ptext26:
  6853                           	callstack 0
  6854  00390C                     _color_writetoaddr:
  6855                           	callstack 25
  6856                           
  6857                           ;incstack = 0
  6858                           ;color_writetoaddr@address stored from wreg
  6859  00390C  6E08               	movwf	color_writetoaddr@address^0,c
  6860  00390E                     
  6861                           ;color.c: 25:     I2C_2_Master_Start();
  6862  00390E  ECCC  F01C         	call	_I2C_2_Master_Start	;wreg free
  6863                           
  6864                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  6865  003912  0E52               	movlw	82
  6866  003914  ECBB  F01C         	call	_I2C_2_Master_Write
  6867                           
  6868                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  6869  003918  5008               	movf	color_writetoaddr@address^0,w,c
  6870  00391A  0980               	iorlw	128
  6871  00391C  ECBB  F01C         	call	_I2C_2_Master_Write
  6872                           
  6873                           ;color.c: 28:     I2C_2_Master_Write(value);
  6874  003920  5007               	movf	color_writetoaddr@value^0,w,c
  6875  003922  ECBB  F01C         	call	_I2C_2_Master_Write
  6876                           
  6877                           ;color.c: 29:     I2C_2_Master_Stop();
  6878  003926  ECC7  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6879  00392A  0012               	return		;funcret
  6880  00392C                     __end_of_color_writetoaddr:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _I2C_2_Master_Init *****************
  6884 ;; Defined at:
  6885 ;;		line 4 in file "i2c.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 2
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_color_click_init
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text27
  6914  003820                     __ptext27:
  6915                           	callstack 0
  6916  003820                     _I2C_2_Master_Init:
  6917                           	callstack 27
  6918  003820                     
  6919                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6920  003820  010E               	movlb	14	; () banked
  6921  003822  51D9               	movf	217,w,b	;volatile
  6922  003824  0BF0               	andlw	-16
  6923  003826  0908               	iorlw	8
  6924  003828  6FD9               	movwf	217,b	;volatile
  6925  00382A                     
  6926                           ; BSR set to: 14
  6927                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6928  00382A  8BD9               	bsf	217,5,b	;volatile
  6929                           
  6930                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6931  00382C  0E9F               	movlw	159
  6932  00382E  6FD6               	movwf	214,b	;volatile
  6933  003830                     
  6934                           ; BSR set to: 14
  6935                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6936  003830  8A84               	bsf	132,5,c	;volatile
  6937  003832                     
  6938                           ; BSR set to: 14
  6939                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6940  003832  8C84               	bsf	132,6,c	;volatile
  6941  003834                     
  6942                           ; BSR set to: 14
  6943                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6944  003834  9BA7               	bcf	167,5,b	;volatile
  6945  003836                     
  6946                           ; BSR set to: 14
  6947                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6948  003836  9DA7               	bcf	167,6,b	;volatile
  6949                           
  6950                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6951  003838  0E1D               	movlw	29
  6952  00383A  6F1D               	movwf	29,b	;volatile
  6953                           
  6954                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6955  00383C  0E1E               	movlw	30
  6956  00383E  6F1C               	movwf	28,b	;volatile
  6957                           
  6958                           ;i2c.c: 18:   RD5PPS=0x1C;
  6959  003840  0E1C               	movlw	28
  6960  003842  6F6F               	movwf	111,b	;volatile
  6961                           
  6962                           ;i2c.c: 19:   RD6PPS=0x1B;
  6963  003844  0E1B               	movlw	27
  6964  003846  6F70               	movwf	112,b	;volatile
  6965  003848                     
  6966                           ; BSR set to: 14
  6967  003848  0012               	return		;funcret
  6968  00384A                     __end_of_I2C_2_Master_Init:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _calibrateW *****************
  6972 ;; Defined at:
  6973 ;;		line 83 in file "color.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  m               2   15[COMRAM] PTR struct RGB_val
  6976 ;;		 -> main@test(18), 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;Total ram usage:        2 bytes
  6993 ;; Hardware stack levels used: 1
  6994 ;; Hardware stack levels required when called: 5
  6995 ;; This function calls:
  6996 ;;		_color_read_Blue
  6997 ;;		_color_read_Green
  6998 ;;		_color_read_Red
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text28
  7005  0035C2                     __ptext28:
  7006                           	callstack 0
  7007  0035C2                     _calibrateW:
  7008                           	callstack 25
  7009  0035C2                     
  7010                           ;color.c: 84:     (m->whiteR) = color_read_Red();
  7011  0035C2  EC44  F01A         	call	_color_read_Red	;wreg free
  7012  0035C6  EE20 F006          	lfsr	2,6
  7013  0035CA  5010               	movf	calibrateW@m^0,w,c
  7014  0035CC  26D9               	addwf	fsr2l,f,c
  7015  0035CE  5011               	movf	(calibrateW@m+1)^0,w,c
  7016  0035D0  22DA               	addwfc	fsr2h,f,c
  7017  0035D2  C009  FFDE         	movff	?_color_read_Red,postinc2
  7018  0035D6  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  7019                           
  7020                           ;color.c: 85:     (m->whiteG) = color_read_Green();
  7021  0035DA  EC6C  F01A         	call	_color_read_Green	;wreg free
  7022  0035DE  EE20 F008          	lfsr	2,8
  7023  0035E2  5010               	movf	calibrateW@m^0,w,c
  7024  0035E4  26D9               	addwf	fsr2l,f,c
  7025  0035E6  5011               	movf	(calibrateW@m+1)^0,w,c
  7026  0035E8  22DA               	addwfc	fsr2h,f,c
  7027  0035EA  C009  FFDE         	movff	?_color_read_Green,postinc2
  7028  0035EE  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  7029                           
  7030                           ;color.c: 86:     (m->whiteB) = color_read_Blue();
  7031  0035F2  EC94  F01A         	call	_color_read_Blue	;wreg free
  7032  0035F6  EE20 F00A          	lfsr	2,10
  7033  0035FA  5010               	movf	calibrateW@m^0,w,c
  7034  0035FC  26D9               	addwf	fsr2l,f,c
  7035  0035FE  5011               	movf	(calibrateW@m+1)^0,w,c
  7036  003600  22DA               	addwfc	fsr2h,f,c
  7037  003602  C009  FFDE         	movff	?_color_read_Blue,postinc2
  7038  003606  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  7039  00360A  0012               	return		;funcret
  7040  00360C                     __end_of_calibrateW:
  7041                           	callstack 0
  7042                           
  7043 ;; *************** function _calibrateB *****************
  7044 ;; Defined at:
  7045 ;;		line 89 in file "color.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  m               2   15[COMRAM] PTR struct RGB_val
  7048 ;;		 -> main@test(18), 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7060 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;Total ram usage:        2 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 5
  7067 ;; This function calls:
  7068 ;;		_color_read_Blue
  7069 ;;		_color_read_Green
  7070 ;;		_color_read_Red
  7071 ;; This function is called by:
  7072 ;;		_main
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text29
  7077  00360C                     __ptext29:
  7078                           	callstack 0
  7079  00360C                     _calibrateB:
  7080                           	callstack 25
  7081  00360C                     
  7082                           ;color.c: 90:     (m->blackR) = color_read_Red();
  7083  00360C  EC44  F01A         	call	_color_read_Red	;wreg free
  7084  003610  C010  FFD9         	movff	calibrateB@m,fsr2l
  7085  003614  C011  FFDA         	movff	calibrateB@m+1,fsr2h
  7086  003618  C009  FFDE         	movff	?_color_read_Red,postinc2
  7087  00361C  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  7088                           
  7089                           ;color.c: 91:     (m->blackG) = color_read_Green();
  7090  003620  EC6C  F01A         	call	_color_read_Green	;wreg free
  7091  003624  EE20 F002          	lfsr	2,2
  7092  003628  5010               	movf	calibrateB@m^0,w,c
  7093  00362A  26D9               	addwf	fsr2l,f,c
  7094  00362C  5011               	movf	(calibrateB@m+1)^0,w,c
  7095  00362E  22DA               	addwfc	fsr2h,f,c
  7096  003630  C009  FFDE         	movff	?_color_read_Green,postinc2
  7097  003634  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  7098                           
  7099                           ;color.c: 92:     (m->blackB) = color_read_Blue();
  7100  003638  EC94  F01A         	call	_color_read_Blue	;wreg free
  7101  00363C  EE20 F004          	lfsr	2,4
  7102  003640  5010               	movf	calibrateB@m^0,w,c
  7103  003642  26D9               	addwf	fsr2l,f,c
  7104  003644  5011               	movf	(calibrateB@m+1)^0,w,c
  7105  003646  22DA               	addwfc	fsr2h,f,c
  7106  003648  C009  FFDE         	movff	?_color_read_Blue,postinc2
  7107  00364C  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  7108  003650  0012               	return		;funcret
  7109  003652                     __end_of_calibrateB:
  7110                           	callstack 0
  7111                           
  7112 ;; *************** function _color_read_Red *****************
  7113 ;; Defined at:
  7114 ;;		line 32 in file "color.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  tmp             2   13[COMRAM] unsigned int 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2    8[COMRAM] unsigned int 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7130 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7132 ;;Total ram usage:        7 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 4
  7135 ;; This function calls:
  7136 ;;		_I2C_2_Master_Read
  7137 ;;		_I2C_2_Master_RepStart
  7138 ;;		_I2C_2_Master_Start
  7139 ;;		_I2C_2_Master_Stop
  7140 ;;		_I2C_2_Master_Write
  7141 ;; This function is called by:
  7142 ;;		_read_colours
  7143 ;;		_calibrateW
  7144 ;;		_calibrateB
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text30
  7149  003488                     __ptext30:
  7150                           	callstack 0
  7151  003488                     _color_read_Red:
  7152                           	callstack 25
  7153  003488                     
  7154                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7155  003488  ECCC  F01C         	call	_I2C_2_Master_Start	;wreg free
  7156                           
  7157                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7158  00348C  0E52               	movlw	82
  7159  00348E  ECBB  F01C         	call	_I2C_2_Master_Write
  7160                           
  7161                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7162  003492  0EB6               	movlw	182
  7163  003494  ECBB  F01C         	call	_I2C_2_Master_Write
  7164                           
  7165                           ;color.c: 38:  I2C_2_Master_RepStart();
  7166  003498  ECD1  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  7167                           
  7168                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7169  00349C  0E53               	movlw	83
  7170  00349E  ECBB  F01C         	call	_I2C_2_Master_Write
  7171                           
  7172                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7173  0034A2  0E01               	movlw	1
  7174  0034A4  EC6C  F01B         	call	_I2C_2_Master_Read
  7175  0034A8  6E0B               	movwf	??_color_read_Red^0,c
  7176  0034AA  500B               	movf	??_color_read_Red^0,w,c
  7177  0034AC  6E0E               	movwf	color_read_Red@tmp^0,c
  7178  0034AE  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  7179                           
  7180                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7181  0034B0  0E00               	movlw	0
  7182  0034B2  EC6C  F01B         	call	_I2C_2_Master_Read
  7183  0034B6  6E0B               	movwf	??_color_read_Red^0,c
  7184  0034B8  500B               	movf	??_color_read_Red^0,w,c
  7185  0034BA  6E0D               	movwf	(??_color_read_Red+2)^0,c
  7186  0034BC  6A0C               	clrf	(??_color_read_Red+1)^0,c
  7187  0034BE  500E               	movf	color_read_Red@tmp^0,w,c
  7188  0034C0  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  7189  0034C2  6E0E               	movwf	color_read_Red@tmp^0,c
  7190  0034C4  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  7191  0034C6  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  7192  0034C8  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  7193                           
  7194                           ;color.c: 42:  I2C_2_Master_Stop();
  7195  0034CA  ECC7  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7196  0034CE                     
  7197                           ;color.c: 43:  return tmp;
  7198  0034CE  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  7199  0034D2  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7200  0034D6  0012               	return		;funcret
  7201  0034D8                     __end_of_color_read_Red:
  7202                           	callstack 0
  7203                           
  7204 ;; *************** function _color_read_Green *****************
  7205 ;; Defined at:
  7206 ;;		line 46 in file "color.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  tmp             2   13[COMRAM] unsigned int 
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  2    8[COMRAM] unsigned int 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7224 ;;Total ram usage:        7 bytes
  7225 ;; Hardware stack levels used: 1
  7226 ;; Hardware stack levels required when called: 4
  7227 ;; This function calls:
  7228 ;;		_I2C_2_Master_Read
  7229 ;;		_I2C_2_Master_RepStart
  7230 ;;		_I2C_2_Master_Start
  7231 ;;		_I2C_2_Master_Stop
  7232 ;;		_I2C_2_Master_Write
  7233 ;; This function is called by:
  7234 ;;		_read_colours
  7235 ;;		_calibrateW
  7236 ;;		_calibrateB
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text31
  7241  0034D8                     __ptext31:
  7242                           	callstack 0
  7243  0034D8                     _color_read_Green:
  7244                           	callstack 25
  7245  0034D8                     
  7246                           ;color.c: 47:     unsigned int tmp;;color.c: 48:     I2C_2_Master_Start();
  7247  0034D8  ECCC  F01C         	call	_I2C_2_Master_Start	;wreg free
  7248                           
  7249                           ;color.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  7250  0034DC  0E52               	movlw	82
  7251  0034DE  ECBB  F01C         	call	_I2C_2_Master_Write
  7252                           
  7253                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x18);
  7254  0034E2  0EB8               	movlw	184
  7255  0034E4  ECBB  F01C         	call	_I2C_2_Master_Write
  7256                           
  7257                           ;color.c: 51:  I2C_2_Master_RepStart();
  7258  0034E8  ECD1  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  7259                           
  7260                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7261  0034EC  0E53               	movlw	83
  7262  0034EE  ECBB  F01C         	call	_I2C_2_Master_Write
  7263                           
  7264                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7265  0034F2  0E01               	movlw	1
  7266  0034F4  EC6C  F01B         	call	_I2C_2_Master_Read
  7267  0034F8  6E0B               	movwf	??_color_read_Green^0,c
  7268  0034FA  500B               	movf	??_color_read_Green^0,w,c
  7269  0034FC  6E0E               	movwf	color_read_Green@tmp^0,c
  7270  0034FE  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7271                           
  7272                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7273  003500  0E00               	movlw	0
  7274  003502  EC6C  F01B         	call	_I2C_2_Master_Read
  7275  003506  6E0B               	movwf	??_color_read_Green^0,c
  7276  003508  500B               	movf	??_color_read_Green^0,w,c
  7277  00350A  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7278  00350C  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7279  00350E  500E               	movf	color_read_Green@tmp^0,w,c
  7280  003510  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7281  003512  6E0E               	movwf	color_read_Green@tmp^0,c
  7282  003514  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7283  003516  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7284  003518  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7285                           
  7286                           ;color.c: 55:     I2C_2_Master_Stop();
  7287  00351A  ECC7  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7288  00351E                     
  7289                           ;color.c: 56:     return tmp;
  7290  00351E  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7291  003522  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7292  003526  0012               	return		;funcret
  7293  003528                     __end_of_color_read_Green:
  7294                           	callstack 0
  7295                           
  7296 ;; *************** function _color_read_Blue *****************
  7297 ;; Defined at:
  7298 ;;		line 59 in file "color.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  tmp             2   13[COMRAM] unsigned int 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  2    8[COMRAM] unsigned int 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;Total ram usage:        7 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 4
  7319 ;; This function calls:
  7320 ;;		_I2C_2_Master_Read
  7321 ;;		_I2C_2_Master_RepStart
  7322 ;;		_I2C_2_Master_Start
  7323 ;;		_I2C_2_Master_Stop
  7324 ;;		_I2C_2_Master_Write
  7325 ;; This function is called by:
  7326 ;;		_read_colours
  7327 ;;		_calibrateW
  7328 ;;		_calibrateB
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text32
  7333  003528                     __ptext32:
  7334                           	callstack 0
  7335  003528                     _color_read_Blue:
  7336                           	callstack 25
  7337  003528                     
  7338                           ;color.c: 60:     unsigned int tmp;;color.c: 61:     I2C_2_Master_Start();
  7339  003528  ECCC  F01C         	call	_I2C_2_Master_Start	;wreg free
  7340                           
  7341                           ;color.c: 62:     I2C_2_Master_Write(0x52 | 0x00);
  7342  00352C  0E52               	movlw	82
  7343  00352E  ECBB  F01C         	call	_I2C_2_Master_Write
  7344                           
  7345                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x1A);
  7346  003532  0EBA               	movlw	186
  7347  003534  ECBB  F01C         	call	_I2C_2_Master_Write
  7348                           
  7349                           ;color.c: 64:  I2C_2_Master_RepStart();
  7350  003538  ECD1  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  7351                           
  7352                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7353  00353C  0E53               	movlw	83
  7354  00353E  ECBB  F01C         	call	_I2C_2_Master_Write
  7355                           
  7356                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7357  003542  0E01               	movlw	1
  7358  003544  EC6C  F01B         	call	_I2C_2_Master_Read
  7359  003548  6E0B               	movwf	??_color_read_Blue^0,c
  7360  00354A  500B               	movf	??_color_read_Blue^0,w,c
  7361  00354C  6E0E               	movwf	color_read_Blue@tmp^0,c
  7362  00354E  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7363                           
  7364                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7365  003550  0E00               	movlw	0
  7366  003552  EC6C  F01B         	call	_I2C_2_Master_Read
  7367  003556  6E0B               	movwf	??_color_read_Blue^0,c
  7368  003558  500B               	movf	??_color_read_Blue^0,w,c
  7369  00355A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7370  00355C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7371  00355E  500E               	movf	color_read_Blue@tmp^0,w,c
  7372  003560  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7373  003562  6E0E               	movwf	color_read_Blue@tmp^0,c
  7374  003564  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7375  003566  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7376  003568  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7377                           
  7378                           ;color.c: 68:     I2C_2_Master_Stop();
  7379  00356A  ECC7  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7380  00356E                     
  7381                           ;color.c: 69:     return tmp;
  7382  00356E  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7383  003572  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7384  003576  0012               	return		;funcret
  7385  003578                     __end_of_color_read_Blue:
  7386                           	callstack 0
  7387                           
  7388 ;; *************** function _I2C_2_Master_Write *****************
  7389 ;; Defined at:
  7390 ;;		line 45 in file "i2c.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  data_byte       1    wreg     unsigned char 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  data_byte       1    5[COMRAM] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2, status,0, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7408 ;;Total ram usage:        1 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 3
  7411 ;; This function calls:
  7412 ;;		_I2C_2_Master_Idle
  7413 ;; This function is called by:
  7414 ;;		_color_writetoaddr
  7415 ;;		_color_read_Red
  7416 ;;		_color_read_Green
  7417 ;;		_color_read_Blue
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text33
  7422  003976                     __ptext33:
  7423                           	callstack 0
  7424  003976                     _I2C_2_Master_Write:
  7425                           	callstack 25
  7426                           
  7427                           ;incstack = 0
  7428                           ;I2C_2_Master_Write@data_byte stored from wreg
  7429  003976  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  7430  003978                     
  7431                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7432  003978  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7433  00397C                     
  7434                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7435  00397C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7436  003980  0012               	return		;funcret
  7437  003982                     __end_of_I2C_2_Master_Write:
  7438                           	callstack 0
  7439                           
  7440 ;; *************** function _I2C_2_Master_Stop *****************
  7441 ;; Defined at:
  7442 ;;		line 39 in file "i2c.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;		None
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;		None
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		wreg, status,2, status,0, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;Total ram usage:        0 bytes
  7461 ;; Hardware stack levels used: 1
  7462 ;; Hardware stack levels required when called: 3
  7463 ;; This function calls:
  7464 ;;		_I2C_2_Master_Idle
  7465 ;; This function is called by:
  7466 ;;		_color_writetoaddr
  7467 ;;		_color_read_Red
  7468 ;;		_color_read_Green
  7469 ;;		_color_read_Blue
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text34
  7474  00398E                     __ptext34:
  7475                           	callstack 0
  7476  00398E                     _I2C_2_Master_Stop:
  7477                           	callstack 25
  7478  00398E                     
  7479                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7480  00398E  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7481  003992                     
  7482                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7483  003992  010E               	movlb	14	; () banked
  7484  003994  85DA               	bsf	218,2,b	;volatile
  7485  003996                     
  7486                           ; BSR set to: 14
  7487  003996  0012               	return		;funcret
  7488  003998                     __end_of_I2C_2_Master_Stop:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _I2C_2_Master_Start *****************
  7492 ;; Defined at:
  7493 ;;		line 27 in file "i2c.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;		None
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;Total ram usage:        0 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; Hardware stack levels required when called: 3
  7514 ;; This function calls:
  7515 ;;		_I2C_2_Master_Idle
  7516 ;; This function is called by:
  7517 ;;		_color_writetoaddr
  7518 ;;		_color_read_Red
  7519 ;;		_color_read_Green
  7520 ;;		_color_read_Blue
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text35
  7525  003998                     __ptext35:
  7526                           	callstack 0
  7527  003998                     _I2C_2_Master_Start:
  7528                           	callstack 25
  7529  003998                     
  7530                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7531  003998  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7532  00399C                     
  7533                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7534  00399C  010E               	movlb	14	; () banked
  7535  00399E  81DA               	bsf	218,0,b	;volatile
  7536  0039A0                     
  7537                           ; BSR set to: 14
  7538  0039A0  0012               	return		;funcret
  7539  0039A2                     __end_of_I2C_2_Master_Start:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _I2C_2_Master_RepStart *****************
  7543 ;; Defined at:
  7544 ;;		line 33 in file "i2c.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used: 1
  7564 ;; Hardware stack levels required when called: 3
  7565 ;; This function calls:
  7566 ;;		_I2C_2_Master_Idle
  7567 ;; This function is called by:
  7568 ;;		_color_read_Red
  7569 ;;		_color_read_Green
  7570 ;;		_color_read_Blue
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text36
  7575  0039A2                     __ptext36:
  7576                           	callstack 0
  7577  0039A2                     _I2C_2_Master_RepStart:
  7578                           	callstack 25
  7579  0039A2                     
  7580                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7581  0039A2  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7582  0039A6                     
  7583                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7584  0039A6  010E               	movlb	14	; () banked
  7585  0039A8  83DA               	bsf	218,1,b	;volatile
  7586  0039AA                     
  7587                           ; BSR set to: 14
  7588  0039AA  0012               	return		;funcret
  7589  0039AC                     __end_of_I2C_2_Master_RepStart:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _I2C_2_Master_Read *****************
  7593 ;; Defined at:
  7594 ;;		line 51 in file "i2c.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  ack             1    wreg     unsigned char 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  ack             1    6[COMRAM] unsigned char 
  7599 ;;  tmp             1    7[COMRAM] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      unsigned char 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;Total ram usage:        3 bytes
  7614 ;; Hardware stack levels used: 1
  7615 ;; Hardware stack levels required when called: 3
  7616 ;; This function calls:
  7617 ;;		_I2C_2_Master_Idle
  7618 ;; This function is called by:
  7619 ;;		_color_read_Red
  7620 ;;		_color_read_Green
  7621 ;;		_color_read_Blue
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text37
  7626  0036D8                     __ptext37:
  7627                           	callstack 0
  7628  0036D8                     _I2C_2_Master_Read:
  7629                           	callstack 25
  7630                           
  7631                           ; BSR set to: 14
  7632                           ;incstack = 0
  7633                           ;I2C_2_Master_Read@ack stored from wreg
  7634  0036D8  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7635  0036DA                     
  7636                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7637  0036DA  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7638  0036DE                     
  7639                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7640  0036DE  010E               	movlb	14	; () banked
  7641  0036E0  87DA               	bsf	218,3,b	;volatile
  7642                           
  7643                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7644  0036E2  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7645  0036E6                     
  7646                           ;i2c.c: 57:   tmp = SSP2BUF;
  7647  0036E6  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7648                           
  7649                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7650  0036EA  EC4F  F01C         	call	_I2C_2_Master_Idle	;wreg free
  7651  0036EE                     
  7652                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7653  0036EE  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7654  0036F0  B4D8               	btfsc	status,2,c
  7655  0036F2  EF7D  F01B         	goto	u2161
  7656  0036F6  EF81  F01B         	goto	u2160
  7657  0036FA                     u2161:
  7658  0036FA  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7659  0036FC  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7660  0036FE  EF82  F01B         	goto	u2178
  7661  003702                     u2160:
  7662  003702  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7663  003704                     u2178:
  7664  003704  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7665  003706  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7666  003708  010E               	movlb	14	; () banked
  7667  00370A  51DA               	movf	218,w,b	;volatile
  7668  00370C  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7669  00370E  0BDF               	andlw	-33
  7670  003710  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7671  003712  6FDA               	movwf	218,b	;volatile
  7672  003714                     
  7673                           ; BSR set to: 14
  7674                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7675  003714  89DA               	bsf	218,4,b	;volatile
  7676  003716                     
  7677                           ; BSR set to: 14
  7678                           ;i2c.c: 61:   return tmp;
  7679  003716  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7680  003718                     
  7681                           ; BSR set to: 14
  7682  003718  0012               	return		;funcret
  7683  00371A                     __end_of_I2C_2_Master_Read:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _I2C_2_Master_Idle *****************
  7687 ;; Defined at:
  7688 ;;		line 22 in file "i2c.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, status,2, status,0
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;Total ram usage:        1 bytes
  7707 ;; Hardware stack levels used: 1
  7708 ;; Hardware stack levels required when called: 2
  7709 ;; This function calls:
  7710 ;;		Nothing
  7711 ;; This function is called by:
  7712 ;;		_I2C_2_Master_Start
  7713 ;;		_I2C_2_Master_RepStart
  7714 ;;		_I2C_2_Master_Stop
  7715 ;;		_I2C_2_Master_Write
  7716 ;;		_I2C_2_Master_Read
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text38
  7721  00389E                     __ptext38:
  7722                           	callstack 0
  7723  00389E                     _I2C_2_Master_Idle:
  7724                           	callstack 25
  7725  00389E                     l99:
  7726  00389E  010E               	movlb	14	; () banked
  7727  0038A0  B5D8               	btfsc	216,2,b	;volatile
  7728  0038A2  EF55  F01C         	goto	u1991
  7729  0038A6  EF57  F01C         	goto	u1990
  7730  0038AA                     u1991:
  7731  0038AA  EF4F  F01C         	goto	l99
  7732  0038AE                     u1990:
  7733  0038AE                     
  7734                           ; BSR set to: 14
  7735  0038AE  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7736  0038B2  0E1F               	movlw	31
  7737  0038B4  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  7738  0038B6  A4D8               	btfss	status,2,c
  7739  0038B8  EF60  F01C         	goto	u2001
  7740  0038BC  EF62  F01C         	goto	u2000
  7741  0038C0                     u2001:
  7742  0038C0  EF4F  F01C         	goto	l99
  7743  0038C4                     u2000:
  7744  0038C4                     
  7745                           ; BSR set to: 14
  7746  0038C4  0012               	return		;funcret
  7747  0038C6                     __end_of_I2C_2_Master_Idle:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _TxBufferedString *****************
  7751 ;; Defined at:
  7752 ;;		line 98 in file "serial.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  string          2    5[COMRAM] PTR unsigned char 
  7755 ;;		 -> main@string3(30), main@string2(30), main@string1(30), main@string(30), 
  7756 ;;		 -> main@string0(30), 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;Total ram usage:        2 bytes
  7773 ;; Hardware stack levels used: 1
  7774 ;; Hardware stack levels required when called: 3
  7775 ;; This function calls:
  7776 ;;		_putCharToTxBuf
  7777 ;; This function is called by:
  7778 ;;		_main
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text39
  7783  0037C4                     __ptext39:
  7784                           	callstack 0
  7785  0037C4                     _TxBufferedString:
  7786                           	callstack 27
  7787  0037C4                     
  7788                           ;serial.c: 100:     while(*string != 0){
  7789  0037C4  EFED  F01B         	goto	l3300
  7790  0037C8                     l3296:
  7791                           
  7792                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  7793  0037C8  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  7794  0037CC  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  7795  0037D0  50DF               	movf	indf2,w,c
  7796  0037D2  EC25  F01C         	call	_putCharToTxBuf
  7797  0037D6  4A06               	infsnz	TxBufferedString@string^0,f,c
  7798  0037D8  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  7799  0037DA                     l3300:
  7800                           
  7801                           ;serial.c: 100:     while(*string != 0){
  7802  0037DA  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  7803  0037DE  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  7804  0037E2  50DF               	movf	indf2,w,c
  7805  0037E4  A4D8               	btfss	status,2,c
  7806  0037E6  EFF7  F01B         	goto	u3191
  7807  0037EA  EFF9  F01B         	goto	u3190
  7808  0037EE                     u3191:
  7809  0037EE  EFE4  F01B         	goto	l3296
  7810  0037F2                     u3190:
  7811  0037F2  0012               	return		;funcret
  7812  0037F4                     __end_of_TxBufferedString:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function _putCharToTxBuf *****************
  7816 ;; Defined at:
  7817 ;;		line 85 in file "serial.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  byte            1    wreg     unsigned char 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  byte            1    4[COMRAM] unsigned char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7835 ;;Total ram usage:        1 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 2
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_TxBufferedString
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text40
  7846  00384A                     __ptext40:
  7847                           	callstack 0
  7848  00384A                     _putCharToTxBuf:
  7849                           	callstack 27
  7850                           
  7851                           ;incstack = 0
  7852                           ;putCharToTxBuf@byte stored from wreg
  7853  00384A  6E05               	movwf	putCharToTxBuf@byte^0,c
  7854  00384C                     
  7855                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  7856  00384C  0E3B               	movlw	59
  7857  00384E  6457               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  7858  003850  EF2C  F01C         	goto	u2291
  7859  003854  EF2E  F01C         	goto	u2290
  7860  003858                     u2291:
  7861  003858  EF30  F01C         	goto	l2776
  7862  00385C                     u2290:
  7863  00385C  0E00               	movlw	0
  7864  00385E  6E57               	movwf	_TxBufWriteCnt^0,c	;volatile
  7865  003860                     l2776:
  7866                           
  7867                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  7868  003860  0E60               	movlw	low _EUSART4TXbuf
  7869  003862  2457               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  7870  003864  6ED9               	movwf	fsr2l,c
  7871  003866  6ADA               	clrf	fsr2h,c
  7872  003868  0E00               	movlw	high _EUSART4TXbuf
  7873  00386A  22DA               	addwfc	fsr2h,f,c
  7874  00386C  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  7875  003870  2A57               	incf	_TxBufWriteCnt^0,f,c	;volatile
  7876  003872  0012               	return		;funcret
  7877  003874                     __end_of_putCharToTxBuf:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _Interrupts_init *****************
  7881 ;; Defined at:
  7882 ;;		line 10 in file "interrupts.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;		None
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;		None
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      void 
  7889 ;; Registers used:
  7890 ;;		None
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;Total ram usage:        0 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 2
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_main
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text41
  7911  003982                     __ptext41:
  7912                           	callstack 0
  7913  003982                     _Interrupts_init:
  7914                           	callstack 28
  7915  003982                     
  7916                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  7917  003982  8CF2               	bsf	242,6,c	;volatile
  7918                           
  7919                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  7920  003984  010E               	movlb	14	; () banked
  7921  003986  872D               	bsf	45,3,b	;volatile
  7922                           
  7923                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  7924  003988  952D               	bcf	45,2,b	;volatile
  7925                           
  7926                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  7927  00398A  8EF2               	bsf	242,7,c	;volatile
  7928  00398C                     
  7929                           ; BSR set to: 14
  7930  00398C  0012               	return		;funcret
  7931  00398E                     __end_of_Interrupts_init:
  7932                           	callstack 0
  7933                           
  7934 ;; *************** function _HighISR *****************
  7935 ;; Defined at:
  7936 ;;		line 24 in file "interrupts.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;Total ram usage:        2 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; Hardware stack levels required when called: 1
  7957 ;; This function calls:
  7958 ;;		_getCharFromTxBuf
  7959 ;;		_putCharToRxBuf
  7960 ;;		i2_isDataInTxBuf
  7961 ;; This function is called by:
  7962 ;;		Interrupt level 2
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	intcode
  7967  000008                     __pintcode:
  7968                           	callstack 0
  7969  000008                     _HighISR:
  7970                           	callstack 21
  7971                           
  7972                           ; BSR set to: 14
  7973                           ;incstack = 0
  7974  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7975  00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  7976  00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  7977  000012                     
  7978                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  7979  000012  010E               	movlb	14	; () banked
  7980  000014  A737               	btfss	55,3,b	;volatile
  7981  000016  EF0F  F000         	goto	i2u331_41
  7982  00001A  EF11  F000         	goto	i2u331_40
  7983  00001E                     i2u331_41:
  7984  00001E  EF14  F000         	goto	i2l3488
  7985  000022                     i2u331_40:
  7986  000022                     
  7987                           ; BSR set to: 14
  7988                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  7989  000022  51E3               	movf	227,w,b	;volatile
  7990  000024  EC3A  F01C         	call	_putCharToRxBuf
  7991  000028                     i2l3488:
  7992                           
  7993                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  7994  000028  010E               	movlb	14	; () banked
  7995  00002A  A537               	btfss	55,2,b	;volatile
  7996  00002C  EF1A  F000         	goto	i2u332_41
  7997  000030  EF1C  F000         	goto	i2u332_40
  7998  000034                     i2u332_41:
  7999  000034  EF35  F000         	goto	i2l421
  8000  000038                     i2u332_40:
  8001  000038                     
  8002                           ; BSR set to: 14
  8003  000038  A52D               	btfss	45,2,b	;volatile
  8004  00003A  EF21  F000         	goto	i2u333_41
  8005  00003E  EF23  F000         	goto	i2u333_40
  8006  000042                     i2u333_41:
  8007  000042  EF35  F000         	goto	i2l421
  8008  000046                     i2u333_40:
  8009  000046                     
  8010                           ; BSR set to: 14
  8011                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  8012  000046  ECAF  F01C         	call	i2_isDataInTxBuf	;wreg free
  8013  00004A  06E8               	decf	wreg,f,c
  8014  00004C  A4D8               	btfss	status,2,c
  8015  00004E  EF2B  F000         	goto	i2u334_41
  8016  000052  EF2D  F000         	goto	i2u334_40
  8017  000056                     i2u334_41:
  8018  000056  EF33  F000         	goto	i2l419
  8019  00005A                     i2u334_40:
  8020  00005A  ECFA  F01B         	call	_getCharFromTxBuf	;wreg free
  8021  00005E  010E               	movlb	14	; () banked
  8022  000060  6FE4               	movwf	228,b	;volatile
  8023  000062  EF35  F000         	goto	i2l421
  8024  000066                     i2l419:
  8025  000066  010E               	movlb	14	; () banked
  8026  000068  952D               	bcf	45,2,b	;volatile
  8027  00006A                     i2l421:
  8028                           
  8029                           ; BSR set to: 14
  8030  00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  8031  00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  8032  000072  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8033  000074  0011               	retfie		f
  8034  000076                     __end_of_HighISR:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function i2_isDataInTxBuf *****************
  8038 ;; Defined at:
  8039 ;;		line 93 in file "serial.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      unsigned char 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_HighISR
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text43
  8067  00395E                     __ptext43:
  8068                           	callstack 0
  8069  00395E                     i2_isDataInTxBuf:
  8070                           	callstack 21
  8071  00395E                     
  8072                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  8073  00395E  5056               	movf	_TxBufReadCnt^0,w,c	;volatile
  8074  003960  1857               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  8075  003962  A4D8               	btfss	status,2,c
  8076  003964  EFB6  F01C         	goto	i2u155_41
  8077  003968  EFB9  F01C         	goto	i2u155_40
  8078  00396C                     i2u155_41:
  8079  00396C  0E01               	movlw	1
  8080  00396E  EFBA  F01C         	goto	i2u156_40
  8081  003972                     i2u155_40:
  8082  003972  0E00               	movlw	0
  8083  003974                     i2u156_40:
  8084  003974  0012               	return		;funcret
  8085  003976                     __end_ofi2_isDataInTxBuf:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function _putCharToRxBuf *****************
  8089 ;; Defined at:
  8090 ;;		line 63 in file "serial.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  byte            1    wreg     unsigned char 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  byte            1    0[COMRAM] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;Total ram usage:        1 bytes
  8109 ;; Hardware stack levels used: 1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_HighISR
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text44
  8118  003874                     __ptext44:
  8119                           	callstack 0
  8120  003874                     _putCharToRxBuf:
  8121                           	callstack 21
  8122                           
  8123                           ;incstack = 0
  8124                           ;putCharToRxBuf@byte stored from wreg
  8125  003874  6E01               	movwf	putCharToRxBuf@byte^0,c
  8126  003876                     
  8127                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  8128  003876  0E13               	movlw	19
  8129  003878  6459               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  8130  00387A  EF41  F01C         	goto	i2u321_41
  8131  00387E  EF43  F01C         	goto	i2u321_40
  8132  003882                     i2u321_41:
  8133  003882  EF45  F01C         	goto	i2l3310
  8134  003886                     i2u321_40:
  8135  003886  0E00               	movlw	0
  8136  003888  6E59               	movwf	_RxBufWriteCnt^0,c	;volatile
  8137  00388A                     i2l3310:
  8138                           
  8139                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  8140  00388A  0E9C               	movlw	low _EUSART4RXbuf
  8141  00388C  2459               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  8142  00388E  6ED9               	movwf	fsr2l,c
  8143  003890  6ADA               	clrf	fsr2h,c
  8144  003892  0E00               	movlw	high _EUSART4RXbuf
  8145  003894  22DA               	addwfc	fsr2h,f,c
  8146  003896  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  8147  00389A  2A59               	incf	_RxBufWriteCnt^0,f,c	;volatile
  8148  00389C  0012               	return		;funcret
  8149  00389E                     __end_of_putCharToRxBuf:
  8150                           	callstack 0
  8151                           
  8152 ;; *************** function _getCharFromTxBuf *****************
  8153 ;; Defined at:
  8154 ;;		line 79 in file "serial.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      unsigned char 
  8161 ;; Registers used:
  8162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;Total ram usage:        2 bytes
  8173 ;; Hardware stack levels used: 1
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_HighISR
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text45
  8182  0037F4                     __ptext45:
  8183                           	callstack 0
  8184  0037F4                     _getCharFromTxBuf:
  8185                           	callstack 21
  8186  0037F4                     
  8187                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  8188  0037F4  0E3B               	movlw	59
  8189  0037F6  6456               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  8190  0037F8  EF00  F01C         	goto	i2u322_41
  8191  0037FC  EF02  F01C         	goto	i2u322_40
  8192  003800                     i2u322_41:
  8193  003800  EF04  F01C         	goto	i2l3318
  8194  003804                     i2u322_40:
  8195  003804  0E00               	movlw	0
  8196  003806  6E56               	movwf	_TxBufReadCnt^0,c	;volatile
  8197  003808                     i2l3318:
  8198                           
  8199                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  8200  003808  2A56               	incf	_TxBufReadCnt^0,f,c	;volatile
  8201  00380A  0456               	decf	_TxBufReadCnt^0,w,c	;volatile
  8202  00380C  6E01               	movwf	??_getCharFromTxBuf^0,c
  8203  00380E  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  8204  003810  0E60               	movlw	low _EUSART4TXbuf
  8205  003812  2401               	addwf	??_getCharFromTxBuf^0,w,c
  8206  003814  6ED9               	movwf	fsr2l,c
  8207  003816  0E00               	movlw	high _EUSART4TXbuf
  8208  003818  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  8209  00381A  6EDA               	movwf	fsr2h,c
  8210  00381C  50DF               	movf	indf2,w,c
  8211  00381E  0012               	return		;funcret
  8212  003820                     __end_of_getCharFromTxBuf:
  8213                           	callstack 0
  8214                           
  8215                           	psect	rparam
  8216  0000                     
  8217                           	psect	temp
  8218  00005A                     btemp:
  8219                           	callstack 0
  8220  00005A                     	ds	1
  8221  0000                     int$flags	set	btemp
  8222  0000                     wtemp8	set	btemp+1
  8223  0000                     ttemp5	set	btemp+1
  8224  0000                     ttemp6	set	btemp+4
  8225  0000                     ttemp7	set	btemp+8
  8226                           
  8227                           	psect	idloc
  8228                           
  8229                           ;Config register IDLOC0 @ 0x200000
  8230                           ;	unspecified, using default values
  8231  200000                     	org	2097152
  8232  200000  0FFF               	dw	4095
  8233                           
  8234                           ;Config register IDLOC1 @ 0x200002
  8235                           ;	unspecified, using default values
  8236  200002                     	org	2097154
  8237  200002  0FFF               	dw	4095
  8238                           
  8239                           ;Config register IDLOC2 @ 0x200004
  8240                           ;	unspecified, using default values
  8241  200004                     	org	2097156
  8242  200004  0FFF               	dw	4095
  8243                           
  8244                           ;Config register IDLOC3 @ 0x200006
  8245                           ;	unspecified, using default values
  8246  200006                     	org	2097158
  8247  200006  0FFF               	dw	4095
  8248                           
  8249                           ;Config register IDLOC4 @ 0x200008
  8250                           ;	unspecified, using default values
  8251  200008                     	org	2097160
  8252  200008  0FFF               	dw	4095
  8253                           
  8254                           ;Config register IDLOC5 @ 0x20000A
  8255                           ;	unspecified, using default values
  8256  20000A                     	org	2097162
  8257  20000A  0FFF               	dw	4095
  8258                           
  8259                           ;Config register IDLOC6 @ 0x20000C
  8260                           ;	unspecified, using default values
  8261  20000C                     	org	2097164
  8262  20000C  0FFF               	dw	4095
  8263                           
  8264                           ;Config register IDLOC7 @ 0x20000E
  8265                           ;	unspecified, using default values
  8266  20000E                     	org	2097166
  8267  20000E  0FFF               	dw	4095
  8268                           
  8269                           	psect	config
  8270                           
  8271                           ;Config register CONFIG1L @ 0x300000
  8272                           ;	External Oscillator mode Selection bits
  8273                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8274                           ;	Power-up default value for COSC bits
  8275                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8276  300000                     	org	3145728
  8277  300000  AA                 	db	170
  8278                           
  8279                           ;Config register CONFIG1H @ 0x300001
  8280                           ;	unspecified, using default values
  8281                           ;	Clock Out Enable bit
  8282                           ;	CLKOUTEN = 0x1, unprogrammed default
  8283                           ;	Clock Switch Enable bit
  8284                           ;	CSWEN = 0x1, unprogrammed default
  8285                           ;	Fail-Safe Clock Monitor Enable bit
  8286                           ;	FCMEN = 0x1, unprogrammed default
  8287  300001                     	org	3145729
  8288  300001  FF                 	db	255
  8289                           
  8290                           ;Config register CONFIG2L @ 0x300002
  8291                           ;	unspecified, using default values
  8292                           ;	Master Clear Enable bit
  8293                           ;	MCLRE = 0x1, unprogrammed default
  8294                           ;	Power-up Timer Enable bit
  8295                           ;	PWRTE = 0x1, unprogrammed default
  8296                           ;	Low-power BOR enable bit
  8297                           ;	LPBOREN = 0x1, unprogrammed default
  8298                           ;	Brown-out Reset Enable bits
  8299                           ;	BOREN = 0x3, unprogrammed default
  8300  300002                     	org	3145730
  8301  300002  FF                 	db	255
  8302                           
  8303                           ;Config register CONFIG2H @ 0x300003
  8304                           ;	unspecified, using default values
  8305                           ;	Brown Out Reset Voltage selection bits
  8306                           ;	BORV = 0x3, unprogrammed default
  8307                           ;	ZCD Disable bit
  8308                           ;	ZCD = 0x1, unprogrammed default
  8309                           ;	PPSLOCK bit One-Way Set Enable bit
  8310                           ;	PPS1WAY = 0x1, unprogrammed default
  8311                           ;	Stack Full/Underflow Reset Enable bit
  8312                           ;	STVREN = 0x1, unprogrammed default
  8313                           ;	Debugger Enable bit
  8314                           ;	DEBUG = 0x1, unprogrammed default
  8315                           ;	Extended Instruction Set Enable bit
  8316                           ;	XINST = 0x1, unprogrammed default
  8317  300003                     	org	3145731
  8318  300003  FF                 	db	255
  8319                           
  8320                           ;Config register CONFIG3L @ 0x300004
  8321                           ;	WDT Period Select bits
  8322                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8323                           ;	WDT operating mode
  8324                           ;	WDTE = OFF, WDT Disabled
  8325  300004                     	org	3145732
  8326  300004  9F                 	db	159
  8327                           
  8328                           ;Config register CONFIG3H @ 0x300005
  8329                           ;	unspecified, using default values
  8330                           ;	WDT Window Select bits
  8331                           ;	WDTCWS = 0x7, unprogrammed default
  8332                           ;	WDT input clock selector
  8333                           ;	WDTCCS = 0x7, unprogrammed default
  8334  300005                     	org	3145733
  8335  300005  FF                 	db	255
  8336                           
  8337                           ;Config register CONFIG4L @ 0x300006
  8338                           ;	unspecified, using default values
  8339                           ;	Write Protection Block 0
  8340                           ;	WRT0 = 0x1, unprogrammed default
  8341                           ;	Write Protection Block 1
  8342                           ;	WRT1 = 0x1, unprogrammed default
  8343                           ;	Write Protection Block 2
  8344                           ;	WRT2 = 0x1, unprogrammed default
  8345                           ;	Write Protection Block 3
  8346                           ;	WRT3 = 0x1, unprogrammed default
  8347                           ;	Write Protection Block 3
  8348                           ;	WRT4 = 0x1, unprogrammed default
  8349                           ;	Write Protection Block 3
  8350                           ;	WRT5 = 0x1, unprogrammed default
  8351                           ;	Write Protection Block 3
  8352                           ;	WRT6 = 0x1, unprogrammed default
  8353                           ;	Write Protection Block 3
  8354                           ;	WRT7 = 0x1, unprogrammed default
  8355  300006                     	org	3145734
  8356  300006  FF                 	db	255
  8357                           
  8358                           ;Config register CONFIG4H @ 0x300007
  8359                           ;	unspecified, using default values
  8360                           ;	Configuration Register Write Protection bit
  8361                           ;	WRTC = 0x1, unprogrammed default
  8362                           ;	Boot Block Write Protection bit
  8363                           ;	WRTB = 0x1, unprogrammed default
  8364                           ;	Data EEPROM Write Protection bit
  8365                           ;	WRTD = 0x1, unprogrammed default
  8366                           ;	Scanner Enable bit
  8367                           ;	SCANE = 0x1, unprogrammed default
  8368                           ;	Low Voltage Programming Enable bit
  8369                           ;	LVP = 0x1, unprogrammed default
  8370  300007                     	org	3145735
  8371  300007  FF                 	db	255
  8372                           
  8373                           ;Config register CONFIG5L @ 0x300008
  8374                           ;	unspecified, using default values
  8375                           ;	UserNVM Program Memory Code Protection bit
  8376                           ;	CP = 0x1, unprogrammed default
  8377                           ;	DataNVM Memory Code Protection bit
  8378                           ;	CPD = 0x1, unprogrammed default
  8379  300008                     	org	3145736
  8380  300008  FF                 	db	255
  8381                           
  8382                           ;Config register CONFIG5H @ 0x300009
  8383                           ;	unspecified, using default values
  8384  300009                     	org	3145737
  8385  300009  FF                 	db	255
  8386                           
  8387                           ;Config register CONFIG6L @ 0x30000A
  8388                           ;	unspecified, using default values
  8389                           ;	Table Read Protection Block 0
  8390                           ;	EBTR0 = 0x1, unprogrammed default
  8391                           ;	Table Read Protection Block 1
  8392                           ;	EBTR1 = 0x1, unprogrammed default
  8393                           ;	Table Read Protection Block 2
  8394                           ;	EBTR2 = 0x1, unprogrammed default
  8395                           ;	Table Read Protection Block 3
  8396                           ;	EBTR3 = 0x1, unprogrammed default
  8397                           ;	Table Read Protection Block 4
  8398                           ;	EBTR4 = 0x1, unprogrammed default
  8399                           ;	Table Read Protection Block 5
  8400                           ;	EBTR5 = 0x1, unprogrammed default
  8401                           ;	Table Read Protection Block 6
  8402                           ;	EBTR6 = 0x1, unprogrammed default
  8403                           ;	Table Read Protection Block 7
  8404                           ;	EBTR7 = 0x1, unprogrammed default
  8405  30000A                     	org	3145738
  8406  30000A  FF                 	db	255
  8407                           
  8408                           ;Config register CONFIG6H @ 0x30000B
  8409                           ;	unspecified, using default values
  8410                           ;	Boot Block Table Read Protection bit
  8411                           ;	EBTRB = 0x1, unprogrammed default
  8412  30000B                     	org	3145739
  8413  30000B  FF                 	db	255
  8414                           tosu	equ	0xFFF
  8415                           tosh	equ	0xFFE
  8416                           tosl	equ	0xFFD
  8417                           stkptr	equ	0xFFC
  8418                           pclatu	equ	0xFFB
  8419                           pclath	equ	0xFFA
  8420                           pcl	equ	0xFF9
  8421                           tblptru	equ	0xFF8
  8422                           tblptrh	equ	0xFF7
  8423                           tblptrl	equ	0xFF6
  8424                           tablat	equ	0xFF5
  8425                           prodh	equ	0xFF4
  8426                           prodl	equ	0xFF3
  8427                           indf0	equ	0xFEF
  8428                           postinc0	equ	0xFEE
  8429                           postdec0	equ	0xFED
  8430                           preinc0	equ	0xFEC
  8431                           plusw0	equ	0xFEB
  8432                           fsr0h	equ	0xFEA
  8433                           fsr0l	equ	0xFE9
  8434                           wreg	equ	0xFE8
  8435                           indf1	equ	0xFE7
  8436                           postinc1	equ	0xFE6
  8437                           postdec1	equ	0xFE5
  8438                           preinc1	equ	0xFE4
  8439                           plusw1	equ	0xFE3
  8440                           fsr1h	equ	0xFE2
  8441                           fsr1l	equ	0xFE1
  8442                           bsr	equ	0xFE0
  8443                           indf2	equ	0xFDF
  8444                           postinc2	equ	0xFDE
  8445                           postdec2	equ	0xFDD
  8446                           preinc2	equ	0xFDC
  8447                           plusw2	equ	0xFDB
  8448                           fsr2h	equ	0xFDA
  8449                           fsr2l	equ	0xFD9
  8450                           status	equ	0xFD8

Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     32     152
    BANK1           256    196     196
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[13]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[13]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[13]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2097_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S737DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S737DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 18
		 -> main@test(BANK1[18]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 18
		 -> main@test(BANK1[18]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 18
		 -> main@test(BANK1[18]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 18
		 -> main@test(BANK1[18]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_determine_color_new
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               202   202      0   35121
                                             28 BANK0      4     4      0
                                              0 BANK1    196   196      0
                    _Interrupts_init
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    9317
                                              6 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     481
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 30    28      2   14537
                                             78 COMRAM     2     0      2
                                              0 BANK0     28    28      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             16 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1528
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     604
                                             68 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2342
                                             43 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2453
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     523
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _isbtw
       ___flge
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C4      C4       7       76.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B5       8        0.0%
DATA                 0      0     1B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 10 17:51:34 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 3488                    ___fldiv@aexp 002B  
                  ___fldiv@bexp 002A                    ___fldiv@sign 0023                 _color_read_Blue 3528  
                            l31 37C2                              l40 3526                              l34 392A  
                            l50 33D2                              l43 3576                              l37 34D6  
                            l54 360A                              l46 35C0                              l57 3650  
                            l69 194E                              l96 3848                              l99 389E  
              _color_read_Green 34D8               ??_Interrupts_init 0005                   main@BlueRatio 019A  
                           l102 38C4                             l111 3996                             l105 39A0  
                           l114 3980                             l108 39AA                             l117 3718  
                           l154 36D6                             l412 398C                             l337 390A  
                           l281 19FA                             l290 1B34                             l282 19FC  
                           l371 395C                             l292 1B42                             l284 1A0A  
                           l381 3944                             l286 1A42                             l551 2FBE  
                           l368 3872                             l288 1A50                             l377 37F2  
                           l721 30C4                             l538 2E5A                             l694 31C8  
                           l689 3182                             _abs 371A                    main@RedRatio 0196  
                           _pad 3294                             wreg 000FE8                    ___flmul@aexp 003D  
                  ___flmul@bexp 003E                    ___flmul@sign 0038                    ___flmul@temp 0043  
                  ___flmul@prod 003F                    ___fltol@exp1 004E                            l1011 24AC  
                          l1020 2594                            l1006 2688                            l1102 3486  
                          l1008 24E8                            l1017 252E                            l1201 3694  
                          l1042 22EE                            l1210 378E                            l1019 25A6  
                          ?_abs 0017                            l1204 39AC                            l1132 331C  
                          l1140 272A                            l1045 2180                            l1038 1F8A  
                          l1134 3358                            l1142 2732                            l1055 22B0  
                          l1047 21F8                            l1048 21E6                            l3000 213A  
                          l1160 296A                            l1129 32DA                            l3010 2190  
                          l3002 2148                            l1082 2CD2                            l3012 219E  
                          l3004 2166                            l3100 2B40                            l1093 2C6A  
                          l1181 3758                            l1173 342C                            l3022 2208  
                          l3030 2250                            l3014 21A2                            l3006 2170  
                          l1086 2C0E                            l3110 2BB8                            l3102 2B86  
                          l1174 3434                            l1079 2B76                            l1167 2B1E  
                          l3040 22C4                            l3032 226A                            l3024 2214  
                          l3016 21B0                            l3008 217E                            l3120 2C40  
                          l3112 2BC4                            l3104 2B9C                            l1193 3292  
                          l3042 22D2                            l3034 227E                            l3026 2222  
                          l3018 21DE                            l3130 2C7E                            l3122 2C4C  
                          l3114 2BF6                            l1178 3750                            l3300 37DA  
                          l3044 22D4                            l3036 2298                            l3028 224C  
                          l3060 3014                            l3052 2FC0                            l3132 2CA2  
                          l3124 2C5A                            l3116 2BF8                            l3108 2BB0  
                          l3150 3790                            l3038 22B4                            l3046 22DA  
                          l3062 3016                            l3054 2FD6                            l3134 2CB2  
                          l3126 2C78                            l3118 2C04                            l3302 392C  
                          l3152 3794                            l3048 22DE                            l3064 3026  
                          l3136 2CC0                            l3128 2C7A                            l3160 3578  
                          l3304 3940                            l3162 35C2                            l3154 379E  
                          l3090 30A4                            l3074 3050                            l3066 302A  
                          l3058 2FEA                            l3138 2CC2                            l3164 360C  
                          l3156 37AE                            l3092 30B4                            l3084 3078  
                          l3076 305A                            l3068 3038                            l3260 36BE  
                          l3500 31EE                            l3158 37B8                            l3086 3084  
                          l3078 3064                            l3262 36D2                            l3270 38F8  
                          l3502 31F8                            l3510 3652                            l3280 3982  
                          l2632 3998                            l2640 398E                            l2800 2346  
                          l3088 3094                            l3096 2B22                            l3264 36D4  
                          l3256 3696                            l3272 38FA                            l3600 2F6E  
                          l3504 3216                            l3512 365E                            l3520 3766  
                          l2650 36DE                            l2634 399C                            l2642 3992  
                          l2730 3830                            l2810 2372                            l2802 2356  
                          l3098 2B32                            l3258 36A6                            l3274 3904  
                          l3266 38EC                            l3530 2CD8                            l3602 2F7E  
                          l3506 324C                            l3514 3670                            l3522 376A  
                          l3610 32A4                            l2652 36E6                            l2644 39A2  
                          l2636 3978                            l2740 3488                            l2732 3832  
                          l2900 2618                            l2812 2382                            l2820 23AC  
                          l2804 235C                            l3276 3906                            l3268 38F6  
                          l3540 2D38                            l3532 2CE6                            l3604 2F9E  
                          l3516 3674                            l3524 3782                            l3620 32FA  
                          l3612 32B8                            l3700 299E                            l3294 37C4  
                          l2566 389E                            l2654 36EE                            l2646 39A6  
                          l2638 397C                            l2742 34CE                            l2734 3834  
                          l2726 3820                            l2910 2676                            l2902 262E  
                          l2830 23EE                            l2822 23BC                            l2814 2392  
                          l2806 2362                            l2670 3142                            l2662 30C6  
                          l3278 3908                            l3550 2D82                            l3542 2D3C  
                          l3534 2D06                            l3630 371A                            l3518 375A  
                          l3622 32FE                            l3614 32C6                            l3710 2A44  
                          l3702 29B0                            l3296 37C8                            l2568 38AE  
                          l2656 3714                            l2648 36DA                            l2752 3528  
                          l2736 3836                            l2728 382A                            l2912 267C  
                          l2904 2648                            l2824 23D2                            l2816 23A2  
                          l2808 2370                            l2680 31C6                            l2672 3150  
                          l2664 30F4                            l2760 338C                            l3800 1666  
                          l3560 2DF2                            l3552 2D90                            l3544 2D48  
                          l3536 2D0A                            l3528 2CD4                            l3632 3734  
                          l3624 332C                            l3616 32D2                            l3608 3294  
                          l3640 26F2                            l3720 2AC2                            l3704 29B4  
                          l3298 37D6                            l2658 3716                            l2754 356E  
                          l2746 34D8                            l2738 390E                            l2914 267E  
                          l2906 2664                            l2850 2470                            l2842 2426  
                          l2826 23E2                            l2834 2402                            l2818 23A4  
                          l2930 1EF2                            l2922 1EC6                            l2674 3162  
                          l2666 3104                            l2762 33BE                            l3810 1788  
                          l3802 16AC                            l3562 2E04                            l3554 2DA2  
                          l3546 2D66                            l3538 2D18                            l3626 3340  
                          l3618 32E6                            l3650 274C                            l3642 2702  
                          l3634 268A                            l3714 2A7C                            l3706 29D8  
                          l3730 2AE8                            l2772 384C                            l2748 351E  
                          l2908 2668                            l2860 24B6                            l2852 2478  
                          l2844 2440                            l2836 2412                            l2828 23EA  
                          l2940 1F2E                            l2932 1F02                            l2924 1ED2  
                          l2676 3170                            l2668 3132                            l3820 18AA  
                          l3812 17CE                            l3804 16F2                            l2780 3946  
                          l3556 2DD0                            l3548 2D6E                            l3564 2E0A  
                          l3580 2E92                            l3572 2E5C                            l3660 2776  
                          l3652 275A                            l3644 2704                            l3636 26AA  
                          l3732 2B0C                            l3716 2AA0                            l3724 2ACE  
                          l3708 29FC                            l3740 33DC                            l3900 19DC  
                          l2774 385C                            l2870 250E                            l2862 24D4  
                          l2854 2488                            l2846 2450                            l2838 2412  
                          l2790 230C                            l2950 1F64                            l2942 1F34  
                          l2934 1F12                            l2926 1EE0                            l2678 31C0  
                          l2758 335A                            l3830 193E                            l3822 18F0  
                          l3814 1814                            l3806 1738                            l3750 0F3A  
                          l3566 2E1A                            l3558 2DF0                            l3590 2EFA  
                          l3582 2EA0                            l3574 2E60                            l3670 2882  
                          l3662 27F8                            l3654 2760                            l3646 271E  
                          l3638 26D2                            l3726 2ADC                            l3718 2AAE  
                          l3742 33EA                            l3910 19E6                            l3902 19DE  
                          ?_pad 0015                            l2776 3860                            l2880 254C  
                          l2872 2514                            l2864 24D6                            l2856 249C  
                          l2848 2460                            l2792 231C                            l2784 22F0  
                          l2952 1F74                            l2944 1F42                            l2936 1F18  
                          l2928 1EE2                            l2768 33CA                            l3832 1946  
                          l3824 18FA                            l3816 181E                            l3808 1742  
                          l3760 121A                            l3752 1026                            l3568 2E3A  
                          l3592 2F08                            l3584 2EC0                            l3576 2E6E  
                          l3496 31CA                            l3680 28F6                            l3672 28A0  
                          l3664 27FE                            l3656 2768                            l3648 273A  
                          l3744 3410                            l3840 3450                            l3920 1A18  
                          l3912 19E8                            l3904 19E0                            l2778 3870  
                          l2890 25B6                            l2882 2550                            l2874 251E  
                          l2866 24E6                            l2858 24AA                            l2794 232C  
                          l2786 22FC                            l2970 1FF6                            l2962 1FBE  
                          l2954 1F7A                            l2946 1F44                            l2938 1F28  
                          l3826 1912                            l3818 1864                            l3770 133C  
                          l3762 1260                            l3754 1112                            l3746 0E4E  
                          l3594 2F36                            l3586 2EDE                            l3578 2E8E  
                          l3498 31DC                            l3690 2932                            l3682 2906  
                          l3674 28BA                            l3666 2804                            l3658 2770  
                          l3738 33D4                            l3842 3458                            l3930 1A60  
                          l3922 1A1A                            l3914 19EA                            l3906 19E2  
                          l3850 195C                            l2892 25C2                            l2884 255E  
                          l2876 252C                            l2868 24F8                            l2796 233C  
                          l2788 230A                            l2980 2040                            l2972 200E  
                          l2964 1FCA                            l2956 1F9A                            l2948 1F54  
                          l3828 1928                            l3780 145E                            l3772 1382  
                          l3764 12A6                            l3756 116A                            l3748 0E58  
                          l3596 2F56                            l3588 2EE6                            l3684 290C  
                          l3692 2942                            l3676 28D4                            l3668 2868  
                          l3844 3474                            l3836 3436                            l3940 1AC4  
                          l3932 1A6C                            l3924 1A26                            l3916 19EC  
                          l3908 19E4                            l3860 196E                            l3852 1960  
                          l2894 25D0                            l2886 258C                            l2878 253E  
                          l2798 233E                            l2990 2096                            l2982 2050  
                          l2974 201A                            l2966 1FD4                            l2958 1FAA  
                          l3790 1580                            l3782 14A4                            l3774 13C8  
                          l3766 12EC                            l3758 11C2                            l3598 2F68  
                          l3686 291E                            l3678 28E4                            l3838 3448  
                          l3950 1B32                            l3942 1ADC                            l3934 1A86  
                          l3926 1A40                            l3918 19EE                            l3870 197C  
                          l3862 1970                            l3854 1964                            l2896 25FA  
                          l2992 20B2                            l2984 205C                            l2976 2026  
                          l2968 1FEA                            l3792 158A                            l3784 14AE  
                          l3776 13D2                            l3768 12F6                            l3688 292A  
                          l3696 296C                            l3960 1B7C                            l3952 1B50  
                          l3944 1B0A                            l3936 1AB4                            l3928 1A5E  
                          l3880 199C                            l3872 1984                            l3864 1972  
                          l3856 1968                            l3848 1950                            l2898 25FE  
                          l2994 20BE                            l2986 206C                            l2978 2034  
                          l3794 15D0                            l3786 14F4                            l3778 1418  
                          l3698 2990                            l3970 1DBE                            l3962 1B90  
                          l3954 1B52                            l3946 1B16                            l3938 1AC0  
                          l3890 19CC                            l3882 19B0                            l3874 198C  
                          l3866 1972                            l3858 196A                            l2996 20DA  
                          l2988 2086                            l3796 1616                            l3788 153A  
                          l3980 1E12                            l3972 1DCA                            l3964 1C40  
                          l3948 1B1A                            l3956 1B5C                            l3892 19D4  
                          l3884 19B4                            l3876 1990                            l3868 1978  
                          l2998 2104                            l3798 165C                            l3990 1E5E  
                          l3982 1E16                            l3974 1DCE                            l3966 1CF0  
                          l3958 1B70                            l3894 19D6                            l3886 19BC  
                          l3878 1998                            l3992 1E78                            l3984 1E30  
                          l3976 1DE8                            l3968 1DA0                            l3896 19D8  
                          l3888 19C4                            l3994 1E96                            l3986 1E4E  
                          l3978 1E06                            l3898 19DA                            l3996 1EA2  
                          l3988 1E5A                            l3998 1EA6                            STR_1 0E16  
                          STR_2 0E01                            STR_3 0E46                            STR_4 0E3F  
                          STR_5 0E38                            STR_6 0E2B                            u2000 38C4  
                          u2001 38C0                            u2200 3150                            u2201 314C  
                          u2210 3170                            u2211 316C                            u2220 31C0  
                          u2300 395A                            u2221 31BC                            u2301 3954  
                          u2310 395C                            u2160 3702                            u2400 2488  
                          u2320 230A                            u4000 1864                            u3200 3940  
                  _BAUD4CONbits 000EE9                            u2161 36FA                            u2401 2484  
                          u2321 2306                            u4001 1860                            u3201 393C  
                          _LATE 000F7D                            u2410 24AA                            u2330 231C  
                          u4010 18AA                            u2411 24A6                            u2331 2318  
                          u4011 18A6                            _LATG 000F7F                            u2500 25B6  
                          u2420 24D4                            u2340 232C                            u2180 30F4  
                          u4020 18F0                            u4100 1B42                            u2501 25B2  
                          u2421 24D0                            u2341 2328                            u2181 30F0  
                          u4021 18EC                            u4101 1B3E                            u2510 25D0  
                          u2430 24F8                            u2350 2370                            u2190 3132  
                          u2270 338C                            u4030 1912                            u4110 1B50  
                          u2511 25CC                            u2431 24F4                            u2351 236C  
                          u2191 312E                            u2271 3388                            u4031 190E  
                          u4111 1B4C                            u2520 2618                            u2440 250E  
                          u2360 2382                            u2600 1F64                            u2280 33BE  
                          u4040 1928                            u3400 3782                            u4120 1B70  
                          u2521 2614                            u2441 250A                            u2361 237E  
                          u2601 1F60                            u2281 33BA                            u4041 1924  
                          u3401 377E                            u4121 1B6C                            u2290 385C  
                          u2178 3704                            u2530 2648                            u2450 252C  
                          u2370 2392                            u2610 1F9A                            u4050 193E  
                          u3410 2CE6                            _T2PR 000FBC                            u2291 3858  
                          u2531 2644                            u2451 2528                            u2371 238E  
                          u2611 1F96                            u4051 193A                            u3411 2CE2  
                          u2540 2676                            u2460 254C                            u2380 23D2  
                          u2700 2222                            u2620 1FAA                            u3420 2D18  
                          u3500 2EDE                            u4060 1A0A                            u2541 2672  
                          u2461 2548                            u2381 23CE                            u2701 221E  
                          u2621 1FA6                            u3421 2D14                            u3501 2EDA  
                          u4061 1A06                            u3190 37F2                            u2470 255E  
                          u2390 2412                            u2710 226A                            u2630 2124  
                          u2550 1EE0                            u3510 2F08                            u3350 31DC  
                          u4070 1A18                            u3191 37EE                            u2471 255A  
                          u2391 240E                            u2711 2266                            u2551 1EDC  
                          u3431 2D42                            u3511 2F04                            u3351 31D8  
                          u4207 1EB2                            u4071 1A14                            u2480 258C  
                          u2720 2298                            u2640 217E                            u2560 1EF2  
                          u2800 30A4                            u3440 2D66                            u3520 2F36  
                          u3360 31EE                            u3600 26BC                            u4080 1A50  
                          u4217 37A4                            u2481 2588                            u2721 2294  
                          u2641 217A                            u2561 1EEE                            u2801 30A0  
                          u3441 2D62                            u3521 2F32                            u3361 31EA  
                          u4081 1A4C                            u4137 1A32                            u2490 25A2  
                          u2730 22D2                            u2650 219E                            u2570 1F02  
                          u2810 2B32                            u3450 2D90                            u3530 2F7E  
                          u3370 3216                            u3610 26D2                            u4090 1A5E  
                          u2491 259E                            u2731 22CE                            u2651 219A  
                          u2635 211A                            u2571 1EFE                            u2811 2B2E  
                          u3451 2D8C                            u3531 2F7A                            u3371 3212  
                          u3611 26CE                            u4147 1A78                            u4091 1A5A  
                          u2660 21B0                            u2580 1F42                            u2740 2FD6  
                          u2900 2CC0                            u2820 2B40                            u3460 2DD0  
                          u3380 324C                            u3540 32A4                            u3700 28E4  
                          u3620 2702                            u2661 21AC                            u2581 1F3E  
                          u2741 2FD2                            u2901 2CBC                            u2821 2B3C  
                          u3461 2DCC                            u3381 3248                            u3541 32A0  
                          u3701 28E0                            u3621 26FE                            u4157 1AD0  
                          u2670 21DE                            u2590 1F54                            u2750 300A  
                          u2830 2B9C                            u3470 2E1A                            u3390 3694  
                          u3550 32C6                            u3710 28F6                            u3630 271E  
                          u2671 21DA                            u2591 1F50                            u2831 2B98  
                          u3471 2E16                            u3391 3690                            u3551 32C2  
                          u3711 28F2                            u3631 271A                            u4167 1B26  
                          u2680 21F4                            u2760 3038                            u2840 2BF2  
                          u3800 12A6                            u3480 2E6E                            u3560 331C  
                          u3720 2906                            u3640 274C                            u2681 21F0  
                          u2761 3034                            u2841 2BEE                            u3801 12A2  
                          u3481 2E6A                            u3561 3318                            u3721 2902  
                          u3641 2748                            u4177 1DDA                            u2690 2208  
                          u2770 304C                            u2850 2C3C                            u3810 12EC  
                          u3490 2EA0                            u3570 332C                            u3730 291E  
                          u3650 275A                            u2691 2204                            u2771 3048  
                          u2755 3000                            u2851 2C38                            u3811 12E8  
                          u3491 2E9C                            u3571 3328                            u3731 291A  
                          u3651 2756                            u4187 1E22                            u2780 3074  
                          u2860 2C5A                            u3900 1580                            u3820 133C  
                          u3580 3734                            u3660 2882                            u3740 2990  
                          u2781 3070                            u2861 2C56                            u3901 157C  
                          u3821 1338                            u3581 3730                            u3661 287E  
                          u3741 298C                            u4197 1E6A                            u1990 38AE  
                          u2790 3094                            u2870 2C6A                            u3910 15D0  
                          u3830 1382                            u3670 28A0                            u3590 26BA  
                          u3750 29D8                            u1991 38AA                            u2791 3090  
                          u2871 2C66                            u3911 15CC                            u3831 137E  
                          u3671 289C                            u3591 26B4                            u3751 29D4  
                          u2880 2C78                            u3920 1616                            u3840 13C8  
                          u3680 28BA                            u3760 29FC                            u2881 2C74  
                          u3921 1612                            u3841 13C4                            u3681 28B6  
                          u3761 29F8                            u2890 2CB2                            u3930 165C  
                          u3850 1418                            u3690 28D4                            u3770 2AA0  
                          u2891 2CAE                            u3931 1658                            u3851 1414  
                          u3691 28D0                            u3771 2A9C                            u3940 16AC  
                          u3860 145E                            u3780 342C                            u3941 16A8  
                          u3861 145A                            u3781 3428                            u3950 16F2  
                          u3870 14A4                            u3790 1260                            u3951 16EE  
                          u3871 14A0                            u3791 125C                            u3960 1738  
                          u3880 14F4                            u3961 1734                            u3881 14F0  
                          u3970 1788                            u3890 153A                            u3971 1784  
                          u3891 1536                            u3980 17CE                            u3981 17CA  
                          u3990 1814                            u3991 1810                            abs@a 0017  
                          _dbuf 00B8                            _main 1950                            _dtoa 268A  
                          _prec 00B4                            _nout 00B0                            pad@i 001C  
                          pad@p 0019                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001E  
                          fsr2l 000FD9                            btemp 005A                            prodh 000FF4  
                          prodl 000FF3                            start 0076                 ___fldiv@new_exp 0024  
                   main@string0 0100                     main@string1 011E                     main@string2 013C  
                   main@string3 015A          __end_of_color_read_Red 34D8                 __end_of_HighISR 0076  
                  ___param_bank 000000                           ??_abs 0019                           ??_pad 001B  
                 ___fltol@sign1 004D                  main@GreenRatio 0198                 __end_of___aodiv 2E5C  
                         ?_main 0001                           ?_dtoa 0020                 __end_of___aomod 2FC0  
               __end_of___fldiv 268A                 __end_of___flmul 22F0                 __end_of___fltol 30C6  
      __size_of_initDCmotorsPWM 0042                           i2l421 006A                           i2l371 3974  
                         i2l419 0066                           i2l364 381E                           i2l357 389C  
                  vfpfcnvrt@fmt 0046      __end_of_I2C_2_Master_Start 39A2      __end_of_I2C_2_Master_Write 3982  
                         _flags 00B6                           _fputc 31CA                           _isbtw 335A  
                         _fputs 3652                           pad@fp 0015                           _width 00B2  
                         _putch 39AC                           dtoa@d 0022                           dtoa@i 0042  
                         dtoa@n 003A                           dtoa@p 0034                           dtoa@s 0038  
                         dtoa@w 0036                           tablat 000FF5                           ttemp5 005B  
                         ttemp6 005E                           ttemp7 0062                           status 000FD8  
                         wtemp8 005B                 __end_of_sprintf 3488         __end_of_color_read_Blue 3578  
         _I2C_2_Master_RepStart 39A2              putCharToRxBuf@byte 0001                 ?_color_read_Red 0009  
               __initialization 38C6                    __end_of_main 1EC6                    __end_of_dtoa 296C  
               i2_isDataInTxBuf 395E              putCharToTxBuf@byte 0005                          ??_main 00F4  
                        ??_dtoa 002A                   __activetblptr 000001                          ?_fputc 0005  
                        ?_isbtw 0011                          ?_fputs 000E                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l3310 388A                          i2l3312 389A                          i2l3314 37F4  
                        i2l3306 3876                          i2l3316 3804                          i2l3308 3886  
                        i2l2188 395E                          i2l3318 3808                          i2l3490 0038  
                        i2l3492 0046                          i2l3484 0012                          i2l3494 005A  
                        i2l3486 0022                          i2l3488 0028                       ??_HighISR 0003  
      __end_of_color_click_init 37C4                          _RX4PPS 000E15                          _TX4REG 000EE4  
              __end_of___xxtofl 2CD4                   ?_read_colours 0010                    vfprintf@cfmt 0054  
                        ___flge 30C6                _getCharFromTxBuf 37F4                       ??___aodiv 0015  
   __end_of_determine_color_new 1950                       ??___aomod 0015                       ??___fldiv 001B  
                     ??___flmul 0034                       ??___fltol 0049                          clear_0 38CC  
                        isa$std 000001                          pad@buf 0017                          dtoa@fp 0020  
                        _strlen 375A                          fputc@c 0005               ?_TxBufferedString 0006  
                        fputs@c 0012                          fputs@i 0013                          fputs@s 000E  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8              ??_TxBufferedString 0008                          putch@c 0001  
              __end_of_vfprintf 3436               ??_initDCmotorsPWM 0007                       ??_sprintf 0056  
                    ___flge@ff1 0005                      ___flge@ff2 0009                    ___xxtofl@arg 000F  
                  ___xxtofl@exp 000E                    ___xxtofl@val 0005           __end_of_isDataInTxBuf 395E  
                    __accesstop 0060         __end_of__initialization 38DA        __end_of_color_read_Green 3528  
        ?_I2C_2_Master_RepStart 0001         __end_ofi2_isDataInTxBuf 3976                   ___rparam_used 000001  
                    ___fltol@f1 0045                ?_color_read_Blue 0009                  ??_read_colours 0012  
               _Interrupts_init 3982                  __pcstackCOMRAM 0001                   __end_of_fputc 3294  
                 __end_of_isbtw 33D4                   __end_of_fputs 3696                   __end_of_putch 39AE  
                    _calibrateB 360C                      _calibrateW 35C2                         ??_fputc 0009  
                       ??_isbtw 001D                         ??_fputs 0012                         ??_putch 0005  
                    __pbssBANK0 0060               _color_writetoaddr 390C                    _T2CLKCONbits 000FBF  
                       ?___flge 0005              ?_color_writetoaddr 0007              __size_of_sendTxBuf 001A  
           ??_color_writetoaddr 0008                         ?_strlen 0005                       ?___xxtofl 0005  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5              __size_of_vfpfcnvrt 01B4  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5         __end_of_Interrupts_init 398E          color_writetoaddr@value 0007  
              ??_color_read_Red 000B                         _HighISR 0008       __end_of_color_writetoaddr 392C  
              ?i2_isDataInTxBuf 0001              _I2C_2_Master_Start 3998                      _initUSART4 38EC  
            _I2C_2_Master_Write 3976                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000E                 __size_of___flge 0104                         ___aodiv 2CD4  
                       ___aomod 2E5C                         ___fldiv 22F0                         ___flmul 1EC6  
                       ___fltol 2FC0             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 00D8                    __psmallconst 0E00         __size_of_putCharToRxBuf 002A  
       __size_of_putCharToTxBuf 002A                         __pcinit 38C6                         __ramtop 0E00  
                       __ptext0 1950                         __ptext1 3436                         __ptext2 33D4  
                       __ptext3 296C                         __ptext4 268A                         __ptext5 3294  
                       __ptext6 375A                         __ptext7 3652                         __ptext8 31CA  
                       __ptext9 39AC                 __size_of_strlen 0036                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                      ??___xxtofl 0009  
                     _T2HLTbits 000FBE            __end_of_read_colours 35C2                   _RxBufWriteCnt 0059  
      __end_of_getCharFromTxBuf 3820                     ?_calibrateB 0010                     ?_calibrateW 0010  
                       main@cal 019E                         _sprintf 3436            ??_I2C_2_Master_Start 0006  
          ??_I2C_2_Master_Write 0006            end_of_initialization 38DA               __end_of_sendTxBuf 3946  
                       fputc@fp 0007                         fputs@fp 0010               ?_color_click_init 0001  
            ??_color_click_init 0009               __end_of_vfpfcnvrt 2B20                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 0054                         strlen@a 0007                         strlen@s 0005  
               _initDCmotorsPWM 3696                       _PORTFbits 000F8E                   ___xxtofl@sign 000D  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0026                     ___fldiv@rem 001F  
      color_writetoaddr@address 0008         ??_I2C_2_Master_RepStart 0006     determine_color_new@RedRatio 00E0  
              ?_Interrupts_init 0001                     ___flmul@grs 0039      __size_of_color_writetoaddr 0020  
                  _EUSART4RXbuf 009C                    _EUSART4TXbuf 0060       __size_of_TxBufferedString 0030  
             ?_color_read_Green 0009                     ?_initUSART4 0001                      main@motorL 01A0  
                    main@motorR 01A9                      main@output 019C              ??_color_read_Green 000B  
                    main@string 0178             __size_of_calibrateB 0046             __size_of_calibrateW 004A  
                __end_of___flge 31CA                     vfpfcnvrt@ap 0048                     vfpfcnvrt@fp 0044  
                   vfpfcnvrt@ll 004C    __size_of_determine_color_new 0B02                  __end_of_strlen 3790  
           start_initialization 38C6                     __end_of_abs 375A                     __end_of_pad 335A  
                 _TxBufWriteCnt 0057             color_read_Green@tmp 000E         __end_of_initDCmotorsPWM 36D8  
                   vfprintf@fmt 00DA                        ??___flge 000D                  _putCharToRxBuf 3874  
                _putCharToTxBuf 384A        __size_of_color_read_Blue 0050           __size_of_read_colours 004A  
                      ??_strlen 0007          __size_of_isDataInTxBuf 0018                       ___fldiv@a 0017  
                     ___fldiv@b 0013   determine_color_new@GreenRatio 00E2                       ___flmul@a 0030  
                     ___flmul@b 002C                     __pbssCOMRAM 0056             __size_of_initUSART4 0020  
                 __pcstackBANK0 00D8                   __pcstackBANK1 0100                ___aodiv@dividend 0005  
             __size_of___xxtofl 01B4                        ?_HighISR 0001                       _dtoa$2170 0032  
        __end_of_putCharToRxBuf 389E          __end_of_putCharToTxBuf 3874                    _read_colours 3578  
                     __pintcode 0008                        ?___aodiv 0005                        ?___aomod 0005  
                      ?___fldiv 0013                ___aodiv@quotient 0017                        ?___flmul 002C  
                      ?___fltol 0045          TxBufferedString@string 0006            I2C_2_Master_Read@ack 0007  
             __size_of_vfprintf 0062            I2C_2_Master_Read@tmp 0008                     __smallconst 0E00  
             _I2C_2_Master_Idle 389E               _I2C_2_Master_Init 3820               _I2C_2_Master_Read 36D8  
             _I2C_2_Master_Stop 398E                    _RxBufReadCnt 0058              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                    ??_calibrateB 0012  
                  ??_calibrateW 0012              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0005  
                      ?_sprintf 00DE               ?_getCharFromTxBuf 0001                  __size_of_fputc 00CA  
                __size_of_isbtw 007A                  __size_of_fputs 0044                  __size_of_putch 0002  
            ??_getCharFromTxBuf 0001             ??_I2C_2_Master_Idle 0005             ??_I2C_2_Master_Init 0005  
           ??_I2C_2_Master_Read 0006                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0006  
                      _LATCbits 000F7B                   _isDataInTxBuf 3946                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                _TxBufferedString 37C4  
                      _LATGbits 000F7F                        _LATHbits 000F80                       _sendTxBuf 392C  
                      _PIE4bits 000E2D                        i2u321_40 3886                        i2u321_41 3882  
                      i2u322_40 3804                        i2u322_41 3800                        i2u155_40 3972  
                      i2u331_40 0022                        i2u155_41 396C                        i2u331_41 001E  
                      i2u156_40 3974                        i2u332_40 0038                        i2u332_41 0034  
                      i2u333_40 0046                        i2u333_41 0042                        i2u334_40 005A  
                      i2u334_41 0056                        _PIR4bits 000E37            determine_color_new@m 004F  
               ?_putCharToRxBuf 0001                ?_initDCmotorsPWM 0005                 ?_putCharToTxBuf 0001  
                      _SSP2CON2 000EDA                        _SSP2STAT 000ED8        __size_ofi2_isDataInTxBuf 0018  
            __end_of_calibrateB 3652              __end_of_calibrateW 360C                       _vfpfcnvrt 296C  
     __size_of_color_click_init 0034       __end_of_I2C_2_Master_Idle 38C6       __end_of_I2C_2_Master_Init 384A  
     __end_of_I2C_2_Master_Read 371A       __end_of_I2C_2_Master_Stop 3998     I2C_2_Master_Write@data_byte 0006  
             ??_color_read_Blue 000B                    _TxBufReadCnt 0056     __size_of_I2C_2_Master_Start 000A  
   __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A                  ?_isDataInTxBuf 0001  
 __end_of_I2C_2_Master_RepStart 39AC              color_read_Blue@tmp 000E                     calibrateB@m 0010  
                   calibrateW@m 0010                __size_of_HighISR 006E                      ?_sendTxBuf 0001  
           _determine_color_new 0E4E                    ??_initUSART4 0005                        __Hrparam 0000  
                    vfprintf@ap 00DC                        __Lrparam 0000                      vfprintf@fp 00D8  
                  __Lsmallconst 0E00         __size_of_color_read_Red 0050                __size_of___aodiv 0188  
              __size_of___aomod 0164                __size_of___fldiv 039A                __size_of___flmul 042A  
              __size_of___fltol 0106                       isbtw@high 0019                      ?_vfpfcnvrt 0044  
               ___aodiv@divisor 000D       __size_of_color_read_Green 0050                 ___aodiv@counter 0015  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4            ?_determine_color_new 004F  
                    sprintf@fmt 00E0                        ___xxtofl 2B20              __end_of_initUSART4 390C  
                      __ptext10 371A                        __ptext11 2E5C                        __ptext20 30C6  
                      __ptext12 2CD4                        __ptext21 2B20                        __ptext13 392C  
                      __ptext30 3488                        __ptext22 2FC0                        __ptext14 3946  
                      __ptext31 34D8                        __ptext23 1EC6                        __ptext15 3578  
                      __ptext40 384A                        __ptext32 3528                        __ptext24 22F0  
                      __ptext16 38EC                        __ptext41 3982                        __ptext33 3976  
                      __ptext25 3790                        __ptext17 3696                        __ptext34 398E  
                      __ptext26 390C                        __ptext18 0E4E                        __ptext43 395E  
                      __ptext35 3998                        __ptext27 3820                        __ptext19 335A  
                      __ptext44 3874                        __ptext36 39A2                        __ptext28 35C2  
                      __ptext45 37F4                        __ptext37 36D8                        __ptext29 360C  
                      __ptext38 389E                        __ptext39 37C4                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                __size_of_sprintf 0052                   __size_of_main 0576  
                 __size_of_dtoa 02E2                        isa$xinst 000000        __size_of_Interrupts_init 000C  
                    _RC4STAbits 000EE7         determine_color_new@RelB 00F0         determine_color_new@RelG 00EC  
       determine_color_new@RelR 00E8                        int$flags 005A                        _vfprintf 33D4  
                      main@test 01B2      __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A  
    __size_of_I2C_2_Master_Read 0042           ??_determine_color_new 00D8                ___aomod@dividend 0005  
    __size_of_I2C_2_Master_Stop 000A                      _INTCONbits 000FF2               ??i2_isDataInTxBuf 0001  
                      isbtw@low 0015                        isbtw@num 0011                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                 ??_isDataInTxBuf 0005                        intlevel2 0000  
                     sprintf@ap 00E8                     ??_sendTxBuf 0005          determine_color_new@out 00E6  
                 read_colours@m 0010                 ___aomod@divisor 000D                     ??_vfpfcnvrt 004A  
               ___aomod@counter 0015                _color_click_init 3790        __end_of_TxBufferedString 37F4  
                      sprintf@f 00EA                        sprintf@s 00DE                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8                    ___aodiv@sign 0016  
              ??_putCharToRxBuf 0001                ??_putCharToTxBuf 0005                    ___aomod@sign 0016  
  determine_color_new@BlueRatio 00E4  
