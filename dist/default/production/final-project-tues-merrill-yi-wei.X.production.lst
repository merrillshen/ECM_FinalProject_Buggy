

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 04 17:17:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 05/05/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK1
   110  003ADC                     __pidataBANK1:
   111                           	callstack 0
   112                           
   113                           ;initializer for determine_color2@F14738
   114  003ADC  0991               	dw	2449
   115  003ADE  009E               	dw	158
   116  003AE0  012C               	dw	300
   117  003AE2  06C9               	dw	1737
   118  003AE4  00A8               	dw	168
   119  003AE6  00EB               	dw	235
   120  003AE8  069C               	dw	1692
   121  003AEA  0093               	dw	147
   122  003AEC  00EF               	dw	239
   123  003AEE  09F0               	dw	2544
   124  003AF0  00FA               	dw	250
   125  003AF2  014E               	dw	334
   126  003AF4  096E               	dw	2414
   127  003AF6  00ED               	dw	237
   128  003AF8  00F8               	dw	248
   129  003AFA  09F9               	dw	2553
   130  003AFC  00B1               	dw	177
   131  003AFE  013C               	dw	316
   132  003B00  08AD               	dw	2221
   133  003B02  00E9               	dw	233
   134  003B04  014F               	dw	335
   135  003B06  0A10               	dw	2576
   136  003B08  0116               	dw	278
   137  003B0A  0187               	dw	391
   138  003B0C  0332               	dw	818
   139  003B0E  017E               	dw	382
   140  003B10  00C1               	dw	193
   141                           
   142                           ;initializer for determine_color1@F14719
   143  003B12  002F               	dw	47
   144  003B14  056E               	dw	1390
   145  003B16  0307               	dw	775
   146  003B18  0951               	dw	2385
   147  003B1A  067C               	dw	1660
   148  003B1C  031B               	dw	795
   149  003B1E  0686               	dw	1670
   150  003B20  048A               	dw	1162
   151  003B22  0257               	dw	599
   152  003B24  0A6F               	dw	2671
   153  003B26  05C1               	dw	1473
   154  003B28  02E1               	dw	737
   155  003B2A  0B25               	dw	2853
   156  003B2C  056F               	dw	1391
   157  003B2E  0313               	dw	787
   158  003B30  0976               	dw	2422
   159  003B32  03DF               	dw	991
   160  003B34  0234               	dw	564
   161  003B36  08B1               	dw	2225
   162  003B38  05E3               	dw	1507
   163  003B3A  0314               	dw	788
   164  003B3C  0A8E               	dw	2702
   165  003B3E  0676               	dw	1654
   166  003B40  0378               	dw	888
   167  003B42  002F               	dw	47
   168  003B44  0017               	dw	23
   169  003B46  0012               	dw	18
   170                           
   171                           	psect	idataBANK2
   172  003FDA                     __pidataBANK2:
   173                           	callstack 0
   174                           
   175                           ;initializer for determine_color3@F14757
   176  003FDA  019F               	dw	415
   177  003FDC  0385               	dw	901
   178  003FDE  0158               	dw	344
   179  003FE0  012B               	dw	299
   180  003FE2  0469               	dw	1129
   181  003FE4  01AA               	dw	426
   182  003FE6  0100               	dw	256
   183  003FE8  0453               	dw	1107
   184  003FEA  01AE               	dw	430
   185  003FEC  0203               	dw	515
   186  003FEE  0567               	dw	1383
   187  003FF0  01F5               	dw	501
   188  003FF2  01DB               	dw	475
   189  003FF4  04CA               	dw	1226
   190  003FF6  01E1               	dw	481
   191  003FF8  01BD               	dw	445
   192  003FFA  03E5               	dw	997
   193  003FFC  0179               	dw	377
   194  003FFE  019F               	dw	415
   195  004000  0589               	dw	1417
   196  004002  022F               	dw	559
   197  004004  0217               	dw	535
   198  004006  062C               	dw	1580
   199  004008  0279               	dw	633
   200  00400A  0499               	dw	1177
   201  00400C  00F4               	dw	244
   202  00400E  00B7               	dw	183
   203                           
   204                           	psect	smallconst
   205  000E00                     __psmallconst:
   206                           	callstack 0
   207  000E00  00                 	db	0
   208  000E01  4260               	dw	16992
   209  000E03  0DA2               	dw	3490
   210  000E05                     __end_of_tiny:
   211                           	callstack 0
   212  0000                     _PIE4bits	set	3629
   213  0000                     _TX4REG	set	3812
   214  0000                     _RC4REG	set	3811
   215  0000                     _PIR4bits	set	3639
   216  0000                     _RC4STAbits	set	3815
   217  0000                     _SP4BRGH	set	3814
   218  0000                     _SP4BRGL	set	3813
   219  0000                     _TX4STAbits	set	3816
   220  0000                     _BAUD4CONbits	set	3817
   221  0000                     _RX4PPS	set	3605
   222  0000                     _RC0PPS	set	3682
   223  0000                     _ANSELFbits	set	3764
   224  0000                     _RC7PPS	set	3689
   225  0000                     _RE2PPS	set	3700
   226  0000                     _SSP2BUF	set	3797
   227  0000                     _SSP2CON2bits	set	3802
   228  0000                     _SSP2CON2	set	3802
   229  0000                     _SSP2STAT	set	3800
   230  0000                     _RD6PPS	set	3696
   231  0000                     _RD5PPS	set	3695
   232  0000                     _SSP2CLKPPS	set	3612
   233  0000                     _SSP2DATPPS	set	3613
   234  0000                     _ANSELDbits	set	3751
   235  0000                     _SSP2ADD	set	3798
   236  0000                     _SSP2CON1bits	set	3801
   237  0000                     _INTCONbits	set	4082
   238  0000                     _LATDbits	set	3964
   239  0000                     _LATFbits	set	3966
   240  0000                     _TRISAbits	set	3969
   241  0000                     _LATAbits	set	3961
   242  0000                     _TRISFbits	set	3974
   243  0000                     _PWM7CONbits	set	4001
   244  0000                     _PWM6CONbits	set	4004
   245  0000                     _T2PR	set	4028
   246  0000                     _T2CLKCONbits	set	4031
   247  0000                     _T2HLTbits	set	4030
   248  0000                     _T2CONbits	set	4029
   249  0000                     _LATGbits	set	3967
   250  0000                     _LATCbits	set	3963
   251  0000                     _LATEbits	set	3965
   252  0000                     _TRISGbits	set	3975
   253  0000                     _TRISCbits	set	3971
   254  0000                     _TRISEbits	set	3973
   255  0000                     _TRISDbits	set	3972
   256  0000                     _LATG	set	3967
   257  0000                     _LATE	set	3965
   258  0000                     _PWM7DCH	set	4000
   259  0000                     _PWM6DCH	set	4003
   260  000E05                     STR_4:
   261  000E05  20                 	db	32
   262  000E06  43                 	db	67	;'C'
   263  000E07  6F                 	db	111	;'o'
   264  000E08  6C                 	db	108	;'l'
   265  000E09  6F                 	db	111	;'o'
   266  000E0A  75                 	db	117	;'u'
   267  000E0B  72                 	db	114	;'r'
   268  000E0C  3A                 	db	58	;':'
   269  000E0D  20                 	db	32
   270  000E0E  25                 	db	37
   271  000E0F  64                 	db	100	;'d'
   272  000E10  20                 	db	32
   273  000E11  00                 	db	0
   274  000E12                     STR_3:
   275  000E12  20                 	db	32
   276  000E13  42                 	db	66	;'B'
   277  000E14  3A                 	db	58	;':'
   278  000E15  20                 	db	32
   279  000E16  25                 	db	37
   280  000E17  64                 	db	100	;'d'
   281  000E18  2E                 	db	46
   282  000E19  25                 	db	37
   283  000E1A  30                 	db	48	;'0'
   284  000E1B  33                 	db	51	;'3'
   285  000E1C  64                 	db	100	;'d'
   286  000E1D  20                 	db	32
   287  000E1E  00                 	db	0
   288  000E1F                     STR_2:
   289  000E1F  20                 	db	32
   290  000E20  47                 	db	71	;'G'
   291  000E21  3A                 	db	58	;':'
   292  000E22  20                 	db	32
   293  000E23  25                 	db	37
   294  000E24  64                 	db	100	;'d'
   295  000E25  2E                 	db	46
   296  000E26  25                 	db	37
   297  000E27  30                 	db	48	;'0'
   298  000E28  33                 	db	51	;'3'
   299  000E29  64                 	db	100	;'d'
   300  000E2A  20                 	db	32
   301  000E2B  00                 	db	0
   302  000E2C                     STR_1:
   303  000E2C  20                 	db	32
   304  000E2D  52                 	db	82	;'R'
   305  000E2E  3A                 	db	58	;':'
   306  000E2F  20                 	db	32
   307  000E30  25                 	db	37
   308  000E31  64                 	db	100	;'d'
   309  000E32  2E                 	db	46
   310  000E33  25                 	db	37
   311  000E34  30                 	db	48	;'0'
   312  000E35  33                 	db	51	;'3'
   313  000E36  64                 	db	100	;'d'
   314  000E37  20                 	db	32
   315  000E38  00                 	db	0
   316  000E39  00                 	db	0	; dummy byte at the end
   317  0000                     
   318                           ; #config settings
   319                           
   320                           	psect	cinit
   321  003BAE                     __pcinit:
   322                           	callstack 0
   323  003BAE                     start_initialization:
   324                           	callstack 0
   325  003BAE                     __initialization:
   326                           	callstack 0
   327                           
   328                           ; Initialize objects allocated to BANK2 (54 bytes)
   329                           ; load TBLPTR registers with __pidataBANK2
   330  003BAE  0EDA               	movlw	low __pidataBANK2
   331  003BB0  6EF6               	movwf	tblptrl,c
   332  003BB2  0E3F               	movlw	high __pidataBANK2
   333  003BB4  6EF7               	movwf	tblptrh,c
   334  003BB6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   335  003BB8  6EF8               	movwf	tblptru,c
   336  003BBA  EE02  F084         	lfsr	0,__pdataBANK2
   337  003BBE  EE10 F036          	lfsr	1,54
   338  003BC2                     copy_data0:
   339  003BC2  0009               	tblrd		*+
   340  003BC4  CFF5 FFEE          	movff	tablat,postinc0
   341  003BC8  50E5               	movf	postdec1,w,c
   342  003BCA  50E1               	movf	fsr1l,w,c
   343  003BCC  E1FA               	bnz	copy_data0
   344                           
   345                           ; Initialize objects allocated to BANK1 (108 bytes)
   346                           ; load TBLPTR registers with __pidataBANK1
   347  003BCE  0EDC               	movlw	low __pidataBANK1
   348  003BD0  6EF6               	movwf	tblptrl,c
   349  003BD2  0E3A               	movlw	high __pidataBANK1
   350  003BD4  6EF7               	movwf	tblptrh,c
   351  003BD6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   352  003BD8  6EF8               	movwf	tblptru,c
   353  003BDA  EE01  F078         	lfsr	0,__pdataBANK1
   354  003BDE  EE10 F06C          	lfsr	1,108
   355  003BE2                     copy_data1:
   356  003BE2  0009               	tblrd		*+
   357  003BE4  CFF5 FFEE          	movff	tablat,postinc0
   358  003BE8  50E5               	movf	postdec1,w,c
   359  003BEA  50E1               	movf	fsr1l,w,c
   360  003BEC  E1FA               	bnz	copy_data1
   361                           
   362                           ; Clear objects allocated to BANK1 (120 bytes)
   363  003BEE  EE01  F000         	lfsr	0,__pbssBANK1
   364  003BF2  0E78               	movlw	120
   365  003BF4                     clear_0:
   366  003BF4  6AEE               	clrf	postinc0,c
   367  003BF6  06E8               	decf	wreg,f,c
   368  003BF8  E1FD               	bnz	clear_0
   369                           
   370                           ; Clear objects allocated to BANK0 (2 bytes)
   371  003BFA  0100               	movlb	0
   372  003BFC  6B83               	clrf	(__pbssBANK0+1)& (0+255),b
   373  003BFE  6B82               	clrf	__pbssBANK0& (0+255),b
   374                           
   375                           ; Clear objects allocated to COMRAM (4 bytes)
   376  003C00  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   377  003C02  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   378  003C04  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   379  003C06  6A52               	clrf	__pbssCOMRAM& (0+255),c
   380  003C08                     end_of_initialization:
   381                           	callstack 0
   382  003C08                     __end_of__initialization:
   383                           	callstack 0
   384  003C08  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   385  003C0A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   386  003C0C  0100               	movlb	0
   387  003C0E  EFB5  F00B         	goto	_main	;jump to C main() function
   388                           
   389                           	psect	bssCOMRAM
   390  000052                     __pbssCOMRAM:
   391                           	callstack 0
   392  000052                     _TxBufReadCnt:
   393                           	callstack 0
   394  000052                     	ds	1
   395  000053                     _TxBufWriteCnt:
   396                           	callstack 0
   397  000053                     	ds	1
   398  000054                     _RxBufReadCnt:
   399                           	callstack 0
   400  000054                     	ds	1
   401  000055                     _RxBufWriteCnt:
   402                           	callstack 0
   403  000055                     	ds	1
   404                           
   405                           	psect	bssBANK0
   406  000082                     __pbssBANK0:
   407                           	callstack 0
   408  000082                     _flags:
   409                           	callstack 0
   410  000082                     	ds	2
   411                           
   412                           	psect	bssBANK1
   413  000100                     __pbssBANK1:
   414                           	callstack 0
   415  000100                     _EUSART4TXbuf:
   416                           	callstack 0
   417  000100                     	ds	60
   418  00013C                     _EUSART4RXbuf:
   419                           	callstack 0
   420  00013C                     	ds	20
   421  000150                     _errno:
   422                           	callstack 0
   423  000150                     	ds	2
   424  000152                     _nout:
   425                           	callstack 0
   426  000152                     	ds	2
   427  000154                     _width:
   428                           	callstack 0
   429  000154                     	ds	2
   430  000156                     _prec:
   431                           	callstack 0
   432  000156                     	ds	2
   433  000158                     _dbuf:
   434                           	callstack 0
   435  000158                     	ds	32
   436                           
   437                           	psect	dataBANK1
   438  000178                     __pdataBANK1:
   439                           	callstack 0
   440  000178                     determine_color2@F14738:
   441                           	callstack 0
   442  000178                     	ds	54
   443  0001AE                     determine_color1@F14719:
   444                           	callstack 0
   445  0001AE                     	ds	54
   446                           
   447                           	psect	dataBANK2
   448  000284                     __pdataBANK2:
   449                           	callstack 0
   450  000284                     determine_color3@F14757:
   451                           	callstack 0
   452  000284                     	ds	54
   453                           
   454                           	psect	cstackBANK2
   455  000200                     __pcstackBANK2:
   456                           	callstack 0
   457  000200                     main@string:
   458                           	callstack 0
   459                           
   460                           ; 20 bytes @ 0x0
   461  000200                     	ds	20
   462  000214                     main@string1:
   463                           	callstack 0
   464                           
   465                           ; 20 bytes @ 0x14
   466  000214                     	ds	20
   467  000228                     main@string2:
   468                           	callstack 0
   469                           
   470                           ; 20 bytes @ 0x28
   471  000228                     	ds	20
   472  00023C                     main@string3:
   473                           	callstack 0
   474                           
   475                           ; 20 bytes @ 0x3C
   476  00023C                     	ds	20
   477  000250                     main@output:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x50
   481  000250                     	ds	2
   482  000252                     main@frac_part1:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x52
   486  000252                     	ds	2
   487  000254                     main@frac_part2:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x54
   491  000254                     	ds	2
   492  000256                     main@frac_part3:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x56
   496  000256                     	ds	2
   497  000258                     main@RedRatio:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x58
   501  000258                     	ds	4
   502  00025C                     main@GreenRatio:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x5C
   506  00025C                     	ds	4
   507  000260                     main@BlueRatio:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x60
   511  000260                     	ds	4
   512  000264                     main@int_part1:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x64
   516  000264                     	ds	2
   517  000266                     main@int_part2:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x66
   521  000266                     	ds	2
   522  000268                     main@int_part3:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x68
   526  000268                     	ds	2
   527  00026A                     main@motorL:
   528                           	callstack 0
   529                           
   530                           ; 9 bytes @ 0x6A
   531  00026A                     	ds	9
   532  000273                     main@motorR:
   533                           	callstack 0
   534                           
   535                           ; 9 bytes @ 0x73
   536  000273                     	ds	9
   537  00027C                     main@test:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x7C
   541  00027C                     	ds	8
   542                           
   543                           	psect	cstackBANK0
   544  000060                     __pcstackBANK0:
   545                           	callstack 0
   546  000060                     vfpfcnvrt@ll:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x0
   550  000060                     	ds	8
   551  000068                     vfpfcnvrt@done:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x8
   555  000068                     	ds	2
   556  00006A                     _vfpfcnvrt$2091:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xA
   560  00006A                     	ds	2
   561  00006C                     ?_vfprintf:
   562                           	callstack 0
   563  00006C                     vfprintf@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xC
   567  00006C                     	ds	2
   568  00006E                     vfprintf@fmt:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0xE
   572  00006E                     	ds	2
   573  000070                     vfprintf@ap:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x10
   577  000070                     	ds	2
   578  000072                     ?_sprintf:
   579                           	callstack 0
   580  000072                     sprintf@s:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x12
   584  000072                     	ds	2
   585  000074                     sprintf@fmt:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x14
   589  000074                     	ds	6
   590  00007A                     sprintf@ap:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1A
   594  00007A                     	ds	2
   595  00007C                     sprintf@f:
   596                           	callstack 0
   597                           
   598                           ; 6 bytes @ 0x1C
   599  00007C                     	ds	6
   600                           
   601                           	psect	cstackCOMRAM
   602  000001                     __pcstackCOMRAM:
   603                           	callstack 0
   604  000001                     ??_getCharFromTxBuf:
   605  000001                     putCharToRxBuf@byte:
   606                           	callstack 0
   607  000001                     
   608                           ; 1 bytes @ 0x0
   609  000001                     	ds	2
   610  000003                     ??_HighISR:
   611                           
   612                           ; 1 bytes @ 0x2
   613  000003                     	ds	2
   614  000005                     ??_I2C_2_Master_Idle:
   615  000005                     ?_strlen:
   616                           	callstack 0
   617  000005                     ?_isdigit:
   618                           	callstack 0
   619  000005                     ?_isspace:
   620                           	callstack 0
   621  000005                     ?___wmul:
   622                           	callstack 0
   623  000005                     ?___fladd:
   624                           	callstack 0
   625  000005                     ?___flmul:
   626                           	callstack 0
   627  000005                     ?___aodiv:
   628                           	callstack 0
   629  000005                     ?___aomod:
   630                           	callstack 0
   631  000005                     putCharToTxBuf@byte:
   632                           	callstack 0
   633  000005                     initDCmotorsPWM@PWMperiod:
   634                           	callstack 0
   635  000005                     ___wmul@multiplier:
   636                           	callstack 0
   637  000005                     isdigit@c:
   638                           	callstack 0
   639  000005                     isspace@c:
   640                           	callstack 0
   641  000005                     fputc@c:
   642                           	callstack 0
   643  000005                     strlen@s:
   644                           	callstack 0
   645  000005                     ___flge@ff1:
   646                           	callstack 0
   647  000005                     ___fladd@b:
   648                           	callstack 0
   649  000005                     ___flmul@b:
   650                           	callstack 0
   651  000005                     ___aodiv@dividend:
   652                           	callstack 0
   653  000005                     ___aomod@dividend:
   654                           	callstack 0
   655                           
   656                           ; 8 bytes @ 0x4
   657  000005                     	ds	1
   658  000006                     ??_I2C_2_Master_Read:
   659  000006                     I2C_2_Master_Write@data_byte:
   660                           	callstack 0
   661  000006                     TxBufferedString@string:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x5
   665  000006                     	ds	1
   666  000007                     ??_isdigit:
   667  000007                     ??_isspace:
   668  000007                     color_writetoaddr@value:
   669                           	callstack 0
   670  000007                     I2C_2_Master_Read@ack:
   671                           	callstack 0
   672  000007                     ___wmul@multiplicand:
   673                           	callstack 0
   674  000007                     fputc@fp:
   675                           	callstack 0
   676  000007                     strlen@a:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x6
   680  000007                     	ds	1
   681  000008                     color_writetoaddr@address:
   682                           	callstack 0
   683  000008                     I2C_2_Master_Read@tmp:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x7
   687  000008                     	ds	1
   688  000009                     ??_fputc:
   689  000009                     ??_color_click_init:
   690  000009                     ?_color_read_Clear:
   691                           	callstack 0
   692  000009                     ?_color_read_Red:
   693                           	callstack 0
   694  000009                     ?_color_read_Green:
   695                           	callstack 0
   696  000009                     ?_color_read_Blue:
   697                           	callstack 0
   698  000009                     ___wmul@product:
   699                           	callstack 0
   700  000009                     ___flge@ff2:
   701                           	callstack 0
   702  000009                     ___fladd@a:
   703                           	callstack 0
   704  000009                     ___flmul@a:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x8
   708  000009                     	ds	2
   709  00000B                     ??_color_read_Clear:
   710  00000B                     ??_color_read_Red:
   711  00000B                     ??_color_read_Green:
   712  00000B                     ??_color_read_Blue:
   713  00000B                     ?___xxtofl:
   714                           	callstack 0
   715  00000B                     _isspace$2129:
   716                           	callstack 0
   717  00000B                     ___xxtofl@val:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0xA
   721  00000B                     	ds	1
   722  00000C                     ?_atoi:
   723                           	callstack 0
   724  00000C                     atoi@s:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0xB
   728  00000C                     	ds	1
   729  00000D                     ??___fladd:
   730  00000D                     ??___flmul:
   731  00000D                     ??___flge:
   732  00000D                     ___aodiv@divisor:
   733                           	callstack 0
   734  00000D                     ___aomod@divisor:
   735                           	callstack 0
   736                           
   737                           ; 8 bytes @ 0xC
   738  00000D                     	ds	1
   739  00000E                     ??_atoi:
   740  00000E                     color_read_Clear@tmp:
   741                           	callstack 0
   742  00000E                     color_read_Red@tmp:
   743                           	callstack 0
   744  00000E                     color_read_Green@tmp:
   745                           	callstack 0
   746  00000E                     color_read_Blue@tmp:
   747                           	callstack 0
   748  00000E                     fputs@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0xD
   752  00000E                     	ds	1
   753  00000F                     ??___xxtofl:
   754                           
   755                           ; 1 bytes @ 0xE
   756  00000F                     	ds	1
   757  000010                     read_colours@m:
   758                           	callstack 0
   759  000010                     fputs@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0xF
   763  000010                     	ds	1
   764  000011                     ?_isbtw:
   765                           	callstack 0
   766  000011                     ___fladd@signs:
   767                           	callstack 0
   768  000011                     ___flmul@sign:
   769                           	callstack 0
   770  000011                     isbtw@num:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x10
   774  000011                     	ds	1
   775  000012                     ___fladd@aexp:
   776                           	callstack 0
   777  000012                     ___flmul@aexp:
   778                           	callstack 0
   779  000012                     fputs@c:
   780                           	callstack 0
   781  000012                     atoi@neg:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x11
   785  000012                     	ds	1
   786  000013                     ___fladd@bexp:
   787                           	callstack 0
   788  000013                     ___xxtofl@sign:
   789                           	callstack 0
   790  000013                     fputs@i:
   791                           	callstack 0
   792  000013                     ___flmul@grs:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x12
   796  000013                     	ds	1
   797  000014                     ___fladd@grs:
   798                           	callstack 0
   799  000014                     ___xxtofl@exp:
   800                           	callstack 0
   801  000014                     _atoi$2111:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x13
   805  000014                     	ds	1
   806  000015                     ?_pad:
   807                           	callstack 0
   808  000015                     ___aodiv@counter:
   809                           	callstack 0
   810  000015                     ___aomod@counter:
   811                           	callstack 0
   812  000015                     pad@fp:
   813                           	callstack 0
   814  000015                     isbtw@low:
   815                           	callstack 0
   816  000015                     ___xxtofl@arg:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x14
   820  000015                     	ds	1
   821  000016                     ___aodiv@sign:
   822                           	callstack 0
   823  000016                     ___aomod@sign:
   824                           	callstack 0
   825  000016                     _atoi$2113:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x15
   829  000016                     	ds	1
   830  000017                     ?_abs:
   831                           	callstack 0
   832  000017                     ___flmul@bexp:
   833                           	callstack 0
   834  000017                     pad@buf:
   835                           	callstack 0
   836  000017                     abs@a:
   837                           	callstack 0
   838  000017                     ___aodiv@quotient:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x16
   842  000017                     	ds	1
   843  000018                     _atoi$2112:
   844                           	callstack 0
   845  000018                     ___flmul@prod:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x17
   849  000018                     	ds	1
   850  000019                     ??_abs:
   851  000019                     pad@p:
   852                           	callstack 0
   853  000019                     atoi@n:
   854                           	callstack 0
   855  000019                     isbtw@high:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x18
   859  000019                     	ds	2
   860  00001B                     ??_pad:
   861                           
   862                           ; 1 bytes @ 0x1A
   863  00001B                     	ds	1
   864  00001C                     ___flmul@temp:
   865                           	callstack 0
   866  00001C                     pad@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x1B
   870  00001C                     	ds	1
   871  00001D                     
   872                           ; 1 bytes @ 0x1C
   873  00001D                     	ds	1
   874  00001E                     ?___fldiv:
   875                           	callstack 0
   876  00001E                     pad@w:
   877                           	callstack 0
   878  00001E                     ___fldiv@b:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x1D
   882  00001E                     	ds	2
   883  000020                     ?_dtoa:
   884                           	callstack 0
   885  000020                     dtoa@fp:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x1F
   889  000020                     	ds	2
   890  000022                     ___fldiv@a:
   891                           	callstack 0
   892  000022                     dtoa@d:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x21
   896  000022                     	ds	4
   897  000026                     ??___fldiv:
   898                           
   899                           ; 1 bytes @ 0x25
   900  000026                     	ds	4
   901  00002A                     ??_dtoa:
   902  00002A                     ___fldiv@rem:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x29
   906  00002A                     	ds	4
   907  00002E                     ___fldiv@sign:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x2D
   911  00002E                     	ds	1
   912  00002F                     ___fldiv@new_exp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x2E
   916  00002F                     	ds	2
   917  000031                     ___fldiv@grs:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x30
   921  000031                     	ds	1
   922  000032                     _dtoa$2076:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x31
   926  000032                     	ds	2
   927  000034                     dtoa@p:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x33
   931  000034                     	ds	1
   932  000035                     ___fldiv@bexp:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x34
   936  000035                     	ds	1
   937  000036                     ___fldiv@aexp:
   938                           	callstack 0
   939  000036                     dtoa@w:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x35
   943  000036                     	ds	1
   944  000037                     ?_determine_color_new:
   945                           	callstack 0
   946  000037                     ?___flsub:
   947                           	callstack 0
   948  000037                     determine_color_new@m:
   949                           	callstack 0
   950  000037                     ___flsub@b:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x36
   954  000037                     	ds	1
   955  000038                     dtoa@s:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x37
   959  000038                     	ds	1
   960  000039                     ??_determine_color_new:
   961                           
   962                           ; 1 bytes @ 0x38
   963  000039                     	ds	1
   964  00003A                     dtoa@n:
   965                           	callstack 0
   966                           
   967                           ; 8 bytes @ 0x39
   968  00003A                     	ds	1
   969  00003B                     ___flsub@a:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x3A
   973  00003B                     	ds	2
   974  00003D                     determine_color_new@out:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x3C
   978  00003D                     	ds	2
   979  00003F                     ?___fltol:
   980                           	callstack 0
   981  00003F                     determine_color_new@RedRatio:
   982                           	callstack 0
   983  00003F                     ___fltol@f1:
   984                           	callstack 0
   985                           
   986                           ; 4 bytes @ 0x3E
   987  00003F                     	ds	3
   988  000042                     dtoa@i:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x41
   992  000042                     	ds	1
   993  000043                     ??___fltol:
   994  000043                     determine_color_new@GreenRatio:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x42
   998  000043                     	ds	1
   999  000044                     ?_vfpfcnvrt:
  1000                           	callstack 0
  1001  000044                     vfpfcnvrt@fp:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x43
  1005  000044                     	ds	2
  1006  000046                     vfpfcnvrt@fmt:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x45
  1010  000046                     	ds	1
  1011  000047                     ___fltol@sign1:
  1012                           	callstack 0
  1013  000047                     determine_color_new@BlueRatio:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x46
  1017  000047                     	ds	1
  1018  000048                     ___fltol@exp1:
  1019                           	callstack 0
  1020  000048                     vfpfcnvrt@ap:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x47
  1024  000048                     	ds	2
  1025  00004A                     ??_vfpfcnvrt:
  1026                           
  1027                           ; 1 bytes @ 0x49
  1028  00004A                     	ds	4
  1029  00004E                     vfprintf@cfmt:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x4D
  1033  00004E                     	ds	2
  1034  000050                     ??_main:
  1035                           
  1036                           ; 1 bytes @ 0x4F
  1037  000050                     	ds	2
  1038                           
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 19 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  int_part3       2  104[BANK2 ] unsigned int 
  1049 ;;  int_part2       2  102[BANK2 ] unsigned int 
  1050 ;;  int_part1       2  100[BANK2 ] unsigned int 
  1051 ;;  frac_part3      2   86[BANK2 ] unsigned int 
  1052 ;;  frac_part2      2   84[BANK2 ] unsigned int 
  1053 ;;  frac_part1      2   82[BANK2 ] unsigned int 
  1054 ;;  output          2   80[BANK2 ] unsigned int 
  1055 ;;  string3        20   60[BANK2 ] unsigned char [20]
  1056 ;;  string2        20   40[BANK2 ] unsigned char [20]
  1057 ;;  string1        20   20[BANK2 ] unsigned char [20]
  1058 ;;  string         20    0[BANK2 ] unsigned char [20]
  1059 ;;  motorR          9  115[BANK2 ] struct DC_motor
  1060 ;;  motorL          9  106[BANK2 ] struct DC_motor
  1061 ;;  test            8  124[BANK2 ] struct RGB_val
  1062 ;;  BlueRatio       4   96[BANK2 ] float 
  1063 ;;  GreenRatio      4   92[BANK2 ] float 
  1064 ;;  RedRatio        4   88[BANK2 ] float 
  1065 ;;  PWMcycle        2    0        unsigned int 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;      Locals:         0       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Totals:         2       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;Total ram usage:      134 bytes
  1080 ;; Hardware stack levels required when called: 10
  1081 ;; This function calls:
  1082 ;;		_Interrupts_init
  1083 ;;		_TxBufferedString
  1084 ;;		___fldiv
  1085 ;;		___flmul
  1086 ;;		___flsub
  1087 ;;		___fltol
  1088 ;;		___wmul
  1089 ;;		___xxtofl
  1090 ;;		_color_click_init
  1091 ;;		_determine_color_new
  1092 ;;		_initDCmotorsPWM
  1093 ;;		_initUSART4
  1094 ;;		_read_colours
  1095 ;;		_sendTxBuf
  1096 ;;		_sprintf
  1097 ;; This function is called by:
  1098 ;;		Startup code after reset
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text0
  1103  00176A                     __ptext0:
  1104                           	callstack 0
  1105  00176A                     _main:
  1106                           	callstack 21
  1107  00176A                     
  1108                           ;main.c: 21:     initDCmotorsPWM(99);
  1109  00176A  0E00               	movlw	0
  1110  00176C  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1111  00176E  0E63               	movlw	99
  1112  001770  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1113  001772  EC90  F01F         	call	_initDCmotorsPWM	;wreg free
  1114  001776                     
  1115                           ;main.c: 22:     color_click_init();
  1116  001776  EC23  F020         	call	_color_click_init	;wreg free
  1117  00177A                     
  1118                           ;main.c: 23:     initUSART4();
  1119  00177A  ECD1  F020         	call	_initUSART4	;wreg free
  1120  00177E                     
  1121                           ;main.c: 24:     Interrupts_init();
  1122  00177E  EC1C  F021         	call	_Interrupts_init	;wreg free
  1123  001782                     
  1124                           ;main.c: 27:     TRISFbits.TRISF2=1;
  1125  001782  8486               	bsf	134,2,c	;volatile
  1126  001784                     
  1127                           ;main.c: 28:     ANSELFbits.ANSELF2=0;
  1128  001784  010E               	movlb	14	; () banked
  1129  001786  95B4               	bcf	180,2,b	;volatile
  1130  001788                     
  1131                           ; BSR set to: 14
  1132                           ;main.c: 32:     motorL.power=0;
  1133  001788  0E00               	movlw	0
  1134  00178A  0102               	movlb	2	; () banked
  1135  00178C  6F6A               	movwf	main@motorL& (0+255),b
  1136  00178E                     
  1137                           ; BSR set to: 2
  1138                           ;main.c: 33:     motorL.direction=1;
  1139  00178E  0E01               	movlw	1
  1140  001790  6F6B               	movwf	(main@motorL+1)& (0+255),b
  1141  001792                     
  1142                           ; BSR set to: 2
  1143                           ;main.c: 34:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1144  001792  0EA3               	movlw	163
  1145  001794  6F6C               	movwf	(main@motorL+2)& (0+255),b
  1146  001796  0E0F               	movlw	15
  1147  001798  6F6D               	movwf	(main@motorL+3)& (0+255),b
  1148  00179A                     
  1149                           ; BSR set to: 2
  1150                           ;main.c: 35:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1151  00179A  0E7D               	movlw	125
  1152  00179C  6F6E               	movwf	(main@motorL+4)& (0+255),b
  1153  00179E  0E0F               	movlw	15
  1154  0017A0  6F6F               	movwf	(main@motorL+5)& (0+255),b
  1155  0017A2                     
  1156                           ; BSR set to: 2
  1157                           ;main.c: 36:     motorL.dir_pin=4;
  1158  0017A2  0E04               	movlw	4
  1159  0017A4  6F70               	movwf	(main@motorL+6)& (0+255),b
  1160  0017A6                     
  1161                           ; BSR set to: 2
  1162                           ;main.c: 37:     motorL.PWMperiod=PWMcycle;
  1163  0017A6  0E00               	movlw	0
  1164  0017A8  6F72               	movwf	(main@motorL+8)& (0+255),b
  1165  0017AA  0E63               	movlw	99
  1166  0017AC  6F71               	movwf	(main@motorL+7)& (0+255),b
  1167  0017AE                     
  1168                           ; BSR set to: 2
  1169                           ;main.c: 39:     motorR.power=0;
  1170  0017AE  0E00               	movlw	0
  1171  0017B0  6F73               	movwf	main@motorR& (0+255),b
  1172  0017B2                     
  1173                           ; BSR set to: 2
  1174                           ;main.c: 40:     motorR.direction=1;
  1175  0017B2  0E01               	movlw	1
  1176  0017B4  6F74               	movwf	(main@motorR+1)& (0+255),b
  1177                           
  1178                           ;main.c: 41:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1179  0017B6  0EA0               	movlw	160
  1180  0017B8  6F75               	movwf	(main@motorR+2)& (0+255),b
  1181  0017BA  0E0F               	movlw	15
  1182  0017BC  6F76               	movwf	(main@motorR+3)& (0+255),b
  1183                           
  1184                           ;main.c: 42:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1185  0017BE  0E7F               	movlw	127
  1186  0017C0  6F77               	movwf	(main@motorR+4)& (0+255),b
  1187  0017C2  0E0F               	movlw	15
  1188  0017C4  6F78               	movwf	(main@motorR+5)& (0+255),b
  1189  0017C6                     
  1190                           ; BSR set to: 2
  1191                           ;main.c: 43:     motorR.dir_pin=6;
  1192  0017C6  0E06               	movlw	6
  1193  0017C8  6F79               	movwf	(main@motorR+6)& (0+255),b
  1194  0017CA                     
  1195                           ; BSR set to: 2
  1196                           ;main.c: 44:     motorR.PWMperiod=PWMcycle;
  1197  0017CA  0E00               	movlw	0
  1198  0017CC  6F7B               	movwf	(main@motorR+8)& (0+255),b
  1199  0017CE  0E63               	movlw	99
  1200  0017D0  6F7A               	movwf	(main@motorR+7)& (0+255),b
  1201  0017D2                     
  1202                           ; BSR set to: 2
  1203                           ;main.c: 47:     struct RGB_val test;;main.c: 48:     test.C = 0;
  1204  0017D2  0E00               	movlw	0
  1205  0017D4  6F7D               	movwf	(main@test+1)& (0+255),b
  1206  0017D6  0E00               	movlw	0
  1207  0017D8  6F7C               	movwf	main@test& (0+255),b
  1208  0017DA                     
  1209                           ; BSR set to: 2
  1210                           ;main.c: 49:     test.R = 0;
  1211  0017DA  0E00               	movlw	0
  1212  0017DC  6F7F               	movwf	(main@test+3)& (0+255),b
  1213  0017DE  0E00               	movlw	0
  1214  0017E0  6F7E               	movwf	(main@test+2)& (0+255),b
  1215  0017E2                     
  1216                           ; BSR set to: 2
  1217                           ;main.c: 50:     test.G = 0;
  1218  0017E2  0E00               	movlw	0
  1219  0017E4  6F81               	movwf	(main@test+5)& (0+255),b
  1220  0017E6  0E00               	movlw	0
  1221  0017E8  6F80               	movwf	(main@test+4)& (0+255),b
  1222  0017EA                     
  1223                           ; BSR set to: 2
  1224                           ;main.c: 51:     test.B = 0;
  1225  0017EA  0E00               	movlw	0
  1226  0017EC  6F83               	movwf	(main@test+7)& (0+255),b
  1227  0017EE  0E00               	movlw	0
  1228  0017F0  6F82               	movwf	(main@test+6)& (0+255),b
  1229  0017F2                     
  1230                           ; BSR set to: 2
  1231                           ;main.c: 54:     LATGbits.LATG1=0;
  1232  0017F2  927F               	bcf	127,1,c	;volatile
  1233  0017F4                     
  1234                           ; BSR set to: 2
  1235                           ;main.c: 55:     TRISGbits.TRISG1=0;
  1236  0017F4  9287               	bcf	135,1,c	;volatile
  1237  0017F6                     
  1238                           ; BSR set to: 2
  1239                           ;main.c: 56:     LATAbits.LATA4=0;
  1240  0017F6  9879               	bcf	121,4,c	;volatile
  1241  0017F8                     
  1242                           ; BSR set to: 2
  1243                           ;main.c: 57:     TRISAbits.TRISA4=0;
  1244  0017F8  9881               	bcf	129,4,c	;volatile
  1245  0017FA                     
  1246                           ; BSR set to: 2
  1247                           ;main.c: 58:     LATFbits.LATF7=0;
  1248  0017FA  9E7E               	bcf	126,7,c	;volatile
  1249  0017FC                     
  1250                           ; BSR set to: 2
  1251                           ;main.c: 59:     TRISFbits.TRISF7=0;
  1252  0017FC  9E86               	bcf	134,7,c	;volatile
  1253  0017FE                     
  1254                           ; BSR set to: 2
  1255                           ;main.c: 62:     TRISDbits.TRISD7 = 0;
  1256  0017FE  9E84               	bcf	132,7,c	;volatile
  1257  001800                     
  1258                           ; BSR set to: 2
  1259                           ;main.c: 63:     LATDbits.LATD7 = 0;
  1260  001800  9E7C               	bcf	124,7,c	;volatile
  1261  001802                     l6334:
  1262                           
  1263                           ;main.c: 72:         unsigned int output;;main.c: 74:         LATGbits.LATG1=1;
  1264  001802  827F               	bsf	127,1,c	;volatile
  1265  001804                     
  1266                           ;main.c: 75:         LATAbits.LATA4=1;
  1267  001804  8879               	bsf	121,4,c	;volatile
  1268  001806                     
  1269                           ;main.c: 76:         LATFbits.LATF7=1;
  1270  001806  8E7E               	bsf	126,7,c	;volatile
  1271  001808                     
  1272                           ;main.c: 77:         read_colours(&test);
  1273  001808  0E7C               	movlw	low main@test
  1274  00180A  6E10               	movwf	read_colours@m^0,c
  1275  00180C  0E02               	movlw	high main@test
  1276  00180E  6E11               	movwf	(read_colours@m+1)^0,c
  1277  001810  EC09  F01E         	call	_read_colours	;wreg free
  1278  001814                     
  1279                           ;main.c: 78:         output = determine_color_new(&test);
  1280  001814  0E7C               	movlw	low main@test
  1281  001816  6E37               	movwf	determine_color_new@m^0,c
  1282  001818  0E02               	movlw	high main@test
  1283  00181A  6E38               	movwf	(determine_color_new@m+1)^0,c
  1284  00181C  EC1D  F007         	call	_determine_color_new	;wreg free
  1285  001820  C037  F250         	movff	?_determine_color_new,main@output
  1286  001824  C038  F251         	movff	?_determine_color_new+1,main@output+1
  1287  001828                     
  1288                           ;main.c: 79:         RedRatio = ((float)test.R) / ((float)test.C);
  1289  001828  C27E  F00B         	movff	main@test+2,___xxtofl@val
  1290  00182C  C27F  F00C         	movff	main@test+3,___xxtofl@val+1
  1291  001830  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1292  001832  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1293  001834  0E00               	movlw	0
  1294  001836  EC42  F018         	call	___xxtofl
  1295  00183A  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  1296  00183E  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  1297  001842  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  1298  001846  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  1299  00184A  C27C  F00B         	movff	main@test,___xxtofl@val
  1300  00184E  C27D  F00C         	movff	main@test+1,___xxtofl@val+1
  1301  001852  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1302  001854  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1303  001856  0E00               	movlw	0
  1304  001858  EC42  F018         	call	___xxtofl
  1305  00185C  C00B  F022         	movff	?___xxtofl,___fldiv@a
  1306  001860  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  1307  001864  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  1308  001868  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  1309  00186C  EC35  F013         	call	___fldiv	;wreg free
  1310  001870  C01E  F258         	movff	?___fldiv,main@RedRatio
  1311  001874  C01F  F259         	movff	?___fldiv+1,main@RedRatio+1
  1312  001878  C020  F25A         	movff	?___fldiv+2,main@RedRatio+2
  1313  00187C  C021  F25B         	movff	?___fldiv+3,main@RedRatio+3
  1314  001880                     
  1315                           ;main.c: 80:         GreenRatio = ((float)test.G) / ((float)test.C);
  1316  001880  C280  F00B         	movff	main@test+4,___xxtofl@val
  1317  001884  C281  F00C         	movff	main@test+5,___xxtofl@val+1
  1318  001888  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1319  00188A  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1320  00188C  0E00               	movlw	0
  1321  00188E  EC42  F018         	call	___xxtofl
  1322  001892  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  1323  001896  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  1324  00189A  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  1325  00189E  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  1326  0018A2  C27C  F00B         	movff	main@test,___xxtofl@val
  1327  0018A6  C27D  F00C         	movff	main@test+1,___xxtofl@val+1
  1328  0018AA  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1329  0018AC  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1330  0018AE  0E00               	movlw	0
  1331  0018B0  EC42  F018         	call	___xxtofl
  1332  0018B4  C00B  F022         	movff	?___xxtofl,___fldiv@a
  1333  0018B8  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  1334  0018BC  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  1335  0018C0  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  1336  0018C4  EC35  F013         	call	___fldiv	;wreg free
  1337  0018C8  C01E  F25C         	movff	?___fldiv,main@GreenRatio
  1338  0018CC  C01F  F25D         	movff	?___fldiv+1,main@GreenRatio+1
  1339  0018D0  C020  F25E         	movff	?___fldiv+2,main@GreenRatio+2
  1340  0018D4  C021  F25F         	movff	?___fldiv+3,main@GreenRatio+3
  1341  0018D8                     
  1342                           ;main.c: 81:         BlueRatio = ((float)test.B) / ((float)test.C);
  1343  0018D8  C282  F00B         	movff	main@test+6,___xxtofl@val
  1344  0018DC  C283  F00C         	movff	main@test+7,___xxtofl@val+1
  1345  0018E0  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1346  0018E2  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1347  0018E4  0E00               	movlw	0
  1348  0018E6  EC42  F018         	call	___xxtofl
  1349  0018EA  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  1350  0018EE  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  1351  0018F2  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  1352  0018F6  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  1353  0018FA  C27C  F00B         	movff	main@test,___xxtofl@val
  1354  0018FE  C27D  F00C         	movff	main@test+1,___xxtofl@val+1
  1355  001902  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1356  001904  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1357  001906  0E00               	movlw	0
  1358  001908  EC42  F018         	call	___xxtofl
  1359  00190C  C00B  F022         	movff	?___xxtofl,___fldiv@a
  1360  001910  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  1361  001914  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  1362  001918  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  1363  00191C  EC35  F013         	call	___fldiv	;wreg free
  1364  001920  C01E  F260         	movff	?___fldiv,main@BlueRatio
  1365  001924  C01F  F261         	movff	?___fldiv+1,main@BlueRatio+1
  1366  001928  C020  F262         	movff	?___fldiv+2,main@BlueRatio+2
  1367  00192C  C021  F263         	movff	?___fldiv+3,main@BlueRatio+3
  1368  001930                     
  1369                           ;main.c: 82:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1370  001930  0E05               	movlw	5
  1371  001932  6E51               	movwf	(??_main+1)^0,c
  1372  001934  0E0F               	movlw	15
  1373  001936  6E50               	movwf	??_main^0,c
  1374  001938  0EF1               	movlw	241
  1375  00193A                     u7227:
  1376  00193A  2EE8               	decfsz	wreg,f,c
  1377  00193C  D7FE               	bra	u7227
  1378  00193E  2E50               	decfsz	??_main^0,f,c
  1379  001940  D7FC               	bra	u7227
  1380  001942  2E51               	decfsz	(??_main+1)^0,f,c
  1381  001944  D7FA               	bra	u7227
  1382  001946  F000               	nop	
  1383  001948                     
  1384                           ;main.c: 84:         unsigned int int_part1 = RedRatio/1;
  1385  001948  0E00               	movlw	0
  1386  00194A  6E22               	movwf	___fldiv@a^0,c
  1387  00194C  0E00               	movlw	0
  1388  00194E  6E23               	movwf	(___fldiv@a+1)^0,c
  1389  001950  0E80               	movlw	128
  1390  001952  6E24               	movwf	(___fldiv@a+2)^0,c
  1391  001954  0E3F               	movlw	63
  1392  001956  6E25               	movwf	(___fldiv@a+3)^0,c
  1393  001958  C258  F01E         	movff	main@RedRatio,___fldiv@b
  1394  00195C  C259  F01F         	movff	main@RedRatio+1,___fldiv@b+1
  1395  001960  C25A  F020         	movff	main@RedRatio+2,___fldiv@b+2
  1396  001964  C25B  F021         	movff	main@RedRatio+3,___fldiv@b+3
  1397  001968  EC35  F013         	call	___fldiv	;wreg free
  1398  00196C  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1399  001970  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1400  001974  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1401  001978  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1402  00197C  EC64  F01B         	call	___fltol	;wreg free
  1403  001980  C03F  F264         	movff	?___fltol,main@int_part1
  1404  001984  C040  F265         	movff	?___fltol+1,main@int_part1+1
  1405  001988                     
  1406                           ;main.c: 85:         unsigned int frac_part1 =(RedRatio*1000)/1 - int_part1*1000;
  1407  001988  0E03               	movlw	3
  1408  00198A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1409  00198C  0EE8               	movlw	232
  1410  00198E  6E07               	movwf	___wmul@multiplicand^0,c
  1411  001990  C264  F005         	movff	main@int_part1,___wmul@multiplier
  1412  001994  C265  F006         	movff	main@int_part1+1,___wmul@multiplier+1
  1413  001998  ECBE  F020         	call	___wmul	;wreg free
  1414  00199C  C005  F00B         	movff	?___wmul,___xxtofl@val
  1415  0019A0  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1416  0019A4  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1417  0019A6  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1418  0019A8  0E00               	movlw	0
  1419  0019AA  EC42  F018         	call	___xxtofl
  1420  0019AE  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1421  0019B2  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1422  0019B6  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1423  0019BA  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1424  0019BE  0E00               	movlw	0
  1425  0019C0  6E22               	movwf	___fldiv@a^0,c
  1426  0019C2  0E00               	movlw	0
  1427  0019C4  6E23               	movwf	(___fldiv@a+1)^0,c
  1428  0019C6  0E80               	movlw	128
  1429  0019C8  6E24               	movwf	(___fldiv@a+2)^0,c
  1430  0019CA  0E3F               	movlw	63
  1431  0019CC  6E25               	movwf	(___fldiv@a+3)^0,c
  1432  0019CE  0E00               	movlw	0
  1433  0019D0  6E09               	movwf	___flmul@a^0,c
  1434  0019D2  0E00               	movlw	0
  1435  0019D4  6E0A               	movwf	(___flmul@a+1)^0,c
  1436  0019D6  0E7A               	movlw	122
  1437  0019D8  6E0B               	movwf	(___flmul@a+2)^0,c
  1438  0019DA  0E44               	movlw	68
  1439  0019DC  6E0C               	movwf	(___flmul@a+3)^0,c
  1440  0019DE  C258  F005         	movff	main@RedRatio,___flmul@b
  1441  0019E2  C259  F006         	movff	main@RedRatio+1,___flmul@b+1
  1442  0019E6  C25A  F007         	movff	main@RedRatio+2,___flmul@b+2
  1443  0019EA  C25B  F008         	movff	main@RedRatio+3,___flmul@b+3
  1444  0019EE  EC20  F011         	call	___flmul	;wreg free
  1445  0019F2  C005  F01E         	movff	?___flmul,___fldiv@b
  1446  0019F6  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1447  0019FA  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1448  0019FE  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1449  001A02  EC35  F013         	call	___fldiv	;wreg free
  1450  001A06  C01E  F037         	movff	?___fldiv,___flsub@b
  1451  001A0A  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1452  001A0E  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1453  001A12  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1454  001A16  EC2A  F01F         	call	___flsub	;wreg free
  1455  001A1A  C037  F03F         	movff	?___flsub,___fltol@f1
  1456  001A1E  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1457  001A22  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1458  001A26  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1459  001A2A  EC64  F01B         	call	___fltol	;wreg free
  1460  001A2E  C03F  F252         	movff	?___fltol,main@frac_part1
  1461  001A32  C040  F253         	movff	?___fltol+1,main@frac_part1+1
  1462  001A36                     
  1463                           ;main.c: 86:         sprintf(string1," R: %d.%03d ",int_part1, frac_part1);
  1464  001A36  0E14               	movlw	low main@string1
  1465  001A38  0100               	movlb	0	; () banked
  1466  001A3A  6F72               	movwf	sprintf@s& (0+255),b
  1467  001A3C  0E02               	movlw	high main@string1
  1468  001A3E  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1469  001A40  0E2C               	movlw	low STR_1
  1470  001A42  6F74               	movwf	sprintf@fmt& (0+255),b
  1471  001A44  0E0E               	movlw	high STR_1
  1472  001A46  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1473  001A48  C264  F076         	movff	main@int_part1,?_sprintf+4
  1474  001A4C  C265  F077         	movff	main@int_part1+1,?_sprintf+5
  1475  001A50  C252  F078         	movff	main@frac_part1,?_sprintf+6
  1476  001A54  C253  F079         	movff	main@frac_part1+1,?_sprintf+7
  1477  001A58  EC38  F01E         	call	_sprintf	;wreg free
  1478  001A5C                     
  1479                           ;main.c: 87:         TxBufferedString(string1);
  1480  001A5C  0E14               	movlw	low main@string1
  1481  001A5E  6E06               	movwf	TxBufferedString@string^0,c
  1482  001A60  0E02               	movlw	high main@string1
  1483  001A62  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1484  001A64  EC3D  F020         	call	_TxBufferedString	;wreg free
  1485  001A68                     
  1486                           ;main.c: 88:         sendTxBuf();
  1487  001A68  ECF1  F020         	call	_sendTxBuf	;wreg free
  1488  001A6C                     
  1489                           ;main.c: 89:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1490  001A6C  0E05               	movlw	5
  1491  001A6E  6E51               	movwf	(??_main+1)^0,c
  1492  001A70  0E0F               	movlw	15
  1493  001A72  6E50               	movwf	??_main^0,c
  1494  001A74  0EF1               	movlw	241
  1495  001A76                     u7237:
  1496  001A76  2EE8               	decfsz	wreg,f,c
  1497  001A78  D7FE               	bra	u7237
  1498  001A7A  2E50               	decfsz	??_main^0,f,c
  1499  001A7C  D7FC               	bra	u7237
  1500  001A7E  2E51               	decfsz	(??_main+1)^0,f,c
  1501  001A80  D7FA               	bra	u7237
  1502  001A82  F000               	nop	
  1503  001A84                     
  1504                           ;main.c: 91:         unsigned int int_part2 = GreenRatio/1;
  1505  001A84  0E00               	movlw	0
  1506  001A86  6E22               	movwf	___fldiv@a^0,c
  1507  001A88  0E00               	movlw	0
  1508  001A8A  6E23               	movwf	(___fldiv@a+1)^0,c
  1509  001A8C  0E80               	movlw	128
  1510  001A8E  6E24               	movwf	(___fldiv@a+2)^0,c
  1511  001A90  0E3F               	movlw	63
  1512  001A92  6E25               	movwf	(___fldiv@a+3)^0,c
  1513  001A94  C25C  F01E         	movff	main@GreenRatio,___fldiv@b
  1514  001A98  C25D  F01F         	movff	main@GreenRatio+1,___fldiv@b+1
  1515  001A9C  C25E  F020         	movff	main@GreenRatio+2,___fldiv@b+2
  1516  001AA0  C25F  F021         	movff	main@GreenRatio+3,___fldiv@b+3
  1517  001AA4  EC35  F013         	call	___fldiv	;wreg free
  1518  001AA8  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1519  001AAC  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1520  001AB0  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1521  001AB4  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1522  001AB8  EC64  F01B         	call	___fltol	;wreg free
  1523  001ABC  C03F  F266         	movff	?___fltol,main@int_part2
  1524  001AC0  C040  F267         	movff	?___fltol+1,main@int_part2+1
  1525  001AC4                     
  1526                           ;main.c: 92:         unsigned int frac_part2 =(GreenRatio*1000)/1 - int_part2*1000;
  1527  001AC4  0E03               	movlw	3
  1528  001AC6  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1529  001AC8  0EE8               	movlw	232
  1530  001ACA  6E07               	movwf	___wmul@multiplicand^0,c
  1531  001ACC  C266  F005         	movff	main@int_part2,___wmul@multiplier
  1532  001AD0  C267  F006         	movff	main@int_part2+1,___wmul@multiplier+1
  1533  001AD4  ECBE  F020         	call	___wmul	;wreg free
  1534  001AD8  C005  F00B         	movff	?___wmul,___xxtofl@val
  1535  001ADC  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1536  001AE0  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1537  001AE2  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1538  001AE4  0E00               	movlw	0
  1539  001AE6  EC42  F018         	call	___xxtofl
  1540  001AEA  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1541  001AEE  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1542  001AF2  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1543  001AF6  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1544  001AFA  0E00               	movlw	0
  1545  001AFC  6E22               	movwf	___fldiv@a^0,c
  1546  001AFE  0E00               	movlw	0
  1547  001B00  6E23               	movwf	(___fldiv@a+1)^0,c
  1548  001B02  0E80               	movlw	128
  1549  001B04  6E24               	movwf	(___fldiv@a+2)^0,c
  1550  001B06  0E3F               	movlw	63
  1551  001B08  6E25               	movwf	(___fldiv@a+3)^0,c
  1552  001B0A  0E00               	movlw	0
  1553  001B0C  6E09               	movwf	___flmul@a^0,c
  1554  001B0E  0E00               	movlw	0
  1555  001B10  6E0A               	movwf	(___flmul@a+1)^0,c
  1556  001B12  0E7A               	movlw	122
  1557  001B14  6E0B               	movwf	(___flmul@a+2)^0,c
  1558  001B16  0E44               	movlw	68
  1559  001B18  6E0C               	movwf	(___flmul@a+3)^0,c
  1560  001B1A  C25C  F005         	movff	main@GreenRatio,___flmul@b
  1561  001B1E  C25D  F006         	movff	main@GreenRatio+1,___flmul@b+1
  1562  001B22  C25E  F007         	movff	main@GreenRatio+2,___flmul@b+2
  1563  001B26  C25F  F008         	movff	main@GreenRatio+3,___flmul@b+3
  1564  001B2A  EC20  F011         	call	___flmul	;wreg free
  1565  001B2E  C005  F01E         	movff	?___flmul,___fldiv@b
  1566  001B32  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1567  001B36  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1568  001B3A  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1569  001B3E  EC35  F013         	call	___fldiv	;wreg free
  1570  001B42  C01E  F037         	movff	?___fldiv,___flsub@b
  1571  001B46  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1572  001B4A  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1573  001B4E  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1574  001B52  EC2A  F01F         	call	___flsub	;wreg free
  1575  001B56  C037  F03F         	movff	?___flsub,___fltol@f1
  1576  001B5A  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1577  001B5E  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1578  001B62  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1579  001B66  EC64  F01B         	call	___fltol	;wreg free
  1580  001B6A  C03F  F254         	movff	?___fltol,main@frac_part2
  1581  001B6E  C040  F255         	movff	?___fltol+1,main@frac_part2+1
  1582  001B72                     
  1583                           ;main.c: 93:         sprintf(string2," G: %d.%03d ",int_part2, frac_part2);
  1584  001B72  0E28               	movlw	low main@string2
  1585  001B74  0100               	movlb	0	; () banked
  1586  001B76  6F72               	movwf	sprintf@s& (0+255),b
  1587  001B78  0E02               	movlw	high main@string2
  1588  001B7A  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1589  001B7C  0E1F               	movlw	low STR_2
  1590  001B7E  6F74               	movwf	sprintf@fmt& (0+255),b
  1591  001B80  0E0E               	movlw	high STR_2
  1592  001B82  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1593  001B84  C266  F076         	movff	main@int_part2,?_sprintf+4
  1594  001B88  C267  F077         	movff	main@int_part2+1,?_sprintf+5
  1595  001B8C  C254  F078         	movff	main@frac_part2,?_sprintf+6
  1596  001B90  C255  F079         	movff	main@frac_part2+1,?_sprintf+7
  1597  001B94  EC38  F01E         	call	_sprintf	;wreg free
  1598  001B98                     
  1599                           ;main.c: 94:         TxBufferedString(string2);
  1600  001B98  0E28               	movlw	low main@string2
  1601  001B9A  6E06               	movwf	TxBufferedString@string^0,c
  1602  001B9C  0E02               	movlw	high main@string2
  1603  001B9E  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1604  001BA0  EC3D  F020         	call	_TxBufferedString	;wreg free
  1605  001BA4                     
  1606                           ;main.c: 95:         sendTxBuf();
  1607  001BA4  ECF1  F020         	call	_sendTxBuf	;wreg free
  1608  001BA8                     
  1609                           ;main.c: 96:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1610  001BA8  0E05               	movlw	5
  1611  001BAA  6E51               	movwf	(??_main+1)^0,c
  1612  001BAC  0E0F               	movlw	15
  1613  001BAE  6E50               	movwf	??_main^0,c
  1614  001BB0  0EF1               	movlw	241
  1615  001BB2                     u7247:
  1616  001BB2  2EE8               	decfsz	wreg,f,c
  1617  001BB4  D7FE               	bra	u7247
  1618  001BB6  2E50               	decfsz	??_main^0,f,c
  1619  001BB8  D7FC               	bra	u7247
  1620  001BBA  2E51               	decfsz	(??_main+1)^0,f,c
  1621  001BBC  D7FA               	bra	u7247
  1622  001BBE  F000               	nop	
  1623  001BC0                     
  1624                           ;main.c: 98:         unsigned int int_part3 = BlueRatio/1;
  1625  001BC0  0E00               	movlw	0
  1626  001BC2  6E22               	movwf	___fldiv@a^0,c
  1627  001BC4  0E00               	movlw	0
  1628  001BC6  6E23               	movwf	(___fldiv@a+1)^0,c
  1629  001BC8  0E80               	movlw	128
  1630  001BCA  6E24               	movwf	(___fldiv@a+2)^0,c
  1631  001BCC  0E3F               	movlw	63
  1632  001BCE  6E25               	movwf	(___fldiv@a+3)^0,c
  1633  001BD0  C260  F01E         	movff	main@BlueRatio,___fldiv@b
  1634  001BD4  C261  F01F         	movff	main@BlueRatio+1,___fldiv@b+1
  1635  001BD8  C262  F020         	movff	main@BlueRatio+2,___fldiv@b+2
  1636  001BDC  C263  F021         	movff	main@BlueRatio+3,___fldiv@b+3
  1637  001BE0  EC35  F013         	call	___fldiv	;wreg free
  1638  001BE4  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1639  001BE8  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1640  001BEC  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1641  001BF0  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1642  001BF4  EC64  F01B         	call	___fltol	;wreg free
  1643  001BF8  C03F  F268         	movff	?___fltol,main@int_part3
  1644  001BFC  C040  F269         	movff	?___fltol+1,main@int_part3+1
  1645  001C00                     
  1646                           ;main.c: 99:         unsigned int frac_part3 =(BlueRatio*1000)/1 - int_part3*1000;
  1647  001C00  0E03               	movlw	3
  1648  001C02  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1649  001C04  0EE8               	movlw	232
  1650  001C06  6E07               	movwf	___wmul@multiplicand^0,c
  1651  001C08  C268  F005         	movff	main@int_part3,___wmul@multiplier
  1652  001C0C  C269  F006         	movff	main@int_part3+1,___wmul@multiplier+1
  1653  001C10  ECBE  F020         	call	___wmul	;wreg free
  1654  001C14  C005  F00B         	movff	?___wmul,___xxtofl@val
  1655  001C18  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1656  001C1C  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1657  001C1E  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1658  001C20  0E00               	movlw	0
  1659  001C22  EC42  F018         	call	___xxtofl
  1660  001C26  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1661  001C2A  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1662  001C2E  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1663  001C32  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1664  001C36  0E00               	movlw	0
  1665  001C38  6E22               	movwf	___fldiv@a^0,c
  1666  001C3A  0E00               	movlw	0
  1667  001C3C  6E23               	movwf	(___fldiv@a+1)^0,c
  1668  001C3E  0E80               	movlw	128
  1669  001C40  6E24               	movwf	(___fldiv@a+2)^0,c
  1670  001C42  0E3F               	movlw	63
  1671  001C44  6E25               	movwf	(___fldiv@a+3)^0,c
  1672  001C46  0E00               	movlw	0
  1673  001C48  6E09               	movwf	___flmul@a^0,c
  1674  001C4A  0E00               	movlw	0
  1675  001C4C  6E0A               	movwf	(___flmul@a+1)^0,c
  1676  001C4E  0E7A               	movlw	122
  1677  001C50  6E0B               	movwf	(___flmul@a+2)^0,c
  1678  001C52  0E44               	movlw	68
  1679  001C54  6E0C               	movwf	(___flmul@a+3)^0,c
  1680  001C56  C260  F005         	movff	main@BlueRatio,___flmul@b
  1681  001C5A  C261  F006         	movff	main@BlueRatio+1,___flmul@b+1
  1682  001C5E  C262  F007         	movff	main@BlueRatio+2,___flmul@b+2
  1683  001C62  C263  F008         	movff	main@BlueRatio+3,___flmul@b+3
  1684  001C66  EC20  F011         	call	___flmul	;wreg free
  1685  001C6A  C005  F01E         	movff	?___flmul,___fldiv@b
  1686  001C6E  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1687  001C72  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1688  001C76  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1689  001C7A  EC35  F013         	call	___fldiv	;wreg free
  1690  001C7E  C01E  F037         	movff	?___fldiv,___flsub@b
  1691  001C82  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1692  001C86  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1693  001C8A  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1694  001C8E  EC2A  F01F         	call	___flsub	;wreg free
  1695  001C92  C037  F03F         	movff	?___flsub,___fltol@f1
  1696  001C96  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1697  001C9A  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1698  001C9E  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1699  001CA2  EC64  F01B         	call	___fltol	;wreg free
  1700  001CA6  C03F  F256         	movff	?___fltol,main@frac_part3
  1701  001CAA  C040  F257         	movff	?___fltol+1,main@frac_part3+1
  1702  001CAE                     
  1703                           ;main.c: 100:         sprintf(string3," B: %d.%03d ",int_part3, frac_part3);
  1704  001CAE  0E3C               	movlw	low main@string3
  1705  001CB0  0100               	movlb	0	; () banked
  1706  001CB2  6F72               	movwf	sprintf@s& (0+255),b
  1707  001CB4  0E02               	movlw	high main@string3
  1708  001CB6  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1709  001CB8  0E12               	movlw	low STR_3
  1710  001CBA  6F74               	movwf	sprintf@fmt& (0+255),b
  1711  001CBC  0E0E               	movlw	high STR_3
  1712  001CBE  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1713  001CC0  C268  F076         	movff	main@int_part3,?_sprintf+4
  1714  001CC4  C269  F077         	movff	main@int_part3+1,?_sprintf+5
  1715  001CC8  C256  F078         	movff	main@frac_part3,?_sprintf+6
  1716  001CCC  C257  F079         	movff	main@frac_part3+1,?_sprintf+7
  1717  001CD0  EC38  F01E         	call	_sprintf	;wreg free
  1718  001CD4                     
  1719                           ;main.c: 101:         TxBufferedString(string3);
  1720  001CD4  0E3C               	movlw	low main@string3
  1721  001CD6  6E06               	movwf	TxBufferedString@string^0,c
  1722  001CD8  0E02               	movlw	high main@string3
  1723  001CDA  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1724  001CDC  EC3D  F020         	call	_TxBufferedString	;wreg free
  1725  001CE0                     
  1726                           ;main.c: 102:         sendTxBuf();
  1727  001CE0  ECF1  F020         	call	_sendTxBuf	;wreg free
  1728  001CE4                     
  1729                           ;main.c: 103:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1730  001CE4  0E05               	movlw	5
  1731  001CE6  6E51               	movwf	(??_main+1)^0,c
  1732  001CE8  0E0F               	movlw	15
  1733  001CEA  6E50               	movwf	??_main^0,c
  1734  001CEC  0EF1               	movlw	241
  1735  001CEE                     u7257:
  1736  001CEE  2EE8               	decfsz	wreg,f,c
  1737  001CF0  D7FE               	bra	u7257
  1738  001CF2  2E50               	decfsz	??_main^0,f,c
  1739  001CF4  D7FC               	bra	u7257
  1740  001CF6  2E51               	decfsz	(??_main+1)^0,f,c
  1741  001CF8  D7FA               	bra	u7257
  1742  001CFA  F000               	nop	
  1743  001CFC                     
  1744                           ;main.c: 105:         sprintf(string," Colour: %d ",output);
  1745  001CFC  0E00               	movlw	low main@string
  1746  001CFE  0100               	movlb	0	; () banked
  1747  001D00  6F72               	movwf	sprintf@s& (0+255),b
  1748  001D02  0E02               	movlw	high main@string
  1749  001D04  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1750  001D06  0E05               	movlw	low STR_4
  1751  001D08  6F74               	movwf	sprintf@fmt& (0+255),b
  1752  001D0A  0E0E               	movlw	high STR_4
  1753  001D0C  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1754  001D0E  C250  F076         	movff	main@output,?_sprintf+4
  1755  001D12  C251  F077         	movff	main@output+1,?_sprintf+5
  1756  001D16  EC38  F01E         	call	_sprintf	;wreg free
  1757  001D1A                     
  1758                           ;main.c: 106:         TxBufferedString(string);
  1759  001D1A  0E00               	movlw	low main@string
  1760  001D1C  6E06               	movwf	TxBufferedString@string^0,c
  1761  001D1E  0E02               	movlw	high main@string
  1762  001D20  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1763  001D22  EC3D  F020         	call	_TxBufferedString	;wreg free
  1764  001D26                     
  1765                           ;main.c: 107:         sendTxBuf();
  1766  001D26  ECF1  F020         	call	_sendTxBuf	;wreg free
  1767  001D2A                     
  1768                           ;main.c: 108:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1769  001D2A  0E05               	movlw	5
  1770  001D2C  6E51               	movwf	(??_main+1)^0,c
  1771  001D2E  0E0F               	movlw	15
  1772  001D30  6E50               	movwf	??_main^0,c
  1773  001D32  0EF1               	movlw	241
  1774  001D34                     u7267:
  1775  001D34  2EE8               	decfsz	wreg,f,c
  1776  001D36  D7FE               	bra	u7267
  1777  001D38  2E50               	decfsz	??_main^0,f,c
  1778  001D3A  D7FC               	bra	u7267
  1779  001D3C  2E51               	decfsz	(??_main+1)^0,f,c
  1780  001D3E  D7FA               	bra	u7267
  1781  001D40  F000               	nop	
  1782  001D42                     
  1783                           ;main.c: 110:         LATGbits.LATG1=0;
  1784  001D42  927F               	bcf	127,1,c	;volatile
  1785  001D44                     
  1786                           ;main.c: 111:         LATAbits.LATA4=0;
  1787  001D44  9879               	bcf	121,4,c	;volatile
  1788  001D46                     
  1789                           ;main.c: 112:         LATFbits.LATF7=0;
  1790  001D46  9E7E               	bcf	126,7,c	;volatile
  1791  001D48                     
  1792                           ;main.c: 113:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1793  001D48  0E29               	movlw	41
  1794  001D4A  6E51               	movwf	(??_main+1)^0,c
  1795  001D4C  0E96               	movlw	150
  1796  001D4E  6E50               	movwf	??_main^0,c
  1797  001D50  0E7F               	movlw	127
  1798  001D52                     u7277:
  1799  001D52  2EE8               	decfsz	wreg,f,c
  1800  001D54  D7FE               	bra	u7277
  1801  001D56  2E50               	decfsz	??_main^0,f,c
  1802  001D58  D7FC               	bra	u7277
  1803  001D5A  2E51               	decfsz	(??_main+1)^0,f,c
  1804  001D5C  D7FA               	bra	u7277
  1805  001D5E  F000               	nop	
  1806  001D60                     
  1807                           ;main.c: 114:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1808  001D60  0E29               	movlw	41
  1809  001D62  6E51               	movwf	(??_main+1)^0,c
  1810  001D64  0E96               	movlw	150
  1811  001D66  6E50               	movwf	??_main^0,c
  1812  001D68  0E7F               	movlw	127
  1813  001D6A                     u7287:
  1814  001D6A  2EE8               	decfsz	wreg,f,c
  1815  001D6C  D7FE               	bra	u7287
  1816  001D6E  2E50               	decfsz	??_main^0,f,c
  1817  001D70  D7FC               	bra	u7287
  1818  001D72  2E51               	decfsz	(??_main+1)^0,f,c
  1819  001D74  D7FA               	bra	u7287
  1820  001D76  F000               	nop	
  1821  001D78  EF01  F00C         	goto	l6334
  1822  001D7C  EF3B  F000         	goto	start
  1823  001D80                     __end_of_main:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _sprintf *****************
  1827 ;; Defined at:
  1828 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  s               2   18[BANK0 ] PTR unsigned char 
  1831 ;;		 -> main@string(20), main@string3(20), main@string2(20), main@string1(20), 
  1832 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  1833 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  f               6   28[BANK0 ] struct _IO_FILE
  1836 ;;  ap              2   26[BANK0 ] PTR void [1]
  1837 ;;		 -> ?_sprintf(2), 
  1838 ;;  ret             2    0        int 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  2   18[BANK0 ] int 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1848 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;Total ram usage:       16 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 9
  1855 ;; This function calls:
  1856 ;;		_vfprintf
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text1
  1863  003C70                     __ptext1:
  1864                           	callstack 0
  1865  003C70                     _sprintf:
  1866                           	callstack 21
  1867  003C70  0E76               	movlw	low (?_sprintf+4)
  1868  003C72  0100               	movlb	0	; () banked
  1869  003C74  6F7A               	movwf	sprintf@ap& (0+255),b
  1870  003C76  0E00               	movlw	high (?_sprintf+4)
  1871  003C78  6F7B               	movwf	(sprintf@ap+1)& (0+255),b
  1872  003C7A  C072  F07C         	movff	sprintf@s,sprintf@f
  1873  003C7E  C073  F07D         	movff	sprintf@s+1,sprintf@f+1
  1874  003C82                     
  1875                           ; BSR set to: 0
  1876  003C82  0E00               	movlw	0
  1877  003C84  6F7F               	movwf	(sprintf@f+3)& (0+255),b
  1878  003C86  0E00               	movlw	0
  1879  003C88  6F7E               	movwf	(sprintf@f+2)& (0+255),b
  1880  003C8A                     
  1881                           ; BSR set to: 0
  1882  003C8A  0E00               	movlw	0
  1883  003C8C  6F81               	movwf	(sprintf@f+5)& (0+255),b
  1884  003C8E  0E00               	movlw	0
  1885  003C90  6F80               	movwf	(sprintf@f+4)& (0+255),b
  1886  003C92                     
  1887                           ; BSR set to: 0
  1888  003C92  0E7C               	movlw	low sprintf@f
  1889  003C94  6F6C               	movwf	vfprintf@fp& (0+255),b
  1890  003C96  0E00               	movlw	high sprintf@f
  1891  003C98  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  1892  003C9A  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  1893  003C9E  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1894  003CA2  0E7A               	movlw	low sprintf@ap
  1895  003CA4  6F70               	movwf	vfprintf@ap& (0+255),b
  1896  003CA6  0E00               	movlw	high sprintf@ap
  1897  003CA8  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  1898  003CAA  ECA4  F01D         	call	_vfprintf	;wreg free
  1899  003CAE  0100               	movlb	0	; () banked
  1900  003CB0  517E               	movf	(sprintf@f+2)& (0+255),w,b
  1901  003CB2  2572               	addwf	sprintf@s& (0+255),w,b
  1902  003CB4  6ED9               	movwf	fsr2l,c
  1903  003CB6  517F               	movf	(sprintf@f+3)& (0+255),w,b
  1904  003CB8  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  1905  003CBA  6EDA               	movwf	fsr2h,c
  1906  003CBC  0E00               	movlw	0
  1907  003CBE  6EDF               	movwf	indf2,c
  1908  003CC0                     
  1909                           ; BSR set to: 0
  1910  003CC0  0012               	return		;funcret
  1911  003CC2                     __end_of_sprintf:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _vfprintf *****************
  1915 ;; Defined at:
  1916 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1919 ;;		 -> sprintf@f(6), 
  1920 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1921 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  1922 ;;  ap              2   16[BANK0 ] PTR PTR void 
  1923 ;;		 -> sprintf@ap(2), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1926 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2   12[BANK0 ] int 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1936 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;Total ram usage:        8 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 8
  1943 ;; This function calls:
  1944 ;;		_vfpfcnvrt
  1945 ;; This function is called by:
  1946 ;;		_sprintf
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text2
  1951  003B48                     __ptext2:
  1952                           	callstack 0
  1953  003B48                     _vfprintf:
  1954                           	callstack 21
  1955  003B48                     
  1956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1957  003B48  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1958  003B4C  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1959  003B50                     
  1960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1961  003B50  0E00               	movlw	0
  1962  003B52  0101               	movlb	1	; () banked
  1963  003B54  6F53               	movwf	(_nout+1)& (0+255),b
  1964  003B56  0E00               	movlw	0
  1965  003B58  6F52               	movwf	_nout& (0+255),b
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1968  003B5A  EFC2  F01D         	goto	l5682
  1969  003B5E                     l5680:
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1973  003B5E  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1974  003B62  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1975  003B66  0E4E               	movlw	low vfprintf@cfmt
  1976  003B68  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1977  003B6A  0E00               	movlw	high vfprintf@cfmt
  1978  003B6C  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1979  003B6E  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1980  003B72  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1981  003B76  EC02  F015         	call	_vfpfcnvrt	;wreg free
  1982  003B7A  5044               	movf	?_vfpfcnvrt^0,w,c
  1983  003B7C  0101               	movlb	1	; () banked
  1984  003B7E  2752               	addwf	_nout& (0+255),f,b
  1985  003B80  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1986  003B82  2353               	addwfc	(_nout+1)& (0+255),f,b
  1987  003B84                     l5682:
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1991  003B84  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1992  003B88  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1993  003B8C                     	if	0	;tblptru may be non-zero
  1994  003B8C                     	endif
  1995  003B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1996  003B8C  0E00               	movlw	low (__mediumconst shr (0+16))
  1997  003B8E  6EF8               	movwf	tblptru,c
  1998  003B90                     	endif
  1999  003B90  0008               	tblrd		*
  2000  003B92  50F5               	movf	tablat,w,c
  2001  003B94  0900               	iorlw	0
  2002  003B96  A4D8               	btfss	status,2,c
  2003  003B98  EFD0  F01D         	goto	u6351
  2004  003B9C  EFD2  F01D         	goto	u6350
  2005  003BA0                     u6351:
  2006  003BA0  EFAF  F01D         	goto	l5680
  2007  003BA4                     u6350:
  2008  003BA4                     
  2009                           ; BSR set to: 1
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2011  003BA4  C152  F06C         	movff	_nout,?_vfprintf
  2012  003BA8  C153  F06D         	movff	_nout+1,?_vfprintf+1
  2013  003BAC                     
  2014                           ; BSR set to: 1
  2015  003BAC  0012               	return		;funcret
  2016  003BAE                     __end_of_vfprintf:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _vfpfcnvrt *****************
  2020 ;; Defined at:
  2021 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2024 ;;		 -> sprintf@f(6), 
  2025 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  2026 ;;		 -> vfprintf@cfmt(2), 
  2027 ;;  ap              2   71[COMRAM] PTR PTR void 
  2028 ;;		 -> sprintf@ap(2), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  ll              8    0[BANK0 ] long long 
  2031 ;;  llu             8    0        unsigned long long 
  2032 ;;  f               4    0        unsigned long long 
  2033 ;;  vp              3    0        PTR void 
  2034 ;;  ct              3    0        unsigned char [3]
  2035 ;;  cp              3    0        PTR unsigned char 
  2036 ;;  done            2    8[BANK0 ] int 
  2037 ;;  i               2    0        int 
  2038 ;;  c               1    0        unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2   67[COMRAM] int 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2048 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;Total ram usage:       22 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 7
  2055 ;; This function calls:
  2056 ;;		_atoi
  2057 ;;		_dtoa
  2058 ;;		_fputc
  2059 ;;		_isdigit
  2060 ;; This function is called by:
  2061 ;;		_vfprintf
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text3
  2066  002A04                     __ptext3:
  2067                           	callstack 0
  2068  002A04                     _vfpfcnvrt:
  2069                           	callstack 21
  2070  002A04                     
  2071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2072  002A04  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2073  002A08  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2074  002A0C  CFDE FFF6          	movff	postinc2,tblptrl
  2075  002A10  CFDD FFF7          	movff	postdec2,tblptrh
  2076  002A14                     	if	0	;tblptru may be non-zero
  2077  002A14                     	endif
  2078  002A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2079  002A14  0E00               	movlw	low (__mediumconst shr (0+16))
  2080  002A16  6EF8               	movwf	tblptru,c
  2081  002A18                     	endif
  2082  002A18  0008               	tblrd		*
  2083  002A1A  50F5               	movf	tablat,w,c
  2084  002A1C  0A25               	xorlw	37
  2085  002A1E  A4D8               	btfss	status,2,c
  2086  002A20  EF14  F015         	goto	u5431
  2087  002A24  EF16  F015         	goto	u5430
  2088  002A28                     u5431:
  2089  002A28  EFAF  F016         	goto	l5166
  2090  002A2C                     u5430:
  2091  002A2C                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2093  002A2C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2094  002A30  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2095  002A34  2ADE               	incf	postinc2,f,c
  2096  002A36  0E00               	movlw	0
  2097  002A38  22DD               	addwfc	postdec2,f,c
  2098  002A3A                     
  2099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2100  002A3A  0E00               	movlw	0
  2101  002A3C  0101               	movlb	1	; () banked
  2102  002A3E  6F55               	movwf	(_width+1)& (0+255),b
  2103  002A40  0E00               	movlw	0
  2104  002A42  6F54               	movwf	_width& (0+255),b
  2105  002A44  C154  F082         	movff	_width,_flags
  2106  002A48  C155  F083         	movff	_width+1,_flags+1
  2107  002A4C                     
  2108                           ; BSR set to: 1
  2109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2110  002A4C  6956               	setf	_prec& (0+255),b
  2111  002A4E  6957               	setf	(_prec+1)& (0+255),b
  2112  002A50                     
  2113                           ; BSR set to: 1
  2114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2115  002A50  0E00               	movlw	0
  2116  002A52  0100               	movlb	0	; () banked
  2117  002A54  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2118  002A56  0E00               	movlw	0
  2119  002A58  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2122  002A5A  EF77  F015         	goto	l5118
  2123  002A5E                     l5092:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2127  002A5E  8182               	bsf	_flags& (0+255),0,b
  2128  002A60                     l5094:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2132  002A60  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2133  002A64  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2134  002A68  2ADE               	incf	postinc2,f,c
  2135  002A6A  0E00               	movlw	0
  2136  002A6C  22DD               	addwfc	postdec2,f,c
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2139  002A6E  EF77  F015         	goto	l5118
  2140  002A72                     l5096:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2144  002A72  8382               	bsf	_flags& (0+255),1,b
  2145  002A74  EF30  F015         	goto	l5094
  2146  002A78                     l5100:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2150  002A78  8582               	bsf	_flags& (0+255),2,b
  2151  002A7A  EF30  F015         	goto	l5094
  2152  002A7E                     l5104:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2156  002A7E  8782               	bsf	_flags& (0+255),3,b
  2157  002A80  EF30  F015         	goto	l5094
  2158  002A84                     l5108:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2162  002A84  8982               	bsf	_flags& (0+255),4,b
  2163  002A86  EF30  F015         	goto	l5094
  2164  002A8A                     l5112:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2168  002A8A  0E00               	movlw	0
  2169  002A8C  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2170  002A8E  0E01               	movlw	1
  2171  002A90  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2174  002A92  EF77  F015         	goto	l5118
  2175  002A96                     l5116:
  2176                           
  2177                           ; BSR set to: 0
  2178  002A96  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179  002A9A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180  002A9E  CFDE FFF6          	movff	postinc2,tblptrl
  2181  002AA2  CFDD FFF7          	movff	postdec2,tblptrh
  2182  002AA6                     	if	0	;tblptru may be non-zero
  2183  002AA6                     	endif
  2184  002AA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2185  002AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  2186  002AA8  6EF8               	movwf	tblptru,c
  2187  002AAA                     	endif
  2188  002AAA  0008               	tblrd		*
  2189  002AAC  50F5               	movf	tablat,w,c
  2190  002AAE  6E4A               	movwf	??_vfpfcnvrt^0,c
  2191  002AB0  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  2192                           
  2193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 1, Range of values is 0 to 0
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte            4     3 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200  002AB2  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2201  002AB4  0A00               	xorlw	0	; case 0
  2202  002AB6  B4D8               	btfsc	status,2,c
  2203  002AB8  EF60  F015         	goto	l6456
  2204  002ABC  EF45  F015         	goto	l5112
  2205  002AC0                     l6456:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ; Switch size 1, requested type "simple"
  2209                           ; Number of cases is 5, Range of values is 32 to 48
  2210                           ; switch strategies available:
  2211                           ; Name         Instructions Cycles
  2212                           ; simple_byte           16     9 (average)
  2213                           ;	Chosen strategy is simple_byte
  2214  002AC0  504A               	movf	??_vfpfcnvrt^0,w,c
  2215  002AC2  0A20               	xorlw	32	; case 32
  2216  002AC4  B4D8               	btfsc	status,2,c
  2217  002AC6  EF3F  F015         	goto	l5104
  2218  002ACA  0A03               	xorlw	3	; case 35
  2219  002ACC  B4D8               	btfsc	status,2,c
  2220  002ACE  EF42  F015         	goto	l5108
  2221  002AD2  0A08               	xorlw	8	; case 43
  2222  002AD4  B4D8               	btfsc	status,2,c
  2223  002AD6  EF3C  F015         	goto	l5100
  2224  002ADA  0A06               	xorlw	6	; case 45
  2225  002ADC  B4D8               	btfsc	status,2,c
  2226  002ADE  EF2F  F015         	goto	l5092
  2227  002AE2  0A1D               	xorlw	29	; case 48
  2228  002AE4  B4D8               	btfsc	status,2,c
  2229  002AE6  EF39  F015         	goto	l5096
  2230  002AEA  EF45  F015         	goto	l5112
  2231  002AEE                     l5118:
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2235  002AEE  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  2236  002AF0  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2237  002AF2  B4D8               	btfsc	status,2,c
  2238  002AF4  EF7E  F015         	goto	u5441
  2239  002AF8  EF80  F015         	goto	u5440
  2240  002AFC                     u5441:
  2241  002AFC  EF4B  F015         	goto	l5116
  2242  002B00                     u5440:
  2243  002B00                     
  2244                           ; BSR set to: 0
  2245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2246  002B00  A182               	btfss	_flags& (0+255),0,b
  2247  002B02  EF85  F015         	goto	u5451
  2248  002B06  EF87  F015         	goto	u5450
  2249  002B0A                     u5451:
  2250  002B0A  EF88  F015         	goto	l5122
  2251  002B0E                     u5450:
  2252  002B0E                     
  2253                           ; BSR set to: 0
  2254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2255  002B0E  9382               	bcf	_flags& (0+255),1,b
  2256  002B10                     l5122:
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2260  002B10  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2261  002B14  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2262  002B18  CFDE FFF6          	movff	postinc2,tblptrl
  2263  002B1C  CFDD FFF7          	movff	postdec2,tblptrh
  2264  002B20                     	if	0	;tblptru may be non-zero
  2265  002B20                     	endif
  2266  002B20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2267  002B20  0E00               	movlw	low (__mediumconst shr (0+16))
  2268  002B22  6EF8               	movwf	tblptru,c
  2269  002B24                     	endif
  2270  002B24  0008               	tblrd		*
  2271  002B26  50F5               	movf	tablat,w,c
  2272  002B28  0A2A               	xorlw	42
  2273  002B2A  A4D8               	btfss	status,2,c
  2274  002B2C  EF9A  F015         	goto	u5461
  2275  002B30  EF9C  F015         	goto	u5460
  2276  002B34                     u5461:
  2277  002B34  EFC8  F015         	goto	l5130
  2278  002B38                     u5460:
  2279  002B38                     
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2282  002B38  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2283  002B3C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2284  002B40  2ADE               	incf	postinc2,f,c
  2285  002B42  0E00               	movlw	0
  2286  002B44  22DD               	addwfc	postdec2,f,c
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2289  002B46  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2290  002B4A  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2291  002B4E  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2292  002B52  0E02               	movlw	2
  2293  002B54  26DE               	addwf	postinc2,f,c
  2294  002B56  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2295  002B5A  0E00               	movlw	0
  2296  002B5C  22DD               	addwfc	postdec2,f,c
  2297  002B5E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2298  002B62  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2299  002B66  CFDE F154          	movff	postinc2,_width
  2300  002B6A  CFDD F155          	movff	postdec2,_width+1
  2301  002B6E                     
  2302                           ; BSR set to: 0
  2303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2304  002B6E  0101               	movlb	1	; () banked
  2305  002B70  BF55               	btfsc	(_width+1)& (0+255),7,b
  2306  002B72  EFBF  F015         	goto	u5470
  2307  002B76  EFBD  F015         	goto	u5471
  2308  002B7A                     u5471:
  2309  002B7A  EF0E  F016         	goto	l5140
  2310  002B7E                     u5470:
  2311  002B7E                     
  2312                           ; BSR set to: 1
  2313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2314  002B7E  0100               	movlb	0	; () banked
  2315  002B80  8182               	bsf	_flags& (0+255),0,b
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2318  002B82  0101               	movlb	1	; () banked
  2319  002B84  6D54               	negf	_width& (0+255),b
  2320  002B86  1F55               	comf	(_width+1)& (0+255),f,b
  2321  002B88  B0D8               	btfsc	status,0,c
  2322  002B8A  2B55               	incf	(_width+1)& (0+255),f,b
  2323  002B8C  EF0E  F016         	goto	l5140
  2324  002B90                     l5130:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2328  002B90  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  002B94  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  002B98  CFDE F00C          	movff	postinc2,atoi@s
  2331  002B9C  CFDD F00D          	movff	postdec2,atoi@s+1
  2332  002BA0  EC1C  F019         	call	_atoi	;wreg free
  2333  002BA4  C00C  F154         	movff	?_atoi,_width
  2334  002BA8  C00D  F155         	movff	?_atoi+1,_width+1
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2337  002BAC  EFDF  F015         	goto	l5134
  2338  002BB0                     l5132:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2342  002BB0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2343  002BB4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2344  002BB8  2ADE               	incf	postinc2,f,c
  2345  002BBA  0E00               	movlw	0
  2346  002BBC  22DD               	addwfc	postdec2,f,c
  2347  002BBE                     l5134:
  2348  002BBE  0ED0               	movlw	208
  2349  002BC0  6E4A               	movwf	??_vfpfcnvrt^0,c
  2350  002BC2  0EFF               	movlw	255
  2351  002BC4  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2352  002BC6  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2353  002BCA  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2354  002BCE  CFDE FFF6          	movff	postinc2,tblptrl
  2355  002BD2  CFDD FFF7          	movff	postdec2,tblptrh
  2356  002BD6                     	if	0	;tblptru may be non-zero
  2357  002BD6                     	endif
  2358  002BD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2359  002BD6  0E00               	movlw	low (__mediumconst shr (0+16))
  2360  002BD8  6EF8               	movwf	tblptru,c
  2361  002BDA                     	endif
  2362  002BDA  0008               	tblrd		*
  2363  002BDC  50F5               	movf	tablat,w,c
  2364  002BDE  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  2365  002BE0  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  2366  002BE2  504A               	movf	??_vfpfcnvrt^0,w,c
  2367  002BE4  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2368  002BE6  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2369  002BE8  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2370  002BEA  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2371  002BEC  E10A               	bnz	u5480
  2372  002BEE  0E0A               	movlw	10
  2373  002BF0  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2374  002BF2  A0D8               	btfss	status,0,c
  2375  002BF4  EFFE  F015         	goto	u5481
  2376  002BF8  EF01  F016         	goto	u5480
  2377  002BFC                     u5481:
  2378  002BFC  0E01               	movlw	1
  2379  002BFE  EF02  F016         	goto	u5490
  2380  002C02                     u5480:
  2381  002C02  0E00               	movlw	0
  2382  002C04                     u5490:
  2383  002C04  0100               	movlb	0	; () banked
  2384  002C06  6F6A               	movwf	_vfpfcnvrt$2091& (0+255),b
  2385  002C08  6B6B               	clrf	(_vfpfcnvrt$2091+1)& (0+255),b
  2386  002C0A                     
  2387                           ; BSR set to: 0
  2388  002C0A  516A               	movf	_vfpfcnvrt$2091& (0+255),w,b
  2389  002C0C  116B               	iorwf	(_vfpfcnvrt$2091+1)& (0+255),w,b
  2390  002C0E  A4D8               	btfss	status,2,c
  2391  002C10  EF0C  F016         	goto	u5501
  2392  002C14  EF0E  F016         	goto	u5500
  2393  002C18                     u5501:
  2394  002C18  EFD8  F015         	goto	l5132
  2395  002C1C                     u5500:
  2396  002C1C                     l5140:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2399  002C1C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2400  002C20  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2401  002C24  CFDE FFF6          	movff	postinc2,tblptrl
  2402  002C28  CFDD FFF7          	movff	postdec2,tblptrh
  2403  002C2C                     	if	0	;tblptru may be non-zero
  2404  002C2C                     	endif
  2405  002C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2406  002C2C  0E00               	movlw	low (__mediumconst shr (0+16))
  2407  002C2E  6EF8               	movwf	tblptru,c
  2408  002C30                     	endif
  2409  002C30  0008               	tblrd		*
  2410  002C32  50F5               	movf	tablat,w,c
  2411  002C34  0A64               	xorlw	100
  2412  002C36  B4D8               	btfsc	status,2,c
  2413  002C38  EF20  F016         	goto	u5511
  2414  002C3C  EF22  F016         	goto	u5510
  2415  002C40                     u5511:
  2416  002C40  EF36  F016         	goto	l5144
  2417  002C44                     u5510:
  2418  002C44  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419  002C48  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420  002C4C  CFDE FFF6          	movff	postinc2,tblptrl
  2421  002C50  CFDD FFF7          	movff	postdec2,tblptrh
  2422  002C54                     	if	0	;tblptru may be non-zero
  2423  002C54                     	endif
  2424  002C54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2425  002C54  0E00               	movlw	low (__mediumconst shr (0+16))
  2426  002C56  6EF8               	movwf	tblptru,c
  2427  002C58                     	endif
  2428  002C58  0008               	tblrd		*
  2429  002C5A  50F5               	movf	tablat,w,c
  2430  002C5C  0A69               	xorlw	105
  2431  002C5E  A4D8               	btfss	status,2,c
  2432  002C60  EF34  F016         	goto	u5521
  2433  002C64  EF36  F016         	goto	u5520
  2434  002C68                     u5521:
  2435  002C68  EF77  F016         	goto	l5150
  2436  002C6C                     u5520:
  2437  002C6C                     l5144:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2440  002C6C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2441  002C70  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2442  002C74  2ADE               	incf	postinc2,f,c
  2443  002C76  0E00               	movlw	0
  2444  002C78  22DD               	addwfc	postdec2,f,c
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2447  002C7A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2448  002C7E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2449  002C82  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2450  002C86  0E02               	movlw	2
  2451  002C88  26DE               	addwf	postinc2,f,c
  2452  002C8A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2453  002C8E  0E00               	movlw	0
  2454  002C90  22DD               	addwfc	postdec2,f,c
  2455  002C92  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2456  002C96  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2457  002C9A  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  2458  002C9E  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  2459  002CA2  0100               	movlb	0	; () banked
  2460  002CA4  0E00               	movlw	0
  2461  002CA6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2462  002CA8  0EFF               	movlw	-1
  2463  002CAA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2464  002CAC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2465  002CAE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2466  002CB0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2467  002CB2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2468  002CB4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2469  002CB6                     
  2470                           ; BSR set to: 0
  2471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2472  002CB6  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2473  002CBA  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2474  002CBE  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2475  002CC2  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2476  002CC6  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2477  002CCA  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2478  002CCE  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2479  002CD2  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2480  002CD6  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2481  002CDA  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2482  002CDE  ECCD  F016         	call	_dtoa	;wreg free
  2483  002CE2  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2484  002CE6  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2485  002CEA  EFCC  F016         	goto	l1197
  2486  002CEE                     l5150:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2489  002CEE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490  002CF2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491  002CF6  CFDE FFF6          	movff	postinc2,tblptrl
  2492  002CFA  CFDD FFF7          	movff	postdec2,tblptrh
  2493  002CFE                     	if	0	;tblptru may be non-zero
  2494  002CFE                     	endif
  2495  002CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2496  002CFE  0E00               	movlw	low (__mediumconst shr (0+16))
  2497  002D00  6EF8               	movwf	tblptru,c
  2498  002D02                     	endif
  2499  002D02  0008               	tblrd		*
  2500  002D04  50F5               	movf	tablat,w,c
  2501  002D06  0A25               	xorlw	37
  2502  002D08  A4D8               	btfss	status,2,c
  2503  002D0A  EF89  F016         	goto	u5531
  2504  002D0E  EF8B  F016         	goto	u5530
  2505  002D12                     u5531:
  2506  002D12  EFA2  F016         	goto	l5160
  2507  002D16                     u5530:
  2508  002D16                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2510  002D16  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511  002D1A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512  002D1E  2ADE               	incf	postinc2,f,c
  2513  002D20  0E00               	movlw	0
  2514  002D22  22DD               	addwfc	postdec2,f,c
  2515  002D24                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2517  002D24  0E00               	movlw	0
  2518  002D26  6E06               	movwf	(fputc@c+1)^0,c
  2519  002D28  0E25               	movlw	37
  2520  002D2A  6E05               	movwf	fputc@c^0,c
  2521  002D2C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2522  002D30  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2523  002D34  EC69  F01C         	call	_fputc	;wreg free
  2524  002D38                     l5156:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2527  002D38  0E00               	movlw	0
  2528  002D3A  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2529  002D3C  0E01               	movlw	1
  2530  002D3E  6E44               	movwf	?_vfpfcnvrt^0,c
  2531  002D40  EFCC  F016         	goto	l1197
  2532  002D44                     l5160:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2535  002D44  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2536  002D48  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2537  002D4C  2ADE               	incf	postinc2,f,c
  2538  002D4E  0E00               	movlw	0
  2539  002D50  22DD               	addwfc	postdec2,f,c
  2540  002D52                     
  2541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2542  002D52  0E00               	movlw	0
  2543  002D54  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2544  002D56  0E00               	movlw	0
  2545  002D58  6E44               	movwf	?_vfpfcnvrt^0,c
  2546  002D5A  EFCC  F016         	goto	l1197
  2547  002D5E                     l5166:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2550  002D5E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2551  002D62  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2552  002D66  CFDE FFF6          	movff	postinc2,tblptrl
  2553  002D6A  CFDD FFF7          	movff	postdec2,tblptrh
  2554  002D6E                     	if	0	;tblptru may be non-zero
  2555  002D6E                     	endif
  2556  002D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2557  002D6E  0E00               	movlw	low (__mediumconst shr (0+16))
  2558  002D70  6EF8               	movwf	tblptru,c
  2559  002D72                     	endif
  2560  002D72  0008               	tblrd		*
  2561  002D74  50F5               	movf	tablat,w,c
  2562  002D76  6E05               	movwf	fputc@c^0,c
  2563  002D78  6A06               	clrf	(fputc@c+1)^0,c
  2564  002D7A  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2565  002D7E  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2566  002D82  EC69  F01C         	call	_fputc	;wreg free
  2567  002D86                     
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2569  002D86  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2570  002D8A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2571  002D8E  2ADE               	incf	postinc2,f,c
  2572  002D90  0E00               	movlw	0
  2573  002D92  22DD               	addwfc	postdec2,f,c
  2574  002D94  EF9C  F016         	goto	l5156
  2575  002D98                     l1197:
  2576  002D98  0012               	return		;funcret
  2577  002D9A                     __end_of_vfpfcnvrt:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _dtoa *****************
  2581 ;; Defined at:
  2582 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2585 ;;		 -> sprintf@f(6), 
  2586 ;;  d               8   33[COMRAM] long long 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  n               8   57[COMRAM] long long 
  2589 ;;  i               2   65[COMRAM] int 
  2590 ;;  s               2   55[COMRAM] int 
  2591 ;;  w               2   53[COMRAM] int 
  2592 ;;  p               2   51[COMRAM] int 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2   31[COMRAM] int 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2602 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2604 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;Total ram usage:       36 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 6
  2609 ;; This function calls:
  2610 ;;		___aodiv
  2611 ;;		___aomod
  2612 ;;		_abs
  2613 ;;		_pad
  2614 ;; This function is called by:
  2615 ;;		_vfpfcnvrt
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text4
  2620  002D9A                     __ptext4:
  2621                           	callstack 0
  2622  002D9A                     _dtoa:
  2623                           	callstack 21
  2624  002D9A                     
  2625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2626  002D9A  C022  F03A         	movff	dtoa@d,dtoa@n
  2627  002D9E  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2628  002DA2  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2629  002DA6  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2630  002DAA  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2631  002DAE  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2632  002DB2  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2633  002DB6  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2634  002DBA                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2636  002DBA  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2637  002DBC  EFE2  F016         	goto	u5131
  2638  002DC0  EFE5  F016         	goto	u5130
  2639  002DC4                     u5131:
  2640  002DC4  0E01               	movlw	1
  2641  002DC6  EFE6  F016         	goto	u5140
  2642  002DCA                     u5130:
  2643  002DCA  0E00               	movlw	0
  2644  002DCC                     u5140:
  2645  002DCC  6E38               	movwf	dtoa@s^0,c
  2646  002DCE  6A39               	clrf	(dtoa@s+1)^0,c
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2649  002DD0  5038               	movf	dtoa@s^0,w,c
  2650  002DD2  1039               	iorwf	(dtoa@s+1)^0,w,c
  2651  002DD4  B4D8               	btfsc	status,2,c
  2652  002DD6  EFEF  F016         	goto	u5151
  2653  002DDA  EFF1  F016         	goto	u5150
  2654  002DDE                     u5151:
  2655  002DDE  EF01  F017         	goto	l4922
  2656  002DE2                     u5150:
  2657  002DE2                     
  2658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2659  002DE2  1E41               	comf	(dtoa@n+7)^0,f,c
  2660  002DE4  1E40               	comf	(dtoa@n+6)^0,f,c
  2661  002DE6  1E3F               	comf	(dtoa@n+5)^0,f,c
  2662  002DE8  1E3E               	comf	(dtoa@n+4)^0,f,c
  2663  002DEA  1E3D               	comf	(dtoa@n+3)^0,f,c
  2664  002DEC  1E3C               	comf	(dtoa@n+2)^0,f,c
  2665  002DEE  1E3B               	comf	(dtoa@n+1)^0,f,c
  2666  002DF0  6C3A               	negf	dtoa@n^0,c
  2667  002DF2  0E00               	movlw	0
  2668  002DF4  223B               	addwfc	(dtoa@n+1)^0,f,c
  2669  002DF6  223C               	addwfc	(dtoa@n+2)^0,f,c
  2670  002DF8  223D               	addwfc	(dtoa@n+3)^0,f,c
  2671  002DFA  223E               	addwfc	(dtoa@n+4)^0,f,c
  2672  002DFC  223F               	addwfc	(dtoa@n+5)^0,f,c
  2673  002DFE  2240               	addwfc	(dtoa@n+6)^0,f,c
  2674  002E00  2241               	addwfc	(dtoa@n+7)^0,f,c
  2675  002E02                     l4922:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2678  002E02  0101               	movlb	1	; () banked
  2679  002E04  BF57               	btfsc	(_prec+1)& (0+255),7,b
  2680  002E06  EF07  F017         	goto	u5161
  2681  002E0A  EF09  F017         	goto	u5160
  2682  002E0E                     u5161:
  2683  002E0E  EF0B  F017         	goto	l4926
  2684  002E12                     u5160:
  2685  002E12                     
  2686                           ; BSR set to: 1
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2688  002E12  0100               	movlb	0	; () banked
  2689  002E14  9382               	bcf	_flags& (0+255),1,b
  2690  002E16                     l4926:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2693  002E16  0101               	movlb	1	; () banked
  2694  002E18  BF57               	btfsc	(_prec+1)& (0+255),7,b
  2695  002E1A  EF19  F017         	goto	u5170
  2696  002E1E  5157               	movf	(_prec+1)& (0+255),w,b
  2697  002E20  E106               	bnz	u5171
  2698  002E22  0556               	decf	_prec& (0+255),w,b
  2699  002E24  B0D8               	btfsc	status,0,c
  2700  002E26  EF17  F017         	goto	u5171
  2701  002E2A  EF19  F017         	goto	u5170
  2702  002E2E                     u5171:
  2703  002E2E  EF1F  F017         	goto	l1148
  2704  002E32                     u5170:
  2705  002E32                     
  2706                           ; BSR set to: 1
  2707  002E32  0E00               	movlw	0
  2708  002E34  6E35               	movwf	(dtoa@p+1)^0,c
  2709  002E36  0E01               	movlw	1
  2710  002E38  6E34               	movwf	dtoa@p^0,c
  2711  002E3A  EF23  F017         	goto	l1150
  2712  002E3E                     l1148:
  2713                           
  2714                           ; BSR set to: 1
  2715  002E3E  C156  F034         	movff	_prec,dtoa@p
  2716  002E42  C157  F035         	movff	_prec+1,dtoa@p+1
  2717  002E46                     l1150:
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2721  002E46  C154  F036         	movff	_width,dtoa@w
  2722  002E4A  C155  F037         	movff	_width+1,dtoa@w+1
  2723  002E4E                     
  2724                           ; BSR set to: 1
  2725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2726  002E4E  5038               	movf	dtoa@s^0,w,c
  2727  002E50  1039               	iorwf	(dtoa@s+1)^0,w,c
  2728  002E52  A4D8               	btfss	status,2,c
  2729  002E54  EF2E  F017         	goto	u5181
  2730  002E58  EF30  F017         	goto	u5180
  2731  002E5C                     u5181:
  2732  002E5C  EF38  F017         	goto	l4934
  2733  002E60                     u5180:
  2734  002E60                     
  2735                           ; BSR set to: 1
  2736  002E60  0100               	movlb	0	; () banked
  2737  002E62  A582               	btfss	_flags& (0+255),2,b
  2738  002E64  EF36  F017         	goto	u5191
  2739  002E68  EF38  F017         	goto	u5190
  2740  002E6C                     u5191:
  2741  002E6C  EF3B  F017         	goto	l4936
  2742  002E70                     u5190:
  2743  002E70                     l4934:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2746  002E70  0636               	decf	dtoa@w^0,f,c
  2747  002E72  A0D8               	btfss	status,0,c
  2748  002E74  0637               	decf	(dtoa@w+1)^0,f,c
  2749  002E76                     l4936:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2752  002E76  0E00               	movlw	0
  2753  002E78  6E43               	movwf	(dtoa@i+1)^0,c
  2754  002E7A  0E1F               	movlw	31
  2755  002E7C  6E42               	movwf	dtoa@i^0,c
  2756  002E7E                     
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2758  002E7E  0E00               	movlw	0
  2759  002E80  0101               	movlb	1	; () banked
  2760  002E82  6F77               	movwf	(_dbuf+31)& (0+255),b
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2763  002E84  EFC0  F017         	goto	l4950
  2764  002E88                     l4940:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2767  002E88  0642               	decf	dtoa@i^0,f,c
  2768  002E8A  A0D8               	btfss	status,0,c
  2769  002E8C  0643               	decf	(dtoa@i+1)^0,f,c
  2770  002E8E                     
  2771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2772  002E8E  0E58               	movlw	low _dbuf
  2773  002E90  2442               	addwf	dtoa@i^0,w,c
  2774  002E92  6ED9               	movwf	fsr2l,c
  2775  002E94  0E01               	movlw	high _dbuf
  2776  002E96  2043               	addwfc	(dtoa@i+1)^0,w,c
  2777  002E98  6EDA               	movwf	fsr2h,c
  2778  002E9A  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2779  002E9E  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2780  002EA2  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2781  002EA6  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2782  002EAA  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2783  002EAE  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2784  002EB2  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2785  002EB6  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2786  002EBA  0E0A               	movlw	10
  2787  002EBC  6E0D               	movwf	___aomod@divisor^0,c
  2788  002EBE  0E00               	movlw	0
  2789  002EC0  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2790  002EC2  0E00               	movlw	0
  2791  002EC4  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2792  002EC6  0E00               	movlw	0
  2793  002EC8  6E10               	movwf	(___aomod@divisor+3)^0,c
  2794  002ECA  0E00               	movlw	0
  2795  002ECC  6E11               	movwf	(___aomod@divisor+4)^0,c
  2796  002ECE  0E00               	movlw	0
  2797  002ED0  6E12               	movwf	(___aomod@divisor+5)^0,c
  2798  002ED2  0E00               	movlw	0
  2799  002ED4  6E13               	movwf	(___aomod@divisor+6)^0,c
  2800  002ED6  0E00               	movlw	0
  2801  002ED8  6E14               	movwf	(___aomod@divisor+7)^0,c
  2802  002EDA  ECB2  F01A         	call	___aomod	;wreg free
  2803  002EDE  C005  F02A         	movff	?___aomod,??_dtoa
  2804  002EE2  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2805  002EE6  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2806  002EEA  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2807  002EEE  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2808  002EF2  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2809  002EF6  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2810  002EFA  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2811  002EFE  C02A  F017         	movff	??_dtoa,abs@a
  2812  002F02  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2813  002F06  ECB1  F01F         	call	_abs	;wreg free
  2814  002F0A  5017               	movf	?_abs^0,w,c
  2815  002F0C  0F30               	addlw	48
  2816  002F0E  6EDF               	movwf	indf2,c
  2817  002F10                     
  2818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2819  002F10  0634               	decf	dtoa@p^0,f,c
  2820  002F12  A0D8               	btfss	status,0,c
  2821  002F14  0635               	decf	(dtoa@p+1)^0,f,c
  2822  002F16                     
  2823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2824  002F16  0636               	decf	dtoa@w^0,f,c
  2825  002F18  A0D8               	btfss	status,0,c
  2826  002F1A  0637               	decf	(dtoa@w+1)^0,f,c
  2827  002F1C                     
  2828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2829  002F1C  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2830  002F20  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2831  002F24  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2832  002F28  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2833  002F2C  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2834  002F30  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2835  002F34  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2836  002F38  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2837  002F3C  0E0A               	movlw	10
  2838  002F3E  6E0D               	movwf	___aodiv@divisor^0,c
  2839  002F40  0E00               	movlw	0
  2840  002F42  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2841  002F44  0E00               	movlw	0
  2842  002F46  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2843  002F48  0E00               	movlw	0
  2844  002F4A  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2845  002F4C  0E00               	movlw	0
  2846  002F4E  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2847  002F50  0E00               	movlw	0
  2848  002F52  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2849  002F54  0E00               	movlw	0
  2850  002F56  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2851  002F58  0E00               	movlw	0
  2852  002F5A  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2853  002F5C  ECEE  F019         	call	___aodiv	;wreg free
  2854  002F60  C005  F03A         	movff	?___aodiv,dtoa@n
  2855  002F64  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2856  002F68  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2857  002F6C  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2858  002F70  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2859  002F74  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2860  002F78  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2861  002F7C  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2862  002F80                     l4950:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2865  002F80  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2866  002F82  EFCB  F017         	goto	u5201
  2867  002F86  5043               	movf	(dtoa@i+1)^0,w,c
  2868  002F88  E108               	bnz	u5200
  2869  002F8A  0442               	decf	dtoa@i^0,w,c
  2870  002F8C  A0D8               	btfss	status,0,c
  2871  002F8E  EFCB  F017         	goto	u5201
  2872  002F92  EFCD  F017         	goto	u5200
  2873  002F96                     u5201:
  2874  002F96  EFFE  F017         	goto	l4960
  2875  002F9A                     u5200:
  2876  002F9A  503A               	movf	dtoa@n^0,w,c
  2877  002F9C  103B               	iorwf	(dtoa@n+1)^0,w,c
  2878  002F9E  103C               	iorwf	(dtoa@n+2)^0,w,c
  2879  002FA0  103D               	iorwf	(dtoa@n+3)^0,w,c
  2880  002FA2  103E               	iorwf	(dtoa@n+4)^0,w,c
  2881  002FA4  103F               	iorwf	(dtoa@n+5)^0,w,c
  2882  002FA6  1040               	iorwf	(dtoa@n+6)^0,w,c
  2883  002FA8  1041               	iorwf	(dtoa@n+7)^0,w,c
  2884  002FAA  A4D8               	btfss	status,2,c
  2885  002FAC  EFDA  F017         	goto	u5211
  2886  002FB0  EFDC  F017         	goto	u5210
  2887  002FB4                     u5211:
  2888  002FB4  EF44  F017         	goto	l4940
  2889  002FB8                     u5210:
  2890  002FB8  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2891  002FBA  EFE9  F017         	goto	u5220
  2892  002FBE  5035               	movf	(dtoa@p+1)^0,w,c
  2893  002FC0  E106               	bnz	u5221
  2894  002FC2  0434               	decf	dtoa@p^0,w,c
  2895  002FC4  B0D8               	btfsc	status,0,c
  2896  002FC6  EFE7  F017         	goto	u5221
  2897  002FCA  EFE9  F017         	goto	u5220
  2898  002FCE                     u5221:
  2899  002FCE  EF44  F017         	goto	l4940
  2900  002FD2                     u5220:
  2901  002FD2  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2902  002FD4  EFF4  F017         	goto	u5231
  2903  002FD8  5037               	movf	(dtoa@w+1)^0,w,c
  2904  002FDA  E108               	bnz	u5230
  2905  002FDC  0436               	decf	dtoa@w^0,w,c
  2906  002FDE  A0D8               	btfss	status,0,c
  2907  002FE0  EFF4  F017         	goto	u5231
  2908  002FE4  EFF6  F017         	goto	u5230
  2909  002FE8                     u5231:
  2910  002FE8  EFFE  F017         	goto	l4960
  2911  002FEC                     u5230:
  2912  002FEC  0100               	movlb	0	; () banked
  2913  002FEE  B382               	btfsc	_flags& (0+255),1,b
  2914  002FF0  EFFC  F017         	goto	u5241
  2915  002FF4  EFFE  F017         	goto	u5240
  2916  002FF8                     u5241:
  2917  002FF8  EF44  F017         	goto	l4940
  2918  002FFC                     u5240:
  2919  002FFC                     l4960:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2922  002FFC  5038               	movf	dtoa@s^0,w,c
  2923  002FFE  1039               	iorwf	(dtoa@s+1)^0,w,c
  2924  003000  A4D8               	btfss	status,2,c
  2925  003002  EF05  F018         	goto	u5251
  2926  003006  EF07  F018         	goto	u5250
  2927  00300A                     u5251:
  2928  00300A  EF0F  F018         	goto	l4964
  2929  00300E                     u5250:
  2930  00300E  0100               	movlb	0	; () banked
  2931  003010  A582               	btfss	_flags& (0+255),2,b
  2932  003012  EF0D  F018         	goto	u5261
  2933  003016  EF0F  F018         	goto	u5260
  2934  00301A                     u5261:
  2935  00301A  EF2D  F018         	goto	l4974
  2936  00301E                     u5260:
  2937  00301E                     l4964:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2940  00301E  0642               	decf	dtoa@i^0,f,c
  2941  003020  A0D8               	btfss	status,0,c
  2942  003022  0643               	decf	(dtoa@i+1)^0,f,c
  2943  003024                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2945  003024  5038               	movf	dtoa@s^0,w,c
  2946  003026  1039               	iorwf	(dtoa@s+1)^0,w,c
  2947  003028  A4D8               	btfss	status,2,c
  2948  00302A  EF19  F018         	goto	u5271
  2949  00302E  EF1B  F018         	goto	u5270
  2950  003032                     u5271:
  2951  003032  EF21  F018         	goto	l4970
  2952  003036                     u5270:
  2953  003036  0E00               	movlw	0
  2954  003038  6E33               	movwf	(_dtoa$2076+1)^0,c
  2955  00303A  0E2B               	movlw	43
  2956  00303C  6E32               	movwf	_dtoa$2076^0,c
  2957  00303E  EF25  F018         	goto	l4972
  2958  003042                     l4970:
  2959  003042  0E00               	movlw	0
  2960  003044  6E33               	movwf	(_dtoa$2076+1)^0,c
  2961  003046  0E2D               	movlw	45
  2962  003048  6E32               	movwf	_dtoa$2076^0,c
  2963  00304A                     l4972:
  2964  00304A  0E58               	movlw	low _dbuf
  2965  00304C  2442               	addwf	dtoa@i^0,w,c
  2966  00304E  6ED9               	movwf	fsr2l,c
  2967  003050  0E01               	movlw	high _dbuf
  2968  003052  2043               	addwfc	(dtoa@i+1)^0,w,c
  2969  003054  6EDA               	movwf	fsr2h,c
  2970  003056  C032  FFDF         	movff	_dtoa$2076,indf2
  2971  00305A                     l4974:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2974  00305A  C020  F015         	movff	dtoa@fp,pad@fp
  2975  00305E  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2976  003062  0E58               	movlw	low _dbuf
  2977  003064  2442               	addwf	dtoa@i^0,w,c
  2978  003066  6E17               	movwf	pad@buf^0,c
  2979  003068  0E01               	movlw	high _dbuf
  2980  00306A  2043               	addwfc	(dtoa@i+1)^0,w,c
  2981  00306C  6E18               	movwf	(pad@buf+1)^0,c
  2982  00306E  C036  F019         	movff	dtoa@w,pad@p
  2983  003072  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2984  003076  ECCE  F01C         	call	_pad	;wreg free
  2985  00307A  C015  F020         	movff	?_pad,?_dtoa
  2986  00307E  C016  F021         	movff	?_pad+1,?_dtoa+1
  2987  003082  0012               	return		;funcret
  2988  003084                     __end_of_dtoa:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _pad *****************
  2992 ;; Defined at:
  2993 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2996 ;;		 -> sprintf@f(6), 
  2997 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2998 ;;		 -> dbuf(32), 
  2999 ;;  p               2   24[COMRAM] int 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  w               2   29[COMRAM] int 
  3002 ;;  i               2   27[COMRAM] int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2   20[COMRAM] int 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3012 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;Total ram usage:       11 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 5
  3019 ;; This function calls:
  3020 ;;		_fputc
  3021 ;;		_fputs
  3022 ;;		_strlen
  3023 ;; This function is called by:
  3024 ;;		_dtoa
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text5
  3029  00399C                     __ptext5:
  3030                           	callstack 0
  3031  00399C                     _pad:
  3032                           	callstack 21
  3033  00399C                     
  3034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3035  00399C  0100               	movlb	0	; () banked
  3036  00399E  A182               	btfss	_flags& (0+255),0,b
  3037  0039A0  EFD4  F01C         	goto	u5021
  3038  0039A4  EFD6  F01C         	goto	u5020
  3039  0039A8                     u5021:
  3040  0039A8  EFE0  F01C         	goto	l4874
  3041  0039AC                     u5020:
  3042  0039AC                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3045  0039AC  C017  F00E         	movff	pad@buf,fputs@s
  3046  0039B0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3047  0039B4  C015  F010         	movff	pad@fp,fputs@fp
  3048  0039B8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3049  0039BC  EC4D  F01F         	call	_fputs	;wreg free
  3050  0039C0                     l4874:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3053  0039C0  BE1A               	btfsc	(pad@p+1)^0,7,c
  3054  0039C2  EFE5  F01C         	goto	u5031
  3055  0039C6  EFE7  F01C         	goto	u5030
  3056  0039CA                     u5031:
  3057  0039CA  EFED  F01C         	goto	l4878
  3058  0039CE                     u5030:
  3059  0039CE  C019  F01E         	movff	pad@p,pad@w
  3060  0039D2  C01A  F01F         	movff	pad@p+1,pad@w+1
  3061  0039D6  EFF1  F01C         	goto	l1137
  3062  0039DA                     l4878:
  3063  0039DA  0E00               	movlw	0
  3064  0039DC  6E1F               	movwf	(pad@w+1)^0,c
  3065  0039DE  0E00               	movlw	0
  3066  0039E0  6E1E               	movwf	pad@w^0,c
  3067  0039E2                     l1137:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3070  0039E2  0E00               	movlw	0
  3071  0039E4  6E1D               	movwf	(pad@i+1)^0,c
  3072  0039E6  0E00               	movlw	0
  3073  0039E8  6E1C               	movwf	pad@i^0,c
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3076  0039EA  EF03  F01D         	goto	l4884
  3077  0039EE                     l4880:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3080  0039EE  0E00               	movlw	0
  3081  0039F0  6E06               	movwf	(fputc@c+1)^0,c
  3082  0039F2  0E20               	movlw	32
  3083  0039F4  6E05               	movwf	fputc@c^0,c
  3084  0039F6  C015  F007         	movff	pad@fp,fputc@fp
  3085  0039FA  C016  F008         	movff	pad@fp+1,fputc@fp+1
  3086  0039FE  EC69  F01C         	call	_fputc	;wreg free
  3087  003A02                     
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3089  003A02  4A1C               	infsnz	pad@i^0,f,c
  3090  003A04  2A1D               	incf	(pad@i+1)^0,f,c
  3091  003A06                     l4884:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3094  003A06  501E               	movf	pad@w^0,w,c
  3095  003A08  5C1C               	subwf	pad@i^0,w,c
  3096  003A0A  501D               	movf	(pad@i+1)^0,w,c
  3097  003A0C  0A80               	xorlw	128
  3098  003A0E  6E1B               	movwf	??_pad^0,c
  3099  003A10  501F               	movf	(pad@w+1)^0,w,c
  3100  003A12  0A80               	xorlw	128
  3101  003A14  581B               	subwfb	??_pad^0,w,c
  3102  003A16  A0D8               	btfss	status,0,c
  3103  003A18  EF10  F01D         	goto	u5041
  3104  003A1C  EF12  F01D         	goto	u5040
  3105  003A20                     u5041:
  3106  003A20  EFF7  F01C         	goto	l4880
  3107  003A24                     u5040:
  3108  003A24                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3110  003A24  0100               	movlb	0	; () banked
  3111  003A26  B182               	btfsc	_flags& (0+255),0,b
  3112  003A28  EF18  F01D         	goto	u5051
  3113  003A2C  EF1A  F01D         	goto	u5050
  3114  003A30                     u5051:
  3115  003A30  EF24  F01D         	goto	l4888
  3116  003A34                     u5050:
  3117  003A34                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3120  003A34  C017  F00E         	movff	pad@buf,fputs@s
  3121  003A38  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3122  003A3C  C015  F010         	movff	pad@fp,fputs@fp
  3123  003A40  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3124  003A44  EC4D  F01F         	call	_fputs	;wreg free
  3125  003A48                     l4888:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3128  003A48  C017  F005         	movff	pad@buf,strlen@s
  3129  003A4C  C018  F006         	movff	pad@buf+1,strlen@s+1
  3130  003A50  EC08  F020         	call	_strlen	;wreg free
  3131  003A54  501E               	movf	pad@w^0,w,c
  3132  003A56  2405               	addwf	?_strlen^0,w,c
  3133  003A58  6E15               	movwf	?_pad^0,c
  3134  003A5A  501F               	movf	(pad@w+1)^0,w,c
  3135  003A5C  2006               	addwfc	(?_strlen+1)^0,w,c
  3136  003A5E  6E16               	movwf	(?_pad+1)^0,c
  3137  003A60  0012               	return		;funcret
  3138  003A62                     __end_of_pad:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _strlen *****************
  3142 ;; Defined at:
  3143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3146 ;;		 -> dbuf(32), 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3149 ;;		 -> dbuf(32), 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2    4[COMRAM] unsigned int 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:        4 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 2
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_pad
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text6
  3174  004010                     __ptext6:
  3175                           	callstack 0
  3176  004010                     _strlen:
  3177                           	callstack 23
  3178  004010  C005  F007         	movff	strlen@s,strlen@a
  3179  004014  C006  F008         	movff	strlen@s+1,strlen@a+1
  3180  004018  EF10  F020         	goto	l4778
  3181  00401C                     l4776:
  3182  00401C  4A05               	infsnz	strlen@s^0,f,c
  3183  00401E  2A06               	incf	(strlen@s+1)^0,f,c
  3184  004020                     l4778:
  3185  004020  C005  FFD9         	movff	strlen@s,fsr2l
  3186  004024  C006  FFDA         	movff	strlen@s+1,fsr2h
  3187  004028  50DF               	movf	indf2,w,c
  3188  00402A  A4D8               	btfss	status,2,c
  3189  00402C  EF1A  F020         	goto	u4881
  3190  004030  EF1C  F020         	goto	u4880
  3191  004034                     u4881:
  3192  004034  EF0E  F020         	goto	l4776
  3193  004038                     u4880:
  3194  004038  5007               	movf	strlen@a^0,w,c
  3195  00403A  5C05               	subwf	strlen@s^0,w,c
  3196  00403C  6E05               	movwf	?_strlen^0,c
  3197  00403E  5008               	movf	(strlen@a+1)^0,w,c
  3198  004040  5806               	subwfb	(strlen@s+1)^0,w,c
  3199  004042  6E06               	movwf	(?_strlen+1)^0,c
  3200  004044  0012               	return		;funcret
  3201  004046                     __end_of_strlen:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _fputs *****************
  3205 ;; Defined at:
  3206 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3209 ;;		 -> dbuf(32), 
  3210 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3211 ;;		 -> sprintf@f(6), 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  i               2   18[COMRAM] int 
  3214 ;;  c               1   17[COMRAM] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2   13[COMRAM] int 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;Total ram usage:        7 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 4
  3231 ;; This function calls:
  3232 ;;		_fputc
  3233 ;; This function is called by:
  3234 ;;		_pad
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text7
  3239  003E9A                     __ptext7:
  3240                           	callstack 0
  3241  003E9A                     _fputs:
  3242                           	callstack 21
  3243  003E9A  0E00               	movlw	0
  3244  003E9C  6E14               	movwf	(fputs@i+1)^0,c
  3245  003E9E  0E00               	movlw	0
  3246  003EA0  6E13               	movwf	fputs@i^0,c
  3247  003EA2  EF5E  F01F         	goto	l4772
  3248  003EA6                     l4768:
  3249  003EA6  C012  F005         	movff	fputs@c,fputc@c
  3250  003EAA  6A06               	clrf	(fputc@c+1)^0,c
  3251  003EAC  C010  F007         	movff	fputs@fp,fputc@fp
  3252  003EB0  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3253  003EB4  EC69  F01C         	call	_fputc	;wreg free
  3254  003EB8  4A13               	infsnz	fputs@i^0,f,c
  3255  003EBA  2A14               	incf	(fputs@i+1)^0,f,c
  3256  003EBC                     l4772:
  3257  003EBC  5013               	movf	fputs@i^0,w,c
  3258  003EBE  240E               	addwf	fputs@s^0,w,c
  3259  003EC0  6ED9               	movwf	fsr2l,c
  3260  003EC2  5014               	movf	(fputs@i+1)^0,w,c
  3261  003EC4  200F               	addwfc	(fputs@s+1)^0,w,c
  3262  003EC6  6EDA               	movwf	fsr2h,c
  3263  003EC8  50DF               	movf	indf2,w,c
  3264  003ECA  6E12               	movwf	fputs@c^0,c
  3265  003ECC  5012               	movf	fputs@c^0,w,c
  3266  003ECE  A4D8               	btfss	status,2,c
  3267  003ED0  EF6C  F01F         	goto	u4871
  3268  003ED4  EF6E  F01F         	goto	u4870
  3269  003ED8                     u4871:
  3270  003ED8  EF53  F01F         	goto	l4768
  3271  003EDC                     u4870:
  3272  003EDC  0012               	return		;funcret
  3273  003EDE                     __end_of_fputs:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _fputc *****************
  3277 ;; Defined at:
  3278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  c               2    4[COMRAM] int 
  3281 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3282 ;;		 -> sprintf@f(6), 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    4[COMRAM] int 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;Total ram usage:        9 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 3
  3301 ;; This function calls:
  3302 ;;		_putch
  3303 ;; This function is called by:
  3304 ;;		_pad
  3305 ;;		_vfpfcnvrt
  3306 ;;		_fputs
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text8
  3311  0038D2                     __ptext8:
  3312                           	callstack 0
  3313  0038D2                     _fputc:
  3314                           	callstack 24
  3315  0038D2  5007               	movf	fputc@fp^0,w,c
  3316  0038D4  1008               	iorwf	(fputc@fp+1)^0,w,c
  3317  0038D6  B4D8               	btfsc	status,2,c
  3318  0038D8  EF70  F01C         	goto	u4831
  3319  0038DC  EF72  F01C         	goto	u4830
  3320  0038E0                     u4831:
  3321  0038E0  EF7B  F01C         	goto	l4756
  3322  0038E4                     u4830:
  3323  0038E4  5007               	movf	fputc@fp^0,w,c
  3324  0038E6  1008               	iorwf	(fputc@fp+1)^0,w,c
  3325  0038E8  A4D8               	btfss	status,2,c
  3326  0038EA  EF79  F01C         	goto	u4841
  3327  0038EE  EF7B  F01C         	goto	u4840
  3328  0038F2                     u4841:
  3329  0038F2  EF80  F01C         	goto	l4758
  3330  0038F6                     u4840:
  3331  0038F6                     l4756:
  3332  0038F6  5005               	movf	fputc@c^0,w,c
  3333  0038F8  EC31  F021         	call	_putch
  3334  0038FC  EFCD  F01C         	goto	l1268
  3335  003900                     l4758:
  3336  003900  EE20 F004          	lfsr	2,4
  3337  003904  5007               	movf	fputc@fp^0,w,c
  3338  003906  26D9               	addwf	fsr2l,f,c
  3339  003908  5008               	movf	(fputc@fp+1)^0,w,c
  3340  00390A  22DA               	addwfc	fsr2h,f,c
  3341  00390C  50DE               	movf	postinc2,w,c
  3342  00390E  10DE               	iorwf	postinc2,w,c
  3343  003910  B4D8               	btfsc	status,2,c
  3344  003912  EF8D  F01C         	goto	u4851
  3345  003916  EF8F  F01C         	goto	u4850
  3346  00391A                     u4851:
  3347  00391A  EFAA  F01C         	goto	l4762
  3348  00391E                     u4850:
  3349  00391E  EE20 F004          	lfsr	2,4
  3350  003922  5007               	movf	fputc@fp^0,w,c
  3351  003924  26D9               	addwf	fsr2l,f,c
  3352  003926  5008               	movf	(fputc@fp+1)^0,w,c
  3353  003928  22DA               	addwfc	fsr2h,f,c
  3354  00392A  EE10 F002          	lfsr	1,2
  3355  00392E  5007               	movf	fputc@fp^0,w,c
  3356  003930  26E1               	addwf	fsr1l,f,c
  3357  003932  5008               	movf	(fputc@fp+1)^0,w,c
  3358  003934  22E2               	addwfc	fsr1h,f,c
  3359  003936  50DE               	movf	postinc2,w,c
  3360  003938  5CE6               	subwf	postinc1,w,c
  3361  00393A  50E6               	movf	postinc1,w,c
  3362  00393C  0A80               	xorlw	128
  3363  00393E  6E0D               	movwf	(??_fputc+4)^0,c
  3364  003940  50DE               	movf	postinc2,w,c
  3365  003942  0A80               	xorlw	128
  3366  003944  580D               	subwfb	(??_fputc+4)^0,w,c
  3367  003946  B0D8               	btfsc	status,0,c
  3368  003948  EFA8  F01C         	goto	u4861
  3369  00394C  EFAA  F01C         	goto	u4860
  3370  003950                     u4861:
  3371  003950  EFCD  F01C         	goto	l1268
  3372  003954                     u4860:
  3373  003954                     l4762:
  3374  003954  EE20 F002          	lfsr	2,2
  3375  003958  5007               	movf	fputc@fp^0,w,c
  3376  00395A  26D9               	addwf	fsr2l,f,c
  3377  00395C  5008               	movf	(fputc@fp+1)^0,w,c
  3378  00395E  22DA               	addwfc	fsr2h,f,c
  3379  003960  CFDE F009          	movff	postinc2,??_fputc
  3380  003964  CFDD F00A          	movff	postdec2,??_fputc+1
  3381  003968  C007  FFD9         	movff	fputc@fp,fsr2l
  3382  00396C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3383  003970  CFDE F00B          	movff	postinc2,??_fputc+2
  3384  003974  CFDD F00C          	movff	postdec2,??_fputc+3
  3385  003978  5009               	movf	??_fputc^0,w,c
  3386  00397A  240B               	addwf	(??_fputc+2)^0,w,c
  3387  00397C  6ED9               	movwf	fsr2l,c
  3388  00397E  500A               	movf	(??_fputc+1)^0,w,c
  3389  003980  200C               	addwfc	(??_fputc+3)^0,w,c
  3390  003982  6EDA               	movwf	fsr2h,c
  3391  003984  C005  FFDF         	movff	fputc@c,indf2
  3392  003988  EE20 F002          	lfsr	2,2
  3393  00398C  5007               	movf	fputc@fp^0,w,c
  3394  00398E  26D9               	addwf	fsr2l,f,c
  3395  003990  5008               	movf	(fputc@fp+1)^0,w,c
  3396  003992  22DA               	addwfc	fsr2h,f,c
  3397  003994  2ADE               	incf	postinc2,f,c
  3398  003996  0E00               	movlw	0
  3399  003998  22DD               	addwfc	postdec2,f,c
  3400  00399A                     l1268:
  3401  00399A  0012               	return		;funcret
  3402  00399C                     __end_of_fputc:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _putch *****************
  3406 ;; Defined at:
  3407 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  c               1    wreg     unsigned char 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  c               1    0[COMRAM] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 2
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_fputc
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text9
  3436  004262                     __ptext9:
  3437                           	callstack 0
  3438  004262                     _putch:
  3439                           	callstack 24
  3440  004262  0012               	return		;funcret
  3441  004264                     __end_of_putch:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _abs *****************
  3445 ;; Defined at:
  3446 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  a               2   22[COMRAM] int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2   22[COMRAM] int 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;Total ram usage:        4 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 2
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_dtoa
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text10
  3475  003F62                     __ptext10:
  3476                           	callstack 0
  3477  003F62                     _abs:
  3478                           	callstack 24
  3479  003F62  BE18               	btfsc	(abs@a+1)^0,7,c
  3480  003F64  EFBE  F01F         	goto	u5060
  3481  003F68  5018               	movf	(abs@a+1)^0,w,c
  3482  003F6A  E106               	bnz	u5061
  3483  003F6C  0417               	decf	abs@a^0,w,c
  3484  003F6E  B0D8               	btfsc	status,0,c
  3485  003F70  EFBC  F01F         	goto	u5061
  3486  003F74  EFBE  F01F         	goto	u5060
  3487  003F78                     u5061:
  3488  003F78  EFCC  F01F         	goto	l1208
  3489  003F7C                     u5060:
  3490  003F7C  C017  F019         	movff	abs@a,??_abs
  3491  003F80  C018  F01A         	movff	abs@a+1,??_abs+1
  3492  003F84  1E19               	comf	??_abs^0,f,c
  3493  003F86  1E1A               	comf	(??_abs+1)^0,f,c
  3494  003F88  4A19               	infsnz	??_abs^0,f,c
  3495  003F8A  2A1A               	incf	(??_abs+1)^0,f,c
  3496  003F8C  C019  F017         	movff	??_abs,?_abs
  3497  003F90  C01A  F018         	movff	??_abs+1,?_abs+1
  3498  003F94  EFD0  F01F         	goto	l1211
  3499  003F98                     l1208:
  3500  003F98  C017  F017         	movff	abs@a,?_abs
  3501  003F9C  C018  F018         	movff	abs@a+1,?_abs+1
  3502  003FA0                     l1211:
  3503  003FA0  0012               	return		;funcret
  3504  003FA2                     __end_of_abs:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function ___aomod *****************
  3508 ;; Defined at:
  3509 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  dividend        8    4[COMRAM] long long 
  3512 ;;  divisor         8   12[COMRAM] long long 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  sign            1   21[COMRAM] unsigned char 
  3515 ;;  counter         1   20[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  8    4[COMRAM] long long 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3525 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;Total ram usage:       18 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 2
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_dtoa
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text11
  3540  003564                     __ptext11:
  3541                           	callstack 0
  3542  003564                     ___aomod:
  3543                           	callstack 24
  3544  003564  0E00               	movlw	0
  3545  003566  6E16               	movwf	___aomod@sign^0,c
  3546  003568  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3547  00356A  EFBB  F01A         	goto	u4960
  3548  00356E  EFB9  F01A         	goto	u4961
  3549  003572                     u4961:
  3550  003572  EFCD  F01A         	goto	l4842
  3551  003576                     u4960:
  3552  003576  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3553  003578  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3554  00357A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3555  00357C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3556  00357E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3557  003580  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3558  003582  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3559  003584  6C05               	negf	___aomod@dividend^0,c
  3560  003586  0E00               	movlw	0
  3561  003588  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3562  00358A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3563  00358C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3564  00358E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3565  003590  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3566  003592  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3567  003594  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3568  003596  0E01               	movlw	1
  3569  003598  6E16               	movwf	___aomod@sign^0,c
  3570  00359A                     l4842:
  3571  00359A  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3572  00359C  EFD4  F01A         	goto	u4970
  3573  0035A0  EFD2  F01A         	goto	u4971
  3574  0035A4                     u4971:
  3575  0035A4  EFE4  F01A         	goto	l4846
  3576  0035A8                     u4970:
  3577  0035A8  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3578  0035AA  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3579  0035AC  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3580  0035AE  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3581  0035B0  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3582  0035B2  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3583  0035B4  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3584  0035B6  6C0D               	negf	___aomod@divisor^0,c
  3585  0035B8  0E00               	movlw	0
  3586  0035BA  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3587  0035BC  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3588  0035BE  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3589  0035C0  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3590  0035C2  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3591  0035C4  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3592  0035C6  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3593  0035C8                     l4846:
  3594  0035C8  500D               	movf	___aomod@divisor^0,w,c
  3595  0035CA  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3596  0035CC  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3597  0035CE  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3598  0035D0  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3599  0035D2  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3600  0035D4  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3601  0035D6  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3602  0035D8  B4D8               	btfsc	status,2,c
  3603  0035DA  EFF1  F01A         	goto	u4981
  3604  0035DE  EFF3  F01A         	goto	u4980
  3605  0035E2                     u4981:
  3606  0035E2  EF3B  F01B         	goto	l4862
  3607  0035E6                     u4980:
  3608  0035E6  0E01               	movlw	1
  3609  0035E8  6E15               	movwf	___aomod@counter^0,c
  3610  0035EA  EF01  F01B         	goto	l4852
  3611  0035EE                     l4850:
  3612  0035EE  90D8               	bcf	status,0,c
  3613  0035F0  360D               	rlcf	___aomod@divisor^0,f,c
  3614  0035F2  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3615  0035F4  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3616  0035F6  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3617  0035F8  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3618  0035FA  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3619  0035FC  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3620  0035FE  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3621  003600  2A15               	incf	___aomod@counter^0,f,c
  3622  003602                     l4852:
  3623  003602  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3624  003604  EF06  F01B         	goto	u4991
  3625  003608  EF08  F01B         	goto	u4990
  3626  00360C                     u4991:
  3627  00360C  EFF7  F01A         	goto	l4850
  3628  003610                     u4990:
  3629  003610                     l4854:
  3630  003610  500D               	movf	___aomod@divisor^0,w,c
  3631  003612  5C05               	subwf	___aomod@dividend^0,w,c
  3632  003614  500E               	movf	(___aomod@divisor+1)^0,w,c
  3633  003616  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3634  003618  500F               	movf	(___aomod@divisor+2)^0,w,c
  3635  00361A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3636  00361C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3637  00361E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3638  003620  5011               	movf	(___aomod@divisor+4)^0,w,c
  3639  003622  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3640  003624  5012               	movf	(___aomod@divisor+5)^0,w,c
  3641  003626  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3642  003628  5013               	movf	(___aomod@divisor+6)^0,w,c
  3643  00362A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3644  00362C  5014               	movf	(___aomod@divisor+7)^0,w,c
  3645  00362E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3646  003630  A0D8               	btfss	status,0,c
  3647  003632  EF1D  F01B         	goto	u5001
  3648  003636  EF1F  F01B         	goto	u5000
  3649  00363A                     u5001:
  3650  00363A  EF2F  F01B         	goto	l4858
  3651  00363E                     u5000:
  3652  00363E  500D               	movf	___aomod@divisor^0,w,c
  3653  003640  5E05               	subwf	___aomod@dividend^0,f,c
  3654  003642  500E               	movf	(___aomod@divisor+1)^0,w,c
  3655  003644  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3656  003646  500F               	movf	(___aomod@divisor+2)^0,w,c
  3657  003648  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3658  00364A  5010               	movf	(___aomod@divisor+3)^0,w,c
  3659  00364C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3660  00364E  5011               	movf	(___aomod@divisor+4)^0,w,c
  3661  003650  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3662  003652  5012               	movf	(___aomod@divisor+5)^0,w,c
  3663  003654  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3664  003656  5013               	movf	(___aomod@divisor+6)^0,w,c
  3665  003658  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3666  00365A  5014               	movf	(___aomod@divisor+7)^0,w,c
  3667  00365C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3668  00365E                     l4858:
  3669  00365E  90D8               	bcf	status,0,c
  3670  003660  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3671  003662  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3672  003664  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3673  003666  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3674  003668  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3675  00366A  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3676  00366C  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3677  00366E  320D               	rrcf	___aomod@divisor^0,f,c
  3678  003670  2E15               	decfsz	___aomod@counter^0,f,c
  3679  003672  EF08  F01B         	goto	l4854
  3680  003676                     l4862:
  3681  003676  5016               	movf	___aomod@sign^0,w,c
  3682  003678  B4D8               	btfsc	status,2,c
  3683  00367A  EF41  F01B         	goto	u5011
  3684  00367E  EF43  F01B         	goto	u5010
  3685  003682                     u5011:
  3686  003682  EF53  F01B         	goto	l4866
  3687  003686                     u5010:
  3688  003686  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3689  003688  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3690  00368A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3691  00368C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3692  00368E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3693  003690  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3694  003692  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3695  003694  6C05               	negf	___aomod@dividend^0,c
  3696  003696  0E00               	movlw	0
  3697  003698  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3698  00369A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3699  00369C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3700  00369E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3701  0036A0  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3702  0036A2  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3703  0036A4  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3704  0036A6                     l4866:
  3705  0036A6  C005  F005         	movff	___aomod@dividend,?___aomod
  3706  0036AA  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3707  0036AE  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3708  0036B2  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3709  0036B6  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3710  0036BA  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3711  0036BE  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3712  0036C2  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3713  0036C6  0012               	return		;funcret
  3714  0036C8                     __end_of___aomod:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function ___aodiv *****************
  3718 ;; Defined at:
  3719 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  dividend        8    4[COMRAM] long long 
  3722 ;;  divisor         8   12[COMRAM] long long 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  quotient        8   22[COMRAM] long long 
  3725 ;;  sign            1   21[COMRAM] unsigned char 
  3726 ;;  counter         1   20[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  8    4[COMRAM] long long 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3736 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:       26 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 2
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_dtoa
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text12
  3751  0033DC                     __ptext12:
  3752                           	callstack 0
  3753  0033DC                     ___aodiv:
  3754                           	callstack 24
  3755  0033DC  0E00               	movlw	0
  3756  0033DE  6E16               	movwf	___aodiv@sign^0,c
  3757  0033E0  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3758  0033E2  EFF7  F019         	goto	u4890
  3759  0033E6  EFF5  F019         	goto	u4891
  3760  0033EA                     u4891:
  3761  0033EA  EF09  F01A         	goto	l4798
  3762  0033EE                     u4890:
  3763  0033EE  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3764  0033F0  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3765  0033F2  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3766  0033F4  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3767  0033F6  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3768  0033F8  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3769  0033FA  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3770  0033FC  6C0D               	negf	___aodiv@divisor^0,c
  3771  0033FE  0E00               	movlw	0
  3772  003400  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3773  003402  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3774  003404  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3775  003406  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3776  003408  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3777  00340A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3778  00340C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3779  00340E  0E01               	movlw	1
  3780  003410  6E16               	movwf	___aodiv@sign^0,c
  3781  003412                     l4798:
  3782  003412  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3783  003414  EF10  F01A         	goto	u4900
  3784  003418  EF0E  F01A         	goto	u4901
  3785  00341C                     u4901:
  3786  00341C  EF22  F01A         	goto	l4804
  3787  003420                     u4900:
  3788  003420  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3789  003422  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3790  003424  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3791  003426  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3792  003428  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3793  00342A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3794  00342C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3795  00342E  6C05               	negf	___aodiv@dividend^0,c
  3796  003430  0E00               	movlw	0
  3797  003432  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3798  003434  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3799  003436  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3800  003438  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3801  00343A  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3802  00343C  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3803  00343E  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3804  003440  0E01               	movlw	1
  3805  003442  1A16               	xorwf	___aodiv@sign^0,f,c
  3806  003444                     l4804:
  3807  003444  EE20  F017         	lfsr	2,___aodiv@quotient
  3808  003448  0E07               	movlw	7
  3809  00344A                     u4911:
  3810  00344A  6ADE               	clrf	postinc2,c
  3811  00344C  06E8               	decf	wreg,f,c
  3812  00344E  E2FD               	bc	u4911
  3813  003450  500D               	movf	___aodiv@divisor^0,w,c
  3814  003452  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3815  003454  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3816  003456  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3817  003458  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3818  00345A  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3819  00345C  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3820  00345E  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3821  003460  B4D8               	btfsc	status,2,c
  3822  003462  EF35  F01A         	goto	u4921
  3823  003466  EF37  F01A         	goto	u4920
  3824  00346A                     u4921:
  3825  00346A  EF89  F01A         	goto	l4826
  3826  00346E                     u4920:
  3827  00346E  0E01               	movlw	1
  3828  003470  6E15               	movwf	___aodiv@counter^0,c
  3829  003472  EF45  F01A         	goto	l4812
  3830  003476                     l4810:
  3831  003476  90D8               	bcf	status,0,c
  3832  003478  360D               	rlcf	___aodiv@divisor^0,f,c
  3833  00347A  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3834  00347C  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3835  00347E  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3836  003480  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3837  003482  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3838  003484  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3839  003486  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3840  003488  2A15               	incf	___aodiv@counter^0,f,c
  3841  00348A                     l4812:
  3842  00348A  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3843  00348C  EF4A  F01A         	goto	u4931
  3844  003490  EF4C  F01A         	goto	u4930
  3845  003494                     u4931:
  3846  003494  EF3B  F01A         	goto	l4810
  3847  003498                     u4930:
  3848  003498                     l4814:
  3849  003498  90D8               	bcf	status,0,c
  3850  00349A  3617               	rlcf	___aodiv@quotient^0,f,c
  3851  00349C  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3852  00349E  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3853  0034A0  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3854  0034A2  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3855  0034A4  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3856  0034A6  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3857  0034A8  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3858  0034AA  500D               	movf	___aodiv@divisor^0,w,c
  3859  0034AC  5C05               	subwf	___aodiv@dividend^0,w,c
  3860  0034AE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3861  0034B0  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3862  0034B2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3863  0034B4  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3864  0034B6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3865  0034B8  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3866  0034BA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3867  0034BC  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3868  0034BE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3869  0034C0  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3870  0034C2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3871  0034C4  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3872  0034C6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3873  0034C8  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3874  0034CA  A0D8               	btfss	status,0,c
  3875  0034CC  EF6A  F01A         	goto	u4941
  3876  0034D0  EF6C  F01A         	goto	u4940
  3877  0034D4                     u4941:
  3878  0034D4  EF7D  F01A         	goto	l4822
  3879  0034D8                     u4940:
  3880  0034D8  500D               	movf	___aodiv@divisor^0,w,c
  3881  0034DA  5E05               	subwf	___aodiv@dividend^0,f,c
  3882  0034DC  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3883  0034DE  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3884  0034E0  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3885  0034E2  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3886  0034E4  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3887  0034E6  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3888  0034E8  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3889  0034EA  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3890  0034EC  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3891  0034EE  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3892  0034F0  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3893  0034F2  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3894  0034F4  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3895  0034F6  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3896  0034F8  8017               	bsf	___aodiv@quotient^0,0,c
  3897  0034FA                     l4822:
  3898  0034FA  90D8               	bcf	status,0,c
  3899  0034FC  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3900  0034FE  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3901  003500  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3902  003502  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3903  003504  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3904  003506  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3905  003508  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3906  00350A  320D               	rrcf	___aodiv@divisor^0,f,c
  3907  00350C  2E15               	decfsz	___aodiv@counter^0,f,c
  3908  00350E  EF4C  F01A         	goto	l4814
  3909  003512                     l4826:
  3910  003512  5016               	movf	___aodiv@sign^0,w,c
  3911  003514  B4D8               	btfsc	status,2,c
  3912  003516  EF8F  F01A         	goto	u4951
  3913  00351A  EF91  F01A         	goto	u4950
  3914  00351E                     u4951:
  3915  00351E  EFA1  F01A         	goto	l4830
  3916  003522                     u4950:
  3917  003522  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3918  003524  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3919  003526  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3920  003528  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3921  00352A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3922  00352C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3923  00352E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3924  003530  6C17               	negf	___aodiv@quotient^0,c
  3925  003532  0E00               	movlw	0
  3926  003534  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3927  003536  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3928  003538  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3929  00353A  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3930  00353C  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3931  00353E  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3932  003540  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3933  003542                     l4830:
  3934  003542  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3935  003546  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3936  00354A  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3937  00354E  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3938  003552  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3939  003556  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3940  00355A  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3941  00355E  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3942  003562  0012               	return		;funcret
  3943  003564                     __end_of___aodiv:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _atoi *****************
  3947 ;; Defined at:
  3948 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3951 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  n               2   24[COMRAM] int 
  3954 ;;  neg             2   17[COMRAM] int 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  2   11[COMRAM] int 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;Total ram usage:       15 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 3
  3971 ;; This function calls:
  3972 ;;		___wmul
  3973 ;;		_isdigit
  3974 ;;		_isspace
  3975 ;; This function is called by:
  3976 ;;		_vfpfcnvrt
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text13
  3981  003238                     __ptext13:
  3982                           	callstack 0
  3983  003238                     _atoi:
  3984                           	callstack 24
  3985  003238  0E00               	movlw	0
  3986  00323A  6E1A               	movwf	(atoi@n+1)^0,c
  3987  00323C  0E00               	movlw	0
  3988  00323E  6E19               	movwf	atoi@n^0,c
  3989  003240  0E00               	movlw	0
  3990  003242  6E13               	movwf	(atoi@neg+1)^0,c
  3991  003244  0E00               	movlw	0
  3992  003246  6E12               	movwf	atoi@neg^0,c
  3993  003248  EF28  F019         	goto	l4982
  3994  00324C                     l4980:
  3995  00324C  4A0C               	infsnz	atoi@s^0,f,c
  3996  00324E  2A0D               	incf	(atoi@s+1)^0,f,c
  3997  003250                     l4982:
  3998  003250  0E01               	movlw	1
  3999  003252  6E18               	movwf	_atoi$2112^0,c
  4000  003254  C00C  FFF6         	movff	atoi@s,tblptrl
  4001  003258  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4002  00325C                     	if	0	;tblptru may be non-zero
  4003  00325C                     	endif
  4004  00325C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4005  00325C  0E00               	movlw	low (__mediumconst shr (0+16))
  4006  00325E  6EF8               	movwf	tblptru,c
  4007  003260                     	endif
  4008  003260  0008               	tblrd		*
  4009  003262  50F5               	movf	tablat,w,c
  4010  003264  0A20               	xorlw	32
  4011  003266  B4D8               	btfsc	status,2,c
  4012  003268  EF38  F019         	goto	u5281
  4013  00326C  EF3A  F019         	goto	u5280
  4014  003270                     u5281:
  4015  003270  EF59  F019         	goto	l4990
  4016  003274                     u5280:
  4017  003274  0EF7               	movlw	247
  4018  003276  6E0E               	movwf	??_atoi^0,c
  4019  003278  0EFF               	movlw	255
  4020  00327A  6E0F               	movwf	(??_atoi+1)^0,c
  4021  00327C  C00C  FFF6         	movff	atoi@s,tblptrl
  4022  003280  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4023  003284                     	if	0	;tblptru may be non-zero
  4024  003284                     	endif
  4025  003284                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4026  003284  0E00               	movlw	low (__mediumconst shr (0+16))
  4027  003286  6EF8               	movwf	tblptru,c
  4028  003288                     	endif
  4029  003288  0008               	tblrd		*
  4030  00328A  50F5               	movf	tablat,w,c
  4031  00328C  6E10               	movwf	(??_atoi+2)^0,c
  4032  00328E  6A11               	clrf	(??_atoi+3)^0,c
  4033  003290  500E               	movf	??_atoi^0,w,c
  4034  003292  2610               	addwf	(??_atoi+2)^0,f,c
  4035  003294  500F               	movf	(??_atoi+1)^0,w,c
  4036  003296  2211               	addwfc	(??_atoi+3)^0,f,c
  4037  003298  5011               	movf	(??_atoi+3)^0,w,c
  4038  00329A  E109               	bnz	u5290
  4039  00329C  0E05               	movlw	5
  4040  00329E  5C10               	subwf	(??_atoi+2)^0,w,c
  4041  0032A0  A0D8               	btfss	status,0,c
  4042  0032A2  EF55  F019         	goto	u5291
  4043  0032A6  EF57  F019         	goto	u5290
  4044  0032AA                     u5291:
  4045  0032AA  EF59  F019         	goto	l4990
  4046  0032AE                     u5290:
  4047  0032AE  0E00               	movlw	0
  4048  0032B0  6E18               	movwf	_atoi$2112^0,c
  4049  0032B2                     l4990:
  4050  0032B2  C018  F014         	movff	_atoi$2112,_atoi$2111
  4051  0032B6  6A15               	clrf	(_atoi$2111+1)^0,c
  4052  0032B8  5014               	movf	_atoi$2111^0,w,c
  4053  0032BA  1015               	iorwf	(_atoi$2111+1)^0,w,c
  4054  0032BC  A4D8               	btfss	status,2,c
  4055  0032BE  EF63  F019         	goto	u5301
  4056  0032C2  EF65  F019         	goto	u5300
  4057  0032C6                     u5301:
  4058  0032C6  EF26  F019         	goto	l4980
  4059  0032CA                     u5300:
  4060  0032CA  EF6F  F019         	goto	l5000
  4061  0032CE                     l4996:
  4062  0032CE  0E00               	movlw	0
  4063  0032D0  6E13               	movwf	(atoi@neg+1)^0,c
  4064  0032D2  0E01               	movlw	1
  4065  0032D4  6E12               	movwf	atoi@neg^0,c
  4066  0032D6                     l4998:
  4067  0032D6  4A0C               	infsnz	atoi@s^0,f,c
  4068  0032D8  2A0D               	incf	(atoi@s+1)^0,f,c
  4069  0032DA  EFA8  F019         	goto	l5006
  4070  0032DE                     l5000:
  4071  0032DE  C00C  FFF6         	movff	atoi@s,tblptrl
  4072  0032E2  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4073  0032E6                     	if	0	;tblptru may be non-zero
  4074  0032E6                     	endif
  4075  0032E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4076  0032E6  0E00               	movlw	low (__mediumconst shr (0+16))
  4077  0032E8  6EF8               	movwf	tblptru,c
  4078  0032EA                     	endif
  4079  0032EA  0008               	tblrd		*
  4080  0032EC  50F5               	movf	tablat,w,c
  4081  0032EE  6E0E               	movwf	??_atoi^0,c
  4082  0032F0  6A0F               	clrf	(??_atoi+1)^0,c
  4083                           
  4084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4085                           ; Switch size 1, requested type "simple"
  4086                           ; Number of cases is 1, Range of values is 0 to 0
  4087                           ; switch strategies available:
  4088                           ; Name         Instructions Cycles
  4089                           ; simple_byte            4     3 (average)
  4090                           ;	Chosen strategy is simple_byte
  4091  0032F2  500F               	movf	(??_atoi+1)^0,w,c
  4092  0032F4  0A00               	xorlw	0	; case 0
  4093  0032F6  B4D8               	btfsc	status,2,c
  4094  0032F8  EF80  F019         	goto	l6458
  4095  0032FC  EFA8  F019         	goto	l5006
  4096  003300                     l6458:
  4097                           
  4098                           ; Switch size 1, requested type "simple"
  4099                           ; Number of cases is 2, Range of values is 43 to 45
  4100                           ; switch strategies available:
  4101                           ; Name         Instructions Cycles
  4102                           ; simple_byte            7     4 (average)
  4103                           ;	Chosen strategy is simple_byte
  4104  003300  500E               	movf	??_atoi^0,w,c
  4105  003302  0A2B               	xorlw	43	; case 43
  4106  003304  B4D8               	btfsc	status,2,c
  4107  003306  EF6B  F019         	goto	l4998
  4108  00330A  0A06               	xorlw	6	; case 45
  4109  00330C  B4D8               	btfsc	status,2,c
  4110  00330E  EF67  F019         	goto	l4996
  4111  003312  EFA8  F019         	goto	l5006
  4112  003316                     l5002:
  4113  003316  C019  F005         	movff	atoi@n,___wmul@multiplier
  4114  00331A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4115  00331E  0E00               	movlw	0
  4116  003320  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4117  003322  0E0A               	movlw	10
  4118  003324  6E07               	movwf	___wmul@multiplicand^0,c
  4119  003326  ECBE  F020         	call	___wmul	;wreg free
  4120  00332A  C00C  FFF6         	movff	atoi@s,tblptrl
  4121  00332E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4122  003332                     	if	0	;tblptru may be non-zero
  4123  003332                     	endif
  4124  003332                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4125  003332  0E00               	movlw	low (__mediumconst shr (0+16))
  4126  003334  6EF8               	movwf	tblptru,c
  4127  003336                     	endif
  4128  003336  0008               	tblrd		*
  4129  003338  50F5               	movf	tablat,w,c
  4130  00333A  5E05               	subwf	?___wmul^0,f,c
  4131  00333C  0E00               	movlw	0
  4132  00333E  5A06               	subwfb	(?___wmul+1)^0,f,c
  4133  003340  0E30               	movlw	48
  4134  003342  2405               	addwf	?___wmul^0,w,c
  4135  003344  6E19               	movwf	atoi@n^0,c
  4136  003346  0E00               	movlw	0
  4137  003348  2006               	addwfc	(?___wmul+1)^0,w,c
  4138  00334A  6E1A               	movwf	(atoi@n+1)^0,c
  4139  00334C  EF6B  F019         	goto	l4998
  4140  003350                     l5006:
  4141  003350  0ED0               	movlw	208
  4142  003352  6E0E               	movwf	??_atoi^0,c
  4143  003354  0EFF               	movlw	255
  4144  003356  6E0F               	movwf	(??_atoi+1)^0,c
  4145  003358  C00C  FFF6         	movff	atoi@s,tblptrl
  4146  00335C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4147  003360                     	if	0	;tblptru may be non-zero
  4148  003360                     	endif
  4149  003360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4150  003360  0E00               	movlw	low (__mediumconst shr (0+16))
  4151  003362  6EF8               	movwf	tblptru,c
  4152  003364                     	endif
  4153  003364  0008               	tblrd		*
  4154  003366  50F5               	movf	tablat,w,c
  4155  003368  6E10               	movwf	(??_atoi+2)^0,c
  4156  00336A  6A11               	clrf	(??_atoi+3)^0,c
  4157  00336C  500E               	movf	??_atoi^0,w,c
  4158  00336E  2610               	addwf	(??_atoi+2)^0,f,c
  4159  003370  500F               	movf	(??_atoi+1)^0,w,c
  4160  003372  2211               	addwfc	(??_atoi+3)^0,f,c
  4161  003374  5011               	movf	(??_atoi+3)^0,w,c
  4162  003376  E10A               	bnz	u5310
  4163  003378  0E0A               	movlw	10
  4164  00337A  5C10               	subwf	(??_atoi+2)^0,w,c
  4165  00337C  A0D8               	btfss	status,0,c
  4166  00337E  EFC3  F019         	goto	u5311
  4167  003382  EFC6  F019         	goto	u5310
  4168  003386                     u5311:
  4169  003386  0E01               	movlw	1
  4170  003388  EFC7  F019         	goto	u5320
  4171  00338C                     u5310:
  4172  00338C  0E00               	movlw	0
  4173  00338E                     u5320:
  4174  00338E  6E16               	movwf	_atoi$2113^0,c
  4175  003390  6A17               	clrf	(_atoi$2113+1)^0,c
  4176  003392  5016               	movf	_atoi$2113^0,w,c
  4177  003394  1017               	iorwf	(_atoi$2113+1)^0,w,c
  4178  003396  A4D8               	btfss	status,2,c
  4179  003398  EFD0  F019         	goto	u5331
  4180  00339C  EFD2  F019         	goto	u5330
  4181  0033A0                     u5331:
  4182  0033A0  EF8B  F019         	goto	l5002
  4183  0033A4                     u5330:
  4184  0033A4  5012               	movf	atoi@neg^0,w,c
  4185  0033A6  1013               	iorwf	(atoi@neg+1)^0,w,c
  4186  0033A8  A4D8               	btfss	status,2,c
  4187  0033AA  EFD9  F019         	goto	u5341
  4188  0033AE  EFDB  F019         	goto	u5340
  4189  0033B2                     u5341:
  4190  0033B2  EFE9  F019         	goto	l1239
  4191  0033B6                     u5340:
  4192  0033B6  C019  F00E         	movff	atoi@n,??_atoi
  4193  0033BA  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  4194  0033BE  1E0E               	comf	??_atoi^0,f,c
  4195  0033C0  1E0F               	comf	(??_atoi+1)^0,f,c
  4196  0033C2  4A0E               	infsnz	??_atoi^0,f,c
  4197  0033C4  2A0F               	incf	(??_atoi+1)^0,f,c
  4198  0033C6  C00E  F00C         	movff	??_atoi,?_atoi
  4199  0033CA  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4200  0033CE  EFED  F019         	goto	l1242
  4201  0033D2                     l1239:
  4202  0033D2  C019  F00C         	movff	atoi@n,?_atoi
  4203  0033D6  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  4204  0033DA                     l1242:
  4205  0033DA  0012               	return		;funcret
  4206  0033DC                     __end_of_atoi:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _isspace *****************
  4210 ;; Defined at:
  4211 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  c               2    4[COMRAM] int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    4[COMRAM] int 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4229 ;;Total ram usage:        7 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 2
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_atoi
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text14
  4240  003CC2                     __ptext14:
  4241                           	callstack 0
  4242  003CC2                     _isspace:
  4243                           	callstack 24
  4244  003CC2  0E01               	movlw	1
  4245  003CC4  6E0B               	movwf	_isspace$2129^0,c
  4246  003CC6  0E20               	movlw	32
  4247  003CC8  1805               	xorwf	isspace@c^0,w,c
  4248  003CCA  1006               	iorwf	(isspace@c+1)^0,w,c
  4249  003CCC  B4D8               	btfsc	status,2,c
  4250  003CCE  EF6B  F01E         	goto	u5091
  4251  003CD2  EF6D  F01E         	goto	u5090
  4252  003CD6                     u5091:
  4253  003CD6  EF86  F01E         	goto	l4908
  4254  003CDA                     u5090:
  4255  003CDA  0EF7               	movlw	247
  4256  003CDC  6E07               	movwf	??_isspace^0,c
  4257  003CDE  0EFF               	movlw	255
  4258  003CE0  6E08               	movwf	(??_isspace+1)^0,c
  4259  003CE2  C005  F009         	movff	isspace@c,??_isspace+2
  4260  003CE6  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4261  003CEA  5007               	movf	??_isspace^0,w,c
  4262  003CEC  2609               	addwf	(??_isspace+2)^0,f,c
  4263  003CEE  5008               	movf	(??_isspace+1)^0,w,c
  4264  003CF0  220A               	addwfc	(??_isspace+3)^0,f,c
  4265  003CF2  500A               	movf	(??_isspace+3)^0,w,c
  4266  003CF4  E109               	bnz	u5100
  4267  003CF6  0E05               	movlw	5
  4268  003CF8  5C09               	subwf	(??_isspace+2)^0,w,c
  4269  003CFA  A0D8               	btfss	status,0,c
  4270  003CFC  EF82  F01E         	goto	u5101
  4271  003D00  EF84  F01E         	goto	u5100
  4272  003D04                     u5101:
  4273  003D04  EF86  F01E         	goto	l4908
  4274  003D08                     u5100:
  4275  003D08  0E00               	movlw	0
  4276  003D0A  6E0B               	movwf	_isspace$2129^0,c
  4277  003D0C                     l4908:
  4278  003D0C  C00B  F005         	movff	_isspace$2129,?_isspace
  4279  003D10  6A06               	clrf	(?_isspace+1)^0,c
  4280  003D12  0012               	return		;funcret
  4281  003D14                     __end_of_isspace:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _isdigit *****************
  4285 ;; Defined at:
  4286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  c               2    4[COMRAM] int 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2    4[COMRAM] int 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;Total ram usage:        6 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 2
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_vfpfcnvrt
  4311 ;;		_atoi
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text15
  4316  003FA2                     __ptext15:
  4317                           	callstack 0
  4318  003FA2                     _isdigit:
  4319                           	callstack 25
  4320  003FA2  0ED0               	movlw	208
  4321  003FA4  6E07               	movwf	??_isdigit^0,c
  4322  003FA6  0EFF               	movlw	255
  4323  003FA8  6E08               	movwf	(??_isdigit+1)^0,c
  4324  003FAA  C005  F009         	movff	isdigit@c,??_isdigit+2
  4325  003FAE  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4326  003FB2  5007               	movf	??_isdigit^0,w,c
  4327  003FB4  2609               	addwf	(??_isdigit+2)^0,f,c
  4328  003FB6  5008               	movf	(??_isdigit+1)^0,w,c
  4329  003FB8  220A               	addwfc	(??_isdigit+3)^0,f,c
  4330  003FBA  500A               	movf	(??_isdigit+3)^0,w,c
  4331  003FBC  E10A               	bnz	u5070
  4332  003FBE  0E0A               	movlw	10
  4333  003FC0  5C09               	subwf	(??_isdigit+2)^0,w,c
  4334  003FC2  A0D8               	btfss	status,0,c
  4335  003FC4  EFE6  F01F         	goto	u5071
  4336  003FC8  EFE9  F01F         	goto	u5070
  4337  003FCC                     u5071:
  4338  003FCC  0E01               	movlw	1
  4339  003FCE  EFEA  F01F         	goto	u5080
  4340  003FD2                     u5070:
  4341  003FD2  0E00               	movlw	0
  4342  003FD4                     u5080:
  4343  003FD4  6E05               	movwf	?_isdigit^0,c
  4344  003FD6  6A06               	clrf	(?_isdigit+1)^0,c
  4345  003FD8  0012               	return		;funcret
  4346  003FDA                     __end_of_isdigit:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function ___wmul *****************
  4350 ;; Defined at:
  4351 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  multiplier      2    4[COMRAM] unsigned int 
  4354 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  product         2    8[COMRAM] unsigned int 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  2    4[COMRAM] unsigned int 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, prodl, prodh
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;Total ram usage:        6 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 2
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;;		_atoi
  4378 ;;		_determine_color1
  4379 ;;		_determine_color2
  4380 ;;		_determine_color3
  4381 ;;		_setMotorPWM
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text16
  4386  00417C                     __ptext16:
  4387                           	callstack 0
  4388  00417C                     ___wmul:
  4389                           	callstack 24
  4390  00417C  5005               	movf	___wmul@multiplier^0,w,c
  4391  00417E  0207               	mulwf	___wmul@multiplicand^0,c
  4392  004180  CFF3 F009          	movff	prodl,___wmul@product
  4393  004184  CFF4 F00A          	movff	prodh,___wmul@product+1
  4394  004188  5005               	movf	___wmul@multiplier^0,w,c
  4395  00418A  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4396  00418C  50F3               	movf	243,w,c
  4397  00418E  260A               	addwf	(___wmul@product+1)^0,f,c
  4398  004190  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4399  004192  0207               	mulwf	___wmul@multiplicand^0,c
  4400  004194  50F3               	movf	243,w,c
  4401  004196  260A               	addwf	(___wmul@product+1)^0,f,c
  4402  004198  C009  F005         	movff	___wmul@product,?___wmul
  4403  00419C  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4404  0041A0  0012               	return		;funcret
  4405  0041A2                     __end_of___wmul:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _sendTxBuf *****************
  4409 ;; Defined at:
  4410 ;;		line 106 in file "serial.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;Total ram usage:        0 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 3
  4431 ;; This function calls:
  4432 ;;		_isDataInTxBuf
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text17
  4439  0041E2                     __ptext17:
  4440                           	callstack 0
  4441  0041E2                     _sendTxBuf:
  4442                           	callstack 27
  4443  0041E2                     
  4444                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  4445  0041E2  ECFE  F020         	call	_isDataInTxBuf	;wreg free
  4446  0041E6  0900               	iorlw	0
  4447  0041E8  B4D8               	btfsc	status,2,c
  4448  0041EA  EFF9  F020         	goto	u6651
  4449  0041EE  EFFB  F020         	goto	u6650
  4450  0041F2                     u6651:
  4451  0041F2  EFFD  F020         	goto	l385
  4452  0041F6                     u6650:
  4453  0041F6  010E               	movlb	14	; () banked
  4454  0041F8  852D               	bsf	45,2,b	;volatile
  4455  0041FA                     l385:
  4456  0041FA  0012               	return		;funcret
  4457  0041FC                     __end_of_sendTxBuf:
  4458                           	callstack 0
  4459                           
  4460 ;; *************** function _isDataInTxBuf *****************
  4461 ;; Defined at:
  4462 ;;		line 93 in file "serial.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      unsigned char 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 2
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_sendTxBuf
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text18
  4491  0041FC                     __ptext18:
  4492                           	callstack 0
  4493  0041FC                     _isDataInTxBuf:
  4494                           	callstack 27
  4495  0041FC                     
  4496                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  4497  0041FC  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  4498  0041FE  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4499  004200  A4D8               	btfss	status,2,c
  4500  004202  EF05  F021         	goto	u5611
  4501  004206  EF08  F021         	goto	u5610
  4502  00420A                     u5611:
  4503  00420A  0E01               	movlw	1
  4504  00420C  EF09  F021         	goto	u5620
  4505  004210                     u5610:
  4506  004210  0E00               	movlw	0
  4507  004212                     u5620:
  4508  004212  0012               	return		;funcret
  4509  004214                     __end_of_isDataInTxBuf:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _read_colours *****************
  4513 ;; Defined at:
  4514 ;;		line 84 in file "color.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  m               2   15[COMRAM] PTR struct RGB_val
  4517 ;;		 -> main@test(8), 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;Total ram usage:        2 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; Hardware stack levels required when called: 5
  4536 ;; This function calls:
  4537 ;;		_color_read_Blue
  4538 ;;		_color_read_Clear
  4539 ;;		_color_read_Green
  4540 ;;		_color_read_Red
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text19
  4547  003C12                     __ptext19:
  4548                           	callstack 0
  4549  003C12                     _read_colours:
  4550                           	callstack 25
  4551  003C12                     
  4552                           ;color.c: 85:     (m->C) = color_read_Clear();
  4553  003C12  ECDA  F01E         	call	_color_read_Clear	;wreg free
  4554  003C16  C010  FFD9         	movff	read_colours@m,fsr2l
  4555  003C1A  C011  FFDA         	movff	read_colours@m+1,fsr2h
  4556  003C1E  C009  FFDE         	movff	?_color_read_Clear,postinc2
  4557  003C22  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  4558                           
  4559                           ;color.c: 86:     (m->R) = color_read_Red();
  4560  003C26  EC8A  F01E         	call	_color_read_Red	;wreg free
  4561  003C2A  EE20 F002          	lfsr	2,2
  4562  003C2E  5010               	movf	read_colours@m^0,w,c
  4563  003C30  26D9               	addwf	fsr2l,f,c
  4564  003C32  5011               	movf	(read_colours@m+1)^0,w,c
  4565  003C34  22DA               	addwfc	fsr2h,f,c
  4566  003C36  C009  FFDE         	movff	?_color_read_Red,postinc2
  4567  003C3A  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  4568                           
  4569                           ;color.c: 87:     (m->G) = color_read_Green();
  4570  003C3E  ECB2  F01E         	call	_color_read_Green	;wreg free
  4571  003C42  EE20 F004          	lfsr	2,4
  4572  003C46  5010               	movf	read_colours@m^0,w,c
  4573  003C48  26D9               	addwf	fsr2l,f,c
  4574  003C4A  5011               	movf	(read_colours@m+1)^0,w,c
  4575  003C4C  22DA               	addwfc	fsr2h,f,c
  4576  003C4E  C009  FFDE         	movff	?_color_read_Green,postinc2
  4577  003C52  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  4578                           
  4579                           ;color.c: 88:     (m->B) = color_read_Blue();
  4580  003C56  EC02  F01F         	call	_color_read_Blue	;wreg free
  4581  003C5A  EE20 F006          	lfsr	2,6
  4582  003C5E  5010               	movf	read_colours@m^0,w,c
  4583  003C60  26D9               	addwf	fsr2l,f,c
  4584  003C62  5011               	movf	(read_colours@m+1)^0,w,c
  4585  003C64  22DA               	addwfc	fsr2h,f,c
  4586  003C66  C009  FFDE         	movff	?_color_read_Blue,postinc2
  4587  003C6A  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  4588  003C6E  0012               	return		;funcret
  4589  003C70                     __end_of_read_colours:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _color_read_Red *****************
  4593 ;; Defined at:
  4594 ;;		line 44 in file "color.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  tmp             2   13[COMRAM] unsigned int 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2    8[COMRAM] unsigned int 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;Total ram usage:        7 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 4
  4615 ;; This function calls:
  4616 ;;		_I2C_2_Master_Read
  4617 ;;		_I2C_2_Master_RepStart
  4618 ;;		_I2C_2_Master_Start
  4619 ;;		_I2C_2_Master_Stop
  4620 ;;		_I2C_2_Master_Write
  4621 ;; This function is called by:
  4622 ;;		_read_colours
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text20
  4627  003D14                     __ptext20:
  4628                           	callstack 0
  4629  003D14                     _color_read_Red:
  4630                           	callstack 25
  4631  003D14                     
  4632                           ;color.c: 46:  unsigned int tmp;;color.c: 47:  I2C_2_Master_Start();
  4633  003D14  EC2C  F021         	call	_I2C_2_Master_Start	;wreg free
  4634                           
  4635                           ;color.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  4636  003D18  0E52               	movlw	82
  4637  003D1A  EC16  F021         	call	_I2C_2_Master_Write
  4638                           
  4639                           ;color.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  4640  003D1E  0EB6               	movlw	182
  4641  003D20  EC16  F021         	call	_I2C_2_Master_Write
  4642                           
  4643                           ;color.c: 50:  I2C_2_Master_RepStart();
  4644  003D24  EC22  F021         	call	_I2C_2_Master_RepStart	;wreg free
  4645                           
  4646                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  4647  003D28  0E53               	movlw	83
  4648  003D2A  EC16  F021         	call	_I2C_2_Master_Write
  4649                           
  4650                           ;color.c: 52:  tmp=I2C_2_Master_Read(1);
  4651  003D2E  0E01               	movlw	1
  4652  003D30  EC6F  F01F         	call	_I2C_2_Master_Read
  4653  003D34  6E0B               	movwf	??_color_read_Red^0,c
  4654  003D36  500B               	movf	??_color_read_Red^0,w,c
  4655  003D38  6E0E               	movwf	color_read_Red@tmp^0,c
  4656  003D3A  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  4657                           
  4658                           ;color.c: 53:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4659  003D3C  0E00               	movlw	0
  4660  003D3E  EC6F  F01F         	call	_I2C_2_Master_Read
  4661  003D42  6E0B               	movwf	??_color_read_Red^0,c
  4662  003D44  500B               	movf	??_color_read_Red^0,w,c
  4663  003D46  6E0D               	movwf	(??_color_read_Red+2)^0,c
  4664  003D48  6A0C               	clrf	(??_color_read_Red+1)^0,c
  4665  003D4A  500E               	movf	color_read_Red@tmp^0,w,c
  4666  003D4C  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  4667  003D4E  6E0E               	movwf	color_read_Red@tmp^0,c
  4668  003D50  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  4669  003D52  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  4670  003D54  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  4671                           
  4672                           ;color.c: 54:  I2C_2_Master_Stop();
  4673  003D56  EC27  F021         	call	_I2C_2_Master_Stop	;wreg free
  4674  003D5A                     
  4675                           ;color.c: 55:  return tmp;
  4676  003D5A  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  4677  003D5E  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4678  003D62  0012               	return		;funcret
  4679  003D64                     __end_of_color_read_Red:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _color_read_Green *****************
  4683 ;; Defined at:
  4684 ;;		line 58 in file "color.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  tmp             2   13[COMRAM] unsigned int 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  2    8[COMRAM] unsigned int 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4700 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4702 ;;Total ram usage:        7 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 4
  4705 ;; This function calls:
  4706 ;;		_I2C_2_Master_Read
  4707 ;;		_I2C_2_Master_RepStart
  4708 ;;		_I2C_2_Master_Start
  4709 ;;		_I2C_2_Master_Stop
  4710 ;;		_I2C_2_Master_Write
  4711 ;; This function is called by:
  4712 ;;		_read_colours
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text21
  4717  003D64                     __ptext21:
  4718                           	callstack 0
  4719  003D64                     _color_read_Green:
  4720                           	callstack 25
  4721  003D64                     
  4722                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  4723  003D64  EC2C  F021         	call	_I2C_2_Master_Start	;wreg free
  4724                           
  4725                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  4726  003D68  0E52               	movlw	82
  4727  003D6A  EC16  F021         	call	_I2C_2_Master_Write
  4728                           
  4729                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x18);
  4730  003D6E  0EB8               	movlw	184
  4731  003D70  EC16  F021         	call	_I2C_2_Master_Write
  4732                           
  4733                           ;color.c: 63:  I2C_2_Master_RepStart();
  4734  003D74  EC22  F021         	call	_I2C_2_Master_RepStart	;wreg free
  4735                           
  4736                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  4737  003D78  0E53               	movlw	83
  4738  003D7A  EC16  F021         	call	_I2C_2_Master_Write
  4739                           
  4740                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  4741  003D7E  0E01               	movlw	1
  4742  003D80  EC6F  F01F         	call	_I2C_2_Master_Read
  4743  003D84  6E0B               	movwf	??_color_read_Green^0,c
  4744  003D86  500B               	movf	??_color_read_Green^0,w,c
  4745  003D88  6E0E               	movwf	color_read_Green@tmp^0,c
  4746  003D8A  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  4747                           
  4748                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4749  003D8C  0E00               	movlw	0
  4750  003D8E  EC6F  F01F         	call	_I2C_2_Master_Read
  4751  003D92  6E0B               	movwf	??_color_read_Green^0,c
  4752  003D94  500B               	movf	??_color_read_Green^0,w,c
  4753  003D96  6E0D               	movwf	(??_color_read_Green+2)^0,c
  4754  003D98  6A0C               	clrf	(??_color_read_Green+1)^0,c
  4755  003D9A  500E               	movf	color_read_Green@tmp^0,w,c
  4756  003D9C  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  4757  003D9E  6E0E               	movwf	color_read_Green@tmp^0,c
  4758  003DA0  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  4759  003DA2  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  4760  003DA4  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  4761                           
  4762                           ;color.c: 67:     I2C_2_Master_Stop();
  4763  003DA6  EC27  F021         	call	_I2C_2_Master_Stop	;wreg free
  4764  003DAA                     
  4765                           ;color.c: 68:     return tmp;
  4766  003DAA  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  4767  003DAE  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4768  003DB2  0012               	return		;funcret
  4769  003DB4                     __end_of_color_read_Green:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function _color_read_Clear *****************
  4773 ;; Defined at:
  4774 ;;		line 31 in file "color.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  tmp             2   13[COMRAM] unsigned int 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  2    8[COMRAM] unsigned int 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;Total ram usage:        7 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; Hardware stack levels required when called: 4
  4795 ;; This function calls:
  4796 ;;		_I2C_2_Master_Read
  4797 ;;		_I2C_2_Master_RepStart
  4798 ;;		_I2C_2_Master_Start
  4799 ;;		_I2C_2_Master_Stop
  4800 ;;		_I2C_2_Master_Write
  4801 ;; This function is called by:
  4802 ;;		_read_colours
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text22
  4807  003DB4                     __ptext22:
  4808                           	callstack 0
  4809  003DB4                     _color_read_Clear:
  4810                           	callstack 25
  4811  003DB4                     
  4812                           ;color.c: 32:     unsigned int tmp;;color.c: 33:     I2C_2_Master_Start();
  4813  003DB4  EC2C  F021         	call	_I2C_2_Master_Start	;wreg free
  4814                           
  4815                           ;color.c: 34:     I2C_2_Master_Write(0x52 | 0x00);
  4816  003DB8  0E52               	movlw	82
  4817  003DBA  EC16  F021         	call	_I2C_2_Master_Write
  4818                           
  4819                           ;color.c: 35:  I2C_2_Master_Write(0xA0 | 0x14);
  4820  003DBE  0EB4               	movlw	180
  4821  003DC0  EC16  F021         	call	_I2C_2_Master_Write
  4822                           
  4823                           ;color.c: 36:  I2C_2_Master_RepStart();
  4824  003DC4  EC22  F021         	call	_I2C_2_Master_RepStart	;wreg free
  4825                           
  4826                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x01);
  4827  003DC8  0E53               	movlw	83
  4828  003DCA  EC16  F021         	call	_I2C_2_Master_Write
  4829                           
  4830                           ;color.c: 38:  tmp=I2C_2_Master_Read(1);
  4831  003DCE  0E01               	movlw	1
  4832  003DD0  EC6F  F01F         	call	_I2C_2_Master_Read
  4833  003DD4  6E0B               	movwf	??_color_read_Clear^0,c
  4834  003DD6  500B               	movf	??_color_read_Clear^0,w,c
  4835  003DD8  6E0E               	movwf	color_read_Clear@tmp^0,c
  4836  003DDA  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  4837                           
  4838                           ;color.c: 39:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4839  003DDC  0E00               	movlw	0
  4840  003DDE  EC6F  F01F         	call	_I2C_2_Master_Read
  4841  003DE2  6E0B               	movwf	??_color_read_Clear^0,c
  4842  003DE4  500B               	movf	??_color_read_Clear^0,w,c
  4843  003DE6  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  4844  003DE8  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  4845  003DEA  500E               	movf	color_read_Clear@tmp^0,w,c
  4846  003DEC  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  4847  003DEE  6E0E               	movwf	color_read_Clear@tmp^0,c
  4848  003DF0  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  4849  003DF2  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  4850  003DF4  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  4851                           
  4852                           ;color.c: 40:     I2C_2_Master_Stop();
  4853  003DF6  EC27  F021         	call	_I2C_2_Master_Stop	;wreg free
  4854  003DFA                     
  4855                           ;color.c: 41:     return tmp;
  4856  003DFA  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  4857  003DFE  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4858  003E02  0012               	return		;funcret
  4859  003E04                     __end_of_color_read_Clear:
  4860                           	callstack 0
  4861                           
  4862 ;; *************** function _color_read_Blue *****************
  4863 ;; Defined at:
  4864 ;;		line 71 in file "color.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  tmp             2   13[COMRAM] unsigned int 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  2    8[COMRAM] unsigned int 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;Total ram usage:        7 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 4
  4885 ;; This function calls:
  4886 ;;		_I2C_2_Master_Read
  4887 ;;		_I2C_2_Master_RepStart
  4888 ;;		_I2C_2_Master_Start
  4889 ;;		_I2C_2_Master_Stop
  4890 ;;		_I2C_2_Master_Write
  4891 ;; This function is called by:
  4892 ;;		_read_colours
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text23
  4897  003E04                     __ptext23:
  4898                           	callstack 0
  4899  003E04                     _color_read_Blue:
  4900                           	callstack 25
  4901  003E04                     
  4902                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  4903  003E04  EC2C  F021         	call	_I2C_2_Master_Start	;wreg free
  4904                           
  4905                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  4906  003E08  0E52               	movlw	82
  4907  003E0A  EC16  F021         	call	_I2C_2_Master_Write
  4908                           
  4909                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x1A);
  4910  003E0E  0EBA               	movlw	186
  4911  003E10  EC16  F021         	call	_I2C_2_Master_Write
  4912                           
  4913                           ;color.c: 76:  I2C_2_Master_RepStart();
  4914  003E14  EC22  F021         	call	_I2C_2_Master_RepStart	;wreg free
  4915                           
  4916                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  4917  003E18  0E53               	movlw	83
  4918  003E1A  EC16  F021         	call	_I2C_2_Master_Write
  4919                           
  4920                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  4921  003E1E  0E01               	movlw	1
  4922  003E20  EC6F  F01F         	call	_I2C_2_Master_Read
  4923  003E24  6E0B               	movwf	??_color_read_Blue^0,c
  4924  003E26  500B               	movf	??_color_read_Blue^0,w,c
  4925  003E28  6E0E               	movwf	color_read_Blue@tmp^0,c
  4926  003E2A  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  4927                           
  4928                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4929  003E2C  0E00               	movlw	0
  4930  003E2E  EC6F  F01F         	call	_I2C_2_Master_Read
  4931  003E32  6E0B               	movwf	??_color_read_Blue^0,c
  4932  003E34  500B               	movf	??_color_read_Blue^0,w,c
  4933  003E36  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  4934  003E38  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  4935  003E3A  500E               	movf	color_read_Blue@tmp^0,w,c
  4936  003E3C  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  4937  003E3E  6E0E               	movwf	color_read_Blue@tmp^0,c
  4938  003E40  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  4939  003E42  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  4940  003E44  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  4941                           
  4942                           ;color.c: 80:     I2C_2_Master_Stop();
  4943  003E46  EC27  F021         	call	_I2C_2_Master_Stop	;wreg free
  4944  003E4A                     
  4945                           ;color.c: 81:     return tmp;
  4946  003E4A  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  4947  003E4E  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4948  003E52  0012               	return		;funcret
  4949  003E54                     __end_of_color_read_Blue:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function _I2C_2_Master_RepStart *****************
  4953 ;; Defined at:
  4954 ;;		line 33 in file "i2c.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;Total ram usage:        0 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 3
  4975 ;; This function calls:
  4976 ;;		_I2C_2_Master_Idle
  4977 ;; This function is called by:
  4978 ;;		_color_read_Clear
  4979 ;;		_color_read_Red
  4980 ;;		_color_read_Green
  4981 ;;		_color_read_Blue
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text24
  4986  004244                     __ptext24:
  4987                           	callstack 0
  4988  004244                     _I2C_2_Master_RepStart:
  4989                           	callstack 25
  4990  004244                     
  4991                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4992  004244  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  4993  004248                     
  4994                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4995  004248  010E               	movlb	14	; () banked
  4996  00424A  83DA               	bsf	218,1,b	;volatile
  4997  00424C                     
  4998                           ; BSR set to: 14
  4999  00424C  0012               	return		;funcret
  5000  00424E                     __end_of_I2C_2_Master_RepStart:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function _I2C_2_Master_Read *****************
  5004 ;; Defined at:
  5005 ;;		line 51 in file "i2c.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  ack             1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  ack             1    6[COMRAM] unsigned char 
  5010 ;;  tmp             1    7[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      unsigned char 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;Total ram usage:        3 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 3
  5027 ;; This function calls:
  5028 ;;		_I2C_2_Master_Idle
  5029 ;; This function is called by:
  5030 ;;		_color_read_Clear
  5031 ;;		_color_read_Red
  5032 ;;		_color_read_Green
  5033 ;;		_color_read_Blue
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text25
  5038  003EDE                     __ptext25:
  5039                           	callstack 0
  5040  003EDE                     _I2C_2_Master_Read:
  5041                           	callstack 25
  5042                           
  5043                           ; BSR set to: 14
  5044                           ;incstack = 0
  5045                           ;I2C_2_Master_Read@ack stored from wreg
  5046  003EDE  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  5047  003EE0                     
  5048                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5049  003EE0  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  5050  003EE4                     
  5051                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5052  003EE4  010E               	movlb	14	; () banked
  5053  003EE6  87DA               	bsf	218,3,b	;volatile
  5054                           
  5055                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5056  003EE8  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  5057  003EEC                     
  5058                           ;i2c.c: 57:   tmp = SSP2BUF;
  5059  003EEC  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5060                           
  5061                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5062  003EF0  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  5063  003EF4                     
  5064                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5065  003EF4  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  5066  003EF6  B4D8               	btfsc	status,2,c
  5067  003EF8  EF80  F01F         	goto	u5351
  5068  003EFC  EF84  F01F         	goto	u5350
  5069  003F00                     u5351:
  5070  003F00  6A06               	clrf	??_I2C_2_Master_Read^0,c
  5071  003F02  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  5072  003F04  EF85  F01F         	goto	u5368
  5073  003F08                     u5350:
  5074  003F08  6A06               	clrf	??_I2C_2_Master_Read^0,c
  5075  003F0A                     u5368:
  5076  003F0A  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  5077  003F0C  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  5078  003F0E  010E               	movlb	14	; () banked
  5079  003F10  51DA               	movf	218,w,b	;volatile
  5080  003F12  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  5081  003F14  0BDF               	andlw	-33
  5082  003F16  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  5083  003F18  6FDA               	movwf	218,b	;volatile
  5084  003F1A                     
  5085                           ; BSR set to: 14
  5086                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5087  003F1A  89DA               	bsf	218,4,b	;volatile
  5088  003F1C                     
  5089                           ; BSR set to: 14
  5090                           ;i2c.c: 61:   return tmp;
  5091  003F1C  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  5092  003F1E                     
  5093                           ; BSR set to: 14
  5094  003F1E  0012               	return		;funcret
  5095  003F20                     __end_of_I2C_2_Master_Read:
  5096                           	callstack 0
  5097                           
  5098 ;; *************** function _initUSART4 *****************
  5099 ;; Defined at:
  5100 ;;		line 4 in file "serial.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used: 1
  5120 ;; Hardware stack levels required when called: 2
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_main
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text26
  5129  0041A2                     __ptext26:
  5130                           	callstack 0
  5131  0041A2                     _initUSART4:
  5132                           	callstack 28
  5133  0041A2                     
  5134                           ;serial.c: 8:     RC0PPS = 0x12;
  5135  0041A2  0E12               	movlw	18
  5136  0041A4  010E               	movlb	14	; () banked
  5137  0041A6  6F62               	movwf	98,b	;volatile
  5138                           
  5139                           ;serial.c: 9:     RX4PPS = 0x11;
  5140  0041A8  0E11               	movlw	17
  5141  0041AA  6F15               	movwf	21,b	;volatile
  5142  0041AC                     
  5143                           ; BSR set to: 14
  5144                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  5145  0041AC  8283               	bsf	131,1,c	;volatile
  5146  0041AE                     
  5147                           ; BSR set to: 14
  5148                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  5149  0041AE  97E9               	bcf	233,3,b	;volatile
  5150  0041B0                     
  5151                           ; BSR set to: 14
  5152                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  5153  0041B0  95E8               	bcf	232,2,b	;volatile
  5154                           
  5155                           ;serial.c: 14:     SP4BRGL = 51;
  5156  0041B2  0E33               	movlw	51
  5157  0041B4  6FE5               	movwf	229,b	;volatile
  5158                           
  5159                           ;serial.c: 15:     SP4BRGH = 0;
  5160  0041B6  0E00               	movlw	0
  5161  0041B8  6FE6               	movwf	230,b	;volatile
  5162  0041BA                     
  5163                           ; BSR set to: 14
  5164                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  5165  0041BA  89E7               	bsf	231,4,b	;volatile
  5166  0041BC                     
  5167                           ; BSR set to: 14
  5168                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  5169  0041BC  8BE8               	bsf	232,5,b	;volatile
  5170  0041BE                     
  5171                           ; BSR set to: 14
  5172                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  5173  0041BE  8FE7               	bsf	231,7,b	;volatile
  5174  0041C0                     
  5175                           ; BSR set to: 14
  5176  0041C0  0012               	return		;funcret
  5177  0041C2                     __end_of_initUSART4:
  5178                           	callstack 0
  5179                           
  5180 ;; *************** function _initDCmotorsPWM *****************
  5181 ;; Defined at:
  5182 ;;		line 5 in file "dc_motor.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  PWMperiod       2    4[COMRAM] int 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;Total ram usage:        2 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 2
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text27
  5211  003F20                     __ptext27:
  5212                           	callstack 0
  5213  003F20                     _initDCmotorsPWM:
  5214                           	callstack 28
  5215  003F20                     
  5216                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  5217  003F20  9485               	bcf	133,2,c	;volatile
  5218                           
  5219                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  5220  003F22  9E83               	bcf	131,7,c	;volatile
  5221                           
  5222                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  5223  003F24  9C87               	bcf	135,6,c	;volatile
  5224                           
  5225                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  5226  003F26  9885               	bcf	133,4,c	;volatile
  5227                           
  5228                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  5229  003F28  947D               	bcf	125,2,c	;volatile
  5230                           
  5231                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  5232  003F2A  9E7B               	bcf	123,7,c	;volatile
  5233                           
  5234                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  5235  003F2C  9C7F               	bcf	127,6,c	;volatile
  5236                           
  5237                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  5238  003F2E  987D               	bcf	125,4,c	;volatile
  5239  003F30                     
  5240                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  5241  003F30  50BD               	movf	189,w,c	;volatile
  5242  003F32  0B8F               	andlw	-113
  5243  003F34  0940               	iorlw	64
  5244  003F36  6EBD               	movwf	189,c	;volatile
  5245                           
  5246                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  5247  003F38  0EE0               	movlw	-32
  5248  003F3A  16BE               	andwf	190,f,c	;volatile
  5249                           
  5250                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  5251  003F3C  50BF               	movf	191,w,c	;volatile
  5252  003F3E  0BF0               	andlw	-16
  5253  003F40  0901               	iorlw	1
  5254  003F42  6EBF               	movwf	191,c	;volatile
  5255                           
  5256                           ;dc_motor.c: 22:     T2PR=99;
  5257  003F44  0E63               	movlw	99
  5258  003F46  6EBC               	movwf	188,c	;volatile
  5259  003F48                     
  5260                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  5261  003F48  8EBD               	bsf	189,7,c	;volatile
  5262                           
  5263                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  5264  003F4A  0E0A               	movlw	10
  5265  003F4C  010E               	movlb	14	; () banked
  5266  003F4E  6F74               	movwf	116,b	;volatile
  5267                           
  5268                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  5269  003F50  0E0B               	movlw	11
  5270  003F52  6F69               	movwf	105,b	;volatile
  5271                           
  5272                           ;dc_motor.c: 28:     PWM6DCH=0;
  5273  003F54  0E00               	movlw	0
  5274  003F56  6EA3               	movwf	163,c	;volatile
  5275                           
  5276                           ;dc_motor.c: 29:     PWM7DCH=0;
  5277  003F58  0E00               	movlw	0
  5278  003F5A  6EA0               	movwf	160,c	;volatile
  5279  003F5C                     
  5280                           ; BSR set to: 14
  5281                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  5282  003F5C  8EA4               	bsf	164,7,c	;volatile
  5283  003F5E                     
  5284                           ; BSR set to: 14
  5285                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  5286  003F5E  8EA1               	bsf	161,7,c	;volatile
  5287  003F60                     
  5288                           ; BSR set to: 14
  5289  003F60  0012               	return		;funcret
  5290  003F62                     __end_of_initDCmotorsPWM:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _determine_color_new *****************
  5294 ;; Defined at:
  5295 ;;		line 186 in file "color.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  m               2   54[COMRAM] PTR struct RGB_val
  5298 ;;		 -> main@test(8), 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  BlueRatio       4   70[COMRAM] float 
  5301 ;;  GreenRatio      4   66[COMRAM] float 
  5302 ;;  RedRatio        4   62[COMRAM] float 
  5303 ;;  out             2   60[COMRAM] unsigned int 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  2   54[COMRAM] unsigned int 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;Total ram usage:       20 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 4
  5320 ;; This function calls:
  5321 ;;		___fldiv
  5322 ;;		___xxtofl
  5323 ;;		_isbtw
  5324 ;; This function is called by:
  5325 ;;		_main
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text28
  5330  000E3A                     __ptext28:
  5331                           	callstack 0
  5332  000E3A                     _determine_color_new:
  5333                           	callstack 26
  5334  000E3A                     
  5335                           ;color.c: 187:     float RedRatio, GreenRatio, BlueRatio;;color.c: 188:     unsigned int
      +                           out = 9;
  5336  000E3A  0E00               	movlw	0
  5337  000E3C  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5338  000E3E  0E09               	movlw	9
  5339  000E40  6E3D               	movwf	determine_color_new@out^0,c
  5340  000E42                     
  5341                           ;color.c: 189:     RedRatio = (float)m->R / (float)m->C;
  5342  000E42  EE20 F002          	lfsr	2,2
  5343  000E46  5037               	movf	determine_color_new@m^0,w,c
  5344  000E48  26D9               	addwf	fsr2l,f,c
  5345  000E4A  5038               	movf	(determine_color_new@m+1)^0,w,c
  5346  000E4C  22DA               	addwfc	fsr2h,f,c
  5347  000E4E  CFDE F039          	movff	postinc2,??_determine_color_new
  5348  000E52  CFDD F03A          	movff	postdec2,??_determine_color_new+1
  5349  000E56  C039  F00B         	movff	??_determine_color_new,___xxtofl@val
  5350  000E5A  C03A  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5351  000E5E  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5352  000E60  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5353  000E62  0E00               	movlw	0
  5354  000E64  EC42  F018         	call	___xxtofl
  5355  000E68  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5356  000E6C  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5357  000E70  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5358  000E74  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5359  000E78  C037  FFD9         	movff	determine_color_new@m,fsr2l
  5360  000E7C  C038  FFDA         	movff	determine_color_new@m+1,fsr2h
  5361  000E80  CFDE F03B          	movff	postinc2,??_determine_color_new+2
  5362  000E84  CFDD F03C          	movff	postdec2,??_determine_color_new+3
  5363  000E88  C03B  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5364  000E8C  C03C  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5365  000E90  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5366  000E92  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5367  000E94  0E00               	movlw	0
  5368  000E96  EC42  F018         	call	___xxtofl
  5369  000E9A  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5370  000E9E  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5371  000EA2  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5372  000EA6  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5373  000EAA  EC35  F013         	call	___fldiv	;wreg free
  5374  000EAE  C01E  F03F         	movff	?___fldiv,determine_color_new@RedRatio
  5375  000EB2  C01F  F040         	movff	?___fldiv+1,determine_color_new@RedRatio+1
  5376  000EB6  C020  F041         	movff	?___fldiv+2,determine_color_new@RedRatio+2
  5377  000EBA  C021  F042         	movff	?___fldiv+3,determine_color_new@RedRatio+3
  5378  000EBE                     
  5379                           ;color.c: 190:     GreenRatio = (float)m->G / (float)m->C;
  5380  000EBE  EE20 F004          	lfsr	2,4
  5381  000EC2  5037               	movf	determine_color_new@m^0,w,c
  5382  000EC4  26D9               	addwf	fsr2l,f,c
  5383  000EC6  5038               	movf	(determine_color_new@m+1)^0,w,c
  5384  000EC8  22DA               	addwfc	fsr2h,f,c
  5385  000ECA  CFDE F039          	movff	postinc2,??_determine_color_new
  5386  000ECE  CFDD F03A          	movff	postdec2,??_determine_color_new+1
  5387  000ED2  C039  F00B         	movff	??_determine_color_new,___xxtofl@val
  5388  000ED6  C03A  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5389  000EDA  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5390  000EDC  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5391  000EDE  0E00               	movlw	0
  5392  000EE0  EC42  F018         	call	___xxtofl
  5393  000EE4  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5394  000EE8  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5395  000EEC  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5396  000EF0  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5397  000EF4  C037  FFD9         	movff	determine_color_new@m,fsr2l
  5398  000EF8  C038  FFDA         	movff	determine_color_new@m+1,fsr2h
  5399  000EFC  CFDE F03B          	movff	postinc2,??_determine_color_new+2
  5400  000F00  CFDD F03C          	movff	postdec2,??_determine_color_new+3
  5401  000F04  C03B  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5402  000F08  C03C  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5403  000F0C  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5404  000F0E  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5405  000F10  0E00               	movlw	0
  5406  000F12  EC42  F018         	call	___xxtofl
  5407  000F16  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5408  000F1A  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5409  000F1E  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5410  000F22  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5411  000F26  EC35  F013         	call	___fldiv	;wreg free
  5412  000F2A  C01E  F043         	movff	?___fldiv,determine_color_new@GreenRatio
  5413  000F2E  C01F  F044         	movff	?___fldiv+1,determine_color_new@GreenRatio+1
  5414  000F32  C020  F045         	movff	?___fldiv+2,determine_color_new@GreenRatio+2
  5415  000F36  C021  F046         	movff	?___fldiv+3,determine_color_new@GreenRatio+3
  5416  000F3A                     
  5417                           ;color.c: 191:     BlueRatio = (float)m->B / (float)m->C;
  5418  000F3A  EE20 F006          	lfsr	2,6
  5419  000F3E  5037               	movf	determine_color_new@m^0,w,c
  5420  000F40  26D9               	addwf	fsr2l,f,c
  5421  000F42  5038               	movf	(determine_color_new@m+1)^0,w,c
  5422  000F44  22DA               	addwfc	fsr2h,f,c
  5423  000F46  CFDE F039          	movff	postinc2,??_determine_color_new
  5424  000F4A  CFDD F03A          	movff	postdec2,??_determine_color_new+1
  5425  000F4E  C039  F00B         	movff	??_determine_color_new,___xxtofl@val
  5426  000F52  C03A  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5427  000F56  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5428  000F58  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5429  000F5A  0E00               	movlw	0
  5430  000F5C  EC42  F018         	call	___xxtofl
  5431  000F60  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5432  000F64  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5433  000F68  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5434  000F6C  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5435  000F70  C037  FFD9         	movff	determine_color_new@m,fsr2l
  5436  000F74  C038  FFDA         	movff	determine_color_new@m+1,fsr2h
  5437  000F78  CFDE F03B          	movff	postinc2,??_determine_color_new+2
  5438  000F7C  CFDD F03C          	movff	postdec2,??_determine_color_new+3
  5439  000F80  C03B  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5440  000F84  C03C  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5441  000F88  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5442  000F8A  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5443  000F8C  0E00               	movlw	0
  5444  000F8E  EC42  F018         	call	___xxtofl
  5445  000F92  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5446  000F96  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5447  000F9A  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5448  000F9E  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5449  000FA2  EC35  F013         	call	___fldiv	;wreg free
  5450  000FA6  C01E  F047         	movff	?___fldiv,determine_color_new@BlueRatio
  5451  000FAA  C01F  F048         	movff	?___fldiv+1,determine_color_new@BlueRatio+1
  5452  000FAE  C020  F049         	movff	?___fldiv+2,determine_color_new@BlueRatio+2
  5453  000FB2  C021  F04A         	movff	?___fldiv+3,determine_color_new@BlueRatio+3
  5454  000FB6                     
  5455                           ;color.c: 194:     if (isbtw(RedRatio,0.700,0.800)==1 && isbtw(GreenRatio,0.180,0.210)==
      +                          1 && isbtw(BlueRatio,0.180,0.199)==1)
  5456  000FB6  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5457  000FBA  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5458  000FBE  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5459  000FC2  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5460  000FC6  0E33               	movlw	51
  5461  000FC8  6E15               	movwf	isbtw@low^0,c
  5462  000FCA  0E33               	movlw	51
  5463  000FCC  6E16               	movwf	(isbtw@low+1)^0,c
  5464  000FCE  0E33               	movlw	51
  5465  000FD0  6E17               	movwf	(isbtw@low+2)^0,c
  5466  000FD2  0E3F               	movlw	63
  5467  000FD4  6E18               	movwf	(isbtw@low+3)^0,c
  5468  000FD6  0ECD               	movlw	205
  5469  000FD8  6E19               	movwf	isbtw@high^0,c
  5470  000FDA  0ECC               	movlw	204
  5471  000FDC  6E1A               	movwf	(isbtw@high+1)^0,c
  5472  000FDE  0E4C               	movlw	76
  5473  000FE0  6E1B               	movwf	(isbtw@high+2)^0,c
  5474  000FE2  0E3F               	movlw	63
  5475  000FE4  6E1C               	movwf	(isbtw@high+3)^0,c
  5476  000FE6  EC31  F01D         	call	_isbtw	;wreg free
  5477  000FEA  0411               	decf	?_isbtw^0,w,c
  5478  000FEC  1012               	iorwf	(?_isbtw+1)^0,w,c
  5479  000FEE  A4D8               	btfss	status,2,c
  5480  000FF0  EFFC  F007         	goto	u6361
  5481  000FF4  EFFE  F007         	goto	u6360
  5482  000FF8                     u6361:
  5483  000FF8  EF48  F008         	goto	l5712
  5484  000FFC                     u6360:
  5485  000FFC  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5486  001000  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5487  001004  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5488  001008  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5489  00100C  0EEC               	movlw	236
  5490  00100E  6E15               	movwf	isbtw@low^0,c
  5491  001010  0E51               	movlw	81
  5492  001012  6E16               	movwf	(isbtw@low+1)^0,c
  5493  001014  0E38               	movlw	56
  5494  001016  6E17               	movwf	(isbtw@low+2)^0,c
  5495  001018  0E3E               	movlw	62
  5496  00101A  6E18               	movwf	(isbtw@low+3)^0,c
  5497  00101C  0E3D               	movlw	61
  5498  00101E  6E19               	movwf	isbtw@high^0,c
  5499  001020  0E0A               	movlw	10
  5500  001022  6E1A               	movwf	(isbtw@high+1)^0,c
  5501  001024  0E57               	movlw	87
  5502  001026  6E1B               	movwf	(isbtw@high+2)^0,c
  5503  001028  0E3E               	movlw	62
  5504  00102A  6E1C               	movwf	(isbtw@high+3)^0,c
  5505  00102C  EC31  F01D         	call	_isbtw	;wreg free
  5506  001030  0411               	decf	?_isbtw^0,w,c
  5507  001032  1012               	iorwf	(?_isbtw+1)^0,w,c
  5508  001034  A4D8               	btfss	status,2,c
  5509  001036  EF1F  F008         	goto	u6371
  5510  00103A  EF21  F008         	goto	u6370
  5511  00103E                     u6371:
  5512  00103E  EF48  F008         	goto	l5712
  5513  001042                     u6370:
  5514  001042  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5515  001046  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5516  00104A  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5517  00104E  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5518  001052  0EEC               	movlw	236
  5519  001054  6E15               	movwf	isbtw@low^0,c
  5520  001056  0E51               	movlw	81
  5521  001058  6E16               	movwf	(isbtw@low+1)^0,c
  5522  00105A  0E38               	movlw	56
  5523  00105C  6E17               	movwf	(isbtw@low+2)^0,c
  5524  00105E  0E3E               	movlw	62
  5525  001060  6E18               	movwf	(isbtw@low+3)^0,c
  5526  001062  0EA8               	movlw	168
  5527  001064  6E19               	movwf	isbtw@high^0,c
  5528  001066  0EC6               	movlw	198
  5529  001068  6E1A               	movwf	(isbtw@high+1)^0,c
  5530  00106A  0E4B               	movlw	75
  5531  00106C  6E1B               	movwf	(isbtw@high+2)^0,c
  5532  00106E  0E3E               	movlw	62
  5533  001070  6E1C               	movwf	(isbtw@high+3)^0,c
  5534  001072  EC31  F01D         	call	_isbtw	;wreg free
  5535  001076  0411               	decf	?_isbtw^0,w,c
  5536  001078  1012               	iorwf	(?_isbtw+1)^0,w,c
  5537  00107A  A4D8               	btfss	status,2,c
  5538  00107C  EF42  F008         	goto	u6381
  5539  001080  EF44  F008         	goto	u6380
  5540  001084                     u6381:
  5541  001084  EF48  F008         	goto	l5712
  5542  001088                     u6380:
  5543  001088                     
  5544                           ;color.c: 195:     {out = 0;}
  5545  001088  0E00               	movlw	0
  5546  00108A  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5547  00108C  0E00               	movlw	0
  5548  00108E  6E3D               	movwf	determine_color_new@out^0,c
  5549  001090                     l5712:
  5550                           
  5551                           ;color.c: 198:     if (isbtw(RedRatio,0.450,0.490)==1 && isbtw(GreenRatio,0.330,0.365)==
      +                          1 && isbtw(BlueRatio,0.220,0.240)==1)
  5552  001090  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5553  001094  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5554  001098  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5555  00109C  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5556  0010A0  0E66               	movlw	102
  5557  0010A2  6E15               	movwf	isbtw@low^0,c
  5558  0010A4  0E66               	movlw	102
  5559  0010A6  6E16               	movwf	(isbtw@low+1)^0,c
  5560  0010A8  0EE6               	movlw	230
  5561  0010AA  6E17               	movwf	(isbtw@low+2)^0,c
  5562  0010AC  0E3E               	movlw	62
  5563  0010AE  6E18               	movwf	(isbtw@low+3)^0,c
  5564  0010B0  0E48               	movlw	72
  5565  0010B2  6E19               	movwf	isbtw@high^0,c
  5566  0010B4  0EE1               	movlw	225
  5567  0010B6  6E1A               	movwf	(isbtw@high+1)^0,c
  5568  0010B8  0EFA               	movlw	250
  5569  0010BA  6E1B               	movwf	(isbtw@high+2)^0,c
  5570  0010BC  0E3E               	movlw	62
  5571  0010BE  6E1C               	movwf	(isbtw@high+3)^0,c
  5572  0010C0  EC31  F01D         	call	_isbtw	;wreg free
  5573  0010C4  0411               	decf	?_isbtw^0,w,c
  5574  0010C6  1012               	iorwf	(?_isbtw+1)^0,w,c
  5575  0010C8  A4D8               	btfss	status,2,c
  5576  0010CA  EF69  F008         	goto	u6391
  5577  0010CE  EF6B  F008         	goto	u6390
  5578  0010D2                     u6391:
  5579  0010D2  EFB5  F008         	goto	l5720
  5580  0010D6                     u6390:
  5581  0010D6  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5582  0010DA  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5583  0010DE  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5584  0010E2  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5585  0010E6  0EC3               	movlw	195
  5586  0010E8  6E15               	movwf	isbtw@low^0,c
  5587  0010EA  0EF5               	movlw	245
  5588  0010EC  6E16               	movwf	(isbtw@low+1)^0,c
  5589  0010EE  0EA8               	movlw	168
  5590  0010F0  6E17               	movwf	(isbtw@low+2)^0,c
  5591  0010F2  0E3E               	movlw	62
  5592  0010F4  6E18               	movwf	(isbtw@low+3)^0,c
  5593  0010F6  0E48               	movlw	72
  5594  0010F8  6E19               	movwf	isbtw@high^0,c
  5595  0010FA  0EE1               	movlw	225
  5596  0010FC  6E1A               	movwf	(isbtw@high+1)^0,c
  5597  0010FE  0EBA               	movlw	186
  5598  001100  6E1B               	movwf	(isbtw@high+2)^0,c
  5599  001102  0E3E               	movlw	62
  5600  001104  6E1C               	movwf	(isbtw@high+3)^0,c
  5601  001106  EC31  F01D         	call	_isbtw	;wreg free
  5602  00110A  0411               	decf	?_isbtw^0,w,c
  5603  00110C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5604  00110E  A4D8               	btfss	status,2,c
  5605  001110  EF8C  F008         	goto	u6401
  5606  001114  EF8E  F008         	goto	u6400
  5607  001118                     u6401:
  5608  001118  EFB5  F008         	goto	l5720
  5609  00111C                     u6400:
  5610  00111C  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5611  001120  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5612  001124  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5613  001128  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5614  00112C  0EAE               	movlw	174
  5615  00112E  6E15               	movwf	isbtw@low^0,c
  5616  001130  0E47               	movlw	71
  5617  001132  6E16               	movwf	(isbtw@low+1)^0,c
  5618  001134  0E61               	movlw	97
  5619  001136  6E17               	movwf	(isbtw@low+2)^0,c
  5620  001138  0E3E               	movlw	62
  5621  00113A  6E18               	movwf	(isbtw@low+3)^0,c
  5622  00113C  0E8F               	movlw	143
  5623  00113E  6E19               	movwf	isbtw@high^0,c
  5624  001140  0EC2               	movlw	194
  5625  001142  6E1A               	movwf	(isbtw@high+1)^0,c
  5626  001144  0E75               	movlw	117
  5627  001146  6E1B               	movwf	(isbtw@high+2)^0,c
  5628  001148  0E3E               	movlw	62
  5629  00114A  6E1C               	movwf	(isbtw@high+3)^0,c
  5630  00114C  EC31  F01D         	call	_isbtw	;wreg free
  5631  001150  0411               	decf	?_isbtw^0,w,c
  5632  001152  1012               	iorwf	(?_isbtw+1)^0,w,c
  5633  001154  A4D8               	btfss	status,2,c
  5634  001156  EFAF  F008         	goto	u6411
  5635  00115A  EFB1  F008         	goto	u6410
  5636  00115E                     u6411:
  5637  00115E  EFB5  F008         	goto	l5720
  5638  001162                     u6410:
  5639  001162                     
  5640                           ;color.c: 199:     {out = 1;}
  5641  001162  0E00               	movlw	0
  5642  001164  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5643  001166  0E01               	movlw	1
  5644  001168  6E3D               	movwf	determine_color_new@out^0,c
  5645  00116A                     l5720:
  5646                           
  5647                           ;color.c: 202:     if (isbtw(RedRatio,0.410,0.460)==1 && isbtw(GreenRatio,0.313,0.335)==
      +                          1 && isbtw(BlueRatio,0.270,0.295)==1)
  5648  00116A  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5649  00116E  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5650  001172  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5651  001176  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5652  00117A  0E85               	movlw	133
  5653  00117C  6E15               	movwf	isbtw@low^0,c
  5654  00117E  0EEB               	movlw	235
  5655  001180  6E16               	movwf	(isbtw@low+1)^0,c
  5656  001182  0ED1               	movlw	209
  5657  001184  6E17               	movwf	(isbtw@low+2)^0,c
  5658  001186  0E3E               	movlw	62
  5659  001188  6E18               	movwf	(isbtw@low+3)^0,c
  5660  00118A  0E1F               	movlw	31
  5661  00118C  6E19               	movwf	isbtw@high^0,c
  5662  00118E  0E85               	movlw	133
  5663  001190  6E1A               	movwf	(isbtw@high+1)^0,c
  5664  001192  0EEB               	movlw	235
  5665  001194  6E1B               	movwf	(isbtw@high+2)^0,c
  5666  001196  0E3E               	movlw	62
  5667  001198  6E1C               	movwf	(isbtw@high+3)^0,c
  5668  00119A  EC31  F01D         	call	_isbtw	;wreg free
  5669  00119E  0411               	decf	?_isbtw^0,w,c
  5670  0011A0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5671  0011A2  A4D8               	btfss	status,2,c
  5672  0011A4  EFD6  F008         	goto	u6421
  5673  0011A8  EFD8  F008         	goto	u6420
  5674  0011AC                     u6421:
  5675  0011AC  EF22  F009         	goto	l5728
  5676  0011B0                     u6420:
  5677  0011B0  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5678  0011B4  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5679  0011B8  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5680  0011BC  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5681  0011C0  0E89               	movlw	137
  5682  0011C2  6E15               	movwf	isbtw@low^0,c
  5683  0011C4  0E41               	movlw	65
  5684  0011C6  6E16               	movwf	(isbtw@low+1)^0,c
  5685  0011C8  0EA0               	movlw	160
  5686  0011CA  6E17               	movwf	(isbtw@low+2)^0,c
  5687  0011CC  0E3E               	movlw	62
  5688  0011CE  6E18               	movwf	(isbtw@low+3)^0,c
  5689  0011D0  0E1F               	movlw	31
  5690  0011D2  6E19               	movwf	isbtw@high^0,c
  5691  0011D4  0E85               	movlw	133
  5692  0011D6  6E1A               	movwf	(isbtw@high+1)^0,c
  5693  0011D8  0EAB               	movlw	171
  5694  0011DA  6E1B               	movwf	(isbtw@high+2)^0,c
  5695  0011DC  0E3E               	movlw	62
  5696  0011DE  6E1C               	movwf	(isbtw@high+3)^0,c
  5697  0011E0  EC31  F01D         	call	_isbtw	;wreg free
  5698  0011E4  0411               	decf	?_isbtw^0,w,c
  5699  0011E6  1012               	iorwf	(?_isbtw+1)^0,w,c
  5700  0011E8  A4D8               	btfss	status,2,c
  5701  0011EA  EFF9  F008         	goto	u6431
  5702  0011EE  EFFB  F008         	goto	u6430
  5703  0011F2                     u6431:
  5704  0011F2  EF22  F009         	goto	l5728
  5705  0011F6                     u6430:
  5706  0011F6  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5707  0011FA  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5708  0011FE  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5709  001202  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5710  001206  0E71               	movlw	113
  5711  001208  6E15               	movwf	isbtw@low^0,c
  5712  00120A  0E3D               	movlw	61
  5713  00120C  6E16               	movwf	(isbtw@low+1)^0,c
  5714  00120E  0E8A               	movlw	138
  5715  001210  6E17               	movwf	(isbtw@low+2)^0,c
  5716  001212  0E3E               	movlw	62
  5717  001214  6E18               	movwf	(isbtw@low+3)^0,c
  5718  001216  0E3D               	movlw	61
  5719  001218  6E19               	movwf	isbtw@high^0,c
  5720  00121A  0E0A               	movlw	10
  5721  00121C  6E1A               	movwf	(isbtw@high+1)^0,c
  5722  00121E  0E97               	movlw	151
  5723  001220  6E1B               	movwf	(isbtw@high+2)^0,c
  5724  001222  0E3E               	movlw	62
  5725  001224  6E1C               	movwf	(isbtw@high+3)^0,c
  5726  001226  EC31  F01D         	call	_isbtw	;wreg free
  5727  00122A  0411               	decf	?_isbtw^0,w,c
  5728  00122C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5729  00122E  A4D8               	btfss	status,2,c
  5730  001230  EF1C  F009         	goto	u6441
  5731  001234  EF1E  F009         	goto	u6440
  5732  001238                     u6441:
  5733  001238  EF22  F009         	goto	l5728
  5734  00123C                     u6440:
  5735  00123C                     
  5736                           ;color.c: 203:     {out = 2;}
  5737  00123C  0E00               	movlw	0
  5738  00123E  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5739  001240  0E02               	movlw	2
  5740  001242  6E3D               	movwf	determine_color_new@out^0,c
  5741  001244                     l5728:
  5742                           
  5743                           ;color.c: 206:     if (isbtw(RedRatio,0.610,0.625)==1 && isbtw(GreenRatio,0.265,0.279)==
      +                          1 && isbtw(BlueRatio,0.160,0.176)==1)
  5744  001244  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5745  001248  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5746  00124C  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5747  001250  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5748  001254  0EF6               	movlw	246
  5749  001256  6E15               	movwf	isbtw@low^0,c
  5750  001258  0E28               	movlw	40
  5751  00125A  6E16               	movwf	(isbtw@low+1)^0,c
  5752  00125C  0E1C               	movlw	28
  5753  00125E  6E17               	movwf	(isbtw@low+2)^0,c
  5754  001260  0E3F               	movlw	63
  5755  001262  6E18               	movwf	(isbtw@low+3)^0,c
  5756  001264  0E00               	movlw	0
  5757  001266  6E19               	movwf	isbtw@high^0,c
  5758  001268  0E00               	movlw	0
  5759  00126A  6E1A               	movwf	(isbtw@high+1)^0,c
  5760  00126C  0E20               	movlw	32
  5761  00126E  6E1B               	movwf	(isbtw@high+2)^0,c
  5762  001270  0E3F               	movlw	63
  5763  001272  6E1C               	movwf	(isbtw@high+3)^0,c
  5764  001274  EC31  F01D         	call	_isbtw	;wreg free
  5765  001278  0411               	decf	?_isbtw^0,w,c
  5766  00127A  1012               	iorwf	(?_isbtw+1)^0,w,c
  5767  00127C  A4D8               	btfss	status,2,c
  5768  00127E  EF43  F009         	goto	u6451
  5769  001282  EF45  F009         	goto	u6450
  5770  001286                     u6451:
  5771  001286  EF8F  F009         	goto	l5736
  5772  00128A                     u6450:
  5773  00128A  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5774  00128E  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5775  001292  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5776  001296  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5777  00129A  0E14               	movlw	20
  5778  00129C  6E15               	movwf	isbtw@low^0,c
  5779  00129E  0EAE               	movlw	174
  5780  0012A0  6E16               	movwf	(isbtw@low+1)^0,c
  5781  0012A2  0E87               	movlw	135
  5782  0012A4  6E17               	movwf	(isbtw@low+2)^0,c
  5783  0012A6  0E3E               	movlw	62
  5784  0012A8  6E18               	movwf	(isbtw@low+3)^0,c
  5785  0012AA  0E17               	movlw	23
  5786  0012AC  6E19               	movwf	isbtw@high^0,c
  5787  0012AE  0ED9               	movlw	217
  5788  0012B0  6E1A               	movwf	(isbtw@high+1)^0,c
  5789  0012B2  0E8E               	movlw	142
  5790  0012B4  6E1B               	movwf	(isbtw@high+2)^0,c
  5791  0012B6  0E3E               	movlw	62
  5792  0012B8  6E1C               	movwf	(isbtw@high+3)^0,c
  5793  0012BA  EC31  F01D         	call	_isbtw	;wreg free
  5794  0012BE  0411               	decf	?_isbtw^0,w,c
  5795  0012C0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5796  0012C2  A4D8               	btfss	status,2,c
  5797  0012C4  EF66  F009         	goto	u6461
  5798  0012C8  EF68  F009         	goto	u6460
  5799  0012CC                     u6461:
  5800  0012CC  EF8F  F009         	goto	l5736
  5801  0012D0                     u6460:
  5802  0012D0  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5803  0012D4  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5804  0012D8  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5805  0012DC  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5806  0012E0  0E0A               	movlw	10
  5807  0012E2  6E15               	movwf	isbtw@low^0,c
  5808  0012E4  0ED7               	movlw	215
  5809  0012E6  6E16               	movwf	(isbtw@low+1)^0,c
  5810  0012E8  0E23               	movlw	35
  5811  0012EA  6E17               	movwf	(isbtw@low+2)^0,c
  5812  0012EC  0E3E               	movlw	62
  5813  0012EE  6E18               	movwf	(isbtw@low+3)^0,c
  5814  0012F0  0E58               	movlw	88
  5815  0012F2  6E19               	movwf	isbtw@high^0,c
  5816  0012F4  0E39               	movlw	57
  5817  0012F6  6E1A               	movwf	(isbtw@high+1)^0,c
  5818  0012F8  0E34               	movlw	52
  5819  0012FA  6E1B               	movwf	(isbtw@high+2)^0,c
  5820  0012FC  0E3E               	movlw	62
  5821  0012FE  6E1C               	movwf	(isbtw@high+3)^0,c
  5822  001300  EC31  F01D         	call	_isbtw	;wreg free
  5823  001304  0411               	decf	?_isbtw^0,w,c
  5824  001306  1012               	iorwf	(?_isbtw+1)^0,w,c
  5825  001308  A4D8               	btfss	status,2,c
  5826  00130A  EF89  F009         	goto	u6471
  5827  00130E  EF8B  F009         	goto	u6470
  5828  001312                     u6471:
  5829  001312  EF8F  F009         	goto	l5736
  5830  001316                     u6470:
  5831  001316                     
  5832                           ;color.c: 207:     {out = 3;}
  5833  001316  0E00               	movlw	0
  5834  001318  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5835  00131A  0E03               	movlw	3
  5836  00131C  6E3D               	movwf	determine_color_new@out^0,c
  5837  00131E                     l5736:
  5838                           
  5839                           ;color.c: 210:     if (isbtw(RedRatio,0.625,0.646)==1 && isbtw(GreenRatio,0.230,0.240)==
      +                          1 && isbtw(BlueRatio,0.200,0.209)==1)
  5840  00131E  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5841  001322  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5842  001326  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5843  00132A  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5844  00132E  0E00               	movlw	0
  5845  001330  6E15               	movwf	isbtw@low^0,c
  5846  001332  0E00               	movlw	0
  5847  001334  6E16               	movwf	(isbtw@low+1)^0,c
  5848  001336  0E20               	movlw	32
  5849  001338  6E17               	movwf	(isbtw@low+2)^0,c
  5850  00133A  0E3F               	movlw	63
  5851  00133C  6E18               	movwf	(isbtw@low+3)^0,c
  5852  00133E  0E42               	movlw	66
  5853  001340  6E19               	movwf	isbtw@high^0,c
  5854  001342  0E60               	movlw	96
  5855  001344  6E1A               	movwf	(isbtw@high+1)^0,c
  5856  001346  0E25               	movlw	37
  5857  001348  6E1B               	movwf	(isbtw@high+2)^0,c
  5858  00134A  0E3F               	movlw	63
  5859  00134C  6E1C               	movwf	(isbtw@high+3)^0,c
  5860  00134E  EC31  F01D         	call	_isbtw	;wreg free
  5861  001352  0411               	decf	?_isbtw^0,w,c
  5862  001354  1012               	iorwf	(?_isbtw+1)^0,w,c
  5863  001356  A4D8               	btfss	status,2,c
  5864  001358  EFB0  F009         	goto	u6481
  5865  00135C  EFB2  F009         	goto	u6480
  5866  001360                     u6481:
  5867  001360  EFFC  F009         	goto	l5744
  5868  001364                     u6480:
  5869  001364  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5870  001368  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5871  00136C  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5872  001370  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5873  001374  0E1F               	movlw	31
  5874  001376  6E15               	movwf	isbtw@low^0,c
  5875  001378  0E85               	movlw	133
  5876  00137A  6E16               	movwf	(isbtw@low+1)^0,c
  5877  00137C  0E6B               	movlw	107
  5878  00137E  6E17               	movwf	(isbtw@low+2)^0,c
  5879  001380  0E3E               	movlw	62
  5880  001382  6E18               	movwf	(isbtw@low+3)^0,c
  5881  001384  0E8F               	movlw	143
  5882  001386  6E19               	movwf	isbtw@high^0,c
  5883  001388  0EC2               	movlw	194
  5884  00138A  6E1A               	movwf	(isbtw@high+1)^0,c
  5885  00138C  0E75               	movlw	117
  5886  00138E  6E1B               	movwf	(isbtw@high+2)^0,c
  5887  001390  0E3E               	movlw	62
  5888  001392  6E1C               	movwf	(isbtw@high+3)^0,c
  5889  001394  EC31  F01D         	call	_isbtw	;wreg free
  5890  001398  0411               	decf	?_isbtw^0,w,c
  5891  00139A  1012               	iorwf	(?_isbtw+1)^0,w,c
  5892  00139C  A4D8               	btfss	status,2,c
  5893  00139E  EFD3  F009         	goto	u6491
  5894  0013A2  EFD5  F009         	goto	u6490
  5895  0013A6                     u6491:
  5896  0013A6  EFFC  F009         	goto	l5744
  5897  0013AA                     u6490:
  5898  0013AA  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5899  0013AE  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5900  0013B2  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5901  0013B6  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5902  0013BA  0ECD               	movlw	205
  5903  0013BC  6E15               	movwf	isbtw@low^0,c
  5904  0013BE  0ECC               	movlw	204
  5905  0013C0  6E16               	movwf	(isbtw@low+1)^0,c
  5906  0013C2  0E4C               	movlw	76
  5907  0013C4  6E17               	movwf	(isbtw@low+2)^0,c
  5908  0013C6  0E3E               	movlw	62
  5909  0013C8  6E18               	movwf	(isbtw@low+3)^0,c
  5910  0013CA  0E19               	movlw	25
  5911  0013CC  6E19               	movwf	isbtw@high^0,c
  5912  0013CE  0E04               	movlw	4
  5913  0013D0  6E1A               	movwf	(isbtw@high+1)^0,c
  5914  0013D2  0E56               	movlw	86
  5915  0013D4  6E1B               	movwf	(isbtw@high+2)^0,c
  5916  0013D6  0E3E               	movlw	62
  5917  0013D8  6E1C               	movwf	(isbtw@high+3)^0,c
  5918  0013DA  EC31  F01D         	call	_isbtw	;wreg free
  5919  0013DE  0411               	decf	?_isbtw^0,w,c
  5920  0013E0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5921  0013E2  A4D8               	btfss	status,2,c
  5922  0013E4  EFF6  F009         	goto	u6501
  5923  0013E8  EFF8  F009         	goto	u6500
  5924  0013EC                     u6501:
  5925  0013EC  EFFC  F009         	goto	l5744
  5926  0013F0                     u6500:
  5927  0013F0                     
  5928                           ;color.c: 211:     {out = 4;}
  5929  0013F0  0E00               	movlw	0
  5930  0013F2  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5931  0013F4  0E04               	movlw	4
  5932  0013F6  6E3D               	movwf	determine_color_new@out^0,c
  5933  0013F8                     l5744:
  5934                           
  5935                           ;color.c: 214:     if (isbtw(RedRatio,0.715,0.755)==1 && isbtw(GreenRatio,0.185,0.215)==
      +                          1 && isbtw(BlueRatio,0.172,0.181)==1)
  5936  0013F8  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5937  0013FC  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5938  001400  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5939  001404  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5940  001408  0E3D               	movlw	61
  5941  00140A  6E15               	movwf	isbtw@low^0,c
  5942  00140C  0E0A               	movlw	10
  5943  00140E  6E16               	movwf	(isbtw@low+1)^0,c
  5944  001410  0E37               	movlw	55
  5945  001412  6E17               	movwf	(isbtw@low+2)^0,c
  5946  001414  0E3F               	movlw	63
  5947  001416  6E18               	movwf	(isbtw@low+3)^0,c
  5948  001418  0EAE               	movlw	174
  5949  00141A  6E19               	movwf	isbtw@high^0,c
  5950  00141C  0E47               	movlw	71
  5951  00141E  6E1A               	movwf	(isbtw@high+1)^0,c
  5952  001420  0E41               	movlw	65
  5953  001422  6E1B               	movwf	(isbtw@high+2)^0,c
  5954  001424  0E3F               	movlw	63
  5955  001426  6E1C               	movwf	(isbtw@high+3)^0,c
  5956  001428  EC31  F01D         	call	_isbtw	;wreg free
  5957  00142C  0411               	decf	?_isbtw^0,w,c
  5958  00142E  1012               	iorwf	(?_isbtw+1)^0,w,c
  5959  001430  A4D8               	btfss	status,2,c
  5960  001432  EF1D  F00A         	goto	u6511
  5961  001436  EF1F  F00A         	goto	u6510
  5962  00143A                     u6511:
  5963  00143A  EF69  F00A         	goto	l5752
  5964  00143E                     u6510:
  5965  00143E  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5966  001442  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5967  001446  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5968  00144A  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5969  00144E  0EA4               	movlw	164
  5970  001450  6E15               	movwf	isbtw@low^0,c
  5971  001452  0E70               	movlw	112
  5972  001454  6E16               	movwf	(isbtw@low+1)^0,c
  5973  001456  0E3D               	movlw	61
  5974  001458  6E17               	movwf	(isbtw@low+2)^0,c
  5975  00145A  0E3E               	movlw	62
  5976  00145C  6E18               	movwf	(isbtw@low+3)^0,c
  5977  00145E  0EF6               	movlw	246
  5978  001460  6E19               	movwf	isbtw@high^0,c
  5979  001462  0E28               	movlw	40
  5980  001464  6E1A               	movwf	(isbtw@high+1)^0,c
  5981  001466  0E5C               	movlw	92
  5982  001468  6E1B               	movwf	(isbtw@high+2)^0,c
  5983  00146A  0E3E               	movlw	62
  5984  00146C  6E1C               	movwf	(isbtw@high+3)^0,c
  5985  00146E  EC31  F01D         	call	_isbtw	;wreg free
  5986  001472  0411               	decf	?_isbtw^0,w,c
  5987  001474  1012               	iorwf	(?_isbtw+1)^0,w,c
  5988  001476  A4D8               	btfss	status,2,c
  5989  001478  EF40  F00A         	goto	u6521
  5990  00147C  EF42  F00A         	goto	u6520
  5991  001480                     u6521:
  5992  001480  EF69  F00A         	goto	l5752
  5993  001484                     u6520:
  5994  001484  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5995  001488  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5996  00148C  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5997  001490  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5998  001494  0EC5               	movlw	197
  5999  001496  6E15               	movwf	isbtw@low^0,c
  6000  001498  0E20               	movlw	32
  6001  00149A  6E16               	movwf	(isbtw@low+1)^0,c
  6002  00149C  0E30               	movlw	48
  6003  00149E  6E17               	movwf	(isbtw@low+2)^0,c
  6004  0014A0  0E3E               	movlw	62
  6005  0014A2  6E18               	movwf	(isbtw@low+3)^0,c
  6006  0014A4  0E10               	movlw	16
  6007  0014A6  6E19               	movwf	isbtw@high^0,c
  6008  0014A8  0E58               	movlw	88
  6009  0014AA  6E1A               	movwf	(isbtw@high+1)^0,c
  6010  0014AC  0E39               	movlw	57
  6011  0014AE  6E1B               	movwf	(isbtw@high+2)^0,c
  6012  0014B0  0E3E               	movlw	62
  6013  0014B2  6E1C               	movwf	(isbtw@high+3)^0,c
  6014  0014B4  EC31  F01D         	call	_isbtw	;wreg free
  6015  0014B8  0411               	decf	?_isbtw^0,w,c
  6016  0014BA  1012               	iorwf	(?_isbtw+1)^0,w,c
  6017  0014BC  A4D8               	btfss	status,2,c
  6018  0014BE  EF63  F00A         	goto	u6531
  6019  0014C2  EF65  F00A         	goto	u6530
  6020  0014C6                     u6531:
  6021  0014C6  EF69  F00A         	goto	l5752
  6022  0014CA                     u6530:
  6023  0014CA                     
  6024                           ;color.c: 215:     {out = 5;}
  6025  0014CA  0E00               	movlw	0
  6026  0014CC  6E3E               	movwf	(determine_color_new@out+1)^0,c
  6027  0014CE  0E05               	movlw	5
  6028  0014D0  6E3D               	movwf	determine_color_new@out^0,c
  6029  0014D2                     l5752:
  6030                           
  6031                           ;color.c: 218:     if (isbtw(RedRatio,0.485,0.502)==1 && isbtw(GreenRatio,0.305,0.315)==
      +                          1 && isbtw(BlueRatio,0.245,0.257)==1)
  6032  0014D2  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  6033  0014D6  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  6034  0014DA  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  6035  0014DE  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  6036  0014E2  0EEC               	movlw	236
  6037  0014E4  6E15               	movwf	isbtw@low^0,c
  6038  0014E6  0E51               	movlw	81
  6039  0014E8  6E16               	movwf	(isbtw@low+1)^0,c
  6040  0014EA  0EF8               	movlw	248
  6041  0014EC  6E17               	movwf	(isbtw@low+2)^0,c
  6042  0014EE  0E3E               	movlw	62
  6043  0014F0  6E18               	movwf	(isbtw@low+3)^0,c
  6044  0014F2  0E12               	movlw	18
  6045  0014F4  6E19               	movwf	isbtw@high^0,c
  6046  0014F6  0E83               	movlw	131
  6047  0014F8  6E1A               	movwf	(isbtw@high+1)^0,c
  6048  0014FA  0E00               	movlw	0
  6049  0014FC  6E1B               	movwf	(isbtw@high+2)^0,c
  6050  0014FE  0E3F               	movlw	63
  6051  001500  6E1C               	movwf	(isbtw@high+3)^0,c
  6052  001502  EC31  F01D         	call	_isbtw	;wreg free
  6053  001506  0411               	decf	?_isbtw^0,w,c
  6054  001508  1012               	iorwf	(?_isbtw+1)^0,w,c
  6055  00150A  A4D8               	btfss	status,2,c
  6056  00150C  EF8A  F00A         	goto	u6541
  6057  001510  EF8C  F00A         	goto	u6540
  6058  001514                     u6541:
  6059  001514  EFD6  F00A         	goto	l5760
  6060  001518                     u6540:
  6061  001518  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  6062  00151C  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  6063  001520  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  6064  001524  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  6065  001528  0EF6               	movlw	246
  6066  00152A  6E15               	movwf	isbtw@low^0,c
  6067  00152C  0E28               	movlw	40
  6068  00152E  6E16               	movwf	(isbtw@low+1)^0,c
  6069  001530  0E9C               	movlw	156
  6070  001532  6E17               	movwf	(isbtw@low+2)^0,c
  6071  001534  0E3E               	movlw	62
  6072  001536  6E18               	movwf	(isbtw@low+3)^0,c
  6073  001538  0EAE               	movlw	174
  6074  00153A  6E19               	movwf	isbtw@high^0,c
  6075  00153C  0E47               	movlw	71
  6076  00153E  6E1A               	movwf	(isbtw@high+1)^0,c
  6077  001540  0EA1               	movlw	161
  6078  001542  6E1B               	movwf	(isbtw@high+2)^0,c
  6079  001544  0E3E               	movlw	62
  6080  001546  6E1C               	movwf	(isbtw@high+3)^0,c
  6081  001548  EC31  F01D         	call	_isbtw	;wreg free
  6082  00154C  0411               	decf	?_isbtw^0,w,c
  6083  00154E  1012               	iorwf	(?_isbtw+1)^0,w,c
  6084  001550  A4D8               	btfss	status,2,c
  6085  001552  EFAD  F00A         	goto	u6551
  6086  001556  EFAF  F00A         	goto	u6550
  6087  00155A                     u6551:
  6088  00155A  EFD6  F00A         	goto	l5760
  6089  00155E                     u6550:
  6090  00155E  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  6091  001562  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  6092  001566  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  6093  00156A  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  6094  00156E  0E48               	movlw	72
  6095  001570  6E15               	movwf	isbtw@low^0,c
  6096  001572  0EE1               	movlw	225
  6097  001574  6E16               	movwf	(isbtw@low+1)^0,c
  6098  001576  0E7A               	movlw	122
  6099  001578  6E17               	movwf	(isbtw@low+2)^0,c
  6100  00157A  0E3E               	movlw	62
  6101  00157C  6E18               	movwf	(isbtw@low+3)^0,c
  6102  00157E  0E81               	movlw	129
  6103  001580  6E19               	movwf	isbtw@high^0,c
  6104  001582  0E95               	movlw	149
  6105  001584  6E1A               	movwf	(isbtw@high+1)^0,c
  6106  001586  0E83               	movlw	131
  6107  001588  6E1B               	movwf	(isbtw@high+2)^0,c
  6108  00158A  0E3E               	movlw	62
  6109  00158C  6E1C               	movwf	(isbtw@high+3)^0,c
  6110  00158E  EC31  F01D         	call	_isbtw	;wreg free
  6111  001592  0411               	decf	?_isbtw^0,w,c
  6112  001594  1012               	iorwf	(?_isbtw+1)^0,w,c
  6113  001596  A4D8               	btfss	status,2,c
  6114  001598  EFD0  F00A         	goto	u6561
  6115  00159C  EFD2  F00A         	goto	u6560
  6116  0015A0                     u6561:
  6117  0015A0  EFD6  F00A         	goto	l5760
  6118  0015A4                     u6560:
  6119  0015A4                     
  6120                           ;color.c: 219:     {out = 6;}
  6121  0015A4  0E00               	movlw	0
  6122  0015A6  6E3E               	movwf	(determine_color_new@out+1)^0,c
  6123  0015A8  0E06               	movlw	6
  6124  0015AA  6E3D               	movwf	determine_color_new@out^0,c
  6125  0015AC                     l5760:
  6126                           
  6127                           ;color.c: 222:     if (isbtw(RedRatio,0.545,0.555)==1 && isbtw(GreenRatio,0.280,0.286)==
      +                          1 && isbtw(BlueRatio,0.225,0.230)==1)
  6128  0015AC  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  6129  0015B0  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  6130  0015B4  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  6131  0015B8  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  6132  0015BC  0E1F               	movlw	31
  6133  0015BE  6E15               	movwf	isbtw@low^0,c
  6134  0015C0  0E85               	movlw	133
  6135  0015C2  6E16               	movwf	(isbtw@low+1)^0,c
  6136  0015C4  0E0B               	movlw	11
  6137  0015C6  6E17               	movwf	(isbtw@low+2)^0,c
  6138  0015C8  0E3F               	movlw	63
  6139  0015CA  6E18               	movwf	(isbtw@low+3)^0,c
  6140  0015CC  0E7B               	movlw	123
  6141  0015CE  6E19               	movwf	isbtw@high^0,c
  6142  0015D0  0E14               	movlw	20
  6143  0015D2  6E1A               	movwf	(isbtw@high+1)^0,c
  6144  0015D4  0E0E               	movlw	14
  6145  0015D6  6E1B               	movwf	(isbtw@high+2)^0,c
  6146  0015D8  0E3F               	movlw	63
  6147  0015DA  6E1C               	movwf	(isbtw@high+3)^0,c
  6148  0015DC  EC31  F01D         	call	_isbtw	;wreg free
  6149  0015E0  0411               	decf	?_isbtw^0,w,c
  6150  0015E2  1012               	iorwf	(?_isbtw+1)^0,w,c
  6151  0015E4  A4D8               	btfss	status,2,c
  6152  0015E6  EFF7  F00A         	goto	u6571
  6153  0015EA  EFF9  F00A         	goto	u6570
  6154  0015EE                     u6571:
  6155  0015EE  EF43  F00B         	goto	l5768
  6156  0015F2                     u6570:
  6157  0015F2  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  6158  0015F6  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  6159  0015FA  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  6160  0015FE  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  6161  001602  0E29               	movlw	41
  6162  001604  6E15               	movwf	isbtw@low^0,c
  6163  001606  0E5C               	movlw	92
  6164  001608  6E16               	movwf	(isbtw@low+1)^0,c
  6165  00160A  0E8F               	movlw	143
  6166  00160C  6E17               	movwf	(isbtw@low+2)^0,c
  6167  00160E  0E3E               	movlw	62
  6168  001610  6E18               	movwf	(isbtw@low+3)^0,c
  6169  001612  0E98               	movlw	152
  6170  001614  6E19               	movwf	isbtw@high^0,c
  6171  001616  0E6E               	movlw	110
  6172  001618  6E1A               	movwf	(isbtw@high+1)^0,c
  6173  00161A  0E92               	movlw	146
  6174  00161C  6E1B               	movwf	(isbtw@high+2)^0,c
  6175  00161E  0E3E               	movlw	62
  6176  001620  6E1C               	movwf	(isbtw@high+3)^0,c
  6177  001622  EC31  F01D         	call	_isbtw	;wreg free
  6178  001626  0411               	decf	?_isbtw^0,w,c
  6179  001628  1012               	iorwf	(?_isbtw+1)^0,w,c
  6180  00162A  A4D8               	btfss	status,2,c
  6181  00162C  EF1A  F00B         	goto	u6581
  6182  001630  EF1C  F00B         	goto	u6580
  6183  001634                     u6581:
  6184  001634  EF43  F00B         	goto	l5768
  6185  001638                     u6580:
  6186  001638  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  6187  00163C  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  6188  001640  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  6189  001644  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  6190  001648  0E66               	movlw	102
  6191  00164A  6E15               	movwf	isbtw@low^0,c
  6192  00164C  0E66               	movlw	102
  6193  00164E  6E16               	movwf	(isbtw@low+1)^0,c
  6194  001650  0E66               	movlw	102
  6195  001652  6E17               	movwf	(isbtw@low+2)^0,c
  6196  001654  0E3E               	movlw	62
  6197  001656  6E18               	movwf	(isbtw@low+3)^0,c
  6198  001658  0E1F               	movlw	31
  6199  00165A  6E19               	movwf	isbtw@high^0,c
  6200  00165C  0E85               	movlw	133
  6201  00165E  6E1A               	movwf	(isbtw@high+1)^0,c
  6202  001660  0E6B               	movlw	107
  6203  001662  6E1B               	movwf	(isbtw@high+2)^0,c
  6204  001664  0E3E               	movlw	62
  6205  001666  6E1C               	movwf	(isbtw@high+3)^0,c
  6206  001668  EC31  F01D         	call	_isbtw	;wreg free
  6207  00166C  0411               	decf	?_isbtw^0,w,c
  6208  00166E  1012               	iorwf	(?_isbtw+1)^0,w,c
  6209  001670  A4D8               	btfss	status,2,c
  6210  001672  EF3D  F00B         	goto	u6591
  6211  001676  EF3F  F00B         	goto	u6590
  6212  00167A                     u6591:
  6213  00167A  EF43  F00B         	goto	l5768
  6214  00167E                     u6590:
  6215  00167E                     
  6216                           ;color.c: 223:     {out = 7;}
  6217  00167E  0E00               	movlw	0
  6218  001680  6E3E               	movwf	(determine_color_new@out+1)^0,c
  6219  001682  0E07               	movlw	7
  6220  001684  6E3D               	movwf	determine_color_new@out^0,c
  6221  001686                     l5768:
  6222                           
  6223                           ;color.c: 226:     if (isbtw(RedRatio,0.548,0.560)==1 && isbtw(GreenRatio,0.265,0.279)==
      +                          1 && isbtw(BlueRatio,0.202,0.212)==1)
  6224  001686  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  6225  00168A  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  6226  00168E  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  6227  001692  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  6228  001696  0EBA               	movlw	186
  6229  001698  6E15               	movwf	isbtw@low^0,c
  6230  00169A  0E49               	movlw	73
  6231  00169C  6E16               	movwf	(isbtw@low+1)^0,c
  6232  00169E  0E0C               	movlw	12
  6233  0016A0  6E17               	movwf	(isbtw@low+2)^0,c
  6234  0016A2  0E3F               	movlw	63
  6235  0016A4  6E18               	movwf	(isbtw@low+3)^0,c
  6236  0016A6  0E29               	movlw	41
  6237  0016A8  6E19               	movwf	isbtw@high^0,c
  6238  0016AA  0E5C               	movlw	92
  6239  0016AC  6E1A               	movwf	(isbtw@high+1)^0,c
  6240  0016AE  0E0F               	movlw	15
  6241  0016B0  6E1B               	movwf	(isbtw@high+2)^0,c
  6242  0016B2  0E3F               	movlw	63
  6243  0016B4  6E1C               	movwf	(isbtw@high+3)^0,c
  6244  0016B6  EC31  F01D         	call	_isbtw	;wreg free
  6245  0016BA  0411               	decf	?_isbtw^0,w,c
  6246  0016BC  1012               	iorwf	(?_isbtw+1)^0,w,c
  6247  0016BE  A4D8               	btfss	status,2,c
  6248  0016C0  EF64  F00B         	goto	u6601
  6249  0016C4  EF66  F00B         	goto	u6600
  6250  0016C8                     u6601:
  6251  0016C8  EFB0  F00B         	goto	l5776
  6252  0016CC                     u6600:
  6253  0016CC  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  6254  0016D0  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  6255  0016D4  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  6256  0016D8  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  6257  0016DC  0E14               	movlw	20
  6258  0016DE  6E15               	movwf	isbtw@low^0,c
  6259  0016E0  0EAE               	movlw	174
  6260  0016E2  6E16               	movwf	(isbtw@low+1)^0,c
  6261  0016E4  0E87               	movlw	135
  6262  0016E6  6E17               	movwf	(isbtw@low+2)^0,c
  6263  0016E8  0E3E               	movlw	62
  6264  0016EA  6E18               	movwf	(isbtw@low+3)^0,c
  6265  0016EC  0E17               	movlw	23
  6266  0016EE  6E19               	movwf	isbtw@high^0,c
  6267  0016F0  0ED9               	movlw	217
  6268  0016F2  6E1A               	movwf	(isbtw@high+1)^0,c
  6269  0016F4  0E8E               	movlw	142
  6270  0016F6  6E1B               	movwf	(isbtw@high+2)^0,c
  6271  0016F8  0E3E               	movlw	62
  6272  0016FA  6E1C               	movwf	(isbtw@high+3)^0,c
  6273  0016FC  EC31  F01D         	call	_isbtw	;wreg free
  6274  001700  0411               	decf	?_isbtw^0,w,c
  6275  001702  1012               	iorwf	(?_isbtw+1)^0,w,c
  6276  001704  A4D8               	btfss	status,2,c
  6277  001706  EF87  F00B         	goto	u6611
  6278  00170A  EF89  F00B         	goto	u6610
  6279  00170E                     u6611:
  6280  00170E  EFB0  F00B         	goto	l5776
  6281  001712                     u6610:
  6282  001712  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  6283  001716  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  6284  00171A  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  6285  00171E  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  6286  001722  0E17               	movlw	23
  6287  001724  6E15               	movwf	isbtw@low^0,c
  6288  001726  0ED9               	movlw	217
  6289  001728  6E16               	movwf	(isbtw@low+1)^0,c
  6290  00172A  0E4E               	movlw	78
  6291  00172C  6E17               	movwf	(isbtw@low+2)^0,c
  6292  00172E  0E3E               	movlw	62
  6293  001730  6E18               	movwf	(isbtw@low+3)^0,c
  6294  001732  0E87               	movlw	135
  6295  001734  6E19               	movwf	isbtw@high^0,c
  6296  001736  0E16               	movlw	22
  6297  001738  6E1A               	movwf	(isbtw@high+1)^0,c
  6298  00173A  0E59               	movlw	89
  6299  00173C  6E1B               	movwf	(isbtw@high+2)^0,c
  6300  00173E  0E3E               	movlw	62
  6301  001740  6E1C               	movwf	(isbtw@high+3)^0,c
  6302  001742  EC31  F01D         	call	_isbtw	;wreg free
  6303  001746  0411               	decf	?_isbtw^0,w,c
  6304  001748  1012               	iorwf	(?_isbtw+1)^0,w,c
  6305  00174A  A4D8               	btfss	status,2,c
  6306  00174C  EFAA  F00B         	goto	u6621
  6307  001750  EFAC  F00B         	goto	u6620
  6308  001754                     u6621:
  6309  001754  EFB0  F00B         	goto	l5776
  6310  001758                     u6620:
  6311  001758                     
  6312                           ;color.c: 227:     {out = 8;}
  6313  001758  0E00               	movlw	0
  6314  00175A  6E3E               	movwf	(determine_color_new@out+1)^0,c
  6315  00175C  0E08               	movlw	8
  6316  00175E  6E3D               	movwf	determine_color_new@out^0,c
  6317  001760                     l5776:
  6318                           
  6319                           ;color.c: 229:     return out;
  6320  001760  C03D  F037         	movff	determine_color_new@out,?_determine_color_new
  6321  001764  C03E  F038         	movff	determine_color_new@out+1,?_determine_color_new+1
  6322  001768  0012               	return		;funcret
  6323  00176A                     __end_of_determine_color_new:
  6324                           	callstack 0
  6325                           
  6326 ;; *************** function _isbtw *****************
  6327 ;; Defined at:
  6328 ;;		line 181 in file "color.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  num             4   16[COMRAM] float 
  6331 ;;  low             4   20[COMRAM] float 
  6332 ;;  high            4   24[COMRAM] float 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;		None
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  2   16[COMRAM] unsigned int 
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6344 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6347 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;Total ram usage:       12 bytes
  6349 ;; Hardware stack levels used: 1
  6350 ;; Hardware stack levels required when called: 3
  6351 ;; This function calls:
  6352 ;;		___flge
  6353 ;; This function is called by:
  6354 ;;		_determine_color_new
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text29
  6359  003A62                     __ptext29:
  6360                           	callstack 0
  6361  003A62                     _isbtw:
  6362                           	callstack 26
  6363  003A62                     
  6364                           ;color.c: 182:     if (num>=low && num<=high){return 1;}
  6365  003A62  C011  F005         	movff	isbtw@num,___flge@ff1
  6366  003A66  C012  F006         	movff	isbtw@num+1,___flge@ff1+1
  6367  003A6A  C013  F007         	movff	isbtw@num+2,___flge@ff1+2
  6368  003A6E  C014  F008         	movff	isbtw@num+3,___flge@ff1+3
  6369  003A72  C015  F009         	movff	isbtw@low,___flge@ff2
  6370  003A76  C016  F00A         	movff	isbtw@low+1,___flge@ff2+1
  6371  003A7A  C017  F00B         	movff	isbtw@low+2,___flge@ff2+2
  6372  003A7E  C018  F00C         	movff	isbtw@low+3,___flge@ff2+3
  6373  003A82  ECE7  F01B         	call	___flge	;wreg free
  6374  003A86  A0D8               	btfss	status,0,c
  6375  003A88  EF48  F01D         	goto	u5541
  6376  003A8C  EF4A  F01D         	goto	u5540
  6377  003A90                     u5541:
  6378  003A90  EF69  F01D         	goto	l5228
  6379  003A94                     u5540:
  6380  003A94  C019  F005         	movff	isbtw@high,___flge@ff1
  6381  003A98  C01A  F006         	movff	isbtw@high+1,___flge@ff1+1
  6382  003A9C  C01B  F007         	movff	isbtw@high+2,___flge@ff1+2
  6383  003AA0  C01C  F008         	movff	isbtw@high+3,___flge@ff1+3
  6384  003AA4  C011  F009         	movff	isbtw@num,___flge@ff2
  6385  003AA8  C012  F00A         	movff	isbtw@num+1,___flge@ff2+1
  6386  003AAC  C013  F00B         	movff	isbtw@num+2,___flge@ff2+2
  6387  003AB0  C014  F00C         	movff	isbtw@num+3,___flge@ff2+3
  6388  003AB4  ECE7  F01B         	call	___flge	;wreg free
  6389  003AB8  A0D8               	btfss	status,0,c
  6390  003ABA  EF61  F01D         	goto	u5551
  6391  003ABE  EF63  F01D         	goto	u5550
  6392  003AC2                     u5551:
  6393  003AC2  EF69  F01D         	goto	l5228
  6394  003AC6                     u5550:
  6395  003AC6  0E00               	movlw	0
  6396  003AC8  6E12               	movwf	(?_isbtw+1)^0,c
  6397  003ACA  0E01               	movlw	1
  6398  003ACC  6E11               	movwf	?_isbtw^0,c
  6399  003ACE  EF6D  F01D         	goto	l85
  6400  003AD2                     l5228:
  6401  003AD2  0E00               	movlw	0
  6402  003AD4  6E12               	movwf	(?_isbtw+1)^0,c
  6403  003AD6  0E00               	movlw	0
  6404  003AD8  6E11               	movwf	?_isbtw^0,c
  6405  003ADA                     l85:
  6406  003ADA  0012               	return		;funcret
  6407  003ADC                     __end_of_isbtw:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function ___flge *****************
  6411 ;; Defined at:
  6412 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  ff1             4    4[COMRAM] unsigned int 
  6415 ;;  ff2             4    8[COMRAM] unsigned int 
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;		None               void
  6420 ;; Registers used:
  6421 ;;		wreg, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6427 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6430 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6431 ;;Total ram usage:       12 bytes
  6432 ;; Hardware stack levels used: 1
  6433 ;; Hardware stack levels required when called: 2
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_isbtw
  6438 ;;		_sqrtf
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text30
  6443  0037CE                     __ptext30:
  6444                           	callstack 0
  6445  0037CE                     ___flge:
  6446                           	callstack 26
  6447  0037CE  0E00               	movlw	0
  6448  0037D0  1405               	andwf	___flge@ff1^0,w,c
  6449  0037D2  6E0D               	movwf	??___flge^0,c
  6450  0037D4  0E00               	movlw	0
  6451  0037D6  1406               	andwf	(___flge@ff1+1)^0,w,c
  6452  0037D8  6E0E               	movwf	(??___flge+1)^0,c
  6453  0037DA  0E80               	movlw	128
  6454  0037DC  1407               	andwf	(___flge@ff1+2)^0,w,c
  6455  0037DE  6E0F               	movwf	(??___flge+2)^0,c
  6456  0037E0  0E7F               	movlw	127
  6457  0037E2  1408               	andwf	(___flge@ff1+3)^0,w,c
  6458  0037E4  6E10               	movwf	(??___flge+3)^0,c
  6459  0037E6  500D               	movf	??___flge^0,w,c
  6460  0037E8  100E               	iorwf	(??___flge+1)^0,w,c
  6461  0037EA  100F               	iorwf	(??___flge+2)^0,w,c
  6462  0037EC  1010               	iorwf	(??___flge+3)^0,w,c
  6463  0037EE  A4D8               	btfss	status,2,c
  6464  0037F0  EFFC  F01B         	goto	u5381
  6465  0037F4  EFFE  F01B         	goto	u5380
  6466  0037F8                     u5381:
  6467  0037F8  EF06  F01C         	goto	l5064
  6468  0037FC                     u5380:
  6469  0037FC  0E00               	movlw	0
  6470  0037FE  6E05               	movwf	___flge@ff1^0,c
  6471  003800  0E00               	movlw	0
  6472  003802  6E06               	movwf	(___flge@ff1+1)^0,c
  6473  003804  0E00               	movlw	0
  6474  003806  6E07               	movwf	(___flge@ff1+2)^0,c
  6475  003808  0E00               	movlw	0
  6476  00380A  6E08               	movwf	(___flge@ff1+3)^0,c
  6477  00380C                     l5064:
  6478  00380C  0E00               	movlw	0
  6479  00380E  1409               	andwf	___flge@ff2^0,w,c
  6480  003810  6E0D               	movwf	??___flge^0,c
  6481  003812  0E00               	movlw	0
  6482  003814  140A               	andwf	(___flge@ff2+1)^0,w,c
  6483  003816  6E0E               	movwf	(??___flge+1)^0,c
  6484  003818  0E80               	movlw	128
  6485  00381A  140B               	andwf	(___flge@ff2+2)^0,w,c
  6486  00381C  6E0F               	movwf	(??___flge+2)^0,c
  6487  00381E  0E7F               	movlw	127
  6488  003820  140C               	andwf	(___flge@ff2+3)^0,w,c
  6489  003822  6E10               	movwf	(??___flge+3)^0,c
  6490  003824  500D               	movf	??___flge^0,w,c
  6491  003826  100E               	iorwf	(??___flge+1)^0,w,c
  6492  003828  100F               	iorwf	(??___flge+2)^0,w,c
  6493  00382A  1010               	iorwf	(??___flge+3)^0,w,c
  6494  00382C  A4D8               	btfss	status,2,c
  6495  00382E  EF1B  F01C         	goto	u5391
  6496  003832  EF1D  F01C         	goto	u5390
  6497  003836                     u5391:
  6498  003836  EF25  F01C         	goto	l5068
  6499  00383A                     u5390:
  6500  00383A  0E00               	movlw	0
  6501  00383C  6E09               	movwf	___flge@ff2^0,c
  6502  00383E  0E00               	movlw	0
  6503  003840  6E0A               	movwf	(___flge@ff2+1)^0,c
  6504  003842  0E00               	movlw	0
  6505  003844  6E0B               	movwf	(___flge@ff2+2)^0,c
  6506  003846  0E00               	movlw	0
  6507  003848  6E0C               	movwf	(___flge@ff2+3)^0,c
  6508  00384A                     l5068:
  6509  00384A  AE08               	btfss	(___flge@ff1+3)^0,7,c
  6510  00384C  EF2A  F01C         	goto	u5401
  6511  003850  EF2C  F01C         	goto	u5400
  6512  003854                     u5401:
  6513  003854  EF35  F01C         	goto	l5072
  6514  003858                     u5400:
  6515  003858  6C05               	negf	___flge@ff1^0,c
  6516  00385A  1E06               	comf	(___flge@ff1+1)^0,f,c
  6517  00385C  B0D8               	btfsc	status,0,c
  6518  00385E  2A06               	incf	(___flge@ff1+1)^0,f,c
  6519  003860  1E07               	comf	(___flge@ff1+2)^0,f,c
  6520  003862  B0D8               	btfsc	status,0,c
  6521  003864  2A07               	incf	(___flge@ff1+2)^0,f,c
  6522  003866  0E80               	movlw	128
  6523  003868  5608               	subfwb	(___flge@ff1+3)^0,f,c
  6524  00386A                     l5072:
  6525  00386A  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  6526  00386C  EF3A  F01C         	goto	u5411
  6527  003870  EF3C  F01C         	goto	u5410
  6528  003874                     u5411:
  6529  003874  EF45  F01C         	goto	l693
  6530  003878                     u5410:
  6531  003878  6C09               	negf	___flge@ff2^0,c
  6532  00387A  1E0A               	comf	(___flge@ff2+1)^0,f,c
  6533  00387C  B0D8               	btfsc	status,0,c
  6534  00387E  2A0A               	incf	(___flge@ff2+1)^0,f,c
  6535  003880  1E0B               	comf	(___flge@ff2+2)^0,f,c
  6536  003882  B0D8               	btfsc	status,0,c
  6537  003884  2A0B               	incf	(___flge@ff2+2)^0,f,c
  6538  003886  0E80               	movlw	128
  6539  003888  560C               	subfwb	(___flge@ff2+3)^0,f,c
  6540  00388A                     l693:
  6541  00388A  0E00               	movlw	0
  6542  00388C  1A05               	xorwf	___flge@ff1^0,f,c
  6543  00388E  0E00               	movlw	0
  6544  003890  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  6545  003892  0E00               	movlw	0
  6546  003894  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  6547  003896  0E80               	movlw	128
  6548  003898  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  6549  00389A  0E00               	movlw	0
  6550  00389C  1A09               	xorwf	___flge@ff2^0,f,c
  6551  00389E  0E00               	movlw	0
  6552  0038A0  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  6553  0038A2  0E00               	movlw	0
  6554  0038A4  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  6555  0038A6  0E80               	movlw	128
  6556  0038A8  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  6557  0038AA  5009               	movf	___flge@ff2^0,w,c
  6558  0038AC  5C05               	subwf	___flge@ff1^0,w,c
  6559  0038AE  500A               	movf	(___flge@ff2+1)^0,w,c
  6560  0038B0  5806               	subwfb	(___flge@ff1+1)^0,w,c
  6561  0038B2  500B               	movf	(___flge@ff2+2)^0,w,c
  6562  0038B4  5807               	subwfb	(___flge@ff1+2)^0,w,c
  6563  0038B6  500C               	movf	(___flge@ff2+3)^0,w,c
  6564  0038B8  5808               	subwfb	(___flge@ff1+3)^0,w,c
  6565  0038BA  B0D8               	btfsc	status,0,c
  6566  0038BC  EF62  F01C         	goto	u5421
  6567  0038C0  EF64  F01C         	goto	u5420
  6568  0038C4                     u5421:
  6569  0038C4  EF67  F01C         	goto	l5078
  6570  0038C8                     u5420:
  6571  0038C8  90D8               	bcf	status,0,c
  6572  0038CA  EF68  F01C         	goto	l698
  6573  0038CE                     l5078:
  6574  0038CE  80D8               	bsf	status,0,c
  6575  0038D0                     l698:
  6576  0038D0  0012               	return		;funcret
  6577  0038D2                     __end_of___flge:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function ___xxtofl *****************
  6581 ;; Defined at:
  6582 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  sign            1    wreg     unsigned char 
  6585 ;;  val             4   10[COMRAM] long 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  sign            1   18[COMRAM] unsigned char 
  6588 ;;  arg             4   20[COMRAM] unsigned long 
  6589 ;;  exp             1   19[COMRAM] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  4   10[COMRAM] unsigned char 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6600 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6602 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;Total ram usage:       14 bytes
  6604 ;; Hardware stack levels used: 1
  6605 ;; Hardware stack levels required when called: 2
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_determine_color_new
  6610 ;;		_main
  6611 ;;		_determine_color1
  6612 ;;		_determine_color2
  6613 ;;		_determine_color3
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text31
  6618  003084                     __ptext31:
  6619                           	callstack 0
  6620  003084                     ___xxtofl:
  6621                           	callstack 27
  6622                           
  6623                           ;incstack = 0
  6624                           ;___xxtofl@sign stored from wreg
  6625  003084  6E13               	movwf	___xxtofl@sign^0,c
  6626  003086  5013               	movf	___xxtofl@sign^0,w,c
  6627  003088  B4D8               	btfsc	status,2,c
  6628  00308A  EF49  F018         	goto	u6251
  6629  00308E  EF4B  F018         	goto	u6250
  6630  003092                     u6251:
  6631  003092  EF6D  F018         	goto	l1083
  6632  003096                     u6250:
  6633  003096  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  6634  003098  EF52  F018         	goto	u6260
  6635  00309C  EF50  F018         	goto	u6261
  6636  0030A0                     u6261:
  6637  0030A0  EF6D  F018         	goto	l1083
  6638  0030A4                     u6260:
  6639  0030A4  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  6640  0030A8  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  6641  0030AC  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  6642  0030B0  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  6643  0030B4  1E0F               	comf	??___xxtofl^0,f,c
  6644  0030B6  1E10               	comf	(??___xxtofl+1)^0,f,c
  6645  0030B8  1E11               	comf	(??___xxtofl+2)^0,f,c
  6646  0030BA  1E12               	comf	(??___xxtofl+3)^0,f,c
  6647  0030BC  2A0F               	incf	??___xxtofl^0,f,c
  6648  0030BE  0E00               	movlw	0
  6649  0030C0  2210               	addwfc	(??___xxtofl+1)^0,f,c
  6650  0030C2  2211               	addwfc	(??___xxtofl+2)^0,f,c
  6651  0030C4  2212               	addwfc	(??___xxtofl+3)^0,f,c
  6652  0030C6  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  6653  0030CA  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  6654  0030CE  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  6655  0030D2  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  6656  0030D6  EF75  F018         	goto	l5636
  6657  0030DA                     l1083:
  6658  0030DA  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  6659  0030DE  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6660  0030E2  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6661  0030E6  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6662  0030EA                     l5636:
  6663  0030EA  500B               	movf	___xxtofl@val^0,w,c
  6664  0030EC  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  6665  0030EE  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  6666  0030F0  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  6667  0030F2  A4D8               	btfss	status,2,c
  6668  0030F4  EF7E  F018         	goto	u6271
  6669  0030F8  EF80  F018         	goto	u6270
  6670  0030FC                     u6271:
  6671  0030FC  EF8A  F018         	goto	l5642
  6672  003100                     u6270:
  6673  003100  0E00               	movlw	0
  6674  003102  6E0B               	movwf	?___xxtofl^0,c
  6675  003104  0E00               	movlw	0
  6676  003106  6E0C               	movwf	(?___xxtofl+1)^0,c
  6677  003108  0E00               	movlw	0
  6678  00310A  6E0D               	movwf	(?___xxtofl+2)^0,c
  6679  00310C  0E00               	movlw	0
  6680  00310E  6E0E               	movwf	(?___xxtofl+3)^0,c
  6681  003110  EF1B  F019         	goto	l1086
  6682  003114                     l5642:
  6683  003114  0E96               	movlw	150
  6684  003116  6E14               	movwf	___xxtofl@exp^0,c
  6685  003118  EF94  F018         	goto	l5646
  6686  00311C                     l5644:
  6687  00311C  2A14               	incf	___xxtofl@exp^0,f,c
  6688  00311E  90D8               	bcf	status,0,c
  6689  003120  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  6690  003122  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  6691  003124  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  6692  003126  3215               	rrcf	___xxtofl@arg^0,f,c
  6693  003128                     l5646:
  6694  003128  0E00               	movlw	0
  6695  00312A  1415               	andwf	___xxtofl@arg^0,w,c
  6696  00312C  6E0F               	movwf	??___xxtofl^0,c
  6697  00312E  0E00               	movlw	0
  6698  003130  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  6699  003132  6E10               	movwf	(??___xxtofl+1)^0,c
  6700  003134  0E00               	movlw	0
  6701  003136  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  6702  003138  6E11               	movwf	(??___xxtofl+2)^0,c
  6703  00313A  0EFE               	movlw	254
  6704  00313C  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  6705  00313E  6E12               	movwf	(??___xxtofl+3)^0,c
  6706  003140  500F               	movf	??___xxtofl^0,w,c
  6707  003142  1010               	iorwf	(??___xxtofl+1)^0,w,c
  6708  003144  1011               	iorwf	(??___xxtofl+2)^0,w,c
  6709  003146  1012               	iorwf	(??___xxtofl+3)^0,w,c
  6710  003148  A4D8               	btfss	status,2,c
  6711  00314A  EFA9  F018         	goto	u6281
  6712  00314E  EFAB  F018         	goto	u6280
  6713  003152                     u6281:
  6714  003152  EF8E  F018         	goto	l5644
  6715  003156                     u6280:
  6716  003156  EFB9  F018         	goto	l1090
  6717  00315A                     l5648:
  6718  00315A  2A14               	incf	___xxtofl@exp^0,f,c
  6719  00315C  0E01               	movlw	1
  6720  00315E  2615               	addwf	___xxtofl@arg^0,f,c
  6721  003160  0E00               	movlw	0
  6722  003162  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  6723  003164  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  6724  003166  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  6725  003168  90D8               	bcf	status,0,c
  6726  00316A  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  6727  00316C  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  6728  00316E  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  6729  003170  3215               	rrcf	___xxtofl@arg^0,f,c
  6730  003172                     l1090:
  6731  003172  0E00               	movlw	0
  6732  003174  1415               	andwf	___xxtofl@arg^0,w,c
  6733  003176  6E0F               	movwf	??___xxtofl^0,c
  6734  003178  0E00               	movlw	0
  6735  00317A  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  6736  00317C  6E10               	movwf	(??___xxtofl+1)^0,c
  6737  00317E  0E00               	movlw	0
  6738  003180  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  6739  003182  6E11               	movwf	(??___xxtofl+2)^0,c
  6740  003184  0EFF               	movlw	255
  6741  003186  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  6742  003188  6E12               	movwf	(??___xxtofl+3)^0,c
  6743  00318A  500F               	movf	??___xxtofl^0,w,c
  6744  00318C  1010               	iorwf	(??___xxtofl+1)^0,w,c
  6745  00318E  1011               	iorwf	(??___xxtofl+2)^0,w,c
  6746  003190  1012               	iorwf	(??___xxtofl+3)^0,w,c
  6747  003192  A4D8               	btfss	status,2,c
  6748  003194  EFCE  F018         	goto	u6291
  6749  003198  EFD0  F018         	goto	u6290
  6750  00319C                     u6291:
  6751  00319C  EFAD  F018         	goto	l5648
  6752  0031A0                     u6290:
  6753  0031A0  EFD8  F018         	goto	l5656
  6754  0031A4                     l5654:
  6755  0031A4  0614               	decf	___xxtofl@exp^0,f,c
  6756  0031A6  90D8               	bcf	status,0,c
  6757  0031A8  3615               	rlcf	___xxtofl@arg^0,f,c
  6758  0031AA  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  6759  0031AC  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  6760  0031AE  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  6761  0031B0                     l5656:
  6762  0031B0  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  6763  0031B2  EFDD  F018         	goto	u6301
  6764  0031B6  EFDF  F018         	goto	u6300
  6765  0031BA                     u6301:
  6766  0031BA  EFE7  F018         	goto	l1097
  6767  0031BE                     u6300:
  6768  0031BE  0E02               	movlw	2
  6769  0031C0  6014               	cpfslt	___xxtofl@exp^0,c
  6770  0031C2  EFE5  F018         	goto	u6311
  6771  0031C6  EFE7  F018         	goto	u6310
  6772  0031CA                     u6311:
  6773  0031CA  EFD2  F018         	goto	l5654
  6774  0031CE                     u6310:
  6775  0031CE                     l1097:
  6776  0031CE  B014               	btfsc	___xxtofl@exp^0,0,c
  6777  0031D0  EFEC  F018         	goto	u6321
  6778  0031D4  EFEE  F018         	goto	u6320
  6779  0031D8                     u6321:
  6780  0031D8  EFEF  F018         	goto	l5662
  6781  0031DC                     u6320:
  6782  0031DC  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  6783  0031DE                     l5662:
  6784  0031DE  90D8               	bcf	status,0,c
  6785  0031E0  3214               	rrcf	___xxtofl@exp^0,f,c
  6786  0031E2  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  6787  0031E6  6A10               	clrf	(??___xxtofl+1)^0,c
  6788  0031E8  6A11               	clrf	(??___xxtofl+2)^0,c
  6789  0031EA  6A12               	clrf	(??___xxtofl+3)^0,c
  6790  0031EC  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  6791  0031F0  6A11               	clrf	(??___xxtofl+2)^0,c
  6792  0031F2  6A10               	clrf	(??___xxtofl+1)^0,c
  6793  0031F4  6A0F               	clrf	??___xxtofl^0,c
  6794  0031F6  500F               	movf	??___xxtofl^0,w,c
  6795  0031F8  1215               	iorwf	___xxtofl@arg^0,f,c
  6796  0031FA  5010               	movf	(??___xxtofl+1)^0,w,c
  6797  0031FC  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  6798  0031FE  5011               	movf	(??___xxtofl+2)^0,w,c
  6799  003200  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  6800  003202  5012               	movf	(??___xxtofl+3)^0,w,c
  6801  003204  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  6802  003206  5013               	movf	___xxtofl@sign^0,w,c
  6803  003208  B4D8               	btfsc	status,2,c
  6804  00320A  EF09  F019         	goto	u6331
  6805  00320E  EF0B  F019         	goto	u6330
  6806  003212                     u6331:
  6807  003212  EF13  F019         	goto	l5672
  6808  003216                     u6330:
  6809  003216  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  6810  003218  EF12  F019         	goto	u6340
  6811  00321C  EF10  F019         	goto	u6341
  6812  003220                     u6341:
  6813  003220  EF13  F019         	goto	l5672
  6814  003224                     u6340:
  6815  003224  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  6816  003226                     l5672:
  6817  003226  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  6818  00322A  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  6819  00322E  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  6820  003232  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  6821  003236                     l1086:
  6822  003236  0012               	return		;funcret
  6823  003238                     __end_of___xxtofl:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function ___fldiv *****************
  6827 ;; Defined at:
  6828 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  b               4   29[COMRAM] unsigned char 
  6831 ;;  a               4   33[COMRAM] unsigned char 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  grs             4   48[COMRAM] unsigned long 
  6834 ;;  rem             4   41[COMRAM] unsigned long 
  6835 ;;  new_exp         2   46[COMRAM] short 
  6836 ;;  aexp            1   53[COMRAM] unsigned char 
  6837 ;;  bexp            1   52[COMRAM] unsigned char 
  6838 ;;  sign            1   45[COMRAM] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  4   29[COMRAM] unsigned char 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6848 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;Total ram usage:       25 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; Hardware stack levels required when called: 2
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_determine_color_new
  6859 ;;		_main
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text32
  6864  00266A                     __ptext32:
  6865                           	callstack 0
  6866  00266A                     ___fldiv:
  6867                           	callstack 27
  6868  00266A  5021               	movf	(___fldiv@b+3)^0,w,c
  6869  00266C  0B80               	andlw	128
  6870  00266E  6E2E               	movwf	___fldiv@sign^0,c
  6871  002670  5021               	movf	(___fldiv@b+3)^0,w,c
  6872  002672  2421               	addwf	(___fldiv@b+3)^0,w,c
  6873  002674  6E35               	movwf	___fldiv@bexp^0,c
  6874  002676  AE20               	btfss	(___fldiv@b+2)^0,7,c
  6875  002678  EF40  F013         	goto	u6021
  6876  00267C  EF42  F013         	goto	u6020
  6877  002680                     u6021:
  6878  002680  EF43  F013         	goto	l5498
  6879  002684                     u6020:
  6880  002684  8035               	bsf	___fldiv@bexp^0,0,c
  6881  002686                     l5498:
  6882  002686  5035               	movf	___fldiv@bexp^0,w,c
  6883  002688  B4D8               	btfsc	status,2,c
  6884  00268A  EF49  F013         	goto	u6031
  6885  00268E  EF4B  F013         	goto	u6030
  6886  002692                     u6031:
  6887  002692  EF60  F013         	goto	l5508
  6888  002696                     u6030:
  6889  002696  2835               	incf	___fldiv@bexp^0,w,c
  6890  002698  A4D8               	btfss	status,2,c
  6891  00269A  EF51  F013         	goto	u6041
  6892  00269E  EF53  F013         	goto	u6040
  6893  0026A2                     u6041:
  6894  0026A2  EF5B  F013         	goto	l5504
  6895  0026A6                     u6040:
  6896  0026A6  0E00               	movlw	0
  6897  0026A8  6E1E               	movwf	___fldiv@b^0,c
  6898  0026AA  0E00               	movlw	0
  6899  0026AC  6E1F               	movwf	(___fldiv@b+1)^0,c
  6900  0026AE  0E00               	movlw	0
  6901  0026B0  6E20               	movwf	(___fldiv@b+2)^0,c
  6902  0026B2  0E00               	movlw	0
  6903  0026B4  6E21               	movwf	(___fldiv@b+3)^0,c
  6904  0026B6                     l5504:
  6905  0026B6  8E20               	bsf	(___fldiv@b+2)^0,7,c
  6906  0026B8  0E00               	movlw	0
  6907  0026BA  6E21               	movwf	(___fldiv@b+3)^0,c
  6908  0026BC  EF68  F013         	goto	l5510
  6909  0026C0                     l5508:
  6910  0026C0  0E00               	movlw	0
  6911  0026C2  6E1E               	movwf	___fldiv@b^0,c
  6912  0026C4  0E00               	movlw	0
  6913  0026C6  6E1F               	movwf	(___fldiv@b+1)^0,c
  6914  0026C8  0E00               	movlw	0
  6915  0026CA  6E20               	movwf	(___fldiv@b+2)^0,c
  6916  0026CC  0E00               	movlw	0
  6917  0026CE  6E21               	movwf	(___fldiv@b+3)^0,c
  6918  0026D0                     l5510:
  6919  0026D0  5025               	movf	(___fldiv@a+3)^0,w,c
  6920  0026D2  0B80               	andlw	128
  6921  0026D4  1A2E               	xorwf	___fldiv@sign^0,f,c
  6922  0026D6  5025               	movf	(___fldiv@a+3)^0,w,c
  6923  0026D8  2425               	addwf	(___fldiv@a+3)^0,w,c
  6924  0026DA  6E36               	movwf	___fldiv@aexp^0,c
  6925  0026DC  AE24               	btfss	(___fldiv@a+2)^0,7,c
  6926  0026DE  EF73  F013         	goto	u6051
  6927  0026E2  EF75  F013         	goto	u6050
  6928  0026E6                     u6051:
  6929  0026E6  EF76  F013         	goto	l5518
  6930  0026EA                     u6050:
  6931  0026EA  8036               	bsf	___fldiv@aexp^0,0,c
  6932  0026EC                     l5518:
  6933  0026EC  5036               	movf	___fldiv@aexp^0,w,c
  6934  0026EE  B4D8               	btfsc	status,2,c
  6935  0026F0  EF7C  F013         	goto	u6061
  6936  0026F4  EF7E  F013         	goto	u6060
  6937  0026F8                     u6061:
  6938  0026F8  EF93  F013         	goto	l5528
  6939  0026FC                     u6060:
  6940  0026FC  2836               	incf	___fldiv@aexp^0,w,c
  6941  0026FE  A4D8               	btfss	status,2,c
  6942  002700  EF84  F013         	goto	u6071
  6943  002704  EF86  F013         	goto	u6070
  6944  002708                     u6071:
  6945  002708  EF8E  F013         	goto	l5524
  6946  00270C                     u6070:
  6947  00270C  0E00               	movlw	0
  6948  00270E  6E22               	movwf	___fldiv@a^0,c
  6949  002710  0E00               	movlw	0
  6950  002712  6E23               	movwf	(___fldiv@a+1)^0,c
  6951  002714  0E00               	movlw	0
  6952  002716  6E24               	movwf	(___fldiv@a+2)^0,c
  6953  002718  0E00               	movlw	0
  6954  00271A  6E25               	movwf	(___fldiv@a+3)^0,c
  6955  00271C                     l5524:
  6956  00271C  8E24               	bsf	(___fldiv@a+2)^0,7,c
  6957  00271E  0E00               	movlw	0
  6958  002720  6E25               	movwf	(___fldiv@a+3)^0,c
  6959  002722  EF9B  F013         	goto	l5530
  6960  002726                     l5528:
  6961  002726  0E00               	movlw	0
  6962  002728  6E22               	movwf	___fldiv@a^0,c
  6963  00272A  0E00               	movlw	0
  6964  00272C  6E23               	movwf	(___fldiv@a+1)^0,c
  6965  00272E  0E00               	movlw	0
  6966  002730  6E24               	movwf	(___fldiv@a+2)^0,c
  6967  002732  0E00               	movlw	0
  6968  002734  6E25               	movwf	(___fldiv@a+3)^0,c
  6969  002736                     l5530:
  6970  002736  5022               	movf	___fldiv@a^0,w,c
  6971  002738  1023               	iorwf	(___fldiv@a+1)^0,w,c
  6972  00273A  1024               	iorwf	(___fldiv@a+2)^0,w,c
  6973  00273C  1025               	iorwf	(___fldiv@a+3)^0,w,c
  6974  00273E  A4D8               	btfss	status,2,c
  6975  002740  EFA4  F013         	goto	u6081
  6976  002744  EFA6  F013         	goto	u6080
  6977  002748                     u6081:
  6978  002748  EFBE  F013         	goto	l5542
  6979  00274C                     u6080:
  6980  00274C  0E00               	movlw	0
  6981  00274E  6E1E               	movwf	___fldiv@b^0,c
  6982  002750  0E00               	movlw	0
  6983  002752  6E1F               	movwf	(___fldiv@b+1)^0,c
  6984  002754  0E00               	movlw	0
  6985  002756  6E20               	movwf	(___fldiv@b+2)^0,c
  6986  002758  0E00               	movlw	0
  6987  00275A  6E21               	movwf	(___fldiv@b+3)^0,c
  6988  00275C  0E80               	movlw	128
  6989  00275E  1220               	iorwf	(___fldiv@b+2)^0,f,c
  6990  002760  0E7F               	movlw	127
  6991  002762  1221               	iorwf	(___fldiv@b+3)^0,f,c
  6992  002764                     l5536:
  6993  002764  502E               	movf	___fldiv@sign^0,w,c
  6994  002766  1221               	iorwf	(___fldiv@b+3)^0,f,c
  6995  002768  C01E  F01E         	movff	___fldiv@b,?___fldiv
  6996  00276C  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
  6997  002770  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
  6998  002774  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
  6999  002778  EF01  F015         	goto	l1010
  7000  00277C                     l5542:
  7001  00277C  5035               	movf	___fldiv@bexp^0,w,c
  7002  00277E  A4D8               	btfss	status,2,c
  7003  002780  EFC4  F013         	goto	u6091
  7004  002784  EFC6  F013         	goto	u6090
  7005  002788                     u6091:
  7006  002788  EFD0  F013         	goto	l5550
  7007  00278C                     u6090:
  7008  00278C  0E00               	movlw	0
  7009  00278E  6E1E               	movwf	?___fldiv^0,c
  7010  002790  0E00               	movlw	0
  7011  002792  6E1F               	movwf	(?___fldiv+1)^0,c
  7012  002794  0E00               	movlw	0
  7013  002796  6E20               	movwf	(?___fldiv+2)^0,c
  7014  002798  0E00               	movlw	0
  7015  00279A  6E21               	movwf	(?___fldiv+3)^0,c
  7016  00279C  EF01  F015         	goto	l1010
  7017  0027A0                     l5550:
  7018  0027A0  5036               	movf	___fldiv@aexp^0,w,c
  7019  0027A2  C035  F026         	movff	___fldiv@bexp,??___fldiv
  7020  0027A6  6A27               	clrf	(??___fldiv+1)^0,c
  7021  0027A8  5E26               	subwf	??___fldiv^0,f,c
  7022  0027AA  0E00               	movlw	0
  7023  0027AC  5A27               	subwfb	(??___fldiv+1)^0,f,c
  7024  0027AE  0E7F               	movlw	127
  7025  0027B0  2426               	addwf	??___fldiv^0,w,c
  7026  0027B2  6E2F               	movwf	___fldiv@new_exp^0,c
  7027  0027B4  0E00               	movlw	0
  7028  0027B6  2027               	addwfc	(??___fldiv+1)^0,w,c
  7029  0027B8  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  7030  0027BA  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
  7031  0027BE  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
  7032  0027C2  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
  7033  0027C6  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
  7034  0027CA  0E00               	movlw	0
  7035  0027CC  6E1E               	movwf	___fldiv@b^0,c
  7036  0027CE  0E00               	movlw	0
  7037  0027D0  6E1F               	movwf	(___fldiv@b+1)^0,c
  7038  0027D2  0E00               	movlw	0
  7039  0027D4  6E20               	movwf	(___fldiv@b+2)^0,c
  7040  0027D6  0E00               	movlw	0
  7041  0027D8  6E21               	movwf	(___fldiv@b+3)^0,c
  7042  0027DA  0E00               	movlw	0
  7043  0027DC  6E31               	movwf	___fldiv@grs^0,c
  7044  0027DE  0E00               	movlw	0
  7045  0027E0  6E32               	movwf	(___fldiv@grs+1)^0,c
  7046  0027E2  0E00               	movlw	0
  7047  0027E4  6E33               	movwf	(___fldiv@grs+2)^0,c
  7048  0027E6  0E00               	movlw	0
  7049  0027E8  6E34               	movwf	(___fldiv@grs+3)^0,c
  7050  0027EA  0E00               	movlw	0
  7051  0027EC  6E36               	movwf	___fldiv@aexp^0,c
  7052  0027EE  EF31  F014         	goto	l1012
  7053  0027F2                     l5560:
  7054  0027F2  5036               	movf	___fldiv@aexp^0,w,c
  7055  0027F4  B4D8               	btfsc	status,2,c
  7056  0027F6  EFFF  F013         	goto	u6101
  7057  0027FA  EF01  F014         	goto	u6100
  7058  0027FE                     u6101:
  7059  0027FE  EF18  F014         	goto	l5568
  7060  002802                     u6100:
  7061  002802  90D8               	bcf	status,0,c
  7062  002804  362A               	rlcf	___fldiv@rem^0,f,c
  7063  002806  362B               	rlcf	(___fldiv@rem+1)^0,f,c
  7064  002808  362C               	rlcf	(___fldiv@rem+2)^0,f,c
  7065  00280A  362D               	rlcf	(___fldiv@rem+3)^0,f,c
  7066  00280C  90D8               	bcf	status,0,c
  7067  00280E  361E               	rlcf	___fldiv@b^0,f,c
  7068  002810  361F               	rlcf	(___fldiv@b+1)^0,f,c
  7069  002812  3620               	rlcf	(___fldiv@b+2)^0,f,c
  7070  002814  3621               	rlcf	(___fldiv@b+3)^0,f,c
  7071  002816  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  7072  002818  EF10  F014         	goto	u6111
  7073  00281C  EF12  F014         	goto	u6110
  7074  002820                     u6111:
  7075  002820  EF13  F014         	goto	l1015
  7076  002824                     u6110:
  7077  002824  801E               	bsf	___fldiv@b^0,0,c
  7078  002826                     l1015:
  7079  002826  90D8               	bcf	status,0,c
  7080  002828  3631               	rlcf	___fldiv@grs^0,f,c
  7081  00282A  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  7082  00282C  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  7083  00282E  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  7084  002830                     l5568:
  7085  002830  5022               	movf	___fldiv@a^0,w,c
  7086  002832  5C2A               	subwf	___fldiv@rem^0,w,c
  7087  002834  5023               	movf	(___fldiv@a+1)^0,w,c
  7088  002836  582B               	subwfb	(___fldiv@rem+1)^0,w,c
  7089  002838  5024               	movf	(___fldiv@a+2)^0,w,c
  7090  00283A  582C               	subwfb	(___fldiv@rem+2)^0,w,c
  7091  00283C  5025               	movf	(___fldiv@a+3)^0,w,c
  7092  00283E  582D               	subwfb	(___fldiv@rem+3)^0,w,c
  7093  002840  A0D8               	btfss	status,0,c
  7094  002842  EF25  F014         	goto	u6121
  7095  002846  EF27  F014         	goto	u6120
  7096  00284A                     u6121:
  7097  00284A  EF30  F014         	goto	l5574
  7098  00284E                     u6120:
  7099  00284E  8C34               	bsf	(___fldiv@grs+3)^0,6,c
  7100  002850  5022               	movf	___fldiv@a^0,w,c
  7101  002852  5E2A               	subwf	___fldiv@rem^0,f,c
  7102  002854  5023               	movf	(___fldiv@a+1)^0,w,c
  7103  002856  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
  7104  002858  5024               	movf	(___fldiv@a+2)^0,w,c
  7105  00285A  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
  7106  00285C  5025               	movf	(___fldiv@a+3)^0,w,c
  7107  00285E  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
  7108  002860                     l5574:
  7109  002860  2A36               	incf	___fldiv@aexp^0,f,c
  7110  002862                     l1012:
  7111  002862  0E19               	movlw	25
  7112  002864  6436               	cpfsgt	___fldiv@aexp^0,c
  7113  002866  EF37  F014         	goto	u6131
  7114  00286A  EF39  F014         	goto	u6130
  7115  00286E                     u6131:
  7116  00286E  EFF9  F013         	goto	l5560
  7117  002872                     u6130:
  7118  002872  502A               	movf	___fldiv@rem^0,w,c
  7119  002874  102B               	iorwf	(___fldiv@rem+1)^0,w,c
  7120  002876  102C               	iorwf	(___fldiv@rem+2)^0,w,c
  7121  002878  102D               	iorwf	(___fldiv@rem+3)^0,w,c
  7122  00287A  B4D8               	btfsc	status,2,c
  7123  00287C  EF42  F014         	goto	u6141
  7124  002880  EF44  F014         	goto	u6140
  7125  002884                     u6141:
  7126  002884  EF5C  F014         	goto	l5586
  7127  002888                     u6140:
  7128  002888  8031               	bsf	___fldiv@grs^0,0,c
  7129  00288A  EF5C  F014         	goto	l5586
  7130  00288E                     l5580:
  7131  00288E  90D8               	bcf	status,0,c
  7132  002890  361E               	rlcf	___fldiv@b^0,f,c
  7133  002892  361F               	rlcf	(___fldiv@b+1)^0,f,c
  7134  002894  3620               	rlcf	(___fldiv@b+2)^0,f,c
  7135  002896  3621               	rlcf	(___fldiv@b+3)^0,f,c
  7136  002898  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  7137  00289A  EF51  F014         	goto	u6151
  7138  00289E  EF53  F014         	goto	u6150
  7139  0028A2                     u6151:
  7140  0028A2  EF54  F014         	goto	l1021
  7141  0028A6                     u6150:
  7142  0028A6  801E               	bsf	___fldiv@b^0,0,c
  7143  0028A8                     l1021:
  7144  0028A8  90D8               	bcf	status,0,c
  7145  0028AA  3631               	rlcf	___fldiv@grs^0,f,c
  7146  0028AC  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  7147  0028AE  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  7148  0028B0  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  7149  0028B2  062F               	decf	___fldiv@new_exp^0,f,c
  7150  0028B4  A0D8               	btfss	status,0,c
  7151  0028B6  0630               	decf	(___fldiv@new_exp+1)^0,f,c
  7152  0028B8                     l5586:
  7153  0028B8  AE20               	btfss	(___fldiv@b+2)^0,7,c
  7154  0028BA  EF61  F014         	goto	u6161
  7155  0028BE  EF63  F014         	goto	u6160
  7156  0028C2                     u6161:
  7157  0028C2  EF47  F014         	goto	l5580
  7158  0028C6                     u6160:
  7159  0028C6  0E00               	movlw	0
  7160  0028C8  6E36               	movwf	___fldiv@aexp^0,c
  7161  0028CA  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  7162  0028CC  EF6A  F014         	goto	u6171
  7163  0028D0  EF6C  F014         	goto	u6170
  7164  0028D4                     u6171:
  7165  0028D4  EF90  F014         	goto	l1023
  7166  0028D8                     u6170:
  7167  0028D8  0EFF               	movlw	255
  7168  0028DA  1431               	andwf	___fldiv@grs^0,w,c
  7169  0028DC  6E26               	movwf	??___fldiv^0,c
  7170  0028DE  0EFF               	movlw	255
  7171  0028E0  1432               	andwf	(___fldiv@grs+1)^0,w,c
  7172  0028E2  6E27               	movwf	(??___fldiv+1)^0,c
  7173  0028E4  0EFF               	movlw	255
  7174  0028E6  1433               	andwf	(___fldiv@grs+2)^0,w,c
  7175  0028E8  6E28               	movwf	(??___fldiv+2)^0,c
  7176  0028EA  0E7F               	movlw	127
  7177  0028EC  1434               	andwf	(___fldiv@grs+3)^0,w,c
  7178  0028EE  6E29               	movwf	(??___fldiv+3)^0,c
  7179  0028F0  5026               	movf	??___fldiv^0,w,c
  7180  0028F2  1027               	iorwf	(??___fldiv+1)^0,w,c
  7181  0028F4  1028               	iorwf	(??___fldiv+2)^0,w,c
  7182  0028F6  1029               	iorwf	(??___fldiv+3)^0,w,c
  7183  0028F8  B4D8               	btfsc	status,2,c
  7184  0028FA  EF81  F014         	goto	u6181
  7185  0028FE  EF83  F014         	goto	u6180
  7186  002902                     u6181:
  7187  002902  EF87  F014         	goto	l1024
  7188  002906                     u6180:
  7189  002906                     l5594:
  7190  002906  0E01               	movlw	1
  7191  002908  6E36               	movwf	___fldiv@aexp^0,c
  7192  00290A  EF90  F014         	goto	l1023
  7193  00290E                     l1024:
  7194  00290E  A01E               	btfss	___fldiv@b^0,0,c
  7195  002910  EF8C  F014         	goto	u6191
  7196  002914  EF8E  F014         	goto	u6190
  7197  002918                     u6191:
  7198  002918  EF90  F014         	goto	l1023
  7199  00291C                     u6190:
  7200  00291C  EF83  F014         	goto	l5594
  7201  002920                     l1023:
  7202  002920  5036               	movf	___fldiv@aexp^0,w,c
  7203  002922  B4D8               	btfsc	status,2,c
  7204  002924  EF96  F014         	goto	u6201
  7205  002928  EF98  F014         	goto	u6200
  7206  00292C                     u6201:
  7207  00292C  EFBC  F014         	goto	l5606
  7208  002930                     u6200:
  7209  002930  0E01               	movlw	1
  7210  002932  261E               	addwf	___fldiv@b^0,f,c
  7211  002934  0E00               	movlw	0
  7212  002936  221F               	addwfc	(___fldiv@b+1)^0,f,c
  7213  002938  2220               	addwfc	(___fldiv@b+2)^0,f,c
  7214  00293A  2221               	addwfc	(___fldiv@b+3)^0,f,c
  7215  00293C  A021               	btfss	(___fldiv@b+3)^0,0,c
  7216  00293E  EFA3  F014         	goto	u6211
  7217  002942  EFA5  F014         	goto	u6210
  7218  002946                     u6211:
  7219  002946  EFBC  F014         	goto	l5606
  7220  00294A                     u6210:
  7221  00294A  C01E  F026         	movff	___fldiv@b,??___fldiv
  7222  00294E  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
  7223  002952  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
  7224  002956  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
  7225  00295A  3429               	rlcf	(??___fldiv+3)^0,w,c
  7226  00295C  3229               	rrcf	(??___fldiv+3)^0,f,c
  7227  00295E  3228               	rrcf	(??___fldiv+2)^0,f,c
  7228  002960  3227               	rrcf	(??___fldiv+1)^0,f,c
  7229  002962  3226               	rrcf	??___fldiv^0,f,c
  7230  002964  C026  F01E         	movff	??___fldiv,___fldiv@b
  7231  002968  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
  7232  00296C  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
  7233  002970  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
  7234  002974  4A2F               	infsnz	___fldiv@new_exp^0,f,c
  7235  002976  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
  7236  002978                     l5606:
  7237  002978  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7238  00297A  EFC7  F014         	goto	u6221
  7239  00297E  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  7240  002980  E108               	bnz	u6220
  7241  002982  282F               	incf	___fldiv@new_exp^0,w,c
  7242  002984  A0D8               	btfss	status,0,c
  7243  002986  EFC7  F014         	goto	u6221
  7244  00298A  EFC9  F014         	goto	u6220
  7245  00298E                     u6221:
  7246  00298E  EFD4  F014         	goto	l5610
  7247  002992                     u6220:
  7248  002992  0E00               	movlw	0
  7249  002994  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  7250  002996  682F               	setf	___fldiv@new_exp^0,c
  7251  002998  0E00               	movlw	0
  7252  00299A  6E1E               	movwf	___fldiv@b^0,c
  7253  00299C  0E00               	movlw	0
  7254  00299E  6E1F               	movwf	(___fldiv@b+1)^0,c
  7255  0029A0  0E00               	movlw	0
  7256  0029A2  6E20               	movwf	(___fldiv@b+2)^0,c
  7257  0029A4  0E00               	movlw	0
  7258  0029A6  6E21               	movwf	(___fldiv@b+3)^0,c
  7259  0029A8                     l5610:
  7260  0029A8  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7261  0029AA  EFE1  F014         	goto	u6230
  7262  0029AE  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  7263  0029B0  E106               	bnz	u6231
  7264  0029B2  042F               	decf	___fldiv@new_exp^0,w,c
  7265  0029B4  B0D8               	btfsc	status,0,c
  7266  0029B6  EFDF  F014         	goto	u6231
  7267  0029BA  EFE1  F014         	goto	u6230
  7268  0029BE                     u6231:
  7269  0029BE  EFEF  F014         	goto	l5614
  7270  0029C2                     u6230:
  7271  0029C2  0E00               	movlw	0
  7272  0029C4  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  7273  0029C6  0E00               	movlw	0
  7274  0029C8  6E2F               	movwf	___fldiv@new_exp^0,c
  7275  0029CA  0E00               	movlw	0
  7276  0029CC  6E1E               	movwf	___fldiv@b^0,c
  7277  0029CE  0E00               	movlw	0
  7278  0029D0  6E1F               	movwf	(___fldiv@b+1)^0,c
  7279  0029D2  0E00               	movlw	0
  7280  0029D4  6E20               	movwf	(___fldiv@b+2)^0,c
  7281  0029D6  0E00               	movlw	0
  7282  0029D8  6E21               	movwf	(___fldiv@b+3)^0,c
  7283  0029DA  0E00               	movlw	0
  7284  0029DC  6E2E               	movwf	___fldiv@sign^0,c
  7285  0029DE                     l5614:
  7286  0029DE  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
  7287  0029E2  A035               	btfss	___fldiv@bexp^0,0,c
  7288  0029E4  EFF6  F014         	goto	u6241
  7289  0029E8  EFF8  F014         	goto	u6240
  7290  0029EC                     u6241:
  7291  0029EC  EFFB  F014         	goto	l5620
  7292  0029F0                     u6240:
  7293  0029F0  8E20               	bsf	(___fldiv@b+2)^0,7,c
  7294  0029F2  EFFC  F014         	goto	l5622
  7295  0029F6                     l5620:
  7296  0029F6  9E20               	bcf	(___fldiv@b+2)^0,7,c
  7297  0029F8                     l5622:
  7298  0029F8  90D8               	bcf	status,0,c
  7299  0029FA  3035               	rrcf	___fldiv@bexp^0,w,c
  7300  0029FC  6E21               	movwf	(___fldiv@b+3)^0,c
  7301  0029FE  EFB2  F013         	goto	l5536
  7302  002A02                     l1010:
  7303  002A02  0012               	return		;funcret
  7304  002A04                     __end_of___fldiv:
  7305                           	callstack 0
  7306                           
  7307 ;; *************** function _color_click_init *****************
  7308 ;; Defined at:
  7309 ;;		line 7 in file "color.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      void 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7327 ;;Total ram usage:        1 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; Hardware stack levels required when called: 5
  7330 ;; This function calls:
  7331 ;;		_I2C_2_Master_Init
  7332 ;;		_color_writetoaddr
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text33
  7339  004046                     __ptext33:
  7340                           	callstack 0
  7341  004046                     _color_click_init:
  7342                           	callstack 25
  7343  004046                     
  7344                           ;color.c: 10:     I2C_2_Master_Init();
  7345  004046  EC6B  F020         	call	_I2C_2_Master_Init	;wreg free
  7346  00404A                     
  7347                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  7348  00404A  0E01               	movlw	1
  7349  00404C  6E07               	movwf	color_writetoaddr@value^0,c
  7350  00404E  0E00               	movlw	0
  7351  004050  ECE1  F020         	call	_color_writetoaddr
  7352  004054                     
  7353                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7354  004054  0E3F               	movlw	63
  7355  004056  6E09               	movwf	??_color_click_init^0,c
  7356  004058  0E55               	movlw	85
  7357  00405A                     u7297:
  7358  00405A  2EE8               	decfsz	wreg,f,c
  7359  00405C  D7FE               	bra	u7297
  7360  00405E  2E09               	decfsz	??_color_click_init^0,f,c
  7361  004060  D7FC               	bra	u7297
  7362  004062  F000               	nop	
  7363  004064                     
  7364                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  7365  004064  0E03               	movlw	3
  7366  004066  6E07               	movwf	color_writetoaddr@value^0,c
  7367  004068  0E00               	movlw	0
  7368  00406A  ECE1  F020         	call	_color_writetoaddr
  7369  00406E                     
  7370                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  7371  00406E  0ED5               	movlw	213
  7372  004070  6E07               	movwf	color_writetoaddr@value^0,c
  7373  004072  0E01               	movlw	1
  7374  004074  ECE1  F020         	call	_color_writetoaddr
  7375  004078  0012               	return		;funcret
  7376  00407A                     __end_of_color_click_init:
  7377                           	callstack 0
  7378                           
  7379 ;; *************** function _color_writetoaddr *****************
  7380 ;; Defined at:
  7381 ;;		line 23 in file "color.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  address         1    wreg     unsigned char 
  7384 ;;  value           1    6[COMRAM] unsigned char 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  address         1    7[COMRAM] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      void 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;Total ram usage:        2 bytes
  7401 ;; Hardware stack levels used: 1
  7402 ;; Hardware stack levels required when called: 4
  7403 ;; This function calls:
  7404 ;;		_I2C_2_Master_Start
  7405 ;;		_I2C_2_Master_Stop
  7406 ;;		_I2C_2_Master_Write
  7407 ;; This function is called by:
  7408 ;;		_color_click_init
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text34
  7413  0041C2                     __ptext34:
  7414                           	callstack 0
  7415  0041C2                     _color_writetoaddr:
  7416                           	callstack 25
  7417                           
  7418                           ;incstack = 0
  7419                           ;color_writetoaddr@address stored from wreg
  7420  0041C2  6E08               	movwf	color_writetoaddr@address^0,c
  7421  0041C4                     
  7422                           ;color.c: 24:     I2C_2_Master_Start();
  7423  0041C4  EC2C  F021         	call	_I2C_2_Master_Start	;wreg free
  7424                           
  7425                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  7426  0041C8  0E52               	movlw	82
  7427  0041CA  EC16  F021         	call	_I2C_2_Master_Write
  7428                           
  7429                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  7430  0041CE  5008               	movf	color_writetoaddr@address^0,w,c
  7431  0041D0  0980               	iorlw	128
  7432  0041D2  EC16  F021         	call	_I2C_2_Master_Write
  7433                           
  7434                           ;color.c: 27:     I2C_2_Master_Write(value);
  7435  0041D6  5007               	movf	color_writetoaddr@value^0,w,c
  7436  0041D8  EC16  F021         	call	_I2C_2_Master_Write
  7437                           
  7438                           ;color.c: 28:     I2C_2_Master_Stop();
  7439  0041DC  EC27  F021         	call	_I2C_2_Master_Stop	;wreg free
  7440  0041E0  0012               	return		;funcret
  7441  0041E2                     __end_of_color_writetoaddr:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function _I2C_2_Master_Write *****************
  7445 ;; Defined at:
  7446 ;;		line 45 in file "i2c.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  data_byte       1    wreg     unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  data_byte       1    5[COMRAM] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;Total ram usage:        1 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 3
  7467 ;; This function calls:
  7468 ;;		_I2C_2_Master_Idle
  7469 ;; This function is called by:
  7470 ;;		_color_writetoaddr
  7471 ;;		_color_read_Clear
  7472 ;;		_color_read_Red
  7473 ;;		_color_read_Green
  7474 ;;		_color_read_Blue
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text35
  7479  00422C                     __ptext35:
  7480                           	callstack 0
  7481  00422C                     _I2C_2_Master_Write:
  7482                           	callstack 25
  7483                           
  7484                           ;incstack = 0
  7485                           ;I2C_2_Master_Write@data_byte stored from wreg
  7486  00422C  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  7487  00422E                     
  7488                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7489  00422E  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  7490  004232                     
  7491                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7492  004232  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7493  004236  0012               	return		;funcret
  7494  004238                     __end_of_I2C_2_Master_Write:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function _I2C_2_Master_Stop *****************
  7498 ;; Defined at:
  7499 ;;		line 39 in file "i2c.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used: 1
  7519 ;; Hardware stack levels required when called: 3
  7520 ;; This function calls:
  7521 ;;		_I2C_2_Master_Idle
  7522 ;; This function is called by:
  7523 ;;		_color_writetoaddr
  7524 ;;		_color_read_Clear
  7525 ;;		_color_read_Red
  7526 ;;		_color_read_Green
  7527 ;;		_color_read_Blue
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text36
  7532  00424E                     __ptext36:
  7533                           	callstack 0
  7534  00424E                     _I2C_2_Master_Stop:
  7535                           	callstack 25
  7536  00424E                     
  7537                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7538  00424E  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  7539  004252                     
  7540                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7541  004252  010E               	movlb	14	; () banked
  7542  004254  85DA               	bsf	218,2,b	;volatile
  7543  004256                     
  7544                           ; BSR set to: 14
  7545  004256  0012               	return		;funcret
  7546  004258                     __end_of_I2C_2_Master_Stop:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function _I2C_2_Master_Start *****************
  7550 ;; Defined at:
  7551 ;;		line 27 in file "i2c.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;		None
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0, cstack
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7569 ;;Total ram usage:        0 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; Hardware stack levels required when called: 3
  7572 ;; This function calls:
  7573 ;;		_I2C_2_Master_Idle
  7574 ;; This function is called by:
  7575 ;;		_color_writetoaddr
  7576 ;;		_color_read_Clear
  7577 ;;		_color_read_Red
  7578 ;;		_color_read_Green
  7579 ;;		_color_read_Blue
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text37
  7584  004258                     __ptext37:
  7585                           	callstack 0
  7586  004258                     _I2C_2_Master_Start:
  7587                           	callstack 25
  7588  004258                     
  7589                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7590  004258  ECAA  F020         	call	_I2C_2_Master_Idle	;wreg free
  7591  00425C                     
  7592                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7593  00425C  010E               	movlb	14	; () banked
  7594  00425E  81DA               	bsf	218,0,b	;volatile
  7595  004260                     
  7596                           ; BSR set to: 14
  7597  004260  0012               	return		;funcret
  7598  004262                     __end_of_I2C_2_Master_Start:
  7599                           	callstack 0
  7600                           
  7601 ;; *************** function _I2C_2_Master_Idle *****************
  7602 ;; Defined at:
  7603 ;;		line 22 in file "i2c.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1    wreg      void 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;Total ram usage:        1 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; Hardware stack levels required when called: 2
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_I2C_2_Master_Start
  7628 ;;		_I2C_2_Master_RepStart
  7629 ;;		_I2C_2_Master_Stop
  7630 ;;		_I2C_2_Master_Write
  7631 ;;		_I2C_2_Master_Read
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text38
  7636  004154                     __ptext38:
  7637                           	callstack 0
  7638  004154                     _I2C_2_Master_Idle:
  7639                           	callstack 25
  7640  004154                     l128:
  7641  004154  010E               	movlb	14	; () banked
  7642  004156  B5D8               	btfsc	216,2,b	;volatile
  7643  004158  EFB0  F020         	goto	u5111
  7644  00415C  EFB2  F020         	goto	u5110
  7645  004160                     u5111:
  7646  004160  EFAA  F020         	goto	l128
  7647  004164                     u5110:
  7648  004164                     
  7649                           ; BSR set to: 14
  7650  004164  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7651  004168  0E1F               	movlw	31
  7652  00416A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  7653  00416C  A4D8               	btfss	status,2,c
  7654  00416E  EFBB  F020         	goto	u5121
  7655  004172  EFBD  F020         	goto	u5120
  7656  004176                     u5121:
  7657  004176  EFAA  F020         	goto	l128
  7658  00417A                     u5120:
  7659  00417A                     
  7660                           ; BSR set to: 14
  7661  00417A  0012               	return		;funcret
  7662  00417C                     __end_of_I2C_2_Master_Idle:
  7663                           	callstack 0
  7664                           
  7665 ;; *************** function _I2C_2_Master_Init *****************
  7666 ;; Defined at:
  7667 ;;		line 4 in file "i2c.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;		None
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  1    wreg      void 
  7674 ;; Registers used:
  7675 ;;		wreg, status,2
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7685 ;;Total ram usage:        0 bytes
  7686 ;; Hardware stack levels used: 1
  7687 ;; Hardware stack levels required when called: 2
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_color_click_init
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text39
  7696  0040D6                     __ptext39:
  7697                           	callstack 0
  7698  0040D6                     _I2C_2_Master_Init:
  7699                           	callstack 27
  7700  0040D6                     
  7701                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7702  0040D6  010E               	movlb	14	; () banked
  7703  0040D8  51D9               	movf	217,w,b	;volatile
  7704  0040DA  0BF0               	andlw	-16
  7705  0040DC  0908               	iorlw	8
  7706  0040DE  6FD9               	movwf	217,b	;volatile
  7707  0040E0                     
  7708                           ; BSR set to: 14
  7709                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7710  0040E0  8BD9               	bsf	217,5,b	;volatile
  7711                           
  7712                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7713  0040E2  0E9F               	movlw	159
  7714  0040E4  6FD6               	movwf	214,b	;volatile
  7715  0040E6                     
  7716                           ; BSR set to: 14
  7717                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7718  0040E6  8A84               	bsf	132,5,c	;volatile
  7719  0040E8                     
  7720                           ; BSR set to: 14
  7721                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7722  0040E8  8C84               	bsf	132,6,c	;volatile
  7723  0040EA                     
  7724                           ; BSR set to: 14
  7725                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7726  0040EA  9BA7               	bcf	167,5,b	;volatile
  7727  0040EC                     
  7728                           ; BSR set to: 14
  7729                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7730  0040EC  9DA7               	bcf	167,6,b	;volatile
  7731                           
  7732                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7733  0040EE  0E1D               	movlw	29
  7734  0040F0  6F1D               	movwf	29,b	;volatile
  7735                           
  7736                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7737  0040F2  0E1E               	movlw	30
  7738  0040F4  6F1C               	movwf	28,b	;volatile
  7739                           
  7740                           ;i2c.c: 18:   RD5PPS=0x1C;
  7741  0040F6  0E1C               	movlw	28
  7742  0040F8  6F6F               	movwf	111,b	;volatile
  7743                           
  7744                           ;i2c.c: 19:   RD6PPS=0x1B;
  7745  0040FA  0E1B               	movlw	27
  7746  0040FC  6F70               	movwf	112,b	;volatile
  7747  0040FE                     
  7748                           ; BSR set to: 14
  7749  0040FE  0012               	return		;funcret
  7750  004100                     __end_of_I2C_2_Master_Init:
  7751                           	callstack 0
  7752                           
  7753 ;; *************** function ___fltol *****************
  7754 ;; Defined at:
  7755 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  f1              4   62[COMRAM] void 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;  exp1            1   71[COMRAM] unsigned char 
  7760 ;;  sign1           1   70[COMRAM] unsigned char 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  4   62[COMRAM] long 
  7763 ;; Registers used:
  7764 ;;		wreg, status,2, status,0
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;Total ram usage:       10 bytes
  7775 ;; Hardware stack levels used: 1
  7776 ;; Hardware stack levels required when called: 2
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;;		_determine_color1
  7782 ;;		_determine_color2
  7783 ;;		_determine_color3
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text40
  7788  0036C8                     __ptext40:
  7789                           	callstack 0
  7790  0036C8                     ___fltol:
  7791                           	callstack 28
  7792  0036C8  3441               	rlcf	(___fltol@f1+2)^0,w,c
  7793  0036CA  3442               	rlcf	(___fltol@f1+3)^0,w,c
  7794  0036CC  6E48               	movwf	___fltol@exp1^0,c
  7795  0036CE  5048               	movf	___fltol@exp1^0,w,c
  7796  0036D0  A4D8               	btfss	status,2,c
  7797  0036D2  EF6D  F01B         	goto	u6851
  7798  0036D6  EF6F  F01B         	goto	u6850
  7799  0036DA                     u6851:
  7800  0036DA  EF79  F01B         	goto	l5998
  7801  0036DE                     u6850:
  7802  0036DE                     l5994:
  7803  0036DE  0E00               	movlw	0
  7804  0036E0  6E3F               	movwf	?___fltol^0,c
  7805  0036E2  0E00               	movlw	0
  7806  0036E4  6E40               	movwf	(?___fltol+1)^0,c
  7807  0036E6  0E00               	movlw	0
  7808  0036E8  6E41               	movwf	(?___fltol+2)^0,c
  7809  0036EA  0E00               	movlw	0
  7810  0036EC  6E42               	movwf	(?___fltol+3)^0,c
  7811  0036EE  EFE6  F01B         	goto	l725
  7812  0036F2                     l5998:
  7813  0036F2  C03F  F043         	movff	___fltol@f1,??___fltol
  7814  0036F6  C040  F044         	movff	___fltol@f1+1,??___fltol+1
  7815  0036FA  C041  F045         	movff	___fltol@f1+2,??___fltol+2
  7816  0036FE  C042  F046         	movff	___fltol@f1+3,??___fltol+3
  7817  003702  0E20               	movlw	32
  7818  003704  EF89  F01B         	goto	u6860
  7819  003708                     u6865:
  7820  003708  90D8               	bcf	status,0,c
  7821  00370A  3246               	rrcf	(??___fltol+3)^0,f,c
  7822  00370C  3245               	rrcf	(??___fltol+2)^0,f,c
  7823  00370E  3244               	rrcf	(??___fltol+1)^0,f,c
  7824  003710  3243               	rrcf	??___fltol^0,f,c
  7825  003712                     u6860:
  7826  003712  2EE8               	decfsz	wreg,f,c
  7827  003714  EF84  F01B         	goto	u6865
  7828  003718  5043               	movf	??___fltol^0,w,c
  7829  00371A  6E47               	movwf	___fltol@sign1^0,c
  7830  00371C  8E41               	bsf	(___fltol@f1+2)^0,7,c
  7831  00371E  0EFF               	movlw	255
  7832  003720  163F               	andwf	___fltol@f1^0,f,c
  7833  003722  0EFF               	movlw	255
  7834  003724  1640               	andwf	(___fltol@f1+1)^0,f,c
  7835  003726  0EFF               	movlw	255
  7836  003728  1641               	andwf	(___fltol@f1+2)^0,f,c
  7837  00372A  0E00               	movlw	0
  7838  00372C  1642               	andwf	(___fltol@f1+3)^0,f,c
  7839  00372E  0E96               	movlw	150
  7840  003730  5E48               	subwf	___fltol@exp1^0,f,c
  7841  003732  BE48               	btfsc	___fltol@exp1^0,7,c
  7842  003734  EFA0  F01B         	goto	u6870
  7843  003738  EF9E  F01B         	goto	u6871
  7844  00373C                     u6871:
  7845  00373C  EFB6  F01B         	goto	l6018
  7846  003740                     u6870:
  7847  003740  5048               	movf	___fltol@exp1^0,w,c
  7848  003742  0A80               	xorlw	128
  7849  003744  0F97               	addlw	151
  7850  003746  B0D8               	btfsc	status,0,c
  7851  003748  EFA8  F01B         	goto	u6881
  7852  00374C  EFAA  F01B         	goto	u6880
  7853  003750                     u6881:
  7854  003750  EFAC  F01B         	goto	l6014
  7855  003754                     u6880:
  7856  003754  EF6F  F01B         	goto	l5994
  7857  003758                     l6014:
  7858  003758  90D8               	bcf	status,0,c
  7859  00375A  3242               	rrcf	(___fltol@f1+3)^0,f,c
  7860  00375C  3241               	rrcf	(___fltol@f1+2)^0,f,c
  7861  00375E  3240               	rrcf	(___fltol@f1+1)^0,f,c
  7862  003760  323F               	rrcf	___fltol@f1^0,f,c
  7863  003762  3E48               	incfsz	___fltol@exp1^0,f,c
  7864  003764  EFAC  F01B         	goto	l6014
  7865  003768  EFCE  F01B         	goto	l6028
  7866  00376C                     l6018:
  7867  00376C  0E1F               	movlw	31
  7868  00376E  6448               	cpfsgt	___fltol@exp1^0,c
  7869  003770  EFBC  F01B         	goto	u6891
  7870  003774  EFBE  F01B         	goto	u6890
  7871  003778                     u6891:
  7872  003778  EFC6  F01B         	goto	l6026
  7873  00377C                     u6890:
  7874  00377C  EF6F  F01B         	goto	l5994
  7875  003780                     l6024:
  7876  003780  90D8               	bcf	status,0,c
  7877  003782  363F               	rlcf	___fltol@f1^0,f,c
  7878  003784  3640               	rlcf	(___fltol@f1+1)^0,f,c
  7879  003786  3641               	rlcf	(___fltol@f1+2)^0,f,c
  7880  003788  3642               	rlcf	(___fltol@f1+3)^0,f,c
  7881  00378A  0648               	decf	___fltol@exp1^0,f,c
  7882  00378C                     l6026:
  7883  00378C  5048               	movf	___fltol@exp1^0,w,c
  7884  00378E  A4D8               	btfss	status,2,c
  7885  003790  EFCC  F01B         	goto	u6901
  7886  003794  EFCE  F01B         	goto	u6900
  7887  003798                     u6901:
  7888  003798  EFC0  F01B         	goto	l6024
  7889  00379C                     u6900:
  7890  00379C                     l6028:
  7891  00379C  5047               	movf	___fltol@sign1^0,w,c
  7892  00379E  B4D8               	btfsc	status,2,c
  7893  0037A0  EFD4  F01B         	goto	u6911
  7894  0037A4  EFD6  F01B         	goto	u6910
  7895  0037A8                     u6911:
  7896  0037A8  EFDE  F01B         	goto	l6032
  7897  0037AC                     u6910:
  7898  0037AC  1E42               	comf	(___fltol@f1+3)^0,f,c
  7899  0037AE  1E41               	comf	(___fltol@f1+2)^0,f,c
  7900  0037B0  1E40               	comf	(___fltol@f1+1)^0,f,c
  7901  0037B2  6C3F               	negf	___fltol@f1^0,c
  7902  0037B4  0E00               	movlw	0
  7903  0037B6  2240               	addwfc	(___fltol@f1+1)^0,f,c
  7904  0037B8  2241               	addwfc	(___fltol@f1+2)^0,f,c
  7905  0037BA  2242               	addwfc	(___fltol@f1+3)^0,f,c
  7906  0037BC                     l6032:
  7907  0037BC  C03F  F03F         	movff	___fltol@f1,?___fltol
  7908  0037C0  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  7909  0037C4  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  7910  0037C8  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  7911  0037CC                     l725:
  7912  0037CC  0012               	return		;funcret
  7913  0037CE                     __end_of___fltol:
  7914                           	callstack 0
  7915                           
  7916 ;; *************** function ___flsub *****************
  7917 ;; Defined at:
  7918 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  b               4   54[COMRAM] long 
  7921 ;;  a               4   58[COMRAM] long 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  4   54[COMRAM] long 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7933 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;Total ram usage:        8 bytes
  7938 ;; Hardware stack levels used: 1
  7939 ;; Hardware stack levels required when called: 3
  7940 ;; This function calls:
  7941 ;;		___fladd
  7942 ;; This function is called by:
  7943 ;;		_main
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text41
  7948  003E54                     __ptext41:
  7949                           	callstack 0
  7950  003E54                     ___flsub:
  7951                           	callstack 27
  7952  003E54  0E00               	movlw	0
  7953  003E56  1A3B               	xorwf	___flsub@a^0,f,c
  7954  003E58  0E00               	movlw	0
  7955  003E5A  1A3C               	xorwf	(___flsub@a+1)^0,f,c
  7956  003E5C  0E00               	movlw	0
  7957  003E5E  1A3D               	xorwf	(___flsub@a+2)^0,f,c
  7958  003E60  0E80               	movlw	128
  7959  003E62  1A3E               	xorwf	(___flsub@a+3)^0,f,c
  7960  003E64  C037  F005         	movff	___flsub@b,___fladd@b
  7961  003E68  C038  F006         	movff	___flsub@b+1,___fladd@b+1
  7962  003E6C  C039  F007         	movff	___flsub@b+2,___fladd@b+2
  7963  003E70  C03A  F008         	movff	___flsub@b+3,___fladd@b+3
  7964  003E74  C03B  F009         	movff	___flsub@a,___fladd@a
  7965  003E78  C03C  F00A         	movff	___flsub@a+1,___fladd@a+1
  7966  003E7C  C03D  F00B         	movff	___flsub@a+2,___fladd@a+2
  7967  003E80  C03E  F00C         	movff	___flsub@a+3,___fladd@a+3
  7968  003E84  ECC0  F00E         	call	___fladd	;wreg free
  7969  003E88  C005  F037         	movff	?___fladd,?___flsub
  7970  003E8C  C006  F038         	movff	?___fladd+1,?___flsub+1
  7971  003E90  C007  F039         	movff	?___fladd+2,?___flsub+2
  7972  003E94  C008  F03A         	movff	?___fladd+3,?___flsub+3
  7973  003E98  0012               	return		;funcret
  7974  003E9A                     __end_of___flsub:
  7975                           	callstack 0
  7976                           
  7977 ;; *************** function ___fladd *****************
  7978 ;; Defined at:
  7979 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  b               4    4[COMRAM] long 
  7982 ;;  a               4    8[COMRAM] long 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  grs             1   19[COMRAM] unsigned char 
  7985 ;;  bexp            1   18[COMRAM] unsigned char 
  7986 ;;  aexp            1   17[COMRAM] unsigned char 
  7987 ;;  signs           1   16[COMRAM] unsigned char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  4    4[COMRAM] unsigned char 
  7990 ;; Registers used:
  7991 ;;		wreg, status,2, status,0
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8001 ;;Total ram usage:       16 bytes
  8002 ;; Hardware stack levels used: 1
  8003 ;; Hardware stack levels required when called: 2
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		___flsub
  8008 ;;		_sqrtf
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text42
  8013  001D80                     __ptext42:
  8014                           	callstack 0
  8015  001D80                     ___fladd:
  8016                           	callstack 27
  8017  001D80  5008               	movf	(___fladd@b+3)^0,w,c
  8018  001D82  0B80               	andlw	128
  8019  001D84  6E11               	movwf	___fladd@signs^0,c
  8020  001D86  5008               	movf	(___fladd@b+3)^0,w,c
  8021  001D88  2408               	addwf	(___fladd@b+3)^0,w,c
  8022  001D8A  6E13               	movwf	___fladd@bexp^0,c
  8023  001D8C  AE07               	btfss	(___fladd@b+2)^0,7,c
  8024  001D8E  EFCB  F00E         	goto	u5631
  8025  001D92  EFCD  F00E         	goto	u5630
  8026  001D96                     u5631:
  8027  001D96  EFCE  F00E         	goto	l5296
  8028  001D9A                     u5630:
  8029  001D9A  8013               	bsf	___fladd@bexp^0,0,c
  8030  001D9C                     l5296:
  8031  001D9C  5013               	movf	___fladd@bexp^0,w,c
  8032  001D9E  B4D8               	btfsc	status,2,c
  8033  001DA0  EFD4  F00E         	goto	u5641
  8034  001DA4  EFD6  F00E         	goto	u5640
  8035  001DA8                     u5641:
  8036  001DA8  EFEB  F00E         	goto	l5306
  8037  001DAC                     u5640:
  8038  001DAC  2813               	incf	___fladd@bexp^0,w,c
  8039  001DAE  A4D8               	btfss	status,2,c
  8040  001DB0  EFDC  F00E         	goto	u5651
  8041  001DB4  EFDE  F00E         	goto	u5650
  8042  001DB8                     u5651:
  8043  001DB8  EFE6  F00E         	goto	l5302
  8044  001DBC                     u5650:
  8045  001DBC  0E00               	movlw	0
  8046  001DBE  6E05               	movwf	___fladd@b^0,c
  8047  001DC0  0E00               	movlw	0
  8048  001DC2  6E06               	movwf	(___fladd@b+1)^0,c
  8049  001DC4  0E00               	movlw	0
  8050  001DC6  6E07               	movwf	(___fladd@b+2)^0,c
  8051  001DC8  0E00               	movlw	0
  8052  001DCA  6E08               	movwf	(___fladd@b+3)^0,c
  8053  001DCC                     l5302:
  8054  001DCC  8E07               	bsf	(___fladd@b+2)^0,7,c
  8055  001DCE  0E00               	movlw	0
  8056  001DD0  6E08               	movwf	(___fladd@b+3)^0,c
  8057  001DD2  EFF3  F00E         	goto	l5308
  8058  001DD6                     l5306:
  8059  001DD6  0E00               	movlw	0
  8060  001DD8  6E05               	movwf	___fladd@b^0,c
  8061  001DDA  0E00               	movlw	0
  8062  001DDC  6E06               	movwf	(___fladd@b+1)^0,c
  8063  001DDE  0E00               	movlw	0
  8064  001DE0  6E07               	movwf	(___fladd@b+2)^0,c
  8065  001DE2  0E00               	movlw	0
  8066  001DE4  6E08               	movwf	(___fladd@b+3)^0,c
  8067  001DE6                     l5308:
  8068  001DE6  500C               	movf	(___fladd@a+3)^0,w,c
  8069  001DE8  0B80               	andlw	128
  8070  001DEA  6E12               	movwf	___fladd@aexp^0,c
  8071  001DEC  5011               	movf	___fladd@signs^0,w,c
  8072  001DEE  1812               	xorwf	___fladd@aexp^0,w,c
  8073  001DF0  B4D8               	btfsc	status,2,c
  8074  001DF2  EFFD  F00E         	goto	u5661
  8075  001DF6  EFFF  F00E         	goto	u5660
  8076  001DFA                     u5661:
  8077  001DFA  EF00  F00F         	goto	l5314
  8078  001DFE                     u5660:
  8079  001DFE  8C11               	bsf	___fladd@signs^0,6,c
  8080  001E00                     l5314:
  8081  001E00  500C               	movf	(___fladd@a+3)^0,w,c
  8082  001E02  240C               	addwf	(___fladd@a+3)^0,w,c
  8083  001E04  6E12               	movwf	___fladd@aexp^0,c
  8084  001E06  AE0B               	btfss	(___fladd@a+2)^0,7,c
  8085  001E08  EF08  F00F         	goto	u5671
  8086  001E0C  EF0A  F00F         	goto	u5670
  8087  001E10                     u5671:
  8088  001E10  EF0B  F00F         	goto	l5320
  8089  001E14                     u5670:
  8090  001E14  8012               	bsf	___fladd@aexp^0,0,c
  8091  001E16                     l5320:
  8092  001E16  5012               	movf	___fladd@aexp^0,w,c
  8093  001E18  B4D8               	btfsc	status,2,c
  8094  001E1A  EF11  F00F         	goto	u5681
  8095  001E1E  EF13  F00F         	goto	u5680
  8096  001E22                     u5681:
  8097  001E22  EF28  F00F         	goto	l5330
  8098  001E26                     u5680:
  8099  001E26  2812               	incf	___fladd@aexp^0,w,c
  8100  001E28  A4D8               	btfss	status,2,c
  8101  001E2A  EF19  F00F         	goto	u5691
  8102  001E2E  EF1B  F00F         	goto	u5690
  8103  001E32                     u5691:
  8104  001E32  EF23  F00F         	goto	l5326
  8105  001E36                     u5690:
  8106  001E36  0E00               	movlw	0
  8107  001E38  6E09               	movwf	___fladd@a^0,c
  8108  001E3A  0E00               	movlw	0
  8109  001E3C  6E0A               	movwf	(___fladd@a+1)^0,c
  8110  001E3E  0E00               	movlw	0
  8111  001E40  6E0B               	movwf	(___fladd@a+2)^0,c
  8112  001E42  0E00               	movlw	0
  8113  001E44  6E0C               	movwf	(___fladd@a+3)^0,c
  8114  001E46                     l5326:
  8115  001E46  8E0B               	bsf	(___fladd@a+2)^0,7,c
  8116  001E48  0E00               	movlw	0
  8117  001E4A  6E0C               	movwf	(___fladd@a+3)^0,c
  8118  001E4C  EF30  F00F         	goto	l5332
  8119  001E50                     l5330:
  8120  001E50  0E00               	movlw	0
  8121  001E52  6E09               	movwf	___fladd@a^0,c
  8122  001E54  0E00               	movlw	0
  8123  001E56  6E0A               	movwf	(___fladd@a+1)^0,c
  8124  001E58  0E00               	movlw	0
  8125  001E5A  6E0B               	movwf	(___fladd@a+2)^0,c
  8126  001E5C  0E00               	movlw	0
  8127  001E5E  6E0C               	movwf	(___fladd@a+3)^0,c
  8128  001E60                     l5332:
  8129  001E60  5013               	movf	___fladd@bexp^0,w,c
  8130  001E62  5C12               	subwf	___fladd@aexp^0,w,c
  8131  001E64  B0D8               	btfsc	status,0,c
  8132  001E66  EF37  F00F         	goto	u5701
  8133  001E6A  EF39  F00F         	goto	u5700
  8134  001E6E                     u5701:
  8135  001E6E  EF60  F00F         	goto	l5368
  8136  001E72                     u5700:
  8137  001E72  AC11               	btfss	___fladd@signs^0,6,c
  8138  001E74  EF3E  F00F         	goto	u5711
  8139  001E78  EF40  F00F         	goto	u5710
  8140  001E7C                     u5711:
  8141  001E7C  EF42  F00F         	goto	l5338
  8142  001E80                     u5710:
  8143  001E80  0E80               	movlw	128
  8144  001E82  1A11               	xorwf	___fladd@signs^0,f,c
  8145  001E84                     l5338:
  8146  001E84  C013  F014         	movff	___fladd@bexp,___fladd@grs
  8147  001E88  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8148  001E8C  C014  F012         	movff	___fladd@grs,___fladd@aexp
  8149  001E90  C005  F014         	movff	___fladd@b,___fladd@grs
  8150  001E94  C009  F005         	movff	___fladd@a,___fladd@b
  8151  001E98  C014  F009         	movff	___fladd@grs,___fladd@a
  8152  001E9C  C006  F014         	movff	___fladd@b+1,___fladd@grs
  8153  001EA0  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  8154  001EA4  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  8155  001EA8  C007  F014         	movff	___fladd@b+2,___fladd@grs
  8156  001EAC  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  8157  001EB0  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  8158  001EB4  C008  F014         	movff	___fladd@b+3,___fladd@grs
  8159  001EB8  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  8160  001EBC  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  8161  001EC0                     l5368:
  8162  001EC0  0E00               	movlw	0
  8163  001EC2  6E14               	movwf	___fladd@grs^0,c
  8164  001EC4  5013               	movf	___fladd@bexp^0,w,c
  8165  001EC6  C012  F00D         	movff	___fladd@aexp,??___fladd
  8166  001ECA  6A0E               	clrf	(??___fladd+1)^0,c
  8167  001ECC  5E0D               	subwf	??___fladd^0,f,c
  8168  001ECE  0E00               	movlw	0
  8169  001ED0  5A0E               	subwfb	(??___fladd+1)^0,f,c
  8170  001ED2  BE0E               	btfsc	(??___fladd+1)^0,7,c
  8171  001ED4  EF75  F00F         	goto	u5721
  8172  001ED8  500E               	movf	(??___fladd+1)^0,w,c
  8173  001EDA  E109               	bnz	u5720
  8174  001EDC  0E1A               	movlw	26
  8175  001EDE  5C0D               	subwf	??___fladd^0,w,c
  8176  001EE0  A0D8               	btfss	status,0,c
  8177  001EE2  EF75  F00F         	goto	u5721
  8178  001EE6  EF77  F00F         	goto	u5720
  8179  001EEA                     u5721:
  8180  001EEA  EFAE  F00F         	goto	l957
  8181  001EEE                     u5720:
  8182  001EEE  5005               	movf	___fladd@b^0,w,c
  8183  001EF0  1006               	iorwf	(___fladd@b+1)^0,w,c
  8184  001EF2  1007               	iorwf	(___fladd@b+2)^0,w,c
  8185  001EF4  1008               	iorwf	(___fladd@b+3)^0,w,c
  8186  001EF6  A4D8               	btfss	status,2,c
  8187  001EF8  EF80  F00F         	goto	u5731
  8188  001EFC  EF83  F00F         	goto	u5730
  8189  001F00                     u5731:
  8190  001F00  0E01               	movlw	1
  8191  001F02  EF84  F00F         	goto	u5740
  8192  001F06                     u5730:
  8193  001F06  0E00               	movlw	0
  8194  001F08                     u5740:
  8195  001F08  6E14               	movwf	___fladd@grs^0,c
  8196  001F0A  0E00               	movlw	0
  8197  001F0C  6E05               	movwf	___fladd@b^0,c
  8198  001F0E  0E00               	movlw	0
  8199  001F10  6E06               	movwf	(___fladd@b+1)^0,c
  8200  001F12  0E00               	movlw	0
  8201  001F14  6E07               	movwf	(___fladd@b+2)^0,c
  8202  001F16  0E00               	movlw	0
  8203  001F18  6E08               	movwf	(___fladd@b+3)^0,c
  8204  001F1A  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8205  001F1E  EFB7  F00F         	goto	l956
  8206  001F22                     l958:
  8207  001F22  A014               	btfss	___fladd@grs^0,0,c
  8208  001F24  EF96  F00F         	goto	u5751
  8209  001F28  EF98  F00F         	goto	u5750
  8210  001F2C                     u5751:
  8211  001F2C  EF9E  F00F         	goto	l5380
  8212  001F30                     u5750:
  8213  001F30  90D8               	bcf	status,0,c
  8214  001F32  3014               	rrcf	___fladd@grs^0,w,c
  8215  001F34  0901               	iorlw	1
  8216  001F36  6E14               	movwf	___fladd@grs^0,c
  8217  001F38  EFA0  F00F         	goto	l5382
  8218  001F3C                     l5380:
  8219  001F3C  90D8               	bcf	status,0,c
  8220  001F3E  3214               	rrcf	___fladd@grs^0,f,c
  8221  001F40                     l5382:
  8222  001F40  A005               	btfss	___fladd@b^0,0,c
  8223  001F42  EFA5  F00F         	goto	u5761
  8224  001F46  EFA7  F00F         	goto	u5760
  8225  001F4A                     u5761:
  8226  001F4A  EFA8  F00F         	goto	l5386
  8227  001F4E                     u5760:
  8228  001F4E  8E14               	bsf	___fladd@grs^0,7,c
  8229  001F50                     l5386:
  8230  001F50  3408               	rlcf	(___fladd@b+3)^0,w,c
  8231  001F52  3208               	rrcf	(___fladd@b+3)^0,f,c
  8232  001F54  3207               	rrcf	(___fladd@b+2)^0,f,c
  8233  001F56  3206               	rrcf	(___fladd@b+1)^0,f,c
  8234  001F58  3205               	rrcf	___fladd@b^0,f,c
  8235  001F5A  2A13               	incf	___fladd@bexp^0,f,c
  8236  001F5C                     l957:
  8237  001F5C  5012               	movf	___fladd@aexp^0,w,c
  8238  001F5E  5C13               	subwf	___fladd@bexp^0,w,c
  8239  001F60  A0D8               	btfss	status,0,c
  8240  001F62  EFB5  F00F         	goto	u5771
  8241  001F66  EFB7  F00F         	goto	u5770
  8242  001F6A                     u5771:
  8243  001F6A  EF91  F00F         	goto	l958
  8244  001F6E                     u5770:
  8245  001F6E                     l956:
  8246  001F6E  BC11               	btfsc	___fladd@signs^0,6,c
  8247  001F70  EFBC  F00F         	goto	u5781
  8248  001F74  EFBE  F00F         	goto	u5780
  8249  001F78                     u5781:
  8250  001F78  EFFE  F00F         	goto	l5414
  8251  001F7C                     u5780:
  8252  001F7C  5013               	movf	___fladd@bexp^0,w,c
  8253  001F7E  A4D8               	btfss	status,2,c
  8254  001F80  EFC4  F00F         	goto	u5791
  8255  001F84  EFC6  F00F         	goto	u5790
  8256  001F88                     u5791:
  8257  001F88  EFD0  F00F         	goto	l5396
  8258  001F8C                     u5790:
  8259  001F8C  0E00               	movlw	0
  8260  001F8E  6E05               	movwf	?___fladd^0,c
  8261  001F90  0E00               	movlw	0
  8262  001F92  6E06               	movwf	(?___fladd+1)^0,c
  8263  001F94  0E00               	movlw	0
  8264  001F96  6E07               	movwf	(?___fladd+2)^0,c
  8265  001F98  0E00               	movlw	0
  8266  001F9A  6E08               	movwf	(?___fladd+3)^0,c
  8267  001F9C  EF1F  F011         	goto	l965
  8268  001FA0                     l5396:
  8269  001FA0  5009               	movf	___fladd@a^0,w,c
  8270  001FA2  2605               	addwf	___fladd@b^0,f,c
  8271  001FA4  500A               	movf	(___fladd@a+1)^0,w,c
  8272  001FA6  2206               	addwfc	(___fladd@b+1)^0,f,c
  8273  001FA8  500B               	movf	(___fladd@a+2)^0,w,c
  8274  001FAA  2207               	addwfc	(___fladd@b+2)^0,f,c
  8275  001FAC  500C               	movf	(___fladd@a+3)^0,w,c
  8276  001FAE  2208               	addwfc	(___fladd@b+3)^0,f,c
  8277  001FB0  A008               	btfss	(___fladd@b+3)^0,0,c
  8278  001FB2  EFDD  F00F         	goto	u5801
  8279  001FB6  EFDF  F00F         	goto	u5800
  8280  001FBA                     u5801:
  8281  001FBA  EF8B  F010         	goto	l5450
  8282  001FBE                     u5800:
  8283  001FBE  A014               	btfss	___fladd@grs^0,0,c
  8284  001FC0  EFE4  F00F         	goto	u5811
  8285  001FC4  EFE6  F00F         	goto	u5810
  8286  001FC8                     u5811:
  8287  001FC8  EFEC  F00F         	goto	l5404
  8288  001FCC                     u5810:
  8289  001FCC  90D8               	bcf	status,0,c
  8290  001FCE  3014               	rrcf	___fladd@grs^0,w,c
  8291  001FD0  0901               	iorlw	1
  8292  001FD2  6E14               	movwf	___fladd@grs^0,c
  8293  001FD4  EFEE  F00F         	goto	l5406
  8294  001FD8                     l5404:
  8295  001FD8  90D8               	bcf	status,0,c
  8296  001FDA  3214               	rrcf	___fladd@grs^0,f,c
  8297  001FDC                     l5406:
  8298  001FDC  A005               	btfss	___fladd@b^0,0,c
  8299  001FDE  EFF3  F00F         	goto	u5821
  8300  001FE2  EFF5  F00F         	goto	u5820
  8301  001FE6                     u5821:
  8302  001FE6  EFF6  F00F         	goto	l5410
  8303  001FEA                     u5820:
  8304  001FEA  8E14               	bsf	___fladd@grs^0,7,c
  8305  001FEC                     l5410:
  8306  001FEC  3408               	rlcf	(___fladd@b+3)^0,w,c
  8307  001FEE  3208               	rrcf	(___fladd@b+3)^0,f,c
  8308  001FF0  3207               	rrcf	(___fladd@b+2)^0,f,c
  8309  001FF2  3206               	rrcf	(___fladd@b+1)^0,f,c
  8310  001FF4  3205               	rrcf	___fladd@b^0,f,c
  8311  001FF6  2A13               	incf	___fladd@bexp^0,f,c
  8312  001FF8  EF8B  F010         	goto	l5450
  8313  001FFC                     l5414:
  8314  001FFC  5009               	movf	___fladd@a^0,w,c
  8315  001FFE  5C05               	subwf	___fladd@b^0,w,c
  8316  002000  500A               	movf	(___fladd@a+1)^0,w,c
  8317  002002  5806               	subwfb	(___fladd@b+1)^0,w,c
  8318  002004  500B               	movf	(___fladd@a+2)^0,w,c
  8319  002006  5807               	subwfb	(___fladd@b+2)^0,w,c
  8320  002008  5008               	movf	(___fladd@b+3)^0,w,c
  8321  00200A  0A80               	xorlw	128
  8322  00200C  6E0D               	movwf	??___fladd^0,c
  8323  00200E  500C               	movf	(___fladd@a+3)^0,w,c
  8324  002010  0A80               	xorlw	128
  8325  002012  580D               	subwfb	??___fladd^0,w,c
  8326  002014  B0D8               	btfsc	status,0,c
  8327  002016  EF0F  F010         	goto	u5831
  8328  00201A  EF11  F010         	goto	u5830
  8329  00201E                     u5831:
  8330  00201E  EF3C  F010         	goto	l5424
  8331  002022                     u5830:
  8332  002022  5005               	movf	___fladd@b^0,w,c
  8333  002024  5C09               	subwf	___fladd@a^0,w,c
  8334  002026  6E0D               	movwf	??___fladd^0,c
  8335  002028  5006               	movf	(___fladd@b+1)^0,w,c
  8336  00202A  580A               	subwfb	(___fladd@a+1)^0,w,c
  8337  00202C  6E0E               	movwf	(??___fladd+1)^0,c
  8338  00202E  5007               	movf	(___fladd@b+2)^0,w,c
  8339  002030  580B               	subwfb	(___fladd@a+2)^0,w,c
  8340  002032  6E0F               	movwf	(??___fladd+2)^0,c
  8341  002034  5008               	movf	(___fladd@b+3)^0,w,c
  8342  002036  580C               	subwfb	(___fladd@a+3)^0,w,c
  8343  002038  6E10               	movwf	(??___fladd+3)^0,c
  8344  00203A  0EFF               	movlw	255
  8345  00203C  240D               	addwf	??___fladd^0,w,c
  8346  00203E  6E05               	movwf	___fladd@b^0,c
  8347  002040  0EFF               	movlw	255
  8348  002042  200E               	addwfc	(??___fladd+1)^0,w,c
  8349  002044  6E06               	movwf	(___fladd@b+1)^0,c
  8350  002046  0EFF               	movlw	255
  8351  002048  200F               	addwfc	(??___fladd+2)^0,w,c
  8352  00204A  6E07               	movwf	(___fladd@b+2)^0,c
  8353  00204C  0EFF               	movlw	255
  8354  00204E  2010               	addwfc	(??___fladd+3)^0,w,c
  8355  002050  6E08               	movwf	(___fladd@b+3)^0,c
  8356  002052  0E80               	movlw	128
  8357  002054  1A11               	xorwf	___fladd@signs^0,f,c
  8358  002056  6C14               	negf	___fladd@grs^0,c
  8359  002058  5014               	movf	___fladd@grs^0,w,c
  8360  00205A  A4D8               	btfss	status,2,c
  8361  00205C  EF32  F010         	goto	u5841
  8362  002060  EF34  F010         	goto	u5840
  8363  002064                     u5841:
  8364  002064  EF44  F010         	goto	l973
  8365  002068                     u5840:
  8366  002068  0E01               	movlw	1
  8367  00206A  2605               	addwf	___fladd@b^0,f,c
  8368  00206C  0E00               	movlw	0
  8369  00206E  2206               	addwfc	(___fladd@b+1)^0,f,c
  8370  002070  2207               	addwfc	(___fladd@b+2)^0,f,c
  8371  002072  2208               	addwfc	(___fladd@b+3)^0,f,c
  8372  002074  EF44  F010         	goto	l973
  8373  002078                     l5424:
  8374  002078  5009               	movf	___fladd@a^0,w,c
  8375  00207A  5E05               	subwf	___fladd@b^0,f,c
  8376  00207C  500A               	movf	(___fladd@a+1)^0,w,c
  8377  00207E  5A06               	subwfb	(___fladd@b+1)^0,f,c
  8378  002080  500B               	movf	(___fladd@a+2)^0,w,c
  8379  002082  5A07               	subwfb	(___fladd@b+2)^0,f,c
  8380  002084  500C               	movf	(___fladd@a+3)^0,w,c
  8381  002086  5A08               	subwfb	(___fladd@b+3)^0,f,c
  8382  002088                     l973:
  8383  002088  5005               	movf	___fladd@b^0,w,c
  8384  00208A  1006               	iorwf	(___fladd@b+1)^0,w,c
  8385  00208C  1007               	iorwf	(___fladd@b+2)^0,w,c
  8386  00208E  1008               	iorwf	(___fladd@b+3)^0,w,c
  8387  002090  A4D8               	btfss	status,2,c
  8388  002092  EF4D  F010         	goto	u5851
  8389  002096  EF4F  F010         	goto	u5850
  8390  00209A                     u5851:
  8391  00209A  EF84  F010         	goto	l5448
  8392  00209E                     u5850:
  8393  00209E  5014               	movf	___fladd@grs^0,w,c
  8394  0020A0  A4D8               	btfss	status,2,c
  8395  0020A2  EF55  F010         	goto	u5861
  8396  0020A6  EF57  F010         	goto	u5860
  8397  0020AA                     u5861:
  8398  0020AA  EF84  F010         	goto	l5448
  8399  0020AE                     u5860:
  8400  0020AE  0E00               	movlw	0
  8401  0020B0  6E05               	movwf	?___fladd^0,c
  8402  0020B2  0E00               	movlw	0
  8403  0020B4  6E06               	movwf	(?___fladd+1)^0,c
  8404  0020B6  0E00               	movlw	0
  8405  0020B8  6E07               	movwf	(?___fladd+2)^0,c
  8406  0020BA  0E00               	movlw	0
  8407  0020BC  6E08               	movwf	(?___fladd+3)^0,c
  8408  0020BE  EF1F  F011         	goto	l965
  8409  0020C2                     l5432:
  8410  0020C2  90D8               	bcf	status,0,c
  8411  0020C4  3605               	rlcf	___fladd@b^0,f,c
  8412  0020C6  3606               	rlcf	(___fladd@b+1)^0,f,c
  8413  0020C8  3607               	rlcf	(___fladd@b+2)^0,f,c
  8414  0020CA  3608               	rlcf	(___fladd@b+3)^0,f,c
  8415  0020CC  AE14               	btfss	___fladd@grs^0,7,c
  8416  0020CE  EF6B  F010         	goto	u5871
  8417  0020D2  EF6D  F010         	goto	u5870
  8418  0020D6                     u5871:
  8419  0020D6  EF6E  F010         	goto	l5438
  8420  0020DA                     u5870:
  8421  0020DA  8005               	bsf	___fladd@b^0,0,c
  8422  0020DC                     l5438:
  8423  0020DC  A014               	btfss	___fladd@grs^0,0,c
  8424  0020DE  EF73  F010         	goto	u5881
  8425  0020E2  EF75  F010         	goto	u5880
  8426  0020E6                     u5881:
  8427  0020E6  EF79  F010         	goto	l5442
  8428  0020EA                     u5880:
  8429  0020EA  80D8               	bsf	status,0,c
  8430  0020EC  3614               	rlcf	___fladd@grs^0,f,c
  8431  0020EE  EF7B  F010         	goto	l5444
  8432  0020F2                     l5442:
  8433  0020F2  90D8               	bcf	status,0,c
  8434  0020F4  3614               	rlcf	___fladd@grs^0,f,c
  8435  0020F6                     l5444:
  8436  0020F6  5013               	movf	___fladd@bexp^0,w,c
  8437  0020F8  B4D8               	btfsc	status,2,c
  8438  0020FA  EF81  F010         	goto	u5891
  8439  0020FE  EF83  F010         	goto	u5890
  8440  002102                     u5891:
  8441  002102  EF84  F010         	goto	l5448
  8442  002106                     u5890:
  8443  002106  0613               	decf	___fladd@bexp^0,f,c
  8444  002108                     l5448:
  8445  002108  AE07               	btfss	(___fladd@b+2)^0,7,c
  8446  00210A  EF89  F010         	goto	u5901
  8447  00210E  EF8B  F010         	goto	u5900
  8448  002112                     u5901:
  8449  002112  EF61  F010         	goto	l5432
  8450  002116                     u5900:
  8451  002116                     l5450:
  8452  002116  0E00               	movlw	0
  8453  002118  6E12               	movwf	___fladd@aexp^0,c
  8454  00211A  AE14               	btfss	___fladd@grs^0,7,c
  8455  00211C  EF92  F010         	goto	u5911
  8456  002120  EF94  F010         	goto	u5910
  8457  002124                     u5911:
  8458  002124  EFAC  F010         	goto	l982
  8459  002128                     u5910:
  8460  002128  C014  F00D         	movff	___fladd@grs,??___fladd
  8461  00212C  0E7F               	movlw	127
  8462  00212E  160D               	andwf	??___fladd^0,f,c
  8463  002130  B4D8               	btfsc	status,2,c
  8464  002132  EF9D  F010         	goto	u5921
  8465  002136  EF9F  F010         	goto	u5920
  8466  00213A                     u5921:
  8467  00213A  EFA3  F010         	goto	l983
  8468  00213E                     u5920:
  8469  00213E                     l5456:
  8470  00213E  0E01               	movlw	1
  8471  002140  6E12               	movwf	___fladd@aexp^0,c
  8472  002142  EFAC  F010         	goto	l982
  8473  002146                     l983:
  8474  002146  A005               	btfss	___fladd@b^0,0,c
  8475  002148  EFA8  F010         	goto	u5931
  8476  00214C  EFAA  F010         	goto	u5930
  8477  002150                     u5931:
  8478  002150  EFAC  F010         	goto	l982
  8479  002154                     u5930:
  8480  002154  EF9F  F010         	goto	l5456
  8481  002158                     l982:
  8482  002158  5012               	movf	___fladd@aexp^0,w,c
  8483  00215A  B4D8               	btfsc	status,2,c
  8484  00215C  EFB2  F010         	goto	u5941
  8485  002160  EFB4  F010         	goto	u5940
  8486  002164                     u5941:
  8487  002164  EFDF  F010         	goto	l5468
  8488  002168                     u5940:
  8489  002168  0E01               	movlw	1
  8490  00216A  2605               	addwf	___fladd@b^0,f,c
  8491  00216C  0E00               	movlw	0
  8492  00216E  2206               	addwfc	(___fladd@b+1)^0,f,c
  8493  002170  2207               	addwfc	(___fladd@b+2)^0,f,c
  8494  002172  2208               	addwfc	(___fladd@b+3)^0,f,c
  8495  002174  A008               	btfss	(___fladd@b+3)^0,0,c
  8496  002176  EFBF  F010         	goto	u5951
  8497  00217A  EFC1  F010         	goto	u5950
  8498  00217E                     u5951:
  8499  00217E  EFDF  F010         	goto	l5468
  8500  002182                     u5950:
  8501  002182  C005  F00D         	movff	___fladd@b,??___fladd
  8502  002186  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  8503  00218A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  8504  00218E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  8505  002192  3410               	rlcf	(??___fladd+3)^0,w,c
  8506  002194  3210               	rrcf	(??___fladd+3)^0,f,c
  8507  002196  320F               	rrcf	(??___fladd+2)^0,f,c
  8508  002198  320E               	rrcf	(??___fladd+1)^0,f,c
  8509  00219A  320D               	rrcf	??___fladd^0,f,c
  8510  00219C  C00D  F005         	movff	??___fladd,___fladd@b
  8511  0021A0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  8512  0021A4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  8513  0021A8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  8514  0021AC  2813               	incf	___fladd@bexp^0,w,c
  8515  0021AE  B4D8               	btfsc	status,2,c
  8516  0021B0  EFDC  F010         	goto	u5961
  8517  0021B4  EFDE  F010         	goto	u5960
  8518  0021B8                     u5961:
  8519  0021B8  EFDF  F010         	goto	l5468
  8520  0021BC                     u5960:
  8521  0021BC  2A13               	incf	___fladd@bexp^0,f,c
  8522  0021BE                     l5468:
  8523  0021BE  2813               	incf	___fladd@bexp^0,w,c
  8524  0021C0  B4D8               	btfsc	status,2,c
  8525  0021C2  EFE5  F010         	goto	u5971
  8526  0021C6  EFE7  F010         	goto	u5970
  8527  0021CA                     u5971:
  8528  0021CA  EFEF  F010         	goto	l5472
  8529  0021CE                     u5970:
  8530  0021CE  5013               	movf	___fladd@bexp^0,w,c
  8531  0021D0  A4D8               	btfss	status,2,c
  8532  0021D2  EFED  F010         	goto	u5981
  8533  0021D6  EFEF  F010         	goto	u5980
  8534  0021DA                     u5981:
  8535  0021DA  EF01  F011         	goto	l5476
  8536  0021DE                     u5980:
  8537  0021DE                     l5472:
  8538  0021DE  0E00               	movlw	0
  8539  0021E0  6E05               	movwf	___fladd@b^0,c
  8540  0021E2  0E00               	movlw	0
  8541  0021E4  6E06               	movwf	(___fladd@b+1)^0,c
  8542  0021E6  0E00               	movlw	0
  8543  0021E8  6E07               	movwf	(___fladd@b+2)^0,c
  8544  0021EA  0E00               	movlw	0
  8545  0021EC  6E08               	movwf	(___fladd@b+3)^0,c
  8546  0021EE  5013               	movf	___fladd@bexp^0,w,c
  8547  0021F0  A4D8               	btfss	status,2,c
  8548  0021F2  EFFD  F010         	goto	u5991
  8549  0021F6  EFFF  F010         	goto	u5990
  8550  0021FA                     u5991:
  8551  0021FA  EF01  F011         	goto	l5476
  8552  0021FE                     u5990:
  8553  0021FE  0E00               	movlw	0
  8554  002200  6E11               	movwf	___fladd@signs^0,c
  8555  002202                     l5476:
  8556  002202  A013               	btfss	___fladd@bexp^0,0,c
  8557  002204  EF06  F011         	goto	u6001
  8558  002208  EF08  F011         	goto	u6000
  8559  00220C                     u6001:
  8560  00220C  EF0B  F011         	goto	l5480
  8561  002210                     u6000:
  8562  002210  8E07               	bsf	(___fladd@b+2)^0,7,c
  8563  002212  EF0C  F011         	goto	l5482
  8564  002216                     l5480:
  8565  002216  9E07               	bcf	(___fladd@b+2)^0,7,c
  8566  002218                     l5482:
  8567  002218  90D8               	bcf	status,0,c
  8568  00221A  3013               	rrcf	___fladd@bexp^0,w,c
  8569  00221C  6E08               	movwf	(___fladd@b+3)^0,c
  8570  00221E  AE11               	btfss	___fladd@signs^0,7,c
  8571  002220  EF14  F011         	goto	u6011
  8572  002224  EF16  F011         	goto	u6010
  8573  002228                     u6011:
  8574  002228  EF17  F011         	goto	l5488
  8575  00222C                     u6010:
  8576  00222C  8E08               	bsf	(___fladd@b+3)^0,7,c
  8577  00222E                     l5488:
  8578  00222E  C005  F005         	movff	___fladd@b,?___fladd
  8579  002232  C006  F006         	movff	___fladd@b+1,?___fladd+1
  8580  002236  C007  F007         	movff	___fladd@b+2,?___fladd+2
  8581  00223A  C008  F008         	movff	___fladd@b+3,?___fladd+3
  8582  00223E                     l965:
  8583  00223E  0012               	return		;funcret
  8584  002240                     __end_of___fladd:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function ___flmul *****************
  8588 ;; Defined at:
  8589 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  b               4    4[COMRAM] unsigned char 
  8592 ;;  a               4    8[COMRAM] unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  prod            4   23[COMRAM] struct .
  8595 ;;  grs             4   18[COMRAM] unsigned long 
  8596 ;;  temp            2   27[COMRAM] struct .
  8597 ;;  bexp            1   22[COMRAM] unsigned char 
  8598 ;;  aexp            1   17[COMRAM] unsigned char 
  8599 ;;  sign            1   16[COMRAM] unsigned char 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  4    4[COMRAM] unsigned char 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0, prodl, prodh
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8609 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;Total ram usage:       25 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 2
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;;		_sqrtf
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text43
  8625  002240                     __ptext43:
  8626                           	callstack 0
  8627  002240                     ___flmul:
  8628                           	callstack 28
  8629  002240  5008               	movf	(___flmul@b+3)^0,w,c
  8630  002242  0B80               	andlw	128
  8631  002244  6E11               	movwf	___flmul@sign^0,c
  8632  002246  5008               	movf	(___flmul@b+3)^0,w,c
  8633  002248  2408               	addwf	(___flmul@b+3)^0,w,c
  8634  00224A  6E17               	movwf	___flmul@bexp^0,c
  8635  00224C  AE07               	btfss	(___flmul@b+2)^0,7,c
  8636  00224E  EF2B  F011         	goto	u6661
  8637  002252  EF2D  F011         	goto	u6660
  8638  002256                     u6661:
  8639  002256  EF2E  F011         	goto	l5862
  8640  00225A                     u6660:
  8641  00225A  8017               	bsf	___flmul@bexp^0,0,c
  8642  00225C                     l5862:
  8643  00225C  5017               	movf	___flmul@bexp^0,w,c
  8644  00225E  B4D8               	btfsc	status,2,c
  8645  002260  EF34  F011         	goto	u6671
  8646  002264  EF36  F011         	goto	u6670
  8647  002268                     u6671:
  8648  002268  EF49  F011         	goto	l5870
  8649  00226C                     u6670:
  8650  00226C  2817               	incf	___flmul@bexp^0,w,c
  8651  00226E  A4D8               	btfss	status,2,c
  8652  002270  EF3C  F011         	goto	u6681
  8653  002274  EF3E  F011         	goto	u6680
  8654  002278                     u6681:
  8655  002278  EF46  F011         	goto	l5868
  8656  00227C                     u6680:
  8657  00227C  0E00               	movlw	0
  8658  00227E  6E05               	movwf	___flmul@b^0,c
  8659  002280  0E00               	movlw	0
  8660  002282  6E06               	movwf	(___flmul@b+1)^0,c
  8661  002284  0E00               	movlw	0
  8662  002286  6E07               	movwf	(___flmul@b+2)^0,c
  8663  002288  0E00               	movlw	0
  8664  00228A  6E08               	movwf	(___flmul@b+3)^0,c
  8665  00228C                     l5868:
  8666  00228C  8E07               	bsf	(___flmul@b+2)^0,7,c
  8667  00228E  EF51  F011         	goto	l5872
  8668  002292                     l5870:
  8669  002292  0E00               	movlw	0
  8670  002294  6E05               	movwf	___flmul@b^0,c
  8671  002296  0E00               	movlw	0
  8672  002298  6E06               	movwf	(___flmul@b+1)^0,c
  8673  00229A  0E00               	movlw	0
  8674  00229C  6E07               	movwf	(___flmul@b+2)^0,c
  8675  00229E  0E00               	movlw	0
  8676  0022A0  6E08               	movwf	(___flmul@b+3)^0,c
  8677  0022A2                     l5872:
  8678  0022A2  500C               	movf	(___flmul@a+3)^0,w,c
  8679  0022A4  0B80               	andlw	128
  8680  0022A6  1A11               	xorwf	___flmul@sign^0,f,c
  8681  0022A8  500C               	movf	(___flmul@a+3)^0,w,c
  8682  0022AA  240C               	addwf	(___flmul@a+3)^0,w,c
  8683  0022AC  6E12               	movwf	___flmul@aexp^0,c
  8684  0022AE  AE0B               	btfss	(___flmul@a+2)^0,7,c
  8685  0022B0  EF5C  F011         	goto	u6691
  8686  0022B4  EF5E  F011         	goto	u6690
  8687  0022B8                     u6691:
  8688  0022B8  EF5F  F011         	goto	l5880
  8689  0022BC                     u6690:
  8690  0022BC  8012               	bsf	___flmul@aexp^0,0,c
  8691  0022BE                     l5880:
  8692  0022BE  5012               	movf	___flmul@aexp^0,w,c
  8693  0022C0  B4D8               	btfsc	status,2,c
  8694  0022C2  EF65  F011         	goto	u6701
  8695  0022C6  EF67  F011         	goto	u6700
  8696  0022CA                     u6701:
  8697  0022CA  EF7A  F011         	goto	l5888
  8698  0022CE                     u6700:
  8699  0022CE  2812               	incf	___flmul@aexp^0,w,c
  8700  0022D0  A4D8               	btfss	status,2,c
  8701  0022D2  EF6D  F011         	goto	u6711
  8702  0022D6  EF6F  F011         	goto	u6710
  8703  0022DA                     u6711:
  8704  0022DA  EF77  F011         	goto	l5886
  8705  0022DE                     u6710:
  8706  0022DE  0E00               	movlw	0
  8707  0022E0  6E09               	movwf	___flmul@a^0,c
  8708  0022E2  0E00               	movlw	0
  8709  0022E4  6E0A               	movwf	(___flmul@a+1)^0,c
  8710  0022E6  0E00               	movlw	0
  8711  0022E8  6E0B               	movwf	(___flmul@a+2)^0,c
  8712  0022EA  0E00               	movlw	0
  8713  0022EC  6E0C               	movwf	(___flmul@a+3)^0,c
  8714  0022EE                     l5886:
  8715  0022EE  8E0B               	bsf	(___flmul@a+2)^0,7,c
  8716  0022F0  EF82  F011         	goto	l1042
  8717  0022F4                     l5888:
  8718  0022F4  0E00               	movlw	0
  8719  0022F6  6E09               	movwf	___flmul@a^0,c
  8720  0022F8  0E00               	movlw	0
  8721  0022FA  6E0A               	movwf	(___flmul@a+1)^0,c
  8722  0022FC  0E00               	movlw	0
  8723  0022FE  6E0B               	movwf	(___flmul@a+2)^0,c
  8724  002300  0E00               	movlw	0
  8725  002302  6E0C               	movwf	(___flmul@a+3)^0,c
  8726  002304                     l1042:
  8727  002304  5012               	movf	___flmul@aexp^0,w,c
  8728  002306  B4D8               	btfsc	status,2,c
  8729  002308  EF88  F011         	goto	u6721
  8730  00230C  EF8A  F011         	goto	u6720
  8731  002310                     u6721:
  8732  002310  EF92  F011         	goto	l5892
  8733  002314                     u6720:
  8734  002314  5017               	movf	___flmul@bexp^0,w,c
  8735  002316  A4D8               	btfss	status,2,c
  8736  002318  EF90  F011         	goto	u6731
  8737  00231C  EF92  F011         	goto	u6730
  8738  002320                     u6731:
  8739  002320  EF9C  F011         	goto	l5896
  8740  002324                     u6730:
  8741  002324                     l5892:
  8742  002324  0E00               	movlw	0
  8743  002326  6E05               	movwf	?___flmul^0,c
  8744  002328  0E00               	movlw	0
  8745  00232A  6E06               	movwf	(?___flmul+1)^0,c
  8746  00232C  0E00               	movlw	0
  8747  00232E  6E07               	movwf	(?___flmul+2)^0,c
  8748  002330  0E00               	movlw	0
  8749  002332  6E08               	movwf	(?___flmul+3)^0,c
  8750  002334  EF34  F013         	goto	l1046
  8751  002338                     l5896:
  8752  002338  500B               	movf	(___flmul@a+2)^0,w,c
  8753  00233A  0205               	mulwf	___flmul@b^0,c
  8754  00233C  CFF3 F01C          	movff	prodl,___flmul@temp
  8755  002340  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8756  002344  501C               	movf	___flmul@temp^0,w,c
  8757  002346  6E13               	movwf	___flmul@grs^0,c
  8758  002348  6A14               	clrf	(___flmul@grs+1)^0,c
  8759  00234A  6A15               	clrf	(___flmul@grs+2)^0,c
  8760  00234C  6A16               	clrf	(___flmul@grs+3)^0,c
  8761  00234E  501D               	movf	(___flmul@temp+1)^0,w,c
  8762  002350  6E18               	movwf	___flmul@prod^0,c
  8763  002352  6A19               	clrf	(___flmul@prod+1)^0,c
  8764  002354  6A1A               	clrf	(___flmul@prod+2)^0,c
  8765  002356  6A1B               	clrf	(___flmul@prod+3)^0,c
  8766  002358  500A               	movf	(___flmul@a+1)^0,w,c
  8767  00235A  0206               	mulwf	(___flmul@b+1)^0,c
  8768  00235C  CFF3 F01C          	movff	prodl,___flmul@temp
  8769  002360  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8770  002364  501C               	movf	___flmul@temp^0,w,c
  8771  002366  2613               	addwf	___flmul@grs^0,f,c
  8772  002368  0E00               	movlw	0
  8773  00236A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8774  00236C  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8775  00236E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8776  002370  501D               	movf	(___flmul@temp+1)^0,w,c
  8777  002372  2618               	addwf	___flmul@prod^0,f,c
  8778  002374  0E00               	movlw	0
  8779  002376  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8780  002378  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8781  00237A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8782  00237C  5009               	movf	___flmul@a^0,w,c
  8783  00237E  0207               	mulwf	(___flmul@b+2)^0,c
  8784  002380  CFF3 F01C          	movff	prodl,___flmul@temp
  8785  002384  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8786  002388  501C               	movf	___flmul@temp^0,w,c
  8787  00238A  2613               	addwf	___flmul@grs^0,f,c
  8788  00238C  0E00               	movlw	0
  8789  00238E  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8790  002390  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8791  002392  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8792  002394  501D               	movf	(___flmul@temp+1)^0,w,c
  8793  002396  2618               	addwf	___flmul@prod^0,f,c
  8794  002398  0E00               	movlw	0
  8795  00239A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8796  00239C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8797  00239E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8798  0023A0  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8799  0023A4  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8800  0023A8  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8801  0023AC  6A13               	clrf	___flmul@grs^0,c
  8802  0023AE  5009               	movf	___flmul@a^0,w,c
  8803  0023B0  0206               	mulwf	(___flmul@b+1)^0,c
  8804  0023B2  CFF3 F01C          	movff	prodl,___flmul@temp
  8805  0023B6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8806  0023BA  501C               	movf	___flmul@temp^0,w,c
  8807  0023BC  2613               	addwf	___flmul@grs^0,f,c
  8808  0023BE  501D               	movf	(___flmul@temp+1)^0,w,c
  8809  0023C0  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8810  0023C2  0E00               	movlw	0
  8811  0023C4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8812  0023C6  0E00               	movlw	0
  8813  0023C8  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8814  0023CA  500A               	movf	(___flmul@a+1)^0,w,c
  8815  0023CC  0205               	mulwf	___flmul@b^0,c
  8816  0023CE  CFF3 F01C          	movff	prodl,___flmul@temp
  8817  0023D2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8818  0023D6  501C               	movf	___flmul@temp^0,w,c
  8819  0023D8  2613               	addwf	___flmul@grs^0,f,c
  8820  0023DA  501D               	movf	(___flmul@temp+1)^0,w,c
  8821  0023DC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8822  0023DE  0E00               	movlw	0
  8823  0023E0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8824  0023E2  0E00               	movlw	0
  8825  0023E4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8826  0023E6  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8827  0023EA  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8828  0023EE  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8829  0023F2  6A13               	clrf	___flmul@grs^0,c
  8830  0023F4  5009               	movf	___flmul@a^0,w,c
  8831  0023F6  0205               	mulwf	___flmul@b^0,c
  8832  0023F8  CFF3 F01C          	movff	prodl,___flmul@temp
  8833  0023FC  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8834  002400  501C               	movf	___flmul@temp^0,w,c
  8835  002402  2613               	addwf	___flmul@grs^0,f,c
  8836  002404  501D               	movf	(___flmul@temp+1)^0,w,c
  8837  002406  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8838  002408  0E00               	movlw	0
  8839  00240A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8840  00240C  0E00               	movlw	0
  8841  00240E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8842  002410  500B               	movf	(___flmul@a+2)^0,w,c
  8843  002412  0206               	mulwf	(___flmul@b+1)^0,c
  8844  002414  CFF3 F01C          	movff	prodl,___flmul@temp
  8845  002418  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8846  00241C  501C               	movf	___flmul@temp^0,w,c
  8847  00241E  2618               	addwf	___flmul@prod^0,f,c
  8848  002420  501D               	movf	(___flmul@temp+1)^0,w,c
  8849  002422  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8850  002424  0E00               	movlw	0
  8851  002426  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8852  002428  0E00               	movlw	0
  8853  00242A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8854  00242C  500A               	movf	(___flmul@a+1)^0,w,c
  8855  00242E  0207               	mulwf	(___flmul@b+2)^0,c
  8856  002430  CFF3 F01C          	movff	prodl,___flmul@temp
  8857  002434  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8858  002438  501C               	movf	___flmul@temp^0,w,c
  8859  00243A  2618               	addwf	___flmul@prod^0,f,c
  8860  00243C  501D               	movf	(___flmul@temp+1)^0,w,c
  8861  00243E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8862  002440  0E00               	movlw	0
  8863  002442  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8864  002444  0E00               	movlw	0
  8865  002446  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8866  002448  500B               	movf	(___flmul@a+2)^0,w,c
  8867  00244A  0207               	mulwf	(___flmul@b+2)^0,c
  8868  00244C  CFF3 F01C          	movff	prodl,___flmul@temp
  8869  002450  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8870  002454  501C               	movf	___flmul@temp^0,w,c
  8871  002456  6E0D               	movwf	??___flmul^0,c
  8872  002458  501D               	movf	(___flmul@temp+1)^0,w,c
  8873  00245A  6E0E               	movwf	(??___flmul+1)^0,c
  8874  00245C  6A0F               	clrf	(??___flmul+2)^0,c
  8875  00245E  6A10               	clrf	(??___flmul+3)^0,c
  8876  002460  C00F  F010         	movff	??___flmul+2,??___flmul+3
  8877  002464  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  8878  002468  C00D  F00E         	movff	??___flmul,??___flmul+1
  8879  00246C  6A0D               	clrf	??___flmul^0,c
  8880  00246E  500D               	movf	??___flmul^0,w,c
  8881  002470  2618               	addwf	___flmul@prod^0,f,c
  8882  002472  500E               	movf	(??___flmul+1)^0,w,c
  8883  002474  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8884  002476  500F               	movf	(??___flmul+2)^0,w,c
  8885  002478  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8886  00247A  5010               	movf	(??___flmul+3)^0,w,c
  8887  00247C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8888  00247E  C013  F00D         	movff	___flmul@grs,??___flmul
  8889  002482  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  8890  002486  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  8891  00248A  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  8892  00248E  0E19               	movlw	25
  8893  002490  EF4F  F012         	goto	u6740
  8894  002494                     u6745:
  8895  002494  90D8               	bcf	status,0,c
  8896  002496  3210               	rrcf	(??___flmul+3)^0,f,c
  8897  002498  320F               	rrcf	(??___flmul+2)^0,f,c
  8898  00249A  320E               	rrcf	(??___flmul+1)^0,f,c
  8899  00249C  320D               	rrcf	??___flmul^0,f,c
  8900  00249E                     u6740:
  8901  00249E  2EE8               	decfsz	wreg,f,c
  8902  0024A0  EF4A  F012         	goto	u6745
  8903  0024A4  500D               	movf	??___flmul^0,w,c
  8904  0024A6  2618               	addwf	___flmul@prod^0,f,c
  8905  0024A8  500E               	movf	(??___flmul+1)^0,w,c
  8906  0024AA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8907  0024AC  500F               	movf	(??___flmul+2)^0,w,c
  8908  0024AE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8909  0024B0  5010               	movf	(??___flmul+3)^0,w,c
  8910  0024B2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8911  0024B4  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8912  0024B8  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8913  0024BC  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8914  0024C0  6A13               	clrf	___flmul@grs^0,c
  8915  0024C2  5012               	movf	___flmul@aexp^0,w,c
  8916  0024C4  C017  F00D         	movff	___flmul@bexp,??___flmul
  8917  0024C8  6A0E               	clrf	(??___flmul+1)^0,c
  8918  0024CA  260D               	addwf	??___flmul^0,f,c
  8919  0024CC  0E00               	movlw	0
  8920  0024CE  220E               	addwfc	(??___flmul+1)^0,f,c
  8921  0024D0  0E82               	movlw	130
  8922  0024D2  240D               	addwf	??___flmul^0,w,c
  8923  0024D4  6E1C               	movwf	___flmul@temp^0,c
  8924  0024D6  0EFF               	movlw	255
  8925  0024D8  200E               	addwfc	(??___flmul+1)^0,w,c
  8926  0024DA  6E1D               	movwf	(___flmul@temp+1)^0,c
  8927  0024DC  EF85  F012         	goto	l5944
  8928  0024E0                     l5938:
  8929  0024E0  90D8               	bcf	status,0,c
  8930  0024E2  3618               	rlcf	___flmul@prod^0,f,c
  8931  0024E4  3619               	rlcf	(___flmul@prod+1)^0,f,c
  8932  0024E6  361A               	rlcf	(___flmul@prod+2)^0,f,c
  8933  0024E8  361B               	rlcf	(___flmul@prod+3)^0,f,c
  8934  0024EA  AE16               	btfss	(___flmul@grs+3)^0,7,c
  8935  0024EC  EF7A  F012         	goto	u6751
  8936  0024F0  EF7C  F012         	goto	u6750
  8937  0024F4                     u6751:
  8938  0024F4  EF7D  F012         	goto	l1049
  8939  0024F8                     u6750:
  8940  0024F8  8018               	bsf	___flmul@prod^0,0,c
  8941  0024FA                     l1049:
  8942  0024FA  90D8               	bcf	status,0,c
  8943  0024FC  3613               	rlcf	___flmul@grs^0,f,c
  8944  0024FE  3614               	rlcf	(___flmul@grs+1)^0,f,c
  8945  002500  3615               	rlcf	(___flmul@grs+2)^0,f,c
  8946  002502  3616               	rlcf	(___flmul@grs+3)^0,f,c
  8947  002504  061C               	decf	___flmul@temp^0,f,c
  8948  002506  A0D8               	btfss	status,0,c
  8949  002508  061D               	decf	(___flmul@temp+1)^0,f,c
  8950  00250A                     l5944:
  8951  00250A  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  8952  00250C  EF8A  F012         	goto	u6761
  8953  002510  EF8C  F012         	goto	u6760
  8954  002514                     u6761:
  8955  002514  EF70  F012         	goto	l5938
  8956  002518                     u6760:
  8957  002518  0E00               	movlw	0
  8958  00251A  6E12               	movwf	___flmul@aexp^0,c
  8959  00251C  AE16               	btfss	(___flmul@grs+3)^0,7,c
  8960  00251E  EF93  F012         	goto	u6771
  8961  002522  EF95  F012         	goto	u6770
  8962  002526                     u6771:
  8963  002526  EFB9  F012         	goto	l1051
  8964  00252A                     u6770:
  8965  00252A  0EFF               	movlw	255
  8966  00252C  1413               	andwf	___flmul@grs^0,w,c
  8967  00252E  6E0D               	movwf	??___flmul^0,c
  8968  002530  0EFF               	movlw	255
  8969  002532  1414               	andwf	(___flmul@grs+1)^0,w,c
  8970  002534  6E0E               	movwf	(??___flmul+1)^0,c
  8971  002536  0EFF               	movlw	255
  8972  002538  1415               	andwf	(___flmul@grs+2)^0,w,c
  8973  00253A  6E0F               	movwf	(??___flmul+2)^0,c
  8974  00253C  0E7F               	movlw	127
  8975  00253E  1416               	andwf	(___flmul@grs+3)^0,w,c
  8976  002540  6E10               	movwf	(??___flmul+3)^0,c
  8977  002542  500D               	movf	??___flmul^0,w,c
  8978  002544  100E               	iorwf	(??___flmul+1)^0,w,c
  8979  002546  100F               	iorwf	(??___flmul+2)^0,w,c
  8980  002548  1010               	iorwf	(??___flmul+3)^0,w,c
  8981  00254A  B4D8               	btfsc	status,2,c
  8982  00254C  EFAA  F012         	goto	u6781
  8983  002550  EFAC  F012         	goto	u6780
  8984  002554                     u6781:
  8985  002554  EFB0  F012         	goto	l1052
  8986  002558                     u6780:
  8987  002558                     l5952:
  8988  002558  0E01               	movlw	1
  8989  00255A  6E12               	movwf	___flmul@aexp^0,c
  8990  00255C  EFB9  F012         	goto	l1051
  8991  002560                     l1052:
  8992  002560  A018               	btfss	___flmul@prod^0,0,c
  8993  002562  EFB5  F012         	goto	u6791
  8994  002566  EFB7  F012         	goto	u6790
  8995  00256A                     u6791:
  8996  00256A  EFB9  F012         	goto	l1051
  8997  00256E                     u6790:
  8998  00256E  EFAC  F012         	goto	l5952
  8999  002572                     l1051:
  9000  002572  5012               	movf	___flmul@aexp^0,w,c
  9001  002574  B4D8               	btfsc	status,2,c
  9002  002576  EFBF  F012         	goto	u6801
  9003  00257A  EFC1  F012         	goto	u6800
  9004  00257E                     u6801:
  9005  00257E  EFE5  F012         	goto	l5964
  9006  002582                     u6800:
  9007  002582  0E01               	movlw	1
  9008  002584  2618               	addwf	___flmul@prod^0,f,c
  9009  002586  0E00               	movlw	0
  9010  002588  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9011  00258A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9012  00258C  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9013  00258E  A01B               	btfss	(___flmul@prod+3)^0,0,c
  9014  002590  EFCC  F012         	goto	u6811
  9015  002594  EFCE  F012         	goto	u6810
  9016  002598                     u6811:
  9017  002598  EFE5  F012         	goto	l5964
  9018  00259C                     u6810:
  9019  00259C  C018  F00D         	movff	___flmul@prod,??___flmul
  9020  0025A0  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  9021  0025A4  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  9022  0025A8  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  9023  0025AC  3410               	rlcf	(??___flmul+3)^0,w,c
  9024  0025AE  3210               	rrcf	(??___flmul+3)^0,f,c
  9025  0025B0  320F               	rrcf	(??___flmul+2)^0,f,c
  9026  0025B2  320E               	rrcf	(??___flmul+1)^0,f,c
  9027  0025B4  320D               	rrcf	??___flmul^0,f,c
  9028  0025B6  C00D  F018         	movff	??___flmul,___flmul@prod
  9029  0025BA  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  9030  0025BE  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  9031  0025C2  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  9032  0025C6  4A1C               	infsnz	___flmul@temp^0,f,c
  9033  0025C8  2A1D               	incf	(___flmul@temp+1)^0,f,c
  9034  0025CA                     l5964:
  9035  0025CA  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  9036  0025CC  EFF0  F012         	goto	u6821
  9037  0025D0  501D               	movf	(___flmul@temp+1)^0,w,c
  9038  0025D2  E108               	bnz	u6820
  9039  0025D4  281C               	incf	___flmul@temp^0,w,c
  9040  0025D6  A0D8               	btfss	status,0,c
  9041  0025D8  EFF0  F012         	goto	u6821
  9042  0025DC  EFF2  F012         	goto	u6820
  9043  0025E0                     u6821:
  9044  0025E0  EFFC  F012         	goto	l5968
  9045  0025E4                     u6820:
  9046  0025E4  0E00               	movlw	0
  9047  0025E6  6E18               	movwf	___flmul@prod^0,c
  9048  0025E8  0E00               	movlw	0
  9049  0025EA  6E19               	movwf	(___flmul@prod+1)^0,c
  9050  0025EC  0E80               	movlw	128
  9051  0025EE  6E1A               	movwf	(___flmul@prod+2)^0,c
  9052  0025F0  0E7F               	movlw	127
  9053  0025F2  6E1B               	movwf	(___flmul@prod+3)^0,c
  9054  0025F4  EF2A  F013         	goto	l5980
  9055  0025F8                     l5968:
  9056  0025F8  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  9057  0025FA  EF09  F013         	goto	u6830
  9058  0025FE  501D               	movf	(___flmul@temp+1)^0,w,c
  9059  002600  E106               	bnz	u6831
  9060  002602  041C               	decf	___flmul@temp^0,w,c
  9061  002604  B0D8               	btfsc	status,0,c
  9062  002606  EF07  F013         	goto	u6831
  9063  00260A  EF09  F013         	goto	u6830
  9064  00260E                     u6831:
  9065  00260E  EF15  F013         	goto	l1059
  9066  002612                     u6830:
  9067  002612  0E00               	movlw	0
  9068  002614  6E18               	movwf	___flmul@prod^0,c
  9069  002616  0E00               	movlw	0
  9070  002618  6E19               	movwf	(___flmul@prod+1)^0,c
  9071  00261A  0E00               	movlw	0
  9072  00261C  6E1A               	movwf	(___flmul@prod+2)^0,c
  9073  00261E  0E00               	movlw	0
  9074  002620  6E1B               	movwf	(___flmul@prod+3)^0,c
  9075  002622  0E00               	movlw	0
  9076  002624  6E11               	movwf	___flmul@sign^0,c
  9077  002626  EF2A  F013         	goto	l5980
  9078  00262A                     l1059:
  9079  00262A  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  9080  00262E  0EFF               	movlw	255
  9081  002630  1618               	andwf	___flmul@prod^0,f,c
  9082  002632  0EFF               	movlw	255
  9083  002634  1619               	andwf	(___flmul@prod+1)^0,f,c
  9084  002636  0E7F               	movlw	127
  9085  002638  161A               	andwf	(___flmul@prod+2)^0,f,c
  9086  00263A  0E00               	movlw	0
  9087  00263C  161B               	andwf	(___flmul@prod+3)^0,f,c
  9088  00263E  A017               	btfss	___flmul@bexp^0,0,c
  9089  002640  EF24  F013         	goto	u6841
  9090  002644  EF26  F013         	goto	u6840
  9091  002648                     u6841:
  9092  002648  EF27  F013         	goto	l5978
  9093  00264C                     u6840:
  9094  00264C  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  9095  00264E                     l5978:
  9096  00264E  90D8               	bcf	status,0,c
  9097  002650  3017               	rrcf	___flmul@bexp^0,w,c
  9098  002652  6E1B               	movwf	(___flmul@prod+3)^0,c
  9099  002654                     l5980:
  9100  002654  5011               	movf	___flmul@sign^0,w,c
  9101  002656  121B               	iorwf	(___flmul@prod+3)^0,f,c
  9102  002658  C018  F005         	movff	___flmul@prod,?___flmul
  9103  00265C  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  9104  002660  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  9105  002664  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  9106  002668                     l1046:
  9107  002668  0012               	return		;funcret
  9108  00266A                     __end_of___flmul:
  9109                           	callstack 0
  9110                           
  9111 ;; *************** function _TxBufferedString *****************
  9112 ;; Defined at:
  9113 ;;		line 98 in file "serial.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  string          2    5[COMRAM] PTR unsigned char 
  9116 ;;		 -> main@string(20), main@string3(20), main@string2(20), main@string1(20), 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;		None
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  1    wreg      void 
  9121 ;; Registers used:
  9122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;Total ram usage:        2 bytes
  9133 ;; Hardware stack levels used: 1
  9134 ;; Hardware stack levels required when called: 3
  9135 ;; This function calls:
  9136 ;;		_putCharToTxBuf
  9137 ;; This function is called by:
  9138 ;;		_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text44
  9143  00407A                     __ptext44:
  9144                           	callstack 0
  9145  00407A                     _TxBufferedString:
  9146                           	callstack 27
  9147  00407A                     
  9148                           ;serial.c: 100:     while(*string != 0){
  9149  00407A  EF48  F020         	goto	l5850
  9150  00407E                     l5846:
  9151                           
  9152                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  9153  00407E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9154  004082  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9155  004086  50DF               	movf	indf2,w,c
  9156  004088  EC80  F020         	call	_putCharToTxBuf
  9157  00408C  4A06               	infsnz	TxBufferedString@string^0,f,c
  9158  00408E  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  9159  004090                     l5850:
  9160                           
  9161                           ;serial.c: 100:     while(*string != 0){
  9162  004090  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9163  004094  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9164  004098  50DF               	movf	indf2,w,c
  9165  00409A  A4D8               	btfss	status,2,c
  9166  00409C  EF52  F020         	goto	u6641
  9167  0040A0  EF54  F020         	goto	u6640
  9168  0040A4                     u6641:
  9169  0040A4  EF3F  F020         	goto	l5846
  9170  0040A8                     u6640:
  9171  0040A8  0012               	return		;funcret
  9172  0040AA                     __end_of_TxBufferedString:
  9173                           	callstack 0
  9174                           
  9175 ;; *************** function _putCharToTxBuf *****************
  9176 ;; Defined at:
  9177 ;;		line 85 in file "serial.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  byte            1    wreg     unsigned char 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  byte            1    4[COMRAM] unsigned char 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;Total ram usage:        1 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; Hardware stack levels required when called: 2
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_TxBufferedString
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text45
  9206  004100                     __ptext45:
  9207                           	callstack 0
  9208  004100                     _putCharToTxBuf:
  9209                           	callstack 27
  9210                           
  9211                           ;incstack = 0
  9212                           ;putCharToTxBuf@byte stored from wreg
  9213  004100  6E05               	movwf	putCharToTxBuf@byte^0,c
  9214  004102                     
  9215                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  9216  004102  0E3B               	movlw	59
  9217  004104  6453               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  9218  004106  EF87  F020         	goto	u5601
  9219  00410A  EF89  F020         	goto	u5600
  9220  00410E                     u5601:
  9221  00410E  EF8B  F020         	goto	l5282
  9222  004112                     u5600:
  9223  004112  0E00               	movlw	0
  9224  004114  6E53               	movwf	_TxBufWriteCnt^0,c	;volatile
  9225  004116                     l5282:
  9226                           
  9227                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  9228  004116  0E00               	movlw	low _EUSART4TXbuf
  9229  004118  2453               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  9230  00411A  6ED9               	movwf	fsr2l,c
  9231  00411C  6ADA               	clrf	fsr2h,c
  9232  00411E  0E01               	movlw	high _EUSART4TXbuf
  9233  004120  22DA               	addwfc	fsr2h,f,c
  9234  004122  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  9235  004126  2A53               	incf	_TxBufWriteCnt^0,f,c	;volatile
  9236  004128  0012               	return		;funcret
  9237  00412A                     __end_of_putCharToTxBuf:
  9238                           	callstack 0
  9239                           
  9240 ;; *************** function _Interrupts_init *****************
  9241 ;; Defined at:
  9242 ;;		line 10 in file "interrupts.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		None
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 2
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_main
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text46
  9271  004238                     __ptext46:
  9272                           	callstack 0
  9273  004238                     _Interrupts_init:
  9274                           	callstack 28
  9275  004238                     
  9276                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  9277  004238  8CF2               	bsf	242,6,c	;volatile
  9278                           
  9279                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  9280  00423A  010E               	movlb	14	; () banked
  9281  00423C  872D               	bsf	45,3,b	;volatile
  9282                           
  9283                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  9284  00423E  952D               	bcf	45,2,b	;volatile
  9285                           
  9286                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  9287  004240  8EF2               	bsf	242,7,c	;volatile
  9288  004242                     
  9289                           ; BSR set to: 14
  9290  004242  0012               	return		;funcret
  9291  004244                     __end_of_Interrupts_init:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _HighISR *****************
  9295 ;; Defined at:
  9296 ;;		line 24 in file "interrupts.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      void 
  9303 ;; Registers used:
  9304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9314 ;;Total ram usage:        2 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 1
  9317 ;; This function calls:
  9318 ;;		_getCharFromTxBuf
  9319 ;;		_putCharToRxBuf
  9320 ;;		i2_isDataInTxBuf
  9321 ;; This function is called by:
  9322 ;;		Interrupt level 2
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           	psect	intcode
  9327  000008                     __pintcode:
  9328                           	callstack 0
  9329  000008                     _HighISR:
  9330                           	callstack 21
  9331                           
  9332                           ; BSR set to: 14
  9333                           ;incstack = 0
  9334  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9335  00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  9336  00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  9337  000012                     
  9338                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  9339  000012  010E               	movlb	14	; () banked
  9340  000014  A737               	btfss	55,3,b	;volatile
  9341  000016  EF0F  F000         	goto	i2u479_41
  9342  00001A  EF11  F000         	goto	i2u479_40
  9343  00001E                     i2u479_41:
  9344  00001E  EF14  F000         	goto	i2l4678
  9345  000022                     i2u479_40:
  9346  000022                     
  9347                           ; BSR set to: 14
  9348                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  9349  000022  51E3               	movf	227,w,b	;volatile
  9350  000024  EC95  F020         	call	_putCharToRxBuf
  9351  000028                     i2l4678:
  9352                           
  9353                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  9354  000028  010E               	movlb	14	; () banked
  9355  00002A  A537               	btfss	55,2,b	;volatile
  9356  00002C  EF1A  F000         	goto	i2u480_41
  9357  000030  EF1C  F000         	goto	i2u480_40
  9358  000034                     i2u480_41:
  9359  000034  EF35  F000         	goto	i2l425
  9360  000038                     i2u480_40:
  9361  000038                     
  9362                           ; BSR set to: 14
  9363  000038  A52D               	btfss	45,2,b	;volatile
  9364  00003A  EF21  F000         	goto	i2u481_41
  9365  00003E  EF23  F000         	goto	i2u481_40
  9366  000042                     i2u481_41:
  9367  000042  EF35  F000         	goto	i2l425
  9368  000046                     i2u481_40:
  9369  000046                     
  9370                           ; BSR set to: 14
  9371                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  9372  000046  EC0A  F021         	call	i2_isDataInTxBuf	;wreg free
  9373  00004A  06E8               	decf	wreg,f,c
  9374  00004C  A4D8               	btfss	status,2,c
  9375  00004E  EF2B  F000         	goto	i2u482_41
  9376  000052  EF2D  F000         	goto	i2u482_40
  9377  000056                     i2u482_41:
  9378  000056  EF33  F000         	goto	i2l423
  9379  00005A                     i2u482_40:
  9380  00005A  EC55  F020         	call	_getCharFromTxBuf	;wreg free
  9381  00005E  010E               	movlb	14	; () banked
  9382  000060  6FE4               	movwf	228,b	;volatile
  9383  000062  EF35  F000         	goto	i2l425
  9384  000066                     i2l423:
  9385  000066  010E               	movlb	14	; () banked
  9386  000068  952D               	bcf	45,2,b	;volatile
  9387  00006A                     i2l425:
  9388                           
  9389                           ; BSR set to: 14
  9390  00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9391  00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  9392  000072  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9393  000074  0011               	retfie		f
  9394  000076                     __end_of_HighISR:
  9395                           	callstack 0
  9396                           
  9397 ;; *************** function i2_isDataInTxBuf *****************
  9398 ;; Defined at:
  9399 ;;		line 93 in file "serial.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;		None
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      unsigned char 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9417 ;;Total ram usage:        0 bytes
  9418 ;; Hardware stack levels used: 1
  9419 ;; This function calls:
  9420 ;;		Nothing
  9421 ;; This function is called by:
  9422 ;;		_HighISR
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text48
  9427  004214                     __ptext48:
  9428                           	callstack 0
  9429  004214                     i2_isDataInTxBuf:
  9430                           	callstack 21
  9431  004214                     
  9432                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  9433  004214  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  9434  004216  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9435  004218  A4D8               	btfss	status,2,c
  9436  00421A  EF11  F021         	goto	i2u212_41
  9437  00421E  EF14  F021         	goto	i2u212_40
  9438  004222                     i2u212_41:
  9439  004222  0E01               	movlw	1
  9440  004224  EF15  F021         	goto	i2u213_40
  9441  004228                     i2u212_40:
  9442  004228  0E00               	movlw	0
  9443  00422A                     i2u213_40:
  9444  00422A  0012               	return		;funcret
  9445  00422C                     __end_ofi2_isDataInTxBuf:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _putCharToRxBuf *****************
  9449 ;; Defined at:
  9450 ;;		line 63 in file "serial.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  byte            1    wreg     unsigned char 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  byte            1    0[COMRAM] unsigned char 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9468 ;;Total ram usage:        1 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_HighISR
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text49
  9478  00412A                     __ptext49:
  9479                           	callstack 0
  9480  00412A                     _putCharToRxBuf:
  9481                           	callstack 21
  9482                           
  9483                           ;incstack = 0
  9484                           ;putCharToRxBuf@byte stored from wreg
  9485  00412A  6E01               	movwf	putCharToRxBuf@byte^0,c
  9486  00412C                     
  9487                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9488  00412C  0E13               	movlw	19
  9489  00412E  6455               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9490  004130  EF9C  F020         	goto	i2u420_41
  9491  004134  EF9E  F020         	goto	i2u420_40
  9492  004138                     i2u420_41:
  9493  004138  EFA0  F020         	goto	i2l4102
  9494  00413C                     i2u420_40:
  9495  00413C  0E00               	movlw	0
  9496  00413E  6E55               	movwf	_RxBufWriteCnt^0,c	;volatile
  9497  004140                     i2l4102:
  9498                           
  9499                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9500  004140  0E3C               	movlw	low _EUSART4RXbuf
  9501  004142  2455               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9502  004144  6ED9               	movwf	fsr2l,c
  9503  004146  6ADA               	clrf	fsr2h,c
  9504  004148  0E01               	movlw	high _EUSART4RXbuf
  9505  00414A  22DA               	addwfc	fsr2h,f,c
  9506  00414C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9507  004150  2A55               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9508  004152  0012               	return		;funcret
  9509  004154                     __end_of_putCharToRxBuf:
  9510                           	callstack 0
  9511                           
  9512 ;; *************** function _getCharFromTxBuf *****************
  9513 ;; Defined at:
  9514 ;;		line 79 in file "serial.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;		None
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      unsigned char 
  9521 ;; Registers used:
  9522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9532 ;;Total ram usage:        2 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_HighISR
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text50
  9542  0040AA                     __ptext50:
  9543                           	callstack 0
  9544  0040AA                     _getCharFromTxBuf:
  9545                           	callstack 21
  9546  0040AA                     
  9547                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9548  0040AA  0E3B               	movlw	59
  9549  0040AC  6452               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9550  0040AE  EF5B  F020         	goto	i2u421_41
  9551  0040B2  EF5D  F020         	goto	i2u421_40
  9552  0040B6                     i2u421_41:
  9553  0040B6  EF5F  F020         	goto	i2l4110
  9554  0040BA                     i2u421_40:
  9555  0040BA  0E00               	movlw	0
  9556  0040BC  6E52               	movwf	_TxBufReadCnt^0,c	;volatile
  9557  0040BE                     i2l4110:
  9558                           
  9559                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  9560  0040BE  2A52               	incf	_TxBufReadCnt^0,f,c	;volatile
  9561  0040C0  0452               	decf	_TxBufReadCnt^0,w,c	;volatile
  9562  0040C2  6E01               	movwf	??_getCharFromTxBuf^0,c
  9563  0040C4  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9564  0040C6  0E00               	movlw	low _EUSART4TXbuf
  9565  0040C8  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9566  0040CA  6ED9               	movwf	fsr2l,c
  9567  0040CC  0E01               	movlw	high _EUSART4TXbuf
  9568  0040CE  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9569  0040D0  6EDA               	movwf	fsr2h,c
  9570  0040D2  50DF               	movf	indf2,w,c
  9571  0040D4  0012               	return		;funcret
  9572  0040D6                     __end_of_getCharFromTxBuf:
  9573                           	callstack 0
  9574                           
  9575                           	psect	rparam
  9576  0000                     
  9577                           	psect	temp
  9578  000056                     btemp:
  9579                           	callstack 0
  9580  000056                     	ds	1
  9581  0000                     int$flags	set	btemp
  9582  0000                     wtemp8	set	btemp+1
  9583  0000                     ttemp5	set	btemp+1
  9584  0000                     ttemp6	set	btemp+4
  9585  0000                     ttemp7	set	btemp+8
  9586                           
  9587                           	psect	idloc
  9588                           
  9589                           ;Config register IDLOC0 @ 0x200000
  9590                           ;	unspecified, using default values
  9591  200000                     	org	2097152
  9592  200000  0FFF               	dw	4095
  9593                           
  9594                           ;Config register IDLOC1 @ 0x200002
  9595                           ;	unspecified, using default values
  9596  200002                     	org	2097154
  9597  200002  0FFF               	dw	4095
  9598                           
  9599                           ;Config register IDLOC2 @ 0x200004
  9600                           ;	unspecified, using default values
  9601  200004                     	org	2097156
  9602  200004  0FFF               	dw	4095
  9603                           
  9604                           ;Config register IDLOC3 @ 0x200006
  9605                           ;	unspecified, using default values
  9606  200006                     	org	2097158
  9607  200006  0FFF               	dw	4095
  9608                           
  9609                           ;Config register IDLOC4 @ 0x200008
  9610                           ;	unspecified, using default values
  9611  200008                     	org	2097160
  9612  200008  0FFF               	dw	4095
  9613                           
  9614                           ;Config register IDLOC5 @ 0x20000A
  9615                           ;	unspecified, using default values
  9616  20000A                     	org	2097162
  9617  20000A  0FFF               	dw	4095
  9618                           
  9619                           ;Config register IDLOC6 @ 0x20000C
  9620                           ;	unspecified, using default values
  9621  20000C                     	org	2097164
  9622  20000C  0FFF               	dw	4095
  9623                           
  9624                           ;Config register IDLOC7 @ 0x20000E
  9625                           ;	unspecified, using default values
  9626  20000E                     	org	2097166
  9627  20000E  0FFF               	dw	4095
  9628                           
  9629                           	psect	config
  9630                           
  9631                           ;Config register CONFIG1L @ 0x300000
  9632                           ;	External Oscillator mode Selection bits
  9633                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9634                           ;	Power-up default value for COSC bits
  9635                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9636  300000                     	org	3145728
  9637  300000  AA                 	db	170
  9638                           
  9639                           ;Config register CONFIG1H @ 0x300001
  9640                           ;	unspecified, using default values
  9641                           ;	Clock Out Enable bit
  9642                           ;	CLKOUTEN = 0x1, unprogrammed default
  9643                           ;	Clock Switch Enable bit
  9644                           ;	CSWEN = 0x1, unprogrammed default
  9645                           ;	Fail-Safe Clock Monitor Enable bit
  9646                           ;	FCMEN = 0x1, unprogrammed default
  9647  300001                     	org	3145729
  9648  300001  FF                 	db	255
  9649                           
  9650                           ;Config register CONFIG2L @ 0x300002
  9651                           ;	unspecified, using default values
  9652                           ;	Master Clear Enable bit
  9653                           ;	MCLRE = 0x1, unprogrammed default
  9654                           ;	Power-up Timer Enable bit
  9655                           ;	PWRTE = 0x1, unprogrammed default
  9656                           ;	Low-power BOR enable bit
  9657                           ;	LPBOREN = 0x1, unprogrammed default
  9658                           ;	Brown-out Reset Enable bits
  9659                           ;	BOREN = 0x3, unprogrammed default
  9660  300002                     	org	3145730
  9661  300002  FF                 	db	255
  9662                           
  9663                           ;Config register CONFIG2H @ 0x300003
  9664                           ;	unspecified, using default values
  9665                           ;	Brown Out Reset Voltage selection bits
  9666                           ;	BORV = 0x3, unprogrammed default
  9667                           ;	ZCD Disable bit
  9668                           ;	ZCD = 0x1, unprogrammed default
  9669                           ;	PPSLOCK bit One-Way Set Enable bit
  9670                           ;	PPS1WAY = 0x1, unprogrammed default
  9671                           ;	Stack Full/Underflow Reset Enable bit
  9672                           ;	STVREN = 0x1, unprogrammed default
  9673                           ;	Debugger Enable bit
  9674                           ;	DEBUG = 0x1, unprogrammed default
  9675                           ;	Extended Instruction Set Enable bit
  9676                           ;	XINST = 0x1, unprogrammed default
  9677  300003                     	org	3145731
  9678  300003  FF                 	db	255
  9679                           
  9680                           ;Config register CONFIG3L @ 0x300004
  9681                           ;	WDT Period Select bits
  9682                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9683                           ;	WDT operating mode
  9684                           ;	WDTE = OFF, WDT Disabled
  9685  300004                     	org	3145732
  9686  300004  9F                 	db	159
  9687                           
  9688                           ;Config register CONFIG3H @ 0x300005
  9689                           ;	unspecified, using default values
  9690                           ;	WDT Window Select bits
  9691                           ;	WDTCWS = 0x7, unprogrammed default
  9692                           ;	WDT input clock selector
  9693                           ;	WDTCCS = 0x7, unprogrammed default
  9694  300005                     	org	3145733
  9695  300005  FF                 	db	255
  9696                           
  9697                           ;Config register CONFIG4L @ 0x300006
  9698                           ;	unspecified, using default values
  9699                           ;	Write Protection Block 0
  9700                           ;	WRT0 = 0x1, unprogrammed default
  9701                           ;	Write Protection Block 1
  9702                           ;	WRT1 = 0x1, unprogrammed default
  9703                           ;	Write Protection Block 2
  9704                           ;	WRT2 = 0x1, unprogrammed default
  9705                           ;	Write Protection Block 3
  9706                           ;	WRT3 = 0x1, unprogrammed default
  9707                           ;	Write Protection Block 3
  9708                           ;	WRT4 = 0x1, unprogrammed default
  9709                           ;	Write Protection Block 3
  9710                           ;	WRT5 = 0x1, unprogrammed default
  9711                           ;	Write Protection Block 3
  9712                           ;	WRT6 = 0x1, unprogrammed default
  9713                           ;	Write Protection Block 3
  9714                           ;	WRT7 = 0x1, unprogrammed default
  9715  300006                     	org	3145734
  9716  300006  FF                 	db	255
  9717                           
  9718                           ;Config register CONFIG4H @ 0x300007
  9719                           ;	unspecified, using default values
  9720                           ;	Configuration Register Write Protection bit
  9721                           ;	WRTC = 0x1, unprogrammed default
  9722                           ;	Boot Block Write Protection bit
  9723                           ;	WRTB = 0x1, unprogrammed default
  9724                           ;	Data EEPROM Write Protection bit
  9725                           ;	WRTD = 0x1, unprogrammed default
  9726                           ;	Scanner Enable bit
  9727                           ;	SCANE = 0x1, unprogrammed default
  9728                           ;	Low Voltage Programming Enable bit
  9729                           ;	LVP = 0x1, unprogrammed default
  9730  300007                     	org	3145735
  9731  300007  FF                 	db	255
  9732                           
  9733                           ;Config register CONFIG5L @ 0x300008
  9734                           ;	unspecified, using default values
  9735                           ;	UserNVM Program Memory Code Protection bit
  9736                           ;	CP = 0x1, unprogrammed default
  9737                           ;	DataNVM Memory Code Protection bit
  9738                           ;	CPD = 0x1, unprogrammed default
  9739  300008                     	org	3145736
  9740  300008  FF                 	db	255
  9741                           
  9742                           ;Config register CONFIG5H @ 0x300009
  9743                           ;	unspecified, using default values
  9744  300009                     	org	3145737
  9745  300009  FF                 	db	255
  9746                           
  9747                           ;Config register CONFIG6L @ 0x30000A
  9748                           ;	unspecified, using default values
  9749                           ;	Table Read Protection Block 0
  9750                           ;	EBTR0 = 0x1, unprogrammed default
  9751                           ;	Table Read Protection Block 1
  9752                           ;	EBTR1 = 0x1, unprogrammed default
  9753                           ;	Table Read Protection Block 2
  9754                           ;	EBTR2 = 0x1, unprogrammed default
  9755                           ;	Table Read Protection Block 3
  9756                           ;	EBTR3 = 0x1, unprogrammed default
  9757                           ;	Table Read Protection Block 4
  9758                           ;	EBTR4 = 0x1, unprogrammed default
  9759                           ;	Table Read Protection Block 5
  9760                           ;	EBTR5 = 0x1, unprogrammed default
  9761                           ;	Table Read Protection Block 6
  9762                           ;	EBTR6 = 0x1, unprogrammed default
  9763                           ;	Table Read Protection Block 7
  9764                           ;	EBTR7 = 0x1, unprogrammed default
  9765  30000A                     	org	3145738
  9766  30000A  FF                 	db	255
  9767                           
  9768                           ;Config register CONFIG6H @ 0x30000B
  9769                           ;	unspecified, using default values
  9770                           ;	Boot Block Table Read Protection bit
  9771                           ;	EBTRB = 0x1, unprogrammed default
  9772  30000B                     	org	3145739
  9773  30000B  FF                 	db	255
  9774                           tosu	equ	0xFFF
  9775                           tosh	equ	0xFFE
  9776                           tosl	equ	0xFFD
  9777                           stkptr	equ	0xFFC
  9778                           pclatu	equ	0xFFB
  9779                           pclath	equ	0xFFA
  9780                           pcl	equ	0xFF9
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           indf0	equ	0xFEF
  9788                           postinc0	equ	0xFEE
  9789                           postdec0	equ	0xFED
  9790                           preinc0	equ	0xFEC
  9791                           plusw0	equ	0xFEB
  9792                           fsr0h	equ	0xFEA
  9793                           fsr0l	equ	0xFE9
  9794                           wreg	equ	0xFE8
  9795                           indf1	equ	0xFE7
  9796                           postinc1	equ	0xFE6
  9797                           postdec1	equ	0xFE5
  9798                           preinc1	equ	0xFE4
  9799                           plusw1	equ	0xFE3
  9800                           fsr1h	equ	0xFE2
  9801                           fsr1l	equ	0xFE1
  9802                           bsr	equ	0xFE0
  9803                           indf2	equ	0xFDF
  9804                           postinc2	equ	0xFDE
  9805                           postdec2	equ	0xFDD
  9806                           preinc2	equ	0xFDC
  9807                           plusw2	equ	0xFDB
  9808                           fsr2h	equ	0xFDA
  9809                           fsr2l	equ	0xFD9
  9810                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    4
    Data        162
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160     34      36
    BANK1           256      0     228
    BANK2           256    132     186
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK2[20]), main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK2[20]), main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1993_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK2[20]), main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK2[20]), main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK2[20]), main@string3(BANK2[20]), main@string2(BANK2[20]), main@string1(BANK2[20]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S756DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S756DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 8
		 -> main@test(BANK2[8]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 8
		 -> main@test(BANK2[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _determine_color_new->___fldiv
    _isbtw->___flge
    ___xxtofl->___wmul
    ___fldiv->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    ___fltol->___flsub
    ___flsub->___fldiv
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               136   136      0   56184
                                             79 COMRAM     2     2      0
                                              0 BANK2    132   132      0
                    _Interrupts_init
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                   _color_click_init
                _determine_color_new
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   17153
                                             18 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   16121
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   15591
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    7375
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    6272
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     870
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      90
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 20    18      2   15238
                                             54 COMRAM    20    18      2
                            ___fldiv
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    8336
                                             16 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     922
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1916
                                             10 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3803
                                             29 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4    1147
                                             62 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    4155
                                             54 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3410
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    3021
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     456
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___flmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___fldiv (ARG)
     ___flmul (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _determine_color_new
     ___fldiv
     ___xxtofl
     _isbtw
       ___flge
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     84      BA      10       72.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E4       7       89.1%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      24       5       22.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     217       8        0.0%
DATA                 0      0     217       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 04 17:17:47 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 3D14                    ___fldiv@aexp 0036  
                  ___fldiv@bexp 0035                    ___fldiv@sign 002E                 _color_read_Blue 3E04  
                            l33 4078                              l42 3D62                              l51 3C6E  
                            l36 41E0                              l45 3DB2                              l39 3E02  
                            l48 3E52                              l85 3ADA                              l98 1768  
           ___wmul@multiplicand 0007                _color_read_Clear 3DB4                _color_read_Green 3D64  
             ??_Interrupts_init 0005                   main@BlueRatio 0260                             l131 417A  
                           l140 4256                             l125 40FE                             l134 4260  
                           l143 4236                             l128 4154                             l137 424C  
                           l146 3F1E                             l341 41C0                             l183 3F60  
                           l416 4242                             l372 4128                             l428 41A0  
                           l381 40A8                             l542 3562                             l375 4212  
                           l385 41FA                             l555 36C6                             l725 37CC  
                           l693 388A                             l698 38D0                             l956 1F6E  
                           l973 2088                             l965 223E                             l957 1F5C  
                           l982 2158                             l958 1F22                             l983 2146  
                           l998 3E98                             _abs 3F62                    main@RedRatio 0258  
                           _pad 399C                             wreg 000FE8                    ___flmul@aexp 0012  
                  ___flmul@bexp 0017                    ___flmul@sign 0011                    ___flmul@temp 001C  
                  ___flmul@prod 0018                    ___fltol@exp1 0048                            l1010 2A02  
                          l1012 2862                            l1021 28A8                            l1023 2920  
                          l1015 2826                            l1024 290E                            l1042 2304  
                          l1106 3CC0                            l1051 2572                            l1211 3FA0  
                          l1203 3BA4                            ?_abs 0017                            l1052 2560  
                          l1140 3A24                            l1204 3BAC                            l1046 2668  
                          l1142 3A60                            l1150 2E46                            l1208 3F98  
                          l1320 4044                            l1049 24FA                            l1137 39E2  
                          l1090 3172                            l1242 33DA                            l1059 262A  
                          l1083 30DA                            l1148 2E3E                            l1245 3FD8  
                          l1253 3D12                            l1086 3236                            l1182 2B00  
                          l1239 33D2                            l1168 3082                            l1097 31CE  
                          l1268 399A                            l1276 3EDC                            l1197 2D98  
                          l1279 4262                            l5000 32DE                            l5010 3392  
                          l5002 3316                            l5020 4258                            l5012 33A4  
                          l5100 2A78                            l5022 425C                            l5030 4252  
                          l5014 33B6                            l5006 3350                            l6000 371C  
                          l5024 422E                            l5040 3EEC                            l5032 4244  
                          l5200 3D14                            l5120 2B0E                            l5112 2A8A  
                          l5104 2A7E                            l6002 371E                            l5026 4232  
                          l5042 3EF4                            l5034 4248                            l5202 3D5A  
                          l5130 2B90                            l5122 2B10                            l5300 1DBC  
                          l6004 372E                            l5028 424E                            l5060 37CE  
                          l5220 3A94                            l5044 3F1A                            l5036 3EE0  
                          l5212 3E04                            l5132 2BB0                            l5140 2C1C  
                          l5124 2B38                            l5116 2A96                            l5108 2A84  
                          l5310 1DEC                            l5302 1DCC                            l6030 37AC  
                          l6014 3758                            l6006 3732                            l5070 3858  
                          l5062 37FC                            l5222 3AC6                            l5046 3F1C  
                          l5038 3EE4                            l5214 3E4A                            l5206 3D64  
                          l5150 2CEE                            l5142 2C44                            l5134 2BBE  
                          l5126 2B6E                            l5118 2AEE                            l5400 1FBE  
                          l5320 1E16                            l5312 1DFE                            l5304 1DCE  
                          l6032 37BC                            l6024 3780                            l6016 3762  
                          l6008 3740                            l5072 386A                            l5064 380C  
                          l5208 3DAA                            l5152 2D16                            l5160 2D44  
                          l5144 2C6C                            l5128 2B7E                            l5410 1FEC  
                          l5402 1FCC                            l5322 1E26                            l5330 1E50  
                          l5314 1E00                            l5306 1DD6                            l6026 378C  
                          l6018 376C                            l5074 3878                            l5066 383A  
                          l5218 3A62                            l5162 2D52                            l5154 2D24  
                          l5146 2CB6                            l5138 2C0A                            l5090 2A50  
                          l5082 2A04                            l5420 2058                            l5412 1FF6  
                          l5404 1FD8                            l5340 1E88                            l5332 1E60  
                          l5324 1E36                            l5316 1E06                            l5308 1DE6  
                          l6028 379C                            l5180 40D6                            l5500 2696  
                          l5076 38C8                            l5068 384A                            l5228 3AD2  
                          l5156 2D38                            l5092 2A5E                            l5084 2A2C  
                          l6300 17A6                            l5422 2068                            l5406 1FDC  
                          l5414 1FFC                            l5350 1E9C                            l5342 1E8C  
                          l5334 1E72                            l5326 1E46                            l5318 1E14  
                          l5190 40EC                            l5182 40E0                            l5510 26D0  
                          l5502 26A6                            l5078 38CE                            l5094 2A60  
                          l5086 2A3A                            l5166 2D5E                            l6310 17D2  
                          l6302 17AE                            ?_pad 0015                            l5280 4112  
                          l5440 20EA                            l5432 20C2                            l5416 2022  
                          l5424 2078                            l5408 1FEA                            l5360 1EB0  
                          l5352 1EA0                            l5344 1E90                            l5336 1E80  
                          l5328 1E48                            l5184 40E6                            l5192 41C4  
                          l5600 293C                            l5520 26FC                            l5512 26D6  
                          l5504 26B6                            l4800 3420                            l5168 2D86  
                          l5096 2A72                            l5088 2A4C                            l6400 1D46  
                          l6320 17F4                            l6312 17DA                            l6304 17B2  
                          l5282 4116                            l5442 20F2                            l5434 20CC  
                          l5426 209E                            l5418 2056                            l5450 2116  
                          l5370 1EC4                            l5362 1EB4                            l5354 1EA4  
                          l5346 1E94                            l5338 1E84                            l5290 1D80  
                          l5186 40E8                            l5610 29A8                            l5602 294A  
                          l5530 2736                            l5522 270C                            l5514 26DC  
                          l5506 26B8                            l5194 3DB4                            l4810 3476  
                          l4802 3440                            l6402 1D48                            l6330 17FE  
                          l6322 17F6                            l6314 17E2                            l6306 17C6  
                          l5284 4126                            l5460 2168                            l5452 211A  
                          l5444 20F6                            l5436 20DA                            l5428 20AE  
                          l5380 1F3C                            l5372 1EEE                            l5364 1EB8  
                          l5356 1EA8                            l5348 1E98                            l5292 1D8C  
                          l5188 40EA                            l5620 29F6                            l5612 29C2  
                          l5604 2974                            l5532 274C                            l5524 271C  
                          l5516 26EA                            l5508 26C0                            l5700 0EBE  
                          l5196 3DFA                            l4900 3CC2                            l4820 34F8  
                          l4812 348A                            l4804 3444                            l6404 1D60  
                          l6340 1808                            l6332 1800                            l6324 17F8  
                          l6316 17EA                            l6308 17CA                            l5278 4102  
                          l5470 21CE                            l5462 2174                            l5454 2128  
                          l5446 2106                            l5438 20DC                            l5390 1F7C  
                          l5382 1F40                            l5374 1F0A                            l5366 1EBC  
                          l5358 1EAC                            l5294 1D9A                            l5622 29F8  
                          l5614 29DE                            l5606 2978                            l5550 27A0  
                          l5534 275C                            l5542 277C                            l5526 271E  
                          l5518 26EC                            l5630 3086                            l5710 1088  
                          l5702 0F3A                            l5286 41FC                            l4902 3CC6  
                          l4830 3542                            l4822 34FA                            l4814 3498  
                          l4806 3450                            l6350 1930                            l6342 1814  
                          l6334 1802                            l6326 17FA                            l6318 17F2  
                          l5480 2216                            l5472 21DE                            l5464 2182  
                          l5456 213E                            l5448 2108                            l5392 1F8C  
                          l5384 1F4E                            l5376 1F1A                            l5368 1EC0  
                          l5296 1D9C                            l4912 4154                            l5616 29E2  
                          l5608 2992                            l5560 27F2                            l5552 27BA  
                          l5544 278C                            l5536 2764                            l5528 2726  
                          l5632 3096                            l5720 116A                            l5712 1090  
                          l5704 0FB6                            l4904 3CDA                            l4824 350C  
                          l4816 34AA                            l4808 346E                            l4840 3596  
                          l4760 391E                            l4752 38D2                            l4920 2DE2  
                          l6360 1A68                            l6352 1948                            l6344 1828  
                          l6336 1804                            l6328 17FC                            l6280 177A  
                          l5482 2218                            l5474 21FE                            l5466 21BC  
                          l5386 1F50                            l5378 1F30                            l5298 1DAC  
                          l4914 4164                            l5618 29F0                            l5570 284E  
                          l5562 2802                            l5554 27CA                            l5546 278C  
                          l5538 2768                            l5650 315C                            l5642 3114  
                          l5634 30A4                            l5730 128A                            l5722 11B0  
                          l5714 10D6                            l5706 0FFC                            l4906 3D08  
                          l4818 34D8                            l4826 3512                            l4850 35EE  
                          l4842 359A                            l4834 3564                            l4762 3954  
                          l4754 38E4                            l4770 3EB8                            l4930 2E4E  
                          l4922 2E02                            l6370 1B98                            l6362 1A6C  
                          l6354 1988                            l6346 1880                            l6338 1806  
                          l6290 1788                            l6282 177E                            l5900 234E  
                          l5484 221E                            l5476 2202                            l5468 21BE  
                          l5396 1FA0                            l5388 1F5A                            l5580 288E  
                          l5572 2850                            l5564 2816                            l5556 27DA  
                          l5492 266A                            l5660 31DC                            l5652 3168  
                          l5644 311C                            l5636 30EA                            l5740 13AA  
                          l5732 12D0                            l5724 11F6                            l5716 111C  
                          l5708 1042                            l5820 41AE                            l4908 3D0C  
                          l4828 3522                            l4860 3670                            l4852 3602  
                          l4844 35A8                            l4836 3568                            l4756 38F6  
                          l4772 3EBC                            l4780 4038                            l4940 2E88  
                          l4932 2E60                            l4924 2E12                            l4916 2D9A  
                          l6380 1CAE                            l6372 1BA4                            l6364 1A84  
                          l6356 1A36                            l6348 18D8                            l6292 178E  
                          l6284 1782                            l6276 176A                            l5830 4238  
                          l5910 23A0                            l5902 2364                            l5486 222C  
                          l5478 2210                            l5398 1FB0                            l5590 28CA  
                          l5582 2898                            l5574 2860                            l5566 2824  
                          l5558 27EA                            l5494 2676                            l5670 3224  
                          l5662 31DE                            l5654 31A4                            l5646 3128  
                          l5638 3100                            l5750 14CA                            l5742 13F0  
                          l5734 1316                            l5726 123C                            l5718 1162  
                          l5822 41B0                            l4790 33DC                            l4854 3610  
                          l4862 3676                            l4846 35C8                            l4838 3576  
                          l4758 3900                            l4766 3E9A                            l4774 4010  
                          l4870 399C                            l4942 2E8E                            l4950 2F80  
                          l4934 2E70                            l4926 2E16                            l4918 2DBA  
                          l6390 1D1A                            l6382 1CD4                            l6374 1BA8  
                          l6366 1AC4                            l6358 1A5C                            l6294 1792  
                          l6286 1784                            l6278 1776                            l5920 23E6  
                          l5912 23AE                            l5904 2370                            l5488 222E  
                          l5592 28D8                            l5584 28A6                            l5576 2872  
                          l5568 2830                            l5496 2684                            l5672 3226  
                          l5664 31E2                            l5656 31B0                            l5648 315A  
                          l5760 15AC                            l5752 14D2                            l5744 13F8  
                          l5736 131E                            l5728 1244                            l5824 41BA  
                          l5816 41A2                            l4784 417C                            l4792 33E0  
                          l4864 3686                            l4856 363E                            l4848 35E6  
                          l4768 3EA6                            l4776 401C                            l4880 39EE  
                          l4872 39AC                            l4952 2F9A                            l4960 2FFC  
                          l4944 2F10                            l4936 2E76                            l4928 2E32  
                          l6456 2AC0                            l5680 3B5E                            l5840 3CAE  
                          l5832 3C70                            l6392 1D26                            l6384 1CE0  
                          l6376 1BC0                            l6368 1B72                            l6296 179A  
                          l6288 1788                            l5850 4090                            l5930 2454  
                          l5922 2400                            l5914 23BA                            l5906 2388  
                          l5690 4064                            l5594 2906                            l5578 2888  
                          l5586 28B8                            l5498 2686                            l5666 3206  
                          l5658 31BE                            l5770 16CC                            l5762 15F2  
                          l5754 1518                            l5746 143E                            l5738 1364  
                          l5826 41BC                            l5818 41AC                            l4786 4198  
                          l6458 3300                            l4794 33EE                            l4866 36A6  
                          l4858 365E                            l4778 4020                            l4882 3A02  
                          l4874 39C0                            l4970 3042                            l4962 300E  
                          l4954 2FB8                            l4946 2F16                            l4938 2E7E  
                          l5682 3B84                            l5834 3C82                            l6394 1D2A  
                          l6386 1CE4                            l6378 1C00                            l6298 17A2  
                          l5844 407A                            l5940 24EA                            l5932 247E  
                          l5924 2410                            l5916 23CA                            l5908 2394  
                          l5860 225A                            l5692 406E                            l5684 4046  
                          l5588 28C6                            l5668 3216                            l5772 1712  
                          l5764 1638                            l5756 155E                            l5748 1484  
                          l5780 3F20                            l5828 41BE                            l5852 41E2  
                          l4980 324C                            l4796 340E                            l4892 3F62  
                          l4884 3A06                            l4876 39CE                            l4972 304A  
                          l4964 301E                            l4956 2FD2                            l4948 2F1C  
                          l5676 3B48                            l5836 3C8A                            l6396 1D42  
                          l6388 1CFC                            l5846 407E                            l5950 252A  
                          l5942 24F8                            l5934 24B4                            l5926 242C  
                          l5918 23D6                            l5870 2292                            l5862 225C  
                          l5686 404A                            l5598 2930                            l5774 1758  
                          l5766 167E                            l5758 15A4                            l5782 3F30  
                          l5694 3C12                            l5854 41F6                            l4990 32B2  
                          l4982 3250                            l4798 3412                            l4894 3F7C  
                          l4886 3A34                            l4878 39DA                            l4966 3024  
                          l4974 305A                            l4958 2FEC                            l5678 3B50  
                          l5838 3C92                            l6398 1D44                            l5848 408C  
                          l5960 259C                            l5952 2558                            l5944 250A  
                          l5936 24C2                            l5928 2438                            l5880 22BE  
                          l5872 22A2                            l5864 226C                            l5856 2240  
                          l5688 4054                            l5776 1760                            l5768 1686  
                          l5696 0E3A                            l5784 3F48                            l4896 3FA2  
                          l4984 3254                            l4888 3A48                            l4968 3036  
                          l5970 2612                            l5962 25C6                            l5946 2518  
                          l5938 24E0                            l5890 2314                            l5882 22CE  
                          l5874 22A8                            l5866 227C                            l5858 224C  
                          l5698 0E42                            l5786 3F5C                            l4994 32B8  
                          l4986 3274                            l4978 3238                            l5972 262E  
                          l5980 2654                            l5956 2582                            l5964 25CA  
                          l5948 251C                            l5892 2324                            l5884 22DE  
                          l5876 22AE                            l5868 228C                            l5788 3F5E  
                          l4996 32CE                            l4988 32AE                            l5982 2658  
                          l5974 263E                            l5966 25E4                            l5958 258E  
                          l5886 22EE                            l5878 22BC                            l4998 32D6  
                          l5976 264C                            l5968 25F8                            l5896 2338  
                          l5888 22F4                            l5992 36C8                            l5978 264E  
                          l5898 2344                            l5986 3E54                            l5994 36DE  
                          l5988 3E64                            l5998 36F2                            STR_1 0E2C  
                          STR_2 0E1F                            STR_3 0E12                            STR_4 0E05  
                  _BAUD4CONbits 000EE9                            _LATE 000F7D                            _LATG 000F7F  
                          u5000 363E                            u5001 363A                            u5010 3686  
                          _T2PR 000FBC                            u5011 3682                            u5100 3D08  
                          u5020 39AC                            u5101 3D04                            u5021 39A8  
                          u5110 4164                            u5030 39CE                            u5111 4160  
                          u5031 39CA                            u6000 2210                            u5120 417A  
                          u5040 3A24                            u5200 2F9A                            u6001 220C  
                          u5121 4176                            u5041 3A20                            u5201 2F96  
                          u6010 222C                            u5050 3A34                            u5210 2FB8  
                          u5130 2DCA                            u6011 2228                            u5051 3A30  
                          u5211 2FB4                            u5131 2DC4                            u6100 2802  
                          u6020 2684                            u5300 32CA                            u5060 3F7C  
                          u5220 2FD2                            u5140 2DCC                            u6101 27FE  
                          u6021 2680                            u5301 32C6                            u5061 3F78  
                          u5221 2FCE                            u6110 2824                            u6030 2696  
                          u5070 3FD2                            u5310 338C                            u5230 2FEC  
                          u5150 2DE2                            u6111 2820                            u6031 2692  
                          u5071 3FCC                            u5311 3386                            u5231 2FE8  
                          u5151 2DDE                            u6200 2930                            u6120 284E  
                          u6040 26A6                            u5400 3858                            u5080 3FD4  
                          u5320 338E                            u5240 2FFC                            u5160 2E12  
                          u6201 292C                            u6121 284A                            u6041 26A2  
                          u5401 3854                            u5241 2FF8                            u5161 2E0E  
                          u6210 294A                            u6130 2872                            u6050 26EA  
                          u5410 3878                            u5090 3CDA                            u5330 33A4  
                          u5250 300E                            u5170 2E32                            u6211 2946  
                          u6131 286E                            u6051 26E6                            u5411 3874  
                          u5091 3CD6                            u5331 33A0                            u5251 300A  
                          u5171 2E2E                            u6220 2992                            u6140 2888  
                          u6060 26FC                            u6300 31BE                            u5420 38C8  
                          u5340 33B6                            u5260 301E                            u5180 2E60  
                          u5500 2C1C                            u6221 298E                            u6141 2884  
                          u6061 26F8                            u6301 31BA                            u5421 38C4  
                          u5341 33B2                            u5261 301A                            u5181 2E5C  
                          u5501 2C18                            u6230 29C2                            u6150 28A6  
                          u6070 270C                            u6310 31CE                            u5350 3F08  
                          u5270 3036                            u5190 2E70                            u5510 2C44  
                          u5430 2A2C                            u6231 29BE                            u6151 28A2  
                          u6071 2708                            u6311 31CA                            u5351 3F00  
                          u5271 3032                            u5191 2E6C                            u5511 2C40  
                          u5431 2A28                            u5600 4112                            u6240 29F0  
                          u6160 28C6                            u6080 274C                            u6320 31DC  
                          u6400 111C                            u5280 3274                            u5520 2C6C  
                          u5440 2B00                            u5601 410E                            u6241 29EC  
                          u6161 28C2                            u6081 2748                            u6321 31D8  
                          u6401 1118                            u5281 3270                            u5521 2C68  
                          u5441 2AFC                            u6170 28D8                            u6090 278C  
                          u6330 3216                            u6250 3096                            u6410 1162  
                          u5610 4210                            u5290 32AE                            u5530 2D16  
                          u5450 2B0E                            u6171 28D4                            u6091 2788  
                          u6331 3212                            u6251 3092                            u6411 115E  
                          u5611 420A                            u5291 32AA                            u5531 2D12  
                          u5451 2B0A                            u5700 1E72                            u6180 2906  
                          u6340 3224                            u6260 30A4                            u5380 37FC  
                          u5540 3A94                            u6500 13F0                            u6420 11B0  
                          u5620 4212                            u4900 3420                            u5460 2B38  
                          u5701 1E6E                            u6181 2902                            u6341 3220  
                          u6261 30A0                            u5381 37F8                            u5541 3A90  
                          u6501 13EC                            u6421 11AC                            u4901 341C  
                          u5461 2B34                            u5710 1E80                            u5630 1D9A  
                          u6190 291C                            u6270 3100                            u5390 383A  
                          u5550 3AC6                            u6510 143E                            u6430 11F6  
                          u4830 38E4                            u5470 2B7E                            u6350 3BA4  
                          u5711 1E7C                            u5631 1D96                            u6191 2918  
                          u6271 30FC                            u5391 3836                            u5551 3AC2  
                          u6511 143A                            u6431 11F2                            u4911 344A  
                          u4831 38E0                            u5471 2B7A                            u6351 3BA0  
                          u5800 1FBE                            u5720 1EEE                            u5640 1DAC  
                          u6280 3156                            u6600 16CC                            u6520 1484  
                          u6440 123C                            u6360 0FFC                            u5368 3F0A  
                          u4920 346E                            u4840 38F6                            u5480 2C02  
                          u5801 1FBA                            u5721 1EEA                            u5641 1DA8  
                          u6281 3152                            u6601 16C8                            u6521 1480  
                          u6441 1238                            u6361 0FF8                            u4921 346A  
                          u4841 38F2                            u5481 2BFC                            u5810 1FCC  
                          u5730 1F06                            u5650 1DBC                            u6290 31A0  
                          u6610 1712                            u6530 14CA                            u6450 128A  
                          u6370 1042                            u4930 3498                            u4850 391E  
                          u5490 2C04                            u5811 1FC8                            u5731 1F00  
                          u5651 1DB8                            u6291 319C                            u6611 170E  
                          u6531 14C6                            u6451 1286                            u6371 103E  
                          u4931 3494                            u4851 391A                            u7227 193A  
                          u6700 22CE                            u5900 2116                            u5820 1FEA  
                          u5740 1F08                            u5660 1DFE                            u6620 1758  
                          u6540 1518                            u6460 12D0                            u6380 1088  
                          u4940 34D8                            u4860 3954                            u6701 22CA  
                          u5901 2112                            u5821 1FE6                            u5661 1DFA  
                          u6621 1754                            u6541 1514                            u6461 12CC  
                          u6381 1084                            u4941 34D4                            u4861 3950  
                          u7237 1A76                            u6710 22DE                            u5910 2128  
                          u5830 2022                            u5750 1F30                            u5670 1E14  
                          u6550 155E                            u6470 1316                            u6390 10D6  
                          u4950 3522                            u4870 3EDC                            u6711 22DA  
                          u5911 2124                            u5831 201E                            u5751 1F2C  
                          u5671 1E10                            u6551 155A                            u6471 1312  
                          u6391 10D2                            u4951 351E                            u4871 3ED8  
                          u7247 1BB2                            u6640 40A8                            u6800 2582  
                          u6720 2314                            u5920 213E                            u5840 2068  
                          u5760 1F4E                            u5680 1E26                            u6560 15A4  
                          u6480 1364                            u4960 3576                            u4880 4038  
                          u6641 40A4                            u6801 257E                            u6721 2310  
                          u5921 213A                            u5841 2064                            u5761 1F4A  
                          u5681 1E22                            u6561 15A0                            u6481 1360  
                          u4961 3572                            u4881 4034                            u7257 1CEE  
                          u6810 259C                            u6730 2324                            u5930 2154  
                          u5850 209E                            u5770 1F6E                            u5690 1E36  
                          u6570 15F2                            u6490 13AA                            u6650 41F6  
                          u4890 33EE                            u4970 35A8                            u6811 2598  
                          u6731 2320                            u5931 2150                            u5851 209A  
                          u5771 1F6A                            u5691 1E32                            u6571 15EE  
                          u6491 13A6                            u6651 41F2                            u4891 33EA  
                          u4971 35A4                            u7267 1D34                            u6820 25E4  
                          u6740 249E                            u6660 225A                            u5940 2168  
                          u5860 20AE                            u5780 1F7C                            u6900 379C  
                          u6580 1638                            u4980 35E6                            u6821 25E0  
                          u6661 2256                            u5941 2164                            u5861 20AA  
                          u5781 1F78                            u6901 3798                            u6581 1634  
                          u4981 35E2                            u7277 1D52                            u6830 2612  
                          u6750 24F8                            u6670 226C                            u5950 2182  
                          u5870 20DA                            u5790 1F8C                            u6910 37AC  
                          u6590 167E                            u4990 3610                            u6831 260E  
                          u6751 24F4                            u6671 2268                            u5951 217E  
                          u5871 20D6                            u5791 1F88                            u6911 37A8  
                          u6591 167A                            u4991 360C                            u7287 1D6A  
                          u6840 264C                            u6760 2518                            u6680 227C  
                          u5960 21BC                            u5880 20EA                            u6841 2648  
                          u6761 2514                            u6745 2494                            u6681 2278  
                          u5961 21B8                            u5881 20E6                            u7297 405A  
                          u6770 252A                            u6690 22BC                            u5970 21CE  
                          u5890 2106                            u6850 36DE                            u6771 2526  
                          u6691 22B8                            u5971 21CA                            u5891 2102  
                          u6851 36DA                            u6780 2558                            u5980 21DE  
                          u6860 3712                            u6781 2554                            u5981 21DA  
                          u6790 256E                            u5990 21FE                            u6870 3740  
                          u6791 256A                            u5991 21FA                            u6871 373C  
                          u6880 3754                            u6881 3750                            u6865 3708  
                          u6890 377C                            u6891 3778                            abs@a 0017  
                          _dbuf 0158                            _atoi 3238                            _main 176A  
                          _dtoa 2D9A                            _prec 0156                            _nout 0152  
                          pad@i 001C                            pad@p 0019                            _tiny 0E01  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001E                            fsr2l 000FD9  
                          btemp 0056                            prodh 000FF4                            prodl 000FF3  
                          start 0076                 ___fldiv@new_exp 002F                     main@string1 0214  
                   main@string2 0228                     main@string3 023C          __end_of_color_read_Red 3D64  
               __end_of_HighISR 0076                    ___param_bank 000000                           ??_abs 0019  
                         ??_pad 001B                   ___fltol@sign1 0047                  main@GreenRatio 025C  
               __end_of___aodiv 3564                           ?_atoi 000C                 __end_of___fladd 2240  
                         ?_main 0001                           ?_dtoa 0020                 __end_of___aomod 36C8  
               __end_of___fldiv 2A04                 __end_of___flmul 266A                 __end_of___flsub 3E9A  
               __end_of___fltol 37CE        __size_of_initDCmotorsPWM 0042                           i2l423 0066  
                         i2l361 4152                           i2l425 006A                           i2l375 422A  
                         i2l368 40D4                    vfpfcnvrt@fmt 0046      __end_of_I2C_2_Master_Start 4262  
    __end_of_I2C_2_Master_Write 4238                           _flags 0082                           _errno 0150  
                         _fputc 38D2                           _isbtw 3A62                           _fputs 3E9A  
               __end_of_isdigit 3FDA                           atoi@n 0019                           pad@fp 0015  
                         atoi@s 000C                           _width 0154                           _putch 4262  
                         dtoa@d 0022                           dtoa@i 0042                           dtoa@n 003A  
                         dtoa@p 0034                           dtoa@s 0038                           dtoa@w 0036  
               __end_of_isspace 3D14                           tablat 000FF5                           ttemp5 0057  
                         ttemp6 005A                           ttemp7 005E                           status 000FD8  
                         wtemp8 0057                 __end_of_sprintf 3CC2         __end_of_color_read_Blue 3E54  
         _I2C_2_Master_RepStart 4244              putCharToRxBuf@byte 0001                 ?_color_read_Red 0009  
               __initialization 3BAE                    __end_of_atoi 33DC                    __end_of_main 1D80  
                  __end_of_dtoa 3084                    __end_of_tiny 0E05                 i2_isDataInTxBuf 4214  
            putCharToTxBuf@byte 0005                          ??_atoi 000E                          ??_main 0050  
                        ??_dtoa 002A                   __activetblptr 000003                          ?_fputc 0005  
                        ?_isbtw 0011                          ?_fputs 000E                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l4100 413C                          i2l4110 40BE                          i2l4102 4140  
                        i2l4104 4150                          i2l4106 40AA                          i2l4108 40BA  
                        i2l2620 4214                          i2l4098 412C                          i2l4680 0038  
                        i2l4682 0046                          i2l4674 0012                          i2l4684 005A  
                        i2l4676 0022                          i2l4678 0028                   vfpfcnvrt@done 0068  
                     ??_HighISR 0003        __end_of_color_click_init 407A                          _RX4PPS 000E15  
                        _TX4REG 000EE4                __end_of___xxtofl 3238                   main@int_part1 0264  
                 main@int_part2 0266                   main@int_part3 0268                   ?_read_colours 0010  
                  vfprintf@cfmt 004E                          ___flge 37CE                _getCharFromTxBuf 40AA  
                     ??___aodiv 0015     __end_of_determine_color_new 176A                       ??___fladd 000D  
                     ??___aomod 0015                          ___wmul 417C                       ??___fldiv 0026  
                     ??___flmul 000D                       ??___flsub 003F                       ??___fltol 0043  
                        clear_0 3BF4                          isa$std 000001                          pad@buf 0017  
                        dtoa@fp 0020                          _strlen 4010                          fputc@c 0005  
             ?_TxBufferedString 0006                          fputs@c 0012                          fputs@i 0013  
                        fputs@s 000E                       ??_isdigit 0007                    __mediumconst 0000  
                     ??_isspace 0007                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8              ??_TxBufferedString 0008                          putch@c 0001  
              __end_of_vfprintf 3BAE               ??_initDCmotorsPWM 0007                       ??_sprintf 0050  
                    ___flge@ff1 0005                      ___flge@ff2 0009                    ___xxtofl@arg 0015  
                  ___xxtofl@exp 0014                    ___xxtofl@val 000B           __end_of_isDataInTxBuf 4214  
                    __accesstop 0060         __end_of__initialization 3C08        __end_of_color_read_Clear 3E04  
      __end_of_color_read_Green 3DB4          ?_I2C_2_Master_RepStart 0001         __end_ofi2_isDataInTxBuf 422C  
                 ___rparam_used 000001                      ___fltol@f1 003F                ?_color_read_Blue 0009  
                ??_read_colours 0012                 _Interrupts_init 4238                  __pcstackCOMRAM 0001  
                  __pidataBANK1 3ADC                    __pidataBANK2 3FDA                   __end_of_fputc 399C  
                 __end_of_isbtw 3ADC                   __end_of_fputs 3EDE                   __end_of_putch 4264  
                       ??_fputc 0009                         ??_isbtw 001D                         ??_fputs 0012  
                       ??_putch 0005                      __pbssBANK0 0082                      __pbssBANK1 0100  
             _color_writetoaddr 41C2                    _T2CLKCONbits 000FBF                         ?___flge 0005  
                main@frac_part1 0252                  main@frac_part2 0254                  main@frac_part3 0256  
            ?_color_writetoaddr 0007                         ?___wmul 0005              __size_of_sendTxBuf 001A  
           ??_color_writetoaddr 0008                         ?_strlen 0005                       ?___xxtofl 000B  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5              __size_of_vfpfcnvrt 0396  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5         __end_of_Interrupts_init 4244          color_writetoaddr@value 0007  
              ??_color_read_Red 000B                         _HighISR 0008       __end_of_color_writetoaddr 41E2  
              ?i2_isDataInTxBuf 0001              _I2C_2_Master_Start 4258                      _initUSART4 41A2  
            _I2C_2_Master_Write 422C                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000E                 __size_of___flge 0104                         ___aodiv 33DC  
                       ___fladd 1D80                         ___aomod 3564                         ___fldiv 266A  
                       ___flmul 2240                         ___flsub 3E54                         ___fltol 36C8  
               __size_of___wmul 0026             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 006C                    __psmallconst 0E00         __size_of_putCharToRxBuf 002A  
       __size_of_putCharToTxBuf 002A                         __pcinit 3BAE                         __ramtop 0E00  
                       __ptext0 176A                         __ptext1 3C70                         __ptext2 3B48  
                       __ptext3 2A04                         __ptext4 2D9A                         __ptext5 399C  
                       __ptext6 4010                         __ptext7 3E9A                         __ptext8 38D2  
                       __ptext9 4262                 __size_of_strlen 0036                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                         _isdigit 3FA2  
                    ??___xxtofl 000F                         _isspace 3CC2                       _T2HLTbits 000FBE  
          __end_of_read_colours 3C70                   _RxBufWriteCnt 0055                         atoi@neg 0012  
      __end_of_getCharFromTxBuf 40D6                         _sprintf 3C70            ??_I2C_2_Master_Start 0006  
          ??_I2C_2_Master_Write 0006            end_of_initialization 3C08               __end_of_sendTxBuf 41FC  
                       fputc@fp 0007                         fputs@fp 0010               ?_color_click_init 0001  
            ??_color_click_init 0009               __end_of_vfpfcnvrt 2D9A                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 004E                         strlen@a 0007  
                       strlen@s 0005                 _initDCmotorsPWM 3F20                     ___fladd@grs 0014  
                 ___xxtofl@sign 0013                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                     ___fldiv@grs 0031                     ___fldiv@rem 002A  
      color_writetoaddr@address 0008         ??_I2C_2_Master_RepStart 0006     determine_color_new@RedRatio 003F  
              ?_Interrupts_init 0001                     ___flmul@grs 0013               ?_color_read_Clear 0009  
    __size_of_color_writetoaddr 0020                    _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100  
     __size_of_TxBufferedString 0030               ?_color_read_Green 0009                     ?_initUSART4 0001  
                    main@motorL 026A                      main@motorR 0273              ??_color_read_Clear 000B  
                    main@output 0250              ??_color_read_Green 000B                      main@string 0200  
                __end_of___flge 38D2                     vfpfcnvrt@ap 0048                     vfpfcnvrt@fp 0044  
                   vfpfcnvrt@ll 0060                  __end_of___wmul 41A2    __size_of_determine_color_new 0930  
                __end_of_strlen 4046             color_read_Clear@tmp 000E             start_initialization 3BAE  
                   __end_of_abs 3FA2                     __end_of_pad 3A62                   _TxBufWriteCnt 0053  
           color_read_Green@tmp 000E         __end_of_initDCmotorsPWM 3F62                     vfprintf@fmt 006E  
                      ??___flge 000D                        ??___wmul 0009                  _putCharToRxBuf 412A  
                _putCharToTxBuf 4100                     __pdataBANK1 0178                     __pdataBANK2 0284  
      __size_of_color_read_Blue 0050           __size_of_read_colours 005E                        ??_strlen 0007  
        __size_of_isDataInTxBuf 0018                       ___fladd@a 0009                       ___fladd@b 0005  
                     ___fldiv@a 0022                       ___fldiv@b 001E   determine_color_new@GreenRatio 0043  
                     ___flmul@a 0009                       ___flmul@b 0005                     __pbssCOMRAM 0052  
                     ___flsub@a 003B                       ___flsub@b 0037             __size_of_initUSART4 0020  
                 __pcstackBANK0 0060                   __pcstackBANK2 0200                ___aodiv@dividend 0005  
             __size_of___xxtofl 01B4                        ?_HighISR 0001                       _atoi$2111 0014  
                     _atoi$2112 0018                       _atoi$2113 0016                       _dtoa$2076 0032  
        __end_of_putCharToRxBuf 4154          __end_of_putCharToTxBuf 412A                    _read_colours 3C12  
                     __pintcode 0008                        ?___aodiv 0005                        ?___fladd 0005  
                      ?___aomod 0005                        ?___fldiv 001E                ___aodiv@quotient 0017  
                      ?___flmul 0005                        ?___flsub 0037                        ?___fltol 003F  
        TxBufferedString@string 0006            I2C_2_Master_Read@ack 0007               __size_of_vfprintf 0066  
          I2C_2_Master_Read@tmp 0008                     __smallconst 0E00                        ?_isdigit 0005  
             _I2C_2_Master_Idle 4154               _I2C_2_Master_Init 40D6               _I2C_2_Master_Read 3EDE  
             _I2C_2_Master_Stop 424E                        ?_isspace 0005                    _RxBufReadCnt 0054  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0005                        ?_sprintf 0072  
             ?_getCharFromTxBuf 0001                  __size_of_fputc 00CA                  __size_of_isbtw 007A  
                __size_of_fputs 0044                  __size_of_putch 0002              ??_getCharFromTxBuf 0001  
           ??_I2C_2_Master_Idle 0005             ??_I2C_2_Master_Init 0005             ??_I2C_2_Master_Read 0006  
                ___wmul@product 0009                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0006  
                      _LATCbits 000F7B                   _isDataInTxBuf 41FC                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                _TxBufferedString 407A  
                      _LATGbits 000F7F                       _sendTxBuf 41E2                        _PIE4bits 000E2D  
                      i2u212_40 4228                        i2u212_41 4222                        i2u213_40 422A  
                      i2u420_40 413C                        i2u420_41 4138                        i2u421_40 40BA  
                      i2u421_41 40B6                        _PIR4bits 000E37                        i2u480_40 0038  
                      i2u480_41 0034                        i2u481_40 0046                        i2u481_41 0042  
                      i2u482_40 005A                        i2u482_41 0056                        i2u479_40 0022  
                      i2u479_41 001E            determine_color_new@m 0037                 ?_putCharToRxBuf 0001  
              ?_initDCmotorsPWM 0005                 ?_putCharToTxBuf 0001                        _SSP2CON2 000EDA  
                      _SSP2STAT 000ED8        __size_ofi2_isDataInTxBuf 0018                       _vfpfcnvrt 2A04  
        determine_color1@F14719 01AE       __size_of_color_click_init 0034          determine_color2@F14738 0178  
     __end_of_I2C_2_Master_Idle 417C       __end_of_I2C_2_Master_Init 4100       __end_of_I2C_2_Master_Read 3F20  
             ___wmul@multiplier 0005          determine_color3@F14757 0284       __end_of_I2C_2_Master_Stop 4258  
   I2C_2_Master_Write@data_byte 0006               ??_color_read_Blue 000B                    _TxBufReadCnt 0052  
                  _isspace$2129 000B                       copy_data0 3BC2                       copy_data1 3BE2  
   __size_of_I2C_2_Master_Start 000A     __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A  
                ?_isDataInTxBuf 0001   __end_of_I2C_2_Master_RepStart 424E              color_read_Blue@tmp 000E  
              __size_of_HighISR 006E                      ?_sendTxBuf 0001             _determine_color_new 0E3A  
                  ??_initUSART4 0005                        __Hrparam 0000                      vfprintf@ap 0070  
                      __Lrparam 0000                      vfprintf@fp 006C         __size_of_color_read_Red 0050  
              __size_of___aodiv 0188                __size_of___fladd 04C0                __size_of___aomod 0164  
              __size_of___fldiv 039A                __size_of___flmul 042A                __size_of___flsub 0046  
              __size_of___fltol 0106                       isbtw@high 0019                      ?_vfpfcnvrt 0044  
               ___aodiv@divisor 000D       __size_of_color_read_Clear 0050       __size_of_color_read_Green 0050  
               ___aodiv@counter 0015                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
          ?_determine_color_new 0037                      sprintf@fmt 0074                        ___xxtofl 3084  
              __size_of_isdigit 0038              __end_of_initUSART4 41C2                __size_of_isspace 0052  
                      __ptext10 3F62                        __ptext11 3564                        __ptext20 3D14  
                      __ptext12 33DC                        __ptext21 3D64                        __ptext13 3238  
                      __ptext30 37CE                        __ptext22 3DB4                        __ptext14 3CC2  
                      __ptext31 3084                        __ptext23 3E04                        __ptext15 3FA2  
                      __ptext40 36C8                        __ptext32 266A                        __ptext24 4244  
                      __ptext16 417C                        __ptext41 3E54                        __ptext33 4046  
                      __ptext25 3EDE                        __ptext17 41E2                        __ptext50 40AA  
                      __ptext42 1D80                        __ptext34 41C2                        __ptext26 41A2  
                      __ptext18 41FC                        __ptext43 2240                        __ptext35 422C  
                      __ptext27 3F20                        __ptext19 3C12                        __ptext44 407A  
                      __ptext36 424E                        __ptext28 0E3A                        __ptext45 4100  
                      __ptext37 4258                        __ptext29 3A62                        __ptext46 4238  
                      __ptext38 4154                        __ptext39 40D6                        __ptext48 4214  
                      __ptext49 412A                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
              __size_of_sprintf 0052                   __size_of_atoi 01A4                   __size_of_main 0616  
                 __size_of_dtoa 02EA                        isa$xinst 000000        __size_of_Interrupts_init 000C  
                    _RC4STAbits 000EE7                        int$flags 0056                        _vfprintf 3B48  
                      main@test 027C      __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A  
    __size_of_I2C_2_Master_Read 0042           ??_determine_color_new 0039                ___aomod@dividend 0005  
    __size_of_I2C_2_Master_Stop 000A                  _vfpfcnvrt$2091 006A                      _INTCONbits 000FF2  
             ??i2_isDataInTxBuf 0001                        isdigit@c 0005                        isbtw@low 0015  
                      isbtw@num 0011                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
               ??_isDataInTxBuf 0005                        intlevel2 0000                       sprintf@ap 007A  
                      isspace@c 0005                     ??_sendTxBuf 0005          determine_color_new@out 003D  
                 read_colours@m 0010                 ___aomod@divisor 000D                     ??_vfpfcnvrt 004A  
               ___aomod@counter 0015                _color_click_init 4046        __end_of_TxBufferedString 40AA  
                      sprintf@f 007C                        sprintf@s 0072                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                   ___fladd@signs 0011                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0016                    ___fladd@aexp 0012                    ___fladd@bexp 0013  
              ??_putCharToRxBuf 0001                ??_putCharToTxBuf 0005                    ___aomod@sign 0016  
  determine_color_new@BlueRatio 0047  
