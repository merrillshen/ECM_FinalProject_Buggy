

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 16:20:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 05/05/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F67K40 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     _PIE4bits	set	3629
   103  0000                     _TX4REG	set	3812
   104  0000                     _RC4REG	set	3811
   105  0000                     _PIR4bits	set	3639
   106  0000                     _RC4STAbits	set	3815
   107  0000                     _SP4BRGH	set	3814
   108  0000                     _SP4BRGL	set	3813
   109  0000                     _TX4STAbits	set	3816
   110  0000                     _BAUD4CONbits	set	3817
   111  0000                     _RX4PPS	set	3605
   112  0000                     _RC0PPS	set	3682
   113  0000                     _ANSELFbits	set	3764
   114  0000                     _RC7PPS	set	3689
   115  0000                     _RE2PPS	set	3700
   116  0000                     _SSP2BUF	set	3797
   117  0000                     _SSP2CON2bits	set	3802
   118  0000                     _SSP2CON2	set	3802
   119  0000                     _SSP2STAT	set	3800
   120  0000                     _RD6PPS	set	3696
   121  0000                     _RD5PPS	set	3695
   122  0000                     _SSP2CLKPPS	set	3612
   123  0000                     _SSP2DATPPS	set	3613
   124  0000                     _ANSELDbits	set	3751
   125  0000                     _SSP2ADD	set	3798
   126  0000                     _SSP2CON1bits	set	3801
   127  0000                     _INTCONbits	set	4082
   128  0000                     _PORTFbits	set	3982
   129  0000                     _LATHbits	set	3968
   130  0000                     _TRISHbits	set	3976
   131  0000                     _LATDbits	set	3964
   132  0000                     _LATFbits	set	3966
   133  0000                     _TRISAbits	set	3969
   134  0000                     _LATAbits	set	3961
   135  0000                     _TRISFbits	set	3974
   136  0000                     _PWM7CONbits	set	4001
   137  0000                     _PWM6CONbits	set	4004
   138  0000                     _T2PR	set	4028
   139  0000                     _T2CLKCONbits	set	4031
   140  0000                     _T2HLTbits	set	4030
   141  0000                     _T2CONbits	set	4029
   142  0000                     _LATGbits	set	3967
   143  0000                     _LATCbits	set	3963
   144  0000                     _LATEbits	set	3965
   145  0000                     _TRISGbits	set	3975
   146  0000                     _TRISCbits	set	3971
   147  0000                     _TRISEbits	set	3973
   148  0000                     _TRISDbits	set	3972
   149  0000                     _LATG	set	3967
   150  0000                     _LATE	set	3965
   151  0000                     _PWM7DCH	set	4000
   152  0000                     _PWM6DCH	set	4003
   153                           
   154                           	psect	smallconst
   155  000E00                     __psmallconst:
   156                           	callstack 0
   157  000E00  00                 	db	0
   158  000E01                     STR_2:
   159  000E01  20                 	db	32
   160  000E02  42                 	db	66	;'B'
   161  000E03  20                 	db	32
   162  000E04  52                 	db	82	;'R'
   163  000E05  3A                 	db	58	;':'
   164  000E06  25                 	db	37
   165  000E07  64                 	db	100	;'d'
   166  000E08  20                 	db	32
   167  000E09  47                 	db	71	;'G'
   168  000E0A  3A                 	db	58	;':'
   169  000E0B  25                 	db	37
   170  000E0C  64                 	db	100	;'d'
   171  000E0D  20                 	db	32
   172  000E0E  42                 	db	66	;'B'
   173  000E0F  3A                 	db	58	;':'
   174  000E10  25                 	db	37
   175  000E11  64                 	db	100	;'d'
   176  000E12  20                 	db	32
   177  000E13  0D                 	db	13
   178  000E14  0A                 	db	10
   179  000E15  00                 	db	0
   180  000E16                     STR_1:
   181  000E16  20                 	db	32
   182  000E17  57                 	db	87	;'W'
   183  000E18  20                 	db	32
   184  000E19  52                 	db	82	;'R'
   185  000E1A  3A                 	db	58	;':'
   186  000E1B  25                 	db	37
   187  000E1C  64                 	db	100	;'d'
   188  000E1D  20                 	db	32
   189  000E1E  47                 	db	71	;'G'
   190  000E1F  3A                 	db	58	;':'
   191  000E20  25                 	db	37
   192  000E21  64                 	db	100	;'d'
   193  000E22  20                 	db	32
   194  000E23  42                 	db	66	;'B'
   195  000E24  3A                 	db	58	;':'
   196  000E25  25                 	db	37
   197  000E26  64                 	db	100	;'d'
   198  000E27  20                 	db	32
   199  000E28  0D                 	db	13
   200  000E29  0A                 	db	10
   201  000E2A  00                 	db	0
   202  000E2B                     STR_6:
   203  000E2B  20                 	db	32
   204  000E2C  43                 	db	67	;'C'
   205  000E2D  6F                 	db	111	;'o'
   206  000E2E  6C                 	db	108	;'l'
   207  000E2F  6F                 	db	111	;'o'
   208  000E30  72                 	db	114	;'r'
   209  000E31  3A                 	db	58	;':'
   210  000E32  25                 	db	37
   211  000E33  64                 	db	100	;'d'
   212  000E34  20                 	db	32
   213  000E35  42                 	db	66	;'B'
   214  000E36  3A                 	db	58	;':'
   215  000E37  25                 	db	37
   216  000E38  64                 	db	100	;'d'
   217  000E39  0D                 	db	13
   218  000E3A  0A                 	db	10
   219  000E3B  00                 	db	0
   220  000E3C                     STR_5:
   221  000E3C  20                 	db	32
   222  000E3D  42                 	db	66	;'B'
   223  000E3E  3A                 	db	58	;':'
   224  000E3F  25                 	db	37
   225  000E40  64                 	db	100	;'d'
   226  000E41  20                 	db	32
   227  000E42  00                 	db	0
   228  000E43                     STR_4:
   229  000E43  20                 	db	32
   230  000E44  47                 	db	71	;'G'
   231  000E45  3A                 	db	58	;':'
   232  000E46  25                 	db	37
   233  000E47  64                 	db	100	;'d'
   234  000E48  20                 	db	32
   235  000E49  00                 	db	0
   236  000E4A                     STR_3:
   237  000E4A  20                 	db	32
   238  000E4B  52                 	db	82	;'R'
   239  000E4C  3A                 	db	58	;':'
   240  000E4D  25                 	db	37
   241  000E4E  64                 	db	100	;'d'
   242  000E4F  20                 	db	32
   243  000E50  00                 	db	0
   244  000E51  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           ; #config settings
   247                           
   248                           	psect	cinit
   249  004118                     __pcinit:
   250                           	callstack 0
   251  004118                     start_initialization:
   252                           	callstack 0
   253  004118                     __initialization:
   254                           	callstack 0
   255                           
   256                           ; Clear objects allocated to BANK2 (60 bytes)
   257  004118  EE02  F000         	lfsr	0,__pbssBANK2
   258  00411C  0E3C               	movlw	60
   259  00411E                     clear_0:
   260  00411E  6AEE               	clrf	postinc0,c
   261  004120  06E8               	decf	wreg,f,c
   262  004122  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (60 bytes)
   265  004124  EE00  F060         	lfsr	0,__pbssBANK0
   266  004128  0E3C               	movlw	60
   267  00412A                     clear_1:
   268  00412A  6AEE               	clrf	postinc0,c
   269  00412C  06E8               	decf	wreg,f,c
   270  00412E  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (4 bytes)
   273  004130  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   274  004132  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   275  004134  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   276  004136  6A57               	clrf	__pbssCOMRAM& (0+255),c
   277  004138                     end_of_initialization:
   278                           	callstack 0
   279  004138                     __end_of__initialization:
   280                           	callstack 0
   281  004138  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282  00413A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283  00413C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   284  00413E  6EF8               	movwf	tblptru,c
   285  004140  0E0E               	movlw	high __Lsmallconst
   286  004142  6EF7               	movwf	tblptrh,c
   287  004144  0100               	movlb	0
   288  004146  EF8F  F00D         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291  000057                     __pbssCOMRAM:
   292                           	callstack 0
   293  000057                     _TxBufReadCnt:
   294                           	callstack 0
   295  000057                     	ds	1
   296  000058                     _TxBufWriteCnt:
   297                           	callstack 0
   298  000058                     	ds	1
   299  000059                     _RxBufReadCnt:
   300                           	callstack 0
   301  000059                     	ds	1
   302  00005A                     _RxBufWriteCnt:
   303                           	callstack 0
   304  00005A                     	ds	1
   305                           
   306                           	psect	bssBANK0
   307  000060                     __pbssBANK0:
   308                           	callstack 0
   309  000060                     _EUSART4RXbuf:
   310                           	callstack 0
   311  000060                     	ds	20
   312  000074                     _nout:
   313                           	callstack 0
   314  000074                     	ds	2
   315  000076                     _width:
   316                           	callstack 0
   317  000076                     	ds	2
   318  000078                     _prec:
   319                           	callstack 0
   320  000078                     	ds	2
   321  00007A                     _flags:
   322                           	callstack 0
   323  00007A                     	ds	2
   324  00007C                     _dbuf:
   325                           	callstack 0
   326  00007C                     	ds	32
   327                           
   328                           	psect	bssBANK2
   329  000200                     __pbssBANK2:
   330                           	callstack 0
   331  000200                     _EUSART4TXbuf:
   332                           	callstack 0
   333  000200                     	ds	60
   334                           
   335                           	psect	cstackBANK1
   336  000100                     __pcstackBANK1:
   337                           	callstack 0
   338  000100                     main@string0:
   339                           	callstack 0
   340                           
   341                           ; 30 bytes @ 0x0
   342  000100                     	ds	30
   343  00011E                     main@string1:
   344                           	callstack 0
   345                           
   346                           ; 30 bytes @ 0x1E
   347  00011E                     	ds	30
   348  00013C                     main@string2:
   349                           	callstack 0
   350                           
   351                           ; 30 bytes @ 0x3C
   352  00013C                     	ds	30
   353  00015A                     main@string3:
   354                           	callstack 0
   355                           
   356                           ; 30 bytes @ 0x5A
   357  00015A                     	ds	30
   358  000178                     main@string:
   359                           	callstack 0
   360                           
   361                           ; 30 bytes @ 0x78
   362  000178                     	ds	30
   363  000196                     main@RedRatio:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x96
   367  000196                     	ds	2
   368  000198                     main@GreenRatio:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x98
   372  000198                     	ds	2
   373  00019A                     main@BlueRatio:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x9A
   377  00019A                     	ds	2
   378  00019C                     main@detected_colour:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x9C
   382  00019C                     	ds	2
   383  00019E                     main@brightness:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x9E
   387  00019E                     	ds	2
   388  0001A0                     main@cal:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xA0
   392  0001A0                     	ds	2
   393  0001A2                     main@check3:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xA2
   397  0001A2                     	ds	2
   398  0001A4                     main@check1:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xA4
   402  0001A4                     	ds	2
   403  0001A6                     main@check2:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xA6
   407  0001A6                     	ds	2
   408  0001A8                     main@count:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0xA8
   412  0001A8                     	ds	2
   413  0001AA                     main@motorL:
   414                           	callstack 0
   415                           
   416                           ; 9 bytes @ 0xAA
   417  0001AA                     	ds	9
   418  0001B3                     main@motorR:
   419                           	callstack 0
   420                           
   421                           ; 9 bytes @ 0xB3
   422  0001B3                     	ds	9
   423  0001BC                     main@test:
   424                           	callstack 0
   425                           
   426                           ; 20 bytes @ 0xBC
   427  0001BC                     	ds	20
   428                           
   429                           	psect	cstackBANK0
   430  00009C                     __pcstackBANK0:
   431                           	callstack 0
   432  00009C                     ?_vfprintf:
   433                           	callstack 0
   434  00009C                     ?___fltol:
   435                           	callstack 0
   436  00009C                     vfprintf@fp:
   437                           	callstack 0
   438  00009C                     ___fltol@f1:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x0
   442  00009C                     	ds	2
   443  00009E                     vfprintf@fmt:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447  00009E                     	ds	2
   448  0000A0                     ??___fltol:
   449  0000A0                     vfprintf@ap:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453  0000A0                     	ds	2
   454  0000A2                     ?_sprintf:
   455                           	callstack 0
   456  0000A2                     sprintf@s:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x6
   460  0000A2                     	ds	2
   461  0000A4                     ?_determine_color_new:
   462                           	callstack 0
   463  0000A4                     ?_lumin:
   464                           	callstack 0
   465  0000A4                     determine_color_new@m:
   466                           	callstack 0
   467  0000A4                     lumin@m:
   468                           	callstack 0
   469  0000A4                     sprintf@fmt:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x8
   473  0000A4                     	ds	2
   474  0000A6                     ??_determine_color_new:
   475  0000A6                     ??_lumin:
   476                           
   477                           ; 1 bytes @ 0xA
   478  0000A6                     	ds	4
   479  0000AA                     _lumin$2504:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0xE
   483  0000AA                     	ds	2
   484  0000AC                     sprintf@ap:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x10
   488  0000AC                     	ds	2
   489  0000AE                     lumin@out:
   490                           	callstack 0
   491  0000AE                     _determine_color_new$2503:
   492                           	callstack 0
   493  0000AE                     sprintf@f:
   494                           	callstack 0
   495                           
   496                           ; 6 bytes @ 0x12
   497  0000AE                     	ds	4
   498  0000B2                     determine_color_new@lumin:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x16
   502  0000B2                     	ds	2
   503  0000B4                     determine_color_new@RedRatio:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x18
   507  0000B4                     	ds	2
   508  0000B6                     determine_color_new@GreenRatio:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x1A
   512  0000B6                     	ds	2
   513  0000B8                     determine_color_new@BlueRatio:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x1C
   517  0000B8                     	ds	2
   518  0000BA                     determine_color_new@out:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x1E
   522  0000BA                     	ds	2
   523  0000BC                     determine_color_new@RelR:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x20
   527  0000BC                     	ds	4
   528  0000C0                     determine_color_new@RelG:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x24
   532  0000C0                     	ds	4
   533  0000C4                     determine_color_new@RelB:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x28
   537  0000C4                     	ds	4
   538  0000C8                     ??_main:
   539                           
   540                           ; 1 bytes @ 0x2C
   541  0000C8                     	ds	4
   542                           
   543                           	psect	cstackCOMRAM
   544  000001                     __pcstackCOMRAM:
   545                           	callstack 0
   546  000001                     ??_getCharFromTxBuf:
   547  000001                     putCharToRxBuf@byte:
   548                           	callstack 0
   549  000001                     
   550                           ; 1 bytes @ 0x0
   551  000001                     	ds	2
   552  000003                     ??_HighISR:
   553                           
   554                           ; 1 bytes @ 0x2
   555  000003                     	ds	2
   556  000005                     ??_I2C_2_Master_Idle:
   557  000005                     ?_strlen:
   558                           	callstack 0
   559  000005                     ?___xxtofl:
   560                           	callstack 0
   561  000005                     ?___aodiv:
   562                           	callstack 0
   563  000005                     ?___aomod:
   564                           	callstack 0
   565  000005                     putCharToTxBuf@byte:
   566                           	callstack 0
   567  000005                     initDCmotorsPWM@PWMperiod:
   568                           	callstack 0
   569  000005                     fputc@c:
   570                           	callstack 0
   571  000005                     strlen@s:
   572                           	callstack 0
   573  000005                     ___flge@ff1:
   574                           	callstack 0
   575  000005                     ___xxtofl@val:
   576                           	callstack 0
   577  000005                     ___aodiv@dividend:
   578                           	callstack 0
   579  000005                     ___aomod@dividend:
   580                           	callstack 0
   581                           
   582                           ; 8 bytes @ 0x4
   583  000005                     	ds	1
   584  000006                     ??_I2C_2_Master_Read:
   585  000006                     I2C_2_Master_Write@data_byte:
   586                           	callstack 0
   587  000006                     TxBufferedString@string:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x5
   591  000006                     	ds	1
   592  000007                     color_writetoaddr@value:
   593                           	callstack 0
   594  000007                     I2C_2_Master_Read@ack:
   595                           	callstack 0
   596  000007                     fputc@fp:
   597                           	callstack 0
   598  000007                     strlen@a:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x6
   602  000007                     	ds	1
   603  000008                     color_writetoaddr@address:
   604                           	callstack 0
   605  000008                     I2C_2_Master_Read@tmp:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x7
   609  000008                     	ds	1
   610  000009                     ??_fputc:
   611  000009                     ??_color_click_init:
   612  000009                     ??___xxtofl:
   613  000009                     ?_color_read_Clear:
   614                           	callstack 0
   615  000009                     ?_color_read_Red:
   616                           	callstack 0
   617  000009                     ?_color_read_Green:
   618                           	callstack 0
   619  000009                     ?_color_read_Blue:
   620                           	callstack 0
   621  000009                     ___flge@ff2:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x8
   625  000009                     	ds	2
   626  00000B                     ??_color_read_Clear:
   627  00000B                     ??_color_read_Red:
   628  00000B                     ??_color_read_Green:
   629  00000B                     ??_color_read_Blue:
   630                           
   631                           ; 1 bytes @ 0xA
   632  00000B                     	ds	2
   633  00000D                     ??___flge:
   634  00000D                     ___xxtofl@sign:
   635                           	callstack 0
   636  00000D                     ___aodiv@divisor:
   637                           	callstack 0
   638  00000D                     ___aomod@divisor:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0xC
   642  00000D                     	ds	1
   643  00000E                     ___xxtofl@exp:
   644                           	callstack 0
   645  00000E                     color_read_Clear@tmp:
   646                           	callstack 0
   647  00000E                     color_read_Red@tmp:
   648                           	callstack 0
   649  00000E                     color_read_Green@tmp:
   650                           	callstack 0
   651  00000E                     color_read_Blue@tmp:
   652                           	callstack 0
   653  00000E                     fputs@s:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0xD
   657  00000E                     	ds	1
   658  00000F                     ___xxtofl@arg:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0xE
   662  00000F                     	ds	1
   663  000010                     read_colours@m:
   664                           	callstack 0
   665  000010                     calibrateW@m:
   666                           	callstack 0
   667  000010                     calibrateB@m:
   668                           	callstack 0
   669  000010                     fputs@fp:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0xF
   673  000010                     	ds	1
   674  000011                     ?_isbtw:
   675                           	callstack 0
   676  000011                     isbtw@num:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x10
   680  000011                     	ds	1
   681  000012                     fputs@c:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x11
   685  000012                     	ds	1
   686  000013                     ?___fldiv:
   687                           	callstack 0
   688  000013                     fputs@i:
   689                           	callstack 0
   690  000013                     ___fldiv@b:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x12
   694  000013                     	ds	2
   695  000015                     ?_pad:
   696                           	callstack 0
   697  000015                     ___aodiv@counter:
   698                           	callstack 0
   699  000015                     ___aomod@counter:
   700                           	callstack 0
   701  000015                     pad@fp:
   702                           	callstack 0
   703  000015                     isbtw@low:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x14
   707  000015                     	ds	1
   708  000016                     ___aodiv@sign:
   709                           	callstack 0
   710  000016                     ___aomod@sign:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x15
   714  000016                     	ds	1
   715  000017                     ?_abs:
   716                           	callstack 0
   717  000017                     pad@buf:
   718                           	callstack 0
   719  000017                     abs@a:
   720                           	callstack 0
   721  000017                     ___fldiv@a:
   722                           	callstack 0
   723  000017                     ___aodiv@quotient:
   724                           	callstack 0
   725                           
   726                           ; 8 bytes @ 0x16
   727  000017                     	ds	2
   728  000019                     ??_abs:
   729  000019                     pad@p:
   730                           	callstack 0
   731  000019                     isbtw@high:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x18
   735  000019                     	ds	2
   736  00001B                     ??___fldiv:
   737  00001B                     ??_pad:
   738                           
   739                           ; 1 bytes @ 0x1A
   740  00001B                     	ds	1
   741  00001C                     pad@i:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x1B
   745  00001C                     	ds	1
   746  00001D                     
   747                           ; 1 bytes @ 0x1C
   748  00001D                     	ds	1
   749  00001E                     pad@w:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1D
   753  00001E                     	ds	1
   754  00001F                     ___fldiv@rem:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x1E
   758  00001F                     	ds	1
   759  000020                     ?_dtoa:
   760                           	callstack 0
   761  000020                     dtoa@fp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x1F
   765  000020                     	ds	2
   766  000022                     dtoa@d:
   767                           	callstack 0
   768                           
   769                           ; 8 bytes @ 0x21
   770  000022                     	ds	1
   771  000023                     ___fldiv@sign:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x22
   775  000023                     	ds	1
   776  000024                     ___fldiv@new_exp:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x23
   780  000024                     	ds	2
   781  000026                     ___fldiv@grs:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x25
   785  000026                     	ds	4
   786  00002A                     ??_dtoa:
   787  00002A                     ___fldiv@bexp:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x29
   791  00002A                     	ds	1
   792  00002B                     ___fldiv@aexp:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x2A
   796  00002B                     	ds	1
   797  00002C                     ?___flmul:
   798                           	callstack 0
   799  00002C                     ___flmul@b:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x2B
   803  00002C                     	ds	4
   804  000030                     ___flmul@a:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x2F
   808  000030                     	ds	2
   809  000032                     _dtoa$2201:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x31
   813  000032                     	ds	2
   814  000034                     ??___flmul:
   815  000034                     dtoa@p:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x33
   819  000034                     	ds	2
   820  000036                     dtoa@w:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x35
   824  000036                     	ds	2
   825  000038                     ___flmul@sign:
   826                           	callstack 0
   827  000038                     dtoa@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x37
   831  000038                     	ds	1
   832  000039                     ___flmul@grs:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x38
   836  000039                     	ds	1
   837  00003A                     dtoa@n:
   838                           	callstack 0
   839                           
   840                           ; 8 bytes @ 0x39
   841  00003A                     	ds	3
   842  00003D                     ___flmul@aexp:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x3C
   846  00003D                     	ds	1
   847  00003E                     ___flmul@bexp:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x3D
   851  00003E                     	ds	1
   852  00003F                     ___flmul@prod:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x3E
   856  00003F                     	ds	3
   857  000042                     dtoa@i:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x41
   861  000042                     	ds	1
   862  000043                     ___flmul@temp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x42
   866  000043                     	ds	1
   867  000044                     ?_vfpfcnvrt:
   868                           	callstack 0
   869  000044                     vfpfcnvrt@fp:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x43
   873  000044                     	ds	1
   874  000045                     ?___fladd:
   875                           	callstack 0
   876  000045                     ___fladd@b:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x44
   880  000045                     	ds	1
   881  000046                     vfpfcnvrt@fmt:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x45
   885  000046                     	ds	2
   886  000048                     vfpfcnvrt@ap:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x47
   890  000048                     	ds	1
   891  000049                     ___fladd@a:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x48
   895  000049                     	ds	1
   896  00004A                     ??_vfpfcnvrt:
   897                           
   898                           ; 1 bytes @ 0x49
   899  00004A                     	ds	2
   900  00004C                     vfpfcnvrt@ll:
   901                           	callstack 0
   902                           
   903                           ; 8 bytes @ 0x4B
   904  00004C                     	ds	1
   905  00004D                     ??___fladd:
   906                           
   907                           ; 1 bytes @ 0x4C
   908  00004D                     	ds	4
   909  000051                     ___fladd@signs:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x50
   913  000051                     	ds	1
   914  000052                     ___fladd@aexp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x51
   918  000052                     	ds	1
   919  000053                     ___fladd@bexp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x52
   923  000053                     	ds	1
   924  000054                     ___fladd@grs:
   925                           	callstack 0
   926  000054                     vfprintf@cfmt:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x53
   930  000054                     	ds	1
   931  000055                     ___fltol@sign1:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x54
   935  000055                     	ds	1
   936  000056                     ___fltol@exp1:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x55
   940  000056                     	ds	1
   941                           
   942 ;;
   943 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   944 ;;
   945 ;; *************** function _main *****************
   946 ;; Defined at:
   947 ;;		line 19 in file "main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  brightness      2  158[BANK1 ] unsigned int 
   952 ;;  detected_col    2  156[BANK1 ] unsigned int 
   953 ;;  string         30  120[BANK1 ] unsigned char [30]
   954 ;;  string3        30   90[BANK1 ] unsigned char [30]
   955 ;;  string2        30   60[BANK1 ] unsigned char [30]
   956 ;;  string1        30   30[BANK1 ] unsigned char [30]
   957 ;;  string0        30    0[BANK1 ] unsigned char [30]
   958 ;;  test           20  188[BANK1 ] struct RGB_val
   959 ;;  motorR          9  179[BANK1 ] struct DC_motor
   960 ;;  motorL          9  170[BANK1 ] struct DC_motor
   961 ;;  count           2  168[BANK1 ] unsigned int 
   962 ;;  check2          2  166[BANK1 ] unsigned int 
   963 ;;  check1          2  164[BANK1 ] unsigned int 
   964 ;;  PWMcycle        2    0        unsigned int 
   965 ;;  check3          2  162[BANK1 ] unsigned int 
   966 ;;  cal             2  160[BANK1 ] unsigned int 
   967 ;;  BlueRatio       2  154[BANK1 ] unsigned int 
   968 ;;  GreenRatio      2  152[BANK1 ] unsigned int 
   969 ;;  RedRatio        2  150[BANK1 ] unsigned int 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   980 ;;      Locals:         0       0     208       0       0       0       0       0       0       0       0       0       
      +0       0       0
   981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   982 ;;      Totals:         0       4     208       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;Total ram usage:      212 bytes
   984 ;; Hardware stack levels required when called: 10
   985 ;; This function calls:
   986 ;;		_Interrupts_init
   987 ;;		_TxBufferedString
   988 ;;		___fldiv
   989 ;;		___flmul
   990 ;;		___fltol
   991 ;;		___xxtofl
   992 ;;		_calibrateB
   993 ;;		_calibrateW
   994 ;;		_color_click_init
   995 ;;		_determine_color_new
   996 ;;		_initDCmotorsPWM
   997 ;;		_initUSART4
   998 ;;		_lumin
   999 ;;		_read_colours
  1000 ;;		_sendTxBuf
  1001 ;;		_sprintf
  1002 ;; This function is called by:
  1003 ;;		Startup code after reset
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text0
  1008  001B1E                     __ptext0:
  1009                           	callstack 0
  1010  001B1E                     _main:
  1011                           	callstack 21
  1012  001B1E                     
  1013                           ;main.c: 21:     initDCmotorsPWM(99);
  1014  001B1E  0E00               	movlw	0
  1015  001B20  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1016  001B22  0E63               	movlw	99
  1017  001B24  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1018  001B26  ECF5  F01F         	call	_initDCmotorsPWM	;wreg free
  1019  001B2A                     
  1020                           ;main.c: 22:     color_click_init();
  1021  001B2A  EC72  F020         	call	_color_click_init	;wreg free
  1022  001B2E                     
  1023                           ;main.c: 23:     initUSART4();
  1024  001B2E  EC26  F021         	call	_initUSART4	;wreg free
  1025  001B32                     
  1026                           ;main.c: 24:     Interrupts_init();
  1027  001B32  EC71  F021         	call	_Interrupts_init	;wreg free
  1028  001B36                     
  1029                           ;main.c: 27:     TRISFbits.TRISF2=1;
  1030  001B36  8486               	bsf	134,2,c	;volatile
  1031  001B38                     
  1032                           ;main.c: 28:     ANSELFbits.ANSELF2=0;
  1033  001B38  010E               	movlb	14	; () banked
  1034  001B3A  95B4               	bcf	180,2,b	;volatile
  1035  001B3C                     
  1036                           ; BSR set to: 14
  1037                           ;main.c: 29:     TRISFbits.TRISF3=1;
  1038  001B3C  8686               	bsf	134,3,c	;volatile
  1039  001B3E                     
  1040                           ; BSR set to: 14
  1041                           ;main.c: 30:     ANSELFbits.ANSELF3=0;
  1042  001B3E  97B4               	bcf	180,3,b	;volatile
  1043  001B40                     
  1044                           ; BSR set to: 14
  1045                           ;main.c: 34:     motorL.power=0;
  1046  001B40  0E00               	movlw	0
  1047  001B42  0101               	movlb	1	; () banked
  1048  001B44  6FAA               	movwf	main@motorL& (0+255),b
  1049  001B46                     
  1050                           ; BSR set to: 1
  1051                           ;main.c: 35:     motorL.direction=1;
  1052  001B46  0E01               	movlw	1
  1053  001B48  6FAB               	movwf	(main@motorL+1)& (0+255),b
  1054  001B4A                     
  1055                           ; BSR set to: 1
  1056                           ;main.c: 36:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1057  001B4A  0EA3               	movlw	163
  1058  001B4C  6FAC               	movwf	(main@motorL+2)& (0+255),b
  1059  001B4E  0E0F               	movlw	15
  1060  001B50  6FAD               	movwf	(main@motorL+3)& (0+255),b
  1061  001B52                     
  1062                           ; BSR set to: 1
  1063                           ;main.c: 37:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1064  001B52  0E7D               	movlw	125
  1065  001B54  6FAE               	movwf	(main@motorL+4)& (0+255),b
  1066  001B56  0E0F               	movlw	15
  1067  001B58  6FAF               	movwf	(main@motorL+5)& (0+255),b
  1068  001B5A                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 38:     motorL.dir_pin=4;
  1071  001B5A  0E04               	movlw	4
  1072  001B5C  6FB0               	movwf	(main@motorL+6)& (0+255),b
  1073  001B5E                     
  1074                           ; BSR set to: 1
  1075                           ;main.c: 39:     motorL.PWMperiod=PWMcycle;
  1076  001B5E  0E00               	movlw	0
  1077  001B60  6FB2               	movwf	(main@motorL+8)& (0+255),b
  1078  001B62  0E63               	movlw	99
  1079  001B64  6FB1               	movwf	(main@motorL+7)& (0+255),b
  1080  001B66                     
  1081                           ; BSR set to: 1
  1082                           ;main.c: 41:     motorR.power=0;
  1083  001B66  0E00               	movlw	0
  1084  001B68  6FB3               	movwf	main@motorR& (0+255),b
  1085  001B6A                     
  1086                           ; BSR set to: 1
  1087                           ;main.c: 42:     motorR.direction=1;
  1088  001B6A  0E01               	movlw	1
  1089  001B6C  6FB4               	movwf	(main@motorR+1)& (0+255),b
  1090                           
  1091                           ;main.c: 43:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1092  001B6E  0EA0               	movlw	160
  1093  001B70  6FB5               	movwf	(main@motorR+2)& (0+255),b
  1094  001B72  0E0F               	movlw	15
  1095  001B74  6FB6               	movwf	(main@motorR+3)& (0+255),b
  1096                           
  1097                           ;main.c: 44:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1098  001B76  0E7F               	movlw	127
  1099  001B78  6FB7               	movwf	(main@motorR+4)& (0+255),b
  1100  001B7A  0E0F               	movlw	15
  1101  001B7C  6FB8               	movwf	(main@motorR+5)& (0+255),b
  1102  001B7E                     
  1103                           ; BSR set to: 1
  1104                           ;main.c: 45:     motorR.dir_pin=6;
  1105  001B7E  0E06               	movlw	6
  1106  001B80  6FB9               	movwf	(main@motorR+6)& (0+255),b
  1107  001B82                     
  1108                           ; BSR set to: 1
  1109                           ;main.c: 46:     motorR.PWMperiod=PWMcycle;
  1110  001B82  0E00               	movlw	0
  1111  001B84  6FBB               	movwf	(main@motorR+8)& (0+255),b
  1112  001B86  0E63               	movlw	99
  1113  001B88  6FBA               	movwf	(main@motorR+7)& (0+255),b
  1114  001B8A                     
  1115                           ; BSR set to: 1
  1116                           ;main.c: 49:     struct RGB_val test;;main.c: 50:     test.C = 0;
  1117  001B8A  0E00               	movlw	0
  1118  001B8C  6FC9               	movwf	(main@test+13)& (0+255),b
  1119  001B8E  0E00               	movlw	0
  1120  001B90  6FC8               	movwf	(main@test+12)& (0+255),b
  1121  001B92                     
  1122                           ; BSR set to: 1
  1123                           ;main.c: 51:     test.R = 0;
  1124  001B92  0E00               	movlw	0
  1125  001B94  6FCB               	movwf	(main@test+15)& (0+255),b
  1126  001B96  0E00               	movlw	0
  1127  001B98  6FCA               	movwf	(main@test+14)& (0+255),b
  1128  001B9A                     
  1129                           ; BSR set to: 1
  1130                           ;main.c: 52:     test.G = 0;
  1131  001B9A  0E00               	movlw	0
  1132  001B9C  6FCD               	movwf	(main@test+17)& (0+255),b
  1133  001B9E  0E00               	movlw	0
  1134  001BA0  6FCC               	movwf	(main@test+16)& (0+255),b
  1135  001BA2                     
  1136                           ; BSR set to: 1
  1137                           ;main.c: 53:     test.B = 0;
  1138  001BA2  0E00               	movlw	0
  1139  001BA4  6FCF               	movwf	(main@test+19)& (0+255),b
  1140  001BA6  0E00               	movlw	0
  1141  001BA8  6FCE               	movwf	(main@test+18)& (0+255),b
  1142  001BAA                     
  1143                           ; BSR set to: 1
  1144                           ;main.c: 56:     LATGbits.LATG1=0;
  1145  001BAA  927F               	bcf	127,1,c	;volatile
  1146  001BAC                     
  1147                           ; BSR set to: 1
  1148                           ;main.c: 57:     TRISGbits.TRISG1=0;
  1149  001BAC  9287               	bcf	135,1,c	;volatile
  1150  001BAE                     
  1151                           ; BSR set to: 1
  1152                           ;main.c: 58:     LATAbits.LATA4=0;
  1153  001BAE  9879               	bcf	121,4,c	;volatile
  1154  001BB0                     
  1155                           ; BSR set to: 1
  1156                           ;main.c: 59:     TRISAbits.TRISA4=0;
  1157  001BB0  9881               	bcf	129,4,c	;volatile
  1158  001BB2                     
  1159                           ; BSR set to: 1
  1160                           ;main.c: 60:     LATFbits.LATF7=0;
  1161  001BB2  9E7E               	bcf	126,7,c	;volatile
  1162  001BB4                     
  1163                           ; BSR set to: 1
  1164                           ;main.c: 61:     TRISFbits.TRISF7=0;
  1165  001BB4  9E86               	bcf	134,7,c	;volatile
  1166  001BB6                     
  1167                           ; BSR set to: 1
  1168                           ;main.c: 64:     TRISDbits.TRISD7 = 0;
  1169  001BB6  9E84               	bcf	132,7,c	;volatile
  1170  001BB8                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 65:     LATDbits.LATD7 = 0;
  1173  001BB8  9E7C               	bcf	124,7,c	;volatile
  1174  001BBA                     
  1175                           ; BSR set to: 1
  1176                           ;main.c: 68:     TRISHbits.TRISH3 = 0;
  1177  001BBA  9688               	bcf	136,3,c	;volatile
  1178  001BBC                     
  1179                           ; BSR set to: 1
  1180                           ;main.c: 69:     LATHbits.LATH3 = 0;
  1181  001BBC  9680               	bcf	128,3,c	;volatile
  1182  001BBE                     
  1183                           ; BSR set to: 1
  1184                           ;main.c: 71:     char string[30];;main.c: 72:     char string0[30];;main.c: 73:     char
      +                           string1[30];;main.c: 74:     char string2[30];;main.c: 75:     char string3[30];;main.c
      +                          : 76:     unsigned int RedRatio, GreenRatio, BlueRatio;;main.c: 78:     LATGbits.LATG1=1
      +                          ;
  1185  001BBE  827F               	bsf	127,1,c	;volatile
  1186  001BC0                     
  1187                           ; BSR set to: 1
  1188                           ;main.c: 79:     LATAbits.LATA4=1;
  1189  001BC0  8879               	bsf	121,4,c	;volatile
  1190  001BC2                     
  1191                           ; BSR set to: 1
  1192                           ;main.c: 80:     LATFbits.LATF7=1;
  1193  001BC2  8E7E               	bsf	126,7,c	;volatile
  1194  001BC4                     
  1195                           ; BSR set to: 1
  1196                           ;main.c: 82:     unsigned int cal = 0;
  1197  001BC4  0E00               	movlw	0
  1198  001BC6  6FA1               	movwf	(main@cal+1)& (0+255),b
  1199  001BC8  0E00               	movlw	0
  1200  001BCA  6FA0               	movwf	main@cal& (0+255),b
  1201                           
  1202                           ;main.c: 85:     while(cal==0){
  1203  001BCC  EF99  F00E         	goto	l4553
  1204  001BD0                     l292:
  1205                           
  1206                           ; BSR set to: 1
  1207                           ;main.c: 86:         LATDbits.LATD7 = 1;
  1208  001BD0  8E7C               	bsf	124,7,c	;volatile
  1209  001BD2                     l293:
  1210  001BD2  B48E               	btfsc	142,2,c	;volatile
  1211  001BD4  EFEE  F00D         	goto	u5131
  1212  001BD8  EFF0  F00D         	goto	u5130
  1213  001BDC                     u5131:
  1214  001BDC  EFE9  F00D         	goto	l293
  1215  001BE0                     u5130:
  1216  001BE0                     
  1217                           ;main.c: 88:         if (!PORTFbits.RF2){
  1218  001BE0  B48E               	btfsc	142,2,c	;volatile
  1219  001BE2  EFF5  F00D         	goto	u5141
  1220  001BE6  EFF7  F00D         	goto	u5140
  1221  001BEA                     u5141:
  1222  001BEA  EF0B  F00E         	goto	l4523
  1223  001BEE                     u5140:
  1224  001BEE                     
  1225                           ;main.c: 89:             LATDbits.LATD7 = 0;
  1226  001BEE  9E7C               	bcf	124,7,c	;volatile
  1227  001BF0                     
  1228                           ;main.c: 90:             calibrateW(&test);
  1229  001BF0  0EBC               	movlw	low main@test
  1230  001BF2  6E10               	movwf	calibrateW@m^0,c
  1231  001BF4  0E01               	movlw	high main@test
  1232  001BF6  6E11               	movwf	(calibrateW@m+1)^0,c
  1233  001BF8  EC8B  F01F         	call	_calibrateW	;wreg free
  1234  001BFC                     
  1235                           ;main.c: 91:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1236  001BFC  0E19               	movlw	25
  1237  001BFE  0100               	movlb	0	; () banked
  1238  001C00  6FC9               	movwf	(??_main+1)& (0+255),b
  1239  001C02  0E5A               	movlw	90
  1240  001C04  6FC8               	movwf	??_main& (0+255),b
  1241  001C06  0EB1               	movlw	177
  1242  001C08                     u5257:
  1243  001C08  2EE8               	decfsz	wreg,f,c
  1244  001C0A  D7FE               	bra	u5257
  1245  001C0C  2FC8               	decfsz	??_main& (0+255),f,b
  1246  001C0E  D7FC               	bra	u5257
  1247  001C10  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1248  001C12  D7FA               	bra	u5257
  1249  001C14  D000               	nop2	
  1250  001C16                     l4523:
  1251                           
  1252                           ;main.c: 94:         LATDbits.LATD7 = 1;
  1253  001C16  8E7C               	bsf	124,7,c	;volatile
  1254  001C18                     l297:
  1255  001C18  B48E               	btfsc	142,2,c	;volatile
  1256  001C1A  EF11  F00E         	goto	u5151
  1257  001C1E  EF13  F00E         	goto	u5150
  1258  001C22                     u5151:
  1259  001C22  EF0C  F00E         	goto	l297
  1260  001C26                     u5150:
  1261  001C26                     
  1262                           ;main.c: 96:         if (!PORTFbits.RF2){
  1263  001C26  B48E               	btfsc	142,2,c	;volatile
  1264  001C28  EF18  F00E         	goto	u5161
  1265  001C2C  EF1A  F00E         	goto	u5160
  1266  001C30                     u5161:
  1267  001C30  EF2E  F00E         	goto	l4531
  1268  001C34                     u5160:
  1269  001C34                     
  1270                           ;main.c: 97:             LATDbits.LATD7 = 0;
  1271  001C34  9E7C               	bcf	124,7,c	;volatile
  1272  001C36                     
  1273                           ;main.c: 98:             calibrateB(&test);
  1274  001C36  0EBC               	movlw	low main@test
  1275  001C38  6E10               	movwf	calibrateB@m^0,c
  1276  001C3A  0E01               	movlw	high main@test
  1277  001C3C  6E11               	movwf	(calibrateB@m+1)^0,c
  1278  001C3E  ECB0  F01F         	call	_calibrateB	;wreg free
  1279  001C42                     
  1280                           ;main.c: 99:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1281  001C42  0E19               	movlw	25
  1282  001C44  0100               	movlb	0	; () banked
  1283  001C46  6FC9               	movwf	(??_main+1)& (0+255),b
  1284  001C48  0E5A               	movlw	90
  1285  001C4A  6FC8               	movwf	??_main& (0+255),b
  1286  001C4C  0EB1               	movlw	177
  1287  001C4E                     u5267:
  1288  001C4E  2EE8               	decfsz	wreg,f,c
  1289  001C50  D7FE               	bra	u5267
  1290  001C52  2FC8               	decfsz	??_main& (0+255),f,b
  1291  001C54  D7FC               	bra	u5267
  1292  001C56  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1293  001C58  D7FA               	bra	u5267
  1294  001C5A  D000               	nop2	
  1295  001C5C                     l4531:
  1296                           
  1297                           ;main.c: 102:         sprintf(string0," W R:%d G:%d B:%d \r\n",test.whiteR,test.whiteG,t
      +                          est.whiteB);
  1298  001C5C  0E00               	movlw	low main@string0
  1299  001C5E  0100               	movlb	0	; () banked
  1300  001C60  6FA2               	movwf	sprintf@s& (0+255),b
  1301  001C62  0E01               	movlw	high main@string0
  1302  001C64  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  1303  001C66  0E16               	movlw	low STR_1
  1304  001C68  6FA4               	movwf	sprintf@fmt& (0+255),b
  1305  001C6A  0E0E               	movlw	high STR_1
  1306  001C6C  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  1307  001C6E  C1C2  F0A6         	movff	main@test+6,?_sprintf+4
  1308  001C72  C1C3  F0A7         	movff	main@test+7,?_sprintf+5
  1309  001C76  C1C4  F0A8         	movff	main@test+8,?_sprintf+6
  1310  001C7A  C1C5  F0A9         	movff	main@test+9,?_sprintf+7
  1311  001C7E  C1C6  F0AA         	movff	main@test+10,?_sprintf+8
  1312  001C82  C1C7  F0AB         	movff	main@test+11,?_sprintf+9
  1313  001C86  ECC2  F01E         	call	_sprintf	;wreg free
  1314  001C8A                     
  1315                           ;main.c: 103:         TxBufferedString(string0);
  1316  001C8A  0E00               	movlw	low main@string0
  1317  001C8C  6E06               	movwf	TxBufferedString@string^0,c
  1318  001C8E  0E01               	movlw	high main@string0
  1319  001C90  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1320  001C92  ECA5  F020         	call	_TxBufferedString	;wreg free
  1321  001C96                     
  1322                           ;main.c: 104:         sendTxBuf();
  1323  001C96  EC46  F021         	call	_sendTxBuf	;wreg free
  1324  001C9A                     
  1325                           ;main.c: 105:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1326  001C9A  0E05               	movlw	5
  1327  001C9C  0100               	movlb	0	; () banked
  1328  001C9E  6FC9               	movwf	(??_main+1)& (0+255),b
  1329  001CA0  0E0F               	movlw	15
  1330  001CA2  6FC8               	movwf	??_main& (0+255),b
  1331  001CA4  0EF1               	movlw	241
  1332  001CA6                     u5277:
  1333  001CA6  2EE8               	decfsz	wreg,f,c
  1334  001CA8  D7FE               	bra	u5277
  1335  001CAA  2FC8               	decfsz	??_main& (0+255),f,b
  1336  001CAC  D7FC               	bra	u5277
  1337  001CAE  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1338  001CB0  D7FA               	bra	u5277
  1339  001CB2                     
  1340                           ;main.c: 107:         sprintf(string," B R:%d G:%d B:%d \r\n",test.blackR,test.blackG,te
      +                          st.blackB);
  1341  001CB2  0E78               	movlw	low main@string
  1342  001CB4  0100               	movlb	0	; () banked
  1343  001CB6  6FA2               	movwf	sprintf@s& (0+255),b
  1344  001CB8  0E01               	movlw	high main@string
  1345  001CBA  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  1346  001CBC  0E01               	movlw	low STR_2
  1347  001CBE  6FA4               	movwf	sprintf@fmt& (0+255),b
  1348  001CC0  0E0E               	movlw	high STR_2
  1349  001CC2  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  1350  001CC4  C1BC  F0A6         	movff	main@test,?_sprintf+4
  1351  001CC8  C1BD  F0A7         	movff	main@test+1,?_sprintf+5
  1352  001CCC  C1BE  F0A8         	movff	main@test+2,?_sprintf+6
  1353  001CD0  C1BF  F0A9         	movff	main@test+3,?_sprintf+7
  1354  001CD4  C1C0  F0AA         	movff	main@test+4,?_sprintf+8
  1355  001CD8  C1C1  F0AB         	movff	main@test+5,?_sprintf+9
  1356  001CDC  ECC2  F01E         	call	_sprintf	;wreg free
  1357  001CE0                     
  1358                           ;main.c: 108:         TxBufferedString(string);
  1359  001CE0  0E78               	movlw	low main@string
  1360  001CE2  6E06               	movwf	TxBufferedString@string^0,c
  1361  001CE4  0E01               	movlw	high main@string
  1362  001CE6  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1363  001CE8  ECA5  F020         	call	_TxBufferedString	;wreg free
  1364  001CEC                     
  1365                           ;main.c: 109:         sendTxBuf();
  1366  001CEC  EC46  F021         	call	_sendTxBuf	;wreg free
  1367  001CF0                     
  1368                           ;main.c: 110:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1369  001CF0  0E05               	movlw	5
  1370  001CF2  0100               	movlb	0	; () banked
  1371  001CF4  6FC9               	movwf	(??_main+1)& (0+255),b
  1372  001CF6  0E0F               	movlw	15
  1373  001CF8  6FC8               	movwf	??_main& (0+255),b
  1374  001CFA  0EF1               	movlw	241
  1375  001CFC                     u5287:
  1376  001CFC  2EE8               	decfsz	wreg,f,c
  1377  001CFE  D7FE               	bra	u5287
  1378  001D00  2FC8               	decfsz	??_main& (0+255),f,b
  1379  001D02  D7FC               	bra	u5287
  1380  001D04  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1381  001D06  D7FA               	bra	u5287
  1382  001D08                     
  1383                           ;main.c: 112:         LATHbits.LATH3 = 1;
  1384  001D08  8680               	bsf	128,3,c	;volatile
  1385  001D0A                     l301:
  1386  001D0A  B68E               	btfsc	142,3,c	;volatile
  1387  001D0C  EF8A  F00E         	goto	u5171
  1388  001D10  EF8C  F00E         	goto	u5170
  1389  001D14                     u5171:
  1390  001D14  EF85  F00E         	goto	l301
  1391  001D18                     u5170:
  1392  001D18                     
  1393                           ;main.c: 114:         if (!PORTFbits.RF3){
  1394  001D18  B68E               	btfsc	142,3,c	;volatile
  1395  001D1A  EF91  F00E         	goto	u5181
  1396  001D1E  EF93  F00E         	goto	u5180
  1397  001D22                     u5181:
  1398  001D22  EF99  F00E         	goto	l4553
  1399  001D26                     u5180:
  1400  001D26                     
  1401                           ;main.c: 115:             LATHbits.LATH3 = 0;
  1402  001D26  9680               	bcf	128,3,c	;volatile
  1403  001D28                     
  1404                           ;main.c: 116:             cal = 1;
  1405  001D28  0E00               	movlw	0
  1406  001D2A  0101               	movlb	1	; () banked
  1407  001D2C  6FA1               	movwf	(main@cal+1)& (0+255),b
  1408  001D2E  0E01               	movlw	1
  1409  001D30  6FA0               	movwf	main@cal& (0+255),b
  1410  001D32                     l4553:
  1411                           
  1412                           ;main.c: 85:     while(cal==0){
  1413  001D32  0101               	movlb	1	; () banked
  1414  001D34  51A0               	movf	main@cal& (0+255),w,b
  1415  001D36  11A1               	iorwf	(main@cal+1)& (0+255),w,b
  1416  001D38  B4D8               	btfsc	status,2,c
  1417  001D3A  EFA1  F00E         	goto	u5191
  1418  001D3E  EFA3  F00E         	goto	u5190
  1419  001D42                     u5191:
  1420  001D42  EFE8  F00D         	goto	l292
  1421  001D46                     u5190:
  1422  001D46                     
  1423                           ; BSR set to: 1
  1424                           ;main.c: 120:     unsigned int check1 = 9;
  1425  001D46  0E00               	movlw	0
  1426  001D48  6FA5               	movwf	(main@check1+1)& (0+255),b
  1427  001D4A  0E09               	movlw	9
  1428  001D4C  6FA4               	movwf	main@check1& (0+255),b
  1429                           
  1430                           ;main.c: 121:     unsigned int check2 = 9;
  1431  001D4E  0E00               	movlw	0
  1432  001D50  6FA7               	movwf	(main@check2+1)& (0+255),b
  1433  001D52  0E09               	movlw	9
  1434  001D54  6FA6               	movwf	main@check2& (0+255),b
  1435                           
  1436                           ;main.c: 122:     unsigned int check3 = 9;
  1437  001D56  0E00               	movlw	0
  1438  001D58  6FA3               	movwf	(main@check3+1)& (0+255),b
  1439  001D5A  0E09               	movlw	9
  1440  001D5C  6FA2               	movwf	main@check3& (0+255),b
  1441                           
  1442                           ;main.c: 123:     unsigned int count = 0;
  1443  001D5E  0E00               	movlw	0
  1444  001D60  6FA9               	movwf	(main@count+1)& (0+255),b
  1445  001D62  0E00               	movlw	0
  1446  001D64  6FA8               	movwf	main@count& (0+255),b
  1447  001D66                     l4557:
  1448                           
  1449                           ;main.c: 126:         unsigned int detected_colour;;main.c: 127:         unsigned int br
      +                          ightness;;main.c: 128:         read_colours(&test);
  1450  001D66  0EBC               	movlw	low main@test
  1451  001D68  6E10               	movwf	read_colours@m^0,c
  1452  001D6A  0E01               	movlw	high main@test
  1453  001D6C  6E11               	movwf	(read_colours@m+1)^0,c
  1454  001D6E  EC91  F01E         	call	_read_colours	;wreg free
  1455  001D72                     
  1456                           ;main.c: 130:         if (count==0) {check1 = determine_color_new(&test);count+=1;}
  1457  001D72  0101               	movlb	1	; () banked
  1458  001D74  51A8               	movf	main@count& (0+255),w,b
  1459  001D76  11A9               	iorwf	(main@count+1)& (0+255),w,b
  1460  001D78  A4D8               	btfss	status,2,c
  1461  001D7A  EFC1  F00E         	goto	u5201
  1462  001D7E  EFC3  F00E         	goto	u5200
  1463  001D82                     u5201:
  1464  001D82  EFD1  F00E         	goto	l4565
  1465  001D86                     u5200:
  1466  001D86                     
  1467                           ; BSR set to: 1
  1468  001D86  0EBC               	movlw	low main@test
  1469  001D88  0100               	movlb	0	; () banked
  1470  001D8A  6FA4               	movwf	determine_color_new@m& (0+255),b
  1471  001D8C  0E01               	movlw	high main@test
  1472  001D8E  6FA5               	movwf	(determine_color_new@m+1)& (0+255),b
  1473  001D90  EC29  F007         	call	_determine_color_new	;wreg free
  1474  001D94  C0A4  F1A4         	movff	?_determine_color_new,main@check1
  1475  001D98  C0A5  F1A5         	movff	?_determine_color_new+1,main@check1+1
  1476  001D9C  0101               	movlb	1	; () banked
  1477  001D9E  4BA8               	infsnz	main@count& (0+255),f,b
  1478  001DA0  2BA9               	incf	(main@count+1)& (0+255),f,b
  1479  001DA2                     l4565:
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;main.c: 131:         if (count==1) {check2 = determine_color_new(&test);count+=1;}
  1483  001DA2  05A8               	decf	main@count& (0+255),w,b
  1484  001DA4  11A9               	iorwf	(main@count+1)& (0+255),w,b
  1485  001DA6  A4D8               	btfss	status,2,c
  1486  001DA8  EFD8  F00E         	goto	u5211
  1487  001DAC  EFDA  F00E         	goto	u5210
  1488  001DB0                     u5211:
  1489  001DB0  EFE8  F00E         	goto	l4571
  1490  001DB4                     u5210:
  1491  001DB4                     
  1492                           ; BSR set to: 1
  1493  001DB4  0EBC               	movlw	low main@test
  1494  001DB6  0100               	movlb	0	; () banked
  1495  001DB8  6FA4               	movwf	determine_color_new@m& (0+255),b
  1496  001DBA  0E01               	movlw	high main@test
  1497  001DBC  6FA5               	movwf	(determine_color_new@m+1)& (0+255),b
  1498  001DBE  EC29  F007         	call	_determine_color_new	;wreg free
  1499  001DC2  C0A4  F1A6         	movff	?_determine_color_new,main@check2
  1500  001DC6  C0A5  F1A7         	movff	?_determine_color_new+1,main@check2+1
  1501  001DCA  0101               	movlb	1	; () banked
  1502  001DCC  4BA8               	infsnz	main@count& (0+255),f,b
  1503  001DCE  2BA9               	incf	(main@count+1)& (0+255),f,b
  1504  001DD0                     l4571:
  1505                           
  1506                           ; BSR set to: 1
  1507                           ;main.c: 132:         if (count==2) {check3 = determine_color_new(&test);count=0;}
  1508  001DD0  0E02               	movlw	2
  1509  001DD2  19A8               	xorwf	main@count& (0+255),w,b
  1510  001DD4  11A9               	iorwf	(main@count+1)& (0+255),w,b
  1511  001DD6  A4D8               	btfss	status,2,c
  1512  001DD8  EFF0  F00E         	goto	u5221
  1513  001DDC  EFF2  F00E         	goto	u5220
  1514  001DE0                     u5221:
  1515  001DE0  EF02  F00F         	goto	l4577
  1516  001DE4                     u5220:
  1517  001DE4                     
  1518                           ; BSR set to: 1
  1519  001DE4  0EBC               	movlw	low main@test
  1520  001DE6  0100               	movlb	0	; () banked
  1521  001DE8  6FA4               	movwf	determine_color_new@m& (0+255),b
  1522  001DEA  0E01               	movlw	high main@test
  1523  001DEC  6FA5               	movwf	(determine_color_new@m+1)& (0+255),b
  1524  001DEE  EC29  F007         	call	_determine_color_new	;wreg free
  1525  001DF2  C0A4  F1A2         	movff	?_determine_color_new,main@check3
  1526  001DF6  C0A5  F1A3         	movff	?_determine_color_new+1,main@check3+1
  1527  001DFA  0E00               	movlw	0
  1528  001DFC  0101               	movlb	1	; () banked
  1529  001DFE  6FA9               	movwf	(main@count+1)& (0+255),b
  1530  001E00  0E00               	movlw	0
  1531  001E02  6FA8               	movwf	main@count& (0+255),b
  1532  001E04                     l4577:
  1533                           
  1534                           ; BSR set to: 1
  1535                           ;main.c: 135:         if (check1 == check2 && check2 == check3){
  1536  001E04  51A6               	movf	main@check2& (0+255),w,b
  1537  001E06  19A4               	xorwf	main@check1& (0+255),w,b
  1538  001E08  E107               	bnz	u5231
  1539  001E0A  51A7               	movf	(main@check2+1)& (0+255),w,b
  1540  001E0C  19A5               	xorwf	(main@check1+1)& (0+255),w,b
  1541  001E0E  A4D8               	btfss	status,2,c
  1542  001E10  EF0C  F00F         	goto	u5231
  1543  001E14  EF0E  F00F         	goto	u5230
  1544  001E18                     u5231:
  1545  001E18  EF1E  F00F         	goto	l4583
  1546  001E1C                     u5230:
  1547  001E1C                     
  1548                           ; BSR set to: 1
  1549  001E1C  51A2               	movf	main@check3& (0+255),w,b
  1550  001E1E  19A6               	xorwf	main@check2& (0+255),w,b
  1551  001E20  E107               	bnz	u5241
  1552  001E22  51A3               	movf	(main@check3+1)& (0+255),w,b
  1553  001E24  19A7               	xorwf	(main@check2+1)& (0+255),w,b
  1554  001E26  A4D8               	btfss	status,2,c
  1555  001E28  EF18  F00F         	goto	u5241
  1556  001E2C  EF1A  F00F         	goto	u5240
  1557  001E30                     u5241:
  1558  001E30  EF1E  F00F         	goto	l4583
  1559  001E34                     u5240:
  1560  001E34                     
  1561                           ; BSR set to: 1
  1562                           ;main.c: 136:             detected_colour = check1;
  1563  001E34  C1A4  F19C         	movff	main@check1,main@detected_colour
  1564  001E38  C1A5  F19D         	movff	main@check1+1,main@detected_colour+1
  1565  001E3C                     l4583:
  1566                           
  1567                           ; BSR set to: 1
  1568                           ;main.c: 143:         RedRatio = ((float)(test.R - test.blackR) / (float)(test.whiteR - 
      +                          test.blackR)) * 10000;
  1569  001E3C  0E00               	movlw	0
  1570  001E3E  6E30               	movwf	___flmul@a^0,c
  1571  001E40  0E40               	movlw	64
  1572  001E42  6E31               	movwf	(___flmul@a+1)^0,c
  1573  001E44  0E1C               	movlw	28
  1574  001E46  6E32               	movwf	(___flmul@a+2)^0,c
  1575  001E48  0E46               	movlw	70
  1576  001E4A  6E33               	movwf	(___flmul@a+3)^0,c
  1577  001E4C  51BC               	movf	main@test& (0+255),w,b
  1578  001E4E  5DC2               	subwf	(main@test+6)& (0+255),w,b
  1579  001E50  0100               	movlb	0	; () banked
  1580  001E52  6FC8               	movwf	??_main& (0+255),b
  1581  001E54  0101               	movlb	1	; () banked
  1582  001E56  51BD               	movf	(main@test+1)& (0+255),w,b
  1583  001E58  59C3               	subwfb	(main@test+7)& (0+255),w,b
  1584  001E5A  0100               	movlb	0	; () banked
  1585  001E5C  6FC9               	movwf	(??_main+1)& (0+255),b
  1586  001E5E  C0C8  F005         	movff	??_main,___xxtofl@val
  1587  001E62  C0C9  F006         	movff	??_main+1,___xxtofl@val+1
  1588  001E66  6A07               	clrf	(___xxtofl@val+2)^0,c
  1589  001E68  6A08               	clrf	(___xxtofl@val+3)^0,c
  1590  001E6A  0E00               	movlw	0
  1591  001E6C  EC54  F019         	call	___xxtofl
  1592  001E70  C005  F017         	movff	?___xxtofl,___fldiv@a
  1593  001E74  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1594  001E78  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1595  001E7C  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1596  001E80  0101               	movlb	1	; () banked
  1597  001E82  51BC               	movf	main@test& (0+255),w,b
  1598  001E84  5DCA               	subwf	(main@test+14)& (0+255),w,b
  1599  001E86  0100               	movlb	0	; () banked
  1600  001E88  6FCA               	movwf	(??_main+2)& (0+255),b
  1601  001E8A  0101               	movlb	1	; () banked
  1602  001E8C  51BD               	movf	(main@test+1)& (0+255),w,b
  1603  001E8E  59CB               	subwfb	(main@test+15)& (0+255),w,b
  1604  001E90  0100               	movlb	0	; () banked
  1605  001E92  6FCB               	movwf	(??_main+3)& (0+255),b
  1606  001E94  C0CA  F005         	movff	??_main+2,___xxtofl@val
  1607  001E98  C0CB  F006         	movff	??_main+3,___xxtofl@val+1
  1608  001E9C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1609  001E9E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1610  001EA0  0E00               	movlw	0
  1611  001EA2  EC54  F019         	call	___xxtofl
  1612  001EA6  C005  F013         	movff	?___xxtofl,___fldiv@b
  1613  001EAA  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1614  001EAE  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1615  001EB2  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1616  001EB6  EC3C  F015         	call	___fldiv	;wreg free
  1617  001EBA  C013  F02C         	movff	?___fldiv,___flmul@b
  1618  001EBE  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1619  001EC2  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1620  001EC6  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1621  001ECA  EC27  F013         	call	___flmul	;wreg free
  1622  001ECE  C02C  F09C         	movff	?___flmul,___fltol@f1
  1623  001ED2  C02D  F09D         	movff	?___flmul+1,___fltol@f1+1
  1624  001ED6  C02E  F09E         	movff	?___flmul+2,___fltol@f1+2
  1625  001EDA  C02F  F09F         	movff	?___flmul+3,___fltol@f1+3
  1626  001EDE  EC55  F01C         	call	___fltol	;wreg free
  1627  001EE2  C09C  F196         	movff	?___fltol,main@RedRatio
  1628  001EE6  C09D  F197         	movff	?___fltol+1,main@RedRatio+1
  1629                           
  1630                           ;main.c: 144:         GreenRatio = ((float)(test.G - test.blackG) / (float)(test.whiteG 
      +                          - test.blackG)) * 10000;
  1631  001EEA  0E00               	movlw	0
  1632  001EEC  6E30               	movwf	___flmul@a^0,c
  1633  001EEE  0E40               	movlw	64
  1634  001EF0  6E31               	movwf	(___flmul@a+1)^0,c
  1635  001EF2  0E1C               	movlw	28
  1636  001EF4  6E32               	movwf	(___flmul@a+2)^0,c
  1637  001EF6  0E46               	movlw	70
  1638  001EF8  6E33               	movwf	(___flmul@a+3)^0,c
  1639  001EFA  0101               	movlb	1	; () banked
  1640  001EFC  51BE               	movf	(main@test+2)& (0+255),w,b
  1641  001EFE  5DC4               	subwf	(main@test+8)& (0+255),w,b
  1642  001F00  0100               	movlb	0	; () banked
  1643  001F02  6FC8               	movwf	??_main& (0+255),b
  1644  001F04  0101               	movlb	1	; () banked
  1645  001F06  51BF               	movf	(main@test+3)& (0+255),w,b
  1646  001F08  59C5               	subwfb	(main@test+9)& (0+255),w,b
  1647  001F0A  0100               	movlb	0	; () banked
  1648  001F0C  6FC9               	movwf	(??_main+1)& (0+255),b
  1649  001F0E  C0C8  F005         	movff	??_main,___xxtofl@val
  1650  001F12  C0C9  F006         	movff	??_main+1,___xxtofl@val+1
  1651  001F16  6A07               	clrf	(___xxtofl@val+2)^0,c
  1652  001F18  6A08               	clrf	(___xxtofl@val+3)^0,c
  1653  001F1A  0E00               	movlw	0
  1654  001F1C  EC54  F019         	call	___xxtofl
  1655  001F20  C005  F017         	movff	?___xxtofl,___fldiv@a
  1656  001F24  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1657  001F28  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1658  001F2C  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1659  001F30  0101               	movlb	1	; () banked
  1660  001F32  51BE               	movf	(main@test+2)& (0+255),w,b
  1661  001F34  5DCC               	subwf	(main@test+16)& (0+255),w,b
  1662  001F36  0100               	movlb	0	; () banked
  1663  001F38  6FCA               	movwf	(??_main+2)& (0+255),b
  1664  001F3A  0101               	movlb	1	; () banked
  1665  001F3C  51BF               	movf	(main@test+3)& (0+255),w,b
  1666  001F3E  59CD               	subwfb	(main@test+17)& (0+255),w,b
  1667  001F40  0100               	movlb	0	; () banked
  1668  001F42  6FCB               	movwf	(??_main+3)& (0+255),b
  1669  001F44  C0CA  F005         	movff	??_main+2,___xxtofl@val
  1670  001F48  C0CB  F006         	movff	??_main+3,___xxtofl@val+1
  1671  001F4C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1672  001F4E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1673  001F50  0E00               	movlw	0
  1674  001F52  EC54  F019         	call	___xxtofl
  1675  001F56  C005  F013         	movff	?___xxtofl,___fldiv@b
  1676  001F5A  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1677  001F5E  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1678  001F62  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1679  001F66  EC3C  F015         	call	___fldiv	;wreg free
  1680  001F6A  C013  F02C         	movff	?___fldiv,___flmul@b
  1681  001F6E  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1682  001F72  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1683  001F76  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1684  001F7A  EC27  F013         	call	___flmul	;wreg free
  1685  001F7E  C02C  F09C         	movff	?___flmul,___fltol@f1
  1686  001F82  C02D  F09D         	movff	?___flmul+1,___fltol@f1+1
  1687  001F86  C02E  F09E         	movff	?___flmul+2,___fltol@f1+2
  1688  001F8A  C02F  F09F         	movff	?___flmul+3,___fltol@f1+3
  1689  001F8E  EC55  F01C         	call	___fltol	;wreg free
  1690  001F92  C09C  F198         	movff	?___fltol,main@GreenRatio
  1691  001F96  C09D  F199         	movff	?___fltol+1,main@GreenRatio+1
  1692                           
  1693                           ;main.c: 145:         BlueRatio = ((float)(test.B - test.blackB) / (float)(test.whiteB -
      +                           test.blackB)) * 10000;
  1694  001F9A  0E00               	movlw	0
  1695  001F9C  6E30               	movwf	___flmul@a^0,c
  1696  001F9E  0E40               	movlw	64
  1697  001FA0  6E31               	movwf	(___flmul@a+1)^0,c
  1698  001FA2  0E1C               	movlw	28
  1699  001FA4  6E32               	movwf	(___flmul@a+2)^0,c
  1700  001FA6  0E46               	movlw	70
  1701  001FA8  6E33               	movwf	(___flmul@a+3)^0,c
  1702  001FAA  0101               	movlb	1	; () banked
  1703  001FAC  51C0               	movf	(main@test+4)& (0+255),w,b
  1704  001FAE  5DC6               	subwf	(main@test+10)& (0+255),w,b
  1705  001FB0  0100               	movlb	0	; () banked
  1706  001FB2  6FC8               	movwf	??_main& (0+255),b
  1707  001FB4  0101               	movlb	1	; () banked
  1708  001FB6  51C1               	movf	(main@test+5)& (0+255),w,b
  1709  001FB8  59C7               	subwfb	(main@test+11)& (0+255),w,b
  1710  001FBA  0100               	movlb	0	; () banked
  1711  001FBC  6FC9               	movwf	(??_main+1)& (0+255),b
  1712  001FBE  C0C8  F005         	movff	??_main,___xxtofl@val
  1713  001FC2  C0C9  F006         	movff	??_main+1,___xxtofl@val+1
  1714  001FC6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1715  001FC8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1716  001FCA  0E00               	movlw	0
  1717  001FCC  EC54  F019         	call	___xxtofl
  1718  001FD0  C005  F017         	movff	?___xxtofl,___fldiv@a
  1719  001FD4  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  1720  001FD8  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  1721  001FDC  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  1722  001FE0  0101               	movlb	1	; () banked
  1723  001FE2  51C0               	movf	(main@test+4)& (0+255),w,b
  1724  001FE4  5DCE               	subwf	(main@test+18)& (0+255),w,b
  1725  001FE6  0100               	movlb	0	; () banked
  1726  001FE8  6FCA               	movwf	(??_main+2)& (0+255),b
  1727  001FEA  0101               	movlb	1	; () banked
  1728  001FEC  51C1               	movf	(main@test+5)& (0+255),w,b
  1729  001FEE  59CF               	subwfb	(main@test+19)& (0+255),w,b
  1730  001FF0  0100               	movlb	0	; () banked
  1731  001FF2  6FCB               	movwf	(??_main+3)& (0+255),b
  1732  001FF4  C0CA  F005         	movff	??_main+2,___xxtofl@val
  1733  001FF8  C0CB  F006         	movff	??_main+3,___xxtofl@val+1
  1734  001FFC  6A07               	clrf	(___xxtofl@val+2)^0,c
  1735  001FFE  6A08               	clrf	(___xxtofl@val+3)^0,c
  1736  002000  0E00               	movlw	0
  1737  002002  EC54  F019         	call	___xxtofl
  1738  002006  C005  F013         	movff	?___xxtofl,___fldiv@b
  1739  00200A  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  1740  00200E  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  1741  002012  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  1742  002016  EC3C  F015         	call	___fldiv	;wreg free
  1743  00201A  C013  F02C         	movff	?___fldiv,___flmul@b
  1744  00201E  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  1745  002022  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  1746  002026  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  1747  00202A  EC27  F013         	call	___flmul	;wreg free
  1748  00202E  C02C  F09C         	movff	?___flmul,___fltol@f1
  1749  002032  C02D  F09D         	movff	?___flmul+1,___fltol@f1+1
  1750  002036  C02E  F09E         	movff	?___flmul+2,___fltol@f1+2
  1751  00203A  C02F  F09F         	movff	?___flmul+3,___fltol@f1+3
  1752  00203E  EC55  F01C         	call	___fltol	;wreg free
  1753  002042  C09C  F19A         	movff	?___fltol,main@BlueRatio
  1754  002046  C09D  F19B         	movff	?___fltol+1,main@BlueRatio+1
  1755  00204A                     
  1756                           ;main.c: 146:         brightness = lumin(&test);
  1757  00204A  0EBC               	movlw	low main@test
  1758  00204C  0100               	movlb	0	; () banked
  1759  00204E  6FA4               	movwf	lumin@m& (0+255),b
  1760  002050  0E01               	movlw	high main@test
  1761  002052  6FA5               	movwf	(lumin@m+1)& (0+255),b
  1762  002054  ECA4  F01B         	call	_lumin	;wreg free
  1763  002058  C0A4  F19E         	movff	?_lumin,main@brightness
  1764  00205C  C0A5  F19F         	movff	?_lumin+1,main@brightness+1
  1765  002060                     
  1766                           ;main.c: 148:         sprintf(string1," R:%d ",RedRatio);
  1767  002060  0E1E               	movlw	low main@string1
  1768  002062  0100               	movlb	0	; () banked
  1769  002064  6FA2               	movwf	sprintf@s& (0+255),b
  1770  002066  0E01               	movlw	high main@string1
  1771  002068  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  1772  00206A  0E4A               	movlw	low STR_3
  1773  00206C  6FA4               	movwf	sprintf@fmt& (0+255),b
  1774  00206E  0E0E               	movlw	high STR_3
  1775  002070  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  1776  002072  C196  F0A6         	movff	main@RedRatio,?_sprintf+4
  1777  002076  C197  F0A7         	movff	main@RedRatio+1,?_sprintf+5
  1778  00207A  ECC2  F01E         	call	_sprintf	;wreg free
  1779  00207E                     
  1780                           ;main.c: 149:         TxBufferedString(string1);
  1781  00207E  0E1E               	movlw	low main@string1
  1782  002080  6E06               	movwf	TxBufferedString@string^0,c
  1783  002082  0E01               	movlw	high main@string1
  1784  002084  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1785  002086  ECA5  F020         	call	_TxBufferedString	;wreg free
  1786  00208A                     
  1787                           ;main.c: 150:         sendTxBuf();
  1788  00208A  EC46  F021         	call	_sendTxBuf	;wreg free
  1789  00208E                     
  1790                           ;main.c: 151:         _delay((unsigned long)((150)*(64000000/4000.0)));
  1791  00208E  0E0D               	movlw	13
  1792  002090  0100               	movlb	0	; () banked
  1793  002092  6FC9               	movwf	(??_main+1)& (0+255),b
  1794  002094  0E2D               	movlw	45
  1795  002096  6FC8               	movwf	??_main& (0+255),b
  1796  002098  0ED7               	movlw	215
  1797  00209A                     u5297:
  1798  00209A  2EE8               	decfsz	wreg,f,c
  1799  00209C  D7FE               	bra	u5297
  1800  00209E  2FC8               	decfsz	??_main& (0+255),f,b
  1801  0020A0  D7FC               	bra	u5297
  1802  0020A2  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1803  0020A4  D7FA               	bra	u5297
  1804  0020A6  D000               	nop2	
  1805  0020A8                     
  1806                           ;main.c: 153:         sprintf(string2," G:%d ",GreenRatio);
  1807  0020A8  0E3C               	movlw	low main@string2
  1808  0020AA  0100               	movlb	0	; () banked
  1809  0020AC  6FA2               	movwf	sprintf@s& (0+255),b
  1810  0020AE  0E01               	movlw	high main@string2
  1811  0020B0  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  1812  0020B2  0E43               	movlw	low STR_4
  1813  0020B4  6FA4               	movwf	sprintf@fmt& (0+255),b
  1814  0020B6  0E0E               	movlw	high STR_4
  1815  0020B8  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  1816  0020BA  C198  F0A6         	movff	main@GreenRatio,?_sprintf+4
  1817  0020BE  C199  F0A7         	movff	main@GreenRatio+1,?_sprintf+5
  1818  0020C2  ECC2  F01E         	call	_sprintf	;wreg free
  1819  0020C6                     
  1820                           ;main.c: 154:         TxBufferedString(string2);
  1821  0020C6  0E3C               	movlw	low main@string2
  1822  0020C8  6E06               	movwf	TxBufferedString@string^0,c
  1823  0020CA  0E01               	movlw	high main@string2
  1824  0020CC  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1825  0020CE  ECA5  F020         	call	_TxBufferedString	;wreg free
  1826  0020D2                     
  1827                           ;main.c: 155:         sendTxBuf();
  1828  0020D2  EC46  F021         	call	_sendTxBuf	;wreg free
  1829  0020D6                     
  1830                           ;main.c: 156:         _delay((unsigned long)((150)*(64000000/4000.0)));
  1831  0020D6  0E0D               	movlw	13
  1832  0020D8  0100               	movlb	0	; () banked
  1833  0020DA  6FC9               	movwf	(??_main+1)& (0+255),b
  1834  0020DC  0E2D               	movlw	45
  1835  0020DE  6FC8               	movwf	??_main& (0+255),b
  1836  0020E0  0ED7               	movlw	215
  1837  0020E2                     u5307:
  1838  0020E2  2EE8               	decfsz	wreg,f,c
  1839  0020E4  D7FE               	bra	u5307
  1840  0020E6  2FC8               	decfsz	??_main& (0+255),f,b
  1841  0020E8  D7FC               	bra	u5307
  1842  0020EA  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1843  0020EC  D7FA               	bra	u5307
  1844  0020EE  D000               	nop2	
  1845  0020F0                     
  1846                           ;main.c: 158:         sprintf(string3," B:%d ",BlueRatio);
  1847  0020F0  0E5A               	movlw	low main@string3
  1848  0020F2  0100               	movlb	0	; () banked
  1849  0020F4  6FA2               	movwf	sprintf@s& (0+255),b
  1850  0020F6  0E01               	movlw	high main@string3
  1851  0020F8  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  1852  0020FA  0E3C               	movlw	low STR_5
  1853  0020FC  6FA4               	movwf	sprintf@fmt& (0+255),b
  1854  0020FE  0E0E               	movlw	high STR_5
  1855  002100  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  1856  002102  C19A  F0A6         	movff	main@BlueRatio,?_sprintf+4
  1857  002106  C19B  F0A7         	movff	main@BlueRatio+1,?_sprintf+5
  1858  00210A  ECC2  F01E         	call	_sprintf	;wreg free
  1859  00210E                     
  1860                           ;main.c: 159:         TxBufferedString(string3);
  1861  00210E  0E5A               	movlw	low main@string3
  1862  002110  6E06               	movwf	TxBufferedString@string^0,c
  1863  002112  0E01               	movlw	high main@string3
  1864  002114  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1865  002116  ECA5  F020         	call	_TxBufferedString	;wreg free
  1866  00211A                     
  1867                           ;main.c: 160:         sendTxBuf();
  1868  00211A  EC46  F021         	call	_sendTxBuf	;wreg free
  1869  00211E                     
  1870                           ;main.c: 161:         _delay((unsigned long)((150)*(64000000/4000.0)));
  1871  00211E  0E0D               	movlw	13
  1872  002120  0100               	movlb	0	; () banked
  1873  002122  6FC9               	movwf	(??_main+1)& (0+255),b
  1874  002124  0E2D               	movlw	45
  1875  002126  6FC8               	movwf	??_main& (0+255),b
  1876  002128  0ED7               	movlw	215
  1877  00212A                     u5317:
  1878  00212A  2EE8               	decfsz	wreg,f,c
  1879  00212C  D7FE               	bra	u5317
  1880  00212E  2FC8               	decfsz	??_main& (0+255),f,b
  1881  002130  D7FC               	bra	u5317
  1882  002132  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1883  002134  D7FA               	bra	u5317
  1884  002136  D000               	nop2	
  1885  002138                     
  1886                           ;main.c: 163:         sprintf(string," Color:%d B:%d\r\n",detected_colour,brightness);
  1887  002138  0E78               	movlw	low main@string
  1888  00213A  0100               	movlb	0	; () banked
  1889  00213C  6FA2               	movwf	sprintf@s& (0+255),b
  1890  00213E  0E01               	movlw	high main@string
  1891  002140  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  1892  002142  0E2B               	movlw	low STR_6
  1893  002144  6FA4               	movwf	sprintf@fmt& (0+255),b
  1894  002146  0E0E               	movlw	high STR_6
  1895  002148  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  1896  00214A  C19C  F0A6         	movff	main@detected_colour,?_sprintf+4
  1897  00214E  C19D  F0A7         	movff	main@detected_colour+1,?_sprintf+5
  1898  002152  C19E  F0A8         	movff	main@brightness,?_sprintf+6
  1899  002156  C19F  F0A9         	movff	main@brightness+1,?_sprintf+7
  1900  00215A  ECC2  F01E         	call	_sprintf	;wreg free
  1901  00215E                     
  1902                           ;main.c: 164:         TxBufferedString(string);
  1903  00215E  0E78               	movlw	low main@string
  1904  002160  6E06               	movwf	TxBufferedString@string^0,c
  1905  002162  0E01               	movlw	high main@string
  1906  002164  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1907  002166  ECA5  F020         	call	_TxBufferedString	;wreg free
  1908  00216A                     
  1909                           ;main.c: 165:         sendTxBuf();
  1910  00216A  EC46  F021         	call	_sendTxBuf	;wreg free
  1911  00216E                     
  1912                           ;main.c: 166:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1913  00216E  0E05               	movlw	5
  1914  002170  0100               	movlb	0	; () banked
  1915  002172  6FC9               	movwf	(??_main+1)& (0+255),b
  1916  002174  0E0F               	movlw	15
  1917  002176  6FC8               	movwf	??_main& (0+255),b
  1918  002178  0EF1               	movlw	241
  1919  00217A                     u5327:
  1920  00217A  2EE8               	decfsz	wreg,f,c
  1921  00217C  D7FE               	bra	u5327
  1922  00217E  2FC8               	decfsz	??_main& (0+255),f,b
  1923  002180  D7FC               	bra	u5327
  1924  002182  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1925  002184  D7FA               	bra	u5327
  1926  002186  EFB3  F00E         	goto	l4557
  1927  00218A  EF3B  F000         	goto	start
  1928  00218E                     __end_of_main:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _sprintf *****************
  1932 ;; Defined at:
  1933 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1936 ;;		 -> main@string3(30), main@string2(30), main@string1(30), main@string(30), 
  1937 ;;		 -> main@string0(30), 
  1938 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1939 ;;		 -> STR_6(17), STR_5(7), STR_4(7), STR_3(7), 
  1940 ;;		 -> STR_2(21), STR_1(21), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  f               6   18[BANK0 ] struct _IO_FILE
  1943 ;;  ap              2   16[BANK0 ] PTR void [1]
  1944 ;;		 -> ?_sprintf(2), 
  1945 ;;  ret             2    0        int 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2    6[BANK0 ] int 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1955 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;Total ram usage:       18 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 9
  1962 ;; This function calls:
  1963 ;;		_vfprintf
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text1
  1970  003D84                     __ptext1:
  1971                           	callstack 0
  1972  003D84                     _sprintf:
  1973                           	callstack 21
  1974  003D84  0EA6               	movlw	low (?_sprintf+4)
  1975  003D86  0100               	movlb	0	; () banked
  1976  003D88  6FAC               	movwf	sprintf@ap& (0+255),b
  1977  003D8A  0E00               	movlw	high (?_sprintf+4)
  1978  003D8C  6FAD               	movwf	(sprintf@ap+1)& (0+255),b
  1979  003D8E  C0A2  F0AE         	movff	sprintf@s,sprintf@f
  1980  003D92  C0A3  F0AF         	movff	sprintf@s+1,sprintf@f+1
  1981  003D96                     
  1982                           ; BSR set to: 0
  1983  003D96  0E00               	movlw	0
  1984  003D98  6FB1               	movwf	(sprintf@f+3)& (0+255),b
  1985  003D9A  0E00               	movlw	0
  1986  003D9C  6FB0               	movwf	(sprintf@f+2)& (0+255),b
  1987  003D9E                     
  1988                           ; BSR set to: 0
  1989  003D9E  0E00               	movlw	0
  1990  003DA0  6FB3               	movwf	(sprintf@f+5)& (0+255),b
  1991  003DA2  0E00               	movlw	0
  1992  003DA4  6FB2               	movwf	(sprintf@f+4)& (0+255),b
  1993  003DA6                     
  1994                           ; BSR set to: 0
  1995  003DA6  0EAE               	movlw	low sprintf@f
  1996  003DA8  6F9C               	movwf	vfprintf@fp& (0+255),b
  1997  003DAA  0E00               	movlw	high sprintf@f
  1998  003DAC  6F9D               	movwf	(vfprintf@fp+1)& (0+255),b
  1999  003DAE  C0A4  F09E         	movff	sprintf@fmt,vfprintf@fmt
  2000  003DB2  C0A5  F09F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2001  003DB6  0EAC               	movlw	low sprintf@ap
  2002  003DB8  6FA0               	movwf	vfprintf@ap& (0+255),b
  2003  003DBA  0E00               	movlw	high sprintf@ap
  2004  003DBC  6FA1               	movwf	(vfprintf@ap+1)& (0+255),b
  2005  003DBE  EC60  F01E         	call	_vfprintf	;wreg free
  2006  003DC2  0100               	movlb	0	; () banked
  2007  003DC4  51B0               	movf	(sprintf@f+2)& (0+255),w,b
  2008  003DC6  25A2               	addwf	sprintf@s& (0+255),w,b
  2009  003DC8  6ED9               	movwf	fsr2l,c
  2010  003DCA  51B1               	movf	(sprintf@f+3)& (0+255),w,b
  2011  003DCC  21A3               	addwfc	(sprintf@s+1)& (0+255),w,b
  2012  003DCE  6EDA               	movwf	fsr2h,c
  2013  003DD0  0E00               	movlw	0
  2014  003DD2  6EDF               	movwf	indf2,c
  2015  003DD4                     
  2016                           ; BSR set to: 0
  2017  003DD4  0012               	return		;funcret
  2018  003DD6                     __end_of_sprintf:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _vfprintf *****************
  2022 ;; Defined at:
  2023 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2026 ;;		 -> sprintf@f(6), 
  2027 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2028 ;;		 -> STR_6(17), STR_5(7), STR_4(7), STR_3(7), 
  2029 ;;		 -> STR_2(21), STR_1(21), 
  2030 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2031 ;;		 -> sprintf@ap(2), 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  2034 ;;		 -> STR_6(17), STR_5(7), STR_4(7), STR_3(7), 
  2035 ;;		 -> STR_2(21), STR_1(21), 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    0[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;Total ram usage:        8 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 8
  2052 ;; This function calls:
  2053 ;;		_vfpfcnvrt
  2054 ;; This function is called by:
  2055 ;;		_sprintf
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text2
  2060  003CC0                     __ptext2:
  2061                           	callstack 0
  2062  003CC0                     _vfprintf:
  2063                           	callstack 21
  2064  003CC0                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2066  003CC0  C09E  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  2067  003CC4  C09F  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2068  003CC8                     
  2069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2070  003CC8  0E00               	movlw	0
  2071  003CCA  0100               	movlb	0	; () banked
  2072  003CCC  6F75               	movwf	(_nout+1)& (0+255),b
  2073  003CCE  0E00               	movlw	0
  2074  003CD0  6F74               	movwf	_nout& (0+255),b
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2077  003CD2  EF7E  F01E         	goto	l4315
  2078  003CD6                     l4313:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2082  003CD6  C09C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  2083  003CDA  C09D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2084  003CDE  0E54               	movlw	low vfprintf@cfmt
  2085  003CE0  6E46               	movwf	vfpfcnvrt@fmt^0,c
  2086  003CE2  0E00               	movlw	high vfprintf@cfmt
  2087  003CE4  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2088  003CE6  C0A0  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  2089  003CEA  C0A1  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2090  003CEE  EC7A  F018         	call	_vfpfcnvrt	;wreg free
  2091  003CF2  5044               	movf	?_vfpfcnvrt^0,w,c
  2092  003CF4  0100               	movlb	0	; () banked
  2093  003CF6  2774               	addwf	_nout& (0+255),f,b
  2094  003CF8  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  2095  003CFA  2375               	addwfc	(_nout+1)& (0+255),f,b
  2096  003CFC                     l4315:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2100  003CFC  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  2101  003D00  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2102  003D04                     	if	0	;tblptru may be non-zero
  2103  003D04                     	endif
  2104  003D04                     	if	0	;tblptru may be non-zero
  2105  003D04                     	endif
  2106  003D04  0008               	tblrd		*
  2107  003D06  50F5               	movf	tablat,w,c
  2108  003D08  0900               	iorlw	0
  2109  003D0A  A4D8               	btfss	status,2,c
  2110  003D0C  EF8A  F01E         	goto	u4811
  2111  003D10  EF8C  F01E         	goto	u4810
  2112  003D14                     u4811:
  2113  003D14  EF6B  F01E         	goto	l4313
  2114  003D18                     u4810:
  2115  003D18                     
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2118  003D18  C074  F09C         	movff	_nout,?_vfprintf
  2119  003D1C  C075  F09D         	movff	_nout+1,?_vfprintf+1
  2120  003D20                     
  2121                           ; BSR set to: 0
  2122  003D20  0012               	return		;funcret
  2123  003D22                     __end_of_vfprintf:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _vfpfcnvrt *****************
  2127 ;; Defined at:
  2128 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2131 ;;		 -> sprintf@f(6), 
  2132 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  2133 ;;		 -> vfprintf@cfmt(2), 
  2134 ;;  ap              2   71[COMRAM] PTR PTR void 
  2135 ;;		 -> sprintf@ap(2), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  ll              8   75[COMRAM] long long 
  2138 ;;  llu             8    0        unsigned long long 
  2139 ;;  f               4    0        unsigned long long 
  2140 ;;  vp              3    0        PTR void 
  2141 ;;  ct              3    0        unsigned char [3]
  2142 ;;  cp              3    0        PTR unsigned char 
  2143 ;;  i               2    0        int 
  2144 ;;  done            2    0        int 
  2145 ;;  c               1    0        unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  2   67[COMRAM] int 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2155 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;Total ram usage:       16 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 7
  2162 ;; This function calls:
  2163 ;;		_dtoa
  2164 ;;		_fputc
  2165 ;; This function is called by:
  2166 ;;		_vfprintf
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text3
  2171  0030F4                     __ptext3:
  2172                           	callstack 0
  2173  0030F4                     _vfpfcnvrt:
  2174                           	callstack 21
  2175  0030F4                     
  2176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2177  0030F4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  0030F8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  0030FC  CFDE FFF6          	movff	postinc2,tblptrl
  2180  003100  CFDD FFF7          	movff	postdec2,tblptrh
  2181  003104                     	if	0	;tblptru may be non-zero
  2182  003104                     	endif
  2183  003104                     	if	0	;tblptru may be non-zero
  2184  003104                     	endif
  2185  003104  0008               	tblrd		*
  2186  003106  50F5               	movf	tablat,w,c
  2187  003108  0A25               	xorlw	37
  2188  00310A  A4D8               	btfss	status,2,c
  2189  00310C  EF8A  F018         	goto	u4701
  2190  003110  EF8C  F018         	goto	u4700
  2191  003114                     u4701:
  2192  003114  EF38  F019         	goto	l4257
  2193  003118                     u4700:
  2194  003118                     
  2195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2196  003118  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2197  00311C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2198  003120  2ADE               	incf	postinc2,f,c
  2199  003122  0E00               	movlw	0
  2200  003124  22DD               	addwfc	postdec2,f,c
  2201  003126                     
  2202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2203  003126  0E00               	movlw	0
  2204  003128  0100               	movlb	0	; () banked
  2205  00312A  6F77               	movwf	(_width+1)& (0+255),b
  2206  00312C  0E00               	movlw	0
  2207  00312E  6F76               	movwf	_width& (0+255),b
  2208  003130  C076  F07A         	movff	_width,_flags
  2209  003134  C077  F07B         	movff	_width+1,_flags+1
  2210  003138                     
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2213  003138  6978               	setf	_prec& (0+255),b
  2214  00313A  6979               	setf	(_prec+1)& (0+255),b
  2215  00313C                     
  2216                           ; BSR set to: 0
  2217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2218  00313C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219  003140  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220  003144  CFDE FFF6          	movff	postinc2,tblptrl
  2221  003148  CFDD FFF7          	movff	postdec2,tblptrh
  2222  00314C                     	if	0	;tblptru may be non-zero
  2223  00314C                     	endif
  2224  00314C                     	if	0	;tblptru may be non-zero
  2225  00314C                     	endif
  2226  00314C  0008               	tblrd		*
  2227  00314E  50F5               	movf	tablat,w,c
  2228  003150  0A64               	xorlw	100
  2229  003152  B4D8               	btfsc	status,2,c
  2230  003154  EFAE  F018         	goto	u4711
  2231  003158  EFB0  F018         	goto	u4710
  2232  00315C                     u4711:
  2233  00315C  EFC2  F018         	goto	l4235
  2234  003160                     u4710:
  2235  003160                     
  2236                           ; BSR set to: 0
  2237  003160  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238  003164  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  003168  CFDE FFF6          	movff	postinc2,tblptrl
  2240  00316C  CFDD FFF7          	movff	postdec2,tblptrh
  2241  003170                     	if	0	;tblptru may be non-zero
  2242  003170                     	endif
  2243  003170                     	if	0	;tblptru may be non-zero
  2244  003170                     	endif
  2245  003170  0008               	tblrd		*
  2246  003172  50F5               	movf	tablat,w,c
  2247  003174  0A69               	xorlw	105
  2248  003176  A4D8               	btfss	status,2,c
  2249  003178  EFC0  F018         	goto	u4721
  2250  00317C  EFC2  F018         	goto	u4720
  2251  003180                     u4721:
  2252  003180  EF02  F019         	goto	l4241
  2253  003184                     u4720:
  2254  003184                     l4235:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2258  003184  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  003188  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  00318C  2ADE               	incf	postinc2,f,c
  2261  00318E  0E00               	movlw	0
  2262  003190  22DD               	addwfc	postdec2,f,c
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2265  003192  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2266  003196  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2267  00319A  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2268  00319E  0E02               	movlw	2
  2269  0031A0  26DE               	addwf	postinc2,f,c
  2270  0031A2  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2271  0031A6  0E00               	movlw	0
  2272  0031A8  22DD               	addwfc	postdec2,f,c
  2273  0031AA  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2274  0031AE  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2275  0031B2  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  2276  0031B6  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  2277  0031BA  0E00               	movlw	0
  2278  0031BC  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2279  0031BE  0EFF               	movlw	-1
  2280  0031C0  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  2281  0031C2  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  2282  0031C4  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  2283  0031C6  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  2284  0031C8  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  2285  0031CA  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  2286  0031CC                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2289  0031CC  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2290  0031D0  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2291  0031D4  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2292  0031D8  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2293  0031DC  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2294  0031E0  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2295  0031E4  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2296  0031E8  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2297  0031EC  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2298  0031F0  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2299  0031F4  EC09  F017         	call	_dtoa	;wreg free
  2300  0031F8  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2301  0031FC  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2302  003200  EF53  F019         	goto	l1182
  2303  003204                     l4241:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2307  003204  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2308  003208  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2309  00320C  CFDE FFF6          	movff	postinc2,tblptrl
  2310  003210  CFDD FFF7          	movff	postdec2,tblptrh
  2311  003214                     	if	0	;tblptru may be non-zero
  2312  003214                     	endif
  2313  003214                     	if	0	;tblptru may be non-zero
  2314  003214                     	endif
  2315  003214  0008               	tblrd		*
  2316  003216  50F5               	movf	tablat,w,c
  2317  003218  0A25               	xorlw	37
  2318  00321A  A4D8               	btfss	status,2,c
  2319  00321C  EF12  F019         	goto	u4731
  2320  003220  EF14  F019         	goto	u4730
  2321  003224                     u4731:
  2322  003224  EF2B  F019         	goto	l4251
  2323  003228                     u4730:
  2324  003228                     
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2327  003228  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2328  00322C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2329  003230  2ADE               	incf	postinc2,f,c
  2330  003232  0E00               	movlw	0
  2331  003234  22DD               	addwfc	postdec2,f,c
  2332  003236                     
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2335  003236  0E00               	movlw	0
  2336  003238  6E06               	movwf	(fputc@c+1)^0,c
  2337  00323A  0E25               	movlw	37
  2338  00323C  6E05               	movwf	fputc@c^0,c
  2339  00323E  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2340  003242  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2341  003246  EC5B  F01D         	call	_fputc	;wreg free
  2342  00324A                     l4247:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2345  00324A  0E00               	movlw	0
  2346  00324C  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2347  00324E  0E01               	movlw	1
  2348  003250  6E44               	movwf	?_vfpfcnvrt^0,c
  2349  003252  EF53  F019         	goto	l1182
  2350  003256                     l4251:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2354  003256  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355  00325A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356  00325E  2ADE               	incf	postinc2,f,c
  2357  003260  0E00               	movlw	0
  2358  003262  22DD               	addwfc	postdec2,f,c
  2359  003264                     
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2362  003264  0E00               	movlw	0
  2363  003266  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2364  003268  0E00               	movlw	0
  2365  00326A  6E44               	movwf	?_vfpfcnvrt^0,c
  2366  00326C  EF53  F019         	goto	l1182
  2367  003270                     l4257:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2370  003270  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  003274  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  003278  CFDE FFF6          	movff	postinc2,tblptrl
  2373  00327C  CFDD FFF7          	movff	postdec2,tblptrh
  2374  003280                     	if	0	;tblptru may be non-zero
  2375  003280                     	endif
  2376  003280                     	if	0	;tblptru may be non-zero
  2377  003280                     	endif
  2378  003280  0008               	tblrd		*
  2379  003282  50F5               	movf	tablat,w,c
  2380  003284  6E05               	movwf	fputc@c^0,c
  2381  003286  6A06               	clrf	(fputc@c+1)^0,c
  2382  003288  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2383  00328C  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2384  003290  EC5B  F01D         	call	_fputc	;wreg free
  2385  003294                     
  2386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2387  003294  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2388  003298  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2389  00329C  2ADE               	incf	postinc2,f,c
  2390  00329E  0E00               	movlw	0
  2391  0032A0  22DD               	addwfc	postdec2,f,c
  2392  0032A2  EF25  F019         	goto	l4247
  2393  0032A6                     l1182:
  2394  0032A6  0012               	return		;funcret
  2395  0032A8                     __end_of_vfpfcnvrt:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _dtoa *****************
  2399 ;; Defined at:
  2400 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2403 ;;		 -> sprintf@f(6), 
  2404 ;;  d               8   33[COMRAM] long long 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  n               8   57[COMRAM] long long 
  2407 ;;  i               2   65[COMRAM] int 
  2408 ;;  s               2   55[COMRAM] int 
  2409 ;;  w               2   53[COMRAM] int 
  2410 ;;  p               2   51[COMRAM] int 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2   31[COMRAM] int 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2420 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;Total ram usage:       36 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 6
  2427 ;; This function calls:
  2428 ;;		___aodiv
  2429 ;;		___aomod
  2430 ;;		_abs
  2431 ;;		_pad
  2432 ;; This function is called by:
  2433 ;;		_vfpfcnvrt
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text4
  2438  002E12                     __ptext4:
  2439                           	callstack 0
  2440  002E12                     _dtoa:
  2441                           	callstack 21
  2442  002E12                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2444  002E12  C022  F03A         	movff	dtoa@d,dtoa@n
  2445  002E16  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2446  002E1A  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2447  002E1E  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2448  002E22  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2449  002E26  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2450  002E2A  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2451  002E2E  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2452  002E32                     
  2453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2454  002E32  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2455  002E34  EF1E  F017         	goto	u4551
  2456  002E38  EF21  F017         	goto	u4550
  2457  002E3C                     u4551:
  2458  002E3C  0E01               	movlw	1
  2459  002E3E  EF22  F017         	goto	u4560
  2460  002E42                     u4550:
  2461  002E42  0E00               	movlw	0
  2462  002E44                     u4560:
  2463  002E44  6E38               	movwf	dtoa@s^0,c
  2464  002E46  6A39               	clrf	(dtoa@s+1)^0,c
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2467  002E48  5038               	movf	dtoa@s^0,w,c
  2468  002E4A  1039               	iorwf	(dtoa@s+1)^0,w,c
  2469  002E4C  B4D8               	btfsc	status,2,c
  2470  002E4E  EF2B  F017         	goto	u4571
  2471  002E52  EF2D  F017         	goto	u4570
  2472  002E56                     u4571:
  2473  002E56  EF3D  F017         	goto	l4167
  2474  002E5A                     u4570:
  2475  002E5A                     
  2476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2477  002E5A  1E41               	comf	(dtoa@n+7)^0,f,c
  2478  002E5C  1E40               	comf	(dtoa@n+6)^0,f,c
  2479  002E5E  1E3F               	comf	(dtoa@n+5)^0,f,c
  2480  002E60  1E3E               	comf	(dtoa@n+4)^0,f,c
  2481  002E62  1E3D               	comf	(dtoa@n+3)^0,f,c
  2482  002E64  1E3C               	comf	(dtoa@n+2)^0,f,c
  2483  002E66  1E3B               	comf	(dtoa@n+1)^0,f,c
  2484  002E68  6C3A               	negf	dtoa@n^0,c
  2485  002E6A  0E00               	movlw	0
  2486  002E6C  223B               	addwfc	(dtoa@n+1)^0,f,c
  2487  002E6E  223C               	addwfc	(dtoa@n+2)^0,f,c
  2488  002E70  223D               	addwfc	(dtoa@n+3)^0,f,c
  2489  002E72  223E               	addwfc	(dtoa@n+4)^0,f,c
  2490  002E74  223F               	addwfc	(dtoa@n+5)^0,f,c
  2491  002E76  2240               	addwfc	(dtoa@n+6)^0,f,c
  2492  002E78  2241               	addwfc	(dtoa@n+7)^0,f,c
  2493  002E7A                     l4167:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2496  002E7A  0100               	movlb	0	; () banked
  2497  002E7C  BF79               	btfsc	(_prec+1)& (0+255),7,b
  2498  002E7E  EF43  F017         	goto	u4581
  2499  002E82  EF45  F017         	goto	u4580
  2500  002E86                     u4581:
  2501  002E86  EF46  F017         	goto	l4171
  2502  002E8A                     u4580:
  2503  002E8A                     
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2506  002E8A  937A               	bcf	_flags& (0+255),1,b
  2507  002E8C                     l4171:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2511  002E8C  BF79               	btfsc	(_prec+1)& (0+255),7,b
  2512  002E8E  EF53  F017         	goto	u4590
  2513  002E92  5179               	movf	(_prec+1)& (0+255),w,b
  2514  002E94  E106               	bnz	u4591
  2515  002E96  0578               	decf	_prec& (0+255),w,b
  2516  002E98  B0D8               	btfsc	status,0,c
  2517  002E9A  EF51  F017         	goto	u4591
  2518  002E9E  EF53  F017         	goto	u4590
  2519  002EA2                     u4591:
  2520  002EA2  EF59  F017         	goto	l1155
  2521  002EA6                     u4590:
  2522  002EA6                     
  2523                           ; BSR set to: 0
  2524  002EA6  0E00               	movlw	0
  2525  002EA8  6E35               	movwf	(dtoa@p+1)^0,c
  2526  002EAA  0E01               	movlw	1
  2527  002EAC  6E34               	movwf	dtoa@p^0,c
  2528  002EAE  EF5D  F017         	goto	l1157
  2529  002EB2                     l1155:
  2530                           
  2531                           ; BSR set to: 0
  2532  002EB2  C078  F034         	movff	_prec,dtoa@p
  2533  002EB6  C079  F035         	movff	_prec+1,dtoa@p+1
  2534  002EBA                     l1157:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2538  002EBA  C076  F036         	movff	_width,dtoa@w
  2539  002EBE  C077  F037         	movff	_width+1,dtoa@w+1
  2540  002EC2                     
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2543  002EC2  5038               	movf	dtoa@s^0,w,c
  2544  002EC4  1039               	iorwf	(dtoa@s+1)^0,w,c
  2545  002EC6  A4D8               	btfss	status,2,c
  2546  002EC8  EF68  F017         	goto	u4601
  2547  002ECC  EF6A  F017         	goto	u4600
  2548  002ED0                     u4601:
  2549  002ED0  EF71  F017         	goto	l4179
  2550  002ED4                     u4600:
  2551  002ED4                     
  2552                           ; BSR set to: 0
  2553  002ED4  A57A               	btfss	_flags& (0+255),2,b
  2554  002ED6  EF6F  F017         	goto	u4611
  2555  002EDA  EF71  F017         	goto	u4610
  2556  002EDE                     u4611:
  2557  002EDE  EF74  F017         	goto	l4181
  2558  002EE2                     u4610:
  2559  002EE2                     l4179:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2563  002EE2  0636               	decf	dtoa@w^0,f,c
  2564  002EE4  A0D8               	btfss	status,0,c
  2565  002EE6  0637               	decf	(dtoa@w+1)^0,f,c
  2566  002EE8                     l4181:
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2570  002EE8  0E00               	movlw	0
  2571  002EEA  6E43               	movwf	(dtoa@i+1)^0,c
  2572  002EEC  0E1F               	movlw	31
  2573  002EEE  6E42               	movwf	dtoa@i^0,c
  2574  002EF0                     
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2577  002EF0  0E00               	movlw	0
  2578  002EF2  6F9B               	movwf	(_dbuf+31)& (0+255),b
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2581  002EF4  EFF8  F017         	goto	l4195
  2582  002EF8                     l4185:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2585  002EF8  0642               	decf	dtoa@i^0,f,c
  2586  002EFA  A0D8               	btfss	status,0,c
  2587  002EFC  0643               	decf	(dtoa@i+1)^0,f,c
  2588  002EFE                     
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2590  002EFE  0E7C               	movlw	low _dbuf
  2591  002F00  2442               	addwf	dtoa@i^0,w,c
  2592  002F02  6ED9               	movwf	fsr2l,c
  2593  002F04  0E00               	movlw	high _dbuf
  2594  002F06  2043               	addwfc	(dtoa@i+1)^0,w,c
  2595  002F08  6EDA               	movwf	fsr2h,c
  2596  002F0A  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2597  002F0E  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2598  002F12  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2599  002F16  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2600  002F1A  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2601  002F1E  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2602  002F22  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2603  002F26  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2604  002F2A  0E0A               	movlw	10
  2605  002F2C  6E0D               	movwf	___aomod@divisor^0,c
  2606  002F2E  0E00               	movlw	0
  2607  002F30  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2608  002F32  0E00               	movlw	0
  2609  002F34  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2610  002F36  0E00               	movlw	0
  2611  002F38  6E10               	movwf	(___aomod@divisor+3)^0,c
  2612  002F3A  0E00               	movlw	0
  2613  002F3C  6E11               	movwf	(___aomod@divisor+4)^0,c
  2614  002F3E  0E00               	movlw	0
  2615  002F40  6E12               	movwf	(___aomod@divisor+5)^0,c
  2616  002F42  0E00               	movlw	0
  2617  002F44  6E13               	movwf	(___aomod@divisor+6)^0,c
  2618  002F46  0E00               	movlw	0
  2619  002F48  6E14               	movwf	(___aomod@divisor+7)^0,c
  2620  002F4A  ECF2  F01A         	call	___aomod	;wreg free
  2621  002F4E  C005  F02A         	movff	?___aomod,??_dtoa
  2622  002F52  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2623  002F56  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2624  002F5A  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2625  002F5E  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2626  002F62  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2627  002F66  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2628  002F6A  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2629  002F6E  C02A  F017         	movff	??_dtoa,abs@a
  2630  002F72  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2631  002F76  EC37  F020         	call	_abs	;wreg free
  2632  002F7A  5017               	movf	?_abs^0,w,c
  2633  002F7C  0F30               	addlw	48
  2634  002F7E  6EDF               	movwf	indf2,c
  2635  002F80                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2637  002F80  0634               	decf	dtoa@p^0,f,c
  2638  002F82  A0D8               	btfss	status,0,c
  2639  002F84  0635               	decf	(dtoa@p+1)^0,f,c
  2640  002F86                     
  2641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2642  002F86  0636               	decf	dtoa@w^0,f,c
  2643  002F88  A0D8               	btfss	status,0,c
  2644  002F8A  0637               	decf	(dtoa@w+1)^0,f,c
  2645  002F8C                     
  2646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2647  002F8C  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2648  002F90  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2649  002F94  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2650  002F98  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2651  002F9C  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2652  002FA0  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2653  002FA4  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2654  002FA8  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2655  002FAC  0E0A               	movlw	10
  2656  002FAE  6E0D               	movwf	___aodiv@divisor^0,c
  2657  002FB0  0E00               	movlw	0
  2658  002FB2  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2659  002FB4  0E00               	movlw	0
  2660  002FB6  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2661  002FB8  0E00               	movlw	0
  2662  002FBA  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2663  002FBC  0E00               	movlw	0
  2664  002FBE  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2665  002FC0  0E00               	movlw	0
  2666  002FC2  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2667  002FC4  0E00               	movlw	0
  2668  002FC6  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2669  002FC8  0E00               	movlw	0
  2670  002FCA  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2671  002FCC  EC2E  F01A         	call	___aodiv	;wreg free
  2672  002FD0  C005  F03A         	movff	?___aodiv,dtoa@n
  2673  002FD4  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2674  002FD8  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2675  002FDC  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2676  002FE0  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2677  002FE4  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2678  002FE8  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2679  002FEC  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2680  002FF0                     l4195:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2683  002FF0  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2684  002FF2  EF03  F018         	goto	u4621
  2685  002FF6  5043               	movf	(dtoa@i+1)^0,w,c
  2686  002FF8  E108               	bnz	u4620
  2687  002FFA  0442               	decf	dtoa@i^0,w,c
  2688  002FFC  A0D8               	btfss	status,0,c
  2689  002FFE  EF03  F018         	goto	u4621
  2690  003002  EF05  F018         	goto	u4620
  2691  003006                     u4621:
  2692  003006  EF36  F018         	goto	l4205
  2693  00300A                     u4620:
  2694  00300A  503A               	movf	dtoa@n^0,w,c
  2695  00300C  103B               	iorwf	(dtoa@n+1)^0,w,c
  2696  00300E  103C               	iorwf	(dtoa@n+2)^0,w,c
  2697  003010  103D               	iorwf	(dtoa@n+3)^0,w,c
  2698  003012  103E               	iorwf	(dtoa@n+4)^0,w,c
  2699  003014  103F               	iorwf	(dtoa@n+5)^0,w,c
  2700  003016  1040               	iorwf	(dtoa@n+6)^0,w,c
  2701  003018  1041               	iorwf	(dtoa@n+7)^0,w,c
  2702  00301A  A4D8               	btfss	status,2,c
  2703  00301C  EF12  F018         	goto	u4631
  2704  003020  EF14  F018         	goto	u4630
  2705  003024                     u4631:
  2706  003024  EF7C  F017         	goto	l4185
  2707  003028                     u4630:
  2708  003028  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2709  00302A  EF21  F018         	goto	u4640
  2710  00302E  5035               	movf	(dtoa@p+1)^0,w,c
  2711  003030  E106               	bnz	u4641
  2712  003032  0434               	decf	dtoa@p^0,w,c
  2713  003034  B0D8               	btfsc	status,0,c
  2714  003036  EF1F  F018         	goto	u4641
  2715  00303A  EF21  F018         	goto	u4640
  2716  00303E                     u4641:
  2717  00303E  EF7C  F017         	goto	l4185
  2718  003042                     u4640:
  2719  003042  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2720  003044  EF2C  F018         	goto	u4651
  2721  003048  5037               	movf	(dtoa@w+1)^0,w,c
  2722  00304A  E108               	bnz	u4650
  2723  00304C  0436               	decf	dtoa@w^0,w,c
  2724  00304E  A0D8               	btfss	status,0,c
  2725  003050  EF2C  F018         	goto	u4651
  2726  003054  EF2E  F018         	goto	u4650
  2727  003058                     u4651:
  2728  003058  EF36  F018         	goto	l4205
  2729  00305C                     u4650:
  2730  00305C  0100               	movlb	0	; () banked
  2731  00305E  B37A               	btfsc	_flags& (0+255),1,b
  2732  003060  EF34  F018         	goto	u4661
  2733  003064  EF36  F018         	goto	u4660
  2734  003068                     u4661:
  2735  003068  EF7C  F017         	goto	l4185
  2736  00306C                     u4660:
  2737  00306C                     l4205:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2740  00306C  5038               	movf	dtoa@s^0,w,c
  2741  00306E  1039               	iorwf	(dtoa@s+1)^0,w,c
  2742  003070  A4D8               	btfss	status,2,c
  2743  003072  EF3D  F018         	goto	u4671
  2744  003076  EF3F  F018         	goto	u4670
  2745  00307A                     u4671:
  2746  00307A  EF47  F018         	goto	l4209
  2747  00307E                     u4670:
  2748  00307E  0100               	movlb	0	; () banked
  2749  003080  A57A               	btfss	_flags& (0+255),2,b
  2750  003082  EF45  F018         	goto	u4681
  2751  003086  EF47  F018         	goto	u4680
  2752  00308A                     u4681:
  2753  00308A  EF65  F018         	goto	l4219
  2754  00308E                     u4680:
  2755  00308E                     l4209:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2758  00308E  0642               	decf	dtoa@i^0,f,c
  2759  003090  A0D8               	btfss	status,0,c
  2760  003092  0643               	decf	(dtoa@i+1)^0,f,c
  2761  003094                     
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2763  003094  5038               	movf	dtoa@s^0,w,c
  2764  003096  1039               	iorwf	(dtoa@s+1)^0,w,c
  2765  003098  A4D8               	btfss	status,2,c
  2766  00309A  EF51  F018         	goto	u4691
  2767  00309E  EF53  F018         	goto	u4690
  2768  0030A2                     u4691:
  2769  0030A2  EF59  F018         	goto	l4215
  2770  0030A6                     u4690:
  2771  0030A6  0E00               	movlw	0
  2772  0030A8  6E33               	movwf	(_dtoa$2201+1)^0,c
  2773  0030AA  0E2B               	movlw	43
  2774  0030AC  6E32               	movwf	_dtoa$2201^0,c
  2775  0030AE  EF5D  F018         	goto	l4217
  2776  0030B2                     l4215:
  2777  0030B2  0E00               	movlw	0
  2778  0030B4  6E33               	movwf	(_dtoa$2201+1)^0,c
  2779  0030B6  0E2D               	movlw	45
  2780  0030B8  6E32               	movwf	_dtoa$2201^0,c
  2781  0030BA                     l4217:
  2782  0030BA  0E7C               	movlw	low _dbuf
  2783  0030BC  2442               	addwf	dtoa@i^0,w,c
  2784  0030BE  6ED9               	movwf	fsr2l,c
  2785  0030C0  0E00               	movlw	high _dbuf
  2786  0030C2  2043               	addwfc	(dtoa@i+1)^0,w,c
  2787  0030C4  6EDA               	movwf	fsr2h,c
  2788  0030C6  C032  FFDF         	movff	_dtoa$2201,indf2
  2789  0030CA                     l4219:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2792  0030CA  C020  F015         	movff	dtoa@fp,pad@fp
  2793  0030CE  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2794  0030D2  0E7C               	movlw	low _dbuf
  2795  0030D4  2442               	addwf	dtoa@i^0,w,c
  2796  0030D6  6E17               	movwf	pad@buf^0,c
  2797  0030D8  0E00               	movlw	high _dbuf
  2798  0030DA  2043               	addwfc	(dtoa@i+1)^0,w,c
  2799  0030DC  6E18               	movwf	(pad@buf+1)^0,c
  2800  0030DE  C036  F019         	movff	dtoa@w,pad@p
  2801  0030E2  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2802  0030E6  ECC0  F01D         	call	_pad	;wreg free
  2803  0030EA  C015  F020         	movff	?_pad,?_dtoa
  2804  0030EE  C016  F021         	movff	?_pad+1,?_dtoa+1
  2805  0030F2  0012               	return		;funcret
  2806  0030F4                     __end_of_dtoa:
  2807                           	callstack 0
  2808                           
  2809 ;; *************** function _pad *****************
  2810 ;; Defined at:
  2811 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2814 ;;		 -> sprintf@f(6), 
  2815 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2816 ;;		 -> dbuf(32), 
  2817 ;;  p               2   24[COMRAM] int 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  w               2   29[COMRAM] int 
  2820 ;;  i               2   27[COMRAM] int 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2   20[COMRAM] int 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2830 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;Total ram usage:       11 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 5
  2837 ;; This function calls:
  2838 ;;		_fputc
  2839 ;;		_fputs
  2840 ;;		_strlen
  2841 ;; This function is called by:
  2842 ;;		_dtoa
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text5
  2847  003B80                     __ptext5:
  2848                           	callstack 0
  2849  003B80                     _pad:
  2850                           	callstack 21
  2851  003B80                     
  2852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2853  003B80  0100               	movlb	0	; () banked
  2854  003B82  A17A               	btfss	_flags& (0+255),0,b
  2855  003B84  EFC6  F01D         	goto	u4501
  2856  003B88  EFC8  F01D         	goto	u4500
  2857  003B8C                     u4501:
  2858  003B8C  EFD2  F01D         	goto	l4139
  2859  003B90                     u4500:
  2860  003B90                     
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2863  003B90  C017  F00E         	movff	pad@buf,fputs@s
  2864  003B94  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2865  003B98  C015  F010         	movff	pad@fp,fputs@fp
  2866  003B9C  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2867  003BA0  ECD3  F01F         	call	_fputs	;wreg free
  2868  003BA4                     l4139:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2871  003BA4  BE1A               	btfsc	(pad@p+1)^0,7,c
  2872  003BA6  EFD7  F01D         	goto	u4511
  2873  003BAA  EFD9  F01D         	goto	u4510
  2874  003BAE                     u4511:
  2875  003BAE  EFDF  F01D         	goto	l4143
  2876  003BB2                     u4510:
  2877  003BB2  C019  F01E         	movff	pad@p,pad@w
  2878  003BB6  C01A  F01F         	movff	pad@p+1,pad@w+1
  2879  003BBA  EFE3  F01D         	goto	l1144
  2880  003BBE                     l4143:
  2881  003BBE  0E00               	movlw	0
  2882  003BC0  6E1F               	movwf	(pad@w+1)^0,c
  2883  003BC2  0E00               	movlw	0
  2884  003BC4  6E1E               	movwf	pad@w^0,c
  2885  003BC6                     l1144:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2888  003BC6  0E00               	movlw	0
  2889  003BC8  6E1D               	movwf	(pad@i+1)^0,c
  2890  003BCA  0E00               	movlw	0
  2891  003BCC  6E1C               	movwf	pad@i^0,c
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2894  003BCE  EFF5  F01D         	goto	l4149
  2895  003BD2                     l4145:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2898  003BD2  0E00               	movlw	0
  2899  003BD4  6E06               	movwf	(fputc@c+1)^0,c
  2900  003BD6  0E20               	movlw	32
  2901  003BD8  6E05               	movwf	fputc@c^0,c
  2902  003BDA  C015  F007         	movff	pad@fp,fputc@fp
  2903  003BDE  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2904  003BE2  EC5B  F01D         	call	_fputc	;wreg free
  2905  003BE6                     
  2906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2907  003BE6  4A1C               	infsnz	pad@i^0,f,c
  2908  003BE8  2A1D               	incf	(pad@i+1)^0,f,c
  2909  003BEA                     l4149:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2912  003BEA  501E               	movf	pad@w^0,w,c
  2913  003BEC  5C1C               	subwf	pad@i^0,w,c
  2914  003BEE  501D               	movf	(pad@i+1)^0,w,c
  2915  003BF0  0A80               	xorlw	128
  2916  003BF2  6E1B               	movwf	??_pad^0,c
  2917  003BF4  501F               	movf	(pad@w+1)^0,w,c
  2918  003BF6  0A80               	xorlw	128
  2919  003BF8  581B               	subwfb	??_pad^0,w,c
  2920  003BFA  A0D8               	btfss	status,0,c
  2921  003BFC  EF02  F01E         	goto	u4521
  2922  003C00  EF04  F01E         	goto	u4520
  2923  003C04                     u4521:
  2924  003C04  EFE9  F01D         	goto	l4145
  2925  003C08                     u4520:
  2926  003C08                     
  2927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2928  003C08  0100               	movlb	0	; () banked
  2929  003C0A  B17A               	btfsc	_flags& (0+255),0,b
  2930  003C0C  EF0A  F01E         	goto	u4531
  2931  003C10  EF0C  F01E         	goto	u4530
  2932  003C14                     u4531:
  2933  003C14  EF16  F01E         	goto	l4153
  2934  003C18                     u4530:
  2935  003C18                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2938  003C18  C017  F00E         	movff	pad@buf,fputs@s
  2939  003C1C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2940  003C20  C015  F010         	movff	pad@fp,fputs@fp
  2941  003C24  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2942  003C28  ECD3  F01F         	call	_fputs	;wreg free
  2943  003C2C                     l4153:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2946  003C2C  C017  F005         	movff	pad@buf,strlen@s
  2947  003C30  C018  F006         	movff	pad@buf+1,strlen@s+1
  2948  003C34  EC57  F020         	call	_strlen	;wreg free
  2949  003C38  501E               	movf	pad@w^0,w,c
  2950  003C3A  2405               	addwf	?_strlen^0,w,c
  2951  003C3C  6E15               	movwf	?_pad^0,c
  2952  003C3E  501F               	movf	(pad@w+1)^0,w,c
  2953  003C40  2006               	addwfc	(?_strlen+1)^0,w,c
  2954  003C42  6E16               	movwf	(?_pad+1)^0,c
  2955  003C44  0012               	return		;funcret
  2956  003C46                     __end_of_pad:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _strlen *****************
  2960 ;; Defined at:
  2961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2964 ;;		 -> dbuf(32), 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2967 ;;		 -> dbuf(32), 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2    4[COMRAM] unsigned int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;Total ram usage:        4 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 2
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_pad
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text6
  2992  0040AE                     __ptext6:
  2993                           	callstack 0
  2994  0040AE                     _strlen:
  2995                           	callstack 23
  2996  0040AE  C005  F007         	movff	strlen@s,strlen@a
  2997  0040B2  C006  F008         	movff	strlen@s+1,strlen@a+1
  2998  0040B6  EF5F  F020         	goto	l4049
  2999  0040BA                     l4047:
  3000  0040BA  4A05               	infsnz	strlen@s^0,f,c
  3001  0040BC  2A06               	incf	(strlen@s+1)^0,f,c
  3002  0040BE                     l4049:
  3003  0040BE  C005  FFD9         	movff	strlen@s,fsr2l
  3004  0040C2  C006  FFDA         	movff	strlen@s+1,fsr2h
  3005  0040C6  50DF               	movf	indf2,w,c
  3006  0040C8  A4D8               	btfss	status,2,c
  3007  0040CA  EF69  F020         	goto	u4361
  3008  0040CE  EF6B  F020         	goto	u4360
  3009  0040D2                     u4361:
  3010  0040D2  EF5D  F020         	goto	l4047
  3011  0040D6                     u4360:
  3012  0040D6  5007               	movf	strlen@a^0,w,c
  3013  0040D8  5C05               	subwf	strlen@s^0,w,c
  3014  0040DA  6E05               	movwf	?_strlen^0,c
  3015  0040DC  5008               	movf	(strlen@a+1)^0,w,c
  3016  0040DE  5806               	subwfb	(strlen@s+1)^0,w,c
  3017  0040E0  6E06               	movwf	(?_strlen+1)^0,c
  3018  0040E2  0012               	return		;funcret
  3019  0040E4                     __end_of_strlen:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _fputs *****************
  3023 ;; Defined at:
  3024 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3027 ;;		 -> dbuf(32), 
  3028 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3029 ;;		 -> sprintf@f(6), 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  i               2   18[COMRAM] int 
  3032 ;;  c               1   17[COMRAM] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  2   13[COMRAM] int 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;Total ram usage:        7 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 4
  3049 ;; This function calls:
  3050 ;;		_fputc
  3051 ;; This function is called by:
  3052 ;;		_pad
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text7
  3057  003FA6                     __ptext7:
  3058                           	callstack 0
  3059  003FA6                     _fputs:
  3060                           	callstack 21
  3061  003FA6  0E00               	movlw	0
  3062  003FA8  6E14               	movwf	(fputs@i+1)^0,c
  3063  003FAA  0E00               	movlw	0
  3064  003FAC  6E13               	movwf	fputs@i^0,c
  3065  003FAE  EFE4  F01F         	goto	l4043
  3066  003FB2                     l4039:
  3067  003FB2  C012  F005         	movff	fputs@c,fputc@c
  3068  003FB6  6A06               	clrf	(fputc@c+1)^0,c
  3069  003FB8  C010  F007         	movff	fputs@fp,fputc@fp
  3070  003FBC  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3071  003FC0  EC5B  F01D         	call	_fputc	;wreg free
  3072  003FC4  4A13               	infsnz	fputs@i^0,f,c
  3073  003FC6  2A14               	incf	(fputs@i+1)^0,f,c
  3074  003FC8                     l4043:
  3075  003FC8  5013               	movf	fputs@i^0,w,c
  3076  003FCA  240E               	addwf	fputs@s^0,w,c
  3077  003FCC  6ED9               	movwf	fsr2l,c
  3078  003FCE  5014               	movf	(fputs@i+1)^0,w,c
  3079  003FD0  200F               	addwfc	(fputs@s+1)^0,w,c
  3080  003FD2  6EDA               	movwf	fsr2h,c
  3081  003FD4  50DF               	movf	indf2,w,c
  3082  003FD6  6E12               	movwf	fputs@c^0,c
  3083  003FD8  5012               	movf	fputs@c^0,w,c
  3084  003FDA  A4D8               	btfss	status,2,c
  3085  003FDC  EFF2  F01F         	goto	u4351
  3086  003FE0  EFF4  F01F         	goto	u4350
  3087  003FE4                     u4351:
  3088  003FE4  EFD9  F01F         	goto	l4039
  3089  003FE8                     u4350:
  3090  003FE8  0012               	return		;funcret
  3091  003FEA                     __end_of_fputs:
  3092                           	callstack 0
  3093                           
  3094 ;; *************** function _fputc *****************
  3095 ;; Defined at:
  3096 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  c               2    4[COMRAM] int 
  3099 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3100 ;;		 -> sprintf@f(6), 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2    4[COMRAM] int 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;Total ram usage:        9 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 3
  3119 ;; This function calls:
  3120 ;;		_putch
  3121 ;; This function is called by:
  3122 ;;		_pad
  3123 ;;		_vfpfcnvrt
  3124 ;;		_fputs
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text8
  3129  003AB6                     __ptext8:
  3130                           	callstack 0
  3131  003AB6                     _fputc:
  3132                           	callstack 24
  3133  003AB6  5007               	movf	fputc@fp^0,w,c
  3134  003AB8  1008               	iorwf	(fputc@fp+1)^0,w,c
  3135  003ABA  B4D8               	btfsc	status,2,c
  3136  003ABC  EF62  F01D         	goto	u4311
  3137  003AC0  EF64  F01D         	goto	u4310
  3138  003AC4                     u4311:
  3139  003AC4  EF6D  F01D         	goto	l4027
  3140  003AC8                     u4310:
  3141  003AC8  5007               	movf	fputc@fp^0,w,c
  3142  003ACA  1008               	iorwf	(fputc@fp+1)^0,w,c
  3143  003ACC  A4D8               	btfss	status,2,c
  3144  003ACE  EF6B  F01D         	goto	u4321
  3145  003AD2  EF6D  F01D         	goto	u4320
  3146  003AD6                     u4321:
  3147  003AD6  EF72  F01D         	goto	l4029
  3148  003ADA                     u4320:
  3149  003ADA                     l4027:
  3150  003ADA  5005               	movf	fputc@c^0,w,c
  3151  003ADC  EC86  F021         	call	_putch
  3152  003AE0  EFBF  F01D         	goto	l1208
  3153  003AE4                     l4029:
  3154  003AE4  EE20 F004          	lfsr	2,4
  3155  003AE8  5007               	movf	fputc@fp^0,w,c
  3156  003AEA  26D9               	addwf	fsr2l,f,c
  3157  003AEC  5008               	movf	(fputc@fp+1)^0,w,c
  3158  003AEE  22DA               	addwfc	fsr2h,f,c
  3159  003AF0  50DE               	movf	postinc2,w,c
  3160  003AF2  10DE               	iorwf	postinc2,w,c
  3161  003AF4  B4D8               	btfsc	status,2,c
  3162  003AF6  EF7F  F01D         	goto	u4331
  3163  003AFA  EF81  F01D         	goto	u4330
  3164  003AFE                     u4331:
  3165  003AFE  EF9C  F01D         	goto	l4033
  3166  003B02                     u4330:
  3167  003B02  EE20 F004          	lfsr	2,4
  3168  003B06  5007               	movf	fputc@fp^0,w,c
  3169  003B08  26D9               	addwf	fsr2l,f,c
  3170  003B0A  5008               	movf	(fputc@fp+1)^0,w,c
  3171  003B0C  22DA               	addwfc	fsr2h,f,c
  3172  003B0E  EE10 F002          	lfsr	1,2
  3173  003B12  5007               	movf	fputc@fp^0,w,c
  3174  003B14  26E1               	addwf	fsr1l,f,c
  3175  003B16  5008               	movf	(fputc@fp+1)^0,w,c
  3176  003B18  22E2               	addwfc	fsr1h,f,c
  3177  003B1A  50DE               	movf	postinc2,w,c
  3178  003B1C  5CE6               	subwf	postinc1,w,c
  3179  003B1E  50E6               	movf	postinc1,w,c
  3180  003B20  0A80               	xorlw	128
  3181  003B22  6E0D               	movwf	(??_fputc+4)^0,c
  3182  003B24  50DE               	movf	postinc2,w,c
  3183  003B26  0A80               	xorlw	128
  3184  003B28  580D               	subwfb	(??_fputc+4)^0,w,c
  3185  003B2A  B0D8               	btfsc	status,0,c
  3186  003B2C  EF9A  F01D         	goto	u4341
  3187  003B30  EF9C  F01D         	goto	u4340
  3188  003B34                     u4341:
  3189  003B34  EFBF  F01D         	goto	l1208
  3190  003B38                     u4340:
  3191  003B38                     l4033:
  3192  003B38  EE20 F002          	lfsr	2,2
  3193  003B3C  5007               	movf	fputc@fp^0,w,c
  3194  003B3E  26D9               	addwf	fsr2l,f,c
  3195  003B40  5008               	movf	(fputc@fp+1)^0,w,c
  3196  003B42  22DA               	addwfc	fsr2h,f,c
  3197  003B44  CFDE F009          	movff	postinc2,??_fputc
  3198  003B48  CFDD F00A          	movff	postdec2,??_fputc+1
  3199  003B4C  C007  FFD9         	movff	fputc@fp,fsr2l
  3200  003B50  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3201  003B54  CFDE F00B          	movff	postinc2,??_fputc+2
  3202  003B58  CFDD F00C          	movff	postdec2,??_fputc+3
  3203  003B5C  5009               	movf	??_fputc^0,w,c
  3204  003B5E  240B               	addwf	(??_fputc+2)^0,w,c
  3205  003B60  6ED9               	movwf	fsr2l,c
  3206  003B62  500A               	movf	(??_fputc+1)^0,w,c
  3207  003B64  200C               	addwfc	(??_fputc+3)^0,w,c
  3208  003B66  6EDA               	movwf	fsr2h,c
  3209  003B68  C005  FFDF         	movff	fputc@c,indf2
  3210  003B6C  EE20 F002          	lfsr	2,2
  3211  003B70  5007               	movf	fputc@fp^0,w,c
  3212  003B72  26D9               	addwf	fsr2l,f,c
  3213  003B74  5008               	movf	(fputc@fp+1)^0,w,c
  3214  003B76  22DA               	addwfc	fsr2h,f,c
  3215  003B78  2ADE               	incf	postinc2,f,c
  3216  003B7A  0E00               	movlw	0
  3217  003B7C  22DD               	addwfc	postdec2,f,c
  3218  003B7E                     l1208:
  3219  003B7E  0012               	return		;funcret
  3220  003B80                     __end_of_fputc:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _putch *****************
  3224 ;; Defined at:
  3225 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  c               1    wreg     unsigned char 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  c               1    0[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 2
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_fputc
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text9
  3254  00430C                     __ptext9:
  3255                           	callstack 0
  3256  00430C                     _putch:
  3257                           	callstack 24
  3258  00430C  0012               	return		;funcret
  3259  00430E                     __end_of_putch:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _abs *****************
  3263 ;; Defined at:
  3264 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  a               2   22[COMRAM] int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  2   22[COMRAM] int 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;Total ram usage:        4 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 2
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_dtoa
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text10
  3293  00406E                     __ptext10:
  3294                           	callstack 0
  3295  00406E                     _abs:
  3296                           	callstack 24
  3297  00406E  BE18               	btfsc	(abs@a+1)^0,7,c
  3298  004070  EF44  F020         	goto	u4540
  3299  004074  5018               	movf	(abs@a+1)^0,w,c
  3300  004076  E106               	bnz	u4541
  3301  004078  0417               	decf	abs@a^0,w,c
  3302  00407A  B0D8               	btfsc	status,0,c
  3303  00407C  EF42  F020         	goto	u4541
  3304  004080  EF44  F020         	goto	u4540
  3305  004084                     u4541:
  3306  004084  EF52  F020         	goto	l1193
  3307  004088                     u4540:
  3308  004088  C017  F019         	movff	abs@a,??_abs
  3309  00408C  C018  F01A         	movff	abs@a+1,??_abs+1
  3310  004090  1E19               	comf	??_abs^0,f,c
  3311  004092  1E1A               	comf	(??_abs+1)^0,f,c
  3312  004094  4A19               	infsnz	??_abs^0,f,c
  3313  004096  2A1A               	incf	(??_abs+1)^0,f,c
  3314  004098  C019  F017         	movff	??_abs,?_abs
  3315  00409C  C01A  F018         	movff	??_abs+1,?_abs+1
  3316  0040A0  EF56  F020         	goto	l1196
  3317  0040A4                     l1193:
  3318  0040A4  C017  F017         	movff	abs@a,?_abs
  3319  0040A8  C018  F018         	movff	abs@a+1,?_abs+1
  3320  0040AC                     l1196:
  3321  0040AC  0012               	return		;funcret
  3322  0040AE                     __end_of_abs:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function ___aomod *****************
  3326 ;; Defined at:
  3327 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  dividend        8    4[COMRAM] long long 
  3330 ;;  divisor         8   12[COMRAM] long long 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  sign            1   21[COMRAM] unsigned char 
  3333 ;;  counter         1   20[COMRAM] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  8    4[COMRAM] long long 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3343 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;Total ram usage:       18 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 2
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_dtoa
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text11
  3358  0035E4                     __ptext11:
  3359                           	callstack 0
  3360  0035E4                     ___aomod:
  3361                           	callstack 24
  3362  0035E4  0E00               	movlw	0
  3363  0035E6  6E16               	movwf	___aomod@sign^0,c
  3364  0035E8  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3365  0035EA  EFFB  F01A         	goto	u4440
  3366  0035EE  EFF9  F01A         	goto	u4441
  3367  0035F2                     u4441:
  3368  0035F2  EF0D  F01B         	goto	l4107
  3369  0035F6                     u4440:
  3370  0035F6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3371  0035F8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3372  0035FA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3373  0035FC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3374  0035FE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3375  003600  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3376  003602  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3377  003604  6C05               	negf	___aomod@dividend^0,c
  3378  003606  0E00               	movlw	0
  3379  003608  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3380  00360A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3381  00360C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3382  00360E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3383  003610  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3384  003612  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3385  003614  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3386  003616  0E01               	movlw	1
  3387  003618  6E16               	movwf	___aomod@sign^0,c
  3388  00361A                     l4107:
  3389  00361A  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3390  00361C  EF14  F01B         	goto	u4450
  3391  003620  EF12  F01B         	goto	u4451
  3392  003624                     u4451:
  3393  003624  EF24  F01B         	goto	l4111
  3394  003628                     u4450:
  3395  003628  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3396  00362A  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3397  00362C  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3398  00362E  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3399  003630  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3400  003632  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3401  003634  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3402  003636  6C0D               	negf	___aomod@divisor^0,c
  3403  003638  0E00               	movlw	0
  3404  00363A  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3405  00363C  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3406  00363E  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3407  003640  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3408  003642  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3409  003644  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3410  003646  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3411  003648                     l4111:
  3412  003648  500D               	movf	___aomod@divisor^0,w,c
  3413  00364A  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3414  00364C  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3415  00364E  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3416  003650  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3417  003652  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3418  003654  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3419  003656  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3420  003658  B4D8               	btfsc	status,2,c
  3421  00365A  EF31  F01B         	goto	u4461
  3422  00365E  EF33  F01B         	goto	u4460
  3423  003662                     u4461:
  3424  003662  EF7B  F01B         	goto	l4127
  3425  003666                     u4460:
  3426  003666  0E01               	movlw	1
  3427  003668  6E15               	movwf	___aomod@counter^0,c
  3428  00366A  EF41  F01B         	goto	l4117
  3429  00366E                     l4115:
  3430  00366E  90D8               	bcf	status,0,c
  3431  003670  360D               	rlcf	___aomod@divisor^0,f,c
  3432  003672  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3433  003674  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3434  003676  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3435  003678  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3436  00367A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3437  00367C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3438  00367E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3439  003680  2A15               	incf	___aomod@counter^0,f,c
  3440  003682                     l4117:
  3441  003682  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3442  003684  EF46  F01B         	goto	u4471
  3443  003688  EF48  F01B         	goto	u4470
  3444  00368C                     u4471:
  3445  00368C  EF37  F01B         	goto	l4115
  3446  003690                     u4470:
  3447  003690                     l4119:
  3448  003690  500D               	movf	___aomod@divisor^0,w,c
  3449  003692  5C05               	subwf	___aomod@dividend^0,w,c
  3450  003694  500E               	movf	(___aomod@divisor+1)^0,w,c
  3451  003696  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3452  003698  500F               	movf	(___aomod@divisor+2)^0,w,c
  3453  00369A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3454  00369C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3455  00369E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3456  0036A0  5011               	movf	(___aomod@divisor+4)^0,w,c
  3457  0036A2  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3458  0036A4  5012               	movf	(___aomod@divisor+5)^0,w,c
  3459  0036A6  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3460  0036A8  5013               	movf	(___aomod@divisor+6)^0,w,c
  3461  0036AA  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3462  0036AC  5014               	movf	(___aomod@divisor+7)^0,w,c
  3463  0036AE  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3464  0036B0  A0D8               	btfss	status,0,c
  3465  0036B2  EF5D  F01B         	goto	u4481
  3466  0036B6  EF5F  F01B         	goto	u4480
  3467  0036BA                     u4481:
  3468  0036BA  EF6F  F01B         	goto	l4123
  3469  0036BE                     u4480:
  3470  0036BE  500D               	movf	___aomod@divisor^0,w,c
  3471  0036C0  5E05               	subwf	___aomod@dividend^0,f,c
  3472  0036C2  500E               	movf	(___aomod@divisor+1)^0,w,c
  3473  0036C4  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3474  0036C6  500F               	movf	(___aomod@divisor+2)^0,w,c
  3475  0036C8  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3476  0036CA  5010               	movf	(___aomod@divisor+3)^0,w,c
  3477  0036CC  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3478  0036CE  5011               	movf	(___aomod@divisor+4)^0,w,c
  3479  0036D0  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3480  0036D2  5012               	movf	(___aomod@divisor+5)^0,w,c
  3481  0036D4  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3482  0036D6  5013               	movf	(___aomod@divisor+6)^0,w,c
  3483  0036D8  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3484  0036DA  5014               	movf	(___aomod@divisor+7)^0,w,c
  3485  0036DC  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3486  0036DE                     l4123:
  3487  0036DE  90D8               	bcf	status,0,c
  3488  0036E0  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3489  0036E2  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3490  0036E4  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3491  0036E6  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3492  0036E8  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3493  0036EA  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3494  0036EC  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3495  0036EE  320D               	rrcf	___aomod@divisor^0,f,c
  3496  0036F0  2E15               	decfsz	___aomod@counter^0,f,c
  3497  0036F2  EF48  F01B         	goto	l4119
  3498  0036F6                     l4127:
  3499  0036F6  5016               	movf	___aomod@sign^0,w,c
  3500  0036F8  B4D8               	btfsc	status,2,c
  3501  0036FA  EF81  F01B         	goto	u4491
  3502  0036FE  EF83  F01B         	goto	u4490
  3503  003702                     u4491:
  3504  003702  EF93  F01B         	goto	l4131
  3505  003706                     u4490:
  3506  003706  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3507  003708  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3508  00370A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3509  00370C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3510  00370E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3511  003710  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3512  003712  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3513  003714  6C05               	negf	___aomod@dividend^0,c
  3514  003716  0E00               	movlw	0
  3515  003718  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3516  00371A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3517  00371C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3518  00371E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3519  003720  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3520  003722  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3521  003724  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3522  003726                     l4131:
  3523  003726  C005  F005         	movff	___aomod@dividend,?___aomod
  3524  00372A  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3525  00372E  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3526  003732  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3527  003736  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3528  00373A  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3529  00373E  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3530  003742  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3531  003746  0012               	return		;funcret
  3532  003748                     __end_of___aomod:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function ___aodiv *****************
  3536 ;; Defined at:
  3537 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  dividend        8    4[COMRAM] long long 
  3540 ;;  divisor         8   12[COMRAM] long long 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  quotient        8   22[COMRAM] long long 
  3543 ;;  sign            1   21[COMRAM] unsigned char 
  3544 ;;  counter         1   20[COMRAM] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  8    4[COMRAM] long long 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3554 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;Total ram usage:       26 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 2
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_dtoa
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text12
  3569  00345C                     __ptext12:
  3570                           	callstack 0
  3571  00345C                     ___aodiv:
  3572                           	callstack 24
  3573  00345C  0E00               	movlw	0
  3574  00345E  6E16               	movwf	___aodiv@sign^0,c
  3575  003460  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3576  003462  EF37  F01A         	goto	u4370
  3577  003466  EF35  F01A         	goto	u4371
  3578  00346A                     u4371:
  3579  00346A  EF49  F01A         	goto	l4063
  3580  00346E                     u4370:
  3581  00346E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3582  003470  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3583  003472  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3584  003474  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3585  003476  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3586  003478  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3587  00347A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3588  00347C  6C0D               	negf	___aodiv@divisor^0,c
  3589  00347E  0E00               	movlw	0
  3590  003480  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3591  003482  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3592  003484  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3593  003486  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3594  003488  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3595  00348A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3596  00348C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3597  00348E  0E01               	movlw	1
  3598  003490  6E16               	movwf	___aodiv@sign^0,c
  3599  003492                     l4063:
  3600  003492  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3601  003494  EF50  F01A         	goto	u4380
  3602  003498  EF4E  F01A         	goto	u4381
  3603  00349C                     u4381:
  3604  00349C  EF62  F01A         	goto	l4069
  3605  0034A0                     u4380:
  3606  0034A0  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3607  0034A2  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3608  0034A4  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3609  0034A6  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3610  0034A8  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3611  0034AA  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3612  0034AC  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3613  0034AE  6C05               	negf	___aodiv@dividend^0,c
  3614  0034B0  0E00               	movlw	0
  3615  0034B2  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3616  0034B4  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3617  0034B6  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3618  0034B8  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3619  0034BA  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3620  0034BC  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3621  0034BE  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3622  0034C0  0E01               	movlw	1
  3623  0034C2  1A16               	xorwf	___aodiv@sign^0,f,c
  3624  0034C4                     l4069:
  3625  0034C4  EE20  F017         	lfsr	2,___aodiv@quotient
  3626  0034C8  0E07               	movlw	7
  3627  0034CA                     u4391:
  3628  0034CA  6ADE               	clrf	postinc2,c
  3629  0034CC  06E8               	decf	wreg,f,c
  3630  0034CE  E2FD               	bc	u4391
  3631  0034D0  500D               	movf	___aodiv@divisor^0,w,c
  3632  0034D2  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3633  0034D4  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3634  0034D6  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3635  0034D8  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3636  0034DA  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3637  0034DC  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3638  0034DE  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3639  0034E0  B4D8               	btfsc	status,2,c
  3640  0034E2  EF75  F01A         	goto	u4401
  3641  0034E6  EF77  F01A         	goto	u4400
  3642  0034EA                     u4401:
  3643  0034EA  EFC9  F01A         	goto	l4091
  3644  0034EE                     u4400:
  3645  0034EE  0E01               	movlw	1
  3646  0034F0  6E15               	movwf	___aodiv@counter^0,c
  3647  0034F2  EF85  F01A         	goto	l4077
  3648  0034F6                     l4075:
  3649  0034F6  90D8               	bcf	status,0,c
  3650  0034F8  360D               	rlcf	___aodiv@divisor^0,f,c
  3651  0034FA  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3652  0034FC  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3653  0034FE  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3654  003500  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3655  003502  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3656  003504  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3657  003506  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3658  003508  2A15               	incf	___aodiv@counter^0,f,c
  3659  00350A                     l4077:
  3660  00350A  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3661  00350C  EF8A  F01A         	goto	u4411
  3662  003510  EF8C  F01A         	goto	u4410
  3663  003514                     u4411:
  3664  003514  EF7B  F01A         	goto	l4075
  3665  003518                     u4410:
  3666  003518                     l4079:
  3667  003518  90D8               	bcf	status,0,c
  3668  00351A  3617               	rlcf	___aodiv@quotient^0,f,c
  3669  00351C  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3670  00351E  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3671  003520  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3672  003522  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3673  003524  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3674  003526  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3675  003528  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3676  00352A  500D               	movf	___aodiv@divisor^0,w,c
  3677  00352C  5C05               	subwf	___aodiv@dividend^0,w,c
  3678  00352E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3679  003530  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3680  003532  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3681  003534  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3682  003536  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3683  003538  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3684  00353A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3685  00353C  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3686  00353E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3687  003540  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3688  003542  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3689  003544  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3690  003546  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3691  003548  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3692  00354A  A0D8               	btfss	status,0,c
  3693  00354C  EFAA  F01A         	goto	u4421
  3694  003550  EFAC  F01A         	goto	u4420
  3695  003554                     u4421:
  3696  003554  EFBD  F01A         	goto	l4087
  3697  003558                     u4420:
  3698  003558  500D               	movf	___aodiv@divisor^0,w,c
  3699  00355A  5E05               	subwf	___aodiv@dividend^0,f,c
  3700  00355C  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3701  00355E  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3702  003560  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3703  003562  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3704  003564  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3705  003566  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3706  003568  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3707  00356A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3708  00356C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3709  00356E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3710  003570  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3711  003572  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3712  003574  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3713  003576  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3714  003578  8017               	bsf	___aodiv@quotient^0,0,c
  3715  00357A                     l4087:
  3716  00357A  90D8               	bcf	status,0,c
  3717  00357C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3718  00357E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3719  003580  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3720  003582  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3721  003584  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3722  003586  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3723  003588  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3724  00358A  320D               	rrcf	___aodiv@divisor^0,f,c
  3725  00358C  2E15               	decfsz	___aodiv@counter^0,f,c
  3726  00358E  EF8C  F01A         	goto	l4079
  3727  003592                     l4091:
  3728  003592  5016               	movf	___aodiv@sign^0,w,c
  3729  003594  B4D8               	btfsc	status,2,c
  3730  003596  EFCF  F01A         	goto	u4431
  3731  00359A  EFD1  F01A         	goto	u4430
  3732  00359E                     u4431:
  3733  00359E  EFE1  F01A         	goto	l4095
  3734  0035A2                     u4430:
  3735  0035A2  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3736  0035A4  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3737  0035A6  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3738  0035A8  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3739  0035AA  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3740  0035AC  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3741  0035AE  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3742  0035B0  6C17               	negf	___aodiv@quotient^0,c
  3743  0035B2  0E00               	movlw	0
  3744  0035B4  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3745  0035B6  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3746  0035B8  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3747  0035BA  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3748  0035BC  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3749  0035BE  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3750  0035C0  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3751  0035C2                     l4095:
  3752  0035C2  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3753  0035C6  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3754  0035CA  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3755  0035CE  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3756  0035D2  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3757  0035D6  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3758  0035DA  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3759  0035DE  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3760  0035E2  0012               	return		;funcret
  3761  0035E4                     __end_of___aodiv:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _sendTxBuf *****************
  3765 ;; Defined at:
  3766 ;;		line 106 in file "serial.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 3
  3787 ;; This function calls:
  3788 ;;		_isDataInTxBuf
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text13
  3795  00428C                     __ptext13:
  3796                           	callstack 0
  3797  00428C                     _sendTxBuf:
  3798                           	callstack 27
  3799  00428C                     
  3800                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3801  00428C  EC53  F021         	call	_isDataInTxBuf	;wreg free
  3802  004290  0900               	iorlw	0
  3803  004292  B4D8               	btfsc	status,2,c
  3804  004294  EF4E  F021         	goto	u4111
  3805  004298  EF50  F021         	goto	u4110
  3806  00429C                     u4111:
  3807  00429C  EF52  F021         	goto	l396
  3808  0042A0                     u4110:
  3809  0042A0  010E               	movlb	14	; () banked
  3810  0042A2  852D               	bsf	45,2,b	;volatile
  3811  0042A4                     l396:
  3812  0042A4  0012               	return		;funcret
  3813  0042A6                     __end_of_sendTxBuf:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function _isDataInTxBuf *****************
  3817 ;; Defined at:
  3818 ;;		line 93 in file "serial.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      unsigned char 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;Total ram usage:        0 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; Hardware stack levels required when called: 2
  3839 ;; This function calls:
  3840 ;;		Nothing
  3841 ;; This function is called by:
  3842 ;;		_sendTxBuf
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text14
  3847  0042A6                     __ptext14:
  3848                           	callstack 0
  3849  0042A6                     _isDataInTxBuf:
  3850                           	callstack 27
  3851  0042A6                     
  3852                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  3853  0042A6  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  3854  0042A8  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3855  0042AA  A4D8               	btfss	status,2,c
  3856  0042AC  EF5A  F021         	goto	u2781
  3857  0042B0  EF5D  F021         	goto	u2780
  3858  0042B4                     u2781:
  3859  0042B4  0E01               	movlw	1
  3860  0042B6  EF5E  F021         	goto	u2790
  3861  0042BA                     u2780:
  3862  0042BA  0E00               	movlw	0
  3863  0042BC                     u2790:
  3864  0042BC  0012               	return		;funcret
  3865  0042BE                     __end_of_isDataInTxBuf:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _read_colours *****************
  3869 ;; Defined at:
  3870 ;;		line 87 in file "color.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  m               2   15[COMRAM] PTR struct RGB_val
  3873 ;;		 -> main@test(20), 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;Total ram usage:        2 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 5
  3892 ;; This function calls:
  3893 ;;		_color_read_Blue
  3894 ;;		_color_read_Clear
  3895 ;;		_color_read_Green
  3896 ;;		_color_read_Red
  3897 ;; This function is called by:
  3898 ;;		_main
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text15
  3903  003D22                     __ptext15:
  3904                           	callstack 0
  3905  003D22                     _read_colours:
  3906                           	callstack 25
  3907  003D22                     
  3908                           ;color.c: 88:     (m->C) = color_read_Clear();
  3909  003D22  ECEB  F01E         	call	_color_read_Clear	;wreg free
  3910  003D26  EE20 F00C          	lfsr	2,12
  3911  003D2A  5010               	movf	read_colours@m^0,w,c
  3912  003D2C  26D9               	addwf	fsr2l,f,c
  3913  003D2E  5011               	movf	(read_colours@m+1)^0,w,c
  3914  003D30  22DA               	addwfc	fsr2h,f,c
  3915  003D32  C009  FFDE         	movff	?_color_read_Clear,postinc2
  3916  003D36  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  3917                           
  3918                           ;color.c: 89:     (m->R) = color_read_Red();
  3919  003D3A  EC13  F01F         	call	_color_read_Red	;wreg free
  3920  003D3E  EE20 F00E          	lfsr	2,14
  3921  003D42  5010               	movf	read_colours@m^0,w,c
  3922  003D44  26D9               	addwf	fsr2l,f,c
  3923  003D46  5011               	movf	(read_colours@m+1)^0,w,c
  3924  003D48  22DA               	addwfc	fsr2h,f,c
  3925  003D4A  C009  FFDE         	movff	?_color_read_Red,postinc2
  3926  003D4E  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  3927                           
  3928                           ;color.c: 90:     (m->G) = color_read_Green();
  3929  003D52  EC3B  F01F         	call	_color_read_Green	;wreg free
  3930  003D56  EE20 F010          	lfsr	2,16
  3931  003D5A  5010               	movf	read_colours@m^0,w,c
  3932  003D5C  26D9               	addwf	fsr2l,f,c
  3933  003D5E  5011               	movf	(read_colours@m+1)^0,w,c
  3934  003D60  22DA               	addwfc	fsr2h,f,c
  3935  003D62  C009  FFDE         	movff	?_color_read_Green,postinc2
  3936  003D66  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  3937                           
  3938                           ;color.c: 91:     (m->B) = color_read_Blue();
  3939  003D6A  EC63  F01F         	call	_color_read_Blue	;wreg free
  3940  003D6E  EE20 F012          	lfsr	2,18
  3941  003D72  5010               	movf	read_colours@m^0,w,c
  3942  003D74  26D9               	addwf	fsr2l,f,c
  3943  003D76  5011               	movf	(read_colours@m+1)^0,w,c
  3944  003D78  22DA               	addwfc	fsr2h,f,c
  3945  003D7A  C009  FFDE         	movff	?_color_read_Blue,postinc2
  3946  003D7E  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  3947  003D82  0012               	return		;funcret
  3948  003D84                     __end_of_read_colours:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function _color_read_Clear *****************
  3952 ;; Defined at:
  3953 ;;		line 33 in file "color.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;		None
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  tmp             2   13[COMRAM] unsigned int 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  2    8[COMRAM] unsigned int 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;Total ram usage:        7 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; Hardware stack levels required when called: 4
  3974 ;; This function calls:
  3975 ;;		_I2C_2_Master_Read
  3976 ;;		_I2C_2_Master_RepStart
  3977 ;;		_I2C_2_Master_Start
  3978 ;;		_I2C_2_Master_Stop
  3979 ;;		_I2C_2_Master_Write
  3980 ;; This function is called by:
  3981 ;;		_read_colours
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text16
  3986  003DD6                     __ptext16:
  3987                           	callstack 0
  3988  003DD6                     _color_read_Clear:
  3989                           	callstack 25
  3990  003DD6                     
  3991                           ;color.c: 35:  unsigned int tmp;;color.c: 36:     I2C_2_Master_Start();
  3992  003DD6  EC7C  F021         	call	_I2C_2_Master_Start	;wreg free
  3993                           
  3994                           ;color.c: 37:     I2C_2_Master_Write(0x52 | 0x00);
  3995  003DDA  0E52               	movlw	82
  3996  003DDC  EC6B  F021         	call	_I2C_2_Master_Write
  3997                           
  3998                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x14);
  3999  003DE0  0EB4               	movlw	180
  4000  003DE2  EC6B  F021         	call	_I2C_2_Master_Write
  4001                           
  4002                           ;color.c: 39:  I2C_2_Master_RepStart();
  4003  003DE6  EC81  F021         	call	_I2C_2_Master_RepStart	;wreg free
  4004                           
  4005                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  4006  003DEA  0E53               	movlw	83
  4007  003DEC  EC6B  F021         	call	_I2C_2_Master_Write
  4008                           
  4009                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  4010  003DF0  0E01               	movlw	1
  4011  003DF2  EC16  F020         	call	_I2C_2_Master_Read
  4012  003DF6  6E0B               	movwf	??_color_read_Clear^0,c
  4013  003DF8  500B               	movf	??_color_read_Clear^0,w,c
  4014  003DFA  6E0E               	movwf	color_read_Clear@tmp^0,c
  4015  003DFC  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  4016                           
  4017                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4018  003DFE  0E00               	movlw	0
  4019  003E00  EC16  F020         	call	_I2C_2_Master_Read
  4020  003E04  6E0B               	movwf	??_color_read_Clear^0,c
  4021  003E06  500B               	movf	??_color_read_Clear^0,w,c
  4022  003E08  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  4023  003E0A  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  4024  003E0C  500E               	movf	color_read_Clear@tmp^0,w,c
  4025  003E0E  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  4026  003E10  6E0E               	movwf	color_read_Clear@tmp^0,c
  4027  003E12  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  4028  003E14  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  4029  003E16  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  4030                           
  4031                           ;color.c: 43:     I2C_2_Master_Stop();
  4032  003E18  EC77  F021         	call	_I2C_2_Master_Stop	;wreg free
  4033  003E1C                     
  4034                           ;color.c: 44:     return tmp;
  4035  003E1C  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  4036  003E20  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4037  003E24  0012               	return		;funcret
  4038  003E26                     __end_of_color_read_Clear:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _lumin *****************
  4042 ;; Defined at:
  4043 ;;		line 170 in file "color.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  m               2    8[BANK0 ] PTR struct RGB_val
  4046 ;;		 -> main@test(20), 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  out             2   18[BANK0 ] unsigned int 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  2    8[BANK0 ] unsigned int 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;Total ram usage:       12 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; Hardware stack levels required when called: 3
  4065 ;; This function calls:
  4066 ;;		___fladd
  4067 ;;		___flmul
  4068 ;;		___fltol
  4069 ;;		___xxtofl
  4070 ;; This function is called by:
  4071 ;;		_main
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text17
  4076  003748                     __ptext17:
  4077                           	callstack 0
  4078  003748                     _lumin:
  4079                           	callstack 27
  4080  003748                     
  4081                           ;color.c: 171:         unsigned int out;;color.c: 172:         out = (0.2126*(m->R)) + (
      +                          0.7152*(m->G)) + (0.0722*(m->B));
  4082  003748  0E59               	movlw	89
  4083  00374A  6E30               	movwf	___flmul@a^0,c
  4084  00374C  0E17               	movlw	23
  4085  00374E  6E31               	movwf	(___flmul@a+1)^0,c
  4086  003750  0E37               	movlw	55
  4087  003752  6E32               	movwf	(___flmul@a+2)^0,c
  4088  003754  0E3F               	movlw	63
  4089  003756  6E33               	movwf	(___flmul@a+3)^0,c
  4090  003758  0100               	movlb	0	; () banked
  4091  00375A  EE20 F010          	lfsr	2,16
  4092  00375E  51A4               	movf	lumin@m& (0+255),w,b
  4093  003760  26D9               	addwf	fsr2l,f,c
  4094  003762  51A5               	movf	(lumin@m+1)& (0+255),w,b
  4095  003764  22DA               	addwfc	fsr2h,f,c
  4096  003766  CFDE F0A6          	movff	postinc2,??_lumin
  4097  00376A  CFDD F0A7          	movff	postdec2,??_lumin+1
  4098  00376E  C0A6  F005         	movff	??_lumin,___xxtofl@val
  4099  003772  C0A7  F006         	movff	??_lumin+1,___xxtofl@val+1
  4100  003776  6A07               	clrf	(___xxtofl@val+2)^0,c
  4101  003778  6A08               	clrf	(___xxtofl@val+3)^0,c
  4102  00377A  0E00               	movlw	0
  4103  00377C  EC54  F019         	call	___xxtofl
  4104  003780  C005  F02C         	movff	?___xxtofl,___flmul@b
  4105  003784  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  4106  003788  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  4107  00378C  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  4108  003790  EC27  F013         	call	___flmul	;wreg free
  4109  003794  C02C  F049         	movff	?___flmul,___fladd@a
  4110  003798  C02D  F04A         	movff	?___flmul+1,___fladd@a+1
  4111  00379C  C02E  F04B         	movff	?___flmul+2,___fladd@a+2
  4112  0037A0  C02F  F04C         	movff	?___flmul+3,___fladd@a+3
  4113  0037A4  0ED0               	movlw	208
  4114  0037A6  6E30               	movwf	___flmul@a^0,c
  4115  0037A8  0EB3               	movlw	179
  4116  0037AA  6E31               	movwf	(___flmul@a+1)^0,c
  4117  0037AC  0E59               	movlw	89
  4118  0037AE  6E32               	movwf	(___flmul@a+2)^0,c
  4119  0037B0  0E3E               	movlw	62
  4120  0037B2  6E33               	movwf	(___flmul@a+3)^0,c
  4121  0037B4  0100               	movlb	0	; () banked
  4122  0037B6  EE20 F00E          	lfsr	2,14
  4123  0037BA  51A4               	movf	lumin@m& (0+255),w,b
  4124  0037BC  26D9               	addwf	fsr2l,f,c
  4125  0037BE  51A5               	movf	(lumin@m+1)& (0+255),w,b
  4126  0037C0  22DA               	addwfc	fsr2h,f,c
  4127  0037C2  CFDE F0A8          	movff	postinc2,??_lumin+2
  4128  0037C6  CFDD F0A9          	movff	postdec2,??_lumin+3
  4129  0037CA  C0A8  F005         	movff	??_lumin+2,___xxtofl@val
  4130  0037CE  C0A9  F006         	movff	??_lumin+3,___xxtofl@val+1
  4131  0037D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  4132  0037D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  4133  0037D6  0E00               	movlw	0
  4134  0037D8  EC54  F019         	call	___xxtofl
  4135  0037DC  C005  F02C         	movff	?___xxtofl,___flmul@b
  4136  0037E0  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  4137  0037E4  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  4138  0037E8  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  4139  0037EC  EC27  F013         	call	___flmul	;wreg free
  4140  0037F0  C02C  F045         	movff	?___flmul,___fladd@b
  4141  0037F4  C02D  F046         	movff	?___flmul+1,___fladd@b+1
  4142  0037F8  C02E  F047         	movff	?___flmul+2,___fladd@b+2
  4143  0037FC  C02F  F048         	movff	?___flmul+3,___fladd@b+3
  4144  003800  ECC7  F010         	call	___fladd	;wreg free
  4145  003804  C045  F0AA         	movff	?___fladd,_lumin$2504
  4146  003808  C046  F0AB         	movff	?___fladd+1,_lumin$2504+1
  4147  00380C  C047  F0AC         	movff	?___fladd+2,_lumin$2504+2
  4148  003810  C048  F0AD         	movff	?___fladd+3,_lumin$2504+3
  4149                           
  4150                           ;color.c: 171:         unsigned int out;;color.c: 172:         out = (0.2126*(m->R)) + (
      +                          0.7152*(m->G)) + (0.0722*(m->B));
  4151  003814  0E98               	movlw	152
  4152  003816  6E30               	movwf	___flmul@a^0,c
  4153  003818  0EDD               	movlw	221
  4154  00381A  6E31               	movwf	(___flmul@a+1)^0,c
  4155  00381C  0E93               	movlw	147
  4156  00381E  6E32               	movwf	(___flmul@a+2)^0,c
  4157  003820  0E3D               	movlw	61
  4158  003822  6E33               	movwf	(___flmul@a+3)^0,c
  4159  003824  0100               	movlb	0	; () banked
  4160  003826  EE20 F012          	lfsr	2,18
  4161  00382A  51A4               	movf	lumin@m& (0+255),w,b
  4162  00382C  26D9               	addwf	fsr2l,f,c
  4163  00382E  51A5               	movf	(lumin@m+1)& (0+255),w,b
  4164  003830  22DA               	addwfc	fsr2h,f,c
  4165  003832  CFDE F0A6          	movff	postinc2,??_lumin
  4166  003836  CFDD F0A7          	movff	postdec2,??_lumin+1
  4167  00383A  C0A6  F005         	movff	??_lumin,___xxtofl@val
  4168  00383E  C0A7  F006         	movff	??_lumin+1,___xxtofl@val+1
  4169  003842  6A07               	clrf	(___xxtofl@val+2)^0,c
  4170  003844  6A08               	clrf	(___xxtofl@val+3)^0,c
  4171  003846  0E00               	movlw	0
  4172  003848  EC54  F019         	call	___xxtofl
  4173  00384C  C005  F02C         	movff	?___xxtofl,___flmul@b
  4174  003850  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  4175  003854  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  4176  003858  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  4177  00385C  EC27  F013         	call	___flmul	;wreg free
  4178  003860  C02C  F049         	movff	?___flmul,___fladd@a
  4179  003864  C02D  F04A         	movff	?___flmul+1,___fladd@a+1
  4180  003868  C02E  F04B         	movff	?___flmul+2,___fladd@a+2
  4181  00386C  C02F  F04C         	movff	?___flmul+3,___fladd@a+3
  4182  003870  C0AA  F045         	movff	_lumin$2504,___fladd@b
  4183  003874  C0AB  F046         	movff	_lumin$2504+1,___fladd@b+1
  4184  003878  C0AC  F047         	movff	_lumin$2504+2,___fladd@b+2
  4185  00387C  C0AD  F048         	movff	_lumin$2504+3,___fladd@b+3
  4186  003880  ECC7  F010         	call	___fladd	;wreg free
  4187  003884  C045  F09C         	movff	?___fladd,___fltol@f1
  4188  003888  C046  F09D         	movff	?___fladd+1,___fltol@f1+1
  4189  00388C  C047  F09E         	movff	?___fladd+2,___fltol@f1+2
  4190  003890  C048  F09F         	movff	?___fladd+3,___fltol@f1+3
  4191  003894  EC55  F01C         	call	___fltol	;wreg free
  4192  003898  C09C  F0AE         	movff	?___fltol,lumin@out
  4193  00389C  C09D  F0AF         	movff	?___fltol+1,lumin@out+1
  4194  0038A0                     
  4195                           ;color.c: 173:         return out;
  4196  0038A0  C0AE  F0A4         	movff	lumin@out,?_lumin
  4197  0038A4  C0AF  F0A5         	movff	lumin@out+1,?_lumin+1
  4198  0038A8  0012               	return		;funcret
  4199  0038AA                     __end_of_lumin:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _initUSART4 *****************
  4203 ;; Defined at:
  4204 ;;		line 4 in file "serial.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 2
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text18
  4233  00424C                     __ptext18:
  4234                           	callstack 0
  4235  00424C                     _initUSART4:
  4236                           	callstack 28
  4237  00424C                     
  4238                           ;serial.c: 8:     RC0PPS = 0x12;
  4239  00424C  0E12               	movlw	18
  4240  00424E  010E               	movlb	14	; () banked
  4241  004250  6F62               	movwf	98,b	;volatile
  4242                           
  4243                           ;serial.c: 9:     RX4PPS = 0x11;
  4244  004252  0E11               	movlw	17
  4245  004254  6F15               	movwf	21,b	;volatile
  4246  004256                     
  4247                           ; BSR set to: 14
  4248                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  4249  004256  8283               	bsf	131,1,c	;volatile
  4250  004258                     
  4251                           ; BSR set to: 14
  4252                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4253  004258  97E9               	bcf	233,3,b	;volatile
  4254  00425A                     
  4255                           ; BSR set to: 14
  4256                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4257  00425A  95E8               	bcf	232,2,b	;volatile
  4258                           
  4259                           ;serial.c: 14:     SP4BRGL = 51;
  4260  00425C  0E33               	movlw	51
  4261  00425E  6FE5               	movwf	229,b	;volatile
  4262                           
  4263                           ;serial.c: 15:     SP4BRGH = 0;
  4264  004260  0E00               	movlw	0
  4265  004262  6FE6               	movwf	230,b	;volatile
  4266  004264                     
  4267                           ; BSR set to: 14
  4268                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4269  004264  89E7               	bsf	231,4,b	;volatile
  4270  004266                     
  4271                           ; BSR set to: 14
  4272                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4273  004266  8BE8               	bsf	232,5,b	;volatile
  4274  004268                     
  4275                           ; BSR set to: 14
  4276                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4277  004268  8FE7               	bsf	231,7,b	;volatile
  4278  00426A                     
  4279                           ; BSR set to: 14
  4280  00426A  0012               	return		;funcret
  4281  00426C                     __end_of_initUSART4:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _initDCmotorsPWM *****************
  4285 ;; Defined at:
  4286 ;;		line 5 in file "dc_motor.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  PWMperiod       2    4[COMRAM] int 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;Total ram usage:        2 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 2
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text19
  4315  003FEA                     __ptext19:
  4316                           	callstack 0
  4317  003FEA                     _initDCmotorsPWM:
  4318                           	callstack 28
  4319  003FEA                     
  4320                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4321  003FEA  9485               	bcf	133,2,c	;volatile
  4322                           
  4323                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4324  003FEC  9E83               	bcf	131,7,c	;volatile
  4325                           
  4326                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  4327  003FEE  9C87               	bcf	135,6,c	;volatile
  4328                           
  4329                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  4330  003FF0  9885               	bcf	133,4,c	;volatile
  4331                           
  4332                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  4333  003FF2  947D               	bcf	125,2,c	;volatile
  4334                           
  4335                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  4336  003FF4  9E7B               	bcf	123,7,c	;volatile
  4337                           
  4338                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  4339  003FF6  9C7F               	bcf	127,6,c	;volatile
  4340                           
  4341                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4342  003FF8  987D               	bcf	125,4,c	;volatile
  4343  003FFA                     
  4344                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  4345  003FFA  50BD               	movf	189,w,c	;volatile
  4346  003FFC  0B8F               	andlw	-113
  4347  003FFE  0940               	iorlw	64
  4348  004000  6EBD               	movwf	189,c	;volatile
  4349                           
  4350                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4351  004002  0EE0               	movlw	-32
  4352  004004  16BE               	andwf	190,f,c	;volatile
  4353                           
  4354                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4355  004006  50BF               	movf	191,w,c	;volatile
  4356  004008  0BF0               	andlw	-16
  4357  00400A  0901               	iorlw	1
  4358  00400C  6EBF               	movwf	191,c	;volatile
  4359                           
  4360                           ;dc_motor.c: 22:     T2PR=99;
  4361  00400E  0E63               	movlw	99
  4362  004010  6EBC               	movwf	188,c	;volatile
  4363  004012                     
  4364                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  4365  004012  8EBD               	bsf	189,7,c	;volatile
  4366                           
  4367                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  4368  004014  0E0A               	movlw	10
  4369  004016  010E               	movlb	14	; () banked
  4370  004018  6F74               	movwf	116,b	;volatile
  4371                           
  4372                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  4373  00401A  0E0B               	movlw	11
  4374  00401C  6F69               	movwf	105,b	;volatile
  4375                           
  4376                           ;dc_motor.c: 28:     PWM6DCH=0;
  4377  00401E  0E00               	movlw	0
  4378  004020  6EA3               	movwf	163,c	;volatile
  4379                           
  4380                           ;dc_motor.c: 29:     PWM7DCH=0;
  4381  004022  0E00               	movlw	0
  4382  004024  6EA0               	movwf	160,c	;volatile
  4383  004026                     
  4384                           ; BSR set to: 14
  4385                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  4386  004026  8EA4               	bsf	164,7,c	;volatile
  4387  004028                     
  4388                           ; BSR set to: 14
  4389                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  4390  004028  8EA1               	bsf	161,7,c	;volatile
  4391  00402A                     
  4392                           ; BSR set to: 14
  4393  00402A  0012               	return		;funcret
  4394  00402C                     __end_of_initDCmotorsPWM:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _determine_color_new *****************
  4398 ;; Defined at:
  4399 ;;		line 111 in file "color.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  m               2    8[BANK0 ] PTR struct RGB_val
  4402 ;;		 -> main@test(20), 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  RelB            4   40[BANK0 ] float 
  4405 ;;  RelG            4   36[BANK0 ] float 
  4406 ;;  RelR            4   32[BANK0 ] float 
  4407 ;;  out             2   30[BANK0 ] unsigned int 
  4408 ;;  BlueRatio       2   28[BANK0 ] unsigned int 
  4409 ;;  GreenRatio      2   26[BANK0 ] unsigned int 
  4410 ;;  RedRatio        2   24[BANK0 ] unsigned int 
  4411 ;;  lumin           2   22[BANK0 ] unsigned int 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  2    8[BANK0 ] unsigned int 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;Total ram usage:       36 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 4
  4428 ;; This function calls:
  4429 ;;		___fladd
  4430 ;;		___fldiv
  4431 ;;		___flmul
  4432 ;;		___fltol
  4433 ;;		___xxtofl
  4434 ;;		_isbtw
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text20
  4441  000E52                     __ptext20:
  4442                           	callstack 0
  4443  000E52                     _determine_color_new:
  4444                           	callstack 26
  4445  000E52                     
  4446                           ;color.c: 112:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 113:     float
      +                           RelR, RelG, RelB;;color.c: 114:     unsigned int out = 9;
  4447  000E52  0E00               	movlw	0
  4448  000E54  0100               	movlb	0	; () banked
  4449  000E56  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  4450  000E58  0E09               	movlw	9
  4451  000E5A  6FBA               	movwf	determine_color_new@out& (0+255),b
  4452  000E5C                     
  4453                           ; BSR set to: 0
  4454                           ;color.c: 116:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  4455  000E5C  0E59               	movlw	89
  4456  000E5E  6E30               	movwf	___flmul@a^0,c
  4457  000E60  0E17               	movlw	23
  4458  000E62  6E31               	movwf	(___flmul@a+1)^0,c
  4459  000E64  0E37               	movlw	55
  4460  000E66  6E32               	movwf	(___flmul@a+2)^0,c
  4461  000E68  0E3F               	movlw	63
  4462  000E6A  6E33               	movwf	(___flmul@a+3)^0,c
  4463  000E6C  EE20 F010          	lfsr	2,16
  4464  000E70  51A4               	movf	determine_color_new@m& (0+255),w,b
  4465  000E72  26D9               	addwf	fsr2l,f,c
  4466  000E74  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4467  000E76  22DA               	addwfc	fsr2h,f,c
  4468  000E78  CFDE F0A6          	movff	postinc2,??_determine_color_new
  4469  000E7C  CFDD F0A7          	movff	postdec2,??_determine_color_new+1
  4470  000E80  C0A6  F005         	movff	??_determine_color_new,___xxtofl@val
  4471  000E84  C0A7  F006         	movff	??_determine_color_new+1,___xxtofl@val+1
  4472  000E88  6A07               	clrf	(___xxtofl@val+2)^0,c
  4473  000E8A  6A08               	clrf	(___xxtofl@val+3)^0,c
  4474  000E8C  0E00               	movlw	0
  4475  000E8E  EC54  F019         	call	___xxtofl
  4476  000E92  C005  F02C         	movff	?___xxtofl,___flmul@b
  4477  000E96  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  4478  000E9A  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  4479  000E9E  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  4480  000EA2  EC27  F013         	call	___flmul	;wreg free
  4481  000EA6  C02C  F049         	movff	?___flmul,___fladd@a
  4482  000EAA  C02D  F04A         	movff	?___flmul+1,___fladd@a+1
  4483  000EAE  C02E  F04B         	movff	?___flmul+2,___fladd@a+2
  4484  000EB2  C02F  F04C         	movff	?___flmul+3,___fladd@a+3
  4485  000EB6  0ED0               	movlw	208
  4486  000EB8  6E30               	movwf	___flmul@a^0,c
  4487  000EBA  0EB3               	movlw	179
  4488  000EBC  6E31               	movwf	(___flmul@a+1)^0,c
  4489  000EBE  0E59               	movlw	89
  4490  000EC0  6E32               	movwf	(___flmul@a+2)^0,c
  4491  000EC2  0E3E               	movlw	62
  4492  000EC4  6E33               	movwf	(___flmul@a+3)^0,c
  4493  000EC6  0100               	movlb	0	; () banked
  4494  000EC8  EE20 F00E          	lfsr	2,14
  4495  000ECC  51A4               	movf	determine_color_new@m& (0+255),w,b
  4496  000ECE  26D9               	addwf	fsr2l,f,c
  4497  000ED0  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4498  000ED2  22DA               	addwfc	fsr2h,f,c
  4499  000ED4  CFDE F0A8          	movff	postinc2,??_determine_color_new+2
  4500  000ED8  CFDD F0A9          	movff	postdec2,??_determine_color_new+3
  4501  000EDC  C0A8  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4502  000EE0  C0A9  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4503  000EE4  6A07               	clrf	(___xxtofl@val+2)^0,c
  4504  000EE6  6A08               	clrf	(___xxtofl@val+3)^0,c
  4505  000EE8  0E00               	movlw	0
  4506  000EEA  EC54  F019         	call	___xxtofl
  4507  000EEE  C005  F02C         	movff	?___xxtofl,___flmul@b
  4508  000EF2  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  4509  000EF6  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  4510  000EFA  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  4511  000EFE  EC27  F013         	call	___flmul	;wreg free
  4512  000F02  C02C  F045         	movff	?___flmul,___fladd@b
  4513  000F06  C02D  F046         	movff	?___flmul+1,___fladd@b+1
  4514  000F0A  C02E  F047         	movff	?___flmul+2,___fladd@b+2
  4515  000F0E  C02F  F048         	movff	?___flmul+3,___fladd@b+3
  4516  000F12  ECC7  F010         	call	___fladd	;wreg free
  4517  000F16  C045  F0AE         	movff	?___fladd,_determine_color_new$2503
  4518  000F1A  C046  F0AF         	movff	?___fladd+1,_determine_color_new$2503+1
  4519  000F1E  C047  F0B0         	movff	?___fladd+2,_determine_color_new$2503+2
  4520  000F22  C048  F0B1         	movff	?___fladd+3,_determine_color_new$2503+3
  4521  000F26                     
  4522                           ;color.c: 116:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  4523  000F26  0E98               	movlw	152
  4524  000F28  6E30               	movwf	___flmul@a^0,c
  4525  000F2A  0EDD               	movlw	221
  4526  000F2C  6E31               	movwf	(___flmul@a+1)^0,c
  4527  000F2E  0E93               	movlw	147
  4528  000F30  6E32               	movwf	(___flmul@a+2)^0,c
  4529  000F32  0E3D               	movlw	61
  4530  000F34  6E33               	movwf	(___flmul@a+3)^0,c
  4531  000F36  0100               	movlb	0	; () banked
  4532  000F38  EE20 F012          	lfsr	2,18
  4533  000F3C  51A4               	movf	determine_color_new@m& (0+255),w,b
  4534  000F3E  26D9               	addwf	fsr2l,f,c
  4535  000F40  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4536  000F42  22DA               	addwfc	fsr2h,f,c
  4537  000F44  CFDE F0A6          	movff	postinc2,??_determine_color_new
  4538  000F48  CFDD F0A7          	movff	postdec2,??_determine_color_new+1
  4539  000F4C  C0A6  F005         	movff	??_determine_color_new,___xxtofl@val
  4540  000F50  C0A7  F006         	movff	??_determine_color_new+1,___xxtofl@val+1
  4541  000F54  6A07               	clrf	(___xxtofl@val+2)^0,c
  4542  000F56  6A08               	clrf	(___xxtofl@val+3)^0,c
  4543  000F58  0E00               	movlw	0
  4544  000F5A  EC54  F019         	call	___xxtofl
  4545  000F5E  C005  F02C         	movff	?___xxtofl,___flmul@b
  4546  000F62  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  4547  000F66  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  4548  000F6A  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  4549  000F6E  EC27  F013         	call	___flmul	;wreg free
  4550  000F72  C02C  F049         	movff	?___flmul,___fladd@a
  4551  000F76  C02D  F04A         	movff	?___flmul+1,___fladd@a+1
  4552  000F7A  C02E  F04B         	movff	?___flmul+2,___fladd@a+2
  4553  000F7E  C02F  F04C         	movff	?___flmul+3,___fladd@a+3
  4554  000F82  C0AE  F045         	movff	_determine_color_new$2503,___fladd@b
  4555  000F86  C0AF  F046         	movff	_determine_color_new$2503+1,___fladd@b+1
  4556  000F8A  C0B0  F047         	movff	_determine_color_new$2503+2,___fladd@b+2
  4557  000F8E  C0B1  F048         	movff	_determine_color_new$2503+3,___fladd@b+3
  4558  000F92  ECC7  F010         	call	___fladd	;wreg free
  4559  000F96  C045  F09C         	movff	?___fladd,___fltol@f1
  4560  000F9A  C046  F09D         	movff	?___fladd+1,___fltol@f1+1
  4561  000F9E  C047  F09E         	movff	?___fladd+2,___fltol@f1+2
  4562  000FA2  C048  F09F         	movff	?___fladd+3,___fltol@f1+3
  4563  000FA6  EC55  F01C         	call	___fltol	;wreg free
  4564  000FAA  C09C  F0B2         	movff	?___fltol,determine_color_new@lumin
  4565  000FAE  C09D  F0B3         	movff	?___fltol+1,determine_color_new@lumin+1
  4566  000FB2                     
  4567                           ;color.c: 119:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  4568  000FB2  0E00               	movlw	0
  4569  000FB4  6E30               	movwf	___flmul@a^0,c
  4570  000FB6  0E40               	movlw	64
  4571  000FB8  6E31               	movwf	(___flmul@a+1)^0,c
  4572  000FBA  0E1C               	movlw	28
  4573  000FBC  6E32               	movwf	(___flmul@a+2)^0,c
  4574  000FBE  0E46               	movlw	70
  4575  000FC0  6E33               	movwf	(___flmul@a+3)^0,c
  4576  000FC2  C0A4  FFD9         	movff	determine_color_new@m,fsr2l
  4577  000FC6  C0A5  FFDA         	movff	determine_color_new@m+1,fsr2h
  4578  000FCA  CFDE F0A6          	movff	postinc2,??_determine_color_new
  4579  000FCE  CFDD F0A7          	movff	postdec2,??_determine_color_new+1
  4580  000FD2  0100               	movlb	0	; () banked
  4581  000FD4  EE20 F006          	lfsr	2,6
  4582  000FD8  51A4               	movf	determine_color_new@m& (0+255),w,b
  4583  000FDA  26D9               	addwf	fsr2l,f,c
  4584  000FDC  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4585  000FDE  22DA               	addwfc	fsr2h,f,c
  4586  000FE0  CFDE F0A8          	movff	postinc2,??_determine_color_new+2
  4587  000FE4  CFDD F0A9          	movff	postdec2,??_determine_color_new+3
  4588  000FE8  51A6               	movf	??_determine_color_new& (0+255),w,b
  4589  000FEA  5FA8               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4590  000FEC  51A7               	movf	(??_determine_color_new+1)& (0+255),w,b
  4591  000FEE  5BA9               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4592  000FF0  C0A8  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4593  000FF4  C0A9  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4594  000FF8  6A07               	clrf	(___xxtofl@val+2)^0,c
  4595  000FFA  6A08               	clrf	(___xxtofl@val+3)^0,c
  4596  000FFC  0E00               	movlw	0
  4597  000FFE  EC54  F019         	call	___xxtofl
  4598  001002  C005  F017         	movff	?___xxtofl,___fldiv@a
  4599  001006  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4600  00100A  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4601  00100E  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4602  001012  C0A4  FFD9         	movff	determine_color_new@m,fsr2l
  4603  001016  C0A5  FFDA         	movff	determine_color_new@m+1,fsr2h
  4604  00101A  CFDE F0AA          	movff	postinc2,??_determine_color_new+4
  4605  00101E  CFDD F0AB          	movff	postdec2,??_determine_color_new+5
  4606  001022  0100               	movlb	0	; () banked
  4607  001024  EE20 F00E          	lfsr	2,14
  4608  001028  51A4               	movf	determine_color_new@m& (0+255),w,b
  4609  00102A  26D9               	addwf	fsr2l,f,c
  4610  00102C  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4611  00102E  22DA               	addwfc	fsr2h,f,c
  4612  001030  CFDE F0AC          	movff	postinc2,??_determine_color_new+6
  4613  001034  CFDD F0AD          	movff	postdec2,??_determine_color_new+7
  4614  001038  51AA               	movf	(??_determine_color_new+4)& (0+255),w,b
  4615  00103A  5FAC               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4616  00103C  51AB               	movf	(??_determine_color_new+5)& (0+255),w,b
  4617  00103E  5BAD               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4618  001040  C0AC  F005         	movff	??_determine_color_new+6,___xxtofl@val
  4619  001044  C0AD  F006         	movff	??_determine_color_new+7,___xxtofl@val+1
  4620  001048  6A07               	clrf	(___xxtofl@val+2)^0,c
  4621  00104A  6A08               	clrf	(___xxtofl@val+3)^0,c
  4622  00104C  0E00               	movlw	0
  4623  00104E  EC54  F019         	call	___xxtofl
  4624  001052  C005  F013         	movff	?___xxtofl,___fldiv@b
  4625  001056  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4626  00105A  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4627  00105E  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4628  001062  EC3C  F015         	call	___fldiv	;wreg free
  4629  001066  C013  F02C         	movff	?___fldiv,___flmul@b
  4630  00106A  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4631  00106E  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4632  001072  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4633  001076  EC27  F013         	call	___flmul	;wreg free
  4634  00107A  C02C  F09C         	movff	?___flmul,___fltol@f1
  4635  00107E  C02D  F09D         	movff	?___flmul+1,___fltol@f1+1
  4636  001082  C02E  F09E         	movff	?___flmul+2,___fltol@f1+2
  4637  001086  C02F  F09F         	movff	?___flmul+3,___fltol@f1+3
  4638  00108A  EC55  F01C         	call	___fltol	;wreg free
  4639  00108E  C09C  F0B4         	movff	?___fltol,determine_color_new@RedRatio
  4640  001092  C09D  F0B5         	movff	?___fltol+1,determine_color_new@RedRatio+1
  4641  001096                     
  4642                           ;color.c: 120:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  4643  001096  0E00               	movlw	0
  4644  001098  6E30               	movwf	___flmul@a^0,c
  4645  00109A  0E40               	movlw	64
  4646  00109C  6E31               	movwf	(___flmul@a+1)^0,c
  4647  00109E  0E1C               	movlw	28
  4648  0010A0  6E32               	movwf	(___flmul@a+2)^0,c
  4649  0010A2  0E46               	movlw	70
  4650  0010A4  6E33               	movwf	(___flmul@a+3)^0,c
  4651  0010A6  0100               	movlb	0	; () banked
  4652  0010A8  EE20 F002          	lfsr	2,2
  4653  0010AC  51A4               	movf	determine_color_new@m& (0+255),w,b
  4654  0010AE  26D9               	addwf	fsr2l,f,c
  4655  0010B0  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4656  0010B2  22DA               	addwfc	fsr2h,f,c
  4657  0010B4  CFDE F0A6          	movff	postinc2,??_determine_color_new
  4658  0010B8  CFDD F0A7          	movff	postdec2,??_determine_color_new+1
  4659  0010BC  EE20 F008          	lfsr	2,8
  4660  0010C0  51A4               	movf	determine_color_new@m& (0+255),w,b
  4661  0010C2  26D9               	addwf	fsr2l,f,c
  4662  0010C4  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4663  0010C6  22DA               	addwfc	fsr2h,f,c
  4664  0010C8  CFDE F0A8          	movff	postinc2,??_determine_color_new+2
  4665  0010CC  CFDD F0A9          	movff	postdec2,??_determine_color_new+3
  4666  0010D0  51A6               	movf	??_determine_color_new& (0+255),w,b
  4667  0010D2  5FA8               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4668  0010D4  51A7               	movf	(??_determine_color_new+1)& (0+255),w,b
  4669  0010D6  5BA9               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4670  0010D8  C0A8  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4671  0010DC  C0A9  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4672  0010E0  6A07               	clrf	(___xxtofl@val+2)^0,c
  4673  0010E2  6A08               	clrf	(___xxtofl@val+3)^0,c
  4674  0010E4  0E00               	movlw	0
  4675  0010E6  EC54  F019         	call	___xxtofl
  4676  0010EA  C005  F017         	movff	?___xxtofl,___fldiv@a
  4677  0010EE  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4678  0010F2  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4679  0010F6  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4680  0010FA  0100               	movlb	0	; () banked
  4681  0010FC  EE20 F002          	lfsr	2,2
  4682  001100  51A4               	movf	determine_color_new@m& (0+255),w,b
  4683  001102  26D9               	addwf	fsr2l,f,c
  4684  001104  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4685  001106  22DA               	addwfc	fsr2h,f,c
  4686  001108  CFDE F0AA          	movff	postinc2,??_determine_color_new+4
  4687  00110C  CFDD F0AB          	movff	postdec2,??_determine_color_new+5
  4688  001110  EE20 F010          	lfsr	2,16
  4689  001114  51A4               	movf	determine_color_new@m& (0+255),w,b
  4690  001116  26D9               	addwf	fsr2l,f,c
  4691  001118  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4692  00111A  22DA               	addwfc	fsr2h,f,c
  4693  00111C  CFDE F0AC          	movff	postinc2,??_determine_color_new+6
  4694  001120  CFDD F0AD          	movff	postdec2,??_determine_color_new+7
  4695  001124  51AA               	movf	(??_determine_color_new+4)& (0+255),w,b
  4696  001126  5FAC               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4697  001128  51AB               	movf	(??_determine_color_new+5)& (0+255),w,b
  4698  00112A  5BAD               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4699  00112C  C0AC  F005         	movff	??_determine_color_new+6,___xxtofl@val
  4700  001130  C0AD  F006         	movff	??_determine_color_new+7,___xxtofl@val+1
  4701  001134  6A07               	clrf	(___xxtofl@val+2)^0,c
  4702  001136  6A08               	clrf	(___xxtofl@val+3)^0,c
  4703  001138  0E00               	movlw	0
  4704  00113A  EC54  F019         	call	___xxtofl
  4705  00113E  C005  F013         	movff	?___xxtofl,___fldiv@b
  4706  001142  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4707  001146  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4708  00114A  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4709  00114E  EC3C  F015         	call	___fldiv	;wreg free
  4710  001152  C013  F02C         	movff	?___fldiv,___flmul@b
  4711  001156  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4712  00115A  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4713  00115E  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4714  001162  EC27  F013         	call	___flmul	;wreg free
  4715  001166  C02C  F09C         	movff	?___flmul,___fltol@f1
  4716  00116A  C02D  F09D         	movff	?___flmul+1,___fltol@f1+1
  4717  00116E  C02E  F09E         	movff	?___flmul+2,___fltol@f1+2
  4718  001172  C02F  F09F         	movff	?___flmul+3,___fltol@f1+3
  4719  001176  EC55  F01C         	call	___fltol	;wreg free
  4720  00117A  C09C  F0B6         	movff	?___fltol,determine_color_new@GreenRatio
  4721  00117E  C09D  F0B7         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  4722  001182                     
  4723                           ;color.c: 121:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  4724  001182  0E00               	movlw	0
  4725  001184  6E30               	movwf	___flmul@a^0,c
  4726  001186  0E40               	movlw	64
  4727  001188  6E31               	movwf	(___flmul@a+1)^0,c
  4728  00118A  0E1C               	movlw	28
  4729  00118C  6E32               	movwf	(___flmul@a+2)^0,c
  4730  00118E  0E46               	movlw	70
  4731  001190  6E33               	movwf	(___flmul@a+3)^0,c
  4732  001192  0100               	movlb	0	; () banked
  4733  001194  EE20 F004          	lfsr	2,4
  4734  001198  51A4               	movf	determine_color_new@m& (0+255),w,b
  4735  00119A  26D9               	addwf	fsr2l,f,c
  4736  00119C  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4737  00119E  22DA               	addwfc	fsr2h,f,c
  4738  0011A0  CFDE F0A6          	movff	postinc2,??_determine_color_new
  4739  0011A4  CFDD F0A7          	movff	postdec2,??_determine_color_new+1
  4740  0011A8  EE20 F00A          	lfsr	2,10
  4741  0011AC  51A4               	movf	determine_color_new@m& (0+255),w,b
  4742  0011AE  26D9               	addwf	fsr2l,f,c
  4743  0011B0  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4744  0011B2  22DA               	addwfc	fsr2h,f,c
  4745  0011B4  CFDE F0A8          	movff	postinc2,??_determine_color_new+2
  4746  0011B8  CFDD F0A9          	movff	postdec2,??_determine_color_new+3
  4747  0011BC  51A6               	movf	??_determine_color_new& (0+255),w,b
  4748  0011BE  5FA8               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4749  0011C0  51A7               	movf	(??_determine_color_new+1)& (0+255),w,b
  4750  0011C2  5BA9               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4751  0011C4  C0A8  F005         	movff	??_determine_color_new+2,___xxtofl@val
  4752  0011C8  C0A9  F006         	movff	??_determine_color_new+3,___xxtofl@val+1
  4753  0011CC  6A07               	clrf	(___xxtofl@val+2)^0,c
  4754  0011CE  6A08               	clrf	(___xxtofl@val+3)^0,c
  4755  0011D0  0E00               	movlw	0
  4756  0011D2  EC54  F019         	call	___xxtofl
  4757  0011D6  C005  F017         	movff	?___xxtofl,___fldiv@a
  4758  0011DA  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4759  0011DE  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4760  0011E2  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4761  0011E6  0100               	movlb	0	; () banked
  4762  0011E8  EE20 F004          	lfsr	2,4
  4763  0011EC  51A4               	movf	determine_color_new@m& (0+255),w,b
  4764  0011EE  26D9               	addwf	fsr2l,f,c
  4765  0011F0  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4766  0011F2  22DA               	addwfc	fsr2h,f,c
  4767  0011F4  CFDE F0AA          	movff	postinc2,??_determine_color_new+4
  4768  0011F8  CFDD F0AB          	movff	postdec2,??_determine_color_new+5
  4769  0011FC  EE20 F012          	lfsr	2,18
  4770  001200  51A4               	movf	determine_color_new@m& (0+255),w,b
  4771  001202  26D9               	addwf	fsr2l,f,c
  4772  001204  51A5               	movf	(determine_color_new@m+1)& (0+255),w,b
  4773  001206  22DA               	addwfc	fsr2h,f,c
  4774  001208  CFDE F0AC          	movff	postinc2,??_determine_color_new+6
  4775  00120C  CFDD F0AD          	movff	postdec2,??_determine_color_new+7
  4776  001210  51AA               	movf	(??_determine_color_new+4)& (0+255),w,b
  4777  001212  5FAC               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4778  001214  51AB               	movf	(??_determine_color_new+5)& (0+255),w,b
  4779  001216  5BAD               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4780  001218  C0AC  F005         	movff	??_determine_color_new+6,___xxtofl@val
  4781  00121C  C0AD  F006         	movff	??_determine_color_new+7,___xxtofl@val+1
  4782  001220  6A07               	clrf	(___xxtofl@val+2)^0,c
  4783  001222  6A08               	clrf	(___xxtofl@val+3)^0,c
  4784  001224  0E00               	movlw	0
  4785  001226  EC54  F019         	call	___xxtofl
  4786  00122A  C005  F013         	movff	?___xxtofl,___fldiv@b
  4787  00122E  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4788  001232  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4789  001236  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4790  00123A  EC3C  F015         	call	___fldiv	;wreg free
  4791  00123E  C013  F02C         	movff	?___fldiv,___flmul@b
  4792  001242  C014  F02D         	movff	?___fldiv+1,___flmul@b+1
  4793  001246  C015  F02E         	movff	?___fldiv+2,___flmul@b+2
  4794  00124A  C016  F02F         	movff	?___fldiv+3,___flmul@b+3
  4795  00124E  EC27  F013         	call	___flmul	;wreg free
  4796  001252  C02C  F09C         	movff	?___flmul,___fltol@f1
  4797  001256  C02D  F09D         	movff	?___flmul+1,___fltol@f1+1
  4798  00125A  C02E  F09E         	movff	?___flmul+2,___fltol@f1+2
  4799  00125E  C02F  F09F         	movff	?___flmul+3,___fltol@f1+3
  4800  001262  EC55  F01C         	call	___fltol	;wreg free
  4801  001266  C09C  F0B8         	movff	?___fltol,determine_color_new@BlueRatio
  4802  00126A  C09D  F0B9         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  4803  00126E                     
  4804                           ;color.c: 123:     RelR = (float)RedRatio / (float)GreenRatio;
  4805  00126E  C0B4  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4806  001272  C0B5  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4807  001276  6A07               	clrf	(___xxtofl@val+2)^0,c
  4808  001278  6A08               	clrf	(___xxtofl@val+3)^0,c
  4809  00127A  0E00               	movlw	0
  4810  00127C  EC54  F019         	call	___xxtofl
  4811  001280  C005  F013         	movff	?___xxtofl,___fldiv@b
  4812  001284  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4813  001288  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4814  00128C  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4815  001290  C0B6  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4816  001294  C0B7  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4817  001298  6A07               	clrf	(___xxtofl@val+2)^0,c
  4818  00129A  6A08               	clrf	(___xxtofl@val+3)^0,c
  4819  00129C  0E00               	movlw	0
  4820  00129E  EC54  F019         	call	___xxtofl
  4821  0012A2  C005  F017         	movff	?___xxtofl,___fldiv@a
  4822  0012A6  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4823  0012AA  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4824  0012AE  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4825  0012B2  EC3C  F015         	call	___fldiv	;wreg free
  4826  0012B6  C013  F0BC         	movff	?___fldiv,determine_color_new@RelR
  4827  0012BA  C014  F0BD         	movff	?___fldiv+1,determine_color_new@RelR+1
  4828  0012BE  C015  F0BE         	movff	?___fldiv+2,determine_color_new@RelR+2
  4829  0012C2  C016  F0BF         	movff	?___fldiv+3,determine_color_new@RelR+3
  4830  0012C6                     
  4831                           ;color.c: 124:     RelG = (float)RedRatio / (float)BlueRatio;
  4832  0012C6  C0B4  F005         	movff	determine_color_new@RedRatio,___xxtofl@val
  4833  0012CA  C0B5  F006         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4834  0012CE  6A07               	clrf	(___xxtofl@val+2)^0,c
  4835  0012D0  6A08               	clrf	(___xxtofl@val+3)^0,c
  4836  0012D2  0E00               	movlw	0
  4837  0012D4  EC54  F019         	call	___xxtofl
  4838  0012D8  C005  F013         	movff	?___xxtofl,___fldiv@b
  4839  0012DC  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4840  0012E0  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4841  0012E4  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4842  0012E8  C0B8  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4843  0012EC  C0B9  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4844  0012F0  6A07               	clrf	(___xxtofl@val+2)^0,c
  4845  0012F2  6A08               	clrf	(___xxtofl@val+3)^0,c
  4846  0012F4  0E00               	movlw	0
  4847  0012F6  EC54  F019         	call	___xxtofl
  4848  0012FA  C005  F017         	movff	?___xxtofl,___fldiv@a
  4849  0012FE  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4850  001302  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4851  001306  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4852  00130A  EC3C  F015         	call	___fldiv	;wreg free
  4853  00130E  C013  F0C0         	movff	?___fldiv,determine_color_new@RelG
  4854  001312  C014  F0C1         	movff	?___fldiv+1,determine_color_new@RelG+1
  4855  001316  C015  F0C2         	movff	?___fldiv+2,determine_color_new@RelG+2
  4856  00131A  C016  F0C3         	movff	?___fldiv+3,determine_color_new@RelG+3
  4857  00131E                     
  4858                           ;color.c: 125:     RelB = (float)BlueRatio / (float)GreenRatio;
  4859  00131E  C0B8  F005         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4860  001322  C0B9  F006         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4861  001326  6A07               	clrf	(___xxtofl@val+2)^0,c
  4862  001328  6A08               	clrf	(___xxtofl@val+3)^0,c
  4863  00132A  0E00               	movlw	0
  4864  00132C  EC54  F019         	call	___xxtofl
  4865  001330  C005  F013         	movff	?___xxtofl,___fldiv@b
  4866  001334  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  4867  001338  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  4868  00133C  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  4869  001340  C0B6  F005         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4870  001344  C0B7  F006         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4871  001348  6A07               	clrf	(___xxtofl@val+2)^0,c
  4872  00134A  6A08               	clrf	(___xxtofl@val+3)^0,c
  4873  00134C  0E00               	movlw	0
  4874  00134E  EC54  F019         	call	___xxtofl
  4875  001352  C005  F017         	movff	?___xxtofl,___fldiv@a
  4876  001356  C006  F018         	movff	?___xxtofl+1,___fldiv@a+1
  4877  00135A  C007  F019         	movff	?___xxtofl+2,___fldiv@a+2
  4878  00135E  C008  F01A         	movff	?___xxtofl+3,___fldiv@a+3
  4879  001362  EC3C  F015         	call	___fldiv	;wreg free
  4880  001366  C013  F0C4         	movff	?___fldiv,determine_color_new@RelB
  4881  00136A  C014  F0C5         	movff	?___fldiv+1,determine_color_new@RelB+1
  4882  00136E  C015  F0C6         	movff	?___fldiv+2,determine_color_new@RelB+2
  4883  001372  C016  F0C7         	movff	?___fldiv+3,determine_color_new@RelB+3
  4884  001376                     
  4885                           ;color.c: 127:     if (RelR < 0) {RelR = 0;}
  4886  001376  0100               	movlb	0	; () banked
  4887  001378  BFBF               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  4888  00137A  EFC3  F009         	goto	u4820
  4889  00137E  EFC1  F009         	goto	u4821
  4890  001382                     u4821:
  4891  001382  EFCB  F009         	goto	l4339
  4892  001386                     u4820:
  4893  001386                     
  4894                           ; BSR set to: 0
  4895  001386  0E00               	movlw	0
  4896  001388  6FBC               	movwf	determine_color_new@RelR& (0+255),b
  4897  00138A  0E00               	movlw	0
  4898  00138C  6FBD               	movwf	(determine_color_new@RelR+1)& (0+255),b
  4899  00138E  0E00               	movlw	0
  4900  001390  6FBE               	movwf	(determine_color_new@RelR+2)& (0+255),b
  4901  001392  0E00               	movlw	0
  4902  001394  6FBF               	movwf	(determine_color_new@RelR+3)& (0+255),b
  4903  001396                     l4339:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;color.c: 128:     if (RelG < 0) {RelG = 0;}
  4907  001396  BFC3               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  4908  001398  EFD2  F009         	goto	u4830
  4909  00139C  EFD0  F009         	goto	u4831
  4910  0013A0                     u4831:
  4911  0013A0  EFDA  F009         	goto	l4343
  4912  0013A4                     u4830:
  4913  0013A4                     
  4914                           ; BSR set to: 0
  4915  0013A4  0E00               	movlw	0
  4916  0013A6  6FC0               	movwf	determine_color_new@RelG& (0+255),b
  4917  0013A8  0E00               	movlw	0
  4918  0013AA  6FC1               	movwf	(determine_color_new@RelG+1)& (0+255),b
  4919  0013AC  0E00               	movlw	0
  4920  0013AE  6FC2               	movwf	(determine_color_new@RelG+2)& (0+255),b
  4921  0013B0  0E00               	movlw	0
  4922  0013B2  6FC3               	movwf	(determine_color_new@RelG+3)& (0+255),b
  4923  0013B4                     l4343:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;color.c: 129:     if (RelB < 0) {RelB = 0;}
  4927  0013B4  BFC7               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  4928  0013B6  EFE1  F009         	goto	u4840
  4929  0013BA  EFDF  F009         	goto	u4841
  4930  0013BE                     u4841:
  4931  0013BE  EFE9  F009         	goto	l4347
  4932  0013C2                     u4840:
  4933  0013C2                     
  4934                           ; BSR set to: 0
  4935  0013C2  0E00               	movlw	0
  4936  0013C4  6FC4               	movwf	determine_color_new@RelB& (0+255),b
  4937  0013C6  0E00               	movlw	0
  4938  0013C8  6FC5               	movwf	(determine_color_new@RelB+1)& (0+255),b
  4939  0013CA  0E00               	movlw	0
  4940  0013CC  6FC6               	movwf	(determine_color_new@RelB+2)& (0+255),b
  4941  0013CE  0E00               	movlw	0
  4942  0013D0  6FC7               	movwf	(determine_color_new@RelB+3)& (0+255),b
  4943  0013D2                     l4347:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;color.c: 132:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1)
  4947  0013D2  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  4948  0013D6  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  4949  0013DA  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  4950  0013DE  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  4951  0013E2  0E33               	movlw	51
  4952  0013E4  6E15               	movwf	isbtw@low^0,c
  4953  0013E6  0E33               	movlw	51
  4954  0013E8  6E16               	movwf	(isbtw@low+1)^0,c
  4955  0013EA  0EA3               	movlw	163
  4956  0013EC  6E17               	movwf	(isbtw@low+2)^0,c
  4957  0013EE  0E40               	movlw	64
  4958  0013F0  6E18               	movwf	(isbtw@low+3)^0,c
  4959  0013F2  0E00               	movlw	0
  4960  0013F4  6E19               	movwf	isbtw@high^0,c
  4961  0013F6  0E00               	movlw	0
  4962  0013F8  6E1A               	movwf	(isbtw@high+1)^0,c
  4963  0013FA  0EA4               	movlw	164
  4964  0013FC  6E1B               	movwf	(isbtw@high+2)^0,c
  4965  0013FE  0E41               	movlw	65
  4966  001400  6E1C               	movwf	(isbtw@high+3)^0,c
  4967  001402  EC23  F01E         	call	_isbtw	;wreg free
  4968  001406  0411               	decf	?_isbtw^0,w,c
  4969  001408  1012               	iorwf	(?_isbtw+1)^0,w,c
  4970  00140A  A4D8               	btfss	status,2,c
  4971  00140C  EF0A  F00A         	goto	u4851
  4972  001410  EF0C  F00A         	goto	u4850
  4973  001414                     u4851:
  4974  001414  EF57  F00A         	goto	l4355
  4975  001418                     u4850:
  4976  001418  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  4977  00141C  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  4978  001420  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  4979  001424  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  4980  001428  0ECD               	movlw	205
  4981  00142A  6E15               	movwf	isbtw@low^0,c
  4982  00142C  0ECC               	movlw	204
  4983  00142E  6E16               	movwf	(isbtw@low+1)^0,c
  4984  001430  0E0C               	movlw	12
  4985  001432  6E17               	movwf	(isbtw@low+2)^0,c
  4986  001434  0E40               	movlw	64
  4987  001436  6E18               	movwf	(isbtw@low+3)^0,c
  4988  001438  0E33               	movlw	51
  4989  00143A  6E19               	movwf	isbtw@high^0,c
  4990  00143C  0E33               	movlw	51
  4991  00143E  6E1A               	movwf	(isbtw@high+1)^0,c
  4992  001440  0E73               	movlw	115
  4993  001442  6E1B               	movwf	(isbtw@high+2)^0,c
  4994  001444  0E40               	movlw	64
  4995  001446  6E1C               	movwf	(isbtw@high+3)^0,c
  4996  001448  EC23  F01E         	call	_isbtw	;wreg free
  4997  00144C  0411               	decf	?_isbtw^0,w,c
  4998  00144E  1012               	iorwf	(?_isbtw+1)^0,w,c
  4999  001450  A4D8               	btfss	status,2,c
  5000  001452  EF2D  F00A         	goto	u4861
  5001  001456  EF2F  F00A         	goto	u4860
  5002  00145A                     u4861:
  5003  00145A  EF57  F00A         	goto	l4355
  5004  00145E                     u4860:
  5005  00145E  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5006  001462  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5007  001466  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5008  00146A  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5009  00146E  0E66               	movlw	102
  5010  001470  6E15               	movwf	isbtw@low^0,c
  5011  001472  0E66               	movlw	102
  5012  001474  6E16               	movwf	(isbtw@low+1)^0,c
  5013  001476  0EE6               	movlw	230
  5014  001478  6E17               	movwf	(isbtw@low+2)^0,c
  5015  00147A  0E3F               	movlw	63
  5016  00147C  6E18               	movwf	(isbtw@low+3)^0,c
  5017  00147E  0E00               	movlw	0
  5018  001480  6E19               	movwf	isbtw@high^0,c
  5019  001482  0E00               	movlw	0
  5020  001484  6E1A               	movwf	(isbtw@high+1)^0,c
  5021  001486  0EB0               	movlw	176
  5022  001488  6E1B               	movwf	(isbtw@high+2)^0,c
  5023  00148A  0E40               	movlw	64
  5024  00148C  6E1C               	movwf	(isbtw@high+3)^0,c
  5025  00148E  EC23  F01E         	call	_isbtw	;wreg free
  5026  001492  0411               	decf	?_isbtw^0,w,c
  5027  001494  1012               	iorwf	(?_isbtw+1)^0,w,c
  5028  001496  A4D8               	btfss	status,2,c
  5029  001498  EF50  F00A         	goto	u4871
  5030  00149C  EF52  F00A         	goto	u4870
  5031  0014A0                     u4871:
  5032  0014A0  EF57  F00A         	goto	l4355
  5033  0014A4                     u4870:
  5034  0014A4                     
  5035                           ;color.c: 133:     {out = 0;}
  5036  0014A4  0E00               	movlw	0
  5037  0014A6  0100               	movlb	0	; () banked
  5038  0014A8  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5039  0014AA  0E00               	movlw	0
  5040  0014AC  6FBA               	movwf	determine_color_new@out& (0+255),b
  5041  0014AE                     l4355:
  5042                           
  5043                           ;color.c: 136:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1)
  5044  0014AE  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5045  0014B2  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5046  0014B6  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5047  0014BA  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5048  0014BE  0ECD               	movlw	205
  5049  0014C0  6E15               	movwf	isbtw@low^0,c
  5050  0014C2  0ECC               	movlw	204
  5051  0014C4  6E16               	movwf	(isbtw@low+1)^0,c
  5052  0014C6  0E4C               	movlw	76
  5053  0014C8  6E17               	movwf	(isbtw@low+2)^0,c
  5054  0014CA  0E3E               	movlw	62
  5055  0014CC  6E18               	movwf	(isbtw@low+3)^0,c
  5056  0014CE  0E48               	movlw	72
  5057  0014D0  6E19               	movwf	isbtw@high^0,c
  5058  0014D2  0EE1               	movlw	225
  5059  0014D4  6E1A               	movwf	(isbtw@high+1)^0,c
  5060  0014D6  0EFA               	movlw	250
  5061  0014D8  6E1B               	movwf	(isbtw@high+2)^0,c
  5062  0014DA  0E3E               	movlw	62
  5063  0014DC  6E1C               	movwf	(isbtw@high+3)^0,c
  5064  0014DE  EC23  F01E         	call	_isbtw	;wreg free
  5065  0014E2  0411               	decf	?_isbtw^0,w,c
  5066  0014E4  1012               	iorwf	(?_isbtw+1)^0,w,c
  5067  0014E6  A4D8               	btfss	status,2,c
  5068  0014E8  EF78  F00A         	goto	u4881
  5069  0014EC  EF7A  F00A         	goto	u4880
  5070  0014F0                     u4881:
  5071  0014F0  EFC5  F00A         	goto	l4363
  5072  0014F4                     u4880:
  5073  0014F4  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5074  0014F8  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5075  0014FC  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5076  001500  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5077  001504  0E29               	movlw	41
  5078  001506  6E15               	movwf	isbtw@low^0,c
  5079  001508  0E5C               	movlw	92
  5080  00150A  6E16               	movwf	(isbtw@low+1)^0,c
  5081  00150C  0E8F               	movlw	143
  5082  00150E  6E17               	movwf	(isbtw@low+2)^0,c
  5083  001510  0E3E               	movlw	62
  5084  001512  6E18               	movwf	(isbtw@low+3)^0,c
  5085  001514  0E3D               	movlw	61
  5086  001516  6E19               	movwf	isbtw@high^0,c
  5087  001518  0E0A               	movlw	10
  5088  00151A  6E1A               	movwf	(isbtw@high+1)^0,c
  5089  00151C  0E17               	movlw	23
  5090  00151E  6E1B               	movwf	(isbtw@high+2)^0,c
  5091  001520  0E3F               	movlw	63
  5092  001522  6E1C               	movwf	(isbtw@high+3)^0,c
  5093  001524  EC23  F01E         	call	_isbtw	;wreg free
  5094  001528  0411               	decf	?_isbtw^0,w,c
  5095  00152A  1012               	iorwf	(?_isbtw+1)^0,w,c
  5096  00152C  A4D8               	btfss	status,2,c
  5097  00152E  EF9B  F00A         	goto	u4891
  5098  001532  EF9D  F00A         	goto	u4890
  5099  001536                     u4891:
  5100  001536  EFC5  F00A         	goto	l4363
  5101  00153A                     u4890:
  5102  00153A  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5103  00153E  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5104  001542  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5105  001546  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5106  00154A  0E33               	movlw	51
  5107  00154C  6E15               	movwf	isbtw@low^0,c
  5108  00154E  0E33               	movlw	51
  5109  001550  6E16               	movwf	(isbtw@low+1)^0,c
  5110  001552  0E33               	movlw	51
  5111  001554  6E17               	movwf	(isbtw@low+2)^0,c
  5112  001556  0E3F               	movlw	63
  5113  001558  6E18               	movwf	(isbtw@low+3)^0,c
  5114  00155A  0E66               	movlw	102
  5115  00155C  6E19               	movwf	isbtw@high^0,c
  5116  00155E  0E66               	movlw	102
  5117  001560  6E1A               	movwf	(isbtw@high+1)^0,c
  5118  001562  0E66               	movlw	102
  5119  001564  6E1B               	movwf	(isbtw@high+2)^0,c
  5120  001566  0E3F               	movlw	63
  5121  001568  6E1C               	movwf	(isbtw@high+3)^0,c
  5122  00156A  EC23  F01E         	call	_isbtw	;wreg free
  5123  00156E  0411               	decf	?_isbtw^0,w,c
  5124  001570  1012               	iorwf	(?_isbtw+1)^0,w,c
  5125  001572  A4D8               	btfss	status,2,c
  5126  001574  EFBE  F00A         	goto	u4901
  5127  001578  EFC0  F00A         	goto	u4900
  5128  00157C                     u4901:
  5129  00157C  EFC5  F00A         	goto	l4363
  5130  001580                     u4900:
  5131  001580                     
  5132                           ;color.c: 137:     {out = 1;}
  5133  001580  0E00               	movlw	0
  5134  001582  0100               	movlb	0	; () banked
  5135  001584  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5136  001586  0E01               	movlw	1
  5137  001588  6FBA               	movwf	determine_color_new@out& (0+255),b
  5138  00158A                     l4363:
  5139                           
  5140                           ;color.c: 140:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1)
  5141  00158A  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5142  00158E  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5143  001592  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5144  001596  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5145  00159A  0ECD               	movlw	205
  5146  00159C  6E15               	movwf	isbtw@low^0,c
  5147  00159E  0ECC               	movlw	204
  5148  0015A0  6E16               	movwf	(isbtw@low+1)^0,c
  5149  0015A2  0ECC               	movlw	204
  5150  0015A4  6E17               	movwf	(isbtw@low+2)^0,c
  5151  0015A6  0E3D               	movlw	61
  5152  0015A8  6E18               	movwf	(isbtw@low+3)^0,c
  5153  0015AA  0ECD               	movlw	205
  5154  0015AC  6E19               	movwf	isbtw@high^0,c
  5155  0015AE  0ECC               	movlw	204
  5156  0015B0  6E1A               	movwf	(isbtw@high+1)^0,c
  5157  0015B2  0E0C               	movlw	12
  5158  0015B4  6E1B               	movwf	(isbtw@high+2)^0,c
  5159  0015B6  0E3F               	movlw	63
  5160  0015B8  6E1C               	movwf	(isbtw@high+3)^0,c
  5161  0015BA  EC23  F01E         	call	_isbtw	;wreg free
  5162  0015BE  0411               	decf	?_isbtw^0,w,c
  5163  0015C0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5164  0015C2  A4D8               	btfss	status,2,c
  5165  0015C4  EFE6  F00A         	goto	u4911
  5166  0015C8  EFE8  F00A         	goto	u4910
  5167  0015CC                     u4911:
  5168  0015CC  EF33  F00B         	goto	l4371
  5169  0015D0                     u4910:
  5170  0015D0  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5171  0015D4  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5172  0015D8  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5173  0015DC  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5174  0015E0  0ECD               	movlw	205
  5175  0015E2  6E15               	movwf	isbtw@low^0,c
  5176  0015E4  0ECC               	movlw	204
  5177  0015E6  6E16               	movwf	(isbtw@low+1)^0,c
  5178  0015E8  0ECC               	movlw	204
  5179  0015EA  6E17               	movwf	(isbtw@low+2)^0,c
  5180  0015EC  0E3D               	movlw	61
  5181  0015EE  6E18               	movwf	(isbtw@low+3)^0,c
  5182  0015F0  0E14               	movlw	20
  5183  0015F2  6E19               	movwf	isbtw@high^0,c
  5184  0015F4  0EAE               	movlw	174
  5185  0015F6  6E1A               	movwf	(isbtw@high+1)^0,c
  5186  0015F8  0EC7               	movlw	199
  5187  0015FA  6E1B               	movwf	(isbtw@high+2)^0,c
  5188  0015FC  0E3E               	movlw	62
  5189  0015FE  6E1C               	movwf	(isbtw@high+3)^0,c
  5190  001600  EC23  F01E         	call	_isbtw	;wreg free
  5191  001604  0411               	decf	?_isbtw^0,w,c
  5192  001606  1012               	iorwf	(?_isbtw+1)^0,w,c
  5193  001608  A4D8               	btfss	status,2,c
  5194  00160A  EF09  F00B         	goto	u4921
  5195  00160E  EF0B  F00B         	goto	u4920
  5196  001612                     u4921:
  5197  001612  EF33  F00B         	goto	l4371
  5198  001616                     u4920:
  5199  001616  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5200  00161A  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5201  00161E  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5202  001622  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5203  001626  0E00               	movlw	0
  5204  001628  6E15               	movwf	isbtw@low^0,c
  5205  00162A  0E00               	movlw	0
  5206  00162C  6E16               	movwf	(isbtw@low+1)^0,c
  5207  00162E  0E80               	movlw	128
  5208  001630  6E17               	movwf	(isbtw@low+2)^0,c
  5209  001632  0E3F               	movlw	63
  5210  001634  6E18               	movwf	(isbtw@low+3)^0,c
  5211  001636  0E9A               	movlw	154
  5212  001638  6E19               	movwf	isbtw@high^0,c
  5213  00163A  0E99               	movlw	153
  5214  00163C  6E1A               	movwf	(isbtw@high+1)^0,c
  5215  00163E  0E99               	movlw	153
  5216  001640  6E1B               	movwf	(isbtw@high+2)^0,c
  5217  001642  0E3F               	movlw	63
  5218  001644  6E1C               	movwf	(isbtw@high+3)^0,c
  5219  001646  EC23  F01E         	call	_isbtw	;wreg free
  5220  00164A  0411               	decf	?_isbtw^0,w,c
  5221  00164C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5222  00164E  A4D8               	btfss	status,2,c
  5223  001650  EF2C  F00B         	goto	u4931
  5224  001654  EF2E  F00B         	goto	u4930
  5225  001658                     u4931:
  5226  001658  EF33  F00B         	goto	l4371
  5227  00165C                     u4930:
  5228  00165C                     
  5229                           ;color.c: 141:     {out = 2;}
  5230  00165C  0E00               	movlw	0
  5231  00165E  0100               	movlb	0	; () banked
  5232  001660  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5233  001662  0E02               	movlw	2
  5234  001664  6FBA               	movwf	determine_color_new@out& (0+255),b
  5235  001666                     l4371:
  5236                           
  5237                           ;color.c: 144:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1)
  5238  001666  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5239  00166A  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5240  00166E  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5241  001672  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5242  001676  0E9A               	movlw	154
  5243  001678  6E15               	movwf	isbtw@low^0,c
  5244  00167A  0E99               	movlw	153
  5245  00167C  6E16               	movwf	(isbtw@low+1)^0,c
  5246  00167E  0E99               	movlw	153
  5247  001680  6E17               	movwf	(isbtw@low+2)^0,c
  5248  001682  0E3F               	movlw	63
  5249  001684  6E18               	movwf	(isbtw@low+3)^0,c
  5250  001686  0E33               	movlw	51
  5251  001688  6E19               	movwf	isbtw@high^0,c
  5252  00168A  0E33               	movlw	51
  5253  00168C  6E1A               	movwf	(isbtw@high+1)^0,c
  5254  00168E  0EB3               	movlw	179
  5255  001690  6E1B               	movwf	(isbtw@high+2)^0,c
  5256  001692  0E3F               	movlw	63
  5257  001694  6E1C               	movwf	(isbtw@high+3)^0,c
  5258  001696  EC23  F01E         	call	_isbtw	;wreg free
  5259  00169A  0411               	decf	?_isbtw^0,w,c
  5260  00169C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5261  00169E  A4D8               	btfss	status,2,c
  5262  0016A0  EF54  F00B         	goto	u4941
  5263  0016A4  EF56  F00B         	goto	u4940
  5264  0016A8                     u4941:
  5265  0016A8  EFA1  F00B         	goto	l4379
  5266  0016AC                     u4940:
  5267  0016AC  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5268  0016B0  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5269  0016B4  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5270  0016B8  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5271  0016BC  0E00               	movlw	0
  5272  0016BE  6E15               	movwf	isbtw@low^0,c
  5273  0016C0  0E00               	movlw	0
  5274  0016C2  6E16               	movwf	(isbtw@low+1)^0,c
  5275  0016C4  0EC0               	movlw	192
  5276  0016C6  6E17               	movwf	(isbtw@low+2)^0,c
  5277  0016C8  0E3F               	movlw	63
  5278  0016CA  6E18               	movwf	(isbtw@low+3)^0,c
  5279  0016CC  0EEC               	movlw	236
  5280  0016CE  6E19               	movwf	isbtw@high^0,c
  5281  0016D0  0E51               	movlw	81
  5282  0016D2  6E1A               	movwf	(isbtw@high+1)^0,c
  5283  0016D4  0ED8               	movlw	216
  5284  0016D6  6E1B               	movwf	(isbtw@high+2)^0,c
  5285  0016D8  0E3F               	movlw	63
  5286  0016DA  6E1C               	movwf	(isbtw@high+3)^0,c
  5287  0016DC  EC23  F01E         	call	_isbtw	;wreg free
  5288  0016E0  0411               	decf	?_isbtw^0,w,c
  5289  0016E2  1012               	iorwf	(?_isbtw+1)^0,w,c
  5290  0016E4  A4D8               	btfss	status,2,c
  5291  0016E6  EF77  F00B         	goto	u4951
  5292  0016EA  EF79  F00B         	goto	u4950
  5293  0016EE                     u4951:
  5294  0016EE  EFA1  F00B         	goto	l4379
  5295  0016F2                     u4950:
  5296  0016F2  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5297  0016F6  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5298  0016FA  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5299  0016FE  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5300  001702  0ECD               	movlw	205
  5301  001704  6E15               	movwf	isbtw@low^0,c
  5302  001706  0ECC               	movlw	204
  5303  001708  6E16               	movwf	(isbtw@low+1)^0,c
  5304  00170A  0E4C               	movlw	76
  5305  00170C  6E17               	movwf	(isbtw@low+2)^0,c
  5306  00170E  0E3F               	movlw	63
  5307  001710  6E18               	movwf	(isbtw@low+3)^0,c
  5308  001712  0E66               	movlw	102
  5309  001714  6E19               	movwf	isbtw@high^0,c
  5310  001716  0E66               	movlw	102
  5311  001718  6E1A               	movwf	(isbtw@high+1)^0,c
  5312  00171A  0E66               	movlw	102
  5313  00171C  6E1B               	movwf	(isbtw@high+2)^0,c
  5314  00171E  0E3F               	movlw	63
  5315  001720  6E1C               	movwf	(isbtw@high+3)^0,c
  5316  001722  EC23  F01E         	call	_isbtw	;wreg free
  5317  001726  0411               	decf	?_isbtw^0,w,c
  5318  001728  1012               	iorwf	(?_isbtw+1)^0,w,c
  5319  00172A  A4D8               	btfss	status,2,c
  5320  00172C  EF9A  F00B         	goto	u4961
  5321  001730  EF9C  F00B         	goto	u4960
  5322  001734                     u4961:
  5323  001734  EFA1  F00B         	goto	l4379
  5324  001738                     u4960:
  5325  001738                     
  5326                           ;color.c: 145:     {out = 3;}
  5327  001738  0E00               	movlw	0
  5328  00173A  0100               	movlb	0	; () banked
  5329  00173C  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5330  00173E  0E03               	movlw	3
  5331  001740  6FBA               	movwf	determine_color_new@out& (0+255),b
  5332  001742                     l4379:
  5333                           
  5334                           ;color.c: 148:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1)
  5335  001742  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5336  001746  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5337  00174A  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5338  00174E  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5339  001752  0E14               	movlw	20
  5340  001754  6E15               	movwf	isbtw@low^0,c
  5341  001756  0EAE               	movlw	174
  5342  001758  6E16               	movwf	(isbtw@low+1)^0,c
  5343  00175A  0EC7               	movlw	199
  5344  00175C  6E17               	movwf	(isbtw@low+2)^0,c
  5345  00175E  0E3F               	movlw	63
  5346  001760  6E18               	movwf	(isbtw@low+3)^0,c
  5347  001762  0E71               	movlw	113
  5348  001764  6E19               	movwf	isbtw@high^0,c
  5349  001766  0E3D               	movlw	61
  5350  001768  6E1A               	movwf	(isbtw@high+1)^0,c
  5351  00176A  0EEA               	movlw	234
  5352  00176C  6E1B               	movwf	(isbtw@high+2)^0,c
  5353  00176E  0E3F               	movlw	63
  5354  001770  6E1C               	movwf	(isbtw@high+3)^0,c
  5355  001772  EC23  F01E         	call	_isbtw	;wreg free
  5356  001776  0411               	decf	?_isbtw^0,w,c
  5357  001778  1012               	iorwf	(?_isbtw+1)^0,w,c
  5358  00177A  A4D8               	btfss	status,2,c
  5359  00177C  EFC2  F00B         	goto	u4971
  5360  001780  EFC4  F00B         	goto	u4970
  5361  001784                     u4971:
  5362  001784  EF0F  F00C         	goto	l4387
  5363  001788                     u4970:
  5364  001788  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5365  00178C  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5366  001790  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5367  001794  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5368  001798  0EA4               	movlw	164
  5369  00179A  6E15               	movwf	isbtw@low^0,c
  5370  00179C  0E70               	movlw	112
  5371  00179E  6E16               	movwf	(isbtw@low+1)^0,c
  5372  0017A0  0E9D               	movlw	157
  5373  0017A2  6E17               	movwf	(isbtw@low+2)^0,c
  5374  0017A4  0E3F               	movlw	63
  5375  0017A6  6E18               	movwf	(isbtw@low+3)^0,c
  5376  0017A8  0E00               	movlw	0
  5377  0017AA  6E19               	movwf	isbtw@high^0,c
  5378  0017AC  0E00               	movlw	0
  5379  0017AE  6E1A               	movwf	(isbtw@high+1)^0,c
  5380  0017B0  0EC0               	movlw	192
  5381  0017B2  6E1B               	movwf	(isbtw@high+2)^0,c
  5382  0017B4  0E3F               	movlw	63
  5383  0017B6  6E1C               	movwf	(isbtw@high+3)^0,c
  5384  0017B8  EC23  F01E         	call	_isbtw	;wreg free
  5385  0017BC  0411               	decf	?_isbtw^0,w,c
  5386  0017BE  1012               	iorwf	(?_isbtw+1)^0,w,c
  5387  0017C0  A4D8               	btfss	status,2,c
  5388  0017C2  EFE5  F00B         	goto	u4981
  5389  0017C6  EFE7  F00B         	goto	u4980
  5390  0017CA                     u4981:
  5391  0017CA  EF0F  F00C         	goto	l4387
  5392  0017CE                     u4980:
  5393  0017CE  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5394  0017D2  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5395  0017D6  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5396  0017DA  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5397  0017DE  0E33               	movlw	51
  5398  0017E0  6E15               	movwf	isbtw@low^0,c
  5399  0017E2  0E33               	movlw	51
  5400  0017E4  6E16               	movwf	(isbtw@low+1)^0,c
  5401  0017E6  0E93               	movlw	147
  5402  0017E8  6E17               	movwf	(isbtw@low+2)^0,c
  5403  0017EA  0E3F               	movlw	63
  5404  0017EC  6E18               	movwf	(isbtw@low+3)^0,c
  5405  0017EE  0E66               	movlw	102
  5406  0017F0  6E19               	movwf	isbtw@high^0,c
  5407  0017F2  0E66               	movlw	102
  5408  0017F4  6E1A               	movwf	(isbtw@high+1)^0,c
  5409  0017F6  0EA6               	movlw	166
  5410  0017F8  6E1B               	movwf	(isbtw@high+2)^0,c
  5411  0017FA  0E3F               	movlw	63
  5412  0017FC  6E1C               	movwf	(isbtw@high+3)^0,c
  5413  0017FE  EC23  F01E         	call	_isbtw	;wreg free
  5414  001802  0411               	decf	?_isbtw^0,w,c
  5415  001804  1012               	iorwf	(?_isbtw+1)^0,w,c
  5416  001806  A4D8               	btfss	status,2,c
  5417  001808  EF08  F00C         	goto	u4991
  5418  00180C  EF0A  F00C         	goto	u4990
  5419  001810                     u4991:
  5420  001810  EF0F  F00C         	goto	l4387
  5421  001814                     u4990:
  5422  001814                     
  5423                           ;color.c: 149:     {out = 4;}
  5424  001814  0E00               	movlw	0
  5425  001816  0100               	movlb	0	; () banked
  5426  001818  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5427  00181A  0E04               	movlw	4
  5428  00181C  6FBA               	movwf	determine_color_new@out& (0+255),b
  5429  00181E                     l4387:
  5430                           
  5431                           ;color.c: 152:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1)
  5432  00181E  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5433  001822  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5434  001826  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5435  00182A  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5436  00182E  0E66               	movlw	102
  5437  001830  6E15               	movwf	isbtw@low^0,c
  5438  001832  0E66               	movlw	102
  5439  001834  6E16               	movwf	(isbtw@low+1)^0,c
  5440  001836  0E46               	movlw	70
  5441  001838  6E17               	movwf	(isbtw@low+2)^0,c
  5442  00183A  0E40               	movlw	64
  5443  00183C  6E18               	movwf	(isbtw@low+3)^0,c
  5444  00183E  0E33               	movlw	51
  5445  001840  6E19               	movwf	isbtw@high^0,c
  5446  001842  0E33               	movlw	51
  5447  001844  6E1A               	movwf	(isbtw@high+1)^0,c
  5448  001846  0E9B               	movlw	155
  5449  001848  6E1B               	movwf	(isbtw@high+2)^0,c
  5450  00184A  0E40               	movlw	64
  5451  00184C  6E1C               	movwf	(isbtw@high+3)^0,c
  5452  00184E  EC23  F01E         	call	_isbtw	;wreg free
  5453  001852  0411               	decf	?_isbtw^0,w,c
  5454  001854  1012               	iorwf	(?_isbtw+1)^0,w,c
  5455  001856  A4D8               	btfss	status,2,c
  5456  001858  EF30  F00C         	goto	u5001
  5457  00185C  EF32  F00C         	goto	u5000
  5458  001860                     u5001:
  5459  001860  EF7D  F00C         	goto	l4395
  5460  001864                     u5000:
  5461  001864  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5462  001868  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5463  00186C  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5464  001870  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5465  001874  0ECD               	movlw	205
  5466  001876  6E15               	movwf	isbtw@low^0,c
  5467  001878  0ECC               	movlw	204
  5468  00187A  6E16               	movwf	(isbtw@low+1)^0,c
  5469  00187C  0E0C               	movlw	12
  5470  00187E  6E17               	movwf	(isbtw@low+2)^0,c
  5471  001880  0E40               	movlw	64
  5472  001882  6E18               	movwf	(isbtw@low+3)^0,c
  5473  001884  0EB8               	movlw	184
  5474  001886  6E19               	movwf	isbtw@high^0,c
  5475  001888  0E1E               	movlw	30
  5476  00188A  6E1A               	movwf	(isbtw@high+1)^0,c
  5477  00188C  0E35               	movlw	53
  5478  00188E  6E1B               	movwf	(isbtw@high+2)^0,c
  5479  001890  0E40               	movlw	64
  5480  001892  6E1C               	movwf	(isbtw@high+3)^0,c
  5481  001894  EC23  F01E         	call	_isbtw	;wreg free
  5482  001898  0411               	decf	?_isbtw^0,w,c
  5483  00189A  1012               	iorwf	(?_isbtw+1)^0,w,c
  5484  00189C  A4D8               	btfss	status,2,c
  5485  00189E  EF53  F00C         	goto	u5011
  5486  0018A2  EF55  F00C         	goto	u5010
  5487  0018A6                     u5011:
  5488  0018A6  EF7D  F00C         	goto	l4395
  5489  0018AA                     u5010:
  5490  0018AA  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5491  0018AE  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5492  0018B2  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5493  0018B6  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5494  0018BA  0E5C               	movlw	92
  5495  0018BC  6E15               	movwf	isbtw@low^0,c
  5496  0018BE  0E8F               	movlw	143
  5497  0018C0  6E16               	movwf	(isbtw@low+1)^0,c
  5498  0018C2  0EA2               	movlw	162
  5499  0018C4  6E17               	movwf	(isbtw@low+2)^0,c
  5500  0018C6  0E3F               	movlw	63
  5501  0018C8  6E18               	movwf	(isbtw@low+3)^0,c
  5502  0018CA  0E66               	movlw	102
  5503  0018CC  6E19               	movwf	isbtw@high^0,c
  5504  0018CE  0E66               	movlw	102
  5505  0018D0  6E1A               	movwf	(isbtw@high+1)^0,c
  5506  0018D2  0EE6               	movlw	230
  5507  0018D4  6E1B               	movwf	(isbtw@high+2)^0,c
  5508  0018D6  0E3F               	movlw	63
  5509  0018D8  6E1C               	movwf	(isbtw@high+3)^0,c
  5510  0018DA  EC23  F01E         	call	_isbtw	;wreg free
  5511  0018DE  0411               	decf	?_isbtw^0,w,c
  5512  0018E0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5513  0018E2  A4D8               	btfss	status,2,c
  5514  0018E4  EF76  F00C         	goto	u5021
  5515  0018E8  EF78  F00C         	goto	u5020
  5516  0018EC                     u5021:
  5517  0018EC  EF7D  F00C         	goto	l4395
  5518  0018F0                     u5020:
  5519  0018F0                     
  5520                           ;color.c: 153:     {;color.c: 154:         out = 5;}
  5521  0018F0  0E00               	movlw	0
  5522  0018F2  0100               	movlb	0	; () banked
  5523  0018F4  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5524  0018F6  0E05               	movlw	5
  5525  0018F8  6FBA               	movwf	determine_color_new@out& (0+255),b
  5526  0018FA                     l4395:
  5527                           
  5528                           ;color.c: 157:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1)
  5529  0018FA  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5530  0018FE  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5531  001902  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5532  001906  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5533  00190A  0E9A               	movlw	154
  5534  00190C  6E15               	movwf	isbtw@low^0,c
  5535  00190E  0E99               	movlw	153
  5536  001910  6E16               	movwf	(isbtw@low+1)^0,c
  5537  001912  0E19               	movlw	25
  5538  001914  6E17               	movwf	(isbtw@low+2)^0,c
  5539  001916  0E3F               	movlw	63
  5540  001918  6E18               	movwf	(isbtw@low+3)^0,c
  5541  00191A  0EF6               	movlw	246
  5542  00191C  6E19               	movwf	isbtw@high^0,c
  5543  00191E  0E28               	movlw	40
  5544  001920  6E1A               	movwf	(isbtw@high+1)^0,c
  5545  001922  0E5C               	movlw	92
  5546  001924  6E1B               	movwf	(isbtw@high+2)^0,c
  5547  001926  0E3F               	movlw	63
  5548  001928  6E1C               	movwf	(isbtw@high+3)^0,c
  5549  00192A  EC23  F01E         	call	_isbtw	;wreg free
  5550  00192E  0411               	decf	?_isbtw^0,w,c
  5551  001930  1012               	iorwf	(?_isbtw+1)^0,w,c
  5552  001932  A4D8               	btfss	status,2,c
  5553  001934  EF9E  F00C         	goto	u5031
  5554  001938  EFA0  F00C         	goto	u5030
  5555  00193C                     u5031:
  5556  00193C  EFEB  F00C         	goto	l4403
  5557  001940                     u5030:
  5558  001940  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5559  001944  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5560  001948  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5561  00194C  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5562  001950  0E9A               	movlw	154
  5563  001952  6E15               	movwf	isbtw@low^0,c
  5564  001954  0E99               	movlw	153
  5565  001956  6E16               	movwf	(isbtw@low+1)^0,c
  5566  001958  0E19               	movlw	25
  5567  00195A  6E17               	movwf	(isbtw@low+2)^0,c
  5568  00195C  0E3F               	movlw	63
  5569  00195E  6E18               	movwf	(isbtw@low+3)^0,c
  5570  001960  0E9A               	movlw	154
  5571  001962  6E19               	movwf	isbtw@high^0,c
  5572  001964  0E99               	movlw	153
  5573  001966  6E1A               	movwf	(isbtw@high+1)^0,c
  5574  001968  0E59               	movlw	89
  5575  00196A  6E1B               	movwf	(isbtw@high+2)^0,c
  5576  00196C  0E3F               	movlw	63
  5577  00196E  6E1C               	movwf	(isbtw@high+3)^0,c
  5578  001970  EC23  F01E         	call	_isbtw	;wreg free
  5579  001974  0411               	decf	?_isbtw^0,w,c
  5580  001976  1012               	iorwf	(?_isbtw+1)^0,w,c
  5581  001978  A4D8               	btfss	status,2,c
  5582  00197A  EFC1  F00C         	goto	u5041
  5583  00197E  EFC3  F00C         	goto	u5040
  5584  001982                     u5041:
  5585  001982  EFEB  F00C         	goto	l4403
  5586  001986                     u5040:
  5587  001986  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5588  00198A  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5589  00198E  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5590  001992  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5591  001996  0E33               	movlw	51
  5592  001998  6E15               	movwf	isbtw@low^0,c
  5593  00199A  0E33               	movlw	51
  5594  00199C  6E16               	movwf	(isbtw@low+1)^0,c
  5595  00199E  0E73               	movlw	115
  5596  0019A0  6E17               	movwf	(isbtw@low+2)^0,c
  5597  0019A2  0E3F               	movlw	63
  5598  0019A4  6E18               	movwf	(isbtw@low+3)^0,c
  5599  0019A6  0E29               	movlw	41
  5600  0019A8  6E19               	movwf	isbtw@high^0,c
  5601  0019AA  0E5C               	movlw	92
  5602  0019AC  6E1A               	movwf	(isbtw@high+1)^0,c
  5603  0019AE  0E8F               	movlw	143
  5604  0019B0  6E1B               	movwf	(isbtw@high+2)^0,c
  5605  0019B2  0E3F               	movlw	63
  5606  0019B4  6E1C               	movwf	(isbtw@high+3)^0,c
  5607  0019B6  EC23  F01E         	call	_isbtw	;wreg free
  5608  0019BA  0411               	decf	?_isbtw^0,w,c
  5609  0019BC  1012               	iorwf	(?_isbtw+1)^0,w,c
  5610  0019BE  A4D8               	btfss	status,2,c
  5611  0019C0  EFE4  F00C         	goto	u5051
  5612  0019C4  EFE6  F00C         	goto	u5050
  5613  0019C8                     u5051:
  5614  0019C8  EFEB  F00C         	goto	l4403
  5615  0019CC                     u5050:
  5616  0019CC                     
  5617                           ;color.c: 158:     {out = 6;}
  5618  0019CC  0E00               	movlw	0
  5619  0019CE  0100               	movlb	0	; () banked
  5620  0019D0  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5621  0019D2  0E06               	movlw	6
  5622  0019D4  6FBA               	movwf	determine_color_new@out& (0+255),b
  5623  0019D6                     l4403:
  5624                           
  5625                           ;color.c: 161:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>980)
  5626  0019D6  C0BC  F011         	movff	determine_color_new@RelR,isbtw@num
  5627  0019DA  C0BD  F012         	movff	determine_color_new@RelR+1,isbtw@num+1
  5628  0019DE  C0BE  F013         	movff	determine_color_new@RelR+2,isbtw@num+2
  5629  0019E2  C0BF  F014         	movff	determine_color_new@RelR+3,isbtw@num+3
  5630  0019E6  0E66               	movlw	102
  5631  0019E8  6E15               	movwf	isbtw@low^0,c
  5632  0019EA  0E66               	movlw	102
  5633  0019EC  6E16               	movwf	(isbtw@low+1)^0,c
  5634  0019EE  0E66               	movlw	102
  5635  0019F0  6E17               	movwf	(isbtw@low+2)^0,c
  5636  0019F2  0E3F               	movlw	63
  5637  0019F4  6E18               	movwf	(isbtw@low+3)^0,c
  5638  0019F6  0ECD               	movlw	205
  5639  0019F8  6E19               	movwf	isbtw@high^0,c
  5640  0019FA  0ECC               	movlw	204
  5641  0019FC  6E1A               	movwf	(isbtw@high+1)^0,c
  5642  0019FE  0E8C               	movlw	140
  5643  001A00  6E1B               	movwf	(isbtw@high+2)^0,c
  5644  001A02  0E3F               	movlw	63
  5645  001A04  6E1C               	movwf	(isbtw@high+3)^0,c
  5646  001A06  EC23  F01E         	call	_isbtw	;wreg free
  5647  001A0A  0411               	decf	?_isbtw^0,w,c
  5648  001A0C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5649  001A0E  A4D8               	btfss	status,2,c
  5650  001A10  EF0C  F00D         	goto	u5061
  5651  001A14  EF0E  F00D         	goto	u5060
  5652  001A18                     u5061:
  5653  001A18  EF64  F00D         	goto	l4413
  5654  001A1C                     u5060:
  5655  001A1C  C0C0  F011         	movff	determine_color_new@RelG,isbtw@num
  5656  001A20  C0C1  F012         	movff	determine_color_new@RelG+1,isbtw@num+1
  5657  001A24  C0C2  F013         	movff	determine_color_new@RelG+2,isbtw@num+2
  5658  001A28  C0C3  F014         	movff	determine_color_new@RelG+3,isbtw@num+3
  5659  001A2C  0ECD               	movlw	205
  5660  001A2E  6E15               	movwf	isbtw@low^0,c
  5661  001A30  0ECC               	movlw	204
  5662  001A32  6E16               	movwf	(isbtw@low+1)^0,c
  5663  001A34  0E4C               	movlw	76
  5664  001A36  6E17               	movwf	(isbtw@low+2)^0,c
  5665  001A38  0E3F               	movlw	63
  5666  001A3A  6E18               	movwf	(isbtw@low+3)^0,c
  5667  001A3C  0E00               	movlw	0
  5668  001A3E  6E19               	movwf	isbtw@high^0,c
  5669  001A40  0E00               	movlw	0
  5670  001A42  6E1A               	movwf	(isbtw@high+1)^0,c
  5671  001A44  0E80               	movlw	128
  5672  001A46  6E1B               	movwf	(isbtw@high+2)^0,c
  5673  001A48  0E3F               	movlw	63
  5674  001A4A  6E1C               	movwf	(isbtw@high+3)^0,c
  5675  001A4C  EC23  F01E         	call	_isbtw	;wreg free
  5676  001A50  0411               	decf	?_isbtw^0,w,c
  5677  001A52  1012               	iorwf	(?_isbtw+1)^0,w,c
  5678  001A54  A4D8               	btfss	status,2,c
  5679  001A56  EF2F  F00D         	goto	u5071
  5680  001A5A  EF31  F00D         	goto	u5070
  5681  001A5E                     u5071:
  5682  001A5E  EF64  F00D         	goto	l4413
  5683  001A62                     u5070:
  5684  001A62  C0C4  F011         	movff	determine_color_new@RelB,isbtw@num
  5685  001A66  C0C5  F012         	movff	determine_color_new@RelB+1,isbtw@num+1
  5686  001A6A  C0C6  F013         	movff	determine_color_new@RelB+2,isbtw@num+2
  5687  001A6E  C0C7  F014         	movff	determine_color_new@RelB+3,isbtw@num+3
  5688  001A72  0E33               	movlw	51
  5689  001A74  6E15               	movwf	isbtw@low^0,c
  5690  001A76  0E33               	movlw	51
  5691  001A78  6E16               	movwf	(isbtw@low+1)^0,c
  5692  001A7A  0E73               	movlw	115
  5693  001A7C  6E17               	movwf	(isbtw@low+2)^0,c
  5694  001A7E  0E3F               	movlw	63
  5695  001A80  6E18               	movwf	(isbtw@low+3)^0,c
  5696  001A82  0ECD               	movlw	205
  5697  001A84  6E19               	movwf	isbtw@high^0,c
  5698  001A86  0ECC               	movlw	204
  5699  001A88  6E1A               	movwf	(isbtw@high+1)^0,c
  5700  001A8A  0E8C               	movlw	140
  5701  001A8C  6E1B               	movwf	(isbtw@high+2)^0,c
  5702  001A8E  0E3F               	movlw	63
  5703  001A90  6E1C               	movwf	(isbtw@high+3)^0,c
  5704  001A92  EC23  F01E         	call	_isbtw	;wreg free
  5705  001A96  0411               	decf	?_isbtw^0,w,c
  5706  001A98  1012               	iorwf	(?_isbtw+1)^0,w,c
  5707  001A9A  A4D8               	btfss	status,2,c
  5708  001A9C  EF52  F00D         	goto	u5081
  5709  001AA0  EF54  F00D         	goto	u5080
  5710  001AA4                     u5081:
  5711  001AA4  EF64  F00D         	goto	l4413
  5712  001AA8                     u5080:
  5713  001AA8  0ED5               	movlw	213
  5714  001AAA  0100               	movlb	0	; () banked
  5715  001AAC  5DB2               	subwf	determine_color_new@lumin& (0+255),w,b
  5716  001AAE  0E03               	movlw	3
  5717  001AB0  59B3               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  5718  001AB2  A0D8               	btfss	status,0,c
  5719  001AB4  EF5E  F00D         	goto	u5091
  5720  001AB8  EF60  F00D         	goto	u5090
  5721  001ABC                     u5091:
  5722  001ABC  EF64  F00D         	goto	l4413
  5723  001AC0                     u5090:
  5724  001AC0                     
  5725                           ; BSR set to: 0
  5726                           ;color.c: 162:     {out = 7;}
  5727  001AC0  0E00               	movlw	0
  5728  001AC2  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5729  001AC4  0E07               	movlw	7
  5730  001AC6  6FBA               	movwf	determine_color_new@out& (0+255),b
  5731  001AC8                     l4413:
  5732                           
  5733                           ;color.c: 165:     if (RedRatio < 75 && GreenRatio < 75 && BlueRatio < 75) {out = 8;}
  5734  001AC8  0100               	movlb	0	; () banked
  5735  001ACA  51B5               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  5736  001ACC  E107               	bnz	u5101
  5737  001ACE  0E4B               	movlw	75
  5738  001AD0  5DB4               	subwf	determine_color_new@RedRatio& (0+255),w,b
  5739  001AD2  B0D8               	btfsc	status,0,c
  5740  001AD4  EF6E  F00D         	goto	u5101
  5741  001AD8  EF70  F00D         	goto	u5100
  5742  001ADC                     u5101:
  5743  001ADC  EF8A  F00D         	goto	l4421
  5744  001AE0                     u5100:
  5745  001AE0                     
  5746                           ; BSR set to: 0
  5747  001AE0  51B7               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  5748  001AE2  E107               	bnz	u5111
  5749  001AE4  0E4B               	movlw	75
  5750  001AE6  5DB6               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  5751  001AE8  B0D8               	btfsc	status,0,c
  5752  001AEA  EF79  F00D         	goto	u5111
  5753  001AEE  EF7B  F00D         	goto	u5110
  5754  001AF2                     u5111:
  5755  001AF2  EF8A  F00D         	goto	l4421
  5756  001AF6                     u5110:
  5757  001AF6                     
  5758                           ; BSR set to: 0
  5759  001AF6  51B9               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  5760  001AF8  E107               	bnz	u5121
  5761  001AFA  0E4B               	movlw	75
  5762  001AFC  5DB8               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  5763  001AFE  B0D8               	btfsc	status,0,c
  5764  001B00  EF84  F00D         	goto	u5121
  5765  001B04  EF86  F00D         	goto	u5120
  5766  001B08                     u5121:
  5767  001B08  EF8A  F00D         	goto	l4421
  5768  001B0C                     u5120:
  5769  001B0C                     
  5770                           ; BSR set to: 0
  5771  001B0C  0E00               	movlw	0
  5772  001B0E  6FBB               	movwf	(determine_color_new@out+1)& (0+255),b
  5773  001B10  0E08               	movlw	8
  5774  001B12  6FBA               	movwf	determine_color_new@out& (0+255),b
  5775  001B14                     l4421:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;color.c: 167:     return out;
  5779  001B14  C0BA  F0A4         	movff	determine_color_new@out,?_determine_color_new
  5780  001B18  C0BB  F0A5         	movff	determine_color_new@out+1,?_determine_color_new+1
  5781  001B1C                     
  5782                           ; BSR set to: 0
  5783  001B1C  0012               	return		;funcret
  5784  001B1E                     __end_of_determine_color_new:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function _isbtw *****************
  5788 ;; Defined at:
  5789 ;;		line 94 in file "color.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  num             4   16[COMRAM] float 
  5792 ;;  low             4   20[COMRAM] float 
  5793 ;;  high            4   24[COMRAM] float 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  2   16[COMRAM] unsigned int 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5805 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;Total ram usage:       12 bytes
  5810 ;; Hardware stack levels used: 1
  5811 ;; Hardware stack levels required when called: 3
  5812 ;; This function calls:
  5813 ;;		___flge
  5814 ;; This function is called by:
  5815 ;;		_determine_color_new
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text21
  5820  003C46                     __ptext21:
  5821                           	callstack 0
  5822  003C46                     _isbtw:
  5823                           	callstack 26
  5824  003C46                     
  5825                           ;color.c: 95:     if (num>=low && num<=high){return 1;}
  5826  003C46  C011  F005         	movff	isbtw@num,___flge@ff1
  5827  003C4A  C012  F006         	movff	isbtw@num+1,___flge@ff1+1
  5828  003C4E  C013  F007         	movff	isbtw@num+2,___flge@ff1+2
  5829  003C52  C014  F008         	movff	isbtw@num+3,___flge@ff1+3
  5830  003C56  C015  F009         	movff	isbtw@low,___flge@ff2
  5831  003C5A  C016  F00A         	movff	isbtw@low+1,___flge@ff2+1
  5832  003C5E  C017  F00B         	movff	isbtw@low+2,___flge@ff2+2
  5833  003C62  C018  F00C         	movff	isbtw@low+3,___flge@ff2+3
  5834  003C66  ECD9  F01C         	call	___flge	;wreg free
  5835  003C6A  A0D8               	btfss	status,0,c
  5836  003C6C  EF3A  F01E         	goto	u2751
  5837  003C70  EF3C  F01E         	goto	u2750
  5838  003C74                     u2751:
  5839  003C74  EF5B  F01E         	goto	l3045
  5840  003C78                     u2750:
  5841  003C78  C019  F005         	movff	isbtw@high,___flge@ff1
  5842  003C7C  C01A  F006         	movff	isbtw@high+1,___flge@ff1+1
  5843  003C80  C01B  F007         	movff	isbtw@high+2,___flge@ff1+2
  5844  003C84  C01C  F008         	movff	isbtw@high+3,___flge@ff1+3
  5845  003C88  C011  F009         	movff	isbtw@num,___flge@ff2
  5846  003C8C  C012  F00A         	movff	isbtw@num+1,___flge@ff2+1
  5847  003C90  C013  F00B         	movff	isbtw@num+2,___flge@ff2+2
  5848  003C94  C014  F00C         	movff	isbtw@num+3,___flge@ff2+3
  5849  003C98  ECD9  F01C         	call	___flge	;wreg free
  5850  003C9C  A0D8               	btfss	status,0,c
  5851  003C9E  EF53  F01E         	goto	u2761
  5852  003CA2  EF55  F01E         	goto	u2760
  5853  003CA6                     u2761:
  5854  003CA6  EF5B  F01E         	goto	l3045
  5855  003CAA                     u2760:
  5856  003CAA  0E00               	movlw	0
  5857  003CAC  6E12               	movwf	(?_isbtw+1)^0,c
  5858  003CAE  0E01               	movlw	1
  5859  003CB0  6E11               	movwf	?_isbtw^0,c
  5860  003CB2  EF5F  F01E         	goto	l53
  5861  003CB6                     l3045:
  5862  003CB6  0E00               	movlw	0
  5863  003CB8  6E12               	movwf	(?_isbtw+1)^0,c
  5864  003CBA  0E00               	movlw	0
  5865  003CBC  6E11               	movwf	?_isbtw^0,c
  5866  003CBE                     l53:
  5867  003CBE  0012               	return		;funcret
  5868  003CC0                     __end_of_isbtw:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function ___flge *****************
  5872 ;; Defined at:
  5873 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  ff1             4    4[COMRAM] unsigned int 
  5876 ;;  ff2             4    8[COMRAM] unsigned int 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;		None               void
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5888 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;Total ram usage:       12 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 2
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_isbtw
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text22
  5903  0039B2                     __ptext22:
  5904                           	callstack 0
  5905  0039B2                     ___flge:
  5906                           	callstack 26
  5907  0039B2  0E00               	movlw	0
  5908  0039B4  1405               	andwf	___flge@ff1^0,w,c
  5909  0039B6  6E0D               	movwf	??___flge^0,c
  5910  0039B8  0E00               	movlw	0
  5911  0039BA  1406               	andwf	(___flge@ff1+1)^0,w,c
  5912  0039BC  6E0E               	movwf	(??___flge+1)^0,c
  5913  0039BE  0E80               	movlw	128
  5914  0039C0  1407               	andwf	(___flge@ff1+2)^0,w,c
  5915  0039C2  6E0F               	movwf	(??___flge+2)^0,c
  5916  0039C4  0E7F               	movlw	127
  5917  0039C6  1408               	andwf	(___flge@ff1+3)^0,w,c
  5918  0039C8  6E10               	movwf	(??___flge+3)^0,c
  5919  0039CA  500D               	movf	??___flge^0,w,c
  5920  0039CC  100E               	iorwf	(??___flge+1)^0,w,c
  5921  0039CE  100F               	iorwf	(??___flge+2)^0,w,c
  5922  0039D0  1010               	iorwf	(??___flge+3)^0,w,c
  5923  0039D2  A4D8               	btfss	status,2,c
  5924  0039D4  EFEE  F01C         	goto	u2661
  5925  0039D8  EFF0  F01C         	goto	u2660
  5926  0039DC                     u2661:
  5927  0039DC  EFF8  F01C         	goto	l2937
  5928  0039E0                     u2660:
  5929  0039E0  0E00               	movlw	0
  5930  0039E2  6E05               	movwf	___flge@ff1^0,c
  5931  0039E4  0E00               	movlw	0
  5932  0039E6  6E06               	movwf	(___flge@ff1+1)^0,c
  5933  0039E8  0E00               	movlw	0
  5934  0039EA  6E07               	movwf	(___flge@ff1+2)^0,c
  5935  0039EC  0E00               	movlw	0
  5936  0039EE  6E08               	movwf	(___flge@ff1+3)^0,c
  5937  0039F0                     l2937:
  5938  0039F0  0E00               	movlw	0
  5939  0039F2  1409               	andwf	___flge@ff2^0,w,c
  5940  0039F4  6E0D               	movwf	??___flge^0,c
  5941  0039F6  0E00               	movlw	0
  5942  0039F8  140A               	andwf	(___flge@ff2+1)^0,w,c
  5943  0039FA  6E0E               	movwf	(??___flge+1)^0,c
  5944  0039FC  0E80               	movlw	128
  5945  0039FE  140B               	andwf	(___flge@ff2+2)^0,w,c
  5946  003A00  6E0F               	movwf	(??___flge+2)^0,c
  5947  003A02  0E7F               	movlw	127
  5948  003A04  140C               	andwf	(___flge@ff2+3)^0,w,c
  5949  003A06  6E10               	movwf	(??___flge+3)^0,c
  5950  003A08  500D               	movf	??___flge^0,w,c
  5951  003A0A  100E               	iorwf	(??___flge+1)^0,w,c
  5952  003A0C  100F               	iorwf	(??___flge+2)^0,w,c
  5953  003A0E  1010               	iorwf	(??___flge+3)^0,w,c
  5954  003A10  A4D8               	btfss	status,2,c
  5955  003A12  EF0D  F01D         	goto	u2671
  5956  003A16  EF0F  F01D         	goto	u2670
  5957  003A1A                     u2671:
  5958  003A1A  EF17  F01D         	goto	l2941
  5959  003A1E                     u2670:
  5960  003A1E  0E00               	movlw	0
  5961  003A20  6E09               	movwf	___flge@ff2^0,c
  5962  003A22  0E00               	movlw	0
  5963  003A24  6E0A               	movwf	(___flge@ff2+1)^0,c
  5964  003A26  0E00               	movlw	0
  5965  003A28  6E0B               	movwf	(___flge@ff2+2)^0,c
  5966  003A2A  0E00               	movlw	0
  5967  003A2C  6E0C               	movwf	(___flge@ff2+3)^0,c
  5968  003A2E                     l2941:
  5969  003A2E  AE08               	btfss	(___flge@ff1+3)^0,7,c
  5970  003A30  EF1C  F01D         	goto	u2681
  5971  003A34  EF1E  F01D         	goto	u2680
  5972  003A38                     u2681:
  5973  003A38  EF27  F01D         	goto	l2945
  5974  003A3C                     u2680:
  5975  003A3C  6C05               	negf	___flge@ff1^0,c
  5976  003A3E  1E06               	comf	(___flge@ff1+1)^0,f,c
  5977  003A40  B0D8               	btfsc	status,0,c
  5978  003A42  2A06               	incf	(___flge@ff1+1)^0,f,c
  5979  003A44  1E07               	comf	(___flge@ff1+2)^0,f,c
  5980  003A46  B0D8               	btfsc	status,0,c
  5981  003A48  2A07               	incf	(___flge@ff1+2)^0,f,c
  5982  003A4A  0E80               	movlw	128
  5983  003A4C  5608               	subfwb	(___flge@ff1+3)^0,f,c
  5984  003A4E                     l2945:
  5985  003A4E  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  5986  003A50  EF2C  F01D         	goto	u2691
  5987  003A54  EF2E  F01D         	goto	u2690
  5988  003A58                     u2691:
  5989  003A58  EF37  F01D         	goto	l704
  5990  003A5C                     u2690:
  5991  003A5C  6C09               	negf	___flge@ff2^0,c
  5992  003A5E  1E0A               	comf	(___flge@ff2+1)^0,f,c
  5993  003A60  B0D8               	btfsc	status,0,c
  5994  003A62  2A0A               	incf	(___flge@ff2+1)^0,f,c
  5995  003A64  1E0B               	comf	(___flge@ff2+2)^0,f,c
  5996  003A66  B0D8               	btfsc	status,0,c
  5997  003A68  2A0B               	incf	(___flge@ff2+2)^0,f,c
  5998  003A6A  0E80               	movlw	128
  5999  003A6C  560C               	subfwb	(___flge@ff2+3)^0,f,c
  6000  003A6E                     l704:
  6001  003A6E  0E00               	movlw	0
  6002  003A70  1A05               	xorwf	___flge@ff1^0,f,c
  6003  003A72  0E00               	movlw	0
  6004  003A74  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  6005  003A76  0E00               	movlw	0
  6006  003A78  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  6007  003A7A  0E80               	movlw	128
  6008  003A7C  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  6009  003A7E  0E00               	movlw	0
  6010  003A80  1A09               	xorwf	___flge@ff2^0,f,c
  6011  003A82  0E00               	movlw	0
  6012  003A84  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  6013  003A86  0E00               	movlw	0
  6014  003A88  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  6015  003A8A  0E80               	movlw	128
  6016  003A8C  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  6017  003A8E  5009               	movf	___flge@ff2^0,w,c
  6018  003A90  5C05               	subwf	___flge@ff1^0,w,c
  6019  003A92  500A               	movf	(___flge@ff2+1)^0,w,c
  6020  003A94  5806               	subwfb	(___flge@ff1+1)^0,w,c
  6021  003A96  500B               	movf	(___flge@ff2+2)^0,w,c
  6022  003A98  5807               	subwfb	(___flge@ff1+2)^0,w,c
  6023  003A9A  500C               	movf	(___flge@ff2+3)^0,w,c
  6024  003A9C  5808               	subwfb	(___flge@ff1+3)^0,w,c
  6025  003A9E  B0D8               	btfsc	status,0,c
  6026  003AA0  EF54  F01D         	goto	u2701
  6027  003AA4  EF56  F01D         	goto	u2700
  6028  003AA8                     u2701:
  6029  003AA8  EF59  F01D         	goto	l2951
  6030  003AAC                     u2700:
  6031  003AAC  90D8               	bcf	status,0,c
  6032  003AAE  EF5A  F01D         	goto	l709
  6033  003AB2                     l2951:
  6034  003AB2  80D8               	bsf	status,0,c
  6035  003AB4                     l709:
  6036  003AB4  0012               	return		;funcret
  6037  003AB6                     __end_of___flge:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function ___xxtofl *****************
  6041 ;; Defined at:
  6042 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  sign            1    wreg     unsigned char 
  6045 ;;  val             4    4[COMRAM] long 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  sign            1   12[COMRAM] unsigned char 
  6048 ;;  arg             4   14[COMRAM] unsigned long 
  6049 ;;  exp             1   13[COMRAM] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  4    4[COMRAM] unsigned char 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;Total ram usage:       14 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 2
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_determine_color_new
  6070 ;;		_lumin
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text23
  6076  0032A8                     __ptext23:
  6077                           	callstack 0
  6078  0032A8                     ___xxtofl:
  6079                           	callstack 27
  6080                           
  6081                           ;incstack = 0
  6082                           ;___xxtofl@sign stored from wreg
  6083  0032A8  6E0D               	movwf	___xxtofl@sign^0,c
  6084  0032AA  500D               	movf	___xxtofl@sign^0,w,c
  6085  0032AC  B4D8               	btfsc	status,2,c
  6086  0032AE  EF5B  F019         	goto	u3681
  6087  0032B2  EF5D  F019         	goto	u3680
  6088  0032B6                     u3681:
  6089  0032B6  EF7F  F019         	goto	l1094
  6090  0032BA                     u3680:
  6091  0032BA  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6092  0032BC  EF64  F019         	goto	u3690
  6093  0032C0  EF62  F019         	goto	u3691
  6094  0032C4                     u3691:
  6095  0032C4  EF7F  F019         	goto	l1094
  6096  0032C8                     u3690:
  6097  0032C8  C005  F009         	movff	___xxtofl@val,??___xxtofl
  6098  0032CC  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  6099  0032D0  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  6100  0032D4  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  6101  0032D8  1E09               	comf	??___xxtofl^0,f,c
  6102  0032DA  1E0A               	comf	(??___xxtofl+1)^0,f,c
  6103  0032DC  1E0B               	comf	(??___xxtofl+2)^0,f,c
  6104  0032DE  1E0C               	comf	(??___xxtofl+3)^0,f,c
  6105  0032E0  2A09               	incf	??___xxtofl^0,f,c
  6106  0032E2  0E00               	movlw	0
  6107  0032E4  220A               	addwfc	(??___xxtofl+1)^0,f,c
  6108  0032E6  220B               	addwfc	(??___xxtofl+2)^0,f,c
  6109  0032E8  220C               	addwfc	(??___xxtofl+3)^0,f,c
  6110  0032EA  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  6111  0032EE  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  6112  0032F2  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  6113  0032F6  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  6114  0032FA  EF87  F019         	goto	l3581
  6115  0032FE                     l1094:
  6116  0032FE  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  6117  003302  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6118  003306  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6119  00330A  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6120  00330E                     l3581:
  6121  00330E  5005               	movf	___xxtofl@val^0,w,c
  6122  003310  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  6123  003312  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  6124  003314  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  6125  003316  A4D8               	btfss	status,2,c
  6126  003318  EF90  F019         	goto	u3701
  6127  00331C  EF92  F019         	goto	u3700
  6128  003320                     u3701:
  6129  003320  EF9C  F019         	goto	l3587
  6130  003324                     u3700:
  6131  003324  0E00               	movlw	0
  6132  003326  6E05               	movwf	?___xxtofl^0,c
  6133  003328  0E00               	movlw	0
  6134  00332A  6E06               	movwf	(?___xxtofl+1)^0,c
  6135  00332C  0E00               	movlw	0
  6136  00332E  6E07               	movwf	(?___xxtofl+2)^0,c
  6137  003330  0E00               	movlw	0
  6138  003332  6E08               	movwf	(?___xxtofl+3)^0,c
  6139  003334  EF2D  F01A         	goto	l1097
  6140  003338                     l3587:
  6141  003338  0E96               	movlw	150
  6142  00333A  6E0E               	movwf	___xxtofl@exp^0,c
  6143  00333C  EFA6  F019         	goto	l3591
  6144  003340                     l3589:
  6145  003340  2A0E               	incf	___xxtofl@exp^0,f,c
  6146  003342  90D8               	bcf	status,0,c
  6147  003344  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6148  003346  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6149  003348  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6150  00334A  320F               	rrcf	___xxtofl@arg^0,f,c
  6151  00334C                     l3591:
  6152  00334C  0E00               	movlw	0
  6153  00334E  140F               	andwf	___xxtofl@arg^0,w,c
  6154  003350  6E09               	movwf	??___xxtofl^0,c
  6155  003352  0E00               	movlw	0
  6156  003354  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6157  003356  6E0A               	movwf	(??___xxtofl+1)^0,c
  6158  003358  0E00               	movlw	0
  6159  00335A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6160  00335C  6E0B               	movwf	(??___xxtofl+2)^0,c
  6161  00335E  0EFE               	movlw	254
  6162  003360  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6163  003362  6E0C               	movwf	(??___xxtofl+3)^0,c
  6164  003364  5009               	movf	??___xxtofl^0,w,c
  6165  003366  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6166  003368  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6167  00336A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6168  00336C  A4D8               	btfss	status,2,c
  6169  00336E  EFBB  F019         	goto	u3711
  6170  003372  EFBD  F019         	goto	u3710
  6171  003376                     u3711:
  6172  003376  EFA0  F019         	goto	l3589
  6173  00337A                     u3710:
  6174  00337A  EFCB  F019         	goto	l1101
  6175  00337E                     l3593:
  6176  00337E  2A0E               	incf	___xxtofl@exp^0,f,c
  6177  003380  0E01               	movlw	1
  6178  003382  260F               	addwf	___xxtofl@arg^0,f,c
  6179  003384  0E00               	movlw	0
  6180  003386  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  6181  003388  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  6182  00338A  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  6183  00338C  90D8               	bcf	status,0,c
  6184  00338E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  6185  003390  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  6186  003392  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  6187  003394  320F               	rrcf	___xxtofl@arg^0,f,c
  6188  003396                     l1101:
  6189  003396  0E00               	movlw	0
  6190  003398  140F               	andwf	___xxtofl@arg^0,w,c
  6191  00339A  6E09               	movwf	??___xxtofl^0,c
  6192  00339C  0E00               	movlw	0
  6193  00339E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  6194  0033A0  6E0A               	movwf	(??___xxtofl+1)^0,c
  6195  0033A2  0E00               	movlw	0
  6196  0033A4  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  6197  0033A6  6E0B               	movwf	(??___xxtofl+2)^0,c
  6198  0033A8  0EFF               	movlw	255
  6199  0033AA  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  6200  0033AC  6E0C               	movwf	(??___xxtofl+3)^0,c
  6201  0033AE  5009               	movf	??___xxtofl^0,w,c
  6202  0033B0  100A               	iorwf	(??___xxtofl+1)^0,w,c
  6203  0033B2  100B               	iorwf	(??___xxtofl+2)^0,w,c
  6204  0033B4  100C               	iorwf	(??___xxtofl+3)^0,w,c
  6205  0033B6  A4D8               	btfss	status,2,c
  6206  0033B8  EFE0  F019         	goto	u3721
  6207  0033BC  EFE2  F019         	goto	u3720
  6208  0033C0                     u3721:
  6209  0033C0  EFBF  F019         	goto	l3593
  6210  0033C4                     u3720:
  6211  0033C4  EFEA  F019         	goto	l3601
  6212  0033C8                     l3599:
  6213  0033C8  060E               	decf	___xxtofl@exp^0,f,c
  6214  0033CA  90D8               	bcf	status,0,c
  6215  0033CC  360F               	rlcf	___xxtofl@arg^0,f,c
  6216  0033CE  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  6217  0033D0  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  6218  0033D2  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  6219  0033D4                     l3601:
  6220  0033D4  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  6221  0033D6  EFEF  F019         	goto	u3731
  6222  0033DA  EFF1  F019         	goto	u3730
  6223  0033DE                     u3731:
  6224  0033DE  EFF9  F019         	goto	l1108
  6225  0033E2                     u3730:
  6226  0033E2  0E02               	movlw	2
  6227  0033E4  600E               	cpfslt	___xxtofl@exp^0,c
  6228  0033E6  EFF7  F019         	goto	u3741
  6229  0033EA  EFF9  F019         	goto	u3740
  6230  0033EE                     u3741:
  6231  0033EE  EFE4  F019         	goto	l3599
  6232  0033F2                     u3740:
  6233  0033F2                     l1108:
  6234  0033F2  B00E               	btfsc	___xxtofl@exp^0,0,c
  6235  0033F4  EFFE  F019         	goto	u3751
  6236  0033F8  EF00  F01A         	goto	u3750
  6237  0033FC                     u3751:
  6238  0033FC  EF01  F01A         	goto	l3607
  6239  003400                     u3750:
  6240  003400  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  6241  003402                     l3607:
  6242  003402  90D8               	bcf	status,0,c
  6243  003404  320E               	rrcf	___xxtofl@exp^0,f,c
  6244  003406  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  6245  00340A  6A0A               	clrf	(??___xxtofl+1)^0,c
  6246  00340C  6A0B               	clrf	(??___xxtofl+2)^0,c
  6247  00340E  6A0C               	clrf	(??___xxtofl+3)^0,c
  6248  003410  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  6249  003414  6A0B               	clrf	(??___xxtofl+2)^0,c
  6250  003416  6A0A               	clrf	(??___xxtofl+1)^0,c
  6251  003418  6A09               	clrf	??___xxtofl^0,c
  6252  00341A  5009               	movf	??___xxtofl^0,w,c
  6253  00341C  120F               	iorwf	___xxtofl@arg^0,f,c
  6254  00341E  500A               	movf	(??___xxtofl+1)^0,w,c
  6255  003420  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  6256  003422  500B               	movf	(??___xxtofl+2)^0,w,c
  6257  003424  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  6258  003426  500C               	movf	(??___xxtofl+3)^0,w,c
  6259  003428  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  6260  00342A  500D               	movf	___xxtofl@sign^0,w,c
  6261  00342C  B4D8               	btfsc	status,2,c
  6262  00342E  EF1B  F01A         	goto	u3761
  6263  003432  EF1D  F01A         	goto	u3760
  6264  003436                     u3761:
  6265  003436  EF25  F01A         	goto	l3617
  6266  00343A                     u3760:
  6267  00343A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  6268  00343C  EF24  F01A         	goto	u3770
  6269  003440  EF22  F01A         	goto	u3771
  6270  003444                     u3771:
  6271  003444  EF25  F01A         	goto	l3617
  6272  003448                     u3770:
  6273  003448  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  6274  00344A                     l3617:
  6275  00344A  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  6276  00344E  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  6277  003452  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  6278  003456  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  6279  00345A                     l1097:
  6280  00345A  0012               	return		;funcret
  6281  00345C                     __end_of___xxtofl:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function ___fltol *****************
  6285 ;; Defined at:
  6286 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  f1              4    0[BANK0 ] unsigned char 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  exp1            1   85[COMRAM] unsigned char 
  6291 ;;  sign1           1   84[COMRAM] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  4    0[BANK0 ] long 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;Total ram usage:       10 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 2
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_determine_color_new
  6312 ;;		_lumin
  6313 ;;		_main
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text24
  6318  0038AA                     __ptext24:
  6319                           	callstack 0
  6320  0038AA                     ___fltol:
  6321                           	callstack 27
  6322  0038AA  0100               	movlb	0	; () banked
  6323  0038AC  359E               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6324  0038AE  359F               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6325  0038B0  6E56               	movwf	___fltol@exp1^0,c
  6326  0038B2  5056               	movf	___fltol@exp1^0,w,c
  6327  0038B4  A4D8               	btfss	status,2,c
  6328  0038B6  EF5F  F01C         	goto	u4741
  6329  0038BA  EF61  F01C         	goto	u4740
  6330  0038BE                     u4741:
  6331  0038BE  EF6B  F01C         	goto	l4271
  6332  0038C2                     u4740:
  6333  0038C2                     l4267:
  6334                           
  6335                           ; BSR set to: 0
  6336  0038C2  0E00               	movlw	0
  6337  0038C4  6F9C               	movwf	?___fltol& (0+255),b
  6338  0038C6  0E00               	movlw	0
  6339  0038C8  6F9D               	movwf	(?___fltol+1)& (0+255),b
  6340  0038CA  0E00               	movlw	0
  6341  0038CC  6F9E               	movwf	(?___fltol+2)& (0+255),b
  6342  0038CE  0E00               	movlw	0
  6343  0038D0  6F9F               	movwf	(?___fltol+3)& (0+255),b
  6344  0038D2  EFD8  F01C         	goto	l736
  6345  0038D6                     l4271:
  6346                           
  6347                           ; BSR set to: 0
  6348  0038D6  C09C  F0A0         	movff	___fltol@f1,??___fltol
  6349  0038DA  C09D  F0A1         	movff	___fltol@f1+1,??___fltol+1
  6350  0038DE  C09E  F0A2         	movff	___fltol@f1+2,??___fltol+2
  6351  0038E2  C09F  F0A3         	movff	___fltol@f1+3,??___fltol+3
  6352  0038E6  0E20               	movlw	32
  6353  0038E8  EF7B  F01C         	goto	u4750
  6354  0038EC                     u4755:
  6355  0038EC  90D8               	bcf	status,0,c
  6356  0038EE  33A3               	rrcf	(??___fltol+3)& (0+255),f,b
  6357  0038F0  33A2               	rrcf	(??___fltol+2)& (0+255),f,b
  6358  0038F2  33A1               	rrcf	(??___fltol+1)& (0+255),f,b
  6359  0038F4  33A0               	rrcf	??___fltol& (0+255),f,b
  6360  0038F6                     u4750:
  6361  0038F6  2EE8               	decfsz	wreg,f,c
  6362  0038F8  EF76  F01C         	goto	u4755
  6363  0038FC  51A0               	movf	??___fltol& (0+255),w,b
  6364  0038FE  6E55               	movwf	___fltol@sign1^0,c
  6365  003900                     
  6366                           ; BSR set to: 0
  6367  003900  8F9E               	bsf	(___fltol@f1+2)& (0+255),7,b
  6368  003902                     
  6369                           ; BSR set to: 0
  6370  003902  0EFF               	movlw	255
  6371  003904  179C               	andwf	___fltol@f1& (0+255),f,b
  6372  003906  0EFF               	movlw	255
  6373  003908  179D               	andwf	(___fltol@f1+1)& (0+255),f,b
  6374  00390A  0EFF               	movlw	255
  6375  00390C  179E               	andwf	(___fltol@f1+2)& (0+255),f,b
  6376  00390E  0E00               	movlw	0
  6377  003910  179F               	andwf	(___fltol@f1+3)& (0+255),f,b
  6378  003912                     
  6379                           ; BSR set to: 0
  6380  003912  0E96               	movlw	150
  6381  003914  5E56               	subwf	___fltol@exp1^0,f,c
  6382  003916                     
  6383                           ; BSR set to: 0
  6384  003916  BE56               	btfsc	___fltol@exp1^0,7,c
  6385  003918  EF92  F01C         	goto	u4760
  6386  00391C  EF90  F01C         	goto	u4761
  6387  003920                     u4761:
  6388  003920  EFA8  F01C         	goto	l4291
  6389  003924                     u4760:
  6390  003924                     
  6391                           ; BSR set to: 0
  6392  003924  5056               	movf	___fltol@exp1^0,w,c
  6393  003926  0A80               	xorlw	128
  6394  003928  0F97               	addlw	151
  6395  00392A  B0D8               	btfsc	status,0,c
  6396  00392C  EF9A  F01C         	goto	u4771
  6397  003930  EF9C  F01C         	goto	u4770
  6398  003934                     u4771:
  6399  003934  EF9E  F01C         	goto	l4287
  6400  003938                     u4770:
  6401  003938  EF61  F01C         	goto	l4267
  6402  00393C                     l4287:
  6403                           
  6404                           ; BSR set to: 0
  6405  00393C  90D8               	bcf	status,0,c
  6406  00393E  339F               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6407  003940  339E               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6408  003942  339D               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6409  003944  339C               	rrcf	___fltol@f1& (0+255),f,b
  6410  003946                     
  6411                           ; BSR set to: 0
  6412  003946  3E56               	incfsz	___fltol@exp1^0,f,c
  6413  003948  EF9E  F01C         	goto	l4287
  6414  00394C  EFC0  F01C         	goto	l4301
  6415  003950                     l4291:
  6416                           
  6417                           ; BSR set to: 0
  6418  003950  0E1F               	movlw	31
  6419  003952  6456               	cpfsgt	___fltol@exp1^0,c
  6420  003954  EFAE  F01C         	goto	u4781
  6421  003958  EFB0  F01C         	goto	u4780
  6422  00395C                     u4781:
  6423  00395C  EFB8  F01C         	goto	l4299
  6424  003960                     u4780:
  6425  003960  EF61  F01C         	goto	l4267
  6426  003964                     l4297:
  6427                           
  6428                           ; BSR set to: 0
  6429  003964  90D8               	bcf	status,0,c
  6430  003966  379C               	rlcf	___fltol@f1& (0+255),f,b
  6431  003968  379D               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6432  00396A  379E               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6433  00396C  379F               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6434  00396E  0656               	decf	___fltol@exp1^0,f,c
  6435  003970                     l4299:
  6436                           
  6437                           ; BSR set to: 0
  6438  003970  5056               	movf	___fltol@exp1^0,w,c
  6439  003972  A4D8               	btfss	status,2,c
  6440  003974  EFBE  F01C         	goto	u4791
  6441  003978  EFC0  F01C         	goto	u4790
  6442  00397C                     u4791:
  6443  00397C  EFB2  F01C         	goto	l4297
  6444  003980                     u4790:
  6445  003980                     l4301:
  6446                           
  6447                           ; BSR set to: 0
  6448  003980  5055               	movf	___fltol@sign1^0,w,c
  6449  003982  B4D8               	btfsc	status,2,c
  6450  003984  EFC6  F01C         	goto	u4801
  6451  003988  EFC8  F01C         	goto	u4800
  6452  00398C                     u4801:
  6453  00398C  EFD0  F01C         	goto	l4305
  6454  003990                     u4800:
  6455  003990                     
  6456                           ; BSR set to: 0
  6457  003990  1F9F               	comf	(___fltol@f1+3)& (0+255),f,b
  6458  003992  1F9E               	comf	(___fltol@f1+2)& (0+255),f,b
  6459  003994  1F9D               	comf	(___fltol@f1+1)& (0+255),f,b
  6460  003996  6D9C               	negf	___fltol@f1& (0+255),b
  6461  003998  0E00               	movlw	0
  6462  00399A  239D               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6463  00399C  239E               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6464  00399E  239F               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6465  0039A0                     l4305:
  6466                           
  6467                           ; BSR set to: 0
  6468  0039A0  C09C  F09C         	movff	___fltol@f1,?___fltol
  6469  0039A4  C09D  F09D         	movff	___fltol@f1+1,?___fltol+1
  6470  0039A8  C09E  F09E         	movff	___fltol@f1+2,?___fltol+2
  6471  0039AC  C09F  F09F         	movff	___fltol@f1+3,?___fltol+3
  6472  0039B0                     l736:
  6473                           
  6474                           ; BSR set to: 0
  6475  0039B0  0012               	return		;funcret
  6476  0039B2                     __end_of___fltol:
  6477                           	callstack 0
  6478                           
  6479 ;; *************** function ___flmul *****************
  6480 ;; Defined at:
  6481 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  b               4   43[COMRAM] long 
  6484 ;;  a               4   47[COMRAM] long 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  prod            4   62[COMRAM] struct .
  6487 ;;  grs             4   56[COMRAM] unsigned long 
  6488 ;;  temp            2   66[COMRAM] struct .
  6489 ;;  bexp            1   61[COMRAM] unsigned char 
  6490 ;;  aexp            1   60[COMRAM] unsigned char 
  6491 ;;  sign            1   55[COMRAM] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  4   43[COMRAM] unsigned char 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, prodl, prodh
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;Total ram usage:       25 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 2
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_determine_color_new
  6512 ;;		_lumin
  6513 ;;		_main
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text25
  6518  00264E                     __ptext25:
  6519                           	callstack 0
  6520  00264E                     ___flmul:
  6521                           	callstack 27
  6522  00264E  502F               	movf	(___flmul@b+3)^0,w,c
  6523  002650  0B80               	andlw	128
  6524  002652  6E38               	movwf	___flmul@sign^0,c
  6525  002654  502F               	movf	(___flmul@b+3)^0,w,c
  6526  002656  242F               	addwf	(___flmul@b+3)^0,w,c
  6527  002658  6E3E               	movwf	___flmul@bexp^0,c
  6528  00265A  AE2E               	btfss	(___flmul@b+2)^0,7,c
  6529  00265C  EF32  F013         	goto	u3421
  6530  002660  EF34  F013         	goto	u3420
  6531  002664                     u3421:
  6532  002664  EF35  F013         	goto	l3407
  6533  002668                     u3420:
  6534  002668  803E               	bsf	___flmul@bexp^0,0,c
  6535  00266A                     l3407:
  6536  00266A  503E               	movf	___flmul@bexp^0,w,c
  6537  00266C  B4D8               	btfsc	status,2,c
  6538  00266E  EF3B  F013         	goto	u3431
  6539  002672  EF3D  F013         	goto	u3430
  6540  002676                     u3431:
  6541  002676  EF50  F013         	goto	l3415
  6542  00267A                     u3430:
  6543  00267A  283E               	incf	___flmul@bexp^0,w,c
  6544  00267C  A4D8               	btfss	status,2,c
  6545  00267E  EF43  F013         	goto	u3441
  6546  002682  EF45  F013         	goto	u3440
  6547  002686                     u3441:
  6548  002686  EF4D  F013         	goto	l3413
  6549  00268A                     u3440:
  6550  00268A  0E00               	movlw	0
  6551  00268C  6E2C               	movwf	___flmul@b^0,c
  6552  00268E  0E00               	movlw	0
  6553  002690  6E2D               	movwf	(___flmul@b+1)^0,c
  6554  002692  0E00               	movlw	0
  6555  002694  6E2E               	movwf	(___flmul@b+2)^0,c
  6556  002696  0E00               	movlw	0
  6557  002698  6E2F               	movwf	(___flmul@b+3)^0,c
  6558  00269A                     l3413:
  6559  00269A  8E2E               	bsf	(___flmul@b+2)^0,7,c
  6560  00269C  EF58  F013         	goto	l3417
  6561  0026A0                     l3415:
  6562  0026A0  0E00               	movlw	0
  6563  0026A2  6E2C               	movwf	___flmul@b^0,c
  6564  0026A4  0E00               	movlw	0
  6565  0026A6  6E2D               	movwf	(___flmul@b+1)^0,c
  6566  0026A8  0E00               	movlw	0
  6567  0026AA  6E2E               	movwf	(___flmul@b+2)^0,c
  6568  0026AC  0E00               	movlw	0
  6569  0026AE  6E2F               	movwf	(___flmul@b+3)^0,c
  6570  0026B0                     l3417:
  6571  0026B0  5033               	movf	(___flmul@a+3)^0,w,c
  6572  0026B2  0B80               	andlw	128
  6573  0026B4  1A38               	xorwf	___flmul@sign^0,f,c
  6574  0026B6  5033               	movf	(___flmul@a+3)^0,w,c
  6575  0026B8  2433               	addwf	(___flmul@a+3)^0,w,c
  6576  0026BA  6E3D               	movwf	___flmul@aexp^0,c
  6577  0026BC  AE32               	btfss	(___flmul@a+2)^0,7,c
  6578  0026BE  EF63  F013         	goto	u3451
  6579  0026C2  EF65  F013         	goto	u3450
  6580  0026C6                     u3451:
  6581  0026C6  EF66  F013         	goto	l3425
  6582  0026CA                     u3450:
  6583  0026CA  803D               	bsf	___flmul@aexp^0,0,c
  6584  0026CC                     l3425:
  6585  0026CC  503D               	movf	___flmul@aexp^0,w,c
  6586  0026CE  B4D8               	btfsc	status,2,c
  6587  0026D0  EF6C  F013         	goto	u3461
  6588  0026D4  EF6E  F013         	goto	u3460
  6589  0026D8                     u3461:
  6590  0026D8  EF81  F013         	goto	l3433
  6591  0026DC                     u3460:
  6592  0026DC  283D               	incf	___flmul@aexp^0,w,c
  6593  0026DE  A4D8               	btfss	status,2,c
  6594  0026E0  EF74  F013         	goto	u3471
  6595  0026E4  EF76  F013         	goto	u3470
  6596  0026E8                     u3471:
  6597  0026E8  EF7E  F013         	goto	l3431
  6598  0026EC                     u3470:
  6599  0026EC  0E00               	movlw	0
  6600  0026EE  6E30               	movwf	___flmul@a^0,c
  6601  0026F0  0E00               	movlw	0
  6602  0026F2  6E31               	movwf	(___flmul@a+1)^0,c
  6603  0026F4  0E00               	movlw	0
  6604  0026F6  6E32               	movwf	(___flmul@a+2)^0,c
  6605  0026F8  0E00               	movlw	0
  6606  0026FA  6E33               	movwf	(___flmul@a+3)^0,c
  6607  0026FC                     l3431:
  6608  0026FC  8E32               	bsf	(___flmul@a+2)^0,7,c
  6609  0026FE  EF89  F013         	goto	l1053
  6610  002702                     l3433:
  6611  002702  0E00               	movlw	0
  6612  002704  6E30               	movwf	___flmul@a^0,c
  6613  002706  0E00               	movlw	0
  6614  002708  6E31               	movwf	(___flmul@a+1)^0,c
  6615  00270A  0E00               	movlw	0
  6616  00270C  6E32               	movwf	(___flmul@a+2)^0,c
  6617  00270E  0E00               	movlw	0
  6618  002710  6E33               	movwf	(___flmul@a+3)^0,c
  6619  002712                     l1053:
  6620  002712  503D               	movf	___flmul@aexp^0,w,c
  6621  002714  B4D8               	btfsc	status,2,c
  6622  002716  EF8F  F013         	goto	u3481
  6623  00271A  EF91  F013         	goto	u3480
  6624  00271E                     u3481:
  6625  00271E  EF99  F013         	goto	l3437
  6626  002722                     u3480:
  6627  002722  503E               	movf	___flmul@bexp^0,w,c
  6628  002724  A4D8               	btfss	status,2,c
  6629  002726  EF97  F013         	goto	u3491
  6630  00272A  EF99  F013         	goto	u3490
  6631  00272E                     u3491:
  6632  00272E  EFA3  F013         	goto	l3441
  6633  002732                     u3490:
  6634  002732                     l3437:
  6635  002732  0E00               	movlw	0
  6636  002734  6E2C               	movwf	?___flmul^0,c
  6637  002736  0E00               	movlw	0
  6638  002738  6E2D               	movwf	(?___flmul+1)^0,c
  6639  00273A  0E00               	movlw	0
  6640  00273C  6E2E               	movwf	(?___flmul+2)^0,c
  6641  00273E  0E00               	movlw	0
  6642  002740  6E2F               	movwf	(?___flmul+3)^0,c
  6643  002742  EF3B  F015         	goto	l1057
  6644  002746                     l3441:
  6645  002746  5032               	movf	(___flmul@a+2)^0,w,c
  6646  002748  022C               	mulwf	___flmul@b^0,c
  6647  00274A  CFF3 F043          	movff	prodl,___flmul@temp
  6648  00274E  CFF4 F044          	movff	prodh,___flmul@temp+1
  6649  002752  5043               	movf	___flmul@temp^0,w,c
  6650  002754  6E39               	movwf	___flmul@grs^0,c
  6651  002756  6A3A               	clrf	(___flmul@grs+1)^0,c
  6652  002758  6A3B               	clrf	(___flmul@grs+2)^0,c
  6653  00275A  6A3C               	clrf	(___flmul@grs+3)^0,c
  6654  00275C  5044               	movf	(___flmul@temp+1)^0,w,c
  6655  00275E  6E3F               	movwf	___flmul@prod^0,c
  6656  002760  6A40               	clrf	(___flmul@prod+1)^0,c
  6657  002762  6A41               	clrf	(___flmul@prod+2)^0,c
  6658  002764  6A42               	clrf	(___flmul@prod+3)^0,c
  6659  002766  5031               	movf	(___flmul@a+1)^0,w,c
  6660  002768  022D               	mulwf	(___flmul@b+1)^0,c
  6661  00276A  CFF3 F043          	movff	prodl,___flmul@temp
  6662  00276E  CFF4 F044          	movff	prodh,___flmul@temp+1
  6663  002772  5043               	movf	___flmul@temp^0,w,c
  6664  002774  2639               	addwf	___flmul@grs^0,f,c
  6665  002776  0E00               	movlw	0
  6666  002778  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6667  00277A  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6668  00277C  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6669  00277E  5044               	movf	(___flmul@temp+1)^0,w,c
  6670  002780  263F               	addwf	___flmul@prod^0,f,c
  6671  002782  0E00               	movlw	0
  6672  002784  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6673  002786  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6674  002788  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6675  00278A  5030               	movf	___flmul@a^0,w,c
  6676  00278C  022E               	mulwf	(___flmul@b+2)^0,c
  6677  00278E  CFF3 F043          	movff	prodl,___flmul@temp
  6678  002792  CFF4 F044          	movff	prodh,___flmul@temp+1
  6679  002796  5043               	movf	___flmul@temp^0,w,c
  6680  002798  2639               	addwf	___flmul@grs^0,f,c
  6681  00279A  0E00               	movlw	0
  6682  00279C  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6683  00279E  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6684  0027A0  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6685  0027A2  5044               	movf	(___flmul@temp+1)^0,w,c
  6686  0027A4  263F               	addwf	___flmul@prod^0,f,c
  6687  0027A6  0E00               	movlw	0
  6688  0027A8  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6689  0027AA  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6690  0027AC  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6691  0027AE  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6692  0027B2  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6693  0027B6  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6694  0027BA  6A39               	clrf	___flmul@grs^0,c
  6695  0027BC  5030               	movf	___flmul@a^0,w,c
  6696  0027BE  022D               	mulwf	(___flmul@b+1)^0,c
  6697  0027C0  CFF3 F043          	movff	prodl,___flmul@temp
  6698  0027C4  CFF4 F044          	movff	prodh,___flmul@temp+1
  6699  0027C8  5043               	movf	___flmul@temp^0,w,c
  6700  0027CA  2639               	addwf	___flmul@grs^0,f,c
  6701  0027CC  5044               	movf	(___flmul@temp+1)^0,w,c
  6702  0027CE  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6703  0027D0  0E00               	movlw	0
  6704  0027D2  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6705  0027D4  0E00               	movlw	0
  6706  0027D6  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6707  0027D8  5031               	movf	(___flmul@a+1)^0,w,c
  6708  0027DA  022C               	mulwf	___flmul@b^0,c
  6709  0027DC  CFF3 F043          	movff	prodl,___flmul@temp
  6710  0027E0  CFF4 F044          	movff	prodh,___flmul@temp+1
  6711  0027E4  5043               	movf	___flmul@temp^0,w,c
  6712  0027E6  2639               	addwf	___flmul@grs^0,f,c
  6713  0027E8  5044               	movf	(___flmul@temp+1)^0,w,c
  6714  0027EA  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6715  0027EC  0E00               	movlw	0
  6716  0027EE  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6717  0027F0  0E00               	movlw	0
  6718  0027F2  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6719  0027F4  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6720  0027F8  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6721  0027FC  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6722  002800  6A39               	clrf	___flmul@grs^0,c
  6723  002802  5030               	movf	___flmul@a^0,w,c
  6724  002804  022C               	mulwf	___flmul@b^0,c
  6725  002806  CFF3 F043          	movff	prodl,___flmul@temp
  6726  00280A  CFF4 F044          	movff	prodh,___flmul@temp+1
  6727  00280E  5043               	movf	___flmul@temp^0,w,c
  6728  002810  2639               	addwf	___flmul@grs^0,f,c
  6729  002812  5044               	movf	(___flmul@temp+1)^0,w,c
  6730  002814  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6731  002816  0E00               	movlw	0
  6732  002818  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6733  00281A  0E00               	movlw	0
  6734  00281C  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6735  00281E  5032               	movf	(___flmul@a+2)^0,w,c
  6736  002820  022D               	mulwf	(___flmul@b+1)^0,c
  6737  002822  CFF3 F043          	movff	prodl,___flmul@temp
  6738  002826  CFF4 F044          	movff	prodh,___flmul@temp+1
  6739  00282A  5043               	movf	___flmul@temp^0,w,c
  6740  00282C  263F               	addwf	___flmul@prod^0,f,c
  6741  00282E  5044               	movf	(___flmul@temp+1)^0,w,c
  6742  002830  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6743  002832  0E00               	movlw	0
  6744  002834  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6745  002836  0E00               	movlw	0
  6746  002838  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6747  00283A  5031               	movf	(___flmul@a+1)^0,w,c
  6748  00283C  022E               	mulwf	(___flmul@b+2)^0,c
  6749  00283E  CFF3 F043          	movff	prodl,___flmul@temp
  6750  002842  CFF4 F044          	movff	prodh,___flmul@temp+1
  6751  002846  5043               	movf	___flmul@temp^0,w,c
  6752  002848  263F               	addwf	___flmul@prod^0,f,c
  6753  00284A  5044               	movf	(___flmul@temp+1)^0,w,c
  6754  00284C  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6755  00284E  0E00               	movlw	0
  6756  002850  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6757  002852  0E00               	movlw	0
  6758  002854  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6759  002856  5032               	movf	(___flmul@a+2)^0,w,c
  6760  002858  022E               	mulwf	(___flmul@b+2)^0,c
  6761  00285A  CFF3 F043          	movff	prodl,___flmul@temp
  6762  00285E  CFF4 F044          	movff	prodh,___flmul@temp+1
  6763  002862  5043               	movf	___flmul@temp^0,w,c
  6764  002864  6E34               	movwf	??___flmul^0,c
  6765  002866  5044               	movf	(___flmul@temp+1)^0,w,c
  6766  002868  6E35               	movwf	(??___flmul+1)^0,c
  6767  00286A  6A36               	clrf	(??___flmul+2)^0,c
  6768  00286C  6A37               	clrf	(??___flmul+3)^0,c
  6769  00286E  C036  F037         	movff	??___flmul+2,??___flmul+3
  6770  002872  C035  F036         	movff	??___flmul+1,??___flmul+2
  6771  002876  C034  F035         	movff	??___flmul,??___flmul+1
  6772  00287A  6A34               	clrf	??___flmul^0,c
  6773  00287C  5034               	movf	??___flmul^0,w,c
  6774  00287E  263F               	addwf	___flmul@prod^0,f,c
  6775  002880  5035               	movf	(??___flmul+1)^0,w,c
  6776  002882  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6777  002884  5036               	movf	(??___flmul+2)^0,w,c
  6778  002886  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6779  002888  5037               	movf	(??___flmul+3)^0,w,c
  6780  00288A  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6781  00288C  C039  F034         	movff	___flmul@grs,??___flmul
  6782  002890  C03A  F035         	movff	___flmul@grs+1,??___flmul+1
  6783  002894  C03B  F036         	movff	___flmul@grs+2,??___flmul+2
  6784  002898  C03C  F037         	movff	___flmul@grs+3,??___flmul+3
  6785  00289C  0E19               	movlw	25
  6786  00289E  EF56  F014         	goto	u3500
  6787  0028A2                     u3505:
  6788  0028A2  90D8               	bcf	status,0,c
  6789  0028A4  3237               	rrcf	(??___flmul+3)^0,f,c
  6790  0028A6  3236               	rrcf	(??___flmul+2)^0,f,c
  6791  0028A8  3235               	rrcf	(??___flmul+1)^0,f,c
  6792  0028AA  3234               	rrcf	??___flmul^0,f,c
  6793  0028AC                     u3500:
  6794  0028AC  2EE8               	decfsz	wreg,f,c
  6795  0028AE  EF51  F014         	goto	u3505
  6796  0028B2  5034               	movf	??___flmul^0,w,c
  6797  0028B4  263F               	addwf	___flmul@prod^0,f,c
  6798  0028B6  5035               	movf	(??___flmul+1)^0,w,c
  6799  0028B8  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6800  0028BA  5036               	movf	(??___flmul+2)^0,w,c
  6801  0028BC  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6802  0028BE  5037               	movf	(??___flmul+3)^0,w,c
  6803  0028C0  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6804  0028C2  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6805  0028C6  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6806  0028CA  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6807  0028CE  6A39               	clrf	___flmul@grs^0,c
  6808  0028D0  503D               	movf	___flmul@aexp^0,w,c
  6809  0028D2  C03E  F034         	movff	___flmul@bexp,??___flmul
  6810  0028D6  6A35               	clrf	(??___flmul+1)^0,c
  6811  0028D8  2634               	addwf	??___flmul^0,f,c
  6812  0028DA  0E00               	movlw	0
  6813  0028DC  2235               	addwfc	(??___flmul+1)^0,f,c
  6814  0028DE  0E82               	movlw	130
  6815  0028E0  2434               	addwf	??___flmul^0,w,c
  6816  0028E2  6E43               	movwf	___flmul@temp^0,c
  6817  0028E4  0EFF               	movlw	255
  6818  0028E6  2035               	addwfc	(??___flmul+1)^0,w,c
  6819  0028E8  6E44               	movwf	(___flmul@temp+1)^0,c
  6820  0028EA  EF8C  F014         	goto	l3489
  6821  0028EE                     l3483:
  6822  0028EE  90D8               	bcf	status,0,c
  6823  0028F0  363F               	rlcf	___flmul@prod^0,f,c
  6824  0028F2  3640               	rlcf	(___flmul@prod+1)^0,f,c
  6825  0028F4  3641               	rlcf	(___flmul@prod+2)^0,f,c
  6826  0028F6  3642               	rlcf	(___flmul@prod+3)^0,f,c
  6827  0028F8  AE3C               	btfss	(___flmul@grs+3)^0,7,c
  6828  0028FA  EF81  F014         	goto	u3511
  6829  0028FE  EF83  F014         	goto	u3510
  6830  002902                     u3511:
  6831  002902  EF84  F014         	goto	l1060
  6832  002906                     u3510:
  6833  002906  803F               	bsf	___flmul@prod^0,0,c
  6834  002908                     l1060:
  6835  002908  90D8               	bcf	status,0,c
  6836  00290A  3639               	rlcf	___flmul@grs^0,f,c
  6837  00290C  363A               	rlcf	(___flmul@grs+1)^0,f,c
  6838  00290E  363B               	rlcf	(___flmul@grs+2)^0,f,c
  6839  002910  363C               	rlcf	(___flmul@grs+3)^0,f,c
  6840  002912  0643               	decf	___flmul@temp^0,f,c
  6841  002914  A0D8               	btfss	status,0,c
  6842  002916  0644               	decf	(___flmul@temp+1)^0,f,c
  6843  002918                     l3489:
  6844  002918  AE41               	btfss	(___flmul@prod+2)^0,7,c
  6845  00291A  EF91  F014         	goto	u3521
  6846  00291E  EF93  F014         	goto	u3520
  6847  002922                     u3521:
  6848  002922  EF77  F014         	goto	l3483
  6849  002926                     u3520:
  6850  002926  0E00               	movlw	0
  6851  002928  6E3D               	movwf	___flmul@aexp^0,c
  6852  00292A  AE3C               	btfss	(___flmul@grs+3)^0,7,c
  6853  00292C  EF9A  F014         	goto	u3531
  6854  002930  EF9C  F014         	goto	u3530
  6855  002934                     u3531:
  6856  002934  EFC0  F014         	goto	l1062
  6857  002938                     u3530:
  6858  002938  0EFF               	movlw	255
  6859  00293A  1439               	andwf	___flmul@grs^0,w,c
  6860  00293C  6E34               	movwf	??___flmul^0,c
  6861  00293E  0EFF               	movlw	255
  6862  002940  143A               	andwf	(___flmul@grs+1)^0,w,c
  6863  002942  6E35               	movwf	(??___flmul+1)^0,c
  6864  002944  0EFF               	movlw	255
  6865  002946  143B               	andwf	(___flmul@grs+2)^0,w,c
  6866  002948  6E36               	movwf	(??___flmul+2)^0,c
  6867  00294A  0E7F               	movlw	127
  6868  00294C  143C               	andwf	(___flmul@grs+3)^0,w,c
  6869  00294E  6E37               	movwf	(??___flmul+3)^0,c
  6870  002950  5034               	movf	??___flmul^0,w,c
  6871  002952  1035               	iorwf	(??___flmul+1)^0,w,c
  6872  002954  1036               	iorwf	(??___flmul+2)^0,w,c
  6873  002956  1037               	iorwf	(??___flmul+3)^0,w,c
  6874  002958  B4D8               	btfsc	status,2,c
  6875  00295A  EFB1  F014         	goto	u3541
  6876  00295E  EFB3  F014         	goto	u3540
  6877  002962                     u3541:
  6878  002962  EFB7  F014         	goto	l1063
  6879  002966                     u3540:
  6880  002966                     l3497:
  6881  002966  0E01               	movlw	1
  6882  002968  6E3D               	movwf	___flmul@aexp^0,c
  6883  00296A  EFC0  F014         	goto	l1062
  6884  00296E                     l1063:
  6885  00296E  A03F               	btfss	___flmul@prod^0,0,c
  6886  002970  EFBC  F014         	goto	u3551
  6887  002974  EFBE  F014         	goto	u3550
  6888  002978                     u3551:
  6889  002978  EFC0  F014         	goto	l1062
  6890  00297C                     u3550:
  6891  00297C  EFB3  F014         	goto	l3497
  6892  002980                     l1062:
  6893  002980  503D               	movf	___flmul@aexp^0,w,c
  6894  002982  B4D8               	btfsc	status,2,c
  6895  002984  EFC6  F014         	goto	u3561
  6896  002988  EFC8  F014         	goto	u3560
  6897  00298C                     u3561:
  6898  00298C  EFEC  F014         	goto	l3509
  6899  002990                     u3560:
  6900  002990  0E01               	movlw	1
  6901  002992  263F               	addwf	___flmul@prod^0,f,c
  6902  002994  0E00               	movlw	0
  6903  002996  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6904  002998  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6905  00299A  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6906  00299C  A042               	btfss	(___flmul@prod+3)^0,0,c
  6907  00299E  EFD3  F014         	goto	u3571
  6908  0029A2  EFD5  F014         	goto	u3570
  6909  0029A6                     u3571:
  6910  0029A6  EFEC  F014         	goto	l3509
  6911  0029AA                     u3570:
  6912  0029AA  C03F  F034         	movff	___flmul@prod,??___flmul
  6913  0029AE  C040  F035         	movff	___flmul@prod+1,??___flmul+1
  6914  0029B2  C041  F036         	movff	___flmul@prod+2,??___flmul+2
  6915  0029B6  C042  F037         	movff	___flmul@prod+3,??___flmul+3
  6916  0029BA  3437               	rlcf	(??___flmul+3)^0,w,c
  6917  0029BC  3237               	rrcf	(??___flmul+3)^0,f,c
  6918  0029BE  3236               	rrcf	(??___flmul+2)^0,f,c
  6919  0029C0  3235               	rrcf	(??___flmul+1)^0,f,c
  6920  0029C2  3234               	rrcf	??___flmul^0,f,c
  6921  0029C4  C034  F03F         	movff	??___flmul,___flmul@prod
  6922  0029C8  C035  F040         	movff	??___flmul+1,___flmul@prod+1
  6923  0029CC  C036  F041         	movff	??___flmul+2,___flmul@prod+2
  6924  0029D0  C037  F042         	movff	??___flmul+3,___flmul@prod+3
  6925  0029D4  4A43               	infsnz	___flmul@temp^0,f,c
  6926  0029D6  2A44               	incf	(___flmul@temp+1)^0,f,c
  6927  0029D8                     l3509:
  6928  0029D8  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6929  0029DA  EFF7  F014         	goto	u3581
  6930  0029DE  5044               	movf	(___flmul@temp+1)^0,w,c
  6931  0029E0  E108               	bnz	u3580
  6932  0029E2  2843               	incf	___flmul@temp^0,w,c
  6933  0029E4  A0D8               	btfss	status,0,c
  6934  0029E6  EFF7  F014         	goto	u3581
  6935  0029EA  EFF9  F014         	goto	u3580
  6936  0029EE                     u3581:
  6937  0029EE  EF03  F015         	goto	l3513
  6938  0029F2                     u3580:
  6939  0029F2  0E00               	movlw	0
  6940  0029F4  6E3F               	movwf	___flmul@prod^0,c
  6941  0029F6  0E00               	movlw	0
  6942  0029F8  6E40               	movwf	(___flmul@prod+1)^0,c
  6943  0029FA  0E80               	movlw	128
  6944  0029FC  6E41               	movwf	(___flmul@prod+2)^0,c
  6945  0029FE  0E7F               	movlw	127
  6946  002A00  6E42               	movwf	(___flmul@prod+3)^0,c
  6947  002A02  EF31  F015         	goto	l3525
  6948  002A06                     l3513:
  6949  002A06  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6950  002A08  EF10  F015         	goto	u3590
  6951  002A0C  5044               	movf	(___flmul@temp+1)^0,w,c
  6952  002A0E  E106               	bnz	u3591
  6953  002A10  0443               	decf	___flmul@temp^0,w,c
  6954  002A12  B0D8               	btfsc	status,0,c
  6955  002A14  EF0E  F015         	goto	u3591
  6956  002A18  EF10  F015         	goto	u3590
  6957  002A1C                     u3591:
  6958  002A1C  EF1C  F015         	goto	l1070
  6959  002A20                     u3590:
  6960  002A20  0E00               	movlw	0
  6961  002A22  6E3F               	movwf	___flmul@prod^0,c
  6962  002A24  0E00               	movlw	0
  6963  002A26  6E40               	movwf	(___flmul@prod+1)^0,c
  6964  002A28  0E00               	movlw	0
  6965  002A2A  6E41               	movwf	(___flmul@prod+2)^0,c
  6966  002A2C  0E00               	movlw	0
  6967  002A2E  6E42               	movwf	(___flmul@prod+3)^0,c
  6968  002A30  0E00               	movlw	0
  6969  002A32  6E38               	movwf	___flmul@sign^0,c
  6970  002A34  EF31  F015         	goto	l3525
  6971  002A38                     l1070:
  6972  002A38  C043  F03E         	movff	___flmul@temp,___flmul@bexp
  6973  002A3C  0EFF               	movlw	255
  6974  002A3E  163F               	andwf	___flmul@prod^0,f,c
  6975  002A40  0EFF               	movlw	255
  6976  002A42  1640               	andwf	(___flmul@prod+1)^0,f,c
  6977  002A44  0E7F               	movlw	127
  6978  002A46  1641               	andwf	(___flmul@prod+2)^0,f,c
  6979  002A48  0E00               	movlw	0
  6980  002A4A  1642               	andwf	(___flmul@prod+3)^0,f,c
  6981  002A4C  A03E               	btfss	___flmul@bexp^0,0,c
  6982  002A4E  EF2B  F015         	goto	u3601
  6983  002A52  EF2D  F015         	goto	u3600
  6984  002A56                     u3601:
  6985  002A56  EF2E  F015         	goto	l3523
  6986  002A5A                     u3600:
  6987  002A5A  8E41               	bsf	(___flmul@prod+2)^0,7,c
  6988  002A5C                     l3523:
  6989  002A5C  90D8               	bcf	status,0,c
  6990  002A5E  303E               	rrcf	___flmul@bexp^0,w,c
  6991  002A60  6E42               	movwf	(___flmul@prod+3)^0,c
  6992  002A62                     l3525:
  6993  002A62  5038               	movf	___flmul@sign^0,w,c
  6994  002A64  1242               	iorwf	(___flmul@prod+3)^0,f,c
  6995  002A66  C03F  F02C         	movff	___flmul@prod,?___flmul
  6996  002A6A  C040  F02D         	movff	___flmul@prod+1,?___flmul+1
  6997  002A6E  C041  F02E         	movff	___flmul@prod+2,?___flmul+2
  6998  002A72  C042  F02F         	movff	___flmul@prod+3,?___flmul+3
  6999  002A76                     l1057:
  7000  002A76  0012               	return		;funcret
  7001  002A78                     __end_of___flmul:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function ___fldiv *****************
  7005 ;; Defined at:
  7006 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  b               4   18[COMRAM] unsigned char 
  7009 ;;  a               4   22[COMRAM] unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  grs             4   37[COMRAM] unsigned long 
  7012 ;;  rem             4   30[COMRAM] unsigned long 
  7013 ;;  new_exp         2   35[COMRAM] short 
  7014 ;;  aexp            1   42[COMRAM] unsigned char 
  7015 ;;  bexp            1   41[COMRAM] unsigned char 
  7016 ;;  sign            1   34[COMRAM] unsigned char 
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  4   18[COMRAM] unsigned char 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;Total ram usage:       25 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; Hardware stack levels required when called: 2
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_determine_color_new
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text26
  7042  002A78                     __ptext26:
  7043                           	callstack 0
  7044  002A78                     ___fldiv:
  7045                           	callstack 27
  7046  002A78  5016               	movf	(___fldiv@b+3)^0,w,c
  7047  002A7A  0B80               	andlw	128
  7048  002A7C  6E23               	movwf	___fldiv@sign^0,c
  7049  002A7E  5016               	movf	(___fldiv@b+3)^0,w,c
  7050  002A80  2416               	addwf	(___fldiv@b+3)^0,w,c
  7051  002A82  6E2A               	movwf	___fldiv@bexp^0,c
  7052  002A84  AE15               	btfss	(___fldiv@b+2)^0,7,c
  7053  002A86  EF47  F015         	goto	u3191
  7054  002A8A  EF49  F015         	goto	u3190
  7055  002A8E                     u3191:
  7056  002A8E  EF4A  F015         	goto	l3269
  7057  002A92                     u3190:
  7058  002A92  802A               	bsf	___fldiv@bexp^0,0,c
  7059  002A94                     l3269:
  7060  002A94  502A               	movf	___fldiv@bexp^0,w,c
  7061  002A96  B4D8               	btfsc	status,2,c
  7062  002A98  EF50  F015         	goto	u3201
  7063  002A9C  EF52  F015         	goto	u3200
  7064  002AA0                     u3201:
  7065  002AA0  EF67  F015         	goto	l3279
  7066  002AA4                     u3200:
  7067  002AA4  282A               	incf	___fldiv@bexp^0,w,c
  7068  002AA6  A4D8               	btfss	status,2,c
  7069  002AA8  EF58  F015         	goto	u3211
  7070  002AAC  EF5A  F015         	goto	u3210
  7071  002AB0                     u3211:
  7072  002AB0  EF62  F015         	goto	l3275
  7073  002AB4                     u3210:
  7074  002AB4  0E00               	movlw	0
  7075  002AB6  6E13               	movwf	___fldiv@b^0,c
  7076  002AB8  0E00               	movlw	0
  7077  002ABA  6E14               	movwf	(___fldiv@b+1)^0,c
  7078  002ABC  0E00               	movlw	0
  7079  002ABE  6E15               	movwf	(___fldiv@b+2)^0,c
  7080  002AC0  0E00               	movlw	0
  7081  002AC2  6E16               	movwf	(___fldiv@b+3)^0,c
  7082  002AC4                     l3275:
  7083  002AC4  8E15               	bsf	(___fldiv@b+2)^0,7,c
  7084  002AC6  0E00               	movlw	0
  7085  002AC8  6E16               	movwf	(___fldiv@b+3)^0,c
  7086  002ACA  EF6F  F015         	goto	l3281
  7087  002ACE                     l3279:
  7088  002ACE  0E00               	movlw	0
  7089  002AD0  6E13               	movwf	___fldiv@b^0,c
  7090  002AD2  0E00               	movlw	0
  7091  002AD4  6E14               	movwf	(___fldiv@b+1)^0,c
  7092  002AD6  0E00               	movlw	0
  7093  002AD8  6E15               	movwf	(___fldiv@b+2)^0,c
  7094  002ADA  0E00               	movlw	0
  7095  002ADC  6E16               	movwf	(___fldiv@b+3)^0,c
  7096  002ADE                     l3281:
  7097  002ADE  501A               	movf	(___fldiv@a+3)^0,w,c
  7098  002AE0  0B80               	andlw	128
  7099  002AE2  1A23               	xorwf	___fldiv@sign^0,f,c
  7100  002AE4  501A               	movf	(___fldiv@a+3)^0,w,c
  7101  002AE6  241A               	addwf	(___fldiv@a+3)^0,w,c
  7102  002AE8  6E2B               	movwf	___fldiv@aexp^0,c
  7103  002AEA  AE19               	btfss	(___fldiv@a+2)^0,7,c
  7104  002AEC  EF7A  F015         	goto	u3221
  7105  002AF0  EF7C  F015         	goto	u3220
  7106  002AF4                     u3221:
  7107  002AF4  EF7D  F015         	goto	l3289
  7108  002AF8                     u3220:
  7109  002AF8  802B               	bsf	___fldiv@aexp^0,0,c
  7110  002AFA                     l3289:
  7111  002AFA  502B               	movf	___fldiv@aexp^0,w,c
  7112  002AFC  B4D8               	btfsc	status,2,c
  7113  002AFE  EF83  F015         	goto	u3231
  7114  002B02  EF85  F015         	goto	u3230
  7115  002B06                     u3231:
  7116  002B06  EF9A  F015         	goto	l3299
  7117  002B0A                     u3230:
  7118  002B0A  282B               	incf	___fldiv@aexp^0,w,c
  7119  002B0C  A4D8               	btfss	status,2,c
  7120  002B0E  EF8B  F015         	goto	u3241
  7121  002B12  EF8D  F015         	goto	u3240
  7122  002B16                     u3241:
  7123  002B16  EF95  F015         	goto	l3295
  7124  002B1A                     u3240:
  7125  002B1A  0E00               	movlw	0
  7126  002B1C  6E17               	movwf	___fldiv@a^0,c
  7127  002B1E  0E00               	movlw	0
  7128  002B20  6E18               	movwf	(___fldiv@a+1)^0,c
  7129  002B22  0E00               	movlw	0
  7130  002B24  6E19               	movwf	(___fldiv@a+2)^0,c
  7131  002B26  0E00               	movlw	0
  7132  002B28  6E1A               	movwf	(___fldiv@a+3)^0,c
  7133  002B2A                     l3295:
  7134  002B2A  8E19               	bsf	(___fldiv@a+2)^0,7,c
  7135  002B2C  0E00               	movlw	0
  7136  002B2E  6E1A               	movwf	(___fldiv@a+3)^0,c
  7137  002B30  EFA2  F015         	goto	l3301
  7138  002B34                     l3299:
  7139  002B34  0E00               	movlw	0
  7140  002B36  6E17               	movwf	___fldiv@a^0,c
  7141  002B38  0E00               	movlw	0
  7142  002B3A  6E18               	movwf	(___fldiv@a+1)^0,c
  7143  002B3C  0E00               	movlw	0
  7144  002B3E  6E19               	movwf	(___fldiv@a+2)^0,c
  7145  002B40  0E00               	movlw	0
  7146  002B42  6E1A               	movwf	(___fldiv@a+3)^0,c
  7147  002B44                     l3301:
  7148  002B44  5017               	movf	___fldiv@a^0,w,c
  7149  002B46  1018               	iorwf	(___fldiv@a+1)^0,w,c
  7150  002B48  1019               	iorwf	(___fldiv@a+2)^0,w,c
  7151  002B4A  101A               	iorwf	(___fldiv@a+3)^0,w,c
  7152  002B4C  A4D8               	btfss	status,2,c
  7153  002B4E  EFAB  F015         	goto	u3251
  7154  002B52  EFAD  F015         	goto	u3250
  7155  002B56                     u3251:
  7156  002B56  EFC5  F015         	goto	l3313
  7157  002B5A                     u3250:
  7158  002B5A  0E00               	movlw	0
  7159  002B5C  6E13               	movwf	___fldiv@b^0,c
  7160  002B5E  0E00               	movlw	0
  7161  002B60  6E14               	movwf	(___fldiv@b+1)^0,c
  7162  002B62  0E00               	movlw	0
  7163  002B64  6E15               	movwf	(___fldiv@b+2)^0,c
  7164  002B66  0E00               	movlw	0
  7165  002B68  6E16               	movwf	(___fldiv@b+3)^0,c
  7166  002B6A  0E80               	movlw	128
  7167  002B6C  1215               	iorwf	(___fldiv@b+2)^0,f,c
  7168  002B6E  0E7F               	movlw	127
  7169  002B70  1216               	iorwf	(___fldiv@b+3)^0,f,c
  7170  002B72                     l3307:
  7171  002B72  5023               	movf	___fldiv@sign^0,w,c
  7172  002B74  1216               	iorwf	(___fldiv@b+3)^0,f,c
  7173  002B76  C013  F013         	movff	___fldiv@b,?___fldiv
  7174  002B7A  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
  7175  002B7E  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
  7176  002B82  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
  7177  002B86  EF08  F017         	goto	l1021
  7178  002B8A                     l3313:
  7179  002B8A  502A               	movf	___fldiv@bexp^0,w,c
  7180  002B8C  A4D8               	btfss	status,2,c
  7181  002B8E  EFCB  F015         	goto	u3261
  7182  002B92  EFCD  F015         	goto	u3260
  7183  002B96                     u3261:
  7184  002B96  EFD7  F015         	goto	l3321
  7185  002B9A                     u3260:
  7186  002B9A  0E00               	movlw	0
  7187  002B9C  6E13               	movwf	?___fldiv^0,c
  7188  002B9E  0E00               	movlw	0
  7189  002BA0  6E14               	movwf	(?___fldiv+1)^0,c
  7190  002BA2  0E00               	movlw	0
  7191  002BA4  6E15               	movwf	(?___fldiv+2)^0,c
  7192  002BA6  0E00               	movlw	0
  7193  002BA8  6E16               	movwf	(?___fldiv+3)^0,c
  7194  002BAA  EF08  F017         	goto	l1021
  7195  002BAE                     l3321:
  7196  002BAE  502B               	movf	___fldiv@aexp^0,w,c
  7197  002BB0  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
  7198  002BB4  6A1C               	clrf	(??___fldiv+1)^0,c
  7199  002BB6  5E1B               	subwf	??___fldiv^0,f,c
  7200  002BB8  0E00               	movlw	0
  7201  002BBA  5A1C               	subwfb	(??___fldiv+1)^0,f,c
  7202  002BBC  0E7F               	movlw	127
  7203  002BBE  241B               	addwf	??___fldiv^0,w,c
  7204  002BC0  6E24               	movwf	___fldiv@new_exp^0,c
  7205  002BC2  0E00               	movlw	0
  7206  002BC4  201C               	addwfc	(??___fldiv+1)^0,w,c
  7207  002BC6  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  7208  002BC8  C013  F01F         	movff	___fldiv@b,___fldiv@rem
  7209  002BCC  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
  7210  002BD0  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
  7211  002BD4  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
  7212  002BD8  0E00               	movlw	0
  7213  002BDA  6E13               	movwf	___fldiv@b^0,c
  7214  002BDC  0E00               	movlw	0
  7215  002BDE  6E14               	movwf	(___fldiv@b+1)^0,c
  7216  002BE0  0E00               	movlw	0
  7217  002BE2  6E15               	movwf	(___fldiv@b+2)^0,c
  7218  002BE4  0E00               	movlw	0
  7219  002BE6  6E16               	movwf	(___fldiv@b+3)^0,c
  7220  002BE8  0E00               	movlw	0
  7221  002BEA  6E26               	movwf	___fldiv@grs^0,c
  7222  002BEC  0E00               	movlw	0
  7223  002BEE  6E27               	movwf	(___fldiv@grs+1)^0,c
  7224  002BF0  0E00               	movlw	0
  7225  002BF2  6E28               	movwf	(___fldiv@grs+2)^0,c
  7226  002BF4  0E00               	movlw	0
  7227  002BF6  6E29               	movwf	(___fldiv@grs+3)^0,c
  7228  002BF8  0E00               	movlw	0
  7229  002BFA  6E2B               	movwf	___fldiv@aexp^0,c
  7230  002BFC  EF38  F016         	goto	l1023
  7231  002C00                     l3331:
  7232  002C00  502B               	movf	___fldiv@aexp^0,w,c
  7233  002C02  B4D8               	btfsc	status,2,c
  7234  002C04  EF06  F016         	goto	u3271
  7235  002C08  EF08  F016         	goto	u3270
  7236  002C0C                     u3271:
  7237  002C0C  EF1F  F016         	goto	l3339
  7238  002C10                     u3270:
  7239  002C10  90D8               	bcf	status,0,c
  7240  002C12  361F               	rlcf	___fldiv@rem^0,f,c
  7241  002C14  3620               	rlcf	(___fldiv@rem+1)^0,f,c
  7242  002C16  3621               	rlcf	(___fldiv@rem+2)^0,f,c
  7243  002C18  3622               	rlcf	(___fldiv@rem+3)^0,f,c
  7244  002C1A  90D8               	bcf	status,0,c
  7245  002C1C  3613               	rlcf	___fldiv@b^0,f,c
  7246  002C1E  3614               	rlcf	(___fldiv@b+1)^0,f,c
  7247  002C20  3615               	rlcf	(___fldiv@b+2)^0,f,c
  7248  002C22  3616               	rlcf	(___fldiv@b+3)^0,f,c
  7249  002C24  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  7250  002C26  EF17  F016         	goto	u3281
  7251  002C2A  EF19  F016         	goto	u3280
  7252  002C2E                     u3281:
  7253  002C2E  EF1A  F016         	goto	l1026
  7254  002C32                     u3280:
  7255  002C32  8013               	bsf	___fldiv@b^0,0,c
  7256  002C34                     l1026:
  7257  002C34  90D8               	bcf	status,0,c
  7258  002C36  3626               	rlcf	___fldiv@grs^0,f,c
  7259  002C38  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  7260  002C3A  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  7261  002C3C  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  7262  002C3E                     l3339:
  7263  002C3E  5017               	movf	___fldiv@a^0,w,c
  7264  002C40  5C1F               	subwf	___fldiv@rem^0,w,c
  7265  002C42  5018               	movf	(___fldiv@a+1)^0,w,c
  7266  002C44  5820               	subwfb	(___fldiv@rem+1)^0,w,c
  7267  002C46  5019               	movf	(___fldiv@a+2)^0,w,c
  7268  002C48  5821               	subwfb	(___fldiv@rem+2)^0,w,c
  7269  002C4A  501A               	movf	(___fldiv@a+3)^0,w,c
  7270  002C4C  5822               	subwfb	(___fldiv@rem+3)^0,w,c
  7271  002C4E  A0D8               	btfss	status,0,c
  7272  002C50  EF2C  F016         	goto	u3291
  7273  002C54  EF2E  F016         	goto	u3290
  7274  002C58                     u3291:
  7275  002C58  EF37  F016         	goto	l3345
  7276  002C5C                     u3290:
  7277  002C5C  8C29               	bsf	(___fldiv@grs+3)^0,6,c
  7278  002C5E  5017               	movf	___fldiv@a^0,w,c
  7279  002C60  5E1F               	subwf	___fldiv@rem^0,f,c
  7280  002C62  5018               	movf	(___fldiv@a+1)^0,w,c
  7281  002C64  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
  7282  002C66  5019               	movf	(___fldiv@a+2)^0,w,c
  7283  002C68  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
  7284  002C6A  501A               	movf	(___fldiv@a+3)^0,w,c
  7285  002C6C  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
  7286  002C6E                     l3345:
  7287  002C6E  2A2B               	incf	___fldiv@aexp^0,f,c
  7288  002C70                     l1023:
  7289  002C70  0E19               	movlw	25
  7290  002C72  642B               	cpfsgt	___fldiv@aexp^0,c
  7291  002C74  EF3E  F016         	goto	u3301
  7292  002C78  EF40  F016         	goto	u3300
  7293  002C7C                     u3301:
  7294  002C7C  EF00  F016         	goto	l3331
  7295  002C80                     u3300:
  7296  002C80  501F               	movf	___fldiv@rem^0,w,c
  7297  002C82  1020               	iorwf	(___fldiv@rem+1)^0,w,c
  7298  002C84  1021               	iorwf	(___fldiv@rem+2)^0,w,c
  7299  002C86  1022               	iorwf	(___fldiv@rem+3)^0,w,c
  7300  002C88  B4D8               	btfsc	status,2,c
  7301  002C8A  EF49  F016         	goto	u3311
  7302  002C8E  EF4B  F016         	goto	u3310
  7303  002C92                     u3311:
  7304  002C92  EF63  F016         	goto	l3357
  7305  002C96                     u3310:
  7306  002C96  8026               	bsf	___fldiv@grs^0,0,c
  7307  002C98  EF63  F016         	goto	l3357
  7308  002C9C                     l3351:
  7309  002C9C  90D8               	bcf	status,0,c
  7310  002C9E  3613               	rlcf	___fldiv@b^0,f,c
  7311  002CA0  3614               	rlcf	(___fldiv@b+1)^0,f,c
  7312  002CA2  3615               	rlcf	(___fldiv@b+2)^0,f,c
  7313  002CA4  3616               	rlcf	(___fldiv@b+3)^0,f,c
  7314  002CA6  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  7315  002CA8  EF58  F016         	goto	u3321
  7316  002CAC  EF5A  F016         	goto	u3320
  7317  002CB0                     u3321:
  7318  002CB0  EF5B  F016         	goto	l1032
  7319  002CB4                     u3320:
  7320  002CB4  8013               	bsf	___fldiv@b^0,0,c
  7321  002CB6                     l1032:
  7322  002CB6  90D8               	bcf	status,0,c
  7323  002CB8  3626               	rlcf	___fldiv@grs^0,f,c
  7324  002CBA  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  7325  002CBC  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  7326  002CBE  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  7327  002CC0  0624               	decf	___fldiv@new_exp^0,f,c
  7328  002CC2  A0D8               	btfss	status,0,c
  7329  002CC4  0625               	decf	(___fldiv@new_exp+1)^0,f,c
  7330  002CC6                     l3357:
  7331  002CC6  AE15               	btfss	(___fldiv@b+2)^0,7,c
  7332  002CC8  EF68  F016         	goto	u3331
  7333  002CCC  EF6A  F016         	goto	u3330
  7334  002CD0                     u3331:
  7335  002CD0  EF4E  F016         	goto	l3351
  7336  002CD4                     u3330:
  7337  002CD4  0E00               	movlw	0
  7338  002CD6  6E2B               	movwf	___fldiv@aexp^0,c
  7339  002CD8  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  7340  002CDA  EF71  F016         	goto	u3341
  7341  002CDE  EF73  F016         	goto	u3340
  7342  002CE2                     u3341:
  7343  002CE2  EF97  F016         	goto	l1034
  7344  002CE6                     u3340:
  7345  002CE6  0EFF               	movlw	255
  7346  002CE8  1426               	andwf	___fldiv@grs^0,w,c
  7347  002CEA  6E1B               	movwf	??___fldiv^0,c
  7348  002CEC  0EFF               	movlw	255
  7349  002CEE  1427               	andwf	(___fldiv@grs+1)^0,w,c
  7350  002CF0  6E1C               	movwf	(??___fldiv+1)^0,c
  7351  002CF2  0EFF               	movlw	255
  7352  002CF4  1428               	andwf	(___fldiv@grs+2)^0,w,c
  7353  002CF6  6E1D               	movwf	(??___fldiv+2)^0,c
  7354  002CF8  0E7F               	movlw	127
  7355  002CFA  1429               	andwf	(___fldiv@grs+3)^0,w,c
  7356  002CFC  6E1E               	movwf	(??___fldiv+3)^0,c
  7357  002CFE  501B               	movf	??___fldiv^0,w,c
  7358  002D00  101C               	iorwf	(??___fldiv+1)^0,w,c
  7359  002D02  101D               	iorwf	(??___fldiv+2)^0,w,c
  7360  002D04  101E               	iorwf	(??___fldiv+3)^0,w,c
  7361  002D06  B4D8               	btfsc	status,2,c
  7362  002D08  EF88  F016         	goto	u3351
  7363  002D0C  EF8A  F016         	goto	u3350
  7364  002D10                     u3351:
  7365  002D10  EF8E  F016         	goto	l1035
  7366  002D14                     u3350:
  7367  002D14                     l3365:
  7368  002D14  0E01               	movlw	1
  7369  002D16  6E2B               	movwf	___fldiv@aexp^0,c
  7370  002D18  EF97  F016         	goto	l1034
  7371  002D1C                     l1035:
  7372  002D1C  A013               	btfss	___fldiv@b^0,0,c
  7373  002D1E  EF93  F016         	goto	u3361
  7374  002D22  EF95  F016         	goto	u3360
  7375  002D26                     u3361:
  7376  002D26  EF97  F016         	goto	l1034
  7377  002D2A                     u3360:
  7378  002D2A  EF8A  F016         	goto	l3365
  7379  002D2E                     l1034:
  7380  002D2E  502B               	movf	___fldiv@aexp^0,w,c
  7381  002D30  B4D8               	btfsc	status,2,c
  7382  002D32  EF9D  F016         	goto	u3371
  7383  002D36  EF9F  F016         	goto	u3370
  7384  002D3A                     u3371:
  7385  002D3A  EFC3  F016         	goto	l3377
  7386  002D3E                     u3370:
  7387  002D3E  0E01               	movlw	1
  7388  002D40  2613               	addwf	___fldiv@b^0,f,c
  7389  002D42  0E00               	movlw	0
  7390  002D44  2214               	addwfc	(___fldiv@b+1)^0,f,c
  7391  002D46  2215               	addwfc	(___fldiv@b+2)^0,f,c
  7392  002D48  2216               	addwfc	(___fldiv@b+3)^0,f,c
  7393  002D4A  A016               	btfss	(___fldiv@b+3)^0,0,c
  7394  002D4C  EFAA  F016         	goto	u3381
  7395  002D50  EFAC  F016         	goto	u3380
  7396  002D54                     u3381:
  7397  002D54  EFC3  F016         	goto	l3377
  7398  002D58                     u3380:
  7399  002D58  C013  F01B         	movff	___fldiv@b,??___fldiv
  7400  002D5C  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
  7401  002D60  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
  7402  002D64  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
  7403  002D68  341E               	rlcf	(??___fldiv+3)^0,w,c
  7404  002D6A  321E               	rrcf	(??___fldiv+3)^0,f,c
  7405  002D6C  321D               	rrcf	(??___fldiv+2)^0,f,c
  7406  002D6E  321C               	rrcf	(??___fldiv+1)^0,f,c
  7407  002D70  321B               	rrcf	??___fldiv^0,f,c
  7408  002D72  C01B  F013         	movff	??___fldiv,___fldiv@b
  7409  002D76  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
  7410  002D7A  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
  7411  002D7E  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
  7412  002D82  4A24               	infsnz	___fldiv@new_exp^0,f,c
  7413  002D84  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
  7414  002D86                     l3377:
  7415  002D86  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7416  002D88  EFCE  F016         	goto	u3391
  7417  002D8C  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  7418  002D8E  E108               	bnz	u3390
  7419  002D90  2824               	incf	___fldiv@new_exp^0,w,c
  7420  002D92  A0D8               	btfss	status,0,c
  7421  002D94  EFCE  F016         	goto	u3391
  7422  002D98  EFD0  F016         	goto	u3390
  7423  002D9C                     u3391:
  7424  002D9C  EFDB  F016         	goto	l3381
  7425  002DA0                     u3390:
  7426  002DA0  0E00               	movlw	0
  7427  002DA2  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  7428  002DA4  6824               	setf	___fldiv@new_exp^0,c
  7429  002DA6  0E00               	movlw	0
  7430  002DA8  6E13               	movwf	___fldiv@b^0,c
  7431  002DAA  0E00               	movlw	0
  7432  002DAC  6E14               	movwf	(___fldiv@b+1)^0,c
  7433  002DAE  0E00               	movlw	0
  7434  002DB0  6E15               	movwf	(___fldiv@b+2)^0,c
  7435  002DB2  0E00               	movlw	0
  7436  002DB4  6E16               	movwf	(___fldiv@b+3)^0,c
  7437  002DB6                     l3381:
  7438  002DB6  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7439  002DB8  EFE8  F016         	goto	u3400
  7440  002DBC  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  7441  002DBE  E106               	bnz	u3401
  7442  002DC0  0424               	decf	___fldiv@new_exp^0,w,c
  7443  002DC2  B0D8               	btfsc	status,0,c
  7444  002DC4  EFE6  F016         	goto	u3401
  7445  002DC8  EFE8  F016         	goto	u3400
  7446  002DCC                     u3401:
  7447  002DCC  EFF6  F016         	goto	l3385
  7448  002DD0                     u3400:
  7449  002DD0  0E00               	movlw	0
  7450  002DD2  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  7451  002DD4  0E00               	movlw	0
  7452  002DD6  6E24               	movwf	___fldiv@new_exp^0,c
  7453  002DD8  0E00               	movlw	0
  7454  002DDA  6E13               	movwf	___fldiv@b^0,c
  7455  002DDC  0E00               	movlw	0
  7456  002DDE  6E14               	movwf	(___fldiv@b+1)^0,c
  7457  002DE0  0E00               	movlw	0
  7458  002DE2  6E15               	movwf	(___fldiv@b+2)^0,c
  7459  002DE4  0E00               	movlw	0
  7460  002DE6  6E16               	movwf	(___fldiv@b+3)^0,c
  7461  002DE8  0E00               	movlw	0
  7462  002DEA  6E23               	movwf	___fldiv@sign^0,c
  7463  002DEC                     l3385:
  7464  002DEC  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
  7465  002DF0  A02A               	btfss	___fldiv@bexp^0,0,c
  7466  002DF2  EFFD  F016         	goto	u3411
  7467  002DF6  EFFF  F016         	goto	u3410
  7468  002DFA                     u3411:
  7469  002DFA  EF02  F017         	goto	l3391
  7470  002DFE                     u3410:
  7471  002DFE  8E15               	bsf	(___fldiv@b+2)^0,7,c
  7472  002E00  EF03  F017         	goto	l3393
  7473  002E04                     l3391:
  7474  002E04  9E15               	bcf	(___fldiv@b+2)^0,7,c
  7475  002E06                     l3393:
  7476  002E06  90D8               	bcf	status,0,c
  7477  002E08  302A               	rrcf	___fldiv@bexp^0,w,c
  7478  002E0A  6E16               	movwf	(___fldiv@b+3)^0,c
  7479  002E0C  EFB9  F015         	goto	l3307
  7480  002E10                     l1021:
  7481  002E10  0012               	return		;funcret
  7482  002E12                     __end_of___fldiv:
  7483                           	callstack 0
  7484                           
  7485 ;; *************** function ___fladd *****************
  7486 ;; Defined at:
  7487 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  b               4   68[COMRAM] unsigned char 
  7490 ;;  a               4   72[COMRAM] unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  grs             1   83[COMRAM] unsigned char 
  7493 ;;  bexp            1   82[COMRAM] unsigned char 
  7494 ;;  aexp            1   81[COMRAM] unsigned char 
  7495 ;;  signs           1   80[COMRAM] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  4   68[COMRAM] unsigned char 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7505 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;Total ram usage:       16 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 2
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_determine_color_new
  7516 ;;		_lumin
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           	psect	text27
  7521  00218E                     __ptext27:
  7522                           	callstack 0
  7523  00218E                     ___fladd:
  7524                           	callstack 27
  7525  00218E  5048               	movf	(___fladd@b+3)^0,w,c
  7526  002190  0B80               	andlw	128
  7527  002192  6E51               	movwf	___fladd@signs^0,c
  7528  002194  5048               	movf	(___fladd@b+3)^0,w,c
  7529  002196  2448               	addwf	(___fladd@b+3)^0,w,c
  7530  002198  6E53               	movwf	___fladd@bexp^0,c
  7531  00219A  AE47               	btfss	(___fladd@b+2)^0,7,c
  7532  00219C  EFD2  F010         	goto	u2801
  7533  0021A0  EFD4  F010         	goto	u2800
  7534  0021A4                     u2801:
  7535  0021A4  EFD5  F010         	goto	l3067
  7536  0021A8                     u2800:
  7537  0021A8  8053               	bsf	___fladd@bexp^0,0,c
  7538  0021AA                     l3067:
  7539  0021AA  5053               	movf	___fladd@bexp^0,w,c
  7540  0021AC  B4D8               	btfsc	status,2,c
  7541  0021AE  EFDB  F010         	goto	u2811
  7542  0021B2  EFDD  F010         	goto	u2810
  7543  0021B6                     u2811:
  7544  0021B6  EFF2  F010         	goto	l3077
  7545  0021BA                     u2810:
  7546  0021BA  2853               	incf	___fladd@bexp^0,w,c
  7547  0021BC  A4D8               	btfss	status,2,c
  7548  0021BE  EFE3  F010         	goto	u2821
  7549  0021C2  EFE5  F010         	goto	u2820
  7550  0021C6                     u2821:
  7551  0021C6  EFED  F010         	goto	l3073
  7552  0021CA                     u2820:
  7553  0021CA  0E00               	movlw	0
  7554  0021CC  6E45               	movwf	___fladd@b^0,c
  7555  0021CE  0E00               	movlw	0
  7556  0021D0  6E46               	movwf	(___fladd@b+1)^0,c
  7557  0021D2  0E00               	movlw	0
  7558  0021D4  6E47               	movwf	(___fladd@b+2)^0,c
  7559  0021D6  0E00               	movlw	0
  7560  0021D8  6E48               	movwf	(___fladd@b+3)^0,c
  7561  0021DA                     l3073:
  7562  0021DA  8E47               	bsf	(___fladd@b+2)^0,7,c
  7563  0021DC  0E00               	movlw	0
  7564  0021DE  6E48               	movwf	(___fladd@b+3)^0,c
  7565  0021E0  EFFA  F010         	goto	l3079
  7566  0021E4                     l3077:
  7567  0021E4  0E00               	movlw	0
  7568  0021E6  6E45               	movwf	___fladd@b^0,c
  7569  0021E8  0E00               	movlw	0
  7570  0021EA  6E46               	movwf	(___fladd@b+1)^0,c
  7571  0021EC  0E00               	movlw	0
  7572  0021EE  6E47               	movwf	(___fladd@b+2)^0,c
  7573  0021F0  0E00               	movlw	0
  7574  0021F2  6E48               	movwf	(___fladd@b+3)^0,c
  7575  0021F4                     l3079:
  7576  0021F4  504C               	movf	(___fladd@a+3)^0,w,c
  7577  0021F6  0B80               	andlw	128
  7578  0021F8  6E52               	movwf	___fladd@aexp^0,c
  7579  0021FA  5051               	movf	___fladd@signs^0,w,c
  7580  0021FC  1852               	xorwf	___fladd@aexp^0,w,c
  7581  0021FE  B4D8               	btfsc	status,2,c
  7582  002200  EF04  F011         	goto	u2831
  7583  002204  EF06  F011         	goto	u2830
  7584  002208                     u2831:
  7585  002208  EF07  F011         	goto	l3085
  7586  00220C                     u2830:
  7587  00220C  8C51               	bsf	___fladd@signs^0,6,c
  7588  00220E                     l3085:
  7589  00220E  504C               	movf	(___fladd@a+3)^0,w,c
  7590  002210  244C               	addwf	(___fladd@a+3)^0,w,c
  7591  002212  6E52               	movwf	___fladd@aexp^0,c
  7592  002214  AE4B               	btfss	(___fladd@a+2)^0,7,c
  7593  002216  EF0F  F011         	goto	u2841
  7594  00221A  EF11  F011         	goto	u2840
  7595  00221E                     u2841:
  7596  00221E  EF12  F011         	goto	l3091
  7597  002222                     u2840:
  7598  002222  8052               	bsf	___fladd@aexp^0,0,c
  7599  002224                     l3091:
  7600  002224  5052               	movf	___fladd@aexp^0,w,c
  7601  002226  B4D8               	btfsc	status,2,c
  7602  002228  EF18  F011         	goto	u2851
  7603  00222C  EF1A  F011         	goto	u2850
  7604  002230                     u2851:
  7605  002230  EF2F  F011         	goto	l3101
  7606  002234                     u2850:
  7607  002234  2852               	incf	___fladd@aexp^0,w,c
  7608  002236  A4D8               	btfss	status,2,c
  7609  002238  EF20  F011         	goto	u2861
  7610  00223C  EF22  F011         	goto	u2860
  7611  002240                     u2861:
  7612  002240  EF2A  F011         	goto	l3097
  7613  002244                     u2860:
  7614  002244  0E00               	movlw	0
  7615  002246  6E49               	movwf	___fladd@a^0,c
  7616  002248  0E00               	movlw	0
  7617  00224A  6E4A               	movwf	(___fladd@a+1)^0,c
  7618  00224C  0E00               	movlw	0
  7619  00224E  6E4B               	movwf	(___fladd@a+2)^0,c
  7620  002250  0E00               	movlw	0
  7621  002252  6E4C               	movwf	(___fladd@a+3)^0,c
  7622  002254                     l3097:
  7623  002254  8E4B               	bsf	(___fladd@a+2)^0,7,c
  7624  002256  0E00               	movlw	0
  7625  002258  6E4C               	movwf	(___fladd@a+3)^0,c
  7626  00225A  EF37  F011         	goto	l3103
  7627  00225E                     l3101:
  7628  00225E  0E00               	movlw	0
  7629  002260  6E49               	movwf	___fladd@a^0,c
  7630  002262  0E00               	movlw	0
  7631  002264  6E4A               	movwf	(___fladd@a+1)^0,c
  7632  002266  0E00               	movlw	0
  7633  002268  6E4B               	movwf	(___fladd@a+2)^0,c
  7634  00226A  0E00               	movlw	0
  7635  00226C  6E4C               	movwf	(___fladd@a+3)^0,c
  7636  00226E                     l3103:
  7637  00226E  5053               	movf	___fladd@bexp^0,w,c
  7638  002270  5C52               	subwf	___fladd@aexp^0,w,c
  7639  002272  B0D8               	btfsc	status,0,c
  7640  002274  EF3E  F011         	goto	u2871
  7641  002278  EF40  F011         	goto	u2870
  7642  00227C                     u2871:
  7643  00227C  EF67  F011         	goto	l3139
  7644  002280                     u2870:
  7645  002280  AC51               	btfss	___fladd@signs^0,6,c
  7646  002282  EF45  F011         	goto	u2881
  7647  002286  EF47  F011         	goto	u2880
  7648  00228A                     u2881:
  7649  00228A  EF49  F011         	goto	l3109
  7650  00228E                     u2880:
  7651  00228E  0E80               	movlw	128
  7652  002290  1A51               	xorwf	___fladd@signs^0,f,c
  7653  002292                     l3109:
  7654  002292  C053  F054         	movff	___fladd@bexp,___fladd@grs
  7655  002296  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  7656  00229A  C054  F052         	movff	___fladd@grs,___fladd@aexp
  7657  00229E  C045  F054         	movff	___fladd@b,___fladd@grs
  7658  0022A2  C049  F045         	movff	___fladd@a,___fladd@b
  7659  0022A6  C054  F049         	movff	___fladd@grs,___fladd@a
  7660  0022AA  C046  F054         	movff	___fladd@b+1,___fladd@grs
  7661  0022AE  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  7662  0022B2  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  7663  0022B6  C047  F054         	movff	___fladd@b+2,___fladd@grs
  7664  0022BA  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  7665  0022BE  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  7666  0022C2  C048  F054         	movff	___fladd@b+3,___fladd@grs
  7667  0022C6  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  7668  0022CA  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  7669  0022CE                     l3139:
  7670  0022CE  0E00               	movlw	0
  7671  0022D0  6E54               	movwf	___fladd@grs^0,c
  7672  0022D2  5053               	movf	___fladd@bexp^0,w,c
  7673  0022D4  C052  F04D         	movff	___fladd@aexp,??___fladd
  7674  0022D8  6A4E               	clrf	(??___fladd+1)^0,c
  7675  0022DA  5E4D               	subwf	??___fladd^0,f,c
  7676  0022DC  0E00               	movlw	0
  7677  0022DE  5A4E               	subwfb	(??___fladd+1)^0,f,c
  7678  0022E0  BE4E               	btfsc	(??___fladd+1)^0,7,c
  7679  0022E2  EF7C  F011         	goto	u2891
  7680  0022E6  504E               	movf	(??___fladd+1)^0,w,c
  7681  0022E8  E109               	bnz	u2890
  7682  0022EA  0E1A               	movlw	26
  7683  0022EC  5C4D               	subwf	??___fladd^0,w,c
  7684  0022EE  A0D8               	btfss	status,0,c
  7685  0022F0  EF7C  F011         	goto	u2891
  7686  0022F4  EF7E  F011         	goto	u2890
  7687  0022F8                     u2891:
  7688  0022F8  EFB5  F011         	goto	l968
  7689  0022FC                     u2890:
  7690  0022FC  5045               	movf	___fladd@b^0,w,c
  7691  0022FE  1046               	iorwf	(___fladd@b+1)^0,w,c
  7692  002300  1047               	iorwf	(___fladd@b+2)^0,w,c
  7693  002302  1048               	iorwf	(___fladd@b+3)^0,w,c
  7694  002304  A4D8               	btfss	status,2,c
  7695  002306  EF87  F011         	goto	u2901
  7696  00230A  EF8A  F011         	goto	u2900
  7697  00230E                     u2901:
  7698  00230E  0E01               	movlw	1
  7699  002310  EF8B  F011         	goto	u2910
  7700  002314                     u2900:
  7701  002314  0E00               	movlw	0
  7702  002316                     u2910:
  7703  002316  6E54               	movwf	___fladd@grs^0,c
  7704  002318  0E00               	movlw	0
  7705  00231A  6E45               	movwf	___fladd@b^0,c
  7706  00231C  0E00               	movlw	0
  7707  00231E  6E46               	movwf	(___fladd@b+1)^0,c
  7708  002320  0E00               	movlw	0
  7709  002322  6E47               	movwf	(___fladd@b+2)^0,c
  7710  002324  0E00               	movlw	0
  7711  002326  6E48               	movwf	(___fladd@b+3)^0,c
  7712  002328  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  7713  00232C  EFBE  F011         	goto	l967
  7714  002330                     l969:
  7715  002330  A054               	btfss	___fladd@grs^0,0,c
  7716  002332  EF9D  F011         	goto	u2921
  7717  002336  EF9F  F011         	goto	u2920
  7718  00233A                     u2921:
  7719  00233A  EFA5  F011         	goto	l3151
  7720  00233E                     u2920:
  7721  00233E  90D8               	bcf	status,0,c
  7722  002340  3054               	rrcf	___fladd@grs^0,w,c
  7723  002342  0901               	iorlw	1
  7724  002344  6E54               	movwf	___fladd@grs^0,c
  7725  002346  EFA7  F011         	goto	l3153
  7726  00234A                     l3151:
  7727  00234A  90D8               	bcf	status,0,c
  7728  00234C  3254               	rrcf	___fladd@grs^0,f,c
  7729  00234E                     l3153:
  7730  00234E  A045               	btfss	___fladd@b^0,0,c
  7731  002350  EFAC  F011         	goto	u2931
  7732  002354  EFAE  F011         	goto	u2930
  7733  002358                     u2931:
  7734  002358  EFAF  F011         	goto	l3157
  7735  00235C                     u2930:
  7736  00235C  8E54               	bsf	___fladd@grs^0,7,c
  7737  00235E                     l3157:
  7738  00235E  3448               	rlcf	(___fladd@b+3)^0,w,c
  7739  002360  3248               	rrcf	(___fladd@b+3)^0,f,c
  7740  002362  3247               	rrcf	(___fladd@b+2)^0,f,c
  7741  002364  3246               	rrcf	(___fladd@b+1)^0,f,c
  7742  002366  3245               	rrcf	___fladd@b^0,f,c
  7743  002368  2A53               	incf	___fladd@bexp^0,f,c
  7744  00236A                     l968:
  7745  00236A  5052               	movf	___fladd@aexp^0,w,c
  7746  00236C  5C53               	subwf	___fladd@bexp^0,w,c
  7747  00236E  A0D8               	btfss	status,0,c
  7748  002370  EFBC  F011         	goto	u2941
  7749  002374  EFBE  F011         	goto	u2940
  7750  002378                     u2941:
  7751  002378  EF98  F011         	goto	l969
  7752  00237C                     u2940:
  7753  00237C                     l967:
  7754  00237C  BC51               	btfsc	___fladd@signs^0,6,c
  7755  00237E  EFC3  F011         	goto	u2951
  7756  002382  EFC5  F011         	goto	u2950
  7757  002386                     u2951:
  7758  002386  EF05  F012         	goto	l3185
  7759  00238A                     u2950:
  7760  00238A  5053               	movf	___fladd@bexp^0,w,c
  7761  00238C  A4D8               	btfss	status,2,c
  7762  00238E  EFCB  F011         	goto	u2961
  7763  002392  EFCD  F011         	goto	u2960
  7764  002396                     u2961:
  7765  002396  EFD7  F011         	goto	l3167
  7766  00239A                     u2960:
  7767  00239A  0E00               	movlw	0
  7768  00239C  6E45               	movwf	?___fladd^0,c
  7769  00239E  0E00               	movlw	0
  7770  0023A0  6E46               	movwf	(?___fladd+1)^0,c
  7771  0023A2  0E00               	movlw	0
  7772  0023A4  6E47               	movwf	(?___fladd+2)^0,c
  7773  0023A6  0E00               	movlw	0
  7774  0023A8  6E48               	movwf	(?___fladd+3)^0,c
  7775  0023AA  EF26  F013         	goto	l976
  7776  0023AE                     l3167:
  7777  0023AE  5049               	movf	___fladd@a^0,w,c
  7778  0023B0  2645               	addwf	___fladd@b^0,f,c
  7779  0023B2  504A               	movf	(___fladd@a+1)^0,w,c
  7780  0023B4  2246               	addwfc	(___fladd@b+1)^0,f,c
  7781  0023B6  504B               	movf	(___fladd@a+2)^0,w,c
  7782  0023B8  2247               	addwfc	(___fladd@b+2)^0,f,c
  7783  0023BA  504C               	movf	(___fladd@a+3)^0,w,c
  7784  0023BC  2248               	addwfc	(___fladd@b+3)^0,f,c
  7785  0023BE  A048               	btfss	(___fladd@b+3)^0,0,c
  7786  0023C0  EFE4  F011         	goto	u2971
  7787  0023C4  EFE6  F011         	goto	u2970
  7788  0023C8                     u2971:
  7789  0023C8  EF92  F012         	goto	l3221
  7790  0023CC                     u2970:
  7791  0023CC  A054               	btfss	___fladd@grs^0,0,c
  7792  0023CE  EFEB  F011         	goto	u2981
  7793  0023D2  EFED  F011         	goto	u2980
  7794  0023D6                     u2981:
  7795  0023D6  EFF3  F011         	goto	l3175
  7796  0023DA                     u2980:
  7797  0023DA  90D8               	bcf	status,0,c
  7798  0023DC  3054               	rrcf	___fladd@grs^0,w,c
  7799  0023DE  0901               	iorlw	1
  7800  0023E0  6E54               	movwf	___fladd@grs^0,c
  7801  0023E2  EFF5  F011         	goto	l3177
  7802  0023E6                     l3175:
  7803  0023E6  90D8               	bcf	status,0,c
  7804  0023E8  3254               	rrcf	___fladd@grs^0,f,c
  7805  0023EA                     l3177:
  7806  0023EA  A045               	btfss	___fladd@b^0,0,c
  7807  0023EC  EFFA  F011         	goto	u2991
  7808  0023F0  EFFC  F011         	goto	u2990
  7809  0023F4                     u2991:
  7810  0023F4  EFFD  F011         	goto	l3181
  7811  0023F8                     u2990:
  7812  0023F8  8E54               	bsf	___fladd@grs^0,7,c
  7813  0023FA                     l3181:
  7814  0023FA  3448               	rlcf	(___fladd@b+3)^0,w,c
  7815  0023FC  3248               	rrcf	(___fladd@b+3)^0,f,c
  7816  0023FE  3247               	rrcf	(___fladd@b+2)^0,f,c
  7817  002400  3246               	rrcf	(___fladd@b+1)^0,f,c
  7818  002402  3245               	rrcf	___fladd@b^0,f,c
  7819  002404  2A53               	incf	___fladd@bexp^0,f,c
  7820  002406  EF92  F012         	goto	l3221
  7821  00240A                     l3185:
  7822  00240A  5049               	movf	___fladd@a^0,w,c
  7823  00240C  5C45               	subwf	___fladd@b^0,w,c
  7824  00240E  504A               	movf	(___fladd@a+1)^0,w,c
  7825  002410  5846               	subwfb	(___fladd@b+1)^0,w,c
  7826  002412  504B               	movf	(___fladd@a+2)^0,w,c
  7827  002414  5847               	subwfb	(___fladd@b+2)^0,w,c
  7828  002416  5048               	movf	(___fladd@b+3)^0,w,c
  7829  002418  0A80               	xorlw	128
  7830  00241A  6E4D               	movwf	??___fladd^0,c
  7831  00241C  504C               	movf	(___fladd@a+3)^0,w,c
  7832  00241E  0A80               	xorlw	128
  7833  002420  584D               	subwfb	??___fladd^0,w,c
  7834  002422  B0D8               	btfsc	status,0,c
  7835  002424  EF16  F012         	goto	u3001
  7836  002428  EF18  F012         	goto	u3000
  7837  00242C                     u3001:
  7838  00242C  EF43  F012         	goto	l3195
  7839  002430                     u3000:
  7840  002430  5045               	movf	___fladd@b^0,w,c
  7841  002432  5C49               	subwf	___fladd@a^0,w,c
  7842  002434  6E4D               	movwf	??___fladd^0,c
  7843  002436  5046               	movf	(___fladd@b+1)^0,w,c
  7844  002438  584A               	subwfb	(___fladd@a+1)^0,w,c
  7845  00243A  6E4E               	movwf	(??___fladd+1)^0,c
  7846  00243C  5047               	movf	(___fladd@b+2)^0,w,c
  7847  00243E  584B               	subwfb	(___fladd@a+2)^0,w,c
  7848  002440  6E4F               	movwf	(??___fladd+2)^0,c
  7849  002442  5048               	movf	(___fladd@b+3)^0,w,c
  7850  002444  584C               	subwfb	(___fladd@a+3)^0,w,c
  7851  002446  6E50               	movwf	(??___fladd+3)^0,c
  7852  002448  0EFF               	movlw	255
  7853  00244A  244D               	addwf	??___fladd^0,w,c
  7854  00244C  6E45               	movwf	___fladd@b^0,c
  7855  00244E  0EFF               	movlw	255
  7856  002450  204E               	addwfc	(??___fladd+1)^0,w,c
  7857  002452  6E46               	movwf	(___fladd@b+1)^0,c
  7858  002454  0EFF               	movlw	255
  7859  002456  204F               	addwfc	(??___fladd+2)^0,w,c
  7860  002458  6E47               	movwf	(___fladd@b+2)^0,c
  7861  00245A  0EFF               	movlw	255
  7862  00245C  2050               	addwfc	(??___fladd+3)^0,w,c
  7863  00245E  6E48               	movwf	(___fladd@b+3)^0,c
  7864  002460  0E80               	movlw	128
  7865  002462  1A51               	xorwf	___fladd@signs^0,f,c
  7866  002464  6C54               	negf	___fladd@grs^0,c
  7867  002466  5054               	movf	___fladd@grs^0,w,c
  7868  002468  A4D8               	btfss	status,2,c
  7869  00246A  EF39  F012         	goto	u3011
  7870  00246E  EF3B  F012         	goto	u3010
  7871  002472                     u3011:
  7872  002472  EF4B  F012         	goto	l984
  7873  002476                     u3010:
  7874  002476  0E01               	movlw	1
  7875  002478  2645               	addwf	___fladd@b^0,f,c
  7876  00247A  0E00               	movlw	0
  7877  00247C  2246               	addwfc	(___fladd@b+1)^0,f,c
  7878  00247E  2247               	addwfc	(___fladd@b+2)^0,f,c
  7879  002480  2248               	addwfc	(___fladd@b+3)^0,f,c
  7880  002482  EF4B  F012         	goto	l984
  7881  002486                     l3195:
  7882  002486  5049               	movf	___fladd@a^0,w,c
  7883  002488  5E45               	subwf	___fladd@b^0,f,c
  7884  00248A  504A               	movf	(___fladd@a+1)^0,w,c
  7885  00248C  5A46               	subwfb	(___fladd@b+1)^0,f,c
  7886  00248E  504B               	movf	(___fladd@a+2)^0,w,c
  7887  002490  5A47               	subwfb	(___fladd@b+2)^0,f,c
  7888  002492  504C               	movf	(___fladd@a+3)^0,w,c
  7889  002494  5A48               	subwfb	(___fladd@b+3)^0,f,c
  7890  002496                     l984:
  7891  002496  5045               	movf	___fladd@b^0,w,c
  7892  002498  1046               	iorwf	(___fladd@b+1)^0,w,c
  7893  00249A  1047               	iorwf	(___fladd@b+2)^0,w,c
  7894  00249C  1048               	iorwf	(___fladd@b+3)^0,w,c
  7895  00249E  A4D8               	btfss	status,2,c
  7896  0024A0  EF54  F012         	goto	u3021
  7897  0024A4  EF56  F012         	goto	u3020
  7898  0024A8                     u3021:
  7899  0024A8  EF8B  F012         	goto	l3219
  7900  0024AC                     u3020:
  7901  0024AC  5054               	movf	___fladd@grs^0,w,c
  7902  0024AE  A4D8               	btfss	status,2,c
  7903  0024B0  EF5C  F012         	goto	u3031
  7904  0024B4  EF5E  F012         	goto	u3030
  7905  0024B8                     u3031:
  7906  0024B8  EF8B  F012         	goto	l3219
  7907  0024BC                     u3030:
  7908  0024BC  0E00               	movlw	0
  7909  0024BE  6E45               	movwf	?___fladd^0,c
  7910  0024C0  0E00               	movlw	0
  7911  0024C2  6E46               	movwf	(?___fladd+1)^0,c
  7912  0024C4  0E00               	movlw	0
  7913  0024C6  6E47               	movwf	(?___fladd+2)^0,c
  7914  0024C8  0E00               	movlw	0
  7915  0024CA  6E48               	movwf	(?___fladd+3)^0,c
  7916  0024CC  EF26  F013         	goto	l976
  7917  0024D0                     l3203:
  7918  0024D0  90D8               	bcf	status,0,c
  7919  0024D2  3645               	rlcf	___fladd@b^0,f,c
  7920  0024D4  3646               	rlcf	(___fladd@b+1)^0,f,c
  7921  0024D6  3647               	rlcf	(___fladd@b+2)^0,f,c
  7922  0024D8  3648               	rlcf	(___fladd@b+3)^0,f,c
  7923  0024DA  AE54               	btfss	___fladd@grs^0,7,c
  7924  0024DC  EF72  F012         	goto	u3041
  7925  0024E0  EF74  F012         	goto	u3040
  7926  0024E4                     u3041:
  7927  0024E4  EF75  F012         	goto	l3209
  7928  0024E8                     u3040:
  7929  0024E8  8045               	bsf	___fladd@b^0,0,c
  7930  0024EA                     l3209:
  7931  0024EA  A054               	btfss	___fladd@grs^0,0,c
  7932  0024EC  EF7A  F012         	goto	u3051
  7933  0024F0  EF7C  F012         	goto	u3050
  7934  0024F4                     u3051:
  7935  0024F4  EF80  F012         	goto	l3213
  7936  0024F8                     u3050:
  7937  0024F8  80D8               	bsf	status,0,c
  7938  0024FA  3654               	rlcf	___fladd@grs^0,f,c
  7939  0024FC  EF82  F012         	goto	l3215
  7940  002500                     l3213:
  7941  002500  90D8               	bcf	status,0,c
  7942  002502  3654               	rlcf	___fladd@grs^0,f,c
  7943  002504                     l3215:
  7944  002504  5053               	movf	___fladd@bexp^0,w,c
  7945  002506  B4D8               	btfsc	status,2,c
  7946  002508  EF88  F012         	goto	u3061
  7947  00250C  EF8A  F012         	goto	u3060
  7948  002510                     u3061:
  7949  002510  EF8B  F012         	goto	l3219
  7950  002514                     u3060:
  7951  002514  0653               	decf	___fladd@bexp^0,f,c
  7952  002516                     l3219:
  7953  002516  AE47               	btfss	(___fladd@b+2)^0,7,c
  7954  002518  EF90  F012         	goto	u3071
  7955  00251C  EF92  F012         	goto	u3070
  7956  002520                     u3071:
  7957  002520  EF68  F012         	goto	l3203
  7958  002524                     u3070:
  7959  002524                     l3221:
  7960  002524  0E00               	movlw	0
  7961  002526  6E52               	movwf	___fladd@aexp^0,c
  7962  002528  AE54               	btfss	___fladd@grs^0,7,c
  7963  00252A  EF99  F012         	goto	u3081
  7964  00252E  EF9B  F012         	goto	u3080
  7965  002532                     u3081:
  7966  002532  EFB3  F012         	goto	l993
  7967  002536                     u3080:
  7968  002536  C054  F04D         	movff	___fladd@grs,??___fladd
  7969  00253A  0E7F               	movlw	127
  7970  00253C  164D               	andwf	??___fladd^0,f,c
  7971  00253E  B4D8               	btfsc	status,2,c
  7972  002540  EFA4  F012         	goto	u3091
  7973  002544  EFA6  F012         	goto	u3090
  7974  002548                     u3091:
  7975  002548  EFAA  F012         	goto	l994
  7976  00254C                     u3090:
  7977  00254C                     l3227:
  7978  00254C  0E01               	movlw	1
  7979  00254E  6E52               	movwf	___fladd@aexp^0,c
  7980  002550  EFB3  F012         	goto	l993
  7981  002554                     l994:
  7982  002554  A045               	btfss	___fladd@b^0,0,c
  7983  002556  EFAF  F012         	goto	u3101
  7984  00255A  EFB1  F012         	goto	u3100
  7985  00255E                     u3101:
  7986  00255E  EFB3  F012         	goto	l993
  7987  002562                     u3100:
  7988  002562  EFA6  F012         	goto	l3227
  7989  002566                     l993:
  7990  002566  5052               	movf	___fladd@aexp^0,w,c
  7991  002568  B4D8               	btfsc	status,2,c
  7992  00256A  EFB9  F012         	goto	u3111
  7993  00256E  EFBB  F012         	goto	u3110
  7994  002572                     u3111:
  7995  002572  EFE6  F012         	goto	l3239
  7996  002576                     u3110:
  7997  002576  0E01               	movlw	1
  7998  002578  2645               	addwf	___fladd@b^0,f,c
  7999  00257A  0E00               	movlw	0
  8000  00257C  2246               	addwfc	(___fladd@b+1)^0,f,c
  8001  00257E  2247               	addwfc	(___fladd@b+2)^0,f,c
  8002  002580  2248               	addwfc	(___fladd@b+3)^0,f,c
  8003  002582  A048               	btfss	(___fladd@b+3)^0,0,c
  8004  002584  EFC6  F012         	goto	u3121
  8005  002588  EFC8  F012         	goto	u3120
  8006  00258C                     u3121:
  8007  00258C  EFE6  F012         	goto	l3239
  8008  002590                     u3120:
  8009  002590  C045  F04D         	movff	___fladd@b,??___fladd
  8010  002594  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  8011  002598  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  8012  00259C  C048  F050         	movff	___fladd@b+3,??___fladd+3
  8013  0025A0  3450               	rlcf	(??___fladd+3)^0,w,c
  8014  0025A2  3250               	rrcf	(??___fladd+3)^0,f,c
  8015  0025A4  324F               	rrcf	(??___fladd+2)^0,f,c
  8016  0025A6  324E               	rrcf	(??___fladd+1)^0,f,c
  8017  0025A8  324D               	rrcf	??___fladd^0,f,c
  8018  0025AA  C04D  F045         	movff	??___fladd,___fladd@b
  8019  0025AE  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  8020  0025B2  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  8021  0025B6  C050  F048         	movff	??___fladd+3,___fladd@b+3
  8022  0025BA  2853               	incf	___fladd@bexp^0,w,c
  8023  0025BC  B4D8               	btfsc	status,2,c
  8024  0025BE  EFE3  F012         	goto	u3131
  8025  0025C2  EFE5  F012         	goto	u3130
  8026  0025C6                     u3131:
  8027  0025C6  EFE6  F012         	goto	l3239
  8028  0025CA                     u3130:
  8029  0025CA  2A53               	incf	___fladd@bexp^0,f,c
  8030  0025CC                     l3239:
  8031  0025CC  2853               	incf	___fladd@bexp^0,w,c
  8032  0025CE  B4D8               	btfsc	status,2,c
  8033  0025D0  EFEC  F012         	goto	u3141
  8034  0025D4  EFEE  F012         	goto	u3140
  8035  0025D8                     u3141:
  8036  0025D8  EFF6  F012         	goto	l3243
  8037  0025DC                     u3140:
  8038  0025DC  5053               	movf	___fladd@bexp^0,w,c
  8039  0025DE  A4D8               	btfss	status,2,c
  8040  0025E0  EFF4  F012         	goto	u3151
  8041  0025E4  EFF6  F012         	goto	u3150
  8042  0025E8                     u3151:
  8043  0025E8  EF08  F013         	goto	l3247
  8044  0025EC                     u3150:
  8045  0025EC                     l3243:
  8046  0025EC  0E00               	movlw	0
  8047  0025EE  6E45               	movwf	___fladd@b^0,c
  8048  0025F0  0E00               	movlw	0
  8049  0025F2  6E46               	movwf	(___fladd@b+1)^0,c
  8050  0025F4  0E00               	movlw	0
  8051  0025F6  6E47               	movwf	(___fladd@b+2)^0,c
  8052  0025F8  0E00               	movlw	0
  8053  0025FA  6E48               	movwf	(___fladd@b+3)^0,c
  8054  0025FC  5053               	movf	___fladd@bexp^0,w,c
  8055  0025FE  A4D8               	btfss	status,2,c
  8056  002600  EF04  F013         	goto	u3161
  8057  002604  EF06  F013         	goto	u3160
  8058  002608                     u3161:
  8059  002608  EF08  F013         	goto	l3247
  8060  00260C                     u3160:
  8061  00260C  0E00               	movlw	0
  8062  00260E  6E51               	movwf	___fladd@signs^0,c
  8063  002610                     l3247:
  8064  002610  A053               	btfss	___fladd@bexp^0,0,c
  8065  002612  EF0D  F013         	goto	u3171
  8066  002616  EF0F  F013         	goto	u3170
  8067  00261A                     u3171:
  8068  00261A  EF12  F013         	goto	l3251
  8069  00261E                     u3170:
  8070  00261E  8E47               	bsf	(___fladd@b+2)^0,7,c
  8071  002620  EF13  F013         	goto	l3253
  8072  002624                     l3251:
  8073  002624  9E47               	bcf	(___fladd@b+2)^0,7,c
  8074  002626                     l3253:
  8075  002626  90D8               	bcf	status,0,c
  8076  002628  3053               	rrcf	___fladd@bexp^0,w,c
  8077  00262A  6E48               	movwf	(___fladd@b+3)^0,c
  8078  00262C  AE51               	btfss	___fladd@signs^0,7,c
  8079  00262E  EF1B  F013         	goto	u3181
  8080  002632  EF1D  F013         	goto	u3180
  8081  002636                     u3181:
  8082  002636  EF1E  F013         	goto	l3259
  8083  00263A                     u3180:
  8084  00263A  8E48               	bsf	(___fladd@b+3)^0,7,c
  8085  00263C                     l3259:
  8086  00263C  C045  F045         	movff	___fladd@b,?___fladd
  8087  002640  C046  F046         	movff	___fladd@b+1,?___fladd+1
  8088  002644  C047  F047         	movff	___fladd@b+2,?___fladd+2
  8089  002648  C048  F048         	movff	___fladd@b+3,?___fladd+3
  8090  00264C                     l976:
  8091  00264C  0012               	return		;funcret
  8092  00264E                     __end_of___fladd:
  8093                           	callstack 0
  8094                           
  8095 ;; *************** function _color_click_init *****************
  8096 ;; Defined at:
  8097 ;;		line 8 in file "color.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;		None
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1    wreg      void 
  8104 ;; Registers used:
  8105 ;;		wreg, status,2, status,0, cstack
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;Total ram usage:        1 bytes
  8116 ;; Hardware stack levels used: 1
  8117 ;; Hardware stack levels required when called: 5
  8118 ;; This function calls:
  8119 ;;		_I2C_2_Master_Init
  8120 ;;		_color_writetoaddr
  8121 ;; This function is called by:
  8122 ;;		_main
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text28
  8127  0040E4                     __ptext28:
  8128                           	callstack 0
  8129  0040E4                     _color_click_init:
  8130                           	callstack 25
  8131  0040E4                     
  8132                           ;color.c: 11:     I2C_2_Master_Init();
  8133  0040E4  ECD3  F020         	call	_I2C_2_Master_Init	;wreg free
  8134  0040E8                     
  8135                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  8136  0040E8  0E01               	movlw	1
  8137  0040EA  6E07               	movwf	color_writetoaddr@value^0,c
  8138  0040EC  0E00               	movlw	0
  8139  0040EE  EC36  F021         	call	_color_writetoaddr
  8140  0040F2                     
  8141                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8142  0040F2  0E3F               	movlw	63
  8143  0040F4  6E09               	movwf	??_color_click_init^0,c
  8144  0040F6  0E55               	movlw	85
  8145  0040F8                     u5337:
  8146  0040F8  2EE8               	decfsz	wreg,f,c
  8147  0040FA  D7FE               	bra	u5337
  8148  0040FC  2E09               	decfsz	??_color_click_init^0,f,c
  8149  0040FE  D7FC               	bra	u5337
  8150  004100  F000               	nop	
  8151  004102                     
  8152                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  8153  004102  0E03               	movlw	3
  8154  004104  6E07               	movwf	color_writetoaddr@value^0,c
  8155  004106  0E00               	movlw	0
  8156  004108  EC36  F021         	call	_color_writetoaddr
  8157  00410C                     
  8158                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  8159  00410C  0ED5               	movlw	213
  8160  00410E  6E07               	movwf	color_writetoaddr@value^0,c
  8161  004110  0E01               	movlw	1
  8162  004112  EC36  F021         	call	_color_writetoaddr
  8163  004116  0012               	return		;funcret
  8164  004118                     __end_of_color_click_init:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _color_writetoaddr *****************
  8168 ;; Defined at:
  8169 ;;		line 24 in file "color.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  address         1    wreg     unsigned char 
  8172 ;;  value           1    6[COMRAM] unsigned char 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  address         1    7[COMRAM] unsigned char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      void 
  8177 ;; Registers used:
  8178 ;;		wreg, status,2, status,0, cstack
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8184 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8188 ;;Total ram usage:        2 bytes
  8189 ;; Hardware stack levels used: 1
  8190 ;; Hardware stack levels required when called: 4
  8191 ;; This function calls:
  8192 ;;		_I2C_2_Master_Start
  8193 ;;		_I2C_2_Master_Stop
  8194 ;;		_I2C_2_Master_Write
  8195 ;; This function is called by:
  8196 ;;		_color_click_init
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text29
  8201  00426C                     __ptext29:
  8202                           	callstack 0
  8203  00426C                     _color_writetoaddr:
  8204                           	callstack 25
  8205                           
  8206                           ;incstack = 0
  8207                           ;color_writetoaddr@address stored from wreg
  8208  00426C  6E08               	movwf	color_writetoaddr@address^0,c
  8209  00426E                     
  8210                           ;color.c: 25:     I2C_2_Master_Start();
  8211  00426E  EC7C  F021         	call	_I2C_2_Master_Start	;wreg free
  8212                           
  8213                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8214  004272  0E52               	movlw	82
  8215  004274  EC6B  F021         	call	_I2C_2_Master_Write
  8216                           
  8217                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8218  004278  5008               	movf	color_writetoaddr@address^0,w,c
  8219  00427A  0980               	iorlw	128
  8220  00427C  EC6B  F021         	call	_I2C_2_Master_Write
  8221                           
  8222                           ;color.c: 28:     I2C_2_Master_Write(value);
  8223  004280  5007               	movf	color_writetoaddr@value^0,w,c
  8224  004282  EC6B  F021         	call	_I2C_2_Master_Write
  8225                           
  8226                           ;color.c: 29:     I2C_2_Master_Stop();
  8227  004286  EC77  F021         	call	_I2C_2_Master_Stop	;wreg free
  8228  00428A  0012               	return		;funcret
  8229  00428C                     __end_of_color_writetoaddr:
  8230                           	callstack 0
  8231                           
  8232 ;; *************** function _I2C_2_Master_Init *****************
  8233 ;; Defined at:
  8234 ;;		line 4 in file "i2c.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used: 1
  8254 ;; Hardware stack levels required when called: 2
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_color_click_init
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text30
  8263  0041A6                     __ptext30:
  8264                           	callstack 0
  8265  0041A6                     _I2C_2_Master_Init:
  8266                           	callstack 27
  8267  0041A6                     
  8268                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8269  0041A6  010E               	movlb	14	; () banked
  8270  0041A8  51D9               	movf	217,w,b	;volatile
  8271  0041AA  0BF0               	andlw	-16
  8272  0041AC  0908               	iorlw	8
  8273  0041AE  6FD9               	movwf	217,b	;volatile
  8274  0041B0                     
  8275                           ; BSR set to: 14
  8276                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8277  0041B0  8BD9               	bsf	217,5,b	;volatile
  8278                           
  8279                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8280  0041B2  0E9F               	movlw	159
  8281  0041B4  6FD6               	movwf	214,b	;volatile
  8282  0041B6                     
  8283                           ; BSR set to: 14
  8284                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8285  0041B6  8A84               	bsf	132,5,c	;volatile
  8286  0041B8                     
  8287                           ; BSR set to: 14
  8288                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8289  0041B8  8C84               	bsf	132,6,c	;volatile
  8290  0041BA                     
  8291                           ; BSR set to: 14
  8292                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8293  0041BA  9BA7               	bcf	167,5,b	;volatile
  8294  0041BC                     
  8295                           ; BSR set to: 14
  8296                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8297  0041BC  9DA7               	bcf	167,6,b	;volatile
  8298                           
  8299                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8300  0041BE  0E1D               	movlw	29
  8301  0041C0  6F1D               	movwf	29,b	;volatile
  8302                           
  8303                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8304  0041C2  0E1E               	movlw	30
  8305  0041C4  6F1C               	movwf	28,b	;volatile
  8306                           
  8307                           ;i2c.c: 18:   RD5PPS=0x1C;
  8308  0041C6  0E1C               	movlw	28
  8309  0041C8  6F6F               	movwf	111,b	;volatile
  8310                           
  8311                           ;i2c.c: 19:   RD6PPS=0x1B;
  8312  0041CA  0E1B               	movlw	27
  8313  0041CC  6F70               	movwf	112,b	;volatile
  8314  0041CE                     
  8315                           ; BSR set to: 14
  8316  0041CE  0012               	return		;funcret
  8317  0041D0                     __end_of_I2C_2_Master_Init:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _calibrateW *****************
  8321 ;; Defined at:
  8322 ;;		line 99 in file "color.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  m               2   15[COMRAM] PTR struct RGB_val
  8325 ;;		 -> main@test(20), 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;Total ram usage:        2 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 5
  8344 ;; This function calls:
  8345 ;;		_color_read_Blue
  8346 ;;		_color_read_Green
  8347 ;;		_color_read_Red
  8348 ;; This function is called by:
  8349 ;;		_main
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text31
  8354  003F16                     __ptext31:
  8355                           	callstack 0
  8356  003F16                     _calibrateW:
  8357                           	callstack 25
  8358  003F16                     
  8359                           ;color.c: 100:     (m->whiteR) = color_read_Red();
  8360  003F16  EC13  F01F         	call	_color_read_Red	;wreg free
  8361  003F1A  EE20 F006          	lfsr	2,6
  8362  003F1E  5010               	movf	calibrateW@m^0,w,c
  8363  003F20  26D9               	addwf	fsr2l,f,c
  8364  003F22  5011               	movf	(calibrateW@m+1)^0,w,c
  8365  003F24  22DA               	addwfc	fsr2h,f,c
  8366  003F26  C009  FFDE         	movff	?_color_read_Red,postinc2
  8367  003F2A  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  8368                           
  8369                           ;color.c: 101:     (m->whiteG) = color_read_Green();
  8370  003F2E  EC3B  F01F         	call	_color_read_Green	;wreg free
  8371  003F32  EE20 F008          	lfsr	2,8
  8372  003F36  5010               	movf	calibrateW@m^0,w,c
  8373  003F38  26D9               	addwf	fsr2l,f,c
  8374  003F3A  5011               	movf	(calibrateW@m+1)^0,w,c
  8375  003F3C  22DA               	addwfc	fsr2h,f,c
  8376  003F3E  C009  FFDE         	movff	?_color_read_Green,postinc2
  8377  003F42  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  8378                           
  8379                           ;color.c: 102:     (m->whiteB) = color_read_Blue();
  8380  003F46  EC63  F01F         	call	_color_read_Blue	;wreg free
  8381  003F4A  EE20 F00A          	lfsr	2,10
  8382  003F4E  5010               	movf	calibrateW@m^0,w,c
  8383  003F50  26D9               	addwf	fsr2l,f,c
  8384  003F52  5011               	movf	(calibrateW@m+1)^0,w,c
  8385  003F54  22DA               	addwfc	fsr2h,f,c
  8386  003F56  C009  FFDE         	movff	?_color_read_Blue,postinc2
  8387  003F5A  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  8388  003F5E  0012               	return		;funcret
  8389  003F60                     __end_of_calibrateW:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function _calibrateB *****************
  8393 ;; Defined at:
  8394 ;;		line 105 in file "color.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  m               2   15[COMRAM] PTR struct RGB_val
  8397 ;;		 -> main@test(20), 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;		None
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;Total ram usage:        2 bytes
  8414 ;; Hardware stack levels used: 1
  8415 ;; Hardware stack levels required when called: 5
  8416 ;; This function calls:
  8417 ;;		_color_read_Blue
  8418 ;;		_color_read_Green
  8419 ;;		_color_read_Red
  8420 ;; This function is called by:
  8421 ;;		_main
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text32
  8426  003F60                     __ptext32:
  8427                           	callstack 0
  8428  003F60                     _calibrateB:
  8429                           	callstack 25
  8430  003F60                     
  8431                           ;color.c: 106:     (m->blackR) = color_read_Red();
  8432  003F60  EC13  F01F         	call	_color_read_Red	;wreg free
  8433  003F64  C010  FFD9         	movff	calibrateB@m,fsr2l
  8434  003F68  C011  FFDA         	movff	calibrateB@m+1,fsr2h
  8435  003F6C  C009  FFDE         	movff	?_color_read_Red,postinc2
  8436  003F70  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  8437                           
  8438                           ;color.c: 107:     (m->blackG) = color_read_Green();
  8439  003F74  EC3B  F01F         	call	_color_read_Green	;wreg free
  8440  003F78  EE20 F002          	lfsr	2,2
  8441  003F7C  5010               	movf	calibrateB@m^0,w,c
  8442  003F7E  26D9               	addwf	fsr2l,f,c
  8443  003F80  5011               	movf	(calibrateB@m+1)^0,w,c
  8444  003F82  22DA               	addwfc	fsr2h,f,c
  8445  003F84  C009  FFDE         	movff	?_color_read_Green,postinc2
  8446  003F88  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  8447                           
  8448                           ;color.c: 108:     (m->blackB) = color_read_Blue();
  8449  003F8C  EC63  F01F         	call	_color_read_Blue	;wreg free
  8450  003F90  EE20 F004          	lfsr	2,4
  8451  003F94  5010               	movf	calibrateB@m^0,w,c
  8452  003F96  26D9               	addwf	fsr2l,f,c
  8453  003F98  5011               	movf	(calibrateB@m+1)^0,w,c
  8454  003F9A  22DA               	addwfc	fsr2h,f,c
  8455  003F9C  C009  FFDE         	movff	?_color_read_Blue,postinc2
  8456  003FA0  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  8457  003FA4  0012               	return		;funcret
  8458  003FA6                     __end_of_calibrateB:
  8459                           	callstack 0
  8460                           
  8461 ;; *************** function _color_read_Red *****************
  8462 ;; Defined at:
  8463 ;;		line 47 in file "color.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  tmp             2   13[COMRAM] unsigned int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  2    8[COMRAM] unsigned int 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8481 ;;Total ram usage:        7 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 4
  8484 ;; This function calls:
  8485 ;;		_I2C_2_Master_Read
  8486 ;;		_I2C_2_Master_RepStart
  8487 ;;		_I2C_2_Master_Start
  8488 ;;		_I2C_2_Master_Stop
  8489 ;;		_I2C_2_Master_Write
  8490 ;; This function is called by:
  8491 ;;		_read_colours
  8492 ;;		_calibrateW
  8493 ;;		_calibrateB
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text33
  8498  003E26                     __ptext33:
  8499                           	callstack 0
  8500  003E26                     _color_read_Red:
  8501                           	callstack 25
  8502  003E26                     
  8503                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  8504  003E26  EC7C  F021         	call	_I2C_2_Master_Start	;wreg free
  8505                           
  8506                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  8507  003E2A  0E52               	movlw	82
  8508  003E2C  EC6B  F021         	call	_I2C_2_Master_Write
  8509                           
  8510                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x16);
  8511  003E30  0EB6               	movlw	182
  8512  003E32  EC6B  F021         	call	_I2C_2_Master_Write
  8513                           
  8514                           ;color.c: 53:  I2C_2_Master_RepStart();
  8515  003E36  EC81  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8516                           
  8517                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  8518  003E3A  0E53               	movlw	83
  8519  003E3C  EC6B  F021         	call	_I2C_2_Master_Write
  8520                           
  8521                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  8522  003E40  0E01               	movlw	1
  8523  003E42  EC16  F020         	call	_I2C_2_Master_Read
  8524  003E46  6E0B               	movwf	??_color_read_Red^0,c
  8525  003E48  500B               	movf	??_color_read_Red^0,w,c
  8526  003E4A  6E0E               	movwf	color_read_Red@tmp^0,c
  8527  003E4C  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  8528                           
  8529                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8530  003E4E  0E00               	movlw	0
  8531  003E50  EC16  F020         	call	_I2C_2_Master_Read
  8532  003E54  6E0B               	movwf	??_color_read_Red^0,c
  8533  003E56  500B               	movf	??_color_read_Red^0,w,c
  8534  003E58  6E0D               	movwf	(??_color_read_Red+2)^0,c
  8535  003E5A  6A0C               	clrf	(??_color_read_Red+1)^0,c
  8536  003E5C  500E               	movf	color_read_Red@tmp^0,w,c
  8537  003E5E  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  8538  003E60  6E0E               	movwf	color_read_Red@tmp^0,c
  8539  003E62  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  8540  003E64  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  8541  003E66  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  8542                           
  8543                           ;color.c: 57:  I2C_2_Master_Stop();
  8544  003E68  EC77  F021         	call	_I2C_2_Master_Stop	;wreg free
  8545  003E6C                     
  8546                           ;color.c: 58:  return tmp;
  8547  003E6C  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  8548  003E70  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8549  003E74  0012               	return		;funcret
  8550  003E76                     __end_of_color_read_Red:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function _color_read_Green *****************
  8554 ;; Defined at:
  8555 ;;		line 61 in file "color.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  tmp             2   13[COMRAM] unsigned int 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2    8[COMRAM] unsigned int 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8571 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;Total ram usage:        7 bytes
  8574 ;; Hardware stack levels used: 1
  8575 ;; Hardware stack levels required when called: 4
  8576 ;; This function calls:
  8577 ;;		_I2C_2_Master_Read
  8578 ;;		_I2C_2_Master_RepStart
  8579 ;;		_I2C_2_Master_Start
  8580 ;;		_I2C_2_Master_Stop
  8581 ;;		_I2C_2_Master_Write
  8582 ;; This function is called by:
  8583 ;;		_read_colours
  8584 ;;		_calibrateW
  8585 ;;		_calibrateB
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text34
  8590  003E76                     __ptext34:
  8591                           	callstack 0
  8592  003E76                     _color_read_Green:
  8593                           	callstack 25
  8594  003E76                     
  8595                           ;color.c: 62:     unsigned int tmp;;color.c: 63:     I2C_2_Master_Start();
  8596  003E76  EC7C  F021         	call	_I2C_2_Master_Start	;wreg free
  8597                           
  8598                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x00);
  8599  003E7A  0E52               	movlw	82
  8600  003E7C  EC6B  F021         	call	_I2C_2_Master_Write
  8601                           
  8602                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  8603  003E80  0EB8               	movlw	184
  8604  003E82  EC6B  F021         	call	_I2C_2_Master_Write
  8605                           
  8606                           ;color.c: 66:  I2C_2_Master_RepStart();
  8607  003E86  EC81  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8608                           
  8609                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  8610  003E8A  0E53               	movlw	83
  8611  003E8C  EC6B  F021         	call	_I2C_2_Master_Write
  8612                           
  8613                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  8614  003E90  0E01               	movlw	1
  8615  003E92  EC16  F020         	call	_I2C_2_Master_Read
  8616  003E96  6E0B               	movwf	??_color_read_Green^0,c
  8617  003E98  500B               	movf	??_color_read_Green^0,w,c
  8618  003E9A  6E0E               	movwf	color_read_Green@tmp^0,c
  8619  003E9C  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  8620                           
  8621                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8622  003E9E  0E00               	movlw	0
  8623  003EA0  EC16  F020         	call	_I2C_2_Master_Read
  8624  003EA4  6E0B               	movwf	??_color_read_Green^0,c
  8625  003EA6  500B               	movf	??_color_read_Green^0,w,c
  8626  003EA8  6E0D               	movwf	(??_color_read_Green+2)^0,c
  8627  003EAA  6A0C               	clrf	(??_color_read_Green+1)^0,c
  8628  003EAC  500E               	movf	color_read_Green@tmp^0,w,c
  8629  003EAE  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  8630  003EB0  6E0E               	movwf	color_read_Green@tmp^0,c
  8631  003EB2  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  8632  003EB4  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  8633  003EB6  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  8634                           
  8635                           ;color.c: 70:     I2C_2_Master_Stop();
  8636  003EB8  EC77  F021         	call	_I2C_2_Master_Stop	;wreg free
  8637  003EBC                     
  8638                           ;color.c: 71:     return tmp;
  8639  003EBC  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  8640  003EC0  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8641  003EC4  0012               	return		;funcret
  8642  003EC6                     __end_of_color_read_Green:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _color_read_Blue *****************
  8646 ;; Defined at:
  8647 ;;		line 74 in file "color.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;		None
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  tmp             2   13[COMRAM] unsigned int 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  2    8[COMRAM] unsigned int 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;Total ram usage:        7 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 4
  8668 ;; This function calls:
  8669 ;;		_I2C_2_Master_Read
  8670 ;;		_I2C_2_Master_RepStart
  8671 ;;		_I2C_2_Master_Start
  8672 ;;		_I2C_2_Master_Stop
  8673 ;;		_I2C_2_Master_Write
  8674 ;; This function is called by:
  8675 ;;		_read_colours
  8676 ;;		_calibrateW
  8677 ;;		_calibrateB
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text35
  8682  003EC6                     __ptext35:
  8683                           	callstack 0
  8684  003EC6                     _color_read_Blue:
  8685                           	callstack 25
  8686  003EC6                     
  8687                           ;color.c: 75:     unsigned int tmp;;color.c: 76:     I2C_2_Master_Start();
  8688  003EC6  EC7C  F021         	call	_I2C_2_Master_Start	;wreg free
  8689                           
  8690                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x00);
  8691  003ECA  0E52               	movlw	82
  8692  003ECC  EC6B  F021         	call	_I2C_2_Master_Write
  8693                           
  8694                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x1A);
  8695  003ED0  0EBA               	movlw	186
  8696  003ED2  EC6B  F021         	call	_I2C_2_Master_Write
  8697                           
  8698                           ;color.c: 79:  I2C_2_Master_RepStart();
  8699  003ED6  EC81  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8700                           
  8701                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  8702  003EDA  0E53               	movlw	83
  8703  003EDC  EC6B  F021         	call	_I2C_2_Master_Write
  8704                           
  8705                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  8706  003EE0  0E01               	movlw	1
  8707  003EE2  EC16  F020         	call	_I2C_2_Master_Read
  8708  003EE6  6E0B               	movwf	??_color_read_Blue^0,c
  8709  003EE8  500B               	movf	??_color_read_Blue^0,w,c
  8710  003EEA  6E0E               	movwf	color_read_Blue@tmp^0,c
  8711  003EEC  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  8712                           
  8713                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8714  003EEE  0E00               	movlw	0
  8715  003EF0  EC16  F020         	call	_I2C_2_Master_Read
  8716  003EF4  6E0B               	movwf	??_color_read_Blue^0,c
  8717  003EF6  500B               	movf	??_color_read_Blue^0,w,c
  8718  003EF8  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  8719  003EFA  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  8720  003EFC  500E               	movf	color_read_Blue@tmp^0,w,c
  8721  003EFE  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  8722  003F00  6E0E               	movwf	color_read_Blue@tmp^0,c
  8723  003F02  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  8724  003F04  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  8725  003F06  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  8726                           
  8727                           ;color.c: 83:     I2C_2_Master_Stop();
  8728  003F08  EC77  F021         	call	_I2C_2_Master_Stop	;wreg free
  8729  003F0C                     
  8730                           ;color.c: 84:     return tmp;
  8731  003F0C  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  8732  003F10  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  8733  003F14  0012               	return		;funcret
  8734  003F16                     __end_of_color_read_Blue:
  8735                           	callstack 0
  8736                           
  8737 ;; *************** function _I2C_2_Master_Write *****************
  8738 ;; Defined at:
  8739 ;;		line 45 in file "i2c.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  data_byte       1    wreg     unsigned char 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  data_byte       1    5[COMRAM] unsigned char 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8757 ;;Total ram usage:        1 bytes
  8758 ;; Hardware stack levels used: 1
  8759 ;; Hardware stack levels required when called: 3
  8760 ;; This function calls:
  8761 ;;		_I2C_2_Master_Idle
  8762 ;; This function is called by:
  8763 ;;		_color_writetoaddr
  8764 ;;		_color_read_Clear
  8765 ;;		_color_read_Red
  8766 ;;		_color_read_Green
  8767 ;;		_color_read_Blue
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text36
  8772  0042D6                     __ptext36:
  8773                           	callstack 0
  8774  0042D6                     _I2C_2_Master_Write:
  8775                           	callstack 25
  8776                           
  8777                           ;incstack = 0
  8778                           ;I2C_2_Master_Write@data_byte stored from wreg
  8779  0042D6  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  8780  0042D8                     
  8781                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8782  0042D8  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  8783  0042DC                     
  8784                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8785  0042DC  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8786  0042E0  0012               	return		;funcret
  8787  0042E2                     __end_of_I2C_2_Master_Write:
  8788                           	callstack 0
  8789                           
  8790 ;; *************** function _I2C_2_Master_Stop *****************
  8791 ;; Defined at:
  8792 ;;		line 39 in file "i2c.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2, status,0, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;Total ram usage:        0 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 3
  8813 ;; This function calls:
  8814 ;;		_I2C_2_Master_Idle
  8815 ;; This function is called by:
  8816 ;;		_color_writetoaddr
  8817 ;;		_color_read_Clear
  8818 ;;		_color_read_Red
  8819 ;;		_color_read_Green
  8820 ;;		_color_read_Blue
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text37
  8825  0042EE                     __ptext37:
  8826                           	callstack 0
  8827  0042EE                     _I2C_2_Master_Stop:
  8828                           	callstack 25
  8829  0042EE                     
  8830                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8831  0042EE  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  8832  0042F2                     
  8833                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8834  0042F2  010E               	movlb	14	; () banked
  8835  0042F4  85DA               	bsf	218,2,b	;volatile
  8836  0042F6                     
  8837                           ; BSR set to: 14
  8838  0042F6  0012               	return		;funcret
  8839  0042F8                     __end_of_I2C_2_Master_Stop:
  8840                           	callstack 0
  8841                           
  8842 ;; *************** function _I2C_2_Master_Start *****************
  8843 ;; Defined at:
  8844 ;;		line 27 in file "i2c.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;Total ram usage:        0 bytes
  8863 ;; Hardware stack levels used: 1
  8864 ;; Hardware stack levels required when called: 3
  8865 ;; This function calls:
  8866 ;;		_I2C_2_Master_Idle
  8867 ;; This function is called by:
  8868 ;;		_color_writetoaddr
  8869 ;;		_color_read_Clear
  8870 ;;		_color_read_Red
  8871 ;;		_color_read_Green
  8872 ;;		_color_read_Blue
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text38
  8877  0042F8                     __ptext38:
  8878                           	callstack 0
  8879  0042F8                     _I2C_2_Master_Start:
  8880                           	callstack 25
  8881  0042F8                     
  8882                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8883  0042F8  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  8884  0042FC                     
  8885                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8886  0042FC  010E               	movlb	14	; () banked
  8887  0042FE  81DA               	bsf	218,0,b	;volatile
  8888  004300                     
  8889                           ; BSR set to: 14
  8890  004300  0012               	return		;funcret
  8891  004302                     __end_of_I2C_2_Master_Start:
  8892                           	callstack 0
  8893                           
  8894 ;; *************** function _I2C_2_Master_RepStart *****************
  8895 ;; Defined at:
  8896 ;;		line 33 in file "i2c.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;Total ram usage:        0 bytes
  8915 ;; Hardware stack levels used: 1
  8916 ;; Hardware stack levels required when called: 3
  8917 ;; This function calls:
  8918 ;;		_I2C_2_Master_Idle
  8919 ;; This function is called by:
  8920 ;;		_color_read_Clear
  8921 ;;		_color_read_Red
  8922 ;;		_color_read_Green
  8923 ;;		_color_read_Blue
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           	psect	text39
  8928  004302                     __ptext39:
  8929                           	callstack 0
  8930  004302                     _I2C_2_Master_RepStart:
  8931                           	callstack 25
  8932  004302                     
  8933                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8934  004302  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  8935  004306                     
  8936                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8937  004306  010E               	movlb	14	; () banked
  8938  004308  83DA               	bsf	218,1,b	;volatile
  8939  00430A                     
  8940                           ; BSR set to: 14
  8941  00430A  0012               	return		;funcret
  8942  00430C                     __end_of_I2C_2_Master_RepStart:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _I2C_2_Master_Read *****************
  8946 ;; Defined at:
  8947 ;;		line 51 in file "i2c.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  ack             1    wreg     unsigned char 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  ack             1    6[COMRAM] unsigned char 
  8952 ;;  tmp             1    7[COMRAM] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      unsigned char 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2, status,0, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;Total ram usage:        3 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 3
  8969 ;; This function calls:
  8970 ;;		_I2C_2_Master_Idle
  8971 ;; This function is called by:
  8972 ;;		_color_read_Clear
  8973 ;;		_color_read_Red
  8974 ;;		_color_read_Green
  8975 ;;		_color_read_Blue
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           	psect	text40
  8980  00402C                     __ptext40:
  8981                           	callstack 0
  8982  00402C                     _I2C_2_Master_Read:
  8983                           	callstack 25
  8984                           
  8985                           ; BSR set to: 14
  8986                           ;incstack = 0
  8987                           ;I2C_2_Master_Read@ack stored from wreg
  8988  00402C  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  8989  00402E                     
  8990                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8991  00402E  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  8992  004032                     
  8993                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8994  004032  010E               	movlb	14	; () banked
  8995  004034  87DA               	bsf	218,3,b	;volatile
  8996                           
  8997                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8998  004036  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  8999  00403A                     
  9000                           ;i2c.c: 57:   tmp = SSP2BUF;
  9001  00403A  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9002                           
  9003                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9004  00403E  EC12  F021         	call	_I2C_2_Master_Idle	;wreg free
  9005  004042                     
  9006                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9007  004042  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  9008  004044  B4D8               	btfsc	status,2,c
  9009  004046  EF27  F020         	goto	u2641
  9010  00404A  EF2B  F020         	goto	u2640
  9011  00404E                     u2641:
  9012  00404E  6A06               	clrf	??_I2C_2_Master_Read^0,c
  9013  004050  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  9014  004052  EF2C  F020         	goto	u2658
  9015  004056                     u2640:
  9016  004056  6A06               	clrf	??_I2C_2_Master_Read^0,c
  9017  004058                     u2658:
  9018  004058  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  9019  00405A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  9020  00405C  010E               	movlb	14	; () banked
  9021  00405E  51DA               	movf	218,w,b	;volatile
  9022  004060  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  9023  004062  0BDF               	andlw	-33
  9024  004064  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  9025  004066  6FDA               	movwf	218,b	;volatile
  9026  004068                     
  9027                           ; BSR set to: 14
  9028                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9029  004068  89DA               	bsf	218,4,b	;volatile
  9030  00406A                     
  9031                           ; BSR set to: 14
  9032                           ;i2c.c: 61:   return tmp;
  9033  00406A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  9034  00406C                     
  9035                           ; BSR set to: 14
  9036  00406C  0012               	return		;funcret
  9037  00406E                     __end_of_I2C_2_Master_Read:
  9038                           	callstack 0
  9039                           
  9040 ;; *************** function _I2C_2_Master_Idle *****************
  9041 ;; Defined at:
  9042 ;;		line 22 in file "i2c.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;Total ram usage:        1 bytes
  9061 ;; Hardware stack levels used: 1
  9062 ;; Hardware stack levels required when called: 2
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_I2C_2_Master_Start
  9067 ;;		_I2C_2_Master_RepStart
  9068 ;;		_I2C_2_Master_Stop
  9069 ;;		_I2C_2_Master_Write
  9070 ;;		_I2C_2_Master_Read
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text41
  9075  004224                     __ptext41:
  9076                           	callstack 0
  9077  004224                     _I2C_2_Master_Idle:
  9078                           	callstack 25
  9079  004224                     l108:
  9080  004224  010E               	movlb	14	; () banked
  9081  004226  B5D8               	btfsc	216,2,b	;volatile
  9082  004228  EF18  F021         	goto	u2471
  9083  00422C  EF1A  F021         	goto	u2470
  9084  004230                     u2471:
  9085  004230  EF12  F021         	goto	l108
  9086  004234                     u2470:
  9087  004234                     
  9088                           ; BSR set to: 14
  9089  004234  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9090  004238  0E1F               	movlw	31
  9091  00423A  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  9092  00423C  A4D8               	btfss	status,2,c
  9093  00423E  EF23  F021         	goto	u2481
  9094  004242  EF25  F021         	goto	u2480
  9095  004246                     u2481:
  9096  004246  EF12  F021         	goto	l108
  9097  00424A                     u2480:
  9098  00424A                     
  9099                           ; BSR set to: 14
  9100  00424A  0012               	return		;funcret
  9101  00424C                     __end_of_I2C_2_Master_Idle:
  9102                           	callstack 0
  9103                           
  9104 ;; *************** function _TxBufferedString *****************
  9105 ;; Defined at:
  9106 ;;		line 98 in file "serial.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  string          2    5[COMRAM] PTR unsigned char 
  9109 ;;		 -> main@string3(30), main@string2(30), main@string1(30), main@string(30), 
  9110 ;;		 -> main@string0(30), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9126 ;;Total ram usage:        2 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 3
  9129 ;; This function calls:
  9130 ;;		_putCharToTxBuf
  9131 ;; This function is called by:
  9132 ;;		_main
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text42
  9137  00414A                     __ptext42:
  9138                           	callstack 0
  9139  00414A                     _TxBufferedString:
  9140                           	callstack 27
  9141  00414A                     
  9142                           ;serial.c: 100:     while(*string != 0){
  9143  00414A  EFB0  F020         	goto	l3803
  9144  00414E                     l3799:
  9145                           
  9146                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  9147  00414E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9148  004152  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9149  004156  50DF               	movf	indf2,w,c
  9150  004158  ECE8  F020         	call	_putCharToTxBuf
  9151  00415C  4A06               	infsnz	TxBufferedString@string^0,f,c
  9152  00415E  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  9153  004160                     l3803:
  9154                           
  9155                           ;serial.c: 100:     while(*string != 0){
  9156  004160  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9157  004164  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9158  004168  50DF               	movf	indf2,w,c
  9159  00416A  A4D8               	btfss	status,2,c
  9160  00416C  EFBA  F020         	goto	u4101
  9161  004170  EFBC  F020         	goto	u4100
  9162  004174                     u4101:
  9163  004174  EFA7  F020         	goto	l3799
  9164  004178                     u4100:
  9165  004178  0012               	return		;funcret
  9166  00417A                     __end_of_TxBufferedString:
  9167                           	callstack 0
  9168                           
  9169 ;; *************** function _putCharToTxBuf *****************
  9170 ;; Defined at:
  9171 ;;		line 85 in file "serial.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  byte            1    wreg     unsigned char 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  byte            1    4[COMRAM] unsigned char 
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;Total ram usage:        1 bytes
  9190 ;; Hardware stack levels used: 1
  9191 ;; Hardware stack levels required when called: 2
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_TxBufferedString
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text43
  9200  0041D0                     __ptext43:
  9201                           	callstack 0
  9202  0041D0                     _putCharToTxBuf:
  9203                           	callstack 27
  9204                           
  9205                           ;incstack = 0
  9206                           ;putCharToTxBuf@byte stored from wreg
  9207  0041D0  6E05               	movwf	putCharToTxBuf@byte^0,c
  9208  0041D2                     
  9209                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  9210  0041D2  0E3B               	movlw	59
  9211  0041D4  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  9212  0041D6  EFEF  F020         	goto	u2771
  9213  0041DA  EFF1  F020         	goto	u2770
  9214  0041DE                     u2771:
  9215  0041DE  EFF3  F020         	goto	l3053
  9216  0041E2                     u2770:
  9217  0041E2  0E00               	movlw	0
  9218  0041E4  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  9219  0041E6                     l3053:
  9220                           
  9221                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  9222  0041E6  0E00               	movlw	low _EUSART4TXbuf
  9223  0041E8  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  9224  0041EA  6ED9               	movwf	fsr2l,c
  9225  0041EC  6ADA               	clrf	fsr2h,c
  9226  0041EE  0E02               	movlw	high _EUSART4TXbuf
  9227  0041F0  22DA               	addwfc	fsr2h,f,c
  9228  0041F2  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  9229  0041F6  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  9230  0041F8  0012               	return		;funcret
  9231  0041FA                     __end_of_putCharToTxBuf:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _Interrupts_init *****************
  9235 ;; Defined at:
  9236 ;;		line 10 in file "interrupts.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		None
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used: 1
  9256 ;; Hardware stack levels required when called: 2
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_main
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text44
  9265  0042E2                     __ptext44:
  9266                           	callstack 0
  9267  0042E2                     _Interrupts_init:
  9268                           	callstack 28
  9269  0042E2                     
  9270                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  9271  0042E2  8CF2               	bsf	242,6,c	;volatile
  9272                           
  9273                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  9274  0042E4  010E               	movlb	14	; () banked
  9275  0042E6  872D               	bsf	45,3,b	;volatile
  9276                           
  9277                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  9278  0042E8  952D               	bcf	45,2,b	;volatile
  9279                           
  9280                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  9281  0042EA  8EF2               	bsf	242,7,c	;volatile
  9282  0042EC                     
  9283                           ; BSR set to: 14
  9284  0042EC  0012               	return		;funcret
  9285  0042EE                     __end_of_Interrupts_init:
  9286                           	callstack 0
  9287                           
  9288 ;; *************** function _HighISR *****************
  9289 ;; Defined at:
  9290 ;;		line 24 in file "interrupts.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;		None
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;		None
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      void 
  9297 ;; Registers used:
  9298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;Total ram usage:        2 bytes
  9309 ;; Hardware stack levels used: 1
  9310 ;; Hardware stack levels required when called: 1
  9311 ;; This function calls:
  9312 ;;		_getCharFromTxBuf
  9313 ;;		_putCharToRxBuf
  9314 ;;		i2_isDataInTxBuf
  9315 ;; This function is called by:
  9316 ;;		Interrupt level 2
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	intcode
  9321  000008                     __pintcode:
  9322                           	callstack 0
  9323  000008                     _HighISR:
  9324                           	callstack 21
  9325                           
  9326                           ; BSR set to: 14
  9327                           ;incstack = 0
  9328  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9329  00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  9330  00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  9331  000012                     
  9332                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  9333  000012  010E               	movlb	14	; () banked
  9334  000014  A737               	btfss	55,3,b	;volatile
  9335  000016  EF0F  F000         	goto	i2u427_41
  9336  00001A  EF11  F000         	goto	i2u427_40
  9337  00001E                     i2u427_41:
  9338  00001E  EF14  F000         	goto	i2l4015
  9339  000022                     i2u427_40:
  9340  000022                     
  9341                           ; BSR set to: 14
  9342                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  9343  000022  51E3               	movf	227,w,b	;volatile
  9344  000024  ECFD  F020         	call	_putCharToRxBuf
  9345  000028                     i2l4015:
  9346                           
  9347                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  9348  000028  010E               	movlb	14	; () banked
  9349  00002A  A537               	btfss	55,2,b	;volatile
  9350  00002C  EF1A  F000         	goto	i2u428_41
  9351  000030  EF1C  F000         	goto	i2u428_40
  9352  000034                     i2u428_41:
  9353  000034  EF35  F000         	goto	i2l436
  9354  000038                     i2u428_40:
  9355  000038                     
  9356                           ; BSR set to: 14
  9357  000038  A52D               	btfss	45,2,b	;volatile
  9358  00003A  EF21  F000         	goto	i2u429_41
  9359  00003E  EF23  F000         	goto	i2u429_40
  9360  000042                     i2u429_41:
  9361  000042  EF35  F000         	goto	i2l436
  9362  000046                     i2u429_40:
  9363  000046                     
  9364                           ; BSR set to: 14
  9365                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  9366  000046  EC5F  F021         	call	i2_isDataInTxBuf	;wreg free
  9367  00004A  06E8               	decf	wreg,f,c
  9368  00004C  A4D8               	btfss	status,2,c
  9369  00004E  EF2B  F000         	goto	i2u430_41
  9370  000052  EF2D  F000         	goto	i2u430_40
  9371  000056                     i2u430_41:
  9372  000056  EF33  F000         	goto	i2l434
  9373  00005A                     i2u430_40:
  9374  00005A  ECBD  F020         	call	_getCharFromTxBuf	;wreg free
  9375  00005E  010E               	movlb	14	; () banked
  9376  000060  6FE4               	movwf	228,b	;volatile
  9377  000062  EF35  F000         	goto	i2l436
  9378  000066                     i2l434:
  9379  000066  010E               	movlb	14	; () banked
  9380  000068  952D               	bcf	45,2,b	;volatile
  9381  00006A                     i2l436:
  9382                           
  9383                           ; BSR set to: 14
  9384  00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9385  00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  9386  000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9387  000074  0011               	retfie		f
  9388  000076                     __end_of_HighISR:
  9389                           	callstack 0
  9390                           
  9391 ;; *************** function i2_isDataInTxBuf *****************
  9392 ;; Defined at:
  9393 ;;		line 93 in file "serial.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      unsigned char 
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, status,0
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9411 ;;Total ram usage:        0 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_HighISR
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           	psect	text46
  9421  0042BE                     __ptext46:
  9422                           	callstack 0
  9423  0042BE                     i2_isDataInTxBuf:
  9424                           	callstack 21
  9425  0042BE                     
  9426                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  9427  0042BE  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  9428  0042C0  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9429  0042C2  A4D8               	btfss	status,2,c
  9430  0042C4  EF66  F021         	goto	i2u198_41
  9431  0042C8  EF69  F021         	goto	i2u198_40
  9432  0042CC                     i2u198_41:
  9433  0042CC  0E01               	movlw	1
  9434  0042CE  EF6A  F021         	goto	i2u199_40
  9435  0042D2                     i2u198_40:
  9436  0042D2  0E00               	movlw	0
  9437  0042D4                     i2u199_40:
  9438  0042D4  0012               	return		;funcret
  9439  0042D6                     __end_ofi2_isDataInTxBuf:
  9440                           	callstack 0
  9441                           
  9442 ;; *************** function _putCharToRxBuf *****************
  9443 ;; Defined at:
  9444 ;;		line 63 in file "serial.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  byte            1    wreg     unsigned char 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;  byte            1    0[COMRAM] unsigned char 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;Total ram usage:        1 bytes
  9463 ;; Hardware stack levels used: 1
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_HighISR
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text47
  9472  0041FA                     __ptext47:
  9473                           	callstack 0
  9474  0041FA                     _putCharToRxBuf:
  9475                           	callstack 21
  9476                           
  9477                           ;incstack = 0
  9478                           ;putCharToRxBuf@byte stored from wreg
  9479  0041FA  6E01               	movwf	putCharToRxBuf@byte^0,c
  9480  0041FC                     
  9481                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9482  0041FC  0E13               	movlw	19
  9483  0041FE  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9484  004200  EF04  F021         	goto	i2u412_41
  9485  004204  EF06  F021         	goto	i2u412_40
  9486  004208                     i2u412_41:
  9487  004208  EF08  F021         	goto	i2l3813
  9488  00420C                     i2u412_40:
  9489  00420C  0E00               	movlw	0
  9490  00420E  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  9491  004210                     i2l3813:
  9492                           
  9493                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9494  004210  0E60               	movlw	low _EUSART4RXbuf
  9495  004212  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9496  004214  6ED9               	movwf	fsr2l,c
  9497  004216  6ADA               	clrf	fsr2h,c
  9498  004218  0E00               	movlw	high _EUSART4RXbuf
  9499  00421A  22DA               	addwfc	fsr2h,f,c
  9500  00421C  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9501  004220  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9502  004222  0012               	return		;funcret
  9503  004224                     __end_of_putCharToRxBuf:
  9504                           	callstack 0
  9505                           
  9506 ;; *************** function _getCharFromTxBuf *****************
  9507 ;; Defined at:
  9508 ;;		line 79 in file "serial.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      unsigned char 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;Total ram usage:        2 bytes
  9527 ;; Hardware stack levels used: 1
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_HighISR
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text48
  9536  00417A                     __ptext48:
  9537                           	callstack 0
  9538  00417A                     _getCharFromTxBuf:
  9539                           	callstack 21
  9540  00417A                     
  9541                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9542  00417A  0E3B               	movlw	59
  9543  00417C  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9544  00417E  EFC3  F020         	goto	i2u413_41
  9545  004182  EFC5  F020         	goto	i2u413_40
  9546  004186                     i2u413_41:
  9547  004186  EFC7  F020         	goto	i2l3821
  9548  00418A                     i2u413_40:
  9549  00418A  0E00               	movlw	0
  9550  00418C  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  9551  00418E                     i2l3821:
  9552                           
  9553                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  9554  00418E  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  9555  004190  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  9556  004192  6E01               	movwf	??_getCharFromTxBuf^0,c
  9557  004194  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9558  004196  0E00               	movlw	low _EUSART4TXbuf
  9559  004198  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9560  00419A  6ED9               	movwf	fsr2l,c
  9561  00419C  0E02               	movlw	high _EUSART4TXbuf
  9562  00419E  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9563  0041A0  6EDA               	movwf	fsr2h,c
  9564  0041A2  50DF               	movf	indf2,w,c
  9565  0041A4  0012               	return		;funcret
  9566  0041A6                     __end_of_getCharFromTxBuf:
  9567                           	callstack 0
  9568                           
  9569                           	psect	rparam
  9570  0000                     
  9571                           	psect	temp
  9572  00005B                     btemp:
  9573                           	callstack 0
  9574  00005B                     	ds	1
  9575  0000                     int$flags	set	btemp
  9576  0000                     wtemp8	set	btemp+1
  9577  0000                     ttemp5	set	btemp+1
  9578  0000                     ttemp6	set	btemp+4
  9579  0000                     ttemp7	set	btemp+8
  9580                           
  9581                           	psect	idloc
  9582                           
  9583                           ;Config register IDLOC0 @ 0x200000
  9584                           ;	unspecified, using default values
  9585  200000                     	org	2097152
  9586  200000  0FFF               	dw	4095
  9587                           
  9588                           ;Config register IDLOC1 @ 0x200002
  9589                           ;	unspecified, using default values
  9590  200002                     	org	2097154
  9591  200002  0FFF               	dw	4095
  9592                           
  9593                           ;Config register IDLOC2 @ 0x200004
  9594                           ;	unspecified, using default values
  9595  200004                     	org	2097156
  9596  200004  0FFF               	dw	4095
  9597                           
  9598                           ;Config register IDLOC3 @ 0x200006
  9599                           ;	unspecified, using default values
  9600  200006                     	org	2097158
  9601  200006  0FFF               	dw	4095
  9602                           
  9603                           ;Config register IDLOC4 @ 0x200008
  9604                           ;	unspecified, using default values
  9605  200008                     	org	2097160
  9606  200008  0FFF               	dw	4095
  9607                           
  9608                           ;Config register IDLOC5 @ 0x20000A
  9609                           ;	unspecified, using default values
  9610  20000A                     	org	2097162
  9611  20000A  0FFF               	dw	4095
  9612                           
  9613                           ;Config register IDLOC6 @ 0x20000C
  9614                           ;	unspecified, using default values
  9615  20000C                     	org	2097164
  9616  20000C  0FFF               	dw	4095
  9617                           
  9618                           ;Config register IDLOC7 @ 0x20000E
  9619                           ;	unspecified, using default values
  9620  20000E                     	org	2097166
  9621  20000E  0FFF               	dw	4095
  9622                           
  9623                           	psect	config
  9624                           
  9625                           ;Config register CONFIG1L @ 0x300000
  9626                           ;	External Oscillator mode Selection bits
  9627                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9628                           ;	Power-up default value for COSC bits
  9629                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9630  300000                     	org	3145728
  9631  300000  AA                 	db	170
  9632                           
  9633                           ;Config register CONFIG1H @ 0x300001
  9634                           ;	unspecified, using default values
  9635                           ;	Clock Out Enable bit
  9636                           ;	CLKOUTEN = 0x1, unprogrammed default
  9637                           ;	Clock Switch Enable bit
  9638                           ;	CSWEN = 0x1, unprogrammed default
  9639                           ;	Fail-Safe Clock Monitor Enable bit
  9640                           ;	FCMEN = 0x1, unprogrammed default
  9641  300001                     	org	3145729
  9642  300001  FF                 	db	255
  9643                           
  9644                           ;Config register CONFIG2L @ 0x300002
  9645                           ;	unspecified, using default values
  9646                           ;	Master Clear Enable bit
  9647                           ;	MCLRE = 0x1, unprogrammed default
  9648                           ;	Power-up Timer Enable bit
  9649                           ;	PWRTE = 0x1, unprogrammed default
  9650                           ;	Low-power BOR enable bit
  9651                           ;	LPBOREN = 0x1, unprogrammed default
  9652                           ;	Brown-out Reset Enable bits
  9653                           ;	BOREN = 0x3, unprogrammed default
  9654  300002                     	org	3145730
  9655  300002  FF                 	db	255
  9656                           
  9657                           ;Config register CONFIG2H @ 0x300003
  9658                           ;	unspecified, using default values
  9659                           ;	Brown Out Reset Voltage selection bits
  9660                           ;	BORV = 0x3, unprogrammed default
  9661                           ;	ZCD Disable bit
  9662                           ;	ZCD = 0x1, unprogrammed default
  9663                           ;	PPSLOCK bit One-Way Set Enable bit
  9664                           ;	PPS1WAY = 0x1, unprogrammed default
  9665                           ;	Stack Full/Underflow Reset Enable bit
  9666                           ;	STVREN = 0x1, unprogrammed default
  9667                           ;	Debugger Enable bit
  9668                           ;	DEBUG = 0x1, unprogrammed default
  9669                           ;	Extended Instruction Set Enable bit
  9670                           ;	XINST = 0x1, unprogrammed default
  9671  300003                     	org	3145731
  9672  300003  FF                 	db	255
  9673                           
  9674                           ;Config register CONFIG3L @ 0x300004
  9675                           ;	WDT Period Select bits
  9676                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9677                           ;	WDT operating mode
  9678                           ;	WDTE = OFF, WDT Disabled
  9679  300004                     	org	3145732
  9680  300004  9F                 	db	159
  9681                           
  9682                           ;Config register CONFIG3H @ 0x300005
  9683                           ;	unspecified, using default values
  9684                           ;	WDT Window Select bits
  9685                           ;	WDTCWS = 0x7, unprogrammed default
  9686                           ;	WDT input clock selector
  9687                           ;	WDTCCS = 0x7, unprogrammed default
  9688  300005                     	org	3145733
  9689  300005  FF                 	db	255
  9690                           
  9691                           ;Config register CONFIG4L @ 0x300006
  9692                           ;	unspecified, using default values
  9693                           ;	Write Protection Block 0
  9694                           ;	WRT0 = 0x1, unprogrammed default
  9695                           ;	Write Protection Block 1
  9696                           ;	WRT1 = 0x1, unprogrammed default
  9697                           ;	Write Protection Block 2
  9698                           ;	WRT2 = 0x1, unprogrammed default
  9699                           ;	Write Protection Block 3
  9700                           ;	WRT3 = 0x1, unprogrammed default
  9701                           ;	Write Protection Block 3
  9702                           ;	WRT4 = 0x1, unprogrammed default
  9703                           ;	Write Protection Block 3
  9704                           ;	WRT5 = 0x1, unprogrammed default
  9705                           ;	Write Protection Block 3
  9706                           ;	WRT6 = 0x1, unprogrammed default
  9707                           ;	Write Protection Block 3
  9708                           ;	WRT7 = 0x1, unprogrammed default
  9709  300006                     	org	3145734
  9710  300006  FF                 	db	255
  9711                           
  9712                           ;Config register CONFIG4H @ 0x300007
  9713                           ;	unspecified, using default values
  9714                           ;	Configuration Register Write Protection bit
  9715                           ;	WRTC = 0x1, unprogrammed default
  9716                           ;	Boot Block Write Protection bit
  9717                           ;	WRTB = 0x1, unprogrammed default
  9718                           ;	Data EEPROM Write Protection bit
  9719                           ;	WRTD = 0x1, unprogrammed default
  9720                           ;	Scanner Enable bit
  9721                           ;	SCANE = 0x1, unprogrammed default
  9722                           ;	Low Voltage Programming Enable bit
  9723                           ;	LVP = 0x1, unprogrammed default
  9724  300007                     	org	3145735
  9725  300007  FF                 	db	255
  9726                           
  9727                           ;Config register CONFIG5L @ 0x300008
  9728                           ;	unspecified, using default values
  9729                           ;	UserNVM Program Memory Code Protection bit
  9730                           ;	CP = 0x1, unprogrammed default
  9731                           ;	DataNVM Memory Code Protection bit
  9732                           ;	CPD = 0x1, unprogrammed default
  9733  300008                     	org	3145736
  9734  300008  FF                 	db	255
  9735                           
  9736                           ;Config register CONFIG5H @ 0x300009
  9737                           ;	unspecified, using default values
  9738  300009                     	org	3145737
  9739  300009  FF                 	db	255
  9740                           
  9741                           ;Config register CONFIG6L @ 0x30000A
  9742                           ;	unspecified, using default values
  9743                           ;	Table Read Protection Block 0
  9744                           ;	EBTR0 = 0x1, unprogrammed default
  9745                           ;	Table Read Protection Block 1
  9746                           ;	EBTR1 = 0x1, unprogrammed default
  9747                           ;	Table Read Protection Block 2
  9748                           ;	EBTR2 = 0x1, unprogrammed default
  9749                           ;	Table Read Protection Block 3
  9750                           ;	EBTR3 = 0x1, unprogrammed default
  9751                           ;	Table Read Protection Block 4
  9752                           ;	EBTR4 = 0x1, unprogrammed default
  9753                           ;	Table Read Protection Block 5
  9754                           ;	EBTR5 = 0x1, unprogrammed default
  9755                           ;	Table Read Protection Block 6
  9756                           ;	EBTR6 = 0x1, unprogrammed default
  9757                           ;	Table Read Protection Block 7
  9758                           ;	EBTR7 = 0x1, unprogrammed default
  9759  30000A                     	org	3145738
  9760  30000A  FF                 	db	255
  9761                           
  9762                           ;Config register CONFIG6H @ 0x30000B
  9763                           ;	unspecified, using default values
  9764                           ;	Boot Block Table Read Protection bit
  9765                           ;	EBTRB = 0x1, unprogrammed default
  9766  30000B                     	org	3145739
  9767  30000B  FF                 	db	255
  9768                           tosu	equ	0xFFF
  9769                           tosh	equ	0xFFE
  9770                           tosl	equ	0xFFD
  9771                           stkptr	equ	0xFFC
  9772                           pclatu	equ	0xFFB
  9773                           pclath	equ	0xFFA
  9774                           pcl	equ	0xFF9
  9775                           tblptru	equ	0xFF8
  9776                           tblptrh	equ	0xFF7
  9777                           tblptrl	equ	0xFF6
  9778                           tablat	equ	0xFF5
  9779                           prodh	equ	0xFF4
  9780                           prodl	equ	0xFF3
  9781                           indf0	equ	0xFEF
  9782                           postinc0	equ	0xFEE
  9783                           postdec0	equ	0xFED
  9784                           preinc0	equ	0xFEC
  9785                           plusw0	equ	0xFEB
  9786                           fsr0h	equ	0xFEA
  9787                           fsr0l	equ	0xFE9
  9788                           wreg	equ	0xFE8
  9789                           indf1	equ	0xFE7
  9790                           postinc1	equ	0xFE6
  9791                           postdec1	equ	0xFE5
  9792                           preinc1	equ	0xFE4
  9793                           plusw1	equ	0xFE3
  9794                           fsr1h	equ	0xFE2
  9795                           fsr1l	equ	0xFE1
  9796                           bsr	equ	0xFE0
  9797                           indf2	equ	0xFDF
  9798                           postinc2	equ	0xFDE
  9799                           postdec2	equ	0xFDD
  9800                           preinc2	equ	0xFDC
  9801                           plusw2	equ	0xFDB
  9802                           fsr2h	equ	0xFDA
  9803                           fsr2l	equ	0xFD9
  9804                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     48     108
    BANK1           256    208     208
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[17]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[17]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[17]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2128_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 30
		 -> main@string3(BANK1[30]), main@string2(BANK1[30]), main@string1(BANK1[30]), main@string(BANK1[30]), 
		 -> main@string0(BANK1[30]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S759DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S759DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    lumin@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK1[20]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK1[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK1[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK1[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK1[20]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _lumin->___fltol
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_determine_color_new
    _sprintf->_vfprintf
    _lumin->___fltol
    _determine_color_new->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               214   214      0   49701
                                             44 BANK0      4     4      0
                                              0 BANK1    208   208      0
                    _Interrupts_init
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                    _initDCmotorsPWM
                         _initUSART4
                              _lumin
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    9317
                                              6 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _lumin                                               12    10      2    8538
                                              8 BANK0     12    10      2
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   18793
                                              8 BANK0     36    34      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             16 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1822
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     907
                                             84 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2930
                                             43 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2453
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2628
                                             68 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     523
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _isbtw
       ___flge
   _initDCmotorsPWM
   _initUSART4
   _lumin
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D0      D0       7       81.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D2       8        0.0%
DATA                 0      0     1D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 16:20:24 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 3E26                    ___fldiv@aexp 002B  
                  ___fldiv@bexp 002A                    ___fldiv@sign 0023                 _color_read_Blue 3EC6  
                            l31 4116                              l40 3E74                              l34 428A  
                            l43 3EC4                              l60 3FA4                              l53 3CBE  
                            l37 3E24                              l46 3F14                              l57 3F5E  
                            l49 3D82                              l75 1B1C                              l78 38A8  
              _color_read_Clear 3DD6                _color_read_Green 3E76               ??_Interrupts_init 0005  
                 main@BlueRatio 019A                             l111 424A                             l120 42F6  
                           l105 41CE                             l114 4300                             l123 42E0  
                           l108 4224                             l117 430A                             l301 1D0A  
                           l126 406C                             l303 1D18                             l163 402A  
                           l352 426A                             l427 42EC                             l292 1BD0  
                           l293 1BD2                             l383 41F8                             l295 1BE0  
                           l392 4178                             l704 3A6E                             l553 35E2  
                           l297 1C18                             l386 42BC                             l299 1C26  
                           l396 42A4                             l709 3AB4                             l566 3746  
                           l736 39B0                             l967 237C                             l984 2496  
                           l976 264C                             l968 236A                             l993 2566  
                           l969 2330                             l994 2554                             _abs 406E  
                  main@RedRatio 0196                             _pad 3B80                             wreg 000FE8  
                  ___flmul@aexp 003D                    ___flmul@bexp 003E                    ___flmul@sign 0038  
                  ___flmul@temp 0043                    ___flmul@prod 003F                    ___fltol@exp1 0056  
                          l1021 2E10                            l1101 3396                            l1023 2C70  
                          l1032 2CB6                            l1034 2D2E                            l1026 2C34  
                          l1035 2D1C                            ?_abs 0017                            l1060 2908  
                          l1108 33F2                            l1053 2712                            l1117 3DD4  
                          l1070 2A38                            l1062 2980                            l1063 296E  
                          l1208 3B7E                            l1216 3FE8                            l1144 3BC6  
                          l3001 41B6                            l1057 2A76                            l1225 40E2  
                          l3003 41B8                            l3011 3DD6                            l1219 430C  
                          l1147 3C08                            l1155 2EB2                            l3005 41BA  
                          l3101 225E                            l3013 3E1C                            l1149 3C44  
                          l1157 2EBA                            l1094 32FE                            l1182 32A6  
                          l3031 3F0C                            l3023 3E76                            l3007 41BC  
                          l3111 2296                            l3103 226E                            l1175 30F2  
                          l3025 3EBC                            l3017 3E26                            l3009 426E  
                          l3121 22AA                            l3113 229A                            l3105 2280  
                          l1097 345A                            l1193 40A4                            l3051 41E2  
                          l3019 3E6C                            l3211 24F8                            l3203 24D0  
                          l3131 22BE                            l3123 22AE                            l3115 229E  
                          l3107 228E                            l3035 3C46                            l1196 40AC  
                          l1188 3D18                            l3053 41E6                            l3029 3EC6  
                          l3213 2500                            l3205 24DA                            l3221 2524  
                          l3141 22D2                            l3133 22C2                            l3125 22B2  
                          l3117 22A2                            l3109 2292                            l3061 218E  
                          l3301 2B44                            l3037 3C78                            l3045 3CB6  
                          l4101 35E8                            l1189 3D20                            l3055 41F6  
                          l3231 2576                            l3223 2528                            l3215 2504  
                          l3207 24E8                            l3151 234A                            l3143 22FC  
                          l3135 22C6                            l3127 22B6                            l3119 22A6  
                          l3071 21CA                            l3063 219A                            l3303 2B5A  
                          l3039 3CAA                            l4111 3648                            l4103 35F6  
                          l4031 3B02                            l4023 3AB6                            l3049 41D2  
                          l3241 25DC                            l3233 2582                            l3225 2536  
                          l3217 2514                            l3209 24EA                            l3161 238A  
                          l3153 234E                            l3145 2318                            l3137 22CA  
                          l3129 22BA                            l3081 21FA                            l3073 21DA  
                          l3065 21A8                            l3321 2BAE                            l3305 2B6A  
                          l3313 2B8A                            l3401 264E                            l3057 42A6  
                          l4121 36BE                            l4113 3666                            l4105 3616  
                          l4033 3B38                            l4025 3AC8                            l4041 3FC4  
                          l4201 3042                            l3251 2624                            l3243 25EC  
                          l3235 2590                            l3227 254C                            l3219 2516  
                          l3171 23CC                            l3163 239A                            l3155 235C  
                          l3147 2328                            l3139 22CE                            l3091 2224  
                          l3083 220C                            l3075 21DC                            l3067 21AA  
                          l3331 2C00                            l3323 2BC8                            l3315 2B9A  
                          l3307 2B72                            l3411 268A                            l3403 265A  
                          l4131 3726                            l4123 36DE                            l4115 366E  
                          l4107 361A                            l4027 3ADA                            l4043 3FC8  
                          l4051 40D6                            l4211 3094                            l4203 305C  
                          l3253 2626                            l3245 260C                            l3237 25CA  
                          l3181 23FA                            l3173 23DA                            l3157 235E  
                          l3149 233E                            l3093 2234                            l3085 220E  
                          l3069 21BA                            l3077 21E4                            l3341 2C5C  
                          l3333 2C10                            l3325 2BD8                            l3317 2B9A  
                          l3309 2B76                            l3501 2990                            l3421 26BC  
                          l3413 269A                            l3405 2668                            l4301 3980  
                          l4061 348E                            l4125 36F0                            l4117 3682  
                          l4109 3628                            l4029 3AE4                            l4037 3FA6  
                          l4045 40AE                            l4141 3BB2                            l4213 30A6  
                          l4205 306C                            l3255 262C                            l3247 2610  
                          l3239 25CC                            l3191 2466                            l3183 2404  
                          l3175 23E6                            l3167 23AE                            l3159 2368  
                          l3095 2244                            l3087 2214                            l3079 21F4  
                          l3351 2C9C                            l3343 2C5E                            l3335 2C24  
                          l3327 2BE8                            l3271 2AA4                            l3263 2A78  
                          l3511 29F2                            l3503 299C                            l3431 26FC  
                          l3423 26CA                            l3415 26A0                            l3407 266A  
                          l4303 3990                            l4071 34D0                            l4063 3492  
                          l4055 345C                            l4119 3690                            l4127 36F6  
                          l4039 3FB2                            l4047 40BA                            l4151 3C18  
                          l4143 3BBE                            l4135 3B80                            l4215 30B2  
                          l4207 307E                            l4231 313C                            l4223 30F4  
                          l4311 3CC8                            l3257 263A                            l3249 261E  
                          l3193 2476                            l3177 23EA                            l3169 23BE  
                          l3185 240A                            l3097 2254                            l3089 2222  
                          l3361 2CD8                            l3353 2CA6                            l3345 2C6E  
                          l3337 2C32                            l3329 2BF8                            l3281 2ADE  
                          l3273 2AB4                            l3265 2A84                            l3521 2A5A  
                          l3513 2A06                            l3505 29AA                            l3441 2746  
                          l3433 2702                            l3425 26CC                            l3417 26B0  
                          l3409 267A                            l4305 39A0                            l3601 33D4  
                          l4401 19CC                            l4321 0F26                            l4081 352A  
                          l4073 34EE                            l4065 34A0                            l4057 3460  
                          l4129 3706                            l4049 40BE                            l4153 3C2C  
                          l4145 3BD2                            l4137 3B90                            l4217 30BA  
                          l4209 308E                            l4161 2E12                            l4241 3204  
                          l4233 3160                            l4225 3118                            l4313 3CD6  
                          l3259 263C                            l3187 2430                            l3195 2486  
                          l3179 23F8                            l3099 2256                            l3371 2D4A  
                          l3363 2CE6                            l3355 2CB4                            l3347 2C80  
                          l3339 2C3E                            l3291 2B0A                            l3283 2AE4  
                          l3275 2AC4                            l3267 2A92                            l3523 2A5C  
                          l3515 2A20                            l3507 29D4                            l3451 2796  
                          l3443 2752                            l3435 2722                            l3427 26DC  
                          l3419 26B6                            l3611 342A                            l3603 33E2  
                          l4411 1AC0                            l4403 19D6                            l4331 12C6  
                          l4323 0FB2                            l4083 3558                            l4075 34F6  
                          l4091 3592                            l4067 34C0                            l4059 346E  
                          l4147 3BE6                            l4139 3BA4                            l4219 30CA  
                          l4171 2E8C                            l4163 2E32                            l4243 3228  
                          l4251 3256                            l4235 3184                            l4227 3126  
                          l4315 3CFC                            l3197 24AC                            l3189 2464  
                          l3381 2DB6                            l3373 2D58                            l3365 2D14  
                          l3349 2C96                            l3357 2CC6                            l3293 2B1A  
                          l3285 2AEA                            l3277 2AC6                            l3269 2A94  
                          l3517 2A3C                            l3525 2A62                            l3509 29D8  
                          l3461 27D8                            l3453 27A2                            l3445 275C  
                          l3437 2732                            l3429 26EC                            l3613 343A  
                          l3605 3400                            l4421 1B14                            l4405 1A1C  
                          l4413 1AC8                            l4341 13A4                            l4333 131E  
                          l4325 1096                            l4317 0E52                            l4093 35A2  
                          l4085 3578                            l4077 350A                            l4069 34C4  
                          l4157 406E                            l4149 3BEA                            l4181 2EE8  
                          l4173 2EA6                            l4165 2E5A                            l4253 3264  
                          l4245 3236                            l4237 31CC                            l4229 3138  
                          l4309 3CC0                            l4501 1BB6                            l2903 42F8  
                          l2911 42EE                            l3631 40E8                            l3199 24BC  
                          l3391 2E04                            l3383 2DD0                            l3375 2D82  
                          l3359 2CD4                            l3295 2B2A                            l3287 2AF8  
                          l3279 2ACE                            l3527 2A66                            l3519 2A4C  
                          l3471 283A                            l3463 27E4                            l3455 27AE  
                          l3447 2772                            l4271 38D6                            l3615 3448  
                          l3607 3402                            l4415 1AE0                            l4407 1A62  
                          l4351 145E                            l4343 13B4                            l4335 1376  
                          l4327 1182                            l4319 0E5C                            l4095 35C2  
                          l4087 357A                            l4079 3518                            l4159 4088  
                          l4191 2F86                            l4183 2EF0                            l4175 2EC2  
                          l4167 2E7A                            l4247 324A                            l4431 3D84  
                          l4511 1BC0                            l4503 1BB8                            l3801 415C  
                          l2921 4032                            l2905 42FC                            l2913 42F2  
                          l3641 3F16                            l3633 40F2                            l3393 2E06  
                          l3385 2DEC                            l3369 2D3E                            l3377 2D86  
                          l3297 2B2C                            l3289 2AFA                            l3481 28D0  
                          l3473 2846                            l3465 27F4                            l3457 27BC  
                          l3449 277E                            l4281 3924                            l4273 3900  
                          l4265 38AA                            l3617 344A                            l3609 3406  
                          l4417 1AF6                            l4409 1AA8                            l4361 1580  
                          l4353 14A4                            l4345 13C2                            l4337 1386  
                          l4329 126E                            l4425 3748                            l4089 358C  
                          l4193 2F8C                            l4185 2EF8                            l4177 2ED4  
                          l4169 2E8A                            l4257 3270                            l4433 3D96  
                          l4601 20D6                            l4521 1BFC                            l4513 1BC2  
                          l4505 1BBA                            l3803 4160                            l2923 403A  
                          l2915 4302                            l2907 42D8                            l3643 3F60  
                          l3635 4102                            l3387 2DF0                            l3379 2DA0  
                          l3299 2B34                            l3491 2926                            l3483 28EE  
                          l3475 2862                            l3467 280E                            l3459 27C8  
                          l4291 3950                            l4275 3902                            l4267 38C2  
                          l4419 1B0C                            l4371 1666                            l4363 158A  
                          l4355 14AE                            l4347 13D2                            l4339 1396  
                          l4427 38A0                            l4099 35E4                            l4187 2EFE  
                          l4195 2FF0                            l4179 2EE2                            l4259 3294  
                          l4435 3D9E                            l4611 2138                            l4603 20F0  
                          l4531 1C5C                            l4523 1C16                            l4515 1BC4  
                          l4507 1BBC                            l4451 1B36                            l4443 1B1E  
                          l2837 4224                            l2925 4042                            l2917 4306  
                          l2909 42DC                            l3637 410C                            l3629 40E4  
                          l3389 2DFE                            l3493 292A                            l3485 28F8  
                          l3477 288C                            l3469 281E                            l4277 3912  
                          l3581 330E                            l2941 3A2E                            l2933 39B2  
                          l4381 1788                            l4373 16AC                            l4365 15D0  
                          l4357 14F4                            l4349 1418                            l3805 428C  
                          l4197 300A                            l4189 2F80                            l4437 3DA6  
                          l4613 215E                            l4605 210E                            l4541 1CE0  
                          l4533 1C8A                            l4525 1C34                            l4517 1BEE  
                          l4509 1BBE                            l4461 1B40                            l4453 1B38  
                          l4445 1B2A                            ?_pad 0015                            l2839 4234  
                          l2927 4068                            l2919 402E                            l3495 2938  
                          l3487 2906                            l3479 28C2                            l4287 393C  
                          l4279 3916                            l3591 334C                            l3583 3324  
                          l3575 32AA                            l2951 3AB2                            l2943 3A3C  
                          l2935 39E0                            l4391 18AA                            l4383 17CE  
                          l4375 16F2                            l4367 1616                            l4359 153A  
                          l3639 3D22                            l3807 42A0                            l4199 3028  
                          l4439 3DC2                            l4615 216A                            l4607 211A  
                          l4551 1D28                            l4543 1CEC                            l4535 1C96  
                          l4527 1C36                            l4519 1BF0                            l4471 1B5E  
                          l4463 1B46                            l4455 1B3C                            l4447 1B2E  
                          l2929 406A                            l3497 2966                            l3489 2918  
                          l4297 3964                            l4289 3946                            l3593 337E  
                          l3577 32BA                            l2945 3A4E                            l2937 39F0  
                          l4393 18F0                            l4385 1814                            l4377 1738  
                          l4369 165C                            l3761 3FFA                            l4617 216E  
                          l4609 211E                            l4561 1D86                            l4545 1CF0  
                          l4537 1C9A                            l4529 1C42                            l4553 1D32  
                          l4481 1B8A                            l4473 1B66                            l4465 1B4A  
                          l4457 1B3E                            l4449 1B32                            l4299 3970  
                          l3595 3380                            l3587 3338                            l3579 32C8  
                          l2947 3A5C                            l2939 3A1E                            l4395 18FA  
                          l4387 181E                            l4379 1742                            l3763 4012  
                          l3771 4256                            l4571 1DD0                            l4563 1D9C  
                          l4555 1D46                            l4547 1D08                            l4539 1CB2  
                          l4491 1BAC                            l4483 1B92                            l4475 1B6A  
                          l4467 1B52                            l4459 1B40                            l3597 338C  
                          l3589 3340                            l2949 3AAC                            l4397 1940  
                          l4389 1864                            l3765 4026                            l3781 4268  
                          l3773 4258                            l4581 1E34                            l4573 1DE4  
                          l4565 1DA2                            l4557 1D66                            l4549 1D26  
                          l4493 1BAE                            l4485 1B9A                            l4477 1B7E  
                          l4469 1B5A                            l3783 42E2                            l3599 33C8  
                          l4399 1986                            l3767 4028                            l3759 3FEA  
                          l3775 425A                            l4591 208A                            l4583 1E3C  
                          l4575 1DFA                            l4567 1DB4                            l4559 1D72  
                          l4495 1BB0                            l4487 1BA2                            l4479 1B82  
                          l3777 4264                            l3769 424C                            l4593 208E  
                          l4585 204A                            l4577 1E04                            l4569 1DCA  
                          l4497 1BB2                            l4489 1BAA                            l3779 4266  
                          l4595 20A8                            l4587 2060                            l4579 1E1C  
                          l4499 1BB4                            l3797 414A                            l2997 41A6  
                          l4597 20C6                            l4589 207E                            l3799 414E  
                          l2999 41B0                            l4599 20D2                            STR_1 0E16  
                          STR_2 0E01                            STR_3 0E4A                            STR_4 0E43  
                          STR_5 0E3C                            STR_6 0E2B                            u3000 2430  
                          u3001 242C                            u3010 2476                            u3011 2472  
                          u3100 2562                            u3020 24AC                            u3101 255E  
                          u3021 24A8                            u3110 2576                            u3030 24BC  
                          u3111 2572                            u3031 24B8                            u3120 2590  
                          u3040 24E8                            u3200 2AA4                    _BAUD4CONbits 000EE9  
                          u3121 258C                            u3041 24E4                            u3201 2AA0  
                          _LATE 000F7D                            u3130 25CA                            u3050 24F8  
                          u3210 2AB4                            u3131 25C6                            u3051 24F4  
                          u3211 2AB0                            _LATG 000F7F                            u4100 4178  
                          u3140 25DC                            u3060 2514                            u3300 2C80  
                          u3220 2AF8                            u4101 4174                            u3141 25D8  
                          u3061 2510                            u3301 2C7C                            u3221 2AF4  
                          u3150 25EC                            u3070 2524                            u3310 2C96  
                          u3230 2B0A                            u4110 42A0                            u3151 25E8  
                          u3071 2520                            u3311 2C92                            u3231 2B06  
                          u4111 429C                            u3160 260C                            u3080 2536  
                          u3400 2DD0                            u3320 2CB4                            u3240 2B1A  
                          u5000 1864                            u3161 2608                            u3081 2532  
                          u3401 2DCC                            u3321 2CB0                            u3241 2B16  
                          u5001 1860                            u3170 261E                            u3090 254C  
                          u3410 2DFE                            u3330 2CD4                            u3250 2B5A  
                          u5010 18AA                            _T2PR 000FBC                            u3171 261A  
                          u3091 2548                            u3411 2DFA                            u3331 2CD0  
                          u3251 2B56                            u5011 18A6                            u3180 263A  
                          u3340 2CE6                            u3260 2B9A                            u3500 28AC  
                          u3420 2668                            u2700 3AAC                            u5100 1AE0  
                          u5020 18F0                            u3181 2636                            u3341 2CE2  
                          u3261 2B96                            u3421 2664                            u2701 3AA8  
                          u5101 1ADC                            u5021 18EC                            u2470 4234  
                          u3350 2D14                            u3270 2C10                            u3190 2A92  
                          u3510 2906                            u3430 267A                            u5110 1AF6  
                          u5030 1940                            u4310 3AC8                            u2471 4230  
                          u3351 2D10                            u3271 2C0C                            u3191 2A8E  
                          u3511 2902                            u3431 2676                            u5111 1AF2  
                          u5031 193C                            u4311 3AC4                            u2480 424A  
                          u2640 4056                            u2800 21A8                            u3360 2D2A  
                          u3280 2C32                            u3600 2A5A                            u3520 2926  
                          u3440 268A                            u5120 1B0C                            u5040 1986  
                          u4400 34EE                            u4320 3ADA                            u5200 1D86  
                          u2481 4246                            u2641 404E                            u2801 21A4  
                          u3361 2D26                            u3281 2C2E                            u3601 2A56  
                          u3521 2922                            u3505 28A2                            u3441 2686  
                          u5121 1B08                            u5041 1982                            u4401 34EA  
                          u4321 3AD6                            u5201 1D82                            u2810 21BA  
                          u3370 2D3E                            u3290 2C5C                            u3530 2938  
                          u3450 26CA                            u5050 19CC                            u4410 3518  
                          u4330 3B02                            u5210 1DB4                            u5130 1BE0  
                          u2811 21B6                            u3371 2D3A                            u3291 2C58  
                          u3531 2934                            u3451 26C6                            u5051 19C8  
                          u4411 3514                            u4331 3AFE                            u5211 1DB0  
                          u5131 1BDC                            u2900 2314                            u2820 21CA  
                          u3380 2D58                            u3540 2966                            u3460 26DC  
                          u3700 3324                            u2660 39E0                            u5060 1A1C  
                          u4420 3558                            u4340 3B38                            u4500 3B90  
                          u5220 1DE4                            u5140 1BEE                            u2901 230E  
                          u2821 21C6                            u3381 2D54                            u3541 2962  
                          u3461 26D8                            u3701 3320                            u2661 39DC  
                          u5061 1A18                            u4421 3554                            u4341 3B34  
                          u4501 3B8C                            u5221 1DE0                            u5141 1BEA  
                          u2910 2316                            u2830 220C                            u3390 2DA0  
                          u3550 297C                            u3470 26EC                            u3710 337A  
                          u2670 3A1E                            u2750 3C78                            u5070 1A62  
                          u4430 35A2                            u4350 3FE8                            u4510 3BB2  
                          u5230 1E1C                            u5150 1C26                            u2831 2208  
                          u3391 2D9C                            u3551 2978                            u3471 26E8  
                          u3711 3376                            u2671 3A1A                            u2751 3C74  
                          u5071 1A5E                            u4431 359E                            u4351 3FE4  
                          u4511 3BAE                            u5231 1E18                            u5151 1C22  
                          u2920 233E                            u2840 2222                            u3560 2990  
                          u3480 2722                            u3720 33C4                            u2680 3A3C  
                          u2760 3CAA                            u5080 1AA8                            u4440 35F6  
                          u4360 40D6                            u4520 3C08                            u4600 2ED4  
                          u5240 1E34                            u5160 1C34                            u2921 233A  
                          u2841 221E                            u3561 298C                            u3481 271E  
                          u3721 33C0                            u2681 3A38                            u2761 3CA6  
                          u5081 1AA4                            u4441 35F2                            u4361 40D2  
                          u4521 3C04                            u4601 2ED0                            u5241 1E30  
                          u5161 1C30                            u2770 41E2                            u2658 4058  
                          u2930 235C                            u2850 2234                            u3570 29AA  
                          u3490 2732                            u3730 33E2                            u2690 3A5C  
                          u5090 1AC0                            u4370 346E                            u4450 3628  
                          u4530 3C18                            u4610 2EE2                            u5170 1D18  
                          u2771 41DE                            u2931 2358                            u2851 2230  
                          u3571 29A6                            u3491 272E                            u3731 33DE  
                          u2691 3A58                            u5091 1ABC                            u4371 346A  
                          u4451 3624                            u4531 3C14                            u4611 2EDE  
                          u5307 20E2                            u5171 1D14                            u2940 237C  
                          u2860 2244                            u3580 29F2                            u3740 33F2  
                          u2780 42BA                            u4380 34A0                            u4460 3666  
                          u4540 4088                            u4620 300A                            u4700 3118  
                          u5180 1D26                            u2941 2378                            u2861 2240  
                          u3581 29EE                            u3741 33EE                            u2781 42B4  
                          u4381 349C                            u4461 3662                            u4541 4084  
                          u4621 3006                            u4701 3114                            u5317 212A  
                          u5181 1D22                            u2950 238A                            u2870 2280  
                          u3590 2A20                            u3750 3400                            u2790 42BC  
                          u4470 3690                            u4630 3028                            u4550 2E42  
                          u4710 3160                            u5190 1D46                            u2951 2386  
                          u2871 227C                            u3591 2A1C                            u3751 33FC  
                          u4391 34CA                            u4471 368C                            u4631 3024  
                          u4551 2E3C                            u4711 315C                            u5327 217A  
                          u5191 1D42                            u2960 239A                            u2880 228E  
                          u4800 3990                            u3760 343A                            u3680 32BA  
                          u4480 36BE                            u4640 3042                            u4560 2E44  
                          u4720 3184                            u5337 40F8                            u2961 2396  
                          u2881 228A                            u4801 398C                            u3761 3436  
                          u3681 32B6                            u4481 36BA                            u4641 303E  
                          u4721 3180                            u5257 1C08                            u2970 23CC  
                          u2890 22FC                            u3770 3448                            u3690 32C8  
                          u4490 3706                            u4650 305C                            u4570 2E5A  
                          u4730 3228                            u4810 3D18                            u2971 23C8  
                          u2891 22F8                            u3771 3444                            u3691 32C4  
                          u4491 3702                            u4651 3058                            u4571 2E56  
                          u4731 3224                            u4811 3D14                            u5267 1C4E  
                          u2980 23DA                            u4740 38C2                            u4900 1580  
                          u4820 1386                            u4660 306C                            u4580 2E8A  
                          u2981 23D6                            u4741 38BE                            u4901 157C  
                          u4821 1382                            u4661 3068                            u4581 2E86  
                          u5277 1CA6                            u2990 23F8                            u4750 38F6  
                          u4910 15D0                            u4830 13A4                            u4670 307E  
                          u4590 2EA6                            u2991 23F4                            u4911 15CC  
                          u4831 13A0                            u4671 307A                            u4591 2EA2  
                          u5287 1CFC                            u4760 3924                            u4920 1616  
                          u4840 13C2                            u4680 308E                            u4761 3920  
                          u4921 1612                            u4841 13BE                            u4681 308A  
                          u5297 209A                            u4770 3938                            u4930 165C  
                          u4850 1418                            u4690 30A6                            u4771 3934  
                          u4755 38EC                            u4931 1658                            u4851 1414  
                          u4691 30A2                            u4780 3960                            u4940 16AC  
                          u4860 145E                            u4781 395C                            u4941 16A8  
                          u4861 145A                            u4790 3980                            u4950 16F2  
                          u4870 14A4                            u4791 397C                            u4951 16EE  
                          u4871 14A0                            u4960 1738                            u4880 14F4  
                          u4961 1734                            u4881 14F0                            u4970 1788  
                          u4890 153A                            u4971 1784                            u4891 1536  
                          u4980 17CE                            u4981 17CA                            u4990 1814  
                          u4991 1810                            abs@a 0017                            _dbuf 007C  
                          _main 1B1E                            _dtoa 2E12                            _prec 0078  
                          _nout 0074                            pad@i 001C                            pad@p 0019  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001E                            fsr2l 000FD9  
                          btemp 005B                            prodh 000FF4                            prodl 000FF3  
                          start 0076                 ___fldiv@new_exp 0024                     main@string0 0100  
                   main@string1 011E                     main@string2 013C                     main@string3 015A  
        __end_of_color_read_Red 3E76                 __end_of_HighISR 0076                    ___param_bank 000000  
                         ??_abs 0019                           ??_pad 001B                   ___fltol@sign1 0055  
                main@GreenRatio 0198                 __end_of___aodiv 35E4                 __end_of___fladd 264E  
                         ?_main 0001                           ?_dtoa 0020                 __end_of___aomod 3748  
               __end_of___fldiv 2E12                 __end_of___flmul 2A78                 __end_of___fltol 39B2  
      __size_of_initDCmotorsPWM 0042                           i2l434 0066                           i2l372 4222  
                         i2l436 006A                           i2l386 42D4                           i2l379 41A4  
                  vfpfcnvrt@fmt 0046      __end_of_I2C_2_Master_Start 4302      __end_of_I2C_2_Master_Write 42E2  
                         _flags 007A                           _fputc 3AB6                           _isbtw 3C46  
                         _fputs 3FA6                           _lumin 3748                           pad@fp 0015  
                         _width 0076                           _putch 430C                           dtoa@d 0022  
                         dtoa@i 0042                           dtoa@n 003A                           dtoa@p 0034  
                         dtoa@s 0038                           dtoa@w 0036                           tablat 000FF5  
                         ttemp5 005C                           ttemp6 005F                           ttemp7 0063  
                         status 000FD8                           wtemp8 005C                 __end_of_sprintf 3DD6  
       __end_of_color_read_Blue 3F16           _I2C_2_Master_RepStart 4302              putCharToRxBuf@byte 0001  
               ?_color_read_Red 0009                 __initialization 4118                    __end_of_main 218E  
                  __end_of_dtoa 30F4                 i2_isDataInTxBuf 42BE              putCharToTxBuf@byte 0005  
                        ??_main 00C8                          ??_dtoa 002A                   __activetblptr 000001  
                        ?_fputc 0005                          ?_isbtw 0011                          ?_fputs 000E  
                        ?_lumin 00A4                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l4011 0012  
                        i2l4021 005A                          i2l4013 0022                          i2l4015 0028  
                        i2l4017 0038                          i2l2435 42BE                          i2l4019 0046  
                        i2l3811 420C                          i2l3821 418E                          i2l3813 4210  
                        i2l3815 4220                          i2l3817 417A                          i2l3809 41FC  
                        i2l3819 418A                       ??_HighISR 0003        __end_of_color_click_init 4118  
                        _RX4PPS 000E15                          _TX4REG 000EE4                __end_of___xxtofl 345C  
                 ?_read_colours 0010                    vfprintf@cfmt 0054                          ___flge 39B2  
              _getCharFromTxBuf 417A                       ??___aodiv 0015     __end_of_determine_color_new 1B1E  
                     ??___fladd 004D                       ??___aomod 0015                       ??___fldiv 001B  
                     ??___flmul 0034                       ??___fltol 00A0                          clear_0 411E  
                        clear_1 412A                          isa$std 000001                          pad@buf 0017  
                        dtoa@fp 0020                          _strlen 40AE                          fputc@c 0005  
             ?_TxBufferedString 0006                          fputs@c 0012                          fputs@i 0013  
                        fputs@s 000E                    __mediumconst 0000                          lumin@m 00A4  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
            ??_TxBufferedString 0008                          putch@c 0001                __end_of_vfprintf 3D22  
             ??_initDCmotorsPWM 0007                       ??_sprintf 0056                      ___flge@ff1 0005  
                    ___flge@ff2 0009                    ___xxtofl@arg 000F                    ___xxtofl@exp 000E  
                  ___xxtofl@val 0005           __end_of_isDataInTxBuf 42BE                      __accesstop 0060  
       __end_of__initialization 4138        __end_of_color_read_Clear 3E26        __end_of_color_read_Green 3EC6  
        ?_I2C_2_Master_RepStart 0001         __end_ofi2_isDataInTxBuf 42D6                   ___rparam_used 000001  
                    ___fltol@f1 009C                ?_color_read_Blue 0009                  ??_read_colours 0012  
               _Interrupts_init 42E2                  __pcstackCOMRAM 0001                   __end_of_fputc 3B80  
                 __end_of_isbtw 3CC0                   __end_of_fputs 3FEA                   __end_of_lumin 38AA  
                 __end_of_putch 430E        _determine_color_new$2503 00AE                      _calibrateB 3F60  
                    _calibrateW 3F16                         ??_fputc 0009                         ??_isbtw 001D  
                       ??_fputs 0012                         ??_lumin 00A6                         ??_putch 0005  
                    __pbssBANK0 0060                      __pbssBANK2 0200               _color_writetoaddr 426C  
                  _T2CLKCONbits 000FBF                  main@brightness 019E                         ?___flge 0005  
            ?_color_writetoaddr 0007              __size_of_sendTxBuf 001A             ??_color_writetoaddr 0008  
                       ?_strlen 0005                       ?___xxtofl 0005                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5              __size_of_vfpfcnvrt 01B4                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
       __end_of_Interrupts_init 42EE          color_writetoaddr@value 0007                ??_color_read_Red 000B  
                       _HighISR 0008       __end_of_color_writetoaddr 428C                ?i2_isDataInTxBuf 0001  
            _I2C_2_Master_Start 42F8                      _initUSART4 424C              _I2C_2_Master_Write 42D6  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000E  
               __size_of___flge 0104                         ___aodiv 345C                         ___fladd 218E  
                       ___aomod 35E4                         ___fldiv 2A78                         ___flmul 264E  
                       ___fltol 38AA             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 009C                    __psmallconst 0E00         __size_of_putCharToRxBuf 002A  
       __size_of_putCharToTxBuf 002A                         __pcinit 4118                         __ramtop 0E00  
                       __ptext0 1B1E                         __ptext1 3D84                         __ptext2 3CC0  
                       __ptext3 30F4                         __ptext4 2E12                         __ptext5 3B80  
                       __ptext6 40AE                         __ptext7 3FA6                         __ptext8 3AB6  
                       __ptext9 430C                 __size_of_strlen 0036                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                      ??___xxtofl 0009  
                     _T2HLTbits 000FBE            __end_of_read_colours 3D84                   _RxBufWriteCnt 005A  
      __end_of_getCharFromTxBuf 41A6                     ?_calibrateB 0010                     ?_calibrateW 0010  
                       main@cal 01A0                         _sprintf 3D84            ??_I2C_2_Master_Start 0006  
                    _lumin$2504 00AA            ??_I2C_2_Master_Write 0006            end_of_initialization 4138  
             __end_of_sendTxBuf 42A6                         fputc@fp 0007                         fputs@fp 0010  
             ?_color_click_init 0001              ??_color_click_init 0009               __end_of_vfpfcnvrt 32A8  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 0054                         strlen@a 0007  
                       strlen@s 0005                 _initDCmotorsPWM 3FEA                       _PORTFbits 000F8E  
                   ___fladd@grs 0054                   ___xxtofl@sign 000D                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0026                     ___fldiv@rem 001F        color_writetoaddr@address 0008  
       ??_I2C_2_Master_RepStart 0006     determine_color_new@RedRatio 00B4                      main@check1 01A4  
                    main@check2 01A6                      main@check3 01A2                ?_Interrupts_init 0001  
                   ___flmul@grs 0039               ?_color_read_Clear 0009      __size_of_color_writetoaddr 0020  
                  _EUSART4RXbuf 0060                    _EUSART4TXbuf 0200       __size_of_TxBufferedString 0030  
             ?_color_read_Green 0009                     ?_initUSART4 0001                      main@motorL 01AA  
                    main@motorR 01B3              ??_color_read_Clear 000B              ??_color_read_Green 000B  
                    main@string 0178             __size_of_calibrateB 0046             __size_of_calibrateW 004A  
                __end_of___flge 3AB6                     vfpfcnvrt@ap 0048                     vfpfcnvrt@fp 0044  
                   vfpfcnvrt@ll 004C    __size_of_determine_color_new 0CCC                  __end_of_strlen 40E4  
           color_read_Clear@tmp 000E             start_initialization 4118                     __end_of_abs 40AE  
                   __end_of_pad 3C46                   _TxBufWriteCnt 0058             color_read_Green@tmp 000E  
       __end_of_initDCmotorsPWM 402C                     vfprintf@fmt 009E                        ??___flge 000D  
                _putCharToRxBuf 41FA                  _putCharToTxBuf 41D0        __size_of_color_read_Blue 0050  
         __size_of_read_colours 0062                        ??_strlen 0007          __size_of_isDataInTxBuf 0018  
                     ___fladd@a 0049                       ___fladd@b 0045                       ___fldiv@a 0017  
                     ___fldiv@b 0013   determine_color_new@GreenRatio 00B6                       ___flmul@a 0030  
                     ___flmul@b 002C                     __pbssCOMRAM 0057             __size_of_initUSART4 0020  
                 __pcstackBANK0 009C                   __pcstackBANK1 0100                ___aodiv@dividend 0005  
             __size_of___xxtofl 01B4                        ?_HighISR 0001                       _dtoa$2201 0032  
        __end_of_putCharToRxBuf 4224          __end_of_putCharToTxBuf 41FA                    _read_colours 3D22  
                     __pintcode 0008                        ?___aodiv 0005                        ?___fladd 0045  
                      ?___aomod 0005                        ?___fldiv 0013                ___aodiv@quotient 0017  
                      ?___flmul 002C                        ?___fltol 009C          TxBufferedString@string 0006  
          I2C_2_Master_Read@ack 0007               __size_of_vfprintf 0062            I2C_2_Master_Read@tmp 0008  
                   __smallconst 0E00               _I2C_2_Master_Idle 4224               _I2C_2_Master_Init 41A6  
             _I2C_2_Master_Read 402C               _I2C_2_Master_Stop 42EE                    _RxBufReadCnt 0059  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                  ??_calibrateB 0012                    ??_calibrateW 0012              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0005                        ?_sprintf 00A2               ?_getCharFromTxBuf 0001  
                __size_of_fputc 00CA                  __size_of_isbtw 007A                  __size_of_fputs 0044  
                __size_of_lumin 0162                  __size_of_putch 0002              ??_getCharFromTxBuf 0001  
           ??_I2C_2_Master_Idle 0005             ??_I2C_2_Master_Init 0005             ??_I2C_2_Master_Read 0006  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0006                        _LATCbits 000F7B  
                 _isDataInTxBuf 42A6                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                _TxBufferedString 414A                        _LATGbits 000F7F  
                      _LATHbits 000F80                       _sendTxBuf 428C                        _PIE4bits 000E2D  
                      i2u412_40 420C                        i2u412_41 4208                        i2u413_40 418A  
                      i2u413_41 4186                        i2u430_40 005A                        i2u430_41 0056  
                      i2u427_40 0022                        i2u427_41 001E                        i2u428_40 0038  
                      i2u428_41 0034                        i2u429_40 0046                        i2u429_41 0042  
                      i2u198_40 42D2                        i2u198_41 42CC                        i2u199_40 42D4  
                      _PIR4bits 000E37            determine_color_new@m 00A4                 ?_putCharToRxBuf 0001  
              ?_initDCmotorsPWM 0005                 ?_putCharToTxBuf 0001                        _SSP2CON2 000EDA  
                      _SSP2STAT 000ED8        __size_ofi2_isDataInTxBuf 0018              __end_of_calibrateB 3FA6  
            __end_of_calibrateW 3F60                       _vfpfcnvrt 30F4       __size_of_color_click_init 0034  
     __end_of_I2C_2_Master_Idle 424C       __end_of_I2C_2_Master_Init 41D0       __end_of_I2C_2_Master_Read 406E  
     __end_of_I2C_2_Master_Stop 42F8        determine_color_new@lumin 00B2     I2C_2_Master_Write@data_byte 0006  
                     main@count 01A8               ??_color_read_Blue 000B                    _TxBufReadCnt 0057  
   __size_of_I2C_2_Master_Start 000A     __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A  
                ?_isDataInTxBuf 0001   __end_of_I2C_2_Master_RepStart 430C              color_read_Blue@tmp 000E  
                   calibrateB@m 0010                     calibrateW@m 0010                __size_of_HighISR 006E  
                    ?_sendTxBuf 0001             _determine_color_new 0E52                    ??_initUSART4 0005  
                      __Hrparam 0000                      vfprintf@ap 00A0                        __Lrparam 0000  
                    vfprintf@fp 009C                    __Lsmallconst 0E00         __size_of_color_read_Red 0050  
              __size_of___aodiv 0188                __size_of___fladd 04C0                __size_of___aomod 0164  
              __size_of___fldiv 039A                __size_of___flmul 042A                __size_of___fltol 0108  
                     isbtw@high 0019                      ?_vfpfcnvrt 0044                 ___aodiv@divisor 000D  
     __size_of_color_read_Clear 0050       __size_of_color_read_Green 0050                 ___aodiv@counter 0015  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4            ?_determine_color_new 00A4  
                    sprintf@fmt 00A4                        ___xxtofl 32A8              __end_of_initUSART4 426C  
                      __ptext10 406E                        __ptext11 35E4                        __ptext20 0E52  
                      __ptext12 345C                        __ptext21 3C46                        __ptext13 428C  
                      __ptext30 41A6                        __ptext22 39B2                        __ptext14 42A6  
                      __ptext31 3F16                        __ptext23 32A8                        __ptext15 3D22  
                      __ptext40 402C                        __ptext32 3F60                        __ptext24 38AA  
                      __ptext16 3DD6                        __ptext41 4224                        __ptext33 3E26  
                      __ptext25 264E                        __ptext17 3748                        __ptext42 414A  
                      __ptext34 3E76                        __ptext26 2A78                        __ptext18 424C  
                      __ptext43 41D0                        __ptext35 3EC6                        __ptext27 218E  
                      __ptext19 3FEA                        __ptext44 42E2                        __ptext36 42D6  
                      __ptext28 40E4                        __ptext37 42EE                        __ptext29 426C  
                      __ptext46 42BE                        __ptext38 42F8                        __ptext47 41FA  
                      __ptext39 4302                        __ptext48 417A                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                __size_of_sprintf 0052                   __size_of_main 0670  
                 __size_of_dtoa 02E2                        isa$xinst 000000        __size_of_Interrupts_init 000C  
                    _RC4STAbits 000EE7         determine_color_new@RelB 00C4         determine_color_new@RelG 00C0  
       determine_color_new@RelR 00BC                        int$flags 005B                        _vfprintf 3CC0  
                      main@test 01BC      __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A  
    __size_of_I2C_2_Master_Read 0042           ??_determine_color_new 00A6                ___aomod@dividend 0005  
    __size_of_I2C_2_Master_Stop 000A                      _INTCONbits 000FF2               ??i2_isDataInTxBuf 0001  
                      isbtw@low 0015                        isbtw@num 0011                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                 ??_isDataInTxBuf 0005                        intlevel2 0000  
                     sprintf@ap 00AC                     ??_sendTxBuf 0005             main@detected_colour 019C  
                      lumin@out 00AE          determine_color_new@out 00BA                   read_colours@m 0010  
               ___aomod@divisor 000D                     ??_vfpfcnvrt 004A                 ___aomod@counter 0015  
              _color_click_init 40E4        __end_of_TxBufferedString 417A                        sprintf@f 00AE  
                      sprintf@s 00A2                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                 ___fladd@signs 0051                      _TX4STAbits 000EE8                    ___aodiv@sign 0016  
                  ___fladd@aexp 0052                    ___fladd@bexp 0053                ??_putCharToRxBuf 0001  
              ??_putCharToTxBuf 0005                    ___aomod@sign 0016    determine_color_new@BlueRatio 00B8  
