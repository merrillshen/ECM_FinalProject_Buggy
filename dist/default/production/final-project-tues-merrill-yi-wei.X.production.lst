

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 14:55:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 05/05/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PIR0bits	set	3635
    96  0000                     _PIE0bits	set	3625
    97  0000                     _PIE2bits	set	3627
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _RC7PPS	set	3689
   111  0000                     _RE2PPS	set	3700
   112  0000                     _SSP2BUF	set	3797
   113  0000                     _SSP2CON2bits	set	3802
   114  0000                     _SSP2CON2	set	3802
   115  0000                     _SSP2STAT	set	3800
   116  0000                     _RD6PPS	set	3696
   117  0000                     _RD5PPS	set	3695
   118  0000                     _SSP2CLKPPS	set	3612
   119  0000                     _SSP2DATPPS	set	3613
   120  0000                     _ANSELDbits	set	3751
   121  0000                     _SSP2ADD	set	3798
   122  0000                     _SSP2CON1bits	set	3801
   123  0000                     _T0CON0bits	set	4053
   124  0000                     _T0CON1bits	set	4054
   125  0000                     _INTCONbits	set	4082
   126  0000                     _PORTFbits	set	3982
   127  0000                     _LATHbits	set	3968
   128  0000                     _TRISHbits	set	3976
   129  0000                     _LATDbits	set	3964
   130  0000                     _LATFbits	set	3966
   131  0000                     _TRISAbits	set	3969
   132  0000                     _LATAbits	set	3961
   133  0000                     _TRISFbits	set	3974
   134  0000                     _PWM7CONbits	set	4001
   135  0000                     _PWM6CONbits	set	4004
   136  0000                     _T2PR	set	4028
   137  0000                     _T2CLKCONbits	set	4031
   138  0000                     _T2HLTbits	set	4030
   139  0000                     _T2CONbits	set	4029
   140  0000                     _LATGbits	set	3967
   141  0000                     _LATCbits	set	3963
   142  0000                     _LATEbits	set	3965
   143  0000                     _TRISGbits	set	3975
   144  0000                     _TRISCbits	set	3971
   145  0000                     _TRISEbits	set	3973
   146  0000                     _TRISDbits	set	3972
   147  0000                     _TMR0L	set	4051
   148  0000                     _TMR0H	set	4052
   149  0000                     _LATG	set	3967
   150  0000                     _LATE	set	3965
   151  0000                     _PWM7DCH	set	4000
   152  0000                     _PWM6DCH	set	4003
   153                           
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  00373A                     __pcinit:
   158                           	callstack 0
   159  00373A                     start_initialization:
   160                           	callstack 0
   161  00373A                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (60 bytes)
   165  00373A  EE01  F000         	lfsr	0,__pbssBANK1
   166  00373E  0E3C               	movlw	60
   167  003740                     clear_0:
   168  003740  6AEE               	clrf	postinc0,c
   169  003742  06E8               	decf	wreg,f,c
   170  003744  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (26 bytes)
   173  003746  EE00  F0B8         	lfsr	0,__pbssBANK0
   174  00374A  0E1A               	movlw	26
   175  00374C                     clear_1:
   176  00374C  6AEE               	clrf	postinc0,c
   177  00374E  06E8               	decf	wreg,f,c
   178  003750  E1FD               	bnz	clear_1
   179  003752                     end_of_initialization:
   180                           	callstack 0
   181  003752                     __end_of__initialization:
   182                           	callstack 0
   183  003752  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  003754  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  003756  0100               	movlb	0
   186  003758  EFBC  F006         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  0000B8                     __pbssBANK0:
   190                           	callstack 0
   191  0000B8                     _EUSART4RXbuf:
   192                           	callstack 0
   193  0000B8                     	ds	20
   194  0000CC                     _movements:
   195                           	callstack 0
   196  0000CC                     	ds	2
   197  0000CE                     _TxBufReadCnt:
   198                           	callstack 0
   199  0000CE                     	ds	1
   200  0000CF                     _TxBufWriteCnt:
   201                           	callstack 0
   202  0000CF                     	ds	1
   203  0000D0                     _RxBufReadCnt:
   204                           	callstack 0
   205  0000D0                     	ds	1
   206  0000D1                     _RxBufWriteCnt:
   207                           	callstack 0
   208  0000D1                     	ds	1
   209  0000D2                     _movementArray:
   210                           	callstack 0
   211  0000D2                     	ds	0
   212  0000D2                     _timerArray:
   213                           	callstack 0
   214  0000D2                     	ds	0
   215                           
   216                           	psect	bssBANK1
   217  000100                     __pbssBANK1:
   218                           	callstack 0
   219  000100                     _EUSART4TXbuf:
   220                           	callstack 0
   221  000100                     	ds	60
   222                           
   223                           	psect	cstackBANK0
   224  000060                     __pcstackBANK0:
   225                           	callstack 0
   226  000060                     ??_determine_color_new:
   227                           
   228                           ; 1 bytes @ 0x0
   229  000060                     	ds	8
   230  000068                     _determine_color_new$2631:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x8
   234  000068                     	ds	4
   235  00006C                     determine_color_new@RedRatio:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0xC
   239  00006C                     	ds	2
   240  00006E                     determine_color_new@GreenRatio:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xE
   244  00006E                     	ds	2
   245  000070                     determine_color_new@BlueRatio:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000070                     	ds	2
   250  000072                     determine_color_new@out:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x12
   254  000072                     	ds	2
   255  000074                     determine_color_new@lumin:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000074                     	ds	2
   260  000076                     determine_color_new@RelR:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x16
   264  000076                     	ds	4
   265  00007A                     determine_color_new@RelG:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x1A
   269  00007A                     	ds	4
   270  00007E                     determine_color_new@RelB:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x1E
   274  00007E                     	ds	4
   275  000082                     main@cal:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279  000082                     	ds	2
   280  000084                     main@check4:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284  000084                     	ds	2
   285  000086                     main@reset_timer:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x26
   289  000086                     	ds	2
   290  000088                     main@check1:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x28
   294  000088                     	ds	2
   295  00008A                     main@check2:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2A
   299  00008A                     	ds	2
   300  00008C                     main@check3:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x2C
   304  00008C                     	ds	2
   305  00008E                     main@count:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2E
   309  00008E                     	ds	2
   310  000090                     main@detected_colour:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x30
   314  000090                     	ds	2
   315  000092                     main@test:
   316                           	callstack 0
   317                           
   318                           ; 20 bytes @ 0x32
   319  000092                     	ds	20
   320  0000A6                     main@motorL:
   321                           	callstack 0
   322                           
   323                           ; 9 bytes @ 0x46
   324  0000A6                     	ds	9
   325  0000AF                     main@motorR:
   326                           	callstack 0
   327                           
   328                           ; 9 bytes @ 0x4F
   329  0000AF                     	ds	9
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	callstack 0
   334  000001                     ??_I2C_2_Master_Idle:
   335  000001                     ?___wmul:
   336                           	callstack 0
   337  000001                     ?___xxtofl:
   338                           	callstack 0
   339  000001                     updateMovementCount@movementCode:
   340                           	callstack 0
   341  000001                     initDCmotorsPWM@PWMperiod:
   342                           	callstack 0
   343  000001                     ___wmul@multiplier:
   344                           	callstack 0
   345  000001                     ___flge@ff1:
   346                           	callstack 0
   347  000001                     ___xxtofl@val:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     ??_I2C_2_Master_Read:
   353  000002                     I2C_2_Master_Write@data_byte:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     color_writetoaddr@value:
   359                           	callstack 0
   360  000003                     I2C_2_Master_Read@ack:
   361                           	callstack 0
   362  000003                     updateMovementCount@movementArray:
   363                           	callstack 0
   364  000003                     ___wmul@multiplicand:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     color_writetoaddr@address:
   370                           	callstack 0
   371  000004                     I2C_2_Master_Read@tmp:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x3
   375  000004                     	ds	1
   376  000005                     ??_color_click_init:
   377  000005                     ??___xxtofl:
   378  000005                     ?_color_read_Clear:
   379                           	callstack 0
   380  000005                     ?_color_read_Red:
   381                           	callstack 0
   382  000005                     ?_color_read_Green:
   383                           	callstack 0
   384  000005                     ?_color_read_Blue:
   385                           	callstack 0
   386  000005                     updateMovementCount@movements:
   387                           	callstack 0
   388  000005                     ___wmul@product:
   389                           	callstack 0
   390  000005                     ___flge@ff2:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x4
   394  000005                     	ds	2
   395  000007                     ??_color_read_Clear:
   396  000007                     ??_color_read_Red:
   397  000007                     ??_color_read_Green:
   398  000007                     ??_color_read_Blue:
   399  000007                     ?___lwdiv:
   400                           	callstack 0
   401  000007                     updateMovementCount@timerArray:
   402                           	callstack 0
   403  000007                     ___lwdiv@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	2
   408  000009                     ??___flge:
   409  000009                     ___xxtofl@sign:
   410                           	callstack 0
   411  000009                     updateMovementCount@tempTimerVal:
   412                           	callstack 0
   413  000009                     ___lwdiv@divisor:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x8
   417  000009                     	ds	1
   418  00000A                     ___xxtofl@exp:
   419                           	callstack 0
   420  00000A                     color_read_Clear@tmp:
   421                           	callstack 0
   422  00000A                     color_read_Red@tmp:
   423                           	callstack 0
   424  00000A                     color_read_Green@tmp:
   425                           	callstack 0
   426  00000A                     color_read_Blue@tmp:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x9
   430  00000A                     	ds	1
   431  00000B                     ___lwdiv@quotient:
   432                           	callstack 0
   433  00000B                     ___xxtofl@arg:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0xA
   437  00000B                     	ds	1
   438  00000C                     read_colours@m:
   439                           	callstack 0
   440  00000C                     calibrateW@m:
   441                           	callstack 0
   442  00000C                     calibrateB@m:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xB
   446  00000C                     	ds	1
   447  00000D                     ?_isbtw:
   448                           	callstack 0
   449  00000D                     ___lwdiv@counter:
   450                           	callstack 0
   451  00000D                     isbtw@num:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0xC
   455  00000D                     	ds	1
   456  00000E                     setMotorPWM@m:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xD
   460  00000E                     	ds	1
   461  00000F                     ?___fldiv:
   462                           	callstack 0
   463  00000F                     ___fldiv@b:
   464                           	callstack 0
   465                           
   466                           ; 4 bytes @ 0xE
   467  00000F                     	ds	1
   468  000010                     ??_setMotorPWM:
   469                           
   470                           ; 1 bytes @ 0xF
   471  000010                     	ds	1
   472  000011                     isbtw@low:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x10
   476  000011                     	ds	2
   477  000013                     ___fldiv@a:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x12
   481  000013                     	ds	2
   482  000015                     isbtw@high:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x14
   486  000015                     	ds	2
   487  000017                     ??___fldiv:
   488  000017                     setMotorPWM@PWMduty:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x16
   492  000017                     	ds	2
   493  000019                     stop@mL:
   494                           	callstack 0
   495  000019                     reverse@mL:
   496                           	callstack 0
   497  000019                     forward@mL:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x18
   501  000019                     	ds	2
   502  00001B                     stop@mR:
   503                           	callstack 0
   504  00001B                     reverse@mR:
   505                           	callstack 0
   506  00001B                     forward@mR:
   507                           	callstack 0
   508  00001B                     ___fldiv@rem:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x1A
   512  00001B                     	ds	2
   513  00001D                     turnLeft90@mL:
   514                           	callstack 0
   515  00001D                     turnLeft135@mL:
   516                           	callstack 0
   517  00001D                     turnRight90@mL:
   518                           	callstack 0
   519  00001D                     turnRight135@mL:
   520                           	callstack 0
   521  00001D                     turnRight180@mL:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x1C
   525  00001D                     	ds	2
   526  00001F                     ___fldiv@sign:
   527                           	callstack 0
   528  00001F                     turnLeft90@mR:
   529                           	callstack 0
   530  00001F                     turnLeft135@mR:
   531                           	callstack 0
   532  00001F                     turnRight90@mR:
   533                           	callstack 0
   534  00001F                     turnRight135@mR:
   535                           	callstack 0
   536  00001F                     turnRight180@mR:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x1E
   540  00001F                     	ds	1
   541  000020                     ___fldiv@new_exp:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x1F
   545  000020                     	ds	1
   546  000021                     ??_turnRight180:
   547  000021                     ??_turnLeft90:
   548  000021                     ??_turnRight90:
   549  000021                     ??_turnLeft135:
   550  000021                     ??_turnRight135:
   551                           
   552                           ; 1 bytes @ 0x20
   553  000021                     	ds	1
   554  000022                     ___fldiv@grs:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x21
   558  000022                     	ds	1
   559  000023                     turnLeft90@i:
   560                           	callstack 0
   561  000023                     turnLeft135@i:
   562                           	callstack 0
   563  000023                     turnRight90@i:
   564                           	callstack 0
   565  000023                     turnRight135@i:
   566                           	callstack 0
   567  000023                     turnRight180@i:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x22
   571  000023                     	ds	2
   572  000025                     reverseTurnRight90@mL:
   573                           	callstack 0
   574  000025                     reverseTurnLeft90@mL:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x24
   578  000025                     	ds	1
   579  000026                     ___fldiv@bexp:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x25
   583  000026                     	ds	1
   584  000027                     ___fldiv@aexp:
   585                           	callstack 0
   586  000027                     reverseTurnRight90@mR:
   587                           	callstack 0
   588  000027                     reverseTurnLeft90@mR:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x26
   592  000027                     	ds	1
   593  000028                     ?___flmul:
   594                           	callstack 0
   595  000028                     ___flmul@b:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x27
   599  000028                     	ds	1
   600  000029                     ??_reverseTurnLeft90:
   601  000029                     ??_reverseTurnRight90:
   602                           
   603                           ; 1 bytes @ 0x28
   604  000029                     	ds	2
   605  00002B                     White@mL:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x2A
   609  00002B                     	ds	1
   610  00002C                     ___flmul@a:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x2B
   614  00002C                     	ds	1
   615  00002D                     White@mR:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x2C
   619  00002D                     	ds	2
   620  00002F                     White@movementArray:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x2E
   624  00002F                     	ds	1
   625  000030                     ??___flmul:
   626                           
   627                           ; 1 bytes @ 0x2F
   628  000030                     	ds	1
   629  000031                     White@movements:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x30
   633  000031                     	ds	2
   634  000033                     White@timerArray:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x32
   638  000033                     	ds	1
   639  000034                     ___flmul@sign:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x33
   643  000034                     	ds	1
   644  000035                     ??_White:
   645  000035                     ___flmul@grs:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x34
   649  000035                     	ds	4
   650  000039                     ___flmul@aexp:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x38
   654  000039                     	ds	1
   655  00003A                     ___flmul@bexp:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x39
   659  00003A                     	ds	1
   660  00003B                     ___flmul@prod:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x3A
   664  00003B                     	ds	1
   665  00003C                     White@tempTimerVal:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x3B
   669  00003C                     	ds	2
   670  00003E                     White@i:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x3D
   674  00003E                     	ds	1
   675  00003F                     ___flmul@temp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x3E
   679  00003F                     	ds	2
   680  000041                     ?___fladd:
   681                           	callstack 0
   682  000041                     ___fladd@b:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x40
   686  000041                     	ds	4
   687  000045                     ___fladd@a:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x44
   691  000045                     	ds	4
   692  000049                     ??___fladd:
   693                           
   694                           ; 1 bytes @ 0x48
   695  000049                     	ds	4
   696  00004D                     ___fladd@signs:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x4C
   700  00004D                     	ds	1
   701  00004E                     ___fladd@aexp:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x4D
   705  00004E                     	ds	1
   706  00004F                     ___fladd@bexp:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x4E
   710  00004F                     	ds	1
   711  000050                     ___fladd@grs:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x4F
   715  000050                     	ds	1
   716  000051                     ?___fltol:
   717                           	callstack 0
   718  000051                     ___fltol@f1:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x50
   722  000051                     	ds	4
   723  000055                     ??___fltol:
   724                           
   725                           ; 1 bytes @ 0x54
   726  000055                     	ds	4
   727  000059                     ___fltol@sign1:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x58
   731  000059                     	ds	1
   732  00005A                     ___fltol@exp1:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x59
   736  00005A                     	ds	1
   737  00005B                     ?_determine_color_new:
   738                           	callstack 0
   739  00005B                     determine_color_new@m:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x5A
   743  00005B                     	ds	2
   744  00005D                     ??_main:
   745                           
   746                           ; 1 bytes @ 0x5C
   747  00005D                     	ds	2
   748                           
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 24 in file "main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  detected_col    2   48[BANK0 ] unsigned int 
   759 ;;  test           20   50[BANK0 ] struct RGB_val
   760 ;;  motorR          9   79[BANK0 ] struct DC_motor
   761 ;;  motorL          9   70[BANK0 ] struct DC_motor
   762 ;;  count           2   46[BANK0 ] unsigned int 
   763 ;;  check3          2   44[BANK0 ] unsigned int 
   764 ;;  check2          2   42[BANK0 ] unsigned int 
   765 ;;  check1          2   40[BANK0 ] unsigned int 
   766 ;;  PWMcycle        2    0        unsigned int 
   767 ;;  reset_timer     2   38[BANK0 ] unsigned int 
   768 ;;  check4          2   36[BANK0 ] unsigned int 
   769 ;;  cal             2   34[BANK0 ] unsigned int 
   770 ;;  BlueRatio       2    0        unsigned int 
   771 ;;  GreenRatio      2    0        unsigned int 
   772 ;;  RedRatio        2    0        unsigned int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   786 ;;Total ram usage:       56 bytes
   787 ;; Hardware stack levels required when called: 7
   788 ;; This function calls:
   789 ;;		_Interrupts_init
   790 ;;		_Timer0_init
   791 ;;		_White
   792 ;;		_calibrateB
   793 ;;		_calibrateW
   794 ;;		_color_click_init
   795 ;;		_determine_color_new
   796 ;;		_forward
   797 ;;		_initDCmotorsPWM
   798 ;;		_initUSART4
   799 ;;		_read_colours
   800 ;;		_reverseTurnLeft90
   801 ;;		_reverseTurnRight90
   802 ;;		_stop
   803 ;;		_turnLeft135
   804 ;;		_turnLeft90
   805 ;;		_turnRight135
   806 ;;		_turnRight180
   807 ;;		_turnRight90
   808 ;;		_updateMovementCount
   809 ;; This function is called by:
   810 ;;		Startup code after reset
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text0
   815  000D78                     __ptext0:
   816                           	callstack 0
   817  000D78                     _main:
   818                           	callstack 24
   819  000D78                     
   820                           ;main.c: 26:     initDCmotorsPWM(99);
   821  000D78  0E00               	movlw	0
   822  000D7A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   823  000D7C  0E63               	movlw	99
   824  000D7E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   825  000D80  EC05  F01B         	call	_initDCmotorsPWM	;wreg free
   826  000D84                     
   827                           ;main.c: 27:     color_click_init();
   828  000D84  EC47  F01B         	call	_color_click_init	;wreg free
   829  000D88                     
   830                           ;main.c: 28:     initUSART4();
   831  000D88  ECAE  F01B         	call	_initUSART4	;wreg free
   832  000D8C                     
   833                           ;main.c: 29:     Timer0_init();
   834  000D8C  ECCE  F01B         	call	_Timer0_init	;wreg free
   835  000D90                     
   836                           ;main.c: 30:     _delay((unsigned long)((300)*(64000000/4000.0)));
   837  000D90  0E19               	movlw	25
   838  000D92  6E5E               	movwf	(??_main+1)^0,c
   839  000D94  0E5A               	movlw	90
   840  000D96  6E5D               	movwf	??_main^0,c
   841  000D98  0EB2               	movlw	178
   842  000D9A                     u4187:
   843  000D9A  2EE8               	decfsz	wreg,f,c
   844  000D9C  D7FE               	bra	u4187
   845  000D9E  2E5D               	decfsz	??_main^0,f,c
   846  000DA0  D7FC               	bra	u4187
   847  000DA2  2E5E               	decfsz	(??_main+1)^0,f,c
   848  000DA4  D7FA               	bra	u4187
   849  000DA6                     
   850                           ;main.c: 31:     Interrupts_init();
   851  000DA6  ECE2  F01B         	call	_Interrupts_init	;wreg free
   852  000DAA                     
   853                           ;main.c: 34:     TRISFbits.TRISF2=1;
   854  000DAA  8486               	bsf	134,2,c	;volatile
   855  000DAC                     
   856                           ;main.c: 35:     ANSELFbits.ANSELF2=0;
   857  000DAC  010E               	movlb	14	; () banked
   858  000DAE  95B4               	bcf	180,2,b	;volatile
   859  000DB0                     
   860                           ; BSR set to: 14
   861                           ;main.c: 36:     TRISFbits.TRISF3=1;
   862  000DB0  8686               	bsf	134,3,c	;volatile
   863  000DB2                     
   864                           ; BSR set to: 14
   865                           ;main.c: 37:     ANSELFbits.ANSELF3=0;
   866  000DB2  97B4               	bcf	180,3,b	;volatile
   867  000DB4                     
   868                           ; BSR set to: 14
   869                           ;main.c: 41:     motorL.power=0;
   870  000DB4  0E00               	movlw	0
   871  000DB6  0100               	movlb	0	; () banked
   872  000DB8  6FA6               	movwf	main@motorL& (0+255),b
   873  000DBA                     
   874                           ; BSR set to: 0
   875                           ;main.c: 42:     motorL.direction=1;
   876  000DBA  0E01               	movlw	1
   877  000DBC  6FA7               	movwf	(main@motorL+1)& (0+255),b
   878  000DBE                     
   879                           ; BSR set to: 0
   880                           ;main.c: 43:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   881  000DBE  0EA3               	movlw	163
   882  000DC0  6FA8               	movwf	(main@motorL+2)& (0+255),b
   883  000DC2  0E0F               	movlw	15
   884  000DC4  6FA9               	movwf	(main@motorL+3)& (0+255),b
   885  000DC6                     
   886                           ; BSR set to: 0
   887                           ;main.c: 44:     motorL.dir_LAT=(unsigned char *)(&LATE);
   888  000DC6  0E7D               	movlw	125
   889  000DC8  6FAA               	movwf	(main@motorL+4)& (0+255),b
   890  000DCA  0E0F               	movlw	15
   891  000DCC  6FAB               	movwf	(main@motorL+5)& (0+255),b
   892  000DCE                     
   893                           ; BSR set to: 0
   894                           ;main.c: 45:     motorL.dir_pin=4;
   895  000DCE  0E04               	movlw	4
   896  000DD0  6FAC               	movwf	(main@motorL+6)& (0+255),b
   897  000DD2                     
   898                           ; BSR set to: 0
   899                           ;main.c: 46:     motorL.PWMperiod=PWMcycle;
   900  000DD2  0E00               	movlw	0
   901  000DD4  6FAE               	movwf	(main@motorL+8)& (0+255),b
   902  000DD6  0E63               	movlw	99
   903  000DD8  6FAD               	movwf	(main@motorL+7)& (0+255),b
   904  000DDA                     
   905                           ; BSR set to: 0
   906                           ;main.c: 48:     motorR.power=0;
   907  000DDA  0E00               	movlw	0
   908  000DDC  6FAF               	movwf	main@motorR& (0+255),b
   909  000DDE                     
   910                           ; BSR set to: 0
   911                           ;main.c: 49:     motorR.direction=1;
   912  000DDE  0E01               	movlw	1
   913  000DE0  6FB0               	movwf	(main@motorR+1)& (0+255),b
   914  000DE2                     
   915                           ; BSR set to: 0
   916                           ;main.c: 50:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   917  000DE2  0EA0               	movlw	160
   918  000DE4  6FB1               	movwf	(main@motorR+2)& (0+255),b
   919  000DE6  0E0F               	movlw	15
   920  000DE8  6FB2               	movwf	(main@motorR+3)& (0+255),b
   921  000DEA                     
   922                           ; BSR set to: 0
   923                           ;main.c: 51:     motorR.dir_LAT=(unsigned char *)(&LATG);
   924  000DEA  0E7F               	movlw	127
   925  000DEC  6FB3               	movwf	(main@motorR+4)& (0+255),b
   926  000DEE  0E0F               	movlw	15
   927  000DF0  6FB4               	movwf	(main@motorR+5)& (0+255),b
   928  000DF2                     
   929                           ; BSR set to: 0
   930                           ;main.c: 52:     motorR.dir_pin=6;
   931  000DF2  0E06               	movlw	6
   932  000DF4  6FB5               	movwf	(main@motorR+6)& (0+255),b
   933  000DF6                     
   934                           ; BSR set to: 0
   935                           ;main.c: 53:     motorR.PWMperiod=PWMcycle;
   936  000DF6  0E00               	movlw	0
   937  000DF8  6FB7               	movwf	(main@motorR+8)& (0+255),b
   938  000DFA  0E63               	movlw	99
   939  000DFC  6FB6               	movwf	(main@motorR+7)& (0+255),b
   940  000DFE                     
   941                           ; BSR set to: 0
   942                           ;main.c: 56:     struct RGB_val test;;main.c: 57:     test.C = 0;
   943  000DFE  0E00               	movlw	0
   944  000E00  6F9F               	movwf	(main@test+13)& (0+255),b
   945  000E02  0E00               	movlw	0
   946  000E04  6F9E               	movwf	(main@test+12)& (0+255),b
   947  000E06                     
   948                           ; BSR set to: 0
   949                           ;main.c: 58:     test.R = 0;
   950  000E06  0E00               	movlw	0
   951  000E08  6FA1               	movwf	(main@test+15)& (0+255),b
   952  000E0A  0E00               	movlw	0
   953  000E0C  6FA0               	movwf	(main@test+14)& (0+255),b
   954  000E0E                     
   955                           ; BSR set to: 0
   956                           ;main.c: 59:     test.G = 0;
   957  000E0E  0E00               	movlw	0
   958  000E10  6FA3               	movwf	(main@test+17)& (0+255),b
   959  000E12  0E00               	movlw	0
   960  000E14  6FA2               	movwf	(main@test+16)& (0+255),b
   961  000E16                     
   962                           ; BSR set to: 0
   963                           ;main.c: 60:     test.B = 0;
   964  000E16  0E00               	movlw	0
   965  000E18  6FA5               	movwf	(main@test+19)& (0+255),b
   966  000E1A  0E00               	movlw	0
   967  000E1C  6FA4               	movwf	(main@test+18)& (0+255),b
   968  000E1E                     
   969                           ; BSR set to: 0
   970                           ;main.c: 63:     LATGbits.LATG1=1;
   971  000E1E  827F               	bsf	127,1,c	;volatile
   972  000E20                     
   973                           ; BSR set to: 0
   974                           ;main.c: 64:     TRISGbits.TRISG1=0;
   975  000E20  9287               	bcf	135,1,c	;volatile
   976  000E22                     
   977                           ; BSR set to: 0
   978                           ;main.c: 65:     LATAbits.LATA4=1;
   979  000E22  8879               	bsf	121,4,c	;volatile
   980  000E24                     
   981                           ; BSR set to: 0
   982                           ;main.c: 66:     TRISAbits.TRISA4=0;
   983  000E24  9881               	bcf	129,4,c	;volatile
   984  000E26                     
   985                           ; BSR set to: 0
   986                           ;main.c: 67:     LATFbits.LATF7=1;
   987  000E26  8E7E               	bsf	126,7,c	;volatile
   988  000E28                     
   989                           ; BSR set to: 0
   990                           ;main.c: 68:     TRISFbits.TRISF7=0;
   991  000E28  9E86               	bcf	134,7,c	;volatile
   992  000E2A                     
   993                           ; BSR set to: 0
   994                           ;main.c: 71:     TRISDbits.TRISD7 = 0;
   995  000E2A  9E84               	bcf	132,7,c	;volatile
   996  000E2C                     
   997                           ; BSR set to: 0
   998                           ;main.c: 72:     LATDbits.LATD7 = 0;
   999  000E2C  9E7C               	bcf	124,7,c	;volatile
  1000  000E2E                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 73:     TRISHbits.TRISH3 = 0;
  1003  000E2E  9688               	bcf	136,3,c	;volatile
  1004  000E30                     
  1005                           ; BSR set to: 0
  1006                           ;main.c: 74:     LATHbits.LATH3 = 0;
  1007  000E30  9680               	bcf	128,3,c	;volatile
  1008  000E32                     
  1009                           ; BSR set to: 0
  1010                           ;main.c: 76:     unsigned int RedRatio, GreenRatio, BlueRatio;;main.c: 79:     unsigned 
      +                          int cal = 0;
  1011  000E32  0E00               	movlw	0
  1012  000E34  6F83               	movwf	(main@cal+1)& (0+255),b
  1013  000E36  0E00               	movlw	0
  1014  000E38  6F82               	movwf	main@cal& (0+255),b
  1015                           
  1016                           ;main.c: 80:     while(cal==0){
  1017  000E3A  EF76  F007         	goto	l4031
  1018  000E3E                     l365:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;main.c: 81:         LATDbits.LATD7 = 1;
  1022  000E3E  8E7C               	bsf	124,7,c	;volatile
  1023  000E40                     l366:
  1024  000E40  B48E               	btfsc	142,2,c	;volatile
  1025  000E42  EF25  F007         	goto	u3861
  1026  000E46  EF27  F007         	goto	u3860
  1027  000E4A                     u3861:
  1028  000E4A  EF20  F007         	goto	l366
  1029  000E4E                     u3860:
  1030  000E4E                     
  1031                           ;main.c: 83:         if (!PORTFbits.RF2){
  1032  000E4E  B48E               	btfsc	142,2,c	;volatile
  1033  000E50  EF2C  F007         	goto	u3871
  1034  000E54  EF2E  F007         	goto	u3870
  1035  000E58                     u3871:
  1036  000E58  EF40  F007         	goto	l4017
  1037  000E5C                     u3870:
  1038  000E5C                     
  1039                           ;main.c: 84:             LATDbits.LATD7 = 0;
  1040  000E5C  9E7C               	bcf	124,7,c	;volatile
  1041  000E5E                     
  1042                           ;main.c: 85:             calibrateW(&test);
  1043  000E5E  0E92               	movlw	low main@test
  1044  000E60  6E0C               	movwf	calibrateW@m^0,c
  1045  000E62  0E00               	movlw	high main@test
  1046  000E64  6E0D               	movwf	(calibrateW@m+1)^0,c
  1047  000E66  ECBD  F01A         	call	_calibrateW	;wreg free
  1048  000E6A                     
  1049                           ;main.c: 86:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1050  000E6A  0E19               	movlw	25
  1051  000E6C  6E5E               	movwf	(??_main+1)^0,c
  1052  000E6E  0E5A               	movlw	90
  1053  000E70  6E5D               	movwf	??_main^0,c
  1054  000E72  0EB2               	movlw	178
  1055  000E74                     u4197:
  1056  000E74  2EE8               	decfsz	wreg,f,c
  1057  000E76  D7FE               	bra	u4197
  1058  000E78  2E5D               	decfsz	??_main^0,f,c
  1059  000E7A  D7FC               	bra	u4197
  1060  000E7C  2E5E               	decfsz	(??_main+1)^0,f,c
  1061  000E7E  D7FA               	bra	u4197
  1062  000E80                     l4017:
  1063                           
  1064                           ;main.c: 89:         LATDbits.LATD7 = 1;
  1065  000E80  8E7C               	bsf	124,7,c	;volatile
  1066  000E82                     l370:
  1067  000E82  B48E               	btfsc	142,2,c	;volatile
  1068  000E84  EF46  F007         	goto	u3881
  1069  000E88  EF48  F007         	goto	u3880
  1070  000E8C                     u3881:
  1071  000E8C  EF41  F007         	goto	l370
  1072  000E90                     u3880:
  1073  000E90                     
  1074                           ;main.c: 91:         if (!PORTFbits.RF2){
  1075  000E90  B48E               	btfsc	142,2,c	;volatile
  1076  000E92  EF4D  F007         	goto	u3891
  1077  000E96  EF4F  F007         	goto	u3890
  1078  000E9A                     u3891:
  1079  000E9A  EF61  F007         	goto	l4025
  1080  000E9E                     u3890:
  1081  000E9E                     
  1082                           ;main.c: 92:             LATDbits.LATD7 = 0;
  1083  000E9E  9E7C               	bcf	124,7,c	;volatile
  1084  000EA0                     
  1085                           ;main.c: 93:             calibrateB(&test);
  1086  000EA0  0E92               	movlw	low main@test
  1087  000EA2  6E0C               	movwf	calibrateB@m^0,c
  1088  000EA4  0E00               	movlw	high main@test
  1089  000EA6  6E0D               	movwf	(calibrateB@m+1)^0,c
  1090  000EA8  ECE2  F01A         	call	_calibrateB	;wreg free
  1091  000EAC                     
  1092                           ;main.c: 94:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1093  000EAC  0E19               	movlw	25
  1094  000EAE  6E5E               	movwf	(??_main+1)^0,c
  1095  000EB0  0E5A               	movlw	90
  1096  000EB2  6E5D               	movwf	??_main^0,c
  1097  000EB4  0EB2               	movlw	178
  1098  000EB6                     u4207:
  1099  000EB6  2EE8               	decfsz	wreg,f,c
  1100  000EB8  D7FE               	bra	u4207
  1101  000EBA  2E5D               	decfsz	??_main^0,f,c
  1102  000EBC  D7FC               	bra	u4207
  1103  000EBE  2E5E               	decfsz	(??_main+1)^0,f,c
  1104  000EC0  D7FA               	bra	u4207
  1105  000EC2                     l4025:
  1106                           
  1107                           ;main.c: 97:         LATHbits.LATH3 = 1;
  1108  000EC2  8680               	bsf	128,3,c	;volatile
  1109  000EC4                     l374:
  1110  000EC4  B68E               	btfsc	142,3,c	;volatile
  1111  000EC6  EF67  F007         	goto	u3901
  1112  000ECA  EF69  F007         	goto	u3900
  1113  000ECE                     u3901:
  1114  000ECE  EF62  F007         	goto	l374
  1115  000ED2                     u3900:
  1116  000ED2                     
  1117                           ;main.c: 99:         if (!PORTFbits.RF3){
  1118  000ED2  B68E               	btfsc	142,3,c	;volatile
  1119  000ED4  EF6E  F007         	goto	u3911
  1120  000ED8  EF70  F007         	goto	u3910
  1121  000EDC                     u3911:
  1122  000EDC  EF76  F007         	goto	l4031
  1123  000EE0                     u3910:
  1124  000EE0                     
  1125                           ;main.c: 100:             LATHbits.LATH3 = 0;
  1126  000EE0  9680               	bcf	128,3,c	;volatile
  1127  000EE2                     
  1128                           ;main.c: 101:             cal = 1;
  1129  000EE2  0E00               	movlw	0
  1130  000EE4  0100               	movlb	0	; () banked
  1131  000EE6  6F83               	movwf	(main@cal+1)& (0+255),b
  1132  000EE8  0E01               	movlw	1
  1133  000EEA  6F82               	movwf	main@cal& (0+255),b
  1134  000EEC                     l4031:
  1135                           
  1136                           ;main.c: 80:     while(cal==0){
  1137  000EEC  0100               	movlb	0	; () banked
  1138  000EEE  5182               	movf	main@cal& (0+255),w,b
  1139  000EF0  1183               	iorwf	(main@cal+1)& (0+255),w,b
  1140  000EF2  B4D8               	btfsc	status,2,c
  1141  000EF4  EF7E  F007         	goto	u3921
  1142  000EF8  EF80  F007         	goto	u3920
  1143  000EFC                     u3921:
  1144  000EFC  EF1F  F007         	goto	l365
  1145  000F00                     u3920:
  1146  000F00                     
  1147                           ; BSR set to: 0
  1148                           ;main.c: 105:     unsigned int check1 = 9;
  1149  000F00  0E00               	movlw	0
  1150  000F02  6F89               	movwf	(main@check1+1)& (0+255),b
  1151  000F04  0E09               	movlw	9
  1152  000F06  6F88               	movwf	main@check1& (0+255),b
  1153                           
  1154                           ;main.c: 106:     unsigned int check2 = 9;
  1155  000F08  0E00               	movlw	0
  1156  000F0A  6F8B               	movwf	(main@check2+1)& (0+255),b
  1157  000F0C  0E09               	movlw	9
  1158  000F0E  6F8A               	movwf	main@check2& (0+255),b
  1159                           
  1160                           ;main.c: 107:     unsigned int check3 = 9;
  1161  000F10  0E00               	movlw	0
  1162  000F12  6F8D               	movwf	(main@check3+1)& (0+255),b
  1163  000F14  0E09               	movlw	9
  1164  000F16  6F8C               	movwf	main@check3& (0+255),b
  1165                           
  1166                           ;main.c: 108:     unsigned int check4 = 9;
  1167  000F18  0E00               	movlw	0
  1168  000F1A  6F85               	movwf	(main@check4+1)& (0+255),b
  1169  000F1C  0E09               	movlw	9
  1170  000F1E  6F84               	movwf	main@check4& (0+255),b
  1171                           
  1172                           ;main.c: 109:     unsigned int count = 0;
  1173  000F20  0E00               	movlw	0
  1174  000F22  6F8F               	movwf	(main@count+1)& (0+255),b
  1175  000F24  0E00               	movlw	0
  1176  000F26  6F8E               	movwf	main@count& (0+255),b
  1177                           
  1178                           ;main.c: 110:     unsigned int reset_timer = 1;
  1179  000F28  0E00               	movlw	0
  1180  000F2A  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1181  000F2C  0E01               	movlw	1
  1182  000F2E  6F86               	movwf	main@reset_timer& (0+255),b
  1183  000F30                     l4035:
  1184                           
  1185                           ;main.c: 113:         unsigned int detected_colour;;main.c: 114:         read_colours(&t
      +                          est);
  1186  000F30  0E92               	movlw	low main@test
  1187  000F32  6E0C               	movwf	read_colours@m^0,c
  1188  000F34  0E00               	movlw	high main@test
  1189  000F36  6E0D               	movwf	(read_colours@m+1)^0,c
  1190  000F38  EC74  F019         	call	_read_colours	;wreg free
  1191  000F3C                     
  1192                           ;main.c: 115:         if (count==0) {check1 = determine_color_new(&test);}
  1193  000F3C  0100               	movlb	0	; () banked
  1194  000F3E  518E               	movf	main@count& (0+255),w,b
  1195  000F40  118F               	iorwf	(main@count+1)& (0+255),w,b
  1196  000F42  A4D8               	btfss	status,2,c
  1197  000F44  EFA6  F007         	goto	u3931
  1198  000F48  EFA8  F007         	goto	u3930
  1199  000F4C                     u3931:
  1200  000F4C  EFB2  F007         	goto	l4041
  1201  000F50                     u3930:
  1202  000F50                     
  1203                           ; BSR set to: 0
  1204  000F50  0E92               	movlw	low main@test
  1205  000F52  6E5B               	movwf	determine_color_new@m^0,c
  1206  000F54  0E00               	movlw	high main@test
  1207  000F56  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1208  000F58  EC16  F000         	call	_determine_color_new	;wreg free
  1209  000F5C  C05B  F088         	movff	?_determine_color_new,main@check1
  1210  000F60  C05C  F089         	movff	?_determine_color_new+1,main@check1+1
  1211  000F64                     l4041:
  1212                           
  1213                           ;main.c: 116:         if (count==1) {check2 = determine_color_new(&test);}
  1214  000F64  0100               	movlb	0	; () banked
  1215  000F66  058E               	decf	main@count& (0+255),w,b
  1216  000F68  118F               	iorwf	(main@count+1)& (0+255),w,b
  1217  000F6A  A4D8               	btfss	status,2,c
  1218  000F6C  EFBA  F007         	goto	u3941
  1219  000F70  EFBC  F007         	goto	u3940
  1220  000F74                     u3941:
  1221  000F74  EFC6  F007         	goto	l4045
  1222  000F78                     u3940:
  1223  000F78                     
  1224                           ; BSR set to: 0
  1225  000F78  0E92               	movlw	low main@test
  1226  000F7A  6E5B               	movwf	determine_color_new@m^0,c
  1227  000F7C  0E00               	movlw	high main@test
  1228  000F7E  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1229  000F80  EC16  F000         	call	_determine_color_new	;wreg free
  1230  000F84  C05B  F08A         	movff	?_determine_color_new,main@check2
  1231  000F88  C05C  F08B         	movff	?_determine_color_new+1,main@check2+1
  1232  000F8C                     l4045:
  1233                           
  1234                           ;main.c: 117:         if (count==2) {check3 = determine_color_new(&test);}
  1235  000F8C  0E02               	movlw	2
  1236  000F8E  0100               	movlb	0	; () banked
  1237  000F90  198E               	xorwf	main@count& (0+255),w,b
  1238  000F92  118F               	iorwf	(main@count+1)& (0+255),w,b
  1239  000F94  A4D8               	btfss	status,2,c
  1240  000F96  EFCF  F007         	goto	u3951
  1241  000F9A  EFD1  F007         	goto	u3950
  1242  000F9E                     u3951:
  1243  000F9E  EFDB  F007         	goto	l4049
  1244  000FA2                     u3950:
  1245  000FA2                     
  1246                           ; BSR set to: 0
  1247  000FA2  0E92               	movlw	low main@test
  1248  000FA4  6E5B               	movwf	determine_color_new@m^0,c
  1249  000FA6  0E00               	movlw	high main@test
  1250  000FA8  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1251  000FAA  EC16  F000         	call	_determine_color_new	;wreg free
  1252  000FAE  C05B  F08C         	movff	?_determine_color_new,main@check3
  1253  000FB2  C05C  F08D         	movff	?_determine_color_new+1,main@check3+1
  1254  000FB6                     l4049:
  1255                           
  1256                           ;main.c: 118:         if (count==3) {check4 = determine_color_new(&test);count=0;}
  1257  000FB6  0E03               	movlw	3
  1258  000FB8  0100               	movlb	0	; () banked
  1259  000FBA  198E               	xorwf	main@count& (0+255),w,b
  1260  000FBC  118F               	iorwf	(main@count+1)& (0+255),w,b
  1261  000FBE  A4D8               	btfss	status,2,c
  1262  000FC0  EFE4  F007         	goto	u3961
  1263  000FC4  EFE6  F007         	goto	u3960
  1264  000FC8                     u3961:
  1265  000FC8  EFF7  F007         	goto	l4055
  1266  000FCC                     u3960:
  1267  000FCC                     
  1268                           ; BSR set to: 0
  1269  000FCC  0E92               	movlw	low main@test
  1270  000FCE  6E5B               	movwf	determine_color_new@m^0,c
  1271  000FD0  0E00               	movlw	high main@test
  1272  000FD2  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1273  000FD4  EC16  F000         	call	_determine_color_new	;wreg free
  1274  000FD8  C05B  F084         	movff	?_determine_color_new,main@check4
  1275  000FDC  C05C  F085         	movff	?_determine_color_new+1,main@check4+1
  1276  000FE0  0E00               	movlw	0
  1277  000FE2  0100               	movlb	0	; () banked
  1278  000FE4  6F8F               	movwf	(main@count+1)& (0+255),b
  1279  000FE6  0E00               	movlw	0
  1280  000FE8  6F8E               	movwf	main@count& (0+255),b
  1281  000FEA  EFF9  F007         	goto	l4057
  1282  000FEE                     l4055:
  1283                           
  1284                           ; BSR set to: 0
  1285  000FEE  4B8E               	infsnz	main@count& (0+255),f,b
  1286  000FF0  2B8F               	incf	(main@count+1)& (0+255),f,b
  1287  000FF2                     l4057:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 123:         if (check1==check2 && check2==check3 && check3==check4){
  1291  000FF2  518A               	movf	main@check2& (0+255),w,b
  1292  000FF4  1988               	xorwf	main@check1& (0+255),w,b
  1293  000FF6  E107               	bnz	u3971
  1294  000FF8  518B               	movf	(main@check2+1)& (0+255),w,b
  1295  000FFA  1989               	xorwf	(main@check1+1)& (0+255),w,b
  1296  000FFC  A4D8               	btfss	status,2,c
  1297  000FFE  EF03  F008         	goto	u3971
  1298  001002  EF05  F008         	goto	u3970
  1299  001006                     u3971:
  1300  001006  EF70  F008         	goto	l4077
  1301  00100A                     u3970:
  1302  00100A                     
  1303                           ; BSR set to: 0
  1304  00100A  518C               	movf	main@check3& (0+255),w,b
  1305  00100C  198A               	xorwf	main@check2& (0+255),w,b
  1306  00100E  E107               	bnz	u3981
  1307  001010  518D               	movf	(main@check3+1)& (0+255),w,b
  1308  001012  198B               	xorwf	(main@check2+1)& (0+255),w,b
  1309  001014  A4D8               	btfss	status,2,c
  1310  001016  EF0F  F008         	goto	u3981
  1311  00101A  EF11  F008         	goto	u3980
  1312  00101E                     u3981:
  1313  00101E  EF70  F008         	goto	l4077
  1314  001022                     u3980:
  1315  001022                     
  1316                           ; BSR set to: 0
  1317  001022  5184               	movf	main@check4& (0+255),w,b
  1318  001024  198C               	xorwf	main@check3& (0+255),w,b
  1319  001026  E107               	bnz	u3991
  1320  001028  5185               	movf	(main@check4+1)& (0+255),w,b
  1321  00102A  198D               	xorwf	(main@check3+1)& (0+255),w,b
  1322  00102C  A4D8               	btfss	status,2,c
  1323  00102E  EF1B  F008         	goto	u3991
  1324  001032  EF1D  F008         	goto	u3990
  1325  001036                     u3991:
  1326  001036  EF70  F008         	goto	l4077
  1327  00103A                     u3990:
  1328  00103A                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 124:             detected_colour = check1;
  1331  00103A  C088  F090         	movff	main@check1,main@detected_colour
  1332  00103E  C089  F091         	movff	main@check1+1,main@detected_colour+1
  1333  001042                     
  1334                           ; BSR set to: 0
  1335                           ;main.c: 125:             if (detected_colour >= 0 && detected_colour <= 6){
  1336  001042  5191               	movf	(main@detected_colour+1)& (0+255),w,b
  1337  001044  E107               	bnz	u4001
  1338  001046  0E07               	movlw	7
  1339  001048  5D90               	subwf	main@detected_colour& (0+255),w,b
  1340  00104A  B0D8               	btfsc	status,0,c
  1341  00104C  EF2A  F008         	goto	u4001
  1342  001050  EF2C  F008         	goto	u4000
  1343  001054                     u4001:
  1344  001054  EF45  F008         	goto	l4071
  1345  001058                     u4000:
  1346  001058                     
  1347                           ; BSR set to: 0
  1348                           ;main.c: 126:                 updateMovementCount(detected_colour, movementArray, moveme
      +                          nts, timerArray);
  1349  001058  C090  F001         	movff	main@detected_colour,updateMovementCount@movementCode
  1350  00105C  C091  F002         	movff	main@detected_colour+1,updateMovementCount@movementCode+1
  1351  001060  0ED2               	movlw	low _movementArray
  1352  001062  6E03               	movwf	updateMovementCount@movementArray^0,c
  1353  001064  0E00               	movlw	high _movementArray
  1354  001066  6E04               	movwf	(updateMovementCount@movementArray+1)^0,c
  1355  001068  C0CC  F005         	movff	_movements,updateMovementCount@movements	;volatile
  1356  00106C  C0CD  F006         	movff	_movements+1,updateMovementCount@movements+1	;volatile
  1357  001070  0ED2               	movlw	low _timerArray
  1358  001072  6E07               	movwf	updateMovementCount@timerArray^0,c
  1359  001074  0E00               	movlw	high _timerArray
  1360  001076  6E08               	movwf	(updateMovementCount@timerArray+1)^0,c
  1361  001078  EC97  F01A         	call	_updateMovementCount	;wreg free
  1362  00107C                     
  1363                           ;main.c: 127:                 reset_timer = 1;
  1364  00107C  0E00               	movlw	0
  1365  00107E  0100               	movlb	0	; () banked
  1366  001080  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1367  001082  0E01               	movlw	1
  1368  001084  6F86               	movwf	main@reset_timer& (0+255),b
  1369                           
  1370                           ;main.c: 128:             }
  1371  001086  EF60  F008         	goto	l387
  1372  00108A                     l4071:
  1373                           
  1374                           ; BSR set to: 0
  1375  00108A  0E09               	movlw	9
  1376  00108C  1990               	xorwf	main@detected_colour& (0+255),w,b
  1377  00108E  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1378  001090  A4D8               	btfss	status,2,c
  1379  001092  EF4D  F008         	goto	u4011
  1380  001096  EF4F  F008         	goto	u4010
  1381  00109A                     u4011:
  1382  00109A  EF60  F008         	goto	l387
  1383  00109E                     u4010:
  1384  00109E                     
  1385                           ; BSR set to: 0
  1386  00109E  0586               	decf	main@reset_timer& (0+255),w,b
  1387  0010A0  1187               	iorwf	(main@reset_timer+1)& (0+255),w,b
  1388  0010A2  A4D8               	btfss	status,2,c
  1389  0010A4  EF56  F008         	goto	u4021
  1390  0010A8  EF58  F008         	goto	u4020
  1391  0010AC                     u4021:
  1392  0010AC  EF60  F008         	goto	l387
  1393  0010B0                     u4020:
  1394  0010B0                     
  1395                           ; BSR set to: 0
  1396                           ;main.c: 130:                 TMR0H = 0;
  1397  0010B0  0E00               	movlw	0
  1398  0010B2  6ED4               	movwf	212,c	;volatile
  1399                           
  1400                           ;main.c: 131:                 TMR0L = 0;
  1401  0010B4  0E00               	movlw	0
  1402  0010B6  6ED3               	movwf	211,c	;volatile
  1403                           
  1404                           ;main.c: 132:                 reset_timer = 0;
  1405  0010B8  0E00               	movlw	0
  1406  0010BA  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1407  0010BC  0E00               	movlw	0
  1408  0010BE  6F86               	movwf	main@reset_timer& (0+255),b
  1409  0010C0                     l387:
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;main.c: 134:             check1=9;
  1413  0010C0  0E00               	movlw	0
  1414  0010C2  6F89               	movwf	(main@check1+1)& (0+255),b
  1415  0010C4  0E09               	movlw	9
  1416  0010C6  6F88               	movwf	main@check1& (0+255),b
  1417                           
  1418                           ;main.c: 135:             check2=9;
  1419  0010C8  0E00               	movlw	0
  1420  0010CA  6F8B               	movwf	(main@check2+1)& (0+255),b
  1421  0010CC  0E09               	movlw	9
  1422  0010CE  6F8A               	movwf	main@check2& (0+255),b
  1423                           
  1424                           ;main.c: 136:             check3=9;
  1425  0010D0  0E00               	movlw	0
  1426  0010D2  6F8D               	movwf	(main@check3+1)& (0+255),b
  1427  0010D4  0E09               	movlw	9
  1428  0010D6  6F8C               	movwf	main@check3& (0+255),b
  1429                           
  1430                           ;main.c: 137:             check4=9;
  1431  0010D8  0E00               	movlw	0
  1432  0010DA  6F85               	movwf	(main@check4+1)& (0+255),b
  1433  0010DC  0E09               	movlw	9
  1434  0010DE  6F84               	movwf	main@check4& (0+255),b
  1435  0010E0                     l4077:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 140:         if (detected_colour == 0){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1439  0010E0  5190               	movf	main@detected_colour& (0+255),w,b
  1440  0010E2  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1441  0010E4  A4D8               	btfss	status,2,c
  1442  0010E6  EF77  F008         	goto	u4031
  1443  0010EA  EF79  F008         	goto	u4030
  1444  0010EE                     u4031:
  1445  0010EE  EF8F  F008         	goto	l4083
  1446  0010F2                     u4030:
  1447  0010F2                     
  1448                           ; BSR set to: 0
  1449  0010F2  0EA6               	movlw	low main@motorL
  1450  0010F4  6E1D               	movwf	turnRight90@mL^0,c
  1451  0010F6  0E00               	movlw	high main@motorL
  1452  0010F8  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1453  0010FA  0EAF               	movlw	low main@motorR
  1454  0010FC  6E1F               	movwf	turnRight90@mR^0,c
  1455  0010FE  0E00               	movlw	high main@motorR
  1456  001100  6E20               	movwf	(turnRight90@mR+1)^0,c
  1457  001102  EC82  F015         	call	_turnRight90	;wreg free
  1458  001106  0E09               	movlw	9
  1459  001108  6E5E               	movwf	(??_main+1)^0,c
  1460  00110A  0E1E               	movlw	30
  1461  00110C  6E5D               	movwf	??_main^0,c
  1462  00110E  0EE4               	movlw	228
  1463  001110                     u4217:
  1464  001110  2EE8               	decfsz	wreg,f,c
  1465  001112  D7FE               	bra	u4217
  1466  001114  2E5D               	decfsz	??_main^0,f,c
  1467  001116  D7FC               	bra	u4217
  1468  001118  2E5E               	decfsz	(??_main+1)^0,f,c
  1469  00111A  D7FA               	bra	u4217
  1470  00111C  D000               	nop2	
  1471  00111E                     l4083:
  1472                           
  1473                           ;main.c: 141:         if (detected_colour == 1){ turnLeft90(&motorL,&motorR);_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  1474  00111E  0100               	movlb	0	; () banked
  1475  001120  0590               	decf	main@detected_colour& (0+255),w,b
  1476  001122  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1477  001124  A4D8               	btfss	status,2,c
  1478  001126  EF97  F008         	goto	u4041
  1479  00112A  EF99  F008         	goto	u4040
  1480  00112E                     u4041:
  1481  00112E  EFAF  F008         	goto	l4089
  1482  001132                     u4040:
  1483  001132                     
  1484                           ; BSR set to: 0
  1485  001132  0EA6               	movlw	low main@motorL
  1486  001134  6E1D               	movwf	turnLeft90@mL^0,c
  1487  001136  0E00               	movlw	high main@motorL
  1488  001138  6E1E               	movwf	(turnLeft90@mL+1)^0,c
  1489  00113A  0EAF               	movlw	low main@motorR
  1490  00113C  6E1F               	movwf	turnLeft90@mR^0,c
  1491  00113E  0E00               	movlw	high main@motorR
  1492  001140  6E20               	movwf	(turnLeft90@mR+1)^0,c
  1493  001142  ECA4  F013         	call	_turnLeft90	;wreg free
  1494  001146  0E09               	movlw	9
  1495  001148  6E5E               	movwf	(??_main+1)^0,c
  1496  00114A  0E1E               	movlw	30
  1497  00114C  6E5D               	movwf	??_main^0,c
  1498  00114E  0EE4               	movlw	228
  1499  001150                     u4227:
  1500  001150  2EE8               	decfsz	wreg,f,c
  1501  001152  D7FE               	bra	u4227
  1502  001154  2E5D               	decfsz	??_main^0,f,c
  1503  001156  D7FC               	bra	u4227
  1504  001158  2E5E               	decfsz	(??_main+1)^0,f,c
  1505  00115A  D7FA               	bra	u4227
  1506  00115C  D000               	nop2	
  1507  00115E                     l4089:
  1508                           
  1509                           ;main.c: 142:         if (detected_colour == 2){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1510  00115E  0E02               	movlw	2
  1511  001160  0100               	movlb	0	; () banked
  1512  001162  1990               	xorwf	main@detected_colour& (0+255),w,b
  1513  001164  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1514  001166  A4D8               	btfss	status,2,c
  1515  001168  EFB8  F008         	goto	u4051
  1516  00116C  EFBA  F008         	goto	u4050
  1517  001170                     u4051:
  1518  001170  EFD0  F008         	goto	l4095
  1519  001174                     u4050:
  1520  001174                     
  1521                           ; BSR set to: 0
  1522  001174  0EA6               	movlw	low main@motorL
  1523  001176  6E1D               	movwf	turnRight180@mL^0,c
  1524  001178  0E00               	movlw	high main@motorL
  1525  00117A  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1526  00117C  0EAF               	movlw	low main@motorR
  1527  00117E  6E1F               	movwf	turnRight180@mR^0,c
  1528  001180  0E00               	movlw	high main@motorR
  1529  001182  6E20               	movwf	(turnRight180@mR+1)^0,c
  1530  001184  EC44  F014         	call	_turnRight180	;wreg free
  1531  001188  0E09               	movlw	9
  1532  00118A  6E5E               	movwf	(??_main+1)^0,c
  1533  00118C  0E1E               	movlw	30
  1534  00118E  6E5D               	movwf	??_main^0,c
  1535  001190  0EE4               	movlw	228
  1536  001192                     u4237:
  1537  001192  2EE8               	decfsz	wreg,f,c
  1538  001194  D7FE               	bra	u4237
  1539  001196  2E5D               	decfsz	??_main^0,f,c
  1540  001198  D7FC               	bra	u4237
  1541  00119A  2E5E               	decfsz	(??_main+1)^0,f,c
  1542  00119C  D7FA               	bra	u4237
  1543  00119E  D000               	nop2	
  1544  0011A0                     l4095:
  1545                           
  1546                           ;main.c: 143:         if (detected_colour == 3){ reverseTurnRight90(&motorL,&motorR);_de
      +                          lay((unsigned long)((100)*(64000000/4000.0)));}
  1547  0011A0  0E03               	movlw	3
  1548  0011A2  0100               	movlb	0	; () banked
  1549  0011A4  1990               	xorwf	main@detected_colour& (0+255),w,b
  1550  0011A6  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1551  0011A8  A4D8               	btfss	status,2,c
  1552  0011AA  EFD9  F008         	goto	u4061
  1553  0011AE  EFDB  F008         	goto	u4060
  1554  0011B2                     u4061:
  1555  0011B2  EFF1  F008         	goto	l4101
  1556  0011B6                     u4060:
  1557  0011B6                     
  1558                           ; BSR set to: 0
  1559  0011B6  0EA6               	movlw	low main@motorL
  1560  0011B8  6E25               	movwf	reverseTurnRight90@mL^0,c
  1561  0011BA  0E00               	movlw	high main@motorL
  1562  0011BC  6E26               	movwf	(reverseTurnRight90@mL+1)^0,c
  1563  0011BE  0EAF               	movlw	low main@motorR
  1564  0011C0  6E27               	movwf	reverseTurnRight90@mR^0,c
  1565  0011C2  0E00               	movlw	high main@motorR
  1566  0011C4  6E28               	movwf	(reverseTurnRight90@mR+1)^0,c
  1567  0011C6  ECC4  F017         	call	_reverseTurnRight90	;wreg free
  1568  0011CA  0E09               	movlw	9
  1569  0011CC  6E5E               	movwf	(??_main+1)^0,c
  1570  0011CE  0E1E               	movlw	30
  1571  0011D0  6E5D               	movwf	??_main^0,c
  1572  0011D2  0EE4               	movlw	228
  1573  0011D4                     u4247:
  1574  0011D4  2EE8               	decfsz	wreg,f,c
  1575  0011D6  D7FE               	bra	u4247
  1576  0011D8  2E5D               	decfsz	??_main^0,f,c
  1577  0011DA  D7FC               	bra	u4247
  1578  0011DC  2E5E               	decfsz	(??_main+1)^0,f,c
  1579  0011DE  D7FA               	bra	u4247
  1580  0011E0  D000               	nop2	
  1581  0011E2                     l4101:
  1582                           
  1583                           ;main.c: 144:         if (detected_colour == 4){ reverseTurnLeft90(&motorL,&motorR);_del
      +                          ay((unsigned long)((100)*(64000000/4000.0)));}
  1584  0011E2  0E04               	movlw	4
  1585  0011E4  0100               	movlb	0	; () banked
  1586  0011E6  1990               	xorwf	main@detected_colour& (0+255),w,b
  1587  0011E8  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1588  0011EA  A4D8               	btfss	status,2,c
  1589  0011EC  EFFA  F008         	goto	u4071
  1590  0011F0  EFFC  F008         	goto	u4070
  1591  0011F4                     u4071:
  1592  0011F4  EF12  F009         	goto	l4107
  1593  0011F8                     u4070:
  1594  0011F8                     
  1595                           ; BSR set to: 0
  1596  0011F8  0EA6               	movlw	low main@motorL
  1597  0011FA  6E25               	movwf	reverseTurnLeft90@mL^0,c
  1598  0011FC  0E00               	movlw	high main@motorL
  1599  0011FE  6E26               	movwf	(reverseTurnLeft90@mL+1)^0,c
  1600  001200  0EAF               	movlw	low main@motorR
  1601  001202  6E27               	movwf	reverseTurnLeft90@mR^0,c
  1602  001204  0E00               	movlw	high main@motorR
  1603  001206  6E28               	movwf	(reverseTurnLeft90@mR+1)^0,c
  1604  001208  EC3A  F018         	call	_reverseTurnLeft90	;wreg free
  1605  00120C  0E09               	movlw	9
  1606  00120E  6E5E               	movwf	(??_main+1)^0,c
  1607  001210  0E1E               	movlw	30
  1608  001212  6E5D               	movwf	??_main^0,c
  1609  001214  0EE4               	movlw	228
  1610  001216                     u4257:
  1611  001216  2EE8               	decfsz	wreg,f,c
  1612  001218  D7FE               	bra	u4257
  1613  00121A  2E5D               	decfsz	??_main^0,f,c
  1614  00121C  D7FC               	bra	u4257
  1615  00121E  2E5E               	decfsz	(??_main+1)^0,f,c
  1616  001220  D7FA               	bra	u4257
  1617  001222  D000               	nop2	
  1618  001224                     l4107:
  1619                           
  1620                           ;main.c: 145:         if (detected_colour == 5){ turnRight135(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1621  001224  0E05               	movlw	5
  1622  001226  0100               	movlb	0	; () banked
  1623  001228  1990               	xorwf	main@detected_colour& (0+255),w,b
  1624  00122A  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1625  00122C  A4D8               	btfss	status,2,c
  1626  00122E  EF1B  F009         	goto	u4081
  1627  001232  EF1D  F009         	goto	u4080
  1628  001236                     u4081:
  1629  001236  EF33  F009         	goto	l4113
  1630  00123A                     u4080:
  1631  00123A                     
  1632                           ; BSR set to: 0
  1633  00123A  0EA6               	movlw	low main@motorL
  1634  00123C  6E1D               	movwf	turnRight135@mL^0,c
  1635  00123E  0E00               	movlw	high main@motorL
  1636  001240  6E1E               	movwf	(turnRight135@mL+1)^0,c
  1637  001242  0EAF               	movlw	low main@motorR
  1638  001244  6E1F               	movwf	turnRight135@mR^0,c
  1639  001246  0E00               	movlw	high main@motorR
  1640  001248  6E20               	movwf	(turnRight135@mR+1)^0,c
  1641  00124A  ECE3  F014         	call	_turnRight135	;wreg free
  1642  00124E  0E09               	movlw	9
  1643  001250  6E5E               	movwf	(??_main+1)^0,c
  1644  001252  0E1E               	movlw	30
  1645  001254  6E5D               	movwf	??_main^0,c
  1646  001256  0EE4               	movlw	228
  1647  001258                     u4267:
  1648  001258  2EE8               	decfsz	wreg,f,c
  1649  00125A  D7FE               	bra	u4267
  1650  00125C  2E5D               	decfsz	??_main^0,f,c
  1651  00125E  D7FC               	bra	u4267
  1652  001260  2E5E               	decfsz	(??_main+1)^0,f,c
  1653  001262  D7FA               	bra	u4267
  1654  001264  D000               	nop2	
  1655  001266                     l4113:
  1656                           
  1657                           ;main.c: 146:         if (detected_colour == 6){ turnLeft135(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1658  001266  0E06               	movlw	6
  1659  001268  0100               	movlb	0	; () banked
  1660  00126A  1990               	xorwf	main@detected_colour& (0+255),w,b
  1661  00126C  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1662  00126E  A4D8               	btfss	status,2,c
  1663  001270  EF3C  F009         	goto	u4091
  1664  001274  EF3E  F009         	goto	u4090
  1665  001278                     u4091:
  1666  001278  EF54  F009         	goto	l4119
  1667  00127C                     u4090:
  1668  00127C                     
  1669                           ; BSR set to: 0
  1670  00127C  0EA6               	movlw	low main@motorL
  1671  00127E  6E1D               	movwf	turnLeft135@mL^0,c
  1672  001280  0E00               	movlw	high main@motorL
  1673  001282  6E1E               	movwf	(turnLeft135@mL+1)^0,c
  1674  001284  0EAF               	movlw	low main@motorR
  1675  001286  6E1F               	movwf	turnLeft135@mR^0,c
  1676  001288  0E00               	movlw	high main@motorR
  1677  00128A  6E20               	movwf	(turnLeft135@mR+1)^0,c
  1678  00128C  EC21  F016         	call	_turnLeft135	;wreg free
  1679  001290  0E09               	movlw	9
  1680  001292  6E5E               	movwf	(??_main+1)^0,c
  1681  001294  0E1E               	movlw	30
  1682  001296  6E5D               	movwf	??_main^0,c
  1683  001298  0EE4               	movlw	228
  1684  00129A                     u4277:
  1685  00129A  2EE8               	decfsz	wreg,f,c
  1686  00129C  D7FE               	bra	u4277
  1687  00129E  2E5D               	decfsz	??_main^0,f,c
  1688  0012A0  D7FC               	bra	u4277
  1689  0012A2  2E5E               	decfsz	(??_main+1)^0,f,c
  1690  0012A4  D7FA               	bra	u4277
  1691  0012A6  D000               	nop2	
  1692  0012A8                     l4119:
  1693                           
  1694                           ;main.c: 147:         if (detected_colour == 7){ White(&motorL,&motorR,movementArray, mo
      +                          vements, timerArray);_delay((unsigned long)((100)*(64000000/4000.0)));}
  1695  0012A8  0E07               	movlw	7
  1696  0012AA  0100               	movlb	0	; () banked
  1697  0012AC  1990               	xorwf	main@detected_colour& (0+255),w,b
  1698  0012AE  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1699  0012B0  A4D8               	btfss	status,2,c
  1700  0012B2  EF5D  F009         	goto	u4101
  1701  0012B6  EF5F  F009         	goto	u4100
  1702  0012BA                     u4101:
  1703  0012BA  EF81  F009         	goto	l4125
  1704  0012BE                     u4100:
  1705  0012BE                     
  1706                           ; BSR set to: 0
  1707  0012BE  0EA6               	movlw	low main@motorL
  1708  0012C0  6E2B               	movwf	White@mL^0,c
  1709  0012C2  0E00               	movlw	high main@motorL
  1710  0012C4  6E2C               	movwf	(White@mL+1)^0,c
  1711  0012C6  0EAF               	movlw	low main@motorR
  1712  0012C8  6E2D               	movwf	White@mR^0,c
  1713  0012CA  0E00               	movlw	high main@motorR
  1714  0012CC  6E2E               	movwf	(White@mR+1)^0,c
  1715  0012CE  0ED2               	movlw	low _movementArray
  1716  0012D0  6E2F               	movwf	White@movementArray^0,c
  1717  0012D2  0E00               	movlw	high _movementArray
  1718  0012D4  6E30               	movwf	(White@movementArray+1)^0,c
  1719  0012D6  C0CC  F031         	movff	_movements,White@movements	;volatile
  1720  0012DA  C0CD  F032         	movff	_movements+1,White@movements+1	;volatile
  1721  0012DE  0ED2               	movlw	low _timerArray
  1722  0012E0  6E33               	movwf	White@timerArray^0,c
  1723  0012E2  0E00               	movlw	high _timerArray
  1724  0012E4  6E34               	movwf	(White@timerArray+1)^0,c
  1725  0012E6  EC30  F00E         	call	_White	;wreg free
  1726  0012EA  0E09               	movlw	9
  1727  0012EC  6E5E               	movwf	(??_main+1)^0,c
  1728  0012EE  0E1E               	movlw	30
  1729  0012F0  6E5D               	movwf	??_main^0,c
  1730  0012F2  0EE4               	movlw	228
  1731  0012F4                     u4287:
  1732  0012F4  2EE8               	decfsz	wreg,f,c
  1733  0012F6  D7FE               	bra	u4287
  1734  0012F8  2E5D               	decfsz	??_main^0,f,c
  1735  0012FA  D7FC               	bra	u4287
  1736  0012FC  2E5E               	decfsz	(??_main+1)^0,f,c
  1737  0012FE  D7FA               	bra	u4287
  1738  001300  D000               	nop2	
  1739  001302                     l4125:
  1740                           
  1741                           ;main.c: 148:         if (detected_colour == 8){ stop(&motorL,&motorR);_delay((unsigned 
      +                          long)((100)*(64000000/4000.0)));}
  1742  001302  0E08               	movlw	8
  1743  001304  0100               	movlb	0	; () banked
  1744  001306  1990               	xorwf	main@detected_colour& (0+255),w,b
  1745  001308  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1746  00130A  A4D8               	btfss	status,2,c
  1747  00130C  EF8A  F009         	goto	u4111
  1748  001310  EF8C  F009         	goto	u4110
  1749  001314                     u4111:
  1750  001314  EFA2  F009         	goto	l4131
  1751  001318                     u4110:
  1752  001318                     
  1753                           ; BSR set to: 0
  1754  001318  0EA6               	movlw	low main@motorL
  1755  00131A  6E19               	movwf	stop@mL^0,c
  1756  00131C  0E00               	movlw	high main@motorL
  1757  00131E  6E1A               	movwf	(stop@mL+1)^0,c
  1758  001320  0EAF               	movlw	low main@motorR
  1759  001322  6E1B               	movwf	stop@mR^0,c
  1760  001324  0E00               	movlw	high main@motorR
  1761  001326  6E1C               	movwf	(stop@mR+1)^0,c
  1762  001328  ECB0  F018         	call	_stop	;wreg free
  1763  00132C  0E09               	movlw	9
  1764  00132E  6E5E               	movwf	(??_main+1)^0,c
  1765  001330  0E1E               	movlw	30
  1766  001332  6E5D               	movwf	??_main^0,c
  1767  001334  0EE4               	movlw	228
  1768  001336                     u4297:
  1769  001336  2EE8               	decfsz	wreg,f,c
  1770  001338  D7FE               	bra	u4297
  1771  00133A  2E5D               	decfsz	??_main^0,f,c
  1772  00133C  D7FC               	bra	u4297
  1773  00133E  2E5E               	decfsz	(??_main+1)^0,f,c
  1774  001340  D7FA               	bra	u4297
  1775  001342  D000               	nop2	
  1776  001344                     l4131:
  1777                           
  1778                           ;main.c: 149:         if (detected_colour == 9){ forward(&motorL,&motorR);}
  1779  001344  0E09               	movlw	9
  1780  001346  0100               	movlb	0	; () banked
  1781  001348  1990               	xorwf	main@detected_colour& (0+255),w,b
  1782  00134A  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1783  00134C  A4D8               	btfss	status,2,c
  1784  00134E  EFAB  F009         	goto	u4121
  1785  001352  EFAD  F009         	goto	u4120
  1786  001356                     u4121:
  1787  001356  EF98  F007         	goto	l4035
  1788  00135A                     u4120:
  1789  00135A                     
  1790                           ; BSR set to: 0
  1791  00135A  0EA6               	movlw	low main@motorL
  1792  00135C  6E19               	movwf	forward@mL^0,c
  1793  00135E  0E00               	movlw	high main@motorL
  1794  001360  6E1A               	movwf	(forward@mL+1)^0,c
  1795  001362  0EAF               	movlw	low main@motorR
  1796  001364  6E1B               	movwf	forward@mR^0,c
  1797  001366  0E00               	movlw	high main@motorR
  1798  001368  6E1C               	movwf	(forward@mR+1)^0,c
  1799  00136A  ECCE  F019         	call	_forward	;wreg free
  1800  00136E  EF98  F007         	goto	l4035
  1801  001372  EF14  F000         	goto	start
  1802  001376                     __end_of_main:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _updateMovementCount *****************
  1806 ;; Defined at:
  1807 ;;		line 201 in file "color.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  movementCode    2    0[COMRAM] int 
  1810 ;;  movementArra    2    2[COMRAM] PTR int 
  1811 ;;		 -> movementArray(0), 
  1812 ;;  movements       2    4[COMRAM] unsigned int 
  1813 ;;  timerArray      2    6[COMRAM] PTR int 
  1814 ;;		 -> timerArray(0), 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  tempTimerVal    2    8[COMRAM] int 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1826 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;Total ram usage:       10 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text1
  1841  00352E                     __ptext1:
  1842                           	callstack 0
  1843  00352E                     _updateMovementCount:
  1844                           	callstack 29
  1845  00352E                     
  1846                           ;color.c: 201: void updateMovementCount(int movementCode,int movementArray[], unsigned i
      +                          nt movements, int timerArray[]);color.c: 202: {;color.c: 203:     int tempTimerVal = TMR
      +                          0L;
  1847  00352E  CFD3 F009          	movff	4051,updateMovementCount@tempTimerVal	;volatile
  1848  003532  6A0A               	clrf	(updateMovementCount@tempTimerVal+1)^0,c
  1849  003534                     
  1850                           ;color.c: 204:     tempTimerVal += (TMR0H << 8);
  1851  003534  50D4               	movf	212,w,c	;volatile
  1852  003536  260A               	addwf	(updateMovementCount@tempTimerVal+1)^0,f,c
  1853  003538                     
  1854                           ;color.c: 205:     timerArray[movements] = tempTimerVal;
  1855  003538  90D8               	bcf	status,0,c
  1856  00353A  3405               	rlcf	updateMovementCount@movements^0,w,c
  1857  00353C  6ED9               	movwf	fsr2l,c
  1858  00353E  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1859  003540  6EDA               	movwf	fsr2h,c
  1860  003542  5007               	movf	updateMovementCount@timerArray^0,w,c
  1861  003544  26D9               	addwf	fsr2l,f,c
  1862  003546  5008               	movf	(updateMovementCount@timerArray+1)^0,w,c
  1863  003548  22DA               	addwfc	fsr2h,f,c
  1864  00354A  C009  FFDE         	movff	updateMovementCount@tempTimerVal,postinc2
  1865  00354E  C00A  FFDD         	movff	updateMovementCount@tempTimerVal+1,postdec2
  1866  003552                     
  1867                           ;color.c: 206:     movementArray[movements] = movementCode;
  1868  003552  90D8               	bcf	status,0,c
  1869  003554  3405               	rlcf	updateMovementCount@movements^0,w,c
  1870  003556  6ED9               	movwf	fsr2l,c
  1871  003558  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1872  00355A  6EDA               	movwf	fsr2h,c
  1873  00355C  5003               	movf	updateMovementCount@movementArray^0,w,c
  1874  00355E  26D9               	addwf	fsr2l,f,c
  1875  003560  5004               	movf	(updateMovementCount@movementArray+1)^0,w,c
  1876  003562  22DA               	addwfc	fsr2h,f,c
  1877  003564  C001  FFDE         	movff	updateMovementCount@movementCode,postinc2
  1878  003568  C002  FFDD         	movff	updateMovementCount@movementCode+1,postdec2
  1879  00356C                     
  1880                           ;color.c: 207:     movements++;
  1881  00356C  4A05               	infsnz	updateMovementCount@movements^0,f,c
  1882  00356E  2A06               	incf	(updateMovementCount@movements+1)^0,f,c
  1883  003570                     
  1884                           ;color.c: 208:     TMR0H = 0;
  1885  003570  0E00               	movlw	0
  1886  003572  6ED4               	movwf	212,c	;volatile
  1887  003574                     
  1888                           ;color.c: 209:     TMR0L = 0;
  1889  003574  0E00               	movlw	0
  1890  003576  6ED3               	movwf	211,c	;volatile
  1891  003578  0012               	return		;funcret
  1892  00357A                     __end_of_updateMovementCount:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _read_colours *****************
  1896 ;; Defined at:
  1897 ;;		line 91 in file "color.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  m               2   11[COMRAM] PTR struct RGB_val
  1900 ;;		 -> main@test(20), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;Total ram usage:        2 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 4
  1919 ;; This function calls:
  1920 ;;		_color_read_Blue
  1921 ;;		_color_read_Clear
  1922 ;;		_color_read_Green
  1923 ;;		_color_read_Red
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text2
  1930  0032E8                     __ptext2:
  1931                           	callstack 0
  1932  0032E8                     _read_colours:
  1933                           	callstack 26
  1934  0032E8                     
  1935                           ;color.c: 92:     (m->C) = color_read_Clear();
  1936  0032E8  ECF7  F019         	call	_color_read_Clear	;wreg free
  1937  0032EC  EE20 F00C          	lfsr	2,12
  1938  0032F0  500C               	movf	read_colours@m^0,w,c
  1939  0032F2  26D9               	addwf	fsr2l,f,c
  1940  0032F4  500D               	movf	(read_colours@m+1)^0,w,c
  1941  0032F6  22DA               	addwfc	fsr2h,f,c
  1942  0032F8  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1943  0032FC  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1944                           
  1945                           ;color.c: 93:     (m->R) = color_read_Red();
  1946  003300  EC1F  F01A         	call	_color_read_Red	;wreg free
  1947  003304  EE20 F00E          	lfsr	2,14
  1948  003308  500C               	movf	read_colours@m^0,w,c
  1949  00330A  26D9               	addwf	fsr2l,f,c
  1950  00330C  500D               	movf	(read_colours@m+1)^0,w,c
  1951  00330E  22DA               	addwfc	fsr2h,f,c
  1952  003310  C005  FFDE         	movff	?_color_read_Red,postinc2
  1953  003314  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1954                           
  1955                           ;color.c: 94:     (m->G) = color_read_Green();
  1956  003318  EC47  F01A         	call	_color_read_Green	;wreg free
  1957  00331C  EE20 F010          	lfsr	2,16
  1958  003320  500C               	movf	read_colours@m^0,w,c
  1959  003322  26D9               	addwf	fsr2l,f,c
  1960  003324  500D               	movf	(read_colours@m+1)^0,w,c
  1961  003326  22DA               	addwfc	fsr2h,f,c
  1962  003328  C005  FFDE         	movff	?_color_read_Green,postinc2
  1963  00332C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1964                           
  1965                           ;color.c: 95:     (m->B) = color_read_Blue();
  1966  003330  EC6F  F01A         	call	_color_read_Blue	;wreg free
  1967  003334  EE20 F012          	lfsr	2,18
  1968  003338  500C               	movf	read_colours@m^0,w,c
  1969  00333A  26D9               	addwf	fsr2l,f,c
  1970  00333C  500D               	movf	(read_colours@m+1)^0,w,c
  1971  00333E  22DA               	addwfc	fsr2h,f,c
  1972  003340  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1973  003344  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1974  003348  0012               	return		;funcret
  1975  00334A                     __end_of_read_colours:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _color_read_Clear *****************
  1979 ;; Defined at:
  1980 ;;		line 37 in file "color.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  tmp             2    9[COMRAM] unsigned int 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2    4[COMRAM] unsigned int 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;Total ram usage:        7 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 3
  2001 ;; This function calls:
  2002 ;;		_I2C_2_Master_Read
  2003 ;;		_I2C_2_Master_RepStart
  2004 ;;		_I2C_2_Master_Start
  2005 ;;		_I2C_2_Master_Stop
  2006 ;;		_I2C_2_Master_Write
  2007 ;; This function is called by:
  2008 ;;		_read_colours
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text3
  2013  0033EE                     __ptext3:
  2014                           	callstack 0
  2015  0033EE                     _color_read_Clear:
  2016                           	callstack 26
  2017  0033EE                     
  2018                           ;color.c: 39:  unsigned int tmp;;color.c: 40:     I2C_2_Master_Start();
  2019  0033EE  ECED  F01B         	call	_I2C_2_Master_Start	;wreg free
  2020                           
  2021                           ;color.c: 41:     I2C_2_Master_Write(0x52 | 0x00);
  2022  0033F2  0E52               	movlw	82
  2023  0033F4  ECDC  F01B         	call	_I2C_2_Master_Write
  2024                           
  2025                           ;color.c: 42:  I2C_2_Master_Write(0xA0 | 0x14);
  2026  0033F8  0EB4               	movlw	180
  2027  0033FA  ECDC  F01B         	call	_I2C_2_Master_Write
  2028                           
  2029                           ;color.c: 43:  I2C_2_Master_RepStart();
  2030  0033FE  ECF2  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2031                           
  2032                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x01);
  2033  003402  0E53               	movlw	83
  2034  003404  ECDC  F01B         	call	_I2C_2_Master_Write
  2035                           
  2036                           ;color.c: 45:  tmp=I2C_2_Master_Read(1);
  2037  003408  0E01               	movlw	1
  2038  00340A  EC26  F01B         	call	_I2C_2_Master_Read
  2039  00340E  6E07               	movwf	??_color_read_Clear^0,c
  2040  003410  5007               	movf	??_color_read_Clear^0,w,c
  2041  003412  6E0A               	movwf	color_read_Clear@tmp^0,c
  2042  003414  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2043                           
  2044                           ;color.c: 46:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2045  003416  0E00               	movlw	0
  2046  003418  EC26  F01B         	call	_I2C_2_Master_Read
  2047  00341C  6E07               	movwf	??_color_read_Clear^0,c
  2048  00341E  5007               	movf	??_color_read_Clear^0,w,c
  2049  003420  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2050  003422  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2051  003424  500A               	movf	color_read_Clear@tmp^0,w,c
  2052  003426  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2053  003428  6E0A               	movwf	color_read_Clear@tmp^0,c
  2054  00342A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2055  00342C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2056  00342E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2057                           
  2058                           ;color.c: 47:     I2C_2_Master_Stop();
  2059  003430  ECE8  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2060  003434                     
  2061                           ;color.c: 48:     return tmp;
  2062  003434  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2063  003438  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2064  00343C  0012               	return		;funcret
  2065  00343E                     __end_of_color_read_Clear:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _initUSART4 *****************
  2069 ;; Defined at:
  2070 ;;		line 4 in file "serial.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text4
  2099  00375C                     __ptext4:
  2100                           	callstack 0
  2101  00375C                     _initUSART4:
  2102                           	callstack 29
  2103  00375C                     
  2104                           ;serial.c: 8:     RC0PPS = 0x12;
  2105  00375C  0E12               	movlw	18
  2106  00375E  010E               	movlb	14	; () banked
  2107  003760  6F62               	movwf	98,b	;volatile
  2108                           
  2109                           ;serial.c: 9:     RX4PPS = 0x11;
  2110  003762  0E11               	movlw	17
  2111  003764  6F15               	movwf	21,b	;volatile
  2112  003766                     
  2113                           ; BSR set to: 14
  2114                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  2115  003766  8283               	bsf	131,1,c	;volatile
  2116  003768                     
  2117                           ; BSR set to: 14
  2118                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2119  003768  97E9               	bcf	233,3,b	;volatile
  2120  00376A                     
  2121                           ; BSR set to: 14
  2122                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2123  00376A  95E8               	bcf	232,2,b	;volatile
  2124                           
  2125                           ;serial.c: 14:     SP4BRGL = 51;
  2126  00376C  0E33               	movlw	51
  2127  00376E  6FE5               	movwf	229,b	;volatile
  2128                           
  2129                           ;serial.c: 15:     SP4BRGH = 0;
  2130  003770  0E00               	movlw	0
  2131  003772  6FE6               	movwf	230,b	;volatile
  2132  003774                     
  2133                           ; BSR set to: 14
  2134                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2135  003774  89E7               	bsf	231,4,b	;volatile
  2136  003776                     
  2137                           ; BSR set to: 14
  2138                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2139  003776  8BE8               	bsf	232,5,b	;volatile
  2140  003778                     
  2141                           ; BSR set to: 14
  2142                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2143  003778  8FE7               	bsf	231,7,b	;volatile
  2144  00377A                     
  2145                           ; BSR set to: 14
  2146  00377A  0012               	return		;funcret
  2147  00377C                     __end_of_initUSART4:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _initDCmotorsPWM *****************
  2151 ;; Defined at:
  2152 ;;		line 5 in file "dc_motor.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  PWMperiod       2    0[COMRAM] int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text5
  2181  00360A                     __ptext5:
  2182                           	callstack 0
  2183  00360A                     _initDCmotorsPWM:
  2184                           	callstack 29
  2185  00360A                     
  2186                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  2187  00360A  9485               	bcf	133,2,c	;volatile
  2188                           
  2189                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  2190  00360C  9E83               	bcf	131,7,c	;volatile
  2191                           
  2192                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  2193  00360E  9885               	bcf	133,4,c	;volatile
  2194                           
  2195                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  2196  003610  9C87               	bcf	135,6,c	;volatile
  2197                           
  2198                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  2199  003612  947D               	bcf	125,2,c	;volatile
  2200                           
  2201                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  2202  003614  9E7B               	bcf	123,7,c	;volatile
  2203                           
  2204                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  2205  003616  987D               	bcf	125,4,c	;volatile
  2206                           
  2207                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
  2208  003618  9C7F               	bcf	127,6,c	;volatile
  2209  00361A                     
  2210                           ;dc_motor.c: 17:     T2CONbits.CKPS= 0b100;
  2211  00361A  50BD               	movf	189,w,c	;volatile
  2212  00361C  0B8F               	andlw	-113
  2213  00361E  0940               	iorlw	64
  2214  003620  6EBD               	movwf	189,c	;volatile
  2215                           
  2216                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2217  003622  0EE0               	movlw	-32
  2218  003624  16BE               	andwf	190,f,c	;volatile
  2219                           
  2220                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2221  003626  50BF               	movf	191,w,c	;volatile
  2222  003628  0BF0               	andlw	-16
  2223  00362A  0901               	iorlw	1
  2224  00362C  6EBF               	movwf	191,c	;volatile
  2225                           
  2226                           ;dc_motor.c: 22:     T2PR= 99;
  2227  00362E  0E63               	movlw	99
  2228  003630  6EBC               	movwf	188,c	;volatile
  2229  003632                     
  2230                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  2231  003632  8EBD               	bsf	189,7,c	;volatile
  2232                           
  2233                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  2234  003634  0E0A               	movlw	10
  2235  003636  010E               	movlb	14	; () banked
  2236  003638  6F74               	movwf	116,b	;volatile
  2237                           
  2238                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  2239  00363A  0E0B               	movlw	11
  2240  00363C  6F69               	movwf	105,b	;volatile
  2241                           
  2242                           ;dc_motor.c: 28:     PWM6DCH=0;
  2243  00363E  0E00               	movlw	0
  2244  003640  6EA3               	movwf	163,c	;volatile
  2245                           
  2246                           ;dc_motor.c: 29:     PWM7DCH=0;
  2247  003642  0E00               	movlw	0
  2248  003644  6EA0               	movwf	160,c	;volatile
  2249  003646                     
  2250                           ; BSR set to: 14
  2251                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  2252  003646  8EA4               	bsf	164,7,c	;volatile
  2253  003648                     
  2254                           ; BSR set to: 14
  2255                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  2256  003648  8EA1               	bsf	161,7,c	;volatile
  2257  00364A                     
  2258                           ; BSR set to: 14
  2259  00364A  0012               	return		;funcret
  2260  00364C                     __end_of_initDCmotorsPWM:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _determine_color_new *****************
  2264 ;; Defined at:
  2265 ;;		line 115 in file "color.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  m               2   90[COMRAM] PTR struct RGB_val
  2268 ;;		 -> main@test(20), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  RelB            4   30[BANK0 ] float 
  2271 ;;  RelG            4   26[BANK0 ] float 
  2272 ;;  RelR            4   22[BANK0 ] float 
  2273 ;;  lumin           2   20[BANK0 ] unsigned int 
  2274 ;;  out             2   18[BANK0 ] unsigned int 
  2275 ;;  BlueRatio       2   16[BANK0 ] unsigned int 
  2276 ;;  GreenRatio      2   14[BANK0 ] unsigned int 
  2277 ;;  RedRatio        2   12[BANK0 ] unsigned int 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2   90[COMRAM] unsigned int 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;Total ram usage:       36 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 3
  2294 ;; This function calls:
  2295 ;;		___fladd
  2296 ;;		___fldiv
  2297 ;;		___flmul
  2298 ;;		___fltol
  2299 ;;		___xxtofl
  2300 ;;		_isbtw
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text6
  2307  00002C                     __ptext6:
  2308                           	callstack 0
  2309  00002C                     _determine_color_new:
  2310                           	callstack 27
  2311  00002C                     
  2312                           ;color.c: 116:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 117:     float
      +                           RelR, RelG, RelB;;color.c: 118:     unsigned int out = 9;
  2313  00002C  0E00               	movlw	0
  2314  00002E  0100               	movlb	0	; () banked
  2315  000030  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2316  000032  0E09               	movlw	9
  2317  000034  6F72               	movwf	determine_color_new@out& (0+255),b
  2318  000036                     
  2319                           ; BSR set to: 0
  2320                           ;color.c: 120:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2321  000036  0E59               	movlw	89
  2322  000038  6E2C               	movwf	___flmul@a^0,c
  2323  00003A  0E17               	movlw	23
  2324  00003C  6E2D               	movwf	(___flmul@a+1)^0,c
  2325  00003E  0E37               	movlw	55
  2326  000040  6E2E               	movwf	(___flmul@a+2)^0,c
  2327  000042  0E3F               	movlw	63
  2328  000044  6E2F               	movwf	(___flmul@a+3)^0,c
  2329  000046  EE20 F010          	lfsr	2,16
  2330  00004A  505B               	movf	determine_color_new@m^0,w,c
  2331  00004C  26D9               	addwf	fsr2l,f,c
  2332  00004E  505C               	movf	(determine_color_new@m+1)^0,w,c
  2333  000050  22DA               	addwfc	fsr2h,f,c
  2334  000052  CFDE F060          	movff	postinc2,??_determine_color_new
  2335  000056  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2336  00005A  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2337  00005E  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2338  000062  6A03               	clrf	(___xxtofl@val+2)^0,c
  2339  000064  6A04               	clrf	(___xxtofl@val+3)^0,c
  2340  000066  0E00               	movlw	0
  2341  000068  ECCA  F012         	call	___xxtofl
  2342  00006C  C001  F028         	movff	?___xxtofl,___flmul@b
  2343  000070  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2344  000074  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2345  000078  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2346  00007C  EC1B  F00C         	call	___flmul	;wreg free
  2347  000080  C028  F045         	movff	?___flmul,___fladd@a
  2348  000084  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2349  000088  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2350  00008C  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2351  000090  0ED0               	movlw	208
  2352  000092  6E2C               	movwf	___flmul@a^0,c
  2353  000094  0EB3               	movlw	179
  2354  000096  6E2D               	movwf	(___flmul@a+1)^0,c
  2355  000098  0E59               	movlw	89
  2356  00009A  6E2E               	movwf	(___flmul@a+2)^0,c
  2357  00009C  0E3E               	movlw	62
  2358  00009E  6E2F               	movwf	(___flmul@a+3)^0,c
  2359  0000A0  EE20 F00E          	lfsr	2,14
  2360  0000A4  505B               	movf	determine_color_new@m^0,w,c
  2361  0000A6  26D9               	addwf	fsr2l,f,c
  2362  0000A8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2363  0000AA  22DA               	addwfc	fsr2h,f,c
  2364  0000AC  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2365  0000B0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2366  0000B4  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2367  0000B8  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2368  0000BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2369  0000BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2370  0000C0  0E00               	movlw	0
  2371  0000C2  ECCA  F012         	call	___xxtofl
  2372  0000C6  C001  F028         	movff	?___xxtofl,___flmul@b
  2373  0000CA  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2374  0000CE  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2375  0000D2  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2376  0000D6  EC1B  F00C         	call	___flmul	;wreg free
  2377  0000DA  C028  F041         	movff	?___flmul,___fladd@b
  2378  0000DE  C029  F042         	movff	?___flmul+1,___fladd@b+1
  2379  0000E2  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  2380  0000E6  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  2381  0000EA  ECBB  F009         	call	___fladd	;wreg free
  2382  0000EE  C041  F068         	movff	?___fladd,_determine_color_new$2631
  2383  0000F2  C042  F069         	movff	?___fladd+1,_determine_color_new$2631+1
  2384  0000F6  C043  F06A         	movff	?___fladd+2,_determine_color_new$2631+2
  2385  0000FA  C044  F06B         	movff	?___fladd+3,_determine_color_new$2631+3
  2386  0000FE                     
  2387                           ;color.c: 120:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2388  0000FE  0E98               	movlw	152
  2389  000100  6E2C               	movwf	___flmul@a^0,c
  2390  000102  0EDD               	movlw	221
  2391  000104  6E2D               	movwf	(___flmul@a+1)^0,c
  2392  000106  0E93               	movlw	147
  2393  000108  6E2E               	movwf	(___flmul@a+2)^0,c
  2394  00010A  0E3D               	movlw	61
  2395  00010C  6E2F               	movwf	(___flmul@a+3)^0,c
  2396  00010E  EE20 F012          	lfsr	2,18
  2397  000112  505B               	movf	determine_color_new@m^0,w,c
  2398  000114  26D9               	addwf	fsr2l,f,c
  2399  000116  505C               	movf	(determine_color_new@m+1)^0,w,c
  2400  000118  22DA               	addwfc	fsr2h,f,c
  2401  00011A  CFDE F060          	movff	postinc2,??_determine_color_new
  2402  00011E  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2403  000122  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2404  000126  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2405  00012A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2406  00012C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2407  00012E  0E00               	movlw	0
  2408  000130  ECCA  F012         	call	___xxtofl
  2409  000134  C001  F028         	movff	?___xxtofl,___flmul@b
  2410  000138  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2411  00013C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2412  000140  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2413  000144  EC1B  F00C         	call	___flmul	;wreg free
  2414  000148  C028  F045         	movff	?___flmul,___fladd@a
  2415  00014C  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2416  000150  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2417  000154  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2418  000158  C068  F041         	movff	_determine_color_new$2631,___fladd@b
  2419  00015C  C069  F042         	movff	_determine_color_new$2631+1,___fladd@b+1
  2420  000160  C06A  F043         	movff	_determine_color_new$2631+2,___fladd@b+2
  2421  000164  C06B  F044         	movff	_determine_color_new$2631+3,___fladd@b+3
  2422  000168  ECBB  F009         	call	___fladd	;wreg free
  2423  00016C  C041  F051         	movff	?___fladd,___fltol@f1
  2424  000170  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2425  000174  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2426  000178  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2427  00017C  ECBF  F016         	call	___fltol	;wreg free
  2428  000180  C051  F074         	movff	?___fltol,determine_color_new@lumin
  2429  000184  C052  F075         	movff	?___fltol+1,determine_color_new@lumin+1
  2430  000188                     
  2431                           ;color.c: 123:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  2432  000188  0E00               	movlw	0
  2433  00018A  6E2C               	movwf	___flmul@a^0,c
  2434  00018C  0E40               	movlw	64
  2435  00018E  6E2D               	movwf	(___flmul@a+1)^0,c
  2436  000190  0E1C               	movlw	28
  2437  000192  6E2E               	movwf	(___flmul@a+2)^0,c
  2438  000194  0E46               	movlw	70
  2439  000196  6E2F               	movwf	(___flmul@a+3)^0,c
  2440  000198  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2441  00019C  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2442  0001A0  CFDE F060          	movff	postinc2,??_determine_color_new
  2443  0001A4  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2444  0001A8  EE20 F006          	lfsr	2,6
  2445  0001AC  505B               	movf	determine_color_new@m^0,w,c
  2446  0001AE  26D9               	addwf	fsr2l,f,c
  2447  0001B0  505C               	movf	(determine_color_new@m+1)^0,w,c
  2448  0001B2  22DA               	addwfc	fsr2h,f,c
  2449  0001B4  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2450  0001B8  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2451  0001BC  0100               	movlb	0	; () banked
  2452  0001BE  5160               	movf	??_determine_color_new& (0+255),w,b
  2453  0001C0  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2454  0001C2  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2455  0001C4  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2456  0001C6  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2457  0001CA  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2458  0001CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2459  0001D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2460  0001D2  0E00               	movlw	0
  2461  0001D4  ECCA  F012         	call	___xxtofl
  2462  0001D8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2463  0001DC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2464  0001E0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2465  0001E4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2466  0001E8  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2467  0001EC  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2468  0001F0  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2469  0001F4  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2470  0001F8  EE20 F00E          	lfsr	2,14
  2471  0001FC  505B               	movf	determine_color_new@m^0,w,c
  2472  0001FE  26D9               	addwf	fsr2l,f,c
  2473  000200  505C               	movf	(determine_color_new@m+1)^0,w,c
  2474  000202  22DA               	addwfc	fsr2h,f,c
  2475  000204  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2476  000208  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2477  00020C  0100               	movlb	0	; () banked
  2478  00020E  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2479  000210  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2480  000212  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2481  000214  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2482  000216  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2483  00021A  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2484  00021E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2485  000220  6A04               	clrf	(___xxtofl@val+3)^0,c
  2486  000222  0E00               	movlw	0
  2487  000224  ECCA  F012         	call	___xxtofl
  2488  000228  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2489  00022C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2490  000230  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2491  000234  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2492  000238  EC13  F010         	call	___fldiv	;wreg free
  2493  00023C  C00F  F028         	movff	?___fldiv,___flmul@b
  2494  000240  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2495  000244  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2496  000248  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2497  00024C  EC1B  F00C         	call	___flmul	;wreg free
  2498  000250  C028  F051         	movff	?___flmul,___fltol@f1
  2499  000254  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2500  000258  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2501  00025C  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2502  000260  ECBF  F016         	call	___fltol	;wreg free
  2503  000264  C051  F06C         	movff	?___fltol,determine_color_new@RedRatio
  2504  000268  C052  F06D         	movff	?___fltol+1,determine_color_new@RedRatio+1
  2505  00026C                     
  2506                           ;color.c: 124:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  2507  00026C  0E00               	movlw	0
  2508  00026E  6E2C               	movwf	___flmul@a^0,c
  2509  000270  0E40               	movlw	64
  2510  000272  6E2D               	movwf	(___flmul@a+1)^0,c
  2511  000274  0E1C               	movlw	28
  2512  000276  6E2E               	movwf	(___flmul@a+2)^0,c
  2513  000278  0E46               	movlw	70
  2514  00027A  6E2F               	movwf	(___flmul@a+3)^0,c
  2515  00027C  EE20 F002          	lfsr	2,2
  2516  000280  505B               	movf	determine_color_new@m^0,w,c
  2517  000282  26D9               	addwf	fsr2l,f,c
  2518  000284  505C               	movf	(determine_color_new@m+1)^0,w,c
  2519  000286  22DA               	addwfc	fsr2h,f,c
  2520  000288  CFDE F060          	movff	postinc2,??_determine_color_new
  2521  00028C  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2522  000290  EE20 F008          	lfsr	2,8
  2523  000294  505B               	movf	determine_color_new@m^0,w,c
  2524  000296  26D9               	addwf	fsr2l,f,c
  2525  000298  505C               	movf	(determine_color_new@m+1)^0,w,c
  2526  00029A  22DA               	addwfc	fsr2h,f,c
  2527  00029C  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2528  0002A0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2529  0002A4  0100               	movlb	0	; () banked
  2530  0002A6  5160               	movf	??_determine_color_new& (0+255),w,b
  2531  0002A8  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2532  0002AA  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2533  0002AC  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2534  0002AE  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2535  0002B2  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2536  0002B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2537  0002B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2538  0002BA  0E00               	movlw	0
  2539  0002BC  ECCA  F012         	call	___xxtofl
  2540  0002C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2541  0002C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2542  0002C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2543  0002CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2544  0002D0  EE20 F002          	lfsr	2,2
  2545  0002D4  505B               	movf	determine_color_new@m^0,w,c
  2546  0002D6  26D9               	addwf	fsr2l,f,c
  2547  0002D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2548  0002DA  22DA               	addwfc	fsr2h,f,c
  2549  0002DC  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2550  0002E0  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2551  0002E4  EE20 F010          	lfsr	2,16
  2552  0002E8  505B               	movf	determine_color_new@m^0,w,c
  2553  0002EA  26D9               	addwf	fsr2l,f,c
  2554  0002EC  505C               	movf	(determine_color_new@m+1)^0,w,c
  2555  0002EE  22DA               	addwfc	fsr2h,f,c
  2556  0002F0  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2557  0002F4  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2558  0002F8  0100               	movlb	0	; () banked
  2559  0002FA  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2560  0002FC  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2561  0002FE  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2562  000300  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2563  000302  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2564  000306  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2565  00030A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2566  00030C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2567  00030E  0E00               	movlw	0
  2568  000310  ECCA  F012         	call	___xxtofl
  2569  000314  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2570  000318  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2571  00031C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2572  000320  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2573  000324  EC13  F010         	call	___fldiv	;wreg free
  2574  000328  C00F  F028         	movff	?___fldiv,___flmul@b
  2575  00032C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2576  000330  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2577  000334  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2578  000338  EC1B  F00C         	call	___flmul	;wreg free
  2579  00033C  C028  F051         	movff	?___flmul,___fltol@f1
  2580  000340  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2581  000344  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2582  000348  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2583  00034C  ECBF  F016         	call	___fltol	;wreg free
  2584  000350  C051  F06E         	movff	?___fltol,determine_color_new@GreenRatio
  2585  000354  C052  F06F         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  2586  000358                     
  2587                           ;color.c: 125:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  2588  000358  0E00               	movlw	0
  2589  00035A  6E2C               	movwf	___flmul@a^0,c
  2590  00035C  0E40               	movlw	64
  2591  00035E  6E2D               	movwf	(___flmul@a+1)^0,c
  2592  000360  0E1C               	movlw	28
  2593  000362  6E2E               	movwf	(___flmul@a+2)^0,c
  2594  000364  0E46               	movlw	70
  2595  000366  6E2F               	movwf	(___flmul@a+3)^0,c
  2596  000368  EE20 F004          	lfsr	2,4
  2597  00036C  505B               	movf	determine_color_new@m^0,w,c
  2598  00036E  26D9               	addwf	fsr2l,f,c
  2599  000370  505C               	movf	(determine_color_new@m+1)^0,w,c
  2600  000372  22DA               	addwfc	fsr2h,f,c
  2601  000374  CFDE F060          	movff	postinc2,??_determine_color_new
  2602  000378  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2603  00037C  EE20 F00A          	lfsr	2,10
  2604  000380  505B               	movf	determine_color_new@m^0,w,c
  2605  000382  26D9               	addwf	fsr2l,f,c
  2606  000384  505C               	movf	(determine_color_new@m+1)^0,w,c
  2607  000386  22DA               	addwfc	fsr2h,f,c
  2608  000388  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2609  00038C  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2610  000390  0100               	movlb	0	; () banked
  2611  000392  5160               	movf	??_determine_color_new& (0+255),w,b
  2612  000394  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2613  000396  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2614  000398  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2615  00039A  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2616  00039E  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2617  0003A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2618  0003A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2619  0003A6  0E00               	movlw	0
  2620  0003A8  ECCA  F012         	call	___xxtofl
  2621  0003AC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2622  0003B0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2623  0003B4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2624  0003B8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2625  0003BC  EE20 F004          	lfsr	2,4
  2626  0003C0  505B               	movf	determine_color_new@m^0,w,c
  2627  0003C2  26D9               	addwf	fsr2l,f,c
  2628  0003C4  505C               	movf	(determine_color_new@m+1)^0,w,c
  2629  0003C6  22DA               	addwfc	fsr2h,f,c
  2630  0003C8  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2631  0003CC  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2632  0003D0  EE20 F012          	lfsr	2,18
  2633  0003D4  505B               	movf	determine_color_new@m^0,w,c
  2634  0003D6  26D9               	addwf	fsr2l,f,c
  2635  0003D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2636  0003DA  22DA               	addwfc	fsr2h,f,c
  2637  0003DC  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2638  0003E0  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2639  0003E4  0100               	movlb	0	; () banked
  2640  0003E6  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2641  0003E8  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2642  0003EA  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2643  0003EC  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2644  0003EE  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2645  0003F2  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2646  0003F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2647  0003F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2648  0003FA  0E00               	movlw	0
  2649  0003FC  ECCA  F012         	call	___xxtofl
  2650  000400  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2651  000404  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2652  000408  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2653  00040C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2654  000410  EC13  F010         	call	___fldiv	;wreg free
  2655  000414  C00F  F028         	movff	?___fldiv,___flmul@b
  2656  000418  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2657  00041C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2658  000420  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2659  000424  EC1B  F00C         	call	___flmul	;wreg free
  2660  000428  C028  F051         	movff	?___flmul,___fltol@f1
  2661  00042C  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2662  000430  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2663  000434  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2664  000438  ECBF  F016         	call	___fltol	;wreg free
  2665  00043C  C051  F070         	movff	?___fltol,determine_color_new@BlueRatio
  2666  000440  C052  F071         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  2667  000444                     
  2668                           ;color.c: 127:     RelR = (float)RedRatio / (float)GreenRatio;
  2669  000444  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  2670  000448  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  2671  00044C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2672  00044E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2673  000450  0E00               	movlw	0
  2674  000452  ECCA  F012         	call	___xxtofl
  2675  000456  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2676  00045A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2677  00045E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2678  000462  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2679  000466  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  2680  00046A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  2681  00046E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2682  000470  6A04               	clrf	(___xxtofl@val+3)^0,c
  2683  000472  0E00               	movlw	0
  2684  000474  ECCA  F012         	call	___xxtofl
  2685  000478  C001  F013         	movff	?___xxtofl,___fldiv@a
  2686  00047C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2687  000480  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2688  000484  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2689  000488  EC13  F010         	call	___fldiv	;wreg free
  2690  00048C  C00F  F076         	movff	?___fldiv,determine_color_new@RelR
  2691  000490  C010  F077         	movff	?___fldiv+1,determine_color_new@RelR+1
  2692  000494  C011  F078         	movff	?___fldiv+2,determine_color_new@RelR+2
  2693  000498  C012  F079         	movff	?___fldiv+3,determine_color_new@RelR+3
  2694  00049C                     
  2695                           ;color.c: 128:     RelG = (float)RedRatio / (float)BlueRatio;
  2696  00049C  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  2697  0004A0  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  2698  0004A4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2699  0004A6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2700  0004A8  0E00               	movlw	0
  2701  0004AA  ECCA  F012         	call	___xxtofl
  2702  0004AE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2703  0004B2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2704  0004B6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2705  0004BA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2706  0004BE  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  2707  0004C2  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  2708  0004C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2709  0004C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2710  0004CA  0E00               	movlw	0
  2711  0004CC  ECCA  F012         	call	___xxtofl
  2712  0004D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2713  0004D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2714  0004D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2715  0004DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2716  0004E0  EC13  F010         	call	___fldiv	;wreg free
  2717  0004E4  C00F  F07A         	movff	?___fldiv,determine_color_new@RelG
  2718  0004E8  C010  F07B         	movff	?___fldiv+1,determine_color_new@RelG+1
  2719  0004EC  C011  F07C         	movff	?___fldiv+2,determine_color_new@RelG+2
  2720  0004F0  C012  F07D         	movff	?___fldiv+3,determine_color_new@RelG+3
  2721  0004F4                     
  2722                           ;color.c: 129:     RelB = (float)BlueRatio / (float)GreenRatio;
  2723  0004F4  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  2724  0004F8  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  2725  0004FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2726  0004FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2727  000500  0E00               	movlw	0
  2728  000502  ECCA  F012         	call	___xxtofl
  2729  000506  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2730  00050A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2731  00050E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2732  000512  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2733  000516  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  2734  00051A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  2735  00051E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2736  000520  6A04               	clrf	(___xxtofl@val+3)^0,c
  2737  000522  0E00               	movlw	0
  2738  000524  ECCA  F012         	call	___xxtofl
  2739  000528  C001  F013         	movff	?___xxtofl,___fldiv@a
  2740  00052C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2741  000530  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2742  000534  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2743  000538  EC13  F010         	call	___fldiv	;wreg free
  2744  00053C  C00F  F07E         	movff	?___fldiv,determine_color_new@RelB
  2745  000540  C010  F07F         	movff	?___fldiv+1,determine_color_new@RelB+1
  2746  000544  C011  F080         	movff	?___fldiv+2,determine_color_new@RelB+2
  2747  000548  C012  F081         	movff	?___fldiv+3,determine_color_new@RelB+3
  2748  00054C                     
  2749                           ;color.c: 131:     if (RelR < 0) {RelR = 0;}
  2750  00054C  0100               	movlb	0	; () banked
  2751  00054E  BF79               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  2752  000550  EFAE  F002         	goto	u3360
  2753  000554  EFAC  F002         	goto	u3361
  2754  000558                     u3361:
  2755  000558  EFB6  F002         	goto	l3725
  2756  00055C                     u3360:
  2757  00055C                     
  2758                           ; BSR set to: 0
  2759  00055C  0E00               	movlw	0
  2760  00055E  6F76               	movwf	determine_color_new@RelR& (0+255),b
  2761  000560  0E00               	movlw	0
  2762  000562  6F77               	movwf	(determine_color_new@RelR+1)& (0+255),b
  2763  000564  0E00               	movlw	0
  2764  000566  6F78               	movwf	(determine_color_new@RelR+2)& (0+255),b
  2765  000568  0E00               	movlw	0
  2766  00056A  6F79               	movwf	(determine_color_new@RelR+3)& (0+255),b
  2767  00056C                     l3725:
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;color.c: 132:     if (RelG < 0) {RelG = 0;}
  2771  00056C  BF7D               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  2772  00056E  EFBD  F002         	goto	u3370
  2773  000572  EFBB  F002         	goto	u3371
  2774  000576                     u3371:
  2775  000576  EFC5  F002         	goto	l3729
  2776  00057A                     u3370:
  2777  00057A                     
  2778                           ; BSR set to: 0
  2779  00057A  0E00               	movlw	0
  2780  00057C  6F7A               	movwf	determine_color_new@RelG& (0+255),b
  2781  00057E  0E00               	movlw	0
  2782  000580  6F7B               	movwf	(determine_color_new@RelG+1)& (0+255),b
  2783  000582  0E00               	movlw	0
  2784  000584  6F7C               	movwf	(determine_color_new@RelG+2)& (0+255),b
  2785  000586  0E00               	movlw	0
  2786  000588  6F7D               	movwf	(determine_color_new@RelG+3)& (0+255),b
  2787  00058A                     l3729:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;color.c: 133:     if (RelB < 0) {RelB = 0;}
  2791  00058A  BF81               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  2792  00058C  EFCC  F002         	goto	u3380
  2793  000590  EFCA  F002         	goto	u3381
  2794  000594                     u3381:
  2795  000594  EFD4  F002         	goto	l3733
  2796  000598                     u3380:
  2797  000598                     
  2798                           ; BSR set to: 0
  2799  000598  0E00               	movlw	0
  2800  00059A  6F7E               	movwf	determine_color_new@RelB& (0+255),b
  2801  00059C  0E00               	movlw	0
  2802  00059E  6F7F               	movwf	(determine_color_new@RelB+1)& (0+255),b
  2803  0005A0  0E00               	movlw	0
  2804  0005A2  6F80               	movwf	(determine_color_new@RelB+2)& (0+255),b
  2805  0005A4  0E00               	movlw	0
  2806  0005A6  6F81               	movwf	(determine_color_new@RelB+3)& (0+255),b
  2807  0005A8                     l3733:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;color.c: 136:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1 && lumin>800)
  2811  0005A8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2812  0005AC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2813  0005B0  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  2814  0005B4  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  2815  0005B8  0E33               	movlw	51
  2816  0005BA  6E11               	movwf	isbtw@low^0,c
  2817  0005BC  0E33               	movlw	51
  2818  0005BE  6E12               	movwf	(isbtw@low+1)^0,c
  2819  0005C0  0EA3               	movlw	163
  2820  0005C2  6E13               	movwf	(isbtw@low+2)^0,c
  2821  0005C4  0E40               	movlw	64
  2822  0005C6  6E14               	movwf	(isbtw@low+3)^0,c
  2823  0005C8  0E00               	movlw	0
  2824  0005CA  6E15               	movwf	isbtw@high^0,c
  2825  0005CC  0E00               	movlw	0
  2826  0005CE  6E16               	movwf	(isbtw@high+1)^0,c
  2827  0005D0  0EA4               	movlw	164
  2828  0005D2  6E17               	movwf	(isbtw@high+2)^0,c
  2829  0005D4  0E41               	movlw	65
  2830  0005D6  6E18               	movwf	(isbtw@high+3)^0,c
  2831  0005D8  ECFD  F018         	call	_isbtw	;wreg free
  2832  0005DC  040D               	decf	?_isbtw^0,w,c
  2833  0005DE  100E               	iorwf	(?_isbtw+1)^0,w,c
  2834  0005E0  A4D8               	btfss	status,2,c
  2835  0005E2  EFF5  F002         	goto	u3391
  2836  0005E6  EFF7  F002         	goto	u3390
  2837  0005EA                     u3391:
  2838  0005EA  EF4D  F003         	goto	l3743
  2839  0005EE                     u3390:
  2840  0005EE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  2841  0005F2  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  2842  0005F6  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  2843  0005FA  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  2844  0005FE  0ECD               	movlw	205
  2845  000600  6E11               	movwf	isbtw@low^0,c
  2846  000602  0ECC               	movlw	204
  2847  000604  6E12               	movwf	(isbtw@low+1)^0,c
  2848  000606  0E0C               	movlw	12
  2849  000608  6E13               	movwf	(isbtw@low+2)^0,c
  2850  00060A  0E40               	movlw	64
  2851  00060C  6E14               	movwf	(isbtw@low+3)^0,c
  2852  00060E  0E33               	movlw	51
  2853  000610  6E15               	movwf	isbtw@high^0,c
  2854  000612  0E33               	movlw	51
  2855  000614  6E16               	movwf	(isbtw@high+1)^0,c
  2856  000616  0E73               	movlw	115
  2857  000618  6E17               	movwf	(isbtw@high+2)^0,c
  2858  00061A  0E40               	movlw	64
  2859  00061C  6E18               	movwf	(isbtw@high+3)^0,c
  2860  00061E  ECFD  F018         	call	_isbtw	;wreg free
  2861  000622  040D               	decf	?_isbtw^0,w,c
  2862  000624  100E               	iorwf	(?_isbtw+1)^0,w,c
  2863  000626  A4D8               	btfss	status,2,c
  2864  000628  EF18  F003         	goto	u3401
  2865  00062C  EF1A  F003         	goto	u3400
  2866  000630                     u3401:
  2867  000630  EF4D  F003         	goto	l3743
  2868  000634                     u3400:
  2869  000634  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  2870  000638  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  2871  00063C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  2872  000640  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  2873  000644  0E66               	movlw	102
  2874  000646  6E11               	movwf	isbtw@low^0,c
  2875  000648  0E66               	movlw	102
  2876  00064A  6E12               	movwf	(isbtw@low+1)^0,c
  2877  00064C  0EE6               	movlw	230
  2878  00064E  6E13               	movwf	(isbtw@low+2)^0,c
  2879  000650  0E3F               	movlw	63
  2880  000652  6E14               	movwf	(isbtw@low+3)^0,c
  2881  000654  0E00               	movlw	0
  2882  000656  6E15               	movwf	isbtw@high^0,c
  2883  000658  0E00               	movlw	0
  2884  00065A  6E16               	movwf	(isbtw@high+1)^0,c
  2885  00065C  0EB0               	movlw	176
  2886  00065E  6E17               	movwf	(isbtw@high+2)^0,c
  2887  000660  0E40               	movlw	64
  2888  000662  6E18               	movwf	(isbtw@high+3)^0,c
  2889  000664  ECFD  F018         	call	_isbtw	;wreg free
  2890  000668  040D               	decf	?_isbtw^0,w,c
  2891  00066A  100E               	iorwf	(?_isbtw+1)^0,w,c
  2892  00066C  A4D8               	btfss	status,2,c
  2893  00066E  EF3B  F003         	goto	u3411
  2894  000672  EF3D  F003         	goto	u3410
  2895  000676                     u3411:
  2896  000676  EF4D  F003         	goto	l3743
  2897  00067A                     u3410:
  2898  00067A  0E21               	movlw	33
  2899  00067C  0100               	movlb	0	; () banked
  2900  00067E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  2901  000680  0E03               	movlw	3
  2902  000682  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  2903  000684  A0D8               	btfss	status,0,c
  2904  000686  EF47  F003         	goto	u3421
  2905  00068A  EF49  F003         	goto	u3420
  2906  00068E                     u3421:
  2907  00068E  EF4D  F003         	goto	l3743
  2908  000692                     u3420:
  2909  000692                     
  2910                           ; BSR set to: 0
  2911                           ;color.c: 137:     {out = 0;}
  2912  000692  0E00               	movlw	0
  2913  000694  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2914  000696  0E00               	movlw	0
  2915  000698  6F72               	movwf	determine_color_new@out& (0+255),b
  2916  00069A                     l3743:
  2917                           
  2918                           ;color.c: 140:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1 && lumin>835)
  2919  00069A  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2920  00069E  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2921  0006A2  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  2922  0006A6  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  2923  0006AA  0ECD               	movlw	205
  2924  0006AC  6E11               	movwf	isbtw@low^0,c
  2925  0006AE  0ECC               	movlw	204
  2926  0006B0  6E12               	movwf	(isbtw@low+1)^0,c
  2927  0006B2  0E4C               	movlw	76
  2928  0006B4  6E13               	movwf	(isbtw@low+2)^0,c
  2929  0006B6  0E3E               	movlw	62
  2930  0006B8  6E14               	movwf	(isbtw@low+3)^0,c
  2931  0006BA  0E48               	movlw	72
  2932  0006BC  6E15               	movwf	isbtw@high^0,c
  2933  0006BE  0EE1               	movlw	225
  2934  0006C0  6E16               	movwf	(isbtw@high+1)^0,c
  2935  0006C2  0EFA               	movlw	250
  2936  0006C4  6E17               	movwf	(isbtw@high+2)^0,c
  2937  0006C6  0E3E               	movlw	62
  2938  0006C8  6E18               	movwf	(isbtw@high+3)^0,c
  2939  0006CA  ECFD  F018         	call	_isbtw	;wreg free
  2940  0006CE  040D               	decf	?_isbtw^0,w,c
  2941  0006D0  100E               	iorwf	(?_isbtw+1)^0,w,c
  2942  0006D2  A4D8               	btfss	status,2,c
  2943  0006D4  EF6E  F003         	goto	u3431
  2944  0006D8  EF70  F003         	goto	u3430
  2945  0006DC                     u3431:
  2946  0006DC  EFC6  F003         	goto	l3753
  2947  0006E0                     u3430:
  2948  0006E0  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  2949  0006E4  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  2950  0006E8  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  2951  0006EC  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  2952  0006F0  0E29               	movlw	41
  2953  0006F2  6E11               	movwf	isbtw@low^0,c
  2954  0006F4  0E5C               	movlw	92
  2955  0006F6  6E12               	movwf	(isbtw@low+1)^0,c
  2956  0006F8  0E8F               	movlw	143
  2957  0006FA  6E13               	movwf	(isbtw@low+2)^0,c
  2958  0006FC  0E3E               	movlw	62
  2959  0006FE  6E14               	movwf	(isbtw@low+3)^0,c
  2960  000700  0E3D               	movlw	61
  2961  000702  6E15               	movwf	isbtw@high^0,c
  2962  000704  0E0A               	movlw	10
  2963  000706  6E16               	movwf	(isbtw@high+1)^0,c
  2964  000708  0E17               	movlw	23
  2965  00070A  6E17               	movwf	(isbtw@high+2)^0,c
  2966  00070C  0E3F               	movlw	63
  2967  00070E  6E18               	movwf	(isbtw@high+3)^0,c
  2968  000710  ECFD  F018         	call	_isbtw	;wreg free
  2969  000714  040D               	decf	?_isbtw^0,w,c
  2970  000716  100E               	iorwf	(?_isbtw+1)^0,w,c
  2971  000718  A4D8               	btfss	status,2,c
  2972  00071A  EF91  F003         	goto	u3441
  2973  00071E  EF93  F003         	goto	u3440
  2974  000722                     u3441:
  2975  000722  EFC6  F003         	goto	l3753
  2976  000726                     u3440:
  2977  000726  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  2978  00072A  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  2979  00072E  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  2980  000732  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  2981  000736  0E33               	movlw	51
  2982  000738  6E11               	movwf	isbtw@low^0,c
  2983  00073A  0E33               	movlw	51
  2984  00073C  6E12               	movwf	(isbtw@low+1)^0,c
  2985  00073E  0E33               	movlw	51
  2986  000740  6E13               	movwf	(isbtw@low+2)^0,c
  2987  000742  0E3F               	movlw	63
  2988  000744  6E14               	movwf	(isbtw@low+3)^0,c
  2989  000746  0E66               	movlw	102
  2990  000748  6E15               	movwf	isbtw@high^0,c
  2991  00074A  0E66               	movlw	102
  2992  00074C  6E16               	movwf	(isbtw@high+1)^0,c
  2993  00074E  0E66               	movlw	102
  2994  000750  6E17               	movwf	(isbtw@high+2)^0,c
  2995  000752  0E3F               	movlw	63
  2996  000754  6E18               	movwf	(isbtw@high+3)^0,c
  2997  000756  ECFD  F018         	call	_isbtw	;wreg free
  2998  00075A  040D               	decf	?_isbtw^0,w,c
  2999  00075C  100E               	iorwf	(?_isbtw+1)^0,w,c
  3000  00075E  A4D8               	btfss	status,2,c
  3001  000760  EFB4  F003         	goto	u3451
  3002  000764  EFB6  F003         	goto	u3450
  3003  000768                     u3451:
  3004  000768  EFC6  F003         	goto	l3753
  3005  00076C                     u3450:
  3006  00076C  0E44               	movlw	68
  3007  00076E  0100               	movlb	0	; () banked
  3008  000770  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3009  000772  0E03               	movlw	3
  3010  000774  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3011  000776  A0D8               	btfss	status,0,c
  3012  000778  EFC0  F003         	goto	u3461
  3013  00077C  EFC2  F003         	goto	u3460
  3014  000780                     u3461:
  3015  000780  EFC6  F003         	goto	l3753
  3016  000784                     u3460:
  3017  000784                     
  3018                           ; BSR set to: 0
  3019                           ;color.c: 141:     {out = 1;}
  3020  000784  0E00               	movlw	0
  3021  000786  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3022  000788  0E01               	movlw	1
  3023  00078A  6F72               	movwf	determine_color_new@out& (0+255),b
  3024  00078C                     l3753:
  3025                           
  3026                           ;color.c: 144:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1)
  3027  00078C  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3028  000790  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3029  000794  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3030  000798  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3031  00079C  0ECD               	movlw	205
  3032  00079E  6E11               	movwf	isbtw@low^0,c
  3033  0007A0  0ECC               	movlw	204
  3034  0007A2  6E12               	movwf	(isbtw@low+1)^0,c
  3035  0007A4  0ECC               	movlw	204
  3036  0007A6  6E13               	movwf	(isbtw@low+2)^0,c
  3037  0007A8  0E3D               	movlw	61
  3038  0007AA  6E14               	movwf	(isbtw@low+3)^0,c
  3039  0007AC  0ECD               	movlw	205
  3040  0007AE  6E15               	movwf	isbtw@high^0,c
  3041  0007B0  0ECC               	movlw	204
  3042  0007B2  6E16               	movwf	(isbtw@high+1)^0,c
  3043  0007B4  0E0C               	movlw	12
  3044  0007B6  6E17               	movwf	(isbtw@high+2)^0,c
  3045  0007B8  0E3F               	movlw	63
  3046  0007BA  6E18               	movwf	(isbtw@high+3)^0,c
  3047  0007BC  ECFD  F018         	call	_isbtw	;wreg free
  3048  0007C0  040D               	decf	?_isbtw^0,w,c
  3049  0007C2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3050  0007C4  A4D8               	btfss	status,2,c
  3051  0007C6  EFE7  F003         	goto	u3471
  3052  0007CA  EFE9  F003         	goto	u3470
  3053  0007CE                     u3471:
  3054  0007CE  EF34  F004         	goto	l3761
  3055  0007D2                     u3470:
  3056  0007D2  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3057  0007D6  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3058  0007DA  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3059  0007DE  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3060  0007E2  0ECD               	movlw	205
  3061  0007E4  6E11               	movwf	isbtw@low^0,c
  3062  0007E6  0ECC               	movlw	204
  3063  0007E8  6E12               	movwf	(isbtw@low+1)^0,c
  3064  0007EA  0ECC               	movlw	204
  3065  0007EC  6E13               	movwf	(isbtw@low+2)^0,c
  3066  0007EE  0E3D               	movlw	61
  3067  0007F0  6E14               	movwf	(isbtw@low+3)^0,c
  3068  0007F2  0E14               	movlw	20
  3069  0007F4  6E15               	movwf	isbtw@high^0,c
  3070  0007F6  0EAE               	movlw	174
  3071  0007F8  6E16               	movwf	(isbtw@high+1)^0,c
  3072  0007FA  0EC7               	movlw	199
  3073  0007FC  6E17               	movwf	(isbtw@high+2)^0,c
  3074  0007FE  0E3E               	movlw	62
  3075  000800  6E18               	movwf	(isbtw@high+3)^0,c
  3076  000802  ECFD  F018         	call	_isbtw	;wreg free
  3077  000806  040D               	decf	?_isbtw^0,w,c
  3078  000808  100E               	iorwf	(?_isbtw+1)^0,w,c
  3079  00080A  A4D8               	btfss	status,2,c
  3080  00080C  EF0A  F004         	goto	u3481
  3081  000810  EF0C  F004         	goto	u3480
  3082  000814                     u3481:
  3083  000814  EF34  F004         	goto	l3761
  3084  000818                     u3480:
  3085  000818  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3086  00081C  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3087  000820  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3088  000824  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3089  000828  0E00               	movlw	0
  3090  00082A  6E11               	movwf	isbtw@low^0,c
  3091  00082C  0E00               	movlw	0
  3092  00082E  6E12               	movwf	(isbtw@low+1)^0,c
  3093  000830  0E80               	movlw	128
  3094  000832  6E13               	movwf	(isbtw@low+2)^0,c
  3095  000834  0E3F               	movlw	63
  3096  000836  6E14               	movwf	(isbtw@low+3)^0,c
  3097  000838  0E9A               	movlw	154
  3098  00083A  6E15               	movwf	isbtw@high^0,c
  3099  00083C  0E99               	movlw	153
  3100  00083E  6E16               	movwf	(isbtw@high+1)^0,c
  3101  000840  0E99               	movlw	153
  3102  000842  6E17               	movwf	(isbtw@high+2)^0,c
  3103  000844  0E3F               	movlw	63
  3104  000846  6E18               	movwf	(isbtw@high+3)^0,c
  3105  000848  ECFD  F018         	call	_isbtw	;wreg free
  3106  00084C  040D               	decf	?_isbtw^0,w,c
  3107  00084E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3108  000850  A4D8               	btfss	status,2,c
  3109  000852  EF2D  F004         	goto	u3491
  3110  000856  EF2F  F004         	goto	u3490
  3111  00085A                     u3491:
  3112  00085A  EF34  F004         	goto	l3761
  3113  00085E                     u3490:
  3114  00085E                     
  3115                           ;color.c: 145:     {out = 2;}
  3116  00085E  0E00               	movlw	0
  3117  000860  0100               	movlb	0	; () banked
  3118  000862  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3119  000864  0E02               	movlw	2
  3120  000866  6F72               	movwf	determine_color_new@out& (0+255),b
  3121  000868                     l3761:
  3122                           
  3123                           ;color.c: 148:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1 && lumin>850)
  3124  000868  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3125  00086C  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3126  000870  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3127  000874  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3128  000878  0E9A               	movlw	154
  3129  00087A  6E11               	movwf	isbtw@low^0,c
  3130  00087C  0E99               	movlw	153
  3131  00087E  6E12               	movwf	(isbtw@low+1)^0,c
  3132  000880  0E99               	movlw	153
  3133  000882  6E13               	movwf	(isbtw@low+2)^0,c
  3134  000884  0E3F               	movlw	63
  3135  000886  6E14               	movwf	(isbtw@low+3)^0,c
  3136  000888  0E33               	movlw	51
  3137  00088A  6E15               	movwf	isbtw@high^0,c
  3138  00088C  0E33               	movlw	51
  3139  00088E  6E16               	movwf	(isbtw@high+1)^0,c
  3140  000890  0EB3               	movlw	179
  3141  000892  6E17               	movwf	(isbtw@high+2)^0,c
  3142  000894  0E3F               	movlw	63
  3143  000896  6E18               	movwf	(isbtw@high+3)^0,c
  3144  000898  ECFD  F018         	call	_isbtw	;wreg free
  3145  00089C  040D               	decf	?_isbtw^0,w,c
  3146  00089E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3147  0008A0  A4D8               	btfss	status,2,c
  3148  0008A2  EF55  F004         	goto	u3501
  3149  0008A6  EF57  F004         	goto	u3500
  3150  0008AA                     u3501:
  3151  0008AA  EFAD  F004         	goto	l3771
  3152  0008AE                     u3500:
  3153  0008AE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3154  0008B2  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3155  0008B6  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3156  0008BA  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3157  0008BE  0E00               	movlw	0
  3158  0008C0  6E11               	movwf	isbtw@low^0,c
  3159  0008C2  0E00               	movlw	0
  3160  0008C4  6E12               	movwf	(isbtw@low+1)^0,c
  3161  0008C6  0EC0               	movlw	192
  3162  0008C8  6E13               	movwf	(isbtw@low+2)^0,c
  3163  0008CA  0E3F               	movlw	63
  3164  0008CC  6E14               	movwf	(isbtw@low+3)^0,c
  3165  0008CE  0EEC               	movlw	236
  3166  0008D0  6E15               	movwf	isbtw@high^0,c
  3167  0008D2  0E51               	movlw	81
  3168  0008D4  6E16               	movwf	(isbtw@high+1)^0,c
  3169  0008D6  0ED8               	movlw	216
  3170  0008D8  6E17               	movwf	(isbtw@high+2)^0,c
  3171  0008DA  0E3F               	movlw	63
  3172  0008DC  6E18               	movwf	(isbtw@high+3)^0,c
  3173  0008DE  ECFD  F018         	call	_isbtw	;wreg free
  3174  0008E2  040D               	decf	?_isbtw^0,w,c
  3175  0008E4  100E               	iorwf	(?_isbtw+1)^0,w,c
  3176  0008E6  A4D8               	btfss	status,2,c
  3177  0008E8  EF78  F004         	goto	u3511
  3178  0008EC  EF7A  F004         	goto	u3510
  3179  0008F0                     u3511:
  3180  0008F0  EFAD  F004         	goto	l3771
  3181  0008F4                     u3510:
  3182  0008F4  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3183  0008F8  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3184  0008FC  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3185  000900  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3186  000904  0ECD               	movlw	205
  3187  000906  6E11               	movwf	isbtw@low^0,c
  3188  000908  0ECC               	movlw	204
  3189  00090A  6E12               	movwf	(isbtw@low+1)^0,c
  3190  00090C  0E4C               	movlw	76
  3191  00090E  6E13               	movwf	(isbtw@low+2)^0,c
  3192  000910  0E3F               	movlw	63
  3193  000912  6E14               	movwf	(isbtw@low+3)^0,c
  3194  000914  0E66               	movlw	102
  3195  000916  6E15               	movwf	isbtw@high^0,c
  3196  000918  0E66               	movlw	102
  3197  00091A  6E16               	movwf	(isbtw@high+1)^0,c
  3198  00091C  0E66               	movlw	102
  3199  00091E  6E17               	movwf	(isbtw@high+2)^0,c
  3200  000920  0E3F               	movlw	63
  3201  000922  6E18               	movwf	(isbtw@high+3)^0,c
  3202  000924  ECFD  F018         	call	_isbtw	;wreg free
  3203  000928  040D               	decf	?_isbtw^0,w,c
  3204  00092A  100E               	iorwf	(?_isbtw+1)^0,w,c
  3205  00092C  A4D8               	btfss	status,2,c
  3206  00092E  EF9B  F004         	goto	u3521
  3207  000932  EF9D  F004         	goto	u3520
  3208  000936                     u3521:
  3209  000936  EFAD  F004         	goto	l3771
  3210  00093A                     u3520:
  3211  00093A  0E53               	movlw	83
  3212  00093C  0100               	movlb	0	; () banked
  3213  00093E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3214  000940  0E03               	movlw	3
  3215  000942  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3216  000944  A0D8               	btfss	status,0,c
  3217  000946  EFA7  F004         	goto	u3531
  3218  00094A  EFA9  F004         	goto	u3530
  3219  00094E                     u3531:
  3220  00094E  EFAD  F004         	goto	l3771
  3221  000952                     u3530:
  3222  000952                     
  3223                           ; BSR set to: 0
  3224                           ;color.c: 149:     {out = 3;}
  3225  000952  0E00               	movlw	0
  3226  000954  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3227  000956  0E03               	movlw	3
  3228  000958  6F72               	movwf	determine_color_new@out& (0+255),b
  3229  00095A                     l3771:
  3230                           
  3231                           ;color.c: 152:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1 && lumin>830)
  3232  00095A  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3233  00095E  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3234  000962  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3235  000966  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3236  00096A  0E14               	movlw	20
  3237  00096C  6E11               	movwf	isbtw@low^0,c
  3238  00096E  0EAE               	movlw	174
  3239  000970  6E12               	movwf	(isbtw@low+1)^0,c
  3240  000972  0EC7               	movlw	199
  3241  000974  6E13               	movwf	(isbtw@low+2)^0,c
  3242  000976  0E3F               	movlw	63
  3243  000978  6E14               	movwf	(isbtw@low+3)^0,c
  3244  00097A  0E71               	movlw	113
  3245  00097C  6E15               	movwf	isbtw@high^0,c
  3246  00097E  0E3D               	movlw	61
  3247  000980  6E16               	movwf	(isbtw@high+1)^0,c
  3248  000982  0EEA               	movlw	234
  3249  000984  6E17               	movwf	(isbtw@high+2)^0,c
  3250  000986  0E3F               	movlw	63
  3251  000988  6E18               	movwf	(isbtw@high+3)^0,c
  3252  00098A  ECFD  F018         	call	_isbtw	;wreg free
  3253  00098E  040D               	decf	?_isbtw^0,w,c
  3254  000990  100E               	iorwf	(?_isbtw+1)^0,w,c
  3255  000992  A4D8               	btfss	status,2,c
  3256  000994  EFCE  F004         	goto	u3541
  3257  000998  EFD0  F004         	goto	u3540
  3258  00099C                     u3541:
  3259  00099C  EF26  F005         	goto	l3781
  3260  0009A0                     u3540:
  3261  0009A0  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3262  0009A4  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3263  0009A8  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3264  0009AC  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3265  0009B0  0EA4               	movlw	164
  3266  0009B2  6E11               	movwf	isbtw@low^0,c
  3267  0009B4  0E70               	movlw	112
  3268  0009B6  6E12               	movwf	(isbtw@low+1)^0,c
  3269  0009B8  0E9D               	movlw	157
  3270  0009BA  6E13               	movwf	(isbtw@low+2)^0,c
  3271  0009BC  0E3F               	movlw	63
  3272  0009BE  6E14               	movwf	(isbtw@low+3)^0,c
  3273  0009C0  0E00               	movlw	0
  3274  0009C2  6E15               	movwf	isbtw@high^0,c
  3275  0009C4  0E00               	movlw	0
  3276  0009C6  6E16               	movwf	(isbtw@high+1)^0,c
  3277  0009C8  0EC0               	movlw	192
  3278  0009CA  6E17               	movwf	(isbtw@high+2)^0,c
  3279  0009CC  0E3F               	movlw	63
  3280  0009CE  6E18               	movwf	(isbtw@high+3)^0,c
  3281  0009D0  ECFD  F018         	call	_isbtw	;wreg free
  3282  0009D4  040D               	decf	?_isbtw^0,w,c
  3283  0009D6  100E               	iorwf	(?_isbtw+1)^0,w,c
  3284  0009D8  A4D8               	btfss	status,2,c
  3285  0009DA  EFF1  F004         	goto	u3551
  3286  0009DE  EFF3  F004         	goto	u3550
  3287  0009E2                     u3551:
  3288  0009E2  EF26  F005         	goto	l3781
  3289  0009E6                     u3550:
  3290  0009E6  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3291  0009EA  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3292  0009EE  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3293  0009F2  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3294  0009F6  0E33               	movlw	51
  3295  0009F8  6E11               	movwf	isbtw@low^0,c
  3296  0009FA  0E33               	movlw	51
  3297  0009FC  6E12               	movwf	(isbtw@low+1)^0,c
  3298  0009FE  0E93               	movlw	147
  3299  000A00  6E13               	movwf	(isbtw@low+2)^0,c
  3300  000A02  0E3F               	movlw	63
  3301  000A04  6E14               	movwf	(isbtw@low+3)^0,c
  3302  000A06  0E66               	movlw	102
  3303  000A08  6E15               	movwf	isbtw@high^0,c
  3304  000A0A  0E66               	movlw	102
  3305  000A0C  6E16               	movwf	(isbtw@high+1)^0,c
  3306  000A0E  0EA6               	movlw	166
  3307  000A10  6E17               	movwf	(isbtw@high+2)^0,c
  3308  000A12  0E3F               	movlw	63
  3309  000A14  6E18               	movwf	(isbtw@high+3)^0,c
  3310  000A16  ECFD  F018         	call	_isbtw	;wreg free
  3311  000A1A  040D               	decf	?_isbtw^0,w,c
  3312  000A1C  100E               	iorwf	(?_isbtw+1)^0,w,c
  3313  000A1E  A4D8               	btfss	status,2,c
  3314  000A20  EF14  F005         	goto	u3561
  3315  000A24  EF16  F005         	goto	u3560
  3316  000A28                     u3561:
  3317  000A28  EF26  F005         	goto	l3781
  3318  000A2C                     u3560:
  3319  000A2C  0E3F               	movlw	63
  3320  000A2E  0100               	movlb	0	; () banked
  3321  000A30  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3322  000A32  0E03               	movlw	3
  3323  000A34  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3324  000A36  A0D8               	btfss	status,0,c
  3325  000A38  EF20  F005         	goto	u3571
  3326  000A3C  EF22  F005         	goto	u3570
  3327  000A40                     u3571:
  3328  000A40  EF26  F005         	goto	l3781
  3329  000A44                     u3570:
  3330  000A44                     
  3331                           ; BSR set to: 0
  3332                           ;color.c: 153:     {out = 4;}
  3333  000A44  0E00               	movlw	0
  3334  000A46  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3335  000A48  0E04               	movlw	4
  3336  000A4A  6F72               	movwf	determine_color_new@out& (0+255),b
  3337  000A4C                     l3781:
  3338                           
  3339                           ;color.c: 156:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1 && lumin>800)
  3340  000A4C  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3341  000A50  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3342  000A54  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3343  000A58  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3344  000A5C  0E66               	movlw	102
  3345  000A5E  6E11               	movwf	isbtw@low^0,c
  3346  000A60  0E66               	movlw	102
  3347  000A62  6E12               	movwf	(isbtw@low+1)^0,c
  3348  000A64  0E46               	movlw	70
  3349  000A66  6E13               	movwf	(isbtw@low+2)^0,c
  3350  000A68  0E40               	movlw	64
  3351  000A6A  6E14               	movwf	(isbtw@low+3)^0,c
  3352  000A6C  0E33               	movlw	51
  3353  000A6E  6E15               	movwf	isbtw@high^0,c
  3354  000A70  0E33               	movlw	51
  3355  000A72  6E16               	movwf	(isbtw@high+1)^0,c
  3356  000A74  0E9B               	movlw	155
  3357  000A76  6E17               	movwf	(isbtw@high+2)^0,c
  3358  000A78  0E40               	movlw	64
  3359  000A7A  6E18               	movwf	(isbtw@high+3)^0,c
  3360  000A7C  ECFD  F018         	call	_isbtw	;wreg free
  3361  000A80  040D               	decf	?_isbtw^0,w,c
  3362  000A82  100E               	iorwf	(?_isbtw+1)^0,w,c
  3363  000A84  A4D8               	btfss	status,2,c
  3364  000A86  EF47  F005         	goto	u3581
  3365  000A8A  EF49  F005         	goto	u3580
  3366  000A8E                     u3581:
  3367  000A8E  EF9F  F005         	goto	l3791
  3368  000A92                     u3580:
  3369  000A92  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3370  000A96  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3371  000A9A  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3372  000A9E  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3373  000AA2  0ECD               	movlw	205
  3374  000AA4  6E11               	movwf	isbtw@low^0,c
  3375  000AA6  0ECC               	movlw	204
  3376  000AA8  6E12               	movwf	(isbtw@low+1)^0,c
  3377  000AAA  0E0C               	movlw	12
  3378  000AAC  6E13               	movwf	(isbtw@low+2)^0,c
  3379  000AAE  0E40               	movlw	64
  3380  000AB0  6E14               	movwf	(isbtw@low+3)^0,c
  3381  000AB2  0EB8               	movlw	184
  3382  000AB4  6E15               	movwf	isbtw@high^0,c
  3383  000AB6  0E1E               	movlw	30
  3384  000AB8  6E16               	movwf	(isbtw@high+1)^0,c
  3385  000ABA  0E35               	movlw	53
  3386  000ABC  6E17               	movwf	(isbtw@high+2)^0,c
  3387  000ABE  0E40               	movlw	64
  3388  000AC0  6E18               	movwf	(isbtw@high+3)^0,c
  3389  000AC2  ECFD  F018         	call	_isbtw	;wreg free
  3390  000AC6  040D               	decf	?_isbtw^0,w,c
  3391  000AC8  100E               	iorwf	(?_isbtw+1)^0,w,c
  3392  000ACA  A4D8               	btfss	status,2,c
  3393  000ACC  EF6A  F005         	goto	u3591
  3394  000AD0  EF6C  F005         	goto	u3590
  3395  000AD4                     u3591:
  3396  000AD4  EF9F  F005         	goto	l3791
  3397  000AD8                     u3590:
  3398  000AD8  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3399  000ADC  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3400  000AE0  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3401  000AE4  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3402  000AE8  0E5C               	movlw	92
  3403  000AEA  6E11               	movwf	isbtw@low^0,c
  3404  000AEC  0E8F               	movlw	143
  3405  000AEE  6E12               	movwf	(isbtw@low+1)^0,c
  3406  000AF0  0EA2               	movlw	162
  3407  000AF2  6E13               	movwf	(isbtw@low+2)^0,c
  3408  000AF4  0E3F               	movlw	63
  3409  000AF6  6E14               	movwf	(isbtw@low+3)^0,c
  3410  000AF8  0E66               	movlw	102
  3411  000AFA  6E15               	movwf	isbtw@high^0,c
  3412  000AFC  0E66               	movlw	102
  3413  000AFE  6E16               	movwf	(isbtw@high+1)^0,c
  3414  000B00  0EE6               	movlw	230
  3415  000B02  6E17               	movwf	(isbtw@high+2)^0,c
  3416  000B04  0E3F               	movlw	63
  3417  000B06  6E18               	movwf	(isbtw@high+3)^0,c
  3418  000B08  ECFD  F018         	call	_isbtw	;wreg free
  3419  000B0C  040D               	decf	?_isbtw^0,w,c
  3420  000B0E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3421  000B10  A4D8               	btfss	status,2,c
  3422  000B12  EF8D  F005         	goto	u3601
  3423  000B16  EF8F  F005         	goto	u3600
  3424  000B1A                     u3601:
  3425  000B1A  EF9F  F005         	goto	l3791
  3426  000B1E                     u3600:
  3427  000B1E  0E21               	movlw	33
  3428  000B20  0100               	movlb	0	; () banked
  3429  000B22  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3430  000B24  0E03               	movlw	3
  3431  000B26  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3432  000B28  A0D8               	btfss	status,0,c
  3433  000B2A  EF99  F005         	goto	u3611
  3434  000B2E  EF9B  F005         	goto	u3610
  3435  000B32                     u3611:
  3436  000B32  EF9F  F005         	goto	l3791
  3437  000B36                     u3610:
  3438  000B36                     
  3439                           ; BSR set to: 0
  3440                           ;color.c: 157:     {;color.c: 158:         out = 5;}
  3441  000B36  0E00               	movlw	0
  3442  000B38  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3443  000B3A  0E05               	movlw	5
  3444  000B3C  6F72               	movwf	determine_color_new@out& (0+255),b
  3445  000B3E                     l3791:
  3446                           
  3447                           ;color.c: 161:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1 && lumin>820)
  3448  000B3E  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3449  000B42  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3450  000B46  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3451  000B4A  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3452  000B4E  0E9A               	movlw	154
  3453  000B50  6E11               	movwf	isbtw@low^0,c
  3454  000B52  0E99               	movlw	153
  3455  000B54  6E12               	movwf	(isbtw@low+1)^0,c
  3456  000B56  0E19               	movlw	25
  3457  000B58  6E13               	movwf	(isbtw@low+2)^0,c
  3458  000B5A  0E3F               	movlw	63
  3459  000B5C  6E14               	movwf	(isbtw@low+3)^0,c
  3460  000B5E  0EF6               	movlw	246
  3461  000B60  6E15               	movwf	isbtw@high^0,c
  3462  000B62  0E28               	movlw	40
  3463  000B64  6E16               	movwf	(isbtw@high+1)^0,c
  3464  000B66  0E5C               	movlw	92
  3465  000B68  6E17               	movwf	(isbtw@high+2)^0,c
  3466  000B6A  0E3F               	movlw	63
  3467  000B6C  6E18               	movwf	(isbtw@high+3)^0,c
  3468  000B6E  ECFD  F018         	call	_isbtw	;wreg free
  3469  000B72  040D               	decf	?_isbtw^0,w,c
  3470  000B74  100E               	iorwf	(?_isbtw+1)^0,w,c
  3471  000B76  A4D8               	btfss	status,2,c
  3472  000B78  EFC0  F005         	goto	u3621
  3473  000B7C  EFC2  F005         	goto	u3620
  3474  000B80                     u3621:
  3475  000B80  EF18  F006         	goto	l3801
  3476  000B84                     u3620:
  3477  000B84  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3478  000B88  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3479  000B8C  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3480  000B90  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3481  000B94  0E9A               	movlw	154
  3482  000B96  6E11               	movwf	isbtw@low^0,c
  3483  000B98  0E99               	movlw	153
  3484  000B9A  6E12               	movwf	(isbtw@low+1)^0,c
  3485  000B9C  0E19               	movlw	25
  3486  000B9E  6E13               	movwf	(isbtw@low+2)^0,c
  3487  000BA0  0E3F               	movlw	63
  3488  000BA2  6E14               	movwf	(isbtw@low+3)^0,c
  3489  000BA4  0E9A               	movlw	154
  3490  000BA6  6E15               	movwf	isbtw@high^0,c
  3491  000BA8  0E99               	movlw	153
  3492  000BAA  6E16               	movwf	(isbtw@high+1)^0,c
  3493  000BAC  0E59               	movlw	89
  3494  000BAE  6E17               	movwf	(isbtw@high+2)^0,c
  3495  000BB0  0E3F               	movlw	63
  3496  000BB2  6E18               	movwf	(isbtw@high+3)^0,c
  3497  000BB4  ECFD  F018         	call	_isbtw	;wreg free
  3498  000BB8  040D               	decf	?_isbtw^0,w,c
  3499  000BBA  100E               	iorwf	(?_isbtw+1)^0,w,c
  3500  000BBC  A4D8               	btfss	status,2,c
  3501  000BBE  EFE3  F005         	goto	u3631
  3502  000BC2  EFE5  F005         	goto	u3630
  3503  000BC6                     u3631:
  3504  000BC6  EF18  F006         	goto	l3801
  3505  000BCA                     u3630:
  3506  000BCA  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3507  000BCE  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3508  000BD2  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3509  000BD6  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3510  000BDA  0E33               	movlw	51
  3511  000BDC  6E11               	movwf	isbtw@low^0,c
  3512  000BDE  0E33               	movlw	51
  3513  000BE0  6E12               	movwf	(isbtw@low+1)^0,c
  3514  000BE2  0E73               	movlw	115
  3515  000BE4  6E13               	movwf	(isbtw@low+2)^0,c
  3516  000BE6  0E3F               	movlw	63
  3517  000BE8  6E14               	movwf	(isbtw@low+3)^0,c
  3518  000BEA  0E29               	movlw	41
  3519  000BEC  6E15               	movwf	isbtw@high^0,c
  3520  000BEE  0E5C               	movlw	92
  3521  000BF0  6E16               	movwf	(isbtw@high+1)^0,c
  3522  000BF2  0E8F               	movlw	143
  3523  000BF4  6E17               	movwf	(isbtw@high+2)^0,c
  3524  000BF6  0E3F               	movlw	63
  3525  000BF8  6E18               	movwf	(isbtw@high+3)^0,c
  3526  000BFA  ECFD  F018         	call	_isbtw	;wreg free
  3527  000BFE  040D               	decf	?_isbtw^0,w,c
  3528  000C00  100E               	iorwf	(?_isbtw+1)^0,w,c
  3529  000C02  A4D8               	btfss	status,2,c
  3530  000C04  EF06  F006         	goto	u3641
  3531  000C08  EF08  F006         	goto	u3640
  3532  000C0C                     u3641:
  3533  000C0C  EF18  F006         	goto	l3801
  3534  000C10                     u3640:
  3535  000C10  0E35               	movlw	53
  3536  000C12  0100               	movlb	0	; () banked
  3537  000C14  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3538  000C16  0E03               	movlw	3
  3539  000C18  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3540  000C1A  A0D8               	btfss	status,0,c
  3541  000C1C  EF12  F006         	goto	u3651
  3542  000C20  EF14  F006         	goto	u3650
  3543  000C24                     u3651:
  3544  000C24  EF18  F006         	goto	l3801
  3545  000C28                     u3650:
  3546  000C28                     
  3547                           ; BSR set to: 0
  3548                           ;color.c: 162:     {out = 6;}
  3549  000C28  0E00               	movlw	0
  3550  000C2A  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3551  000C2C  0E06               	movlw	6
  3552  000C2E  6F72               	movwf	determine_color_new@out& (0+255),b
  3553  000C30                     l3801:
  3554                           
  3555                           ;color.c: 165:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>890)
  3556  000C30  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3557  000C34  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3558  000C38  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3559  000C3C  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3560  000C40  0E66               	movlw	102
  3561  000C42  6E11               	movwf	isbtw@low^0,c
  3562  000C44  0E66               	movlw	102
  3563  000C46  6E12               	movwf	(isbtw@low+1)^0,c
  3564  000C48  0E66               	movlw	102
  3565  000C4A  6E13               	movwf	(isbtw@low+2)^0,c
  3566  000C4C  0E3F               	movlw	63
  3567  000C4E  6E14               	movwf	(isbtw@low+3)^0,c
  3568  000C50  0ECD               	movlw	205
  3569  000C52  6E15               	movwf	isbtw@high^0,c
  3570  000C54  0ECC               	movlw	204
  3571  000C56  6E16               	movwf	(isbtw@high+1)^0,c
  3572  000C58  0E8C               	movlw	140
  3573  000C5A  6E17               	movwf	(isbtw@high+2)^0,c
  3574  000C5C  0E3F               	movlw	63
  3575  000C5E  6E18               	movwf	(isbtw@high+3)^0,c
  3576  000C60  ECFD  F018         	call	_isbtw	;wreg free
  3577  000C64  040D               	decf	?_isbtw^0,w,c
  3578  000C66  100E               	iorwf	(?_isbtw+1)^0,w,c
  3579  000C68  A4D8               	btfss	status,2,c
  3580  000C6A  EF39  F006         	goto	u3661
  3581  000C6E  EF3B  F006         	goto	u3660
  3582  000C72                     u3661:
  3583  000C72  EF91  F006         	goto	l3811
  3584  000C76                     u3660:
  3585  000C76  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3586  000C7A  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3587  000C7E  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3588  000C82  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3589  000C86  0ECD               	movlw	205
  3590  000C88  6E11               	movwf	isbtw@low^0,c
  3591  000C8A  0ECC               	movlw	204
  3592  000C8C  6E12               	movwf	(isbtw@low+1)^0,c
  3593  000C8E  0E4C               	movlw	76
  3594  000C90  6E13               	movwf	(isbtw@low+2)^0,c
  3595  000C92  0E3F               	movlw	63
  3596  000C94  6E14               	movwf	(isbtw@low+3)^0,c
  3597  000C96  0E00               	movlw	0
  3598  000C98  6E15               	movwf	isbtw@high^0,c
  3599  000C9A  0E00               	movlw	0
  3600  000C9C  6E16               	movwf	(isbtw@high+1)^0,c
  3601  000C9E  0E80               	movlw	128
  3602  000CA0  6E17               	movwf	(isbtw@high+2)^0,c
  3603  000CA2  0E3F               	movlw	63
  3604  000CA4  6E18               	movwf	(isbtw@high+3)^0,c
  3605  000CA6  ECFD  F018         	call	_isbtw	;wreg free
  3606  000CAA  040D               	decf	?_isbtw^0,w,c
  3607  000CAC  100E               	iorwf	(?_isbtw+1)^0,w,c
  3608  000CAE  A4D8               	btfss	status,2,c
  3609  000CB0  EF5C  F006         	goto	u3671
  3610  000CB4  EF5E  F006         	goto	u3670
  3611  000CB8                     u3671:
  3612  000CB8  EF91  F006         	goto	l3811
  3613  000CBC                     u3670:
  3614  000CBC  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3615  000CC0  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3616  000CC4  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3617  000CC8  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3618  000CCC  0E33               	movlw	51
  3619  000CCE  6E11               	movwf	isbtw@low^0,c
  3620  000CD0  0E33               	movlw	51
  3621  000CD2  6E12               	movwf	(isbtw@low+1)^0,c
  3622  000CD4  0E73               	movlw	115
  3623  000CD6  6E13               	movwf	(isbtw@low+2)^0,c
  3624  000CD8  0E3F               	movlw	63
  3625  000CDA  6E14               	movwf	(isbtw@low+3)^0,c
  3626  000CDC  0ECD               	movlw	205
  3627  000CDE  6E15               	movwf	isbtw@high^0,c
  3628  000CE0  0ECC               	movlw	204
  3629  000CE2  6E16               	movwf	(isbtw@high+1)^0,c
  3630  000CE4  0E8C               	movlw	140
  3631  000CE6  6E17               	movwf	(isbtw@high+2)^0,c
  3632  000CE8  0E3F               	movlw	63
  3633  000CEA  6E18               	movwf	(isbtw@high+3)^0,c
  3634  000CEC  ECFD  F018         	call	_isbtw	;wreg free
  3635  000CF0  040D               	decf	?_isbtw^0,w,c
  3636  000CF2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3637  000CF4  A4D8               	btfss	status,2,c
  3638  000CF6  EF7F  F006         	goto	u3681
  3639  000CFA  EF81  F006         	goto	u3680
  3640  000CFE                     u3681:
  3641  000CFE  EF91  F006         	goto	l3811
  3642  000D02                     u3680:
  3643  000D02  0E7B               	movlw	123
  3644  000D04  0100               	movlb	0	; () banked
  3645  000D06  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3646  000D08  0E03               	movlw	3
  3647  000D0A  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3648  000D0C  A0D8               	btfss	status,0,c
  3649  000D0E  EF8B  F006         	goto	u3691
  3650  000D12  EF8D  F006         	goto	u3690
  3651  000D16                     u3691:
  3652  000D16  EF91  F006         	goto	l3811
  3653  000D1A                     u3690:
  3654  000D1A                     
  3655                           ; BSR set to: 0
  3656                           ;color.c: 166:     {out = 7;}
  3657  000D1A  0E00               	movlw	0
  3658  000D1C  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3659  000D1E  0E07               	movlw	7
  3660  000D20  6F72               	movwf	determine_color_new@out& (0+255),b
  3661  000D22                     l3811:
  3662                           
  3663                           ;color.c: 169:     if (RedRatio < 50 && GreenRatio < 50 && BlueRatio < 50) {out = 8;}
  3664  000D22  0100               	movlb	0	; () banked
  3665  000D24  516D               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  3666  000D26  E107               	bnz	u3701
  3667  000D28  0E32               	movlw	50
  3668  000D2A  5D6C               	subwf	determine_color_new@RedRatio& (0+255),w,b
  3669  000D2C  B0D8               	btfsc	status,0,c
  3670  000D2E  EF9B  F006         	goto	u3701
  3671  000D32  EF9D  F006         	goto	u3700
  3672  000D36                     u3701:
  3673  000D36  EFB7  F006         	goto	l3819
  3674  000D3A                     u3700:
  3675  000D3A                     
  3676                           ; BSR set to: 0
  3677  000D3A  516F               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  3678  000D3C  E107               	bnz	u3711
  3679  000D3E  0E32               	movlw	50
  3680  000D40  5D6E               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  3681  000D42  B0D8               	btfsc	status,0,c
  3682  000D44  EFA6  F006         	goto	u3711
  3683  000D48  EFA8  F006         	goto	u3710
  3684  000D4C                     u3711:
  3685  000D4C  EFB7  F006         	goto	l3819
  3686  000D50                     u3710:
  3687  000D50                     
  3688                           ; BSR set to: 0
  3689  000D50  5171               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  3690  000D52  E107               	bnz	u3721
  3691  000D54  0E32               	movlw	50
  3692  000D56  5D70               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  3693  000D58  B0D8               	btfsc	status,0,c
  3694  000D5A  EFB1  F006         	goto	u3721
  3695  000D5E  EFB3  F006         	goto	u3720
  3696  000D62                     u3721:
  3697  000D62  EFB7  F006         	goto	l3819
  3698  000D66                     u3720:
  3699  000D66                     
  3700                           ; BSR set to: 0
  3701  000D66  0E00               	movlw	0
  3702  000D68  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3703  000D6A  0E08               	movlw	8
  3704  000D6C  6F72               	movwf	determine_color_new@out& (0+255),b
  3705  000D6E                     l3819:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;color.c: 171:     return out;
  3709  000D6E  C072  F05B         	movff	determine_color_new@out,?_determine_color_new
  3710  000D72  C073  F05C         	movff	determine_color_new@out+1,?_determine_color_new+1
  3711  000D76                     
  3712                           ; BSR set to: 0
  3713  000D76  0012               	return		;funcret
  3714  000D78                     __end_of_determine_color_new:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function _isbtw *****************
  3718 ;; Defined at:
  3719 ;;		line 98 in file "color.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  num             4   12[COMRAM] float 
  3722 ;;  low             4   16[COMRAM] float 
  3723 ;;  high            4   20[COMRAM] float 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2   12[COMRAM] unsigned int 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3735 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;Total ram usage:       12 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 2
  3742 ;; This function calls:
  3743 ;;		___flge
  3744 ;; This function is called by:
  3745 ;;		_determine_color_new
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text7
  3750  0031FA                     __ptext7:
  3751                           	callstack 0
  3752  0031FA                     _isbtw:
  3753                           	callstack 27
  3754  0031FA                     
  3755                           ;color.c: 99:     if (num>=low && num<=high){return 1;}
  3756  0031FA  C00D  F001         	movff	isbtw@num,___flge@ff1
  3757  0031FE  C00E  F002         	movff	isbtw@num+1,___flge@ff1+1
  3758  003202  C00F  F003         	movff	isbtw@num+2,___flge@ff1+2
  3759  003206  C010  F004         	movff	isbtw@num+3,___flge@ff1+3
  3760  00320A  C011  F005         	movff	isbtw@low,___flge@ff2
  3761  00320E  C012  F006         	movff	isbtw@low+1,___flge@ff2+1
  3762  003212  C013  F007         	movff	isbtw@low+2,___flge@ff2+2
  3763  003216  C014  F008         	movff	isbtw@low+3,___flge@ff2+3
  3764  00321A  EC42  F017         	call	___flge	;wreg free
  3765  00321E  A0D8               	btfss	status,0,c
  3766  003220  EF14  F019         	goto	u2331
  3767  003224  EF16  F019         	goto	u2330
  3768  003228                     u2331:
  3769  003228  EF35  F019         	goto	l2955
  3770  00322C                     u2330:
  3771  00322C  C015  F001         	movff	isbtw@high,___flge@ff1
  3772  003230  C016  F002         	movff	isbtw@high+1,___flge@ff1+1
  3773  003234  C017  F003         	movff	isbtw@high+2,___flge@ff1+2
  3774  003238  C018  F004         	movff	isbtw@high+3,___flge@ff1+3
  3775  00323C  C00D  F005         	movff	isbtw@num,___flge@ff2
  3776  003240  C00E  F006         	movff	isbtw@num+1,___flge@ff2+1
  3777  003244  C00F  F007         	movff	isbtw@num+2,___flge@ff2+2
  3778  003248  C010  F008         	movff	isbtw@num+3,___flge@ff2+3
  3779  00324C  EC42  F017         	call	___flge	;wreg free
  3780  003250  A0D8               	btfss	status,0,c
  3781  003252  EF2D  F019         	goto	u2341
  3782  003256  EF2F  F019         	goto	u2340
  3783  00325A                     u2341:
  3784  00325A  EF35  F019         	goto	l2955
  3785  00325E                     u2340:
  3786  00325E  0E00               	movlw	0
  3787  003260  6E0E               	movwf	(?_isbtw+1)^0,c
  3788  003262  0E01               	movlw	1
  3789  003264  6E0D               	movwf	?_isbtw^0,c
  3790  003266  EF39  F019         	goto	l75
  3791  00326A                     l2955:
  3792  00326A  0E00               	movlw	0
  3793  00326C  6E0E               	movwf	(?_isbtw+1)^0,c
  3794  00326E  0E00               	movlw	0
  3795  003270  6E0D               	movwf	?_isbtw^0,c
  3796  003272                     l75:
  3797  003272  0012               	return		;funcret
  3798  003274                     __end_of_isbtw:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function ___flge *****************
  3802 ;; Defined at:
  3803 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  ff1             4    0[COMRAM] unsigned int 
  3806 ;;  ff2             4    4[COMRAM] unsigned int 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;		None               void
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3818 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;Total ram usage:       12 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_isbtw
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text8
  3833  002E84                     __ptext8:
  3834                           	callstack 0
  3835  002E84                     ___flge:
  3836                           	callstack 27
  3837  002E84  0E00               	movlw	0
  3838  002E86  1401               	andwf	___flge@ff1^0,w,c
  3839  002E88  6E09               	movwf	??___flge^0,c
  3840  002E8A  0E00               	movlw	0
  3841  002E8C  1402               	andwf	(___flge@ff1+1)^0,w,c
  3842  002E8E  6E0A               	movwf	(??___flge+1)^0,c
  3843  002E90  0E80               	movlw	128
  3844  002E92  1403               	andwf	(___flge@ff1+2)^0,w,c
  3845  002E94  6E0B               	movwf	(??___flge+2)^0,c
  3846  002E96  0E7F               	movlw	127
  3847  002E98  1404               	andwf	(___flge@ff1+3)^0,w,c
  3848  002E9A  6E0C               	movwf	(??___flge+3)^0,c
  3849  002E9C  5009               	movf	??___flge^0,w,c
  3850  002E9E  100A               	iorwf	(??___flge+1)^0,w,c
  3851  002EA0  100B               	iorwf	(??___flge+2)^0,w,c
  3852  002EA2  100C               	iorwf	(??___flge+3)^0,w,c
  3853  002EA4  A4D8               	btfss	status,2,c
  3854  002EA6  EF57  F017         	goto	u2281
  3855  002EAA  EF59  F017         	goto	u2280
  3856  002EAE                     u2281:
  3857  002EAE  EF61  F017         	goto	l2889
  3858  002EB2                     u2280:
  3859  002EB2  0E00               	movlw	0
  3860  002EB4  6E01               	movwf	___flge@ff1^0,c
  3861  002EB6  0E00               	movlw	0
  3862  002EB8  6E02               	movwf	(___flge@ff1+1)^0,c
  3863  002EBA  0E00               	movlw	0
  3864  002EBC  6E03               	movwf	(___flge@ff1+2)^0,c
  3865  002EBE  0E00               	movlw	0
  3866  002EC0  6E04               	movwf	(___flge@ff1+3)^0,c
  3867  002EC2                     l2889:
  3868  002EC2  0E00               	movlw	0
  3869  002EC4  1405               	andwf	___flge@ff2^0,w,c
  3870  002EC6  6E09               	movwf	??___flge^0,c
  3871  002EC8  0E00               	movlw	0
  3872  002ECA  1406               	andwf	(___flge@ff2+1)^0,w,c
  3873  002ECC  6E0A               	movwf	(??___flge+1)^0,c
  3874  002ECE  0E80               	movlw	128
  3875  002ED0  1407               	andwf	(___flge@ff2+2)^0,w,c
  3876  002ED2  6E0B               	movwf	(??___flge+2)^0,c
  3877  002ED4  0E7F               	movlw	127
  3878  002ED6  1408               	andwf	(___flge@ff2+3)^0,w,c
  3879  002ED8  6E0C               	movwf	(??___flge+3)^0,c
  3880  002EDA  5009               	movf	??___flge^0,w,c
  3881  002EDC  100A               	iorwf	(??___flge+1)^0,w,c
  3882  002EDE  100B               	iorwf	(??___flge+2)^0,w,c
  3883  002EE0  100C               	iorwf	(??___flge+3)^0,w,c
  3884  002EE2  A4D8               	btfss	status,2,c
  3885  002EE4  EF76  F017         	goto	u2291
  3886  002EE8  EF78  F017         	goto	u2290
  3887  002EEC                     u2291:
  3888  002EEC  EF80  F017         	goto	l2893
  3889  002EF0                     u2290:
  3890  002EF0  0E00               	movlw	0
  3891  002EF2  6E05               	movwf	___flge@ff2^0,c
  3892  002EF4  0E00               	movlw	0
  3893  002EF6  6E06               	movwf	(___flge@ff2+1)^0,c
  3894  002EF8  0E00               	movlw	0
  3895  002EFA  6E07               	movwf	(___flge@ff2+2)^0,c
  3896  002EFC  0E00               	movlw	0
  3897  002EFE  6E08               	movwf	(___flge@ff2+3)^0,c
  3898  002F00                     l2893:
  3899  002F00  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3900  002F02  EF85  F017         	goto	u2301
  3901  002F06  EF87  F017         	goto	u2300
  3902  002F0A                     u2301:
  3903  002F0A  EF90  F017         	goto	l2897
  3904  002F0E                     u2300:
  3905  002F0E  6C01               	negf	___flge@ff1^0,c
  3906  002F10  1E02               	comf	(___flge@ff1+1)^0,f,c
  3907  002F12  B0D8               	btfsc	status,0,c
  3908  002F14  2A02               	incf	(___flge@ff1+1)^0,f,c
  3909  002F16  1E03               	comf	(___flge@ff1+2)^0,f,c
  3910  002F18  B0D8               	btfsc	status,0,c
  3911  002F1A  2A03               	incf	(___flge@ff1+2)^0,f,c
  3912  002F1C  0E80               	movlw	128
  3913  002F1E  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3914  002F20                     l2897:
  3915  002F20  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3916  002F22  EF95  F017         	goto	u2311
  3917  002F26  EF97  F017         	goto	u2310
  3918  002F2A                     u2311:
  3919  002F2A  EFA0  F017         	goto	l799
  3920  002F2E                     u2310:
  3921  002F2E  6C05               	negf	___flge@ff2^0,c
  3922  002F30  1E06               	comf	(___flge@ff2+1)^0,f,c
  3923  002F32  B0D8               	btfsc	status,0,c
  3924  002F34  2A06               	incf	(___flge@ff2+1)^0,f,c
  3925  002F36  1E07               	comf	(___flge@ff2+2)^0,f,c
  3926  002F38  B0D8               	btfsc	status,0,c
  3927  002F3A  2A07               	incf	(___flge@ff2+2)^0,f,c
  3928  002F3C  0E80               	movlw	128
  3929  002F3E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3930  002F40                     l799:
  3931  002F40  0E00               	movlw	0
  3932  002F42  1A01               	xorwf	___flge@ff1^0,f,c
  3933  002F44  0E00               	movlw	0
  3934  002F46  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3935  002F48  0E00               	movlw	0
  3936  002F4A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3937  002F4C  0E80               	movlw	128
  3938  002F4E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3939  002F50  0E00               	movlw	0
  3940  002F52  1A05               	xorwf	___flge@ff2^0,f,c
  3941  002F54  0E00               	movlw	0
  3942  002F56  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3943  002F58  0E00               	movlw	0
  3944  002F5A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3945  002F5C  0E80               	movlw	128
  3946  002F5E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3947  002F60  5005               	movf	___flge@ff2^0,w,c
  3948  002F62  5C01               	subwf	___flge@ff1^0,w,c
  3949  002F64  5006               	movf	(___flge@ff2+1)^0,w,c
  3950  002F66  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3951  002F68  5007               	movf	(___flge@ff2+2)^0,w,c
  3952  002F6A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3953  002F6C  5008               	movf	(___flge@ff2+3)^0,w,c
  3954  002F6E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3955  002F70  B0D8               	btfsc	status,0,c
  3956  002F72  EFBD  F017         	goto	u2321
  3957  002F76  EFBF  F017         	goto	u2320
  3958  002F7A                     u2321:
  3959  002F7A  EFC2  F017         	goto	l2903
  3960  002F7E                     u2320:
  3961  002F7E  90D8               	bcf	status,0,c
  3962  002F80  EFC3  F017         	goto	l804
  3963  002F84                     l2903:
  3964  002F84  80D8               	bsf	status,0,c
  3965  002F86                     l804:
  3966  002F86  0012               	return		;funcret
  3967  002F88                     __end_of___flge:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function ___xxtofl *****************
  3971 ;; Defined at:
  3972 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  sign            1    wreg     unsigned char 
  3975 ;;  val             4    0[COMRAM] long 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  sign            1    8[COMRAM] unsigned char 
  3978 ;;  arg             4   10[COMRAM] unsigned long 
  3979 ;;  exp             1    9[COMRAM] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  4    0[COMRAM] unsigned char 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;Total ram usage:       14 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_determine_color_new
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text9
  4004  002594                     __ptext9:
  4005                           	callstack 0
  4006  002594                     ___xxtofl:
  4007                           	callstack 28
  4008                           
  4009                           ;incstack = 0
  4010                           ;___xxtofl@sign stored from wreg
  4011  002594  6E09               	movwf	___xxtofl@sign^0,c
  4012  002596  5009               	movf	___xxtofl@sign^0,w,c
  4013  002598  B4D8               	btfsc	status,2,c
  4014  00259A  EFD1  F012         	goto	u3261
  4015  00259E  EFD3  F012         	goto	u3260
  4016  0025A2                     u3261:
  4017  0025A2  EFF5  F012         	goto	l1189
  4018  0025A6                     u3260:
  4019  0025A6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4020  0025A8  EFDA  F012         	goto	u3270
  4021  0025AC  EFD8  F012         	goto	u3271
  4022  0025B0                     u3271:
  4023  0025B0  EFF5  F012         	goto	l1189
  4024  0025B4                     u3270:
  4025  0025B4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4026  0025B8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4027  0025BC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4028  0025C0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4029  0025C4  1E05               	comf	??___xxtofl^0,f,c
  4030  0025C6  1E06               	comf	(??___xxtofl+1)^0,f,c
  4031  0025C8  1E07               	comf	(??___xxtofl+2)^0,f,c
  4032  0025CA  1E08               	comf	(??___xxtofl+3)^0,f,c
  4033  0025CC  2A05               	incf	??___xxtofl^0,f,c
  4034  0025CE  0E00               	movlw	0
  4035  0025D0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4036  0025D2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4037  0025D4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4038  0025D6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4039  0025DA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4040  0025DE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4041  0025E2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4042  0025E6  EFFD  F012         	goto	l3647
  4043  0025EA                     l1189:
  4044  0025EA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4045  0025EE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4046  0025F2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4047  0025F6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4048  0025FA                     l3647:
  4049  0025FA  5001               	movf	___xxtofl@val^0,w,c
  4050  0025FC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4051  0025FE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4052  002600  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4053  002602  A4D8               	btfss	status,2,c
  4054  002604  EF06  F013         	goto	u3281
  4055  002608  EF08  F013         	goto	u3280
  4056  00260C                     u3281:
  4057  00260C  EF12  F013         	goto	l3653
  4058  002610                     u3280:
  4059  002610  0E00               	movlw	0
  4060  002612  6E01               	movwf	?___xxtofl^0,c
  4061  002614  0E00               	movlw	0
  4062  002616  6E02               	movwf	(?___xxtofl+1)^0,c
  4063  002618  0E00               	movlw	0
  4064  00261A  6E03               	movwf	(?___xxtofl+2)^0,c
  4065  00261C  0E00               	movlw	0
  4066  00261E  6E04               	movwf	(?___xxtofl+3)^0,c
  4067  002620  EFA3  F013         	goto	l1192
  4068  002624                     l3653:
  4069  002624  0E96               	movlw	150
  4070  002626  6E0A               	movwf	___xxtofl@exp^0,c
  4071  002628  EF1C  F013         	goto	l3657
  4072  00262C                     l3655:
  4073  00262C  2A0A               	incf	___xxtofl@exp^0,f,c
  4074  00262E  90D8               	bcf	status,0,c
  4075  002630  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4076  002632  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4077  002634  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4078  002636  320B               	rrcf	___xxtofl@arg^0,f,c
  4079  002638                     l3657:
  4080  002638  0E00               	movlw	0
  4081  00263A  140B               	andwf	___xxtofl@arg^0,w,c
  4082  00263C  6E05               	movwf	??___xxtofl^0,c
  4083  00263E  0E00               	movlw	0
  4084  002640  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4085  002642  6E06               	movwf	(??___xxtofl+1)^0,c
  4086  002644  0E00               	movlw	0
  4087  002646  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4088  002648  6E07               	movwf	(??___xxtofl+2)^0,c
  4089  00264A  0EFE               	movlw	254
  4090  00264C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4091  00264E  6E08               	movwf	(??___xxtofl+3)^0,c
  4092  002650  5005               	movf	??___xxtofl^0,w,c
  4093  002652  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4094  002654  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4095  002656  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4096  002658  A4D8               	btfss	status,2,c
  4097  00265A  EF31  F013         	goto	u3291
  4098  00265E  EF33  F013         	goto	u3290
  4099  002662                     u3291:
  4100  002662  EF16  F013         	goto	l3655
  4101  002666                     u3290:
  4102  002666  EF41  F013         	goto	l1196
  4103  00266A                     l3659:
  4104  00266A  2A0A               	incf	___xxtofl@exp^0,f,c
  4105  00266C  0E01               	movlw	1
  4106  00266E  260B               	addwf	___xxtofl@arg^0,f,c
  4107  002670  0E00               	movlw	0
  4108  002672  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4109  002674  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4110  002676  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4111  002678  90D8               	bcf	status,0,c
  4112  00267A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4113  00267C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4114  00267E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4115  002680  320B               	rrcf	___xxtofl@arg^0,f,c
  4116  002682                     l1196:
  4117  002682  0E00               	movlw	0
  4118  002684  140B               	andwf	___xxtofl@arg^0,w,c
  4119  002686  6E05               	movwf	??___xxtofl^0,c
  4120  002688  0E00               	movlw	0
  4121  00268A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4122  00268C  6E06               	movwf	(??___xxtofl+1)^0,c
  4123  00268E  0E00               	movlw	0
  4124  002690  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4125  002692  6E07               	movwf	(??___xxtofl+2)^0,c
  4126  002694  0EFF               	movlw	255
  4127  002696  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4128  002698  6E08               	movwf	(??___xxtofl+3)^0,c
  4129  00269A  5005               	movf	??___xxtofl^0,w,c
  4130  00269C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4131  00269E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4132  0026A0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4133  0026A2  A4D8               	btfss	status,2,c
  4134  0026A4  EF56  F013         	goto	u3301
  4135  0026A8  EF58  F013         	goto	u3300
  4136  0026AC                     u3301:
  4137  0026AC  EF35  F013         	goto	l3659
  4138  0026B0                     u3300:
  4139  0026B0  EF60  F013         	goto	l3667
  4140  0026B4                     l3665:
  4141  0026B4  060A               	decf	___xxtofl@exp^0,f,c
  4142  0026B6  90D8               	bcf	status,0,c
  4143  0026B8  360B               	rlcf	___xxtofl@arg^0,f,c
  4144  0026BA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4145  0026BC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4146  0026BE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4147  0026C0                     l3667:
  4148  0026C0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4149  0026C2  EF65  F013         	goto	u3311
  4150  0026C6  EF67  F013         	goto	u3310
  4151  0026CA                     u3311:
  4152  0026CA  EF6F  F013         	goto	l1203
  4153  0026CE                     u3310:
  4154  0026CE  0E02               	movlw	2
  4155  0026D0  600A               	cpfslt	___xxtofl@exp^0,c
  4156  0026D2  EF6D  F013         	goto	u3321
  4157  0026D6  EF6F  F013         	goto	u3320
  4158  0026DA                     u3321:
  4159  0026DA  EF5A  F013         	goto	l3665
  4160  0026DE                     u3320:
  4161  0026DE                     l1203:
  4162  0026DE  B00A               	btfsc	___xxtofl@exp^0,0,c
  4163  0026E0  EF74  F013         	goto	u3331
  4164  0026E4  EF76  F013         	goto	u3330
  4165  0026E8                     u3331:
  4166  0026E8  EF77  F013         	goto	l3673
  4167  0026EC                     u3330:
  4168  0026EC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4169  0026EE                     l3673:
  4170  0026EE  90D8               	bcf	status,0,c
  4171  0026F0  320A               	rrcf	___xxtofl@exp^0,f,c
  4172  0026F2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4173  0026F6  6A06               	clrf	(??___xxtofl+1)^0,c
  4174  0026F8  6A07               	clrf	(??___xxtofl+2)^0,c
  4175  0026FA  6A08               	clrf	(??___xxtofl+3)^0,c
  4176  0026FC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4177  002700  6A07               	clrf	(??___xxtofl+2)^0,c
  4178  002702  6A06               	clrf	(??___xxtofl+1)^0,c
  4179  002704  6A05               	clrf	??___xxtofl^0,c
  4180  002706  5005               	movf	??___xxtofl^0,w,c
  4181  002708  120B               	iorwf	___xxtofl@arg^0,f,c
  4182  00270A  5006               	movf	(??___xxtofl+1)^0,w,c
  4183  00270C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4184  00270E  5007               	movf	(??___xxtofl+2)^0,w,c
  4185  002710  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4186  002712  5008               	movf	(??___xxtofl+3)^0,w,c
  4187  002714  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4188  002716  5009               	movf	___xxtofl@sign^0,w,c
  4189  002718  B4D8               	btfsc	status,2,c
  4190  00271A  EF91  F013         	goto	u3341
  4191  00271E  EF93  F013         	goto	u3340
  4192  002722                     u3341:
  4193  002722  EF9B  F013         	goto	l3683
  4194  002726                     u3340:
  4195  002726  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4196  002728  EF9A  F013         	goto	u3350
  4197  00272C  EF98  F013         	goto	u3351
  4198  002730                     u3351:
  4199  002730  EF9B  F013         	goto	l3683
  4200  002734                     u3350:
  4201  002734  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4202  002736                     l3683:
  4203  002736  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4204  00273A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4205  00273E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4206  002742  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4207  002746                     l1192:
  4208  002746  0012               	return		;funcret
  4209  002748                     __end_of___xxtofl:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function ___fltol *****************
  4213 ;; Defined at:
  4214 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  f1              4   80[COMRAM] unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  exp1            1   89[COMRAM] unsigned char 
  4219 ;;  sign1           1   88[COMRAM] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  4   80[COMRAM] long 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;Total ram usage:       10 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_determine_color_new
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text10
  4244  002D7E                     __ptext10:
  4245                           	callstack 0
  4246  002D7E                     ___fltol:
  4247                           	callstack 28
  4248  002D7E  3453               	rlcf	(___fltol@f1+2)^0,w,c
  4249  002D80  3454               	rlcf	(___fltol@f1+3)^0,w,c
  4250  002D82  6E5A               	movwf	___fltol@exp1^0,c
  4251  002D84  505A               	movf	___fltol@exp1^0,w,c
  4252  002D86  A4D8               	btfss	status,2,c
  4253  002D88  EFC8  F016         	goto	u3191
  4254  002D8C  EFCA  F016         	goto	u3190
  4255  002D90                     u3191:
  4256  002D90  EFD4  F016         	goto	l3603
  4257  002D94                     u3190:
  4258  002D94                     l3599:
  4259  002D94  0E00               	movlw	0
  4260  002D96  6E51               	movwf	?___fltol^0,c
  4261  002D98  0E00               	movlw	0
  4262  002D9A  6E52               	movwf	(?___fltol+1)^0,c
  4263  002D9C  0E00               	movlw	0
  4264  002D9E  6E53               	movwf	(?___fltol+2)^0,c
  4265  002DA0  0E00               	movlw	0
  4266  002DA2  6E54               	movwf	(?___fltol+3)^0,c
  4267  002DA4  EF41  F017         	goto	l831
  4268  002DA8                     l3603:
  4269  002DA8  C051  F055         	movff	___fltol@f1,??___fltol
  4270  002DAC  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  4271  002DB0  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  4272  002DB4  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  4273  002DB8  0E20               	movlw	32
  4274  002DBA  EFE4  F016         	goto	u3200
  4275  002DBE                     u3205:
  4276  002DBE  90D8               	bcf	status,0,c
  4277  002DC0  3258               	rrcf	(??___fltol+3)^0,f,c
  4278  002DC2  3257               	rrcf	(??___fltol+2)^0,f,c
  4279  002DC4  3256               	rrcf	(??___fltol+1)^0,f,c
  4280  002DC6  3255               	rrcf	??___fltol^0,f,c
  4281  002DC8                     u3200:
  4282  002DC8  2EE8               	decfsz	wreg,f,c
  4283  002DCA  EFDF  F016         	goto	u3205
  4284  002DCE  5055               	movf	??___fltol^0,w,c
  4285  002DD0  6E59               	movwf	___fltol@sign1^0,c
  4286  002DD2  8E53               	bsf	(___fltol@f1+2)^0,7,c
  4287  002DD4  0EFF               	movlw	255
  4288  002DD6  1651               	andwf	___fltol@f1^0,f,c
  4289  002DD8  0EFF               	movlw	255
  4290  002DDA  1652               	andwf	(___fltol@f1+1)^0,f,c
  4291  002DDC  0EFF               	movlw	255
  4292  002DDE  1653               	andwf	(___fltol@f1+2)^0,f,c
  4293  002DE0  0E00               	movlw	0
  4294  002DE2  1654               	andwf	(___fltol@f1+3)^0,f,c
  4295  002DE4  0E96               	movlw	150
  4296  002DE6  5E5A               	subwf	___fltol@exp1^0,f,c
  4297  002DE8  BE5A               	btfsc	___fltol@exp1^0,7,c
  4298  002DEA  EFFB  F016         	goto	u3210
  4299  002DEE  EFF9  F016         	goto	u3211
  4300  002DF2                     u3211:
  4301  002DF2  EF11  F017         	goto	l3623
  4302  002DF6                     u3210:
  4303  002DF6  505A               	movf	___fltol@exp1^0,w,c
  4304  002DF8  0A80               	xorlw	128
  4305  002DFA  0F97               	addlw	151
  4306  002DFC  B0D8               	btfsc	status,0,c
  4307  002DFE  EF03  F017         	goto	u3221
  4308  002E02  EF05  F017         	goto	u3220
  4309  002E06                     u3221:
  4310  002E06  EF07  F017         	goto	l3619
  4311  002E0A                     u3220:
  4312  002E0A  EFCA  F016         	goto	l3599
  4313  002E0E                     l3619:
  4314  002E0E  90D8               	bcf	status,0,c
  4315  002E10  3254               	rrcf	(___fltol@f1+3)^0,f,c
  4316  002E12  3253               	rrcf	(___fltol@f1+2)^0,f,c
  4317  002E14  3252               	rrcf	(___fltol@f1+1)^0,f,c
  4318  002E16  3251               	rrcf	___fltol@f1^0,f,c
  4319  002E18  3E5A               	incfsz	___fltol@exp1^0,f,c
  4320  002E1A  EF07  F017         	goto	l3619
  4321  002E1E  EF29  F017         	goto	l3633
  4322  002E22                     l3623:
  4323  002E22  0E1F               	movlw	31
  4324  002E24  645A               	cpfsgt	___fltol@exp1^0,c
  4325  002E26  EF17  F017         	goto	u3231
  4326  002E2A  EF19  F017         	goto	u3230
  4327  002E2E                     u3231:
  4328  002E2E  EF21  F017         	goto	l3631
  4329  002E32                     u3230:
  4330  002E32  EFCA  F016         	goto	l3599
  4331  002E36                     l3629:
  4332  002E36  90D8               	bcf	status,0,c
  4333  002E38  3651               	rlcf	___fltol@f1^0,f,c
  4334  002E3A  3652               	rlcf	(___fltol@f1+1)^0,f,c
  4335  002E3C  3653               	rlcf	(___fltol@f1+2)^0,f,c
  4336  002E3E  3654               	rlcf	(___fltol@f1+3)^0,f,c
  4337  002E40  065A               	decf	___fltol@exp1^0,f,c
  4338  002E42                     l3631:
  4339  002E42  505A               	movf	___fltol@exp1^0,w,c
  4340  002E44  A4D8               	btfss	status,2,c
  4341  002E46  EF27  F017         	goto	u3241
  4342  002E4A  EF29  F017         	goto	u3240
  4343  002E4E                     u3241:
  4344  002E4E  EF1B  F017         	goto	l3629
  4345  002E52                     u3240:
  4346  002E52                     l3633:
  4347  002E52  5059               	movf	___fltol@sign1^0,w,c
  4348  002E54  B4D8               	btfsc	status,2,c
  4349  002E56  EF2F  F017         	goto	u3251
  4350  002E5A  EF31  F017         	goto	u3250
  4351  002E5E                     u3251:
  4352  002E5E  EF39  F017         	goto	l3637
  4353  002E62                     u3250:
  4354  002E62  1E54               	comf	(___fltol@f1+3)^0,f,c
  4355  002E64  1E53               	comf	(___fltol@f1+2)^0,f,c
  4356  002E66  1E52               	comf	(___fltol@f1+1)^0,f,c
  4357  002E68  6C51               	negf	___fltol@f1^0,c
  4358  002E6A  0E00               	movlw	0
  4359  002E6C  2252               	addwfc	(___fltol@f1+1)^0,f,c
  4360  002E6E  2253               	addwfc	(___fltol@f1+2)^0,f,c
  4361  002E70  2254               	addwfc	(___fltol@f1+3)^0,f,c
  4362  002E72                     l3637:
  4363  002E72  C051  F051         	movff	___fltol@f1,?___fltol
  4364  002E76  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  4365  002E7A  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  4366  002E7E  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  4367  002E82                     l831:
  4368  002E82  0012               	return		;funcret
  4369  002E84                     __end_of___fltol:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function ___flmul *****************
  4373 ;; Defined at:
  4374 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  b               4   39[COMRAM] long 
  4377 ;;  a               4   43[COMRAM] long 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  prod            4   58[COMRAM] struct .
  4380 ;;  grs             4   52[COMRAM] unsigned long 
  4381 ;;  temp            2   62[COMRAM] struct .
  4382 ;;  bexp            1   57[COMRAM] unsigned char 
  4383 ;;  aexp            1   56[COMRAM] unsigned char 
  4384 ;;  sign            1   51[COMRAM] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  4   39[COMRAM] unsigned char 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, prodl, prodh
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4394 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;Total ram usage:       25 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_determine_color_new
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text11
  4409  001836                     __ptext11:
  4410                           	callstack 0
  4411  001836                     ___flmul:
  4412                           	callstack 28
  4413  001836  502B               	movf	(___flmul@b+3)^0,w,c
  4414  001838  0B80               	andlw	128
  4415  00183A  6E34               	movwf	___flmul@sign^0,c
  4416  00183C  502B               	movf	(___flmul@b+3)^0,w,c
  4417  00183E  242B               	addwf	(___flmul@b+3)^0,w,c
  4418  001840  6E3A               	movwf	___flmul@bexp^0,c
  4419  001842  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4420  001844  EF26  F00C         	goto	u3001
  4421  001848  EF28  F00C         	goto	u3000
  4422  00184C                     u3001:
  4423  00184C  EF29  F00C         	goto	l3473
  4424  001850                     u3000:
  4425  001850  803A               	bsf	___flmul@bexp^0,0,c
  4426  001852                     l3473:
  4427  001852  503A               	movf	___flmul@bexp^0,w,c
  4428  001854  B4D8               	btfsc	status,2,c
  4429  001856  EF2F  F00C         	goto	u3011
  4430  00185A  EF31  F00C         	goto	u3010
  4431  00185E                     u3011:
  4432  00185E  EF44  F00C         	goto	l3481
  4433  001862                     u3010:
  4434  001862  283A               	incf	___flmul@bexp^0,w,c
  4435  001864  A4D8               	btfss	status,2,c
  4436  001866  EF37  F00C         	goto	u3021
  4437  00186A  EF39  F00C         	goto	u3020
  4438  00186E                     u3021:
  4439  00186E  EF41  F00C         	goto	l3479
  4440  001872                     u3020:
  4441  001872  0E00               	movlw	0
  4442  001874  6E28               	movwf	___flmul@b^0,c
  4443  001876  0E00               	movlw	0
  4444  001878  6E29               	movwf	(___flmul@b+1)^0,c
  4445  00187A  0E00               	movlw	0
  4446  00187C  6E2A               	movwf	(___flmul@b+2)^0,c
  4447  00187E  0E00               	movlw	0
  4448  001880  6E2B               	movwf	(___flmul@b+3)^0,c
  4449  001882                     l3479:
  4450  001882  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4451  001884  EF4C  F00C         	goto	l3483
  4452  001888                     l3481:
  4453  001888  0E00               	movlw	0
  4454  00188A  6E28               	movwf	___flmul@b^0,c
  4455  00188C  0E00               	movlw	0
  4456  00188E  6E29               	movwf	(___flmul@b+1)^0,c
  4457  001890  0E00               	movlw	0
  4458  001892  6E2A               	movwf	(___flmul@b+2)^0,c
  4459  001894  0E00               	movlw	0
  4460  001896  6E2B               	movwf	(___flmul@b+3)^0,c
  4461  001898                     l3483:
  4462  001898  502F               	movf	(___flmul@a+3)^0,w,c
  4463  00189A  0B80               	andlw	128
  4464  00189C  1A34               	xorwf	___flmul@sign^0,f,c
  4465  00189E  502F               	movf	(___flmul@a+3)^0,w,c
  4466  0018A0  242F               	addwf	(___flmul@a+3)^0,w,c
  4467  0018A2  6E39               	movwf	___flmul@aexp^0,c
  4468  0018A4  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4469  0018A6  EF57  F00C         	goto	u3031
  4470  0018AA  EF59  F00C         	goto	u3030
  4471  0018AE                     u3031:
  4472  0018AE  EF5A  F00C         	goto	l3491
  4473  0018B2                     u3030:
  4474  0018B2  8039               	bsf	___flmul@aexp^0,0,c
  4475  0018B4                     l3491:
  4476  0018B4  5039               	movf	___flmul@aexp^0,w,c
  4477  0018B6  B4D8               	btfsc	status,2,c
  4478  0018B8  EF60  F00C         	goto	u3041
  4479  0018BC  EF62  F00C         	goto	u3040
  4480  0018C0                     u3041:
  4481  0018C0  EF75  F00C         	goto	l3499
  4482  0018C4                     u3040:
  4483  0018C4  2839               	incf	___flmul@aexp^0,w,c
  4484  0018C6  A4D8               	btfss	status,2,c
  4485  0018C8  EF68  F00C         	goto	u3051
  4486  0018CC  EF6A  F00C         	goto	u3050
  4487  0018D0                     u3051:
  4488  0018D0  EF72  F00C         	goto	l3497
  4489  0018D4                     u3050:
  4490  0018D4  0E00               	movlw	0
  4491  0018D6  6E2C               	movwf	___flmul@a^0,c
  4492  0018D8  0E00               	movlw	0
  4493  0018DA  6E2D               	movwf	(___flmul@a+1)^0,c
  4494  0018DC  0E00               	movlw	0
  4495  0018DE  6E2E               	movwf	(___flmul@a+2)^0,c
  4496  0018E0  0E00               	movlw	0
  4497  0018E2  6E2F               	movwf	(___flmul@a+3)^0,c
  4498  0018E4                     l3497:
  4499  0018E4  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4500  0018E6  EF7D  F00C         	goto	l1148
  4501  0018EA                     l3499:
  4502  0018EA  0E00               	movlw	0
  4503  0018EC  6E2C               	movwf	___flmul@a^0,c
  4504  0018EE  0E00               	movlw	0
  4505  0018F0  6E2D               	movwf	(___flmul@a+1)^0,c
  4506  0018F2  0E00               	movlw	0
  4507  0018F4  6E2E               	movwf	(___flmul@a+2)^0,c
  4508  0018F6  0E00               	movlw	0
  4509  0018F8  6E2F               	movwf	(___flmul@a+3)^0,c
  4510  0018FA                     l1148:
  4511  0018FA  5039               	movf	___flmul@aexp^0,w,c
  4512  0018FC  B4D8               	btfsc	status,2,c
  4513  0018FE  EF83  F00C         	goto	u3061
  4514  001902  EF85  F00C         	goto	u3060
  4515  001906                     u3061:
  4516  001906  EF8D  F00C         	goto	l3503
  4517  00190A                     u3060:
  4518  00190A  503A               	movf	___flmul@bexp^0,w,c
  4519  00190C  A4D8               	btfss	status,2,c
  4520  00190E  EF8B  F00C         	goto	u3071
  4521  001912  EF8D  F00C         	goto	u3070
  4522  001916                     u3071:
  4523  001916  EF97  F00C         	goto	l3507
  4524  00191A                     u3070:
  4525  00191A                     l3503:
  4526  00191A  0E00               	movlw	0
  4527  00191C  6E28               	movwf	?___flmul^0,c
  4528  00191E  0E00               	movlw	0
  4529  001920  6E29               	movwf	(?___flmul+1)^0,c
  4530  001922  0E00               	movlw	0
  4531  001924  6E2A               	movwf	(?___flmul+2)^0,c
  4532  001926  0E00               	movlw	0
  4533  001928  6E2B               	movwf	(?___flmul+3)^0,c
  4534  00192A  EF2F  F00E         	goto	l1152
  4535  00192E                     l3507:
  4536  00192E  502E               	movf	(___flmul@a+2)^0,w,c
  4537  001930  0228               	mulwf	___flmul@b^0,c
  4538  001932  CFF3 F03F          	movff	prodl,___flmul@temp
  4539  001936  CFF4 F040          	movff	prodh,___flmul@temp+1
  4540  00193A  503F               	movf	___flmul@temp^0,w,c
  4541  00193C  6E35               	movwf	___flmul@grs^0,c
  4542  00193E  6A36               	clrf	(___flmul@grs+1)^0,c
  4543  001940  6A37               	clrf	(___flmul@grs+2)^0,c
  4544  001942  6A38               	clrf	(___flmul@grs+3)^0,c
  4545  001944  5040               	movf	(___flmul@temp+1)^0,w,c
  4546  001946  6E3B               	movwf	___flmul@prod^0,c
  4547  001948  6A3C               	clrf	(___flmul@prod+1)^0,c
  4548  00194A  6A3D               	clrf	(___flmul@prod+2)^0,c
  4549  00194C  6A3E               	clrf	(___flmul@prod+3)^0,c
  4550  00194E  502D               	movf	(___flmul@a+1)^0,w,c
  4551  001950  0229               	mulwf	(___flmul@b+1)^0,c
  4552  001952  CFF3 F03F          	movff	prodl,___flmul@temp
  4553  001956  CFF4 F040          	movff	prodh,___flmul@temp+1
  4554  00195A  503F               	movf	___flmul@temp^0,w,c
  4555  00195C  2635               	addwf	___flmul@grs^0,f,c
  4556  00195E  0E00               	movlw	0
  4557  001960  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4558  001962  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4559  001964  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4560  001966  5040               	movf	(___flmul@temp+1)^0,w,c
  4561  001968  263B               	addwf	___flmul@prod^0,f,c
  4562  00196A  0E00               	movlw	0
  4563  00196C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4564  00196E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4565  001970  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4566  001972  502C               	movf	___flmul@a^0,w,c
  4567  001974  022A               	mulwf	(___flmul@b+2)^0,c
  4568  001976  CFF3 F03F          	movff	prodl,___flmul@temp
  4569  00197A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4570  00197E  503F               	movf	___flmul@temp^0,w,c
  4571  001980  2635               	addwf	___flmul@grs^0,f,c
  4572  001982  0E00               	movlw	0
  4573  001984  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4574  001986  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4575  001988  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4576  00198A  5040               	movf	(___flmul@temp+1)^0,w,c
  4577  00198C  263B               	addwf	___flmul@prod^0,f,c
  4578  00198E  0E00               	movlw	0
  4579  001990  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4580  001992  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4581  001994  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4582  001996  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4583  00199A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4584  00199E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4585  0019A2  6A35               	clrf	___flmul@grs^0,c
  4586  0019A4  502C               	movf	___flmul@a^0,w,c
  4587  0019A6  0229               	mulwf	(___flmul@b+1)^0,c
  4588  0019A8  CFF3 F03F          	movff	prodl,___flmul@temp
  4589  0019AC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4590  0019B0  503F               	movf	___flmul@temp^0,w,c
  4591  0019B2  2635               	addwf	___flmul@grs^0,f,c
  4592  0019B4  5040               	movf	(___flmul@temp+1)^0,w,c
  4593  0019B6  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4594  0019B8  0E00               	movlw	0
  4595  0019BA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4596  0019BC  0E00               	movlw	0
  4597  0019BE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4598  0019C0  502D               	movf	(___flmul@a+1)^0,w,c
  4599  0019C2  0228               	mulwf	___flmul@b^0,c
  4600  0019C4  CFF3 F03F          	movff	prodl,___flmul@temp
  4601  0019C8  CFF4 F040          	movff	prodh,___flmul@temp+1
  4602  0019CC  503F               	movf	___flmul@temp^0,w,c
  4603  0019CE  2635               	addwf	___flmul@grs^0,f,c
  4604  0019D0  5040               	movf	(___flmul@temp+1)^0,w,c
  4605  0019D2  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4606  0019D4  0E00               	movlw	0
  4607  0019D6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4608  0019D8  0E00               	movlw	0
  4609  0019DA  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4610  0019DC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4611  0019E0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4612  0019E4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4613  0019E8  6A35               	clrf	___flmul@grs^0,c
  4614  0019EA  502C               	movf	___flmul@a^0,w,c
  4615  0019EC  0228               	mulwf	___flmul@b^0,c
  4616  0019EE  CFF3 F03F          	movff	prodl,___flmul@temp
  4617  0019F2  CFF4 F040          	movff	prodh,___flmul@temp+1
  4618  0019F6  503F               	movf	___flmul@temp^0,w,c
  4619  0019F8  2635               	addwf	___flmul@grs^0,f,c
  4620  0019FA  5040               	movf	(___flmul@temp+1)^0,w,c
  4621  0019FC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4622  0019FE  0E00               	movlw	0
  4623  001A00  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4624  001A02  0E00               	movlw	0
  4625  001A04  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4626  001A06  502E               	movf	(___flmul@a+2)^0,w,c
  4627  001A08  0229               	mulwf	(___flmul@b+1)^0,c
  4628  001A0A  CFF3 F03F          	movff	prodl,___flmul@temp
  4629  001A0E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4630  001A12  503F               	movf	___flmul@temp^0,w,c
  4631  001A14  263B               	addwf	___flmul@prod^0,f,c
  4632  001A16  5040               	movf	(___flmul@temp+1)^0,w,c
  4633  001A18  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4634  001A1A  0E00               	movlw	0
  4635  001A1C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4636  001A1E  0E00               	movlw	0
  4637  001A20  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4638  001A22  502D               	movf	(___flmul@a+1)^0,w,c
  4639  001A24  022A               	mulwf	(___flmul@b+2)^0,c
  4640  001A26  CFF3 F03F          	movff	prodl,___flmul@temp
  4641  001A2A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4642  001A2E  503F               	movf	___flmul@temp^0,w,c
  4643  001A30  263B               	addwf	___flmul@prod^0,f,c
  4644  001A32  5040               	movf	(___flmul@temp+1)^0,w,c
  4645  001A34  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4646  001A36  0E00               	movlw	0
  4647  001A38  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4648  001A3A  0E00               	movlw	0
  4649  001A3C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4650  001A3E  502E               	movf	(___flmul@a+2)^0,w,c
  4651  001A40  022A               	mulwf	(___flmul@b+2)^0,c
  4652  001A42  CFF3 F03F          	movff	prodl,___flmul@temp
  4653  001A46  CFF4 F040          	movff	prodh,___flmul@temp+1
  4654  001A4A  503F               	movf	___flmul@temp^0,w,c
  4655  001A4C  6E30               	movwf	??___flmul^0,c
  4656  001A4E  5040               	movf	(___flmul@temp+1)^0,w,c
  4657  001A50  6E31               	movwf	(??___flmul+1)^0,c
  4658  001A52  6A32               	clrf	(??___flmul+2)^0,c
  4659  001A54  6A33               	clrf	(??___flmul+3)^0,c
  4660  001A56  C032  F033         	movff	??___flmul+2,??___flmul+3
  4661  001A5A  C031  F032         	movff	??___flmul+1,??___flmul+2
  4662  001A5E  C030  F031         	movff	??___flmul,??___flmul+1
  4663  001A62  6A30               	clrf	??___flmul^0,c
  4664  001A64  5030               	movf	??___flmul^0,w,c
  4665  001A66  263B               	addwf	___flmul@prod^0,f,c
  4666  001A68  5031               	movf	(??___flmul+1)^0,w,c
  4667  001A6A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4668  001A6C  5032               	movf	(??___flmul+2)^0,w,c
  4669  001A6E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4670  001A70  5033               	movf	(??___flmul+3)^0,w,c
  4671  001A72  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4672  001A74  C035  F030         	movff	___flmul@grs,??___flmul
  4673  001A78  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4674  001A7C  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4675  001A80  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4676  001A84  0E19               	movlw	25
  4677  001A86  EF4A  F00D         	goto	u3080
  4678  001A8A                     u3085:
  4679  001A8A  90D8               	bcf	status,0,c
  4680  001A8C  3233               	rrcf	(??___flmul+3)^0,f,c
  4681  001A8E  3232               	rrcf	(??___flmul+2)^0,f,c
  4682  001A90  3231               	rrcf	(??___flmul+1)^0,f,c
  4683  001A92  3230               	rrcf	??___flmul^0,f,c
  4684  001A94                     u3080:
  4685  001A94  2EE8               	decfsz	wreg,f,c
  4686  001A96  EF45  F00D         	goto	u3085
  4687  001A9A  5030               	movf	??___flmul^0,w,c
  4688  001A9C  263B               	addwf	___flmul@prod^0,f,c
  4689  001A9E  5031               	movf	(??___flmul+1)^0,w,c
  4690  001AA0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4691  001AA2  5032               	movf	(??___flmul+2)^0,w,c
  4692  001AA4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4693  001AA6  5033               	movf	(??___flmul+3)^0,w,c
  4694  001AA8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4695  001AAA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4696  001AAE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4697  001AB2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4698  001AB6  6A35               	clrf	___flmul@grs^0,c
  4699  001AB8  5039               	movf	___flmul@aexp^0,w,c
  4700  001ABA  C03A  F030         	movff	___flmul@bexp,??___flmul
  4701  001ABE  6A31               	clrf	(??___flmul+1)^0,c
  4702  001AC0  2630               	addwf	??___flmul^0,f,c
  4703  001AC2  0E00               	movlw	0
  4704  001AC4  2231               	addwfc	(??___flmul+1)^0,f,c
  4705  001AC6  0E82               	movlw	130
  4706  001AC8  2430               	addwf	??___flmul^0,w,c
  4707  001ACA  6E3F               	movwf	___flmul@temp^0,c
  4708  001ACC  0EFF               	movlw	255
  4709  001ACE  2031               	addwfc	(??___flmul+1)^0,w,c
  4710  001AD0  6E40               	movwf	(___flmul@temp+1)^0,c
  4711  001AD2  EF80  F00D         	goto	l3555
  4712  001AD6                     l3549:
  4713  001AD6  90D8               	bcf	status,0,c
  4714  001AD8  363B               	rlcf	___flmul@prod^0,f,c
  4715  001ADA  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4716  001ADC  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4717  001ADE  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4718  001AE0  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4719  001AE2  EF75  F00D         	goto	u3091
  4720  001AE6  EF77  F00D         	goto	u3090
  4721  001AEA                     u3091:
  4722  001AEA  EF78  F00D         	goto	l1155
  4723  001AEE                     u3090:
  4724  001AEE  803B               	bsf	___flmul@prod^0,0,c
  4725  001AF0                     l1155:
  4726  001AF0  90D8               	bcf	status,0,c
  4727  001AF2  3635               	rlcf	___flmul@grs^0,f,c
  4728  001AF4  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4729  001AF6  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4730  001AF8  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4731  001AFA  063F               	decf	___flmul@temp^0,f,c
  4732  001AFC  A0D8               	btfss	status,0,c
  4733  001AFE  0640               	decf	(___flmul@temp+1)^0,f,c
  4734  001B00                     l3555:
  4735  001B00  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4736  001B02  EF85  F00D         	goto	u3101
  4737  001B06  EF87  F00D         	goto	u3100
  4738  001B0A                     u3101:
  4739  001B0A  EF6B  F00D         	goto	l3549
  4740  001B0E                     u3100:
  4741  001B0E  0E00               	movlw	0
  4742  001B10  6E39               	movwf	___flmul@aexp^0,c
  4743  001B12  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4744  001B14  EF8E  F00D         	goto	u3111
  4745  001B18  EF90  F00D         	goto	u3110
  4746  001B1C                     u3111:
  4747  001B1C  EFB4  F00D         	goto	l1157
  4748  001B20                     u3110:
  4749  001B20  0EFF               	movlw	255
  4750  001B22  1435               	andwf	___flmul@grs^0,w,c
  4751  001B24  6E30               	movwf	??___flmul^0,c
  4752  001B26  0EFF               	movlw	255
  4753  001B28  1436               	andwf	(___flmul@grs+1)^0,w,c
  4754  001B2A  6E31               	movwf	(??___flmul+1)^0,c
  4755  001B2C  0EFF               	movlw	255
  4756  001B2E  1437               	andwf	(___flmul@grs+2)^0,w,c
  4757  001B30  6E32               	movwf	(??___flmul+2)^0,c
  4758  001B32  0E7F               	movlw	127
  4759  001B34  1438               	andwf	(___flmul@grs+3)^0,w,c
  4760  001B36  6E33               	movwf	(??___flmul+3)^0,c
  4761  001B38  5030               	movf	??___flmul^0,w,c
  4762  001B3A  1031               	iorwf	(??___flmul+1)^0,w,c
  4763  001B3C  1032               	iorwf	(??___flmul+2)^0,w,c
  4764  001B3E  1033               	iorwf	(??___flmul+3)^0,w,c
  4765  001B40  B4D8               	btfsc	status,2,c
  4766  001B42  EFA5  F00D         	goto	u3121
  4767  001B46  EFA7  F00D         	goto	u3120
  4768  001B4A                     u3121:
  4769  001B4A  EFAB  F00D         	goto	l1158
  4770  001B4E                     u3120:
  4771  001B4E                     l3563:
  4772  001B4E  0E01               	movlw	1
  4773  001B50  6E39               	movwf	___flmul@aexp^0,c
  4774  001B52  EFB4  F00D         	goto	l1157
  4775  001B56                     l1158:
  4776  001B56  A03B               	btfss	___flmul@prod^0,0,c
  4777  001B58  EFB0  F00D         	goto	u3131
  4778  001B5C  EFB2  F00D         	goto	u3130
  4779  001B60                     u3131:
  4780  001B60  EFB4  F00D         	goto	l1157
  4781  001B64                     u3130:
  4782  001B64  EFA7  F00D         	goto	l3563
  4783  001B68                     l1157:
  4784  001B68  5039               	movf	___flmul@aexp^0,w,c
  4785  001B6A  B4D8               	btfsc	status,2,c
  4786  001B6C  EFBA  F00D         	goto	u3141
  4787  001B70  EFBC  F00D         	goto	u3140
  4788  001B74                     u3141:
  4789  001B74  EFE0  F00D         	goto	l3575
  4790  001B78                     u3140:
  4791  001B78  0E01               	movlw	1
  4792  001B7A  263B               	addwf	___flmul@prod^0,f,c
  4793  001B7C  0E00               	movlw	0
  4794  001B7E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4795  001B80  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4796  001B82  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4797  001B84  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4798  001B86  EFC7  F00D         	goto	u3151
  4799  001B8A  EFC9  F00D         	goto	u3150
  4800  001B8E                     u3151:
  4801  001B8E  EFE0  F00D         	goto	l3575
  4802  001B92                     u3150:
  4803  001B92  C03B  F030         	movff	___flmul@prod,??___flmul
  4804  001B96  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4805  001B9A  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4806  001B9E  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4807  001BA2  3433               	rlcf	(??___flmul+3)^0,w,c
  4808  001BA4  3233               	rrcf	(??___flmul+3)^0,f,c
  4809  001BA6  3232               	rrcf	(??___flmul+2)^0,f,c
  4810  001BA8  3231               	rrcf	(??___flmul+1)^0,f,c
  4811  001BAA  3230               	rrcf	??___flmul^0,f,c
  4812  001BAC  C030  F03B         	movff	??___flmul,___flmul@prod
  4813  001BB0  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4814  001BB4  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4815  001BB8  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4816  001BBC  4A3F               	infsnz	___flmul@temp^0,f,c
  4817  001BBE  2A40               	incf	(___flmul@temp+1)^0,f,c
  4818  001BC0                     l3575:
  4819  001BC0  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4820  001BC2  EFEB  F00D         	goto	u3161
  4821  001BC6  5040               	movf	(___flmul@temp+1)^0,w,c
  4822  001BC8  E108               	bnz	u3160
  4823  001BCA  283F               	incf	___flmul@temp^0,w,c
  4824  001BCC  A0D8               	btfss	status,0,c
  4825  001BCE  EFEB  F00D         	goto	u3161
  4826  001BD2  EFED  F00D         	goto	u3160
  4827  001BD6                     u3161:
  4828  001BD6  EFF7  F00D         	goto	l3579
  4829  001BDA                     u3160:
  4830  001BDA  0E00               	movlw	0
  4831  001BDC  6E3B               	movwf	___flmul@prod^0,c
  4832  001BDE  0E00               	movlw	0
  4833  001BE0  6E3C               	movwf	(___flmul@prod+1)^0,c
  4834  001BE2  0E80               	movlw	128
  4835  001BE4  6E3D               	movwf	(___flmul@prod+2)^0,c
  4836  001BE6  0E7F               	movlw	127
  4837  001BE8  6E3E               	movwf	(___flmul@prod+3)^0,c
  4838  001BEA  EF25  F00E         	goto	l3591
  4839  001BEE                     l3579:
  4840  001BEE  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4841  001BF0  EF04  F00E         	goto	u3170
  4842  001BF4  5040               	movf	(___flmul@temp+1)^0,w,c
  4843  001BF6  E106               	bnz	u3171
  4844  001BF8  043F               	decf	___flmul@temp^0,w,c
  4845  001BFA  B0D8               	btfsc	status,0,c
  4846  001BFC  EF02  F00E         	goto	u3171
  4847  001C00  EF04  F00E         	goto	u3170
  4848  001C04                     u3171:
  4849  001C04  EF10  F00E         	goto	l1165
  4850  001C08                     u3170:
  4851  001C08  0E00               	movlw	0
  4852  001C0A  6E3B               	movwf	___flmul@prod^0,c
  4853  001C0C  0E00               	movlw	0
  4854  001C0E  6E3C               	movwf	(___flmul@prod+1)^0,c
  4855  001C10  0E00               	movlw	0
  4856  001C12  6E3D               	movwf	(___flmul@prod+2)^0,c
  4857  001C14  0E00               	movlw	0
  4858  001C16  6E3E               	movwf	(___flmul@prod+3)^0,c
  4859  001C18  0E00               	movlw	0
  4860  001C1A  6E34               	movwf	___flmul@sign^0,c
  4861  001C1C  EF25  F00E         	goto	l3591
  4862  001C20                     l1165:
  4863  001C20  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4864  001C24  0EFF               	movlw	255
  4865  001C26  163B               	andwf	___flmul@prod^0,f,c
  4866  001C28  0EFF               	movlw	255
  4867  001C2A  163C               	andwf	(___flmul@prod+1)^0,f,c
  4868  001C2C  0E7F               	movlw	127
  4869  001C2E  163D               	andwf	(___flmul@prod+2)^0,f,c
  4870  001C30  0E00               	movlw	0
  4871  001C32  163E               	andwf	(___flmul@prod+3)^0,f,c
  4872  001C34  A03A               	btfss	___flmul@bexp^0,0,c
  4873  001C36  EF1F  F00E         	goto	u3181
  4874  001C3A  EF21  F00E         	goto	u3180
  4875  001C3E                     u3181:
  4876  001C3E  EF22  F00E         	goto	l3589
  4877  001C42                     u3180:
  4878  001C42  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4879  001C44                     l3589:
  4880  001C44  90D8               	bcf	status,0,c
  4881  001C46  303A               	rrcf	___flmul@bexp^0,w,c
  4882  001C48  6E3E               	movwf	(___flmul@prod+3)^0,c
  4883  001C4A                     l3591:
  4884  001C4A  5034               	movf	___flmul@sign^0,w,c
  4885  001C4C  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4886  001C4E  C03B  F028         	movff	___flmul@prod,?___flmul
  4887  001C52  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4888  001C56  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4889  001C5A  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4890  001C5E                     l1152:
  4891  001C5E  0012               	return		;funcret
  4892  001C60                     __end_of___flmul:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function ___fldiv *****************
  4896 ;; Defined at:
  4897 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  b               4   14[COMRAM] unsigned char 
  4900 ;;  a               4   18[COMRAM] unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  grs             4   33[COMRAM] unsigned long 
  4903 ;;  rem             4   26[COMRAM] unsigned long 
  4904 ;;  new_exp         2   31[COMRAM] short 
  4905 ;;  aexp            1   38[COMRAM] unsigned char 
  4906 ;;  bexp            1   37[COMRAM] unsigned char 
  4907 ;;  sign            1   30[COMRAM] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  4   14[COMRAM] unsigned char 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4917 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;Total ram usage:       25 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_determine_color_new
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text12
  4932  002026                     __ptext12:
  4933                           	callstack 0
  4934  002026                     ___fldiv:
  4935                           	callstack 28
  4936  002026  5012               	movf	(___fldiv@b+3)^0,w,c
  4937  002028  0B80               	andlw	128
  4938  00202A  6E1F               	movwf	___fldiv@sign^0,c
  4939  00202C  5012               	movf	(___fldiv@b+3)^0,w,c
  4940  00202E  2412               	addwf	(___fldiv@b+3)^0,w,c
  4941  002030  6E26               	movwf	___fldiv@bexp^0,c
  4942  002032  AE11               	btfss	(___fldiv@b+2)^0,7,c
  4943  002034  EF1E  F010         	goto	u2771
  4944  002038  EF20  F010         	goto	u2770
  4945  00203C                     u2771:
  4946  00203C  EF21  F010         	goto	l3335
  4947  002040                     u2770:
  4948  002040  8026               	bsf	___fldiv@bexp^0,0,c
  4949  002042                     l3335:
  4950  002042  5026               	movf	___fldiv@bexp^0,w,c
  4951  002044  B4D8               	btfsc	status,2,c
  4952  002046  EF27  F010         	goto	u2781
  4953  00204A  EF29  F010         	goto	u2780
  4954  00204E                     u2781:
  4955  00204E  EF3E  F010         	goto	l3345
  4956  002052                     u2780:
  4957  002052  2826               	incf	___fldiv@bexp^0,w,c
  4958  002054  A4D8               	btfss	status,2,c
  4959  002056  EF2F  F010         	goto	u2791
  4960  00205A  EF31  F010         	goto	u2790
  4961  00205E                     u2791:
  4962  00205E  EF39  F010         	goto	l3341
  4963  002062                     u2790:
  4964  002062  0E00               	movlw	0
  4965  002064  6E0F               	movwf	___fldiv@b^0,c
  4966  002066  0E00               	movlw	0
  4967  002068  6E10               	movwf	(___fldiv@b+1)^0,c
  4968  00206A  0E00               	movlw	0
  4969  00206C  6E11               	movwf	(___fldiv@b+2)^0,c
  4970  00206E  0E00               	movlw	0
  4971  002070  6E12               	movwf	(___fldiv@b+3)^0,c
  4972  002072                     l3341:
  4973  002072  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4974  002074  0E00               	movlw	0
  4975  002076  6E12               	movwf	(___fldiv@b+3)^0,c
  4976  002078  EF46  F010         	goto	l3347
  4977  00207C                     l3345:
  4978  00207C  0E00               	movlw	0
  4979  00207E  6E0F               	movwf	___fldiv@b^0,c
  4980  002080  0E00               	movlw	0
  4981  002082  6E10               	movwf	(___fldiv@b+1)^0,c
  4982  002084  0E00               	movlw	0
  4983  002086  6E11               	movwf	(___fldiv@b+2)^0,c
  4984  002088  0E00               	movlw	0
  4985  00208A  6E12               	movwf	(___fldiv@b+3)^0,c
  4986  00208C                     l3347:
  4987  00208C  5016               	movf	(___fldiv@a+3)^0,w,c
  4988  00208E  0B80               	andlw	128
  4989  002090  1A1F               	xorwf	___fldiv@sign^0,f,c
  4990  002092  5016               	movf	(___fldiv@a+3)^0,w,c
  4991  002094  2416               	addwf	(___fldiv@a+3)^0,w,c
  4992  002096  6E27               	movwf	___fldiv@aexp^0,c
  4993  002098  AE15               	btfss	(___fldiv@a+2)^0,7,c
  4994  00209A  EF51  F010         	goto	u2801
  4995  00209E  EF53  F010         	goto	u2800
  4996  0020A2                     u2801:
  4997  0020A2  EF54  F010         	goto	l3355
  4998  0020A6                     u2800:
  4999  0020A6  8027               	bsf	___fldiv@aexp^0,0,c
  5000  0020A8                     l3355:
  5001  0020A8  5027               	movf	___fldiv@aexp^0,w,c
  5002  0020AA  B4D8               	btfsc	status,2,c
  5003  0020AC  EF5A  F010         	goto	u2811
  5004  0020B0  EF5C  F010         	goto	u2810
  5005  0020B4                     u2811:
  5006  0020B4  EF71  F010         	goto	l3365
  5007  0020B8                     u2810:
  5008  0020B8  2827               	incf	___fldiv@aexp^0,w,c
  5009  0020BA  A4D8               	btfss	status,2,c
  5010  0020BC  EF62  F010         	goto	u2821
  5011  0020C0  EF64  F010         	goto	u2820
  5012  0020C4                     u2821:
  5013  0020C4  EF6C  F010         	goto	l3361
  5014  0020C8                     u2820:
  5015  0020C8  0E00               	movlw	0
  5016  0020CA  6E13               	movwf	___fldiv@a^0,c
  5017  0020CC  0E00               	movlw	0
  5018  0020CE  6E14               	movwf	(___fldiv@a+1)^0,c
  5019  0020D0  0E00               	movlw	0
  5020  0020D2  6E15               	movwf	(___fldiv@a+2)^0,c
  5021  0020D4  0E00               	movlw	0
  5022  0020D6  6E16               	movwf	(___fldiv@a+3)^0,c
  5023  0020D8                     l3361:
  5024  0020D8  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5025  0020DA  0E00               	movlw	0
  5026  0020DC  6E16               	movwf	(___fldiv@a+3)^0,c
  5027  0020DE  EF79  F010         	goto	l3367
  5028  0020E2                     l3365:
  5029  0020E2  0E00               	movlw	0
  5030  0020E4  6E13               	movwf	___fldiv@a^0,c
  5031  0020E6  0E00               	movlw	0
  5032  0020E8  6E14               	movwf	(___fldiv@a+1)^0,c
  5033  0020EA  0E00               	movlw	0
  5034  0020EC  6E15               	movwf	(___fldiv@a+2)^0,c
  5035  0020EE  0E00               	movlw	0
  5036  0020F0  6E16               	movwf	(___fldiv@a+3)^0,c
  5037  0020F2                     l3367:
  5038  0020F2  5013               	movf	___fldiv@a^0,w,c
  5039  0020F4  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5040  0020F6  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5041  0020F8  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5042  0020FA  A4D8               	btfss	status,2,c
  5043  0020FC  EF82  F010         	goto	u2831
  5044  002100  EF84  F010         	goto	u2830
  5045  002104                     u2831:
  5046  002104  EF9C  F010         	goto	l3379
  5047  002108                     u2830:
  5048  002108  0E00               	movlw	0
  5049  00210A  6E0F               	movwf	___fldiv@b^0,c
  5050  00210C  0E00               	movlw	0
  5051  00210E  6E10               	movwf	(___fldiv@b+1)^0,c
  5052  002110  0E00               	movlw	0
  5053  002112  6E11               	movwf	(___fldiv@b+2)^0,c
  5054  002114  0E00               	movlw	0
  5055  002116  6E12               	movwf	(___fldiv@b+3)^0,c
  5056  002118  0E80               	movlw	128
  5057  00211A  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5058  00211C  0E7F               	movlw	127
  5059  00211E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5060  002120                     l3373:
  5061  002120  501F               	movf	___fldiv@sign^0,w,c
  5062  002122  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5063  002124  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5064  002128  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5065  00212C  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5066  002130  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5067  002134  EFDF  F011         	goto	l1116
  5068  002138                     l3379:
  5069  002138  5026               	movf	___fldiv@bexp^0,w,c
  5070  00213A  A4D8               	btfss	status,2,c
  5071  00213C  EFA2  F010         	goto	u2841
  5072  002140  EFA4  F010         	goto	u2840
  5073  002144                     u2841:
  5074  002144  EFAE  F010         	goto	l3387
  5075  002148                     u2840:
  5076  002148  0E00               	movlw	0
  5077  00214A  6E0F               	movwf	?___fldiv^0,c
  5078  00214C  0E00               	movlw	0
  5079  00214E  6E10               	movwf	(?___fldiv+1)^0,c
  5080  002150  0E00               	movlw	0
  5081  002152  6E11               	movwf	(?___fldiv+2)^0,c
  5082  002154  0E00               	movlw	0
  5083  002156  6E12               	movwf	(?___fldiv+3)^0,c
  5084  002158  EFDF  F011         	goto	l1116
  5085  00215C                     l3387:
  5086  00215C  5027               	movf	___fldiv@aexp^0,w,c
  5087  00215E  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5088  002162  6A18               	clrf	(??___fldiv+1)^0,c
  5089  002164  5E17               	subwf	??___fldiv^0,f,c
  5090  002166  0E00               	movlw	0
  5091  002168  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5092  00216A  0E7F               	movlw	127
  5093  00216C  2417               	addwf	??___fldiv^0,w,c
  5094  00216E  6E20               	movwf	___fldiv@new_exp^0,c
  5095  002170  0E00               	movlw	0
  5096  002172  2018               	addwfc	(??___fldiv+1)^0,w,c
  5097  002174  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5098  002176  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5099  00217A  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5100  00217E  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5101  002182  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5102  002186  0E00               	movlw	0
  5103  002188  6E0F               	movwf	___fldiv@b^0,c
  5104  00218A  0E00               	movlw	0
  5105  00218C  6E10               	movwf	(___fldiv@b+1)^0,c
  5106  00218E  0E00               	movlw	0
  5107  002190  6E11               	movwf	(___fldiv@b+2)^0,c
  5108  002192  0E00               	movlw	0
  5109  002194  6E12               	movwf	(___fldiv@b+3)^0,c
  5110  002196  0E00               	movlw	0
  5111  002198  6E22               	movwf	___fldiv@grs^0,c
  5112  00219A  0E00               	movlw	0
  5113  00219C  6E23               	movwf	(___fldiv@grs+1)^0,c
  5114  00219E  0E00               	movlw	0
  5115  0021A0  6E24               	movwf	(___fldiv@grs+2)^0,c
  5116  0021A2  0E00               	movlw	0
  5117  0021A4  6E25               	movwf	(___fldiv@grs+3)^0,c
  5118  0021A6  0E00               	movlw	0
  5119  0021A8  6E27               	movwf	___fldiv@aexp^0,c
  5120  0021AA  EF0F  F011         	goto	l1118
  5121  0021AE                     l3397:
  5122  0021AE  5027               	movf	___fldiv@aexp^0,w,c
  5123  0021B0  B4D8               	btfsc	status,2,c
  5124  0021B2  EFDD  F010         	goto	u2851
  5125  0021B6  EFDF  F010         	goto	u2850
  5126  0021BA                     u2851:
  5127  0021BA  EFF6  F010         	goto	l3405
  5128  0021BE                     u2850:
  5129  0021BE  90D8               	bcf	status,0,c
  5130  0021C0  361B               	rlcf	___fldiv@rem^0,f,c
  5131  0021C2  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5132  0021C4  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5133  0021C6  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5134  0021C8  90D8               	bcf	status,0,c
  5135  0021CA  360F               	rlcf	___fldiv@b^0,f,c
  5136  0021CC  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5137  0021CE  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5138  0021D0  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5139  0021D2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5140  0021D4  EFEE  F010         	goto	u2861
  5141  0021D8  EFF0  F010         	goto	u2860
  5142  0021DC                     u2861:
  5143  0021DC  EFF1  F010         	goto	l1121
  5144  0021E0                     u2860:
  5145  0021E0  800F               	bsf	___fldiv@b^0,0,c
  5146  0021E2                     l1121:
  5147  0021E2  90D8               	bcf	status,0,c
  5148  0021E4  3622               	rlcf	___fldiv@grs^0,f,c
  5149  0021E6  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5150  0021E8  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5151  0021EA  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5152  0021EC                     l3405:
  5153  0021EC  5013               	movf	___fldiv@a^0,w,c
  5154  0021EE  5C1B               	subwf	___fldiv@rem^0,w,c
  5155  0021F0  5014               	movf	(___fldiv@a+1)^0,w,c
  5156  0021F2  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5157  0021F4  5015               	movf	(___fldiv@a+2)^0,w,c
  5158  0021F6  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5159  0021F8  5016               	movf	(___fldiv@a+3)^0,w,c
  5160  0021FA  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5161  0021FC  A0D8               	btfss	status,0,c
  5162  0021FE  EF03  F011         	goto	u2871
  5163  002202  EF05  F011         	goto	u2870
  5164  002206                     u2871:
  5165  002206  EF0E  F011         	goto	l3411
  5166  00220A                     u2870:
  5167  00220A  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5168  00220C  5013               	movf	___fldiv@a^0,w,c
  5169  00220E  5E1B               	subwf	___fldiv@rem^0,f,c
  5170  002210  5014               	movf	(___fldiv@a+1)^0,w,c
  5171  002212  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5172  002214  5015               	movf	(___fldiv@a+2)^0,w,c
  5173  002216  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5174  002218  5016               	movf	(___fldiv@a+3)^0,w,c
  5175  00221A  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5176  00221C                     l3411:
  5177  00221C  2A27               	incf	___fldiv@aexp^0,f,c
  5178  00221E                     l1118:
  5179  00221E  0E19               	movlw	25
  5180  002220  6427               	cpfsgt	___fldiv@aexp^0,c
  5181  002222  EF15  F011         	goto	u2881
  5182  002226  EF17  F011         	goto	u2880
  5183  00222A                     u2881:
  5184  00222A  EFD7  F010         	goto	l3397
  5185  00222E                     u2880:
  5186  00222E  501B               	movf	___fldiv@rem^0,w,c
  5187  002230  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5188  002232  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5189  002234  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5190  002236  B4D8               	btfsc	status,2,c
  5191  002238  EF20  F011         	goto	u2891
  5192  00223C  EF22  F011         	goto	u2890
  5193  002240                     u2891:
  5194  002240  EF3A  F011         	goto	l3423
  5195  002244                     u2890:
  5196  002244  8022               	bsf	___fldiv@grs^0,0,c
  5197  002246  EF3A  F011         	goto	l3423
  5198  00224A                     l3417:
  5199  00224A  90D8               	bcf	status,0,c
  5200  00224C  360F               	rlcf	___fldiv@b^0,f,c
  5201  00224E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5202  002250  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5203  002252  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5204  002254  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5205  002256  EF2F  F011         	goto	u2901
  5206  00225A  EF31  F011         	goto	u2900
  5207  00225E                     u2901:
  5208  00225E  EF32  F011         	goto	l1127
  5209  002262                     u2900:
  5210  002262  800F               	bsf	___fldiv@b^0,0,c
  5211  002264                     l1127:
  5212  002264  90D8               	bcf	status,0,c
  5213  002266  3622               	rlcf	___fldiv@grs^0,f,c
  5214  002268  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5215  00226A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5216  00226C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5217  00226E  0620               	decf	___fldiv@new_exp^0,f,c
  5218  002270  A0D8               	btfss	status,0,c
  5219  002272  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5220  002274                     l3423:
  5221  002274  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5222  002276  EF3F  F011         	goto	u2911
  5223  00227A  EF41  F011         	goto	u2910
  5224  00227E                     u2911:
  5225  00227E  EF25  F011         	goto	l3417
  5226  002282                     u2910:
  5227  002282  0E00               	movlw	0
  5228  002284  6E27               	movwf	___fldiv@aexp^0,c
  5229  002286  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5230  002288  EF48  F011         	goto	u2921
  5231  00228C  EF4A  F011         	goto	u2920
  5232  002290                     u2921:
  5233  002290  EF6E  F011         	goto	l1129
  5234  002294                     u2920:
  5235  002294  0EFF               	movlw	255
  5236  002296  1422               	andwf	___fldiv@grs^0,w,c
  5237  002298  6E17               	movwf	??___fldiv^0,c
  5238  00229A  0EFF               	movlw	255
  5239  00229C  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5240  00229E  6E18               	movwf	(??___fldiv+1)^0,c
  5241  0022A0  0EFF               	movlw	255
  5242  0022A2  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5243  0022A4  6E19               	movwf	(??___fldiv+2)^0,c
  5244  0022A6  0E7F               	movlw	127
  5245  0022A8  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5246  0022AA  6E1A               	movwf	(??___fldiv+3)^0,c
  5247  0022AC  5017               	movf	??___fldiv^0,w,c
  5248  0022AE  1018               	iorwf	(??___fldiv+1)^0,w,c
  5249  0022B0  1019               	iorwf	(??___fldiv+2)^0,w,c
  5250  0022B2  101A               	iorwf	(??___fldiv+3)^0,w,c
  5251  0022B4  B4D8               	btfsc	status,2,c
  5252  0022B6  EF5F  F011         	goto	u2931
  5253  0022BA  EF61  F011         	goto	u2930
  5254  0022BE                     u2931:
  5255  0022BE  EF65  F011         	goto	l1130
  5256  0022C2                     u2930:
  5257  0022C2                     l3431:
  5258  0022C2  0E01               	movlw	1
  5259  0022C4  6E27               	movwf	___fldiv@aexp^0,c
  5260  0022C6  EF6E  F011         	goto	l1129
  5261  0022CA                     l1130:
  5262  0022CA  A00F               	btfss	___fldiv@b^0,0,c
  5263  0022CC  EF6A  F011         	goto	u2941
  5264  0022D0  EF6C  F011         	goto	u2940
  5265  0022D4                     u2941:
  5266  0022D4  EF6E  F011         	goto	l1129
  5267  0022D8                     u2940:
  5268  0022D8  EF61  F011         	goto	l3431
  5269  0022DC                     l1129:
  5270  0022DC  5027               	movf	___fldiv@aexp^0,w,c
  5271  0022DE  B4D8               	btfsc	status,2,c
  5272  0022E0  EF74  F011         	goto	u2951
  5273  0022E4  EF76  F011         	goto	u2950
  5274  0022E8                     u2951:
  5275  0022E8  EF9A  F011         	goto	l3443
  5276  0022EC                     u2950:
  5277  0022EC  0E01               	movlw	1
  5278  0022EE  260F               	addwf	___fldiv@b^0,f,c
  5279  0022F0  0E00               	movlw	0
  5280  0022F2  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5281  0022F4  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5282  0022F6  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5283  0022F8  A012               	btfss	(___fldiv@b+3)^0,0,c
  5284  0022FA  EF81  F011         	goto	u2961
  5285  0022FE  EF83  F011         	goto	u2960
  5286  002302                     u2961:
  5287  002302  EF9A  F011         	goto	l3443
  5288  002306                     u2960:
  5289  002306  C00F  F017         	movff	___fldiv@b,??___fldiv
  5290  00230A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5291  00230E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5292  002312  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5293  002316  341A               	rlcf	(??___fldiv+3)^0,w,c
  5294  002318  321A               	rrcf	(??___fldiv+3)^0,f,c
  5295  00231A  3219               	rrcf	(??___fldiv+2)^0,f,c
  5296  00231C  3218               	rrcf	(??___fldiv+1)^0,f,c
  5297  00231E  3217               	rrcf	??___fldiv^0,f,c
  5298  002320  C017  F00F         	movff	??___fldiv,___fldiv@b
  5299  002324  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5300  002328  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5301  00232C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5302  002330  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5303  002332  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5304  002334                     l3443:
  5305  002334  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5306  002336  EFA5  F011         	goto	u2971
  5307  00233A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5308  00233C  E108               	bnz	u2970
  5309  00233E  2820               	incf	___fldiv@new_exp^0,w,c
  5310  002340  A0D8               	btfss	status,0,c
  5311  002342  EFA5  F011         	goto	u2971
  5312  002346  EFA7  F011         	goto	u2970
  5313  00234A                     u2971:
  5314  00234A  EFB2  F011         	goto	l3447
  5315  00234E                     u2970:
  5316  00234E  0E00               	movlw	0
  5317  002350  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5318  002352  6820               	setf	___fldiv@new_exp^0,c
  5319  002354  0E00               	movlw	0
  5320  002356  6E0F               	movwf	___fldiv@b^0,c
  5321  002358  0E00               	movlw	0
  5322  00235A  6E10               	movwf	(___fldiv@b+1)^0,c
  5323  00235C  0E00               	movlw	0
  5324  00235E  6E11               	movwf	(___fldiv@b+2)^0,c
  5325  002360  0E00               	movlw	0
  5326  002362  6E12               	movwf	(___fldiv@b+3)^0,c
  5327  002364                     l3447:
  5328  002364  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5329  002366  EFBF  F011         	goto	u2980
  5330  00236A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5331  00236C  E106               	bnz	u2981
  5332  00236E  0420               	decf	___fldiv@new_exp^0,w,c
  5333  002370  B0D8               	btfsc	status,0,c
  5334  002372  EFBD  F011         	goto	u2981
  5335  002376  EFBF  F011         	goto	u2980
  5336  00237A                     u2981:
  5337  00237A  EFCD  F011         	goto	l3451
  5338  00237E                     u2980:
  5339  00237E  0E00               	movlw	0
  5340  002380  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5341  002382  0E00               	movlw	0
  5342  002384  6E20               	movwf	___fldiv@new_exp^0,c
  5343  002386  0E00               	movlw	0
  5344  002388  6E0F               	movwf	___fldiv@b^0,c
  5345  00238A  0E00               	movlw	0
  5346  00238C  6E10               	movwf	(___fldiv@b+1)^0,c
  5347  00238E  0E00               	movlw	0
  5348  002390  6E11               	movwf	(___fldiv@b+2)^0,c
  5349  002392  0E00               	movlw	0
  5350  002394  6E12               	movwf	(___fldiv@b+3)^0,c
  5351  002396  0E00               	movlw	0
  5352  002398  6E1F               	movwf	___fldiv@sign^0,c
  5353  00239A                     l3451:
  5354  00239A  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5355  00239E  A026               	btfss	___fldiv@bexp^0,0,c
  5356  0023A0  EFD4  F011         	goto	u2991
  5357  0023A4  EFD6  F011         	goto	u2990
  5358  0023A8                     u2991:
  5359  0023A8  EFD9  F011         	goto	l3457
  5360  0023AC                     u2990:
  5361  0023AC  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5362  0023AE  EFDA  F011         	goto	l3459
  5363  0023B2                     l3457:
  5364  0023B2  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5365  0023B4                     l3459:
  5366  0023B4  90D8               	bcf	status,0,c
  5367  0023B6  3026               	rrcf	___fldiv@bexp^0,w,c
  5368  0023B8  6E12               	movwf	(___fldiv@b+3)^0,c
  5369  0023BA  EF90  F010         	goto	l3373
  5370  0023BE                     l1116:
  5371  0023BE  0012               	return		;funcret
  5372  0023C0                     __end_of___fldiv:
  5373                           	callstack 0
  5374                           
  5375 ;; *************** function ___fladd *****************
  5376 ;; Defined at:
  5377 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  b               4   64[COMRAM] unsigned char 
  5380 ;;  a               4   68[COMRAM] unsigned char 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  grs             1   79[COMRAM] unsigned char 
  5383 ;;  bexp            1   78[COMRAM] unsigned char 
  5384 ;;  aexp            1   77[COMRAM] unsigned char 
  5385 ;;  signs           1   76[COMRAM] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  4   64[COMRAM] unsigned char 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;Total ram usage:       16 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_determine_color_new
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text13
  5410  001376                     __ptext13:
  5411                           	callstack 0
  5412  001376                     ___fladd:
  5413                           	callstack 28
  5414  001376  5044               	movf	(___fladd@b+3)^0,w,c
  5415  001378  0B80               	andlw	128
  5416  00137A  6E4D               	movwf	___fladd@signs^0,c
  5417  00137C  5044               	movf	(___fladd@b+3)^0,w,c
  5418  00137E  2444               	addwf	(___fladd@b+3)^0,w,c
  5419  001380  6E4F               	movwf	___fladd@bexp^0,c
  5420  001382  AE43               	btfss	(___fladd@b+2)^0,7,c
  5421  001384  EFC6  F009         	goto	u2381
  5422  001388  EFC8  F009         	goto	u2380
  5423  00138C                     u2381:
  5424  00138C  EFC9  F009         	goto	l3133
  5425  001390                     u2380:
  5426  001390  804F               	bsf	___fladd@bexp^0,0,c
  5427  001392                     l3133:
  5428  001392  504F               	movf	___fladd@bexp^0,w,c
  5429  001394  B4D8               	btfsc	status,2,c
  5430  001396  EFCF  F009         	goto	u2391
  5431  00139A  EFD1  F009         	goto	u2390
  5432  00139E                     u2391:
  5433  00139E  EFE6  F009         	goto	l3143
  5434  0013A2                     u2390:
  5435  0013A2  284F               	incf	___fladd@bexp^0,w,c
  5436  0013A4  A4D8               	btfss	status,2,c
  5437  0013A6  EFD7  F009         	goto	u2401
  5438  0013AA  EFD9  F009         	goto	u2400
  5439  0013AE                     u2401:
  5440  0013AE  EFE1  F009         	goto	l3139
  5441  0013B2                     u2400:
  5442  0013B2  0E00               	movlw	0
  5443  0013B4  6E41               	movwf	___fladd@b^0,c
  5444  0013B6  0E00               	movlw	0
  5445  0013B8  6E42               	movwf	(___fladd@b+1)^0,c
  5446  0013BA  0E00               	movlw	0
  5447  0013BC  6E43               	movwf	(___fladd@b+2)^0,c
  5448  0013BE  0E00               	movlw	0
  5449  0013C0  6E44               	movwf	(___fladd@b+3)^0,c
  5450  0013C2                     l3139:
  5451  0013C2  8E43               	bsf	(___fladd@b+2)^0,7,c
  5452  0013C4  0E00               	movlw	0
  5453  0013C6  6E44               	movwf	(___fladd@b+3)^0,c
  5454  0013C8  EFEE  F009         	goto	l3145
  5455  0013CC                     l3143:
  5456  0013CC  0E00               	movlw	0
  5457  0013CE  6E41               	movwf	___fladd@b^0,c
  5458  0013D0  0E00               	movlw	0
  5459  0013D2  6E42               	movwf	(___fladd@b+1)^0,c
  5460  0013D4  0E00               	movlw	0
  5461  0013D6  6E43               	movwf	(___fladd@b+2)^0,c
  5462  0013D8  0E00               	movlw	0
  5463  0013DA  6E44               	movwf	(___fladd@b+3)^0,c
  5464  0013DC                     l3145:
  5465  0013DC  5048               	movf	(___fladd@a+3)^0,w,c
  5466  0013DE  0B80               	andlw	128
  5467  0013E0  6E4E               	movwf	___fladd@aexp^0,c
  5468  0013E2  504D               	movf	___fladd@signs^0,w,c
  5469  0013E4  184E               	xorwf	___fladd@aexp^0,w,c
  5470  0013E6  B4D8               	btfsc	status,2,c
  5471  0013E8  EFF8  F009         	goto	u2411
  5472  0013EC  EFFA  F009         	goto	u2410
  5473  0013F0                     u2411:
  5474  0013F0  EFFB  F009         	goto	l3151
  5475  0013F4                     u2410:
  5476  0013F4  8C4D               	bsf	___fladd@signs^0,6,c
  5477  0013F6                     l3151:
  5478  0013F6  5048               	movf	(___fladd@a+3)^0,w,c
  5479  0013F8  2448               	addwf	(___fladd@a+3)^0,w,c
  5480  0013FA  6E4E               	movwf	___fladd@aexp^0,c
  5481  0013FC  AE47               	btfss	(___fladd@a+2)^0,7,c
  5482  0013FE  EF03  F00A         	goto	u2421
  5483  001402  EF05  F00A         	goto	u2420
  5484  001406                     u2421:
  5485  001406  EF06  F00A         	goto	l3157
  5486  00140A                     u2420:
  5487  00140A  804E               	bsf	___fladd@aexp^0,0,c
  5488  00140C                     l3157:
  5489  00140C  504E               	movf	___fladd@aexp^0,w,c
  5490  00140E  B4D8               	btfsc	status,2,c
  5491  001410  EF0C  F00A         	goto	u2431
  5492  001414  EF0E  F00A         	goto	u2430
  5493  001418                     u2431:
  5494  001418  EF23  F00A         	goto	l3167
  5495  00141C                     u2430:
  5496  00141C  284E               	incf	___fladd@aexp^0,w,c
  5497  00141E  A4D8               	btfss	status,2,c
  5498  001420  EF14  F00A         	goto	u2441
  5499  001424  EF16  F00A         	goto	u2440
  5500  001428                     u2441:
  5501  001428  EF1E  F00A         	goto	l3163
  5502  00142C                     u2440:
  5503  00142C  0E00               	movlw	0
  5504  00142E  6E45               	movwf	___fladd@a^0,c
  5505  001430  0E00               	movlw	0
  5506  001432  6E46               	movwf	(___fladd@a+1)^0,c
  5507  001434  0E00               	movlw	0
  5508  001436  6E47               	movwf	(___fladd@a+2)^0,c
  5509  001438  0E00               	movlw	0
  5510  00143A  6E48               	movwf	(___fladd@a+3)^0,c
  5511  00143C                     l3163:
  5512  00143C  8E47               	bsf	(___fladd@a+2)^0,7,c
  5513  00143E  0E00               	movlw	0
  5514  001440  6E48               	movwf	(___fladd@a+3)^0,c
  5515  001442  EF2B  F00A         	goto	l3169
  5516  001446                     l3167:
  5517  001446  0E00               	movlw	0
  5518  001448  6E45               	movwf	___fladd@a^0,c
  5519  00144A  0E00               	movlw	0
  5520  00144C  6E46               	movwf	(___fladd@a+1)^0,c
  5521  00144E  0E00               	movlw	0
  5522  001450  6E47               	movwf	(___fladd@a+2)^0,c
  5523  001452  0E00               	movlw	0
  5524  001454  6E48               	movwf	(___fladd@a+3)^0,c
  5525  001456                     l3169:
  5526  001456  504F               	movf	___fladd@bexp^0,w,c
  5527  001458  5C4E               	subwf	___fladd@aexp^0,w,c
  5528  00145A  B0D8               	btfsc	status,0,c
  5529  00145C  EF32  F00A         	goto	u2451
  5530  001460  EF34  F00A         	goto	u2450
  5531  001464                     u2451:
  5532  001464  EF5B  F00A         	goto	l3205
  5533  001468                     u2450:
  5534  001468  AC4D               	btfss	___fladd@signs^0,6,c
  5535  00146A  EF39  F00A         	goto	u2461
  5536  00146E  EF3B  F00A         	goto	u2460
  5537  001472                     u2461:
  5538  001472  EF3D  F00A         	goto	l3175
  5539  001476                     u2460:
  5540  001476  0E80               	movlw	128
  5541  001478  1A4D               	xorwf	___fladd@signs^0,f,c
  5542  00147A                     l3175:
  5543  00147A  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5544  00147E  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5545  001482  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5546  001486  C041  F050         	movff	___fladd@b,___fladd@grs
  5547  00148A  C045  F041         	movff	___fladd@a,___fladd@b
  5548  00148E  C050  F045         	movff	___fladd@grs,___fladd@a
  5549  001492  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5550  001496  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5551  00149A  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5552  00149E  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5553  0014A2  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5554  0014A6  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5555  0014AA  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5556  0014AE  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5557  0014B2  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5558  0014B6                     l3205:
  5559  0014B6  0E00               	movlw	0
  5560  0014B8  6E50               	movwf	___fladd@grs^0,c
  5561  0014BA  504F               	movf	___fladd@bexp^0,w,c
  5562  0014BC  C04E  F049         	movff	___fladd@aexp,??___fladd
  5563  0014C0  6A4A               	clrf	(??___fladd+1)^0,c
  5564  0014C2  5E49               	subwf	??___fladd^0,f,c
  5565  0014C4  0E00               	movlw	0
  5566  0014C6  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5567  0014C8  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5568  0014CA  EF70  F00A         	goto	u2471
  5569  0014CE  504A               	movf	(??___fladd+1)^0,w,c
  5570  0014D0  E109               	bnz	u2470
  5571  0014D2  0E1A               	movlw	26
  5572  0014D4  5C49               	subwf	??___fladd^0,w,c
  5573  0014D6  A0D8               	btfss	status,0,c
  5574  0014D8  EF70  F00A         	goto	u2471
  5575  0014DC  EF72  F00A         	goto	u2470
  5576  0014E0                     u2471:
  5577  0014E0  EFA9  F00A         	goto	l1063
  5578  0014E4                     u2470:
  5579  0014E4  5041               	movf	___fladd@b^0,w,c
  5580  0014E6  1042               	iorwf	(___fladd@b+1)^0,w,c
  5581  0014E8  1043               	iorwf	(___fladd@b+2)^0,w,c
  5582  0014EA  1044               	iorwf	(___fladd@b+3)^0,w,c
  5583  0014EC  A4D8               	btfss	status,2,c
  5584  0014EE  EF7B  F00A         	goto	u2481
  5585  0014F2  EF7E  F00A         	goto	u2480
  5586  0014F6                     u2481:
  5587  0014F6  0E01               	movlw	1
  5588  0014F8  EF7F  F00A         	goto	u2490
  5589  0014FC                     u2480:
  5590  0014FC  0E00               	movlw	0
  5591  0014FE                     u2490:
  5592  0014FE  6E50               	movwf	___fladd@grs^0,c
  5593  001500  0E00               	movlw	0
  5594  001502  6E41               	movwf	___fladd@b^0,c
  5595  001504  0E00               	movlw	0
  5596  001506  6E42               	movwf	(___fladd@b+1)^0,c
  5597  001508  0E00               	movlw	0
  5598  00150A  6E43               	movwf	(___fladd@b+2)^0,c
  5599  00150C  0E00               	movlw	0
  5600  00150E  6E44               	movwf	(___fladd@b+3)^0,c
  5601  001510  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5602  001514  EFB2  F00A         	goto	l1062
  5603  001518                     l1064:
  5604  001518  A050               	btfss	___fladd@grs^0,0,c
  5605  00151A  EF91  F00A         	goto	u2501
  5606  00151E  EF93  F00A         	goto	u2500
  5607  001522                     u2501:
  5608  001522  EF99  F00A         	goto	l3217
  5609  001526                     u2500:
  5610  001526  90D8               	bcf	status,0,c
  5611  001528  3050               	rrcf	___fladd@grs^0,w,c
  5612  00152A  0901               	iorlw	1
  5613  00152C  6E50               	movwf	___fladd@grs^0,c
  5614  00152E  EF9B  F00A         	goto	l3219
  5615  001532                     l3217:
  5616  001532  90D8               	bcf	status,0,c
  5617  001534  3250               	rrcf	___fladd@grs^0,f,c
  5618  001536                     l3219:
  5619  001536  A041               	btfss	___fladd@b^0,0,c
  5620  001538  EFA0  F00A         	goto	u2511
  5621  00153C  EFA2  F00A         	goto	u2510
  5622  001540                     u2511:
  5623  001540  EFA3  F00A         	goto	l3223
  5624  001544                     u2510:
  5625  001544  8E50               	bsf	___fladd@grs^0,7,c
  5626  001546                     l3223:
  5627  001546  3444               	rlcf	(___fladd@b+3)^0,w,c
  5628  001548  3244               	rrcf	(___fladd@b+3)^0,f,c
  5629  00154A  3243               	rrcf	(___fladd@b+2)^0,f,c
  5630  00154C  3242               	rrcf	(___fladd@b+1)^0,f,c
  5631  00154E  3241               	rrcf	___fladd@b^0,f,c
  5632  001550  2A4F               	incf	___fladd@bexp^0,f,c
  5633  001552                     l1063:
  5634  001552  504E               	movf	___fladd@aexp^0,w,c
  5635  001554  5C4F               	subwf	___fladd@bexp^0,w,c
  5636  001556  A0D8               	btfss	status,0,c
  5637  001558  EFB0  F00A         	goto	u2521
  5638  00155C  EFB2  F00A         	goto	u2520
  5639  001560                     u2521:
  5640  001560  EF8C  F00A         	goto	l1064
  5641  001564                     u2520:
  5642  001564                     l1062:
  5643  001564  BC4D               	btfsc	___fladd@signs^0,6,c
  5644  001566  EFB7  F00A         	goto	u2531
  5645  00156A  EFB9  F00A         	goto	u2530
  5646  00156E                     u2531:
  5647  00156E  EFF9  F00A         	goto	l3251
  5648  001572                     u2530:
  5649  001572  504F               	movf	___fladd@bexp^0,w,c
  5650  001574  A4D8               	btfss	status,2,c
  5651  001576  EFBF  F00A         	goto	u2541
  5652  00157A  EFC1  F00A         	goto	u2540
  5653  00157E                     u2541:
  5654  00157E  EFCB  F00A         	goto	l3233
  5655  001582                     u2540:
  5656  001582  0E00               	movlw	0
  5657  001584  6E41               	movwf	?___fladd^0,c
  5658  001586  0E00               	movlw	0
  5659  001588  6E42               	movwf	(?___fladd+1)^0,c
  5660  00158A  0E00               	movlw	0
  5661  00158C  6E43               	movwf	(?___fladd+2)^0,c
  5662  00158E  0E00               	movlw	0
  5663  001590  6E44               	movwf	(?___fladd+3)^0,c
  5664  001592  EF1A  F00C         	goto	l1071
  5665  001596                     l3233:
  5666  001596  5045               	movf	___fladd@a^0,w,c
  5667  001598  2641               	addwf	___fladd@b^0,f,c
  5668  00159A  5046               	movf	(___fladd@a+1)^0,w,c
  5669  00159C  2242               	addwfc	(___fladd@b+1)^0,f,c
  5670  00159E  5047               	movf	(___fladd@a+2)^0,w,c
  5671  0015A0  2243               	addwfc	(___fladd@b+2)^0,f,c
  5672  0015A2  5048               	movf	(___fladd@a+3)^0,w,c
  5673  0015A4  2244               	addwfc	(___fladd@b+3)^0,f,c
  5674  0015A6  A044               	btfss	(___fladd@b+3)^0,0,c
  5675  0015A8  EFD8  F00A         	goto	u2551
  5676  0015AC  EFDA  F00A         	goto	u2550
  5677  0015B0                     u2551:
  5678  0015B0  EF86  F00B         	goto	l3287
  5679  0015B4                     u2550:
  5680  0015B4  A050               	btfss	___fladd@grs^0,0,c
  5681  0015B6  EFDF  F00A         	goto	u2561
  5682  0015BA  EFE1  F00A         	goto	u2560
  5683  0015BE                     u2561:
  5684  0015BE  EFE7  F00A         	goto	l3241
  5685  0015C2                     u2560:
  5686  0015C2  90D8               	bcf	status,0,c
  5687  0015C4  3050               	rrcf	___fladd@grs^0,w,c
  5688  0015C6  0901               	iorlw	1
  5689  0015C8  6E50               	movwf	___fladd@grs^0,c
  5690  0015CA  EFE9  F00A         	goto	l3243
  5691  0015CE                     l3241:
  5692  0015CE  90D8               	bcf	status,0,c
  5693  0015D0  3250               	rrcf	___fladd@grs^0,f,c
  5694  0015D2                     l3243:
  5695  0015D2  A041               	btfss	___fladd@b^0,0,c
  5696  0015D4  EFEE  F00A         	goto	u2571
  5697  0015D8  EFF0  F00A         	goto	u2570
  5698  0015DC                     u2571:
  5699  0015DC  EFF1  F00A         	goto	l3247
  5700  0015E0                     u2570:
  5701  0015E0  8E50               	bsf	___fladd@grs^0,7,c
  5702  0015E2                     l3247:
  5703  0015E2  3444               	rlcf	(___fladd@b+3)^0,w,c
  5704  0015E4  3244               	rrcf	(___fladd@b+3)^0,f,c
  5705  0015E6  3243               	rrcf	(___fladd@b+2)^0,f,c
  5706  0015E8  3242               	rrcf	(___fladd@b+1)^0,f,c
  5707  0015EA  3241               	rrcf	___fladd@b^0,f,c
  5708  0015EC  2A4F               	incf	___fladd@bexp^0,f,c
  5709  0015EE  EF86  F00B         	goto	l3287
  5710  0015F2                     l3251:
  5711  0015F2  5045               	movf	___fladd@a^0,w,c
  5712  0015F4  5C41               	subwf	___fladd@b^0,w,c
  5713  0015F6  5046               	movf	(___fladd@a+1)^0,w,c
  5714  0015F8  5842               	subwfb	(___fladd@b+1)^0,w,c
  5715  0015FA  5047               	movf	(___fladd@a+2)^0,w,c
  5716  0015FC  5843               	subwfb	(___fladd@b+2)^0,w,c
  5717  0015FE  5044               	movf	(___fladd@b+3)^0,w,c
  5718  001600  0A80               	xorlw	128
  5719  001602  6E49               	movwf	??___fladd^0,c
  5720  001604  5048               	movf	(___fladd@a+3)^0,w,c
  5721  001606  0A80               	xorlw	128
  5722  001608  5849               	subwfb	??___fladd^0,w,c
  5723  00160A  B0D8               	btfsc	status,0,c
  5724  00160C  EF0A  F00B         	goto	u2581
  5725  001610  EF0C  F00B         	goto	u2580
  5726  001614                     u2581:
  5727  001614  EF37  F00B         	goto	l3261
  5728  001618                     u2580:
  5729  001618  5041               	movf	___fladd@b^0,w,c
  5730  00161A  5C45               	subwf	___fladd@a^0,w,c
  5731  00161C  6E49               	movwf	??___fladd^0,c
  5732  00161E  5042               	movf	(___fladd@b+1)^0,w,c
  5733  001620  5846               	subwfb	(___fladd@a+1)^0,w,c
  5734  001622  6E4A               	movwf	(??___fladd+1)^0,c
  5735  001624  5043               	movf	(___fladd@b+2)^0,w,c
  5736  001626  5847               	subwfb	(___fladd@a+2)^0,w,c
  5737  001628  6E4B               	movwf	(??___fladd+2)^0,c
  5738  00162A  5044               	movf	(___fladd@b+3)^0,w,c
  5739  00162C  5848               	subwfb	(___fladd@a+3)^0,w,c
  5740  00162E  6E4C               	movwf	(??___fladd+3)^0,c
  5741  001630  0EFF               	movlw	255
  5742  001632  2449               	addwf	??___fladd^0,w,c
  5743  001634  6E41               	movwf	___fladd@b^0,c
  5744  001636  0EFF               	movlw	255
  5745  001638  204A               	addwfc	(??___fladd+1)^0,w,c
  5746  00163A  6E42               	movwf	(___fladd@b+1)^0,c
  5747  00163C  0EFF               	movlw	255
  5748  00163E  204B               	addwfc	(??___fladd+2)^0,w,c
  5749  001640  6E43               	movwf	(___fladd@b+2)^0,c
  5750  001642  0EFF               	movlw	255
  5751  001644  204C               	addwfc	(??___fladd+3)^0,w,c
  5752  001646  6E44               	movwf	(___fladd@b+3)^0,c
  5753  001648  0E80               	movlw	128
  5754  00164A  1A4D               	xorwf	___fladd@signs^0,f,c
  5755  00164C  6C50               	negf	___fladd@grs^0,c
  5756  00164E  5050               	movf	___fladd@grs^0,w,c
  5757  001650  A4D8               	btfss	status,2,c
  5758  001652  EF2D  F00B         	goto	u2591
  5759  001656  EF2F  F00B         	goto	u2590
  5760  00165A                     u2591:
  5761  00165A  EF3F  F00B         	goto	l1079
  5762  00165E                     u2590:
  5763  00165E  0E01               	movlw	1
  5764  001660  2641               	addwf	___fladd@b^0,f,c
  5765  001662  0E00               	movlw	0
  5766  001664  2242               	addwfc	(___fladd@b+1)^0,f,c
  5767  001666  2243               	addwfc	(___fladd@b+2)^0,f,c
  5768  001668  2244               	addwfc	(___fladd@b+3)^0,f,c
  5769  00166A  EF3F  F00B         	goto	l1079
  5770  00166E                     l3261:
  5771  00166E  5045               	movf	___fladd@a^0,w,c
  5772  001670  5E41               	subwf	___fladd@b^0,f,c
  5773  001672  5046               	movf	(___fladd@a+1)^0,w,c
  5774  001674  5A42               	subwfb	(___fladd@b+1)^0,f,c
  5775  001676  5047               	movf	(___fladd@a+2)^0,w,c
  5776  001678  5A43               	subwfb	(___fladd@b+2)^0,f,c
  5777  00167A  5048               	movf	(___fladd@a+3)^0,w,c
  5778  00167C  5A44               	subwfb	(___fladd@b+3)^0,f,c
  5779  00167E                     l1079:
  5780  00167E  5041               	movf	___fladd@b^0,w,c
  5781  001680  1042               	iorwf	(___fladd@b+1)^0,w,c
  5782  001682  1043               	iorwf	(___fladd@b+2)^0,w,c
  5783  001684  1044               	iorwf	(___fladd@b+3)^0,w,c
  5784  001686  A4D8               	btfss	status,2,c
  5785  001688  EF48  F00B         	goto	u2601
  5786  00168C  EF4A  F00B         	goto	u2600
  5787  001690                     u2601:
  5788  001690  EF7F  F00B         	goto	l3285
  5789  001694                     u2600:
  5790  001694  5050               	movf	___fladd@grs^0,w,c
  5791  001696  A4D8               	btfss	status,2,c
  5792  001698  EF50  F00B         	goto	u2611
  5793  00169C  EF52  F00B         	goto	u2610
  5794  0016A0                     u2611:
  5795  0016A0  EF7F  F00B         	goto	l3285
  5796  0016A4                     u2610:
  5797  0016A4  0E00               	movlw	0
  5798  0016A6  6E41               	movwf	?___fladd^0,c
  5799  0016A8  0E00               	movlw	0
  5800  0016AA  6E42               	movwf	(?___fladd+1)^0,c
  5801  0016AC  0E00               	movlw	0
  5802  0016AE  6E43               	movwf	(?___fladd+2)^0,c
  5803  0016B0  0E00               	movlw	0
  5804  0016B2  6E44               	movwf	(?___fladd+3)^0,c
  5805  0016B4  EF1A  F00C         	goto	l1071
  5806  0016B8                     l3269:
  5807  0016B8  90D8               	bcf	status,0,c
  5808  0016BA  3641               	rlcf	___fladd@b^0,f,c
  5809  0016BC  3642               	rlcf	(___fladd@b+1)^0,f,c
  5810  0016BE  3643               	rlcf	(___fladd@b+2)^0,f,c
  5811  0016C0  3644               	rlcf	(___fladd@b+3)^0,f,c
  5812  0016C2  AE50               	btfss	___fladd@grs^0,7,c
  5813  0016C4  EF66  F00B         	goto	u2621
  5814  0016C8  EF68  F00B         	goto	u2620
  5815  0016CC                     u2621:
  5816  0016CC  EF69  F00B         	goto	l3275
  5817  0016D0                     u2620:
  5818  0016D0  8041               	bsf	___fladd@b^0,0,c
  5819  0016D2                     l3275:
  5820  0016D2  A050               	btfss	___fladd@grs^0,0,c
  5821  0016D4  EF6E  F00B         	goto	u2631
  5822  0016D8  EF70  F00B         	goto	u2630
  5823  0016DC                     u2631:
  5824  0016DC  EF74  F00B         	goto	l3279
  5825  0016E0                     u2630:
  5826  0016E0  80D8               	bsf	status,0,c
  5827  0016E2  3650               	rlcf	___fladd@grs^0,f,c
  5828  0016E4  EF76  F00B         	goto	l3281
  5829  0016E8                     l3279:
  5830  0016E8  90D8               	bcf	status,0,c
  5831  0016EA  3650               	rlcf	___fladd@grs^0,f,c
  5832  0016EC                     l3281:
  5833  0016EC  504F               	movf	___fladd@bexp^0,w,c
  5834  0016EE  B4D8               	btfsc	status,2,c
  5835  0016F0  EF7C  F00B         	goto	u2641
  5836  0016F4  EF7E  F00B         	goto	u2640
  5837  0016F8                     u2641:
  5838  0016F8  EF7F  F00B         	goto	l3285
  5839  0016FC                     u2640:
  5840  0016FC  064F               	decf	___fladd@bexp^0,f,c
  5841  0016FE                     l3285:
  5842  0016FE  AE43               	btfss	(___fladd@b+2)^0,7,c
  5843  001700  EF84  F00B         	goto	u2651
  5844  001704  EF86  F00B         	goto	u2650
  5845  001708                     u2651:
  5846  001708  EF5C  F00B         	goto	l3269
  5847  00170C                     u2650:
  5848  00170C                     l3287:
  5849  00170C  0E00               	movlw	0
  5850  00170E  6E4E               	movwf	___fladd@aexp^0,c
  5851  001710  AE50               	btfss	___fladd@grs^0,7,c
  5852  001712  EF8D  F00B         	goto	u2661
  5853  001716  EF8F  F00B         	goto	u2660
  5854  00171A                     u2661:
  5855  00171A  EFA7  F00B         	goto	l1088
  5856  00171E                     u2660:
  5857  00171E  C050  F049         	movff	___fladd@grs,??___fladd
  5858  001722  0E7F               	movlw	127
  5859  001724  1649               	andwf	??___fladd^0,f,c
  5860  001726  B4D8               	btfsc	status,2,c
  5861  001728  EF98  F00B         	goto	u2671
  5862  00172C  EF9A  F00B         	goto	u2670
  5863  001730                     u2671:
  5864  001730  EF9E  F00B         	goto	l1089
  5865  001734                     u2670:
  5866  001734                     l3293:
  5867  001734  0E01               	movlw	1
  5868  001736  6E4E               	movwf	___fladd@aexp^0,c
  5869  001738  EFA7  F00B         	goto	l1088
  5870  00173C                     l1089:
  5871  00173C  A041               	btfss	___fladd@b^0,0,c
  5872  00173E  EFA3  F00B         	goto	u2681
  5873  001742  EFA5  F00B         	goto	u2680
  5874  001746                     u2681:
  5875  001746  EFA7  F00B         	goto	l1088
  5876  00174A                     u2680:
  5877  00174A  EF9A  F00B         	goto	l3293
  5878  00174E                     l1088:
  5879  00174E  504E               	movf	___fladd@aexp^0,w,c
  5880  001750  B4D8               	btfsc	status,2,c
  5881  001752  EFAD  F00B         	goto	u2691
  5882  001756  EFAF  F00B         	goto	u2690
  5883  00175A                     u2691:
  5884  00175A  EFDA  F00B         	goto	l3305
  5885  00175E                     u2690:
  5886  00175E  0E01               	movlw	1
  5887  001760  2641               	addwf	___fladd@b^0,f,c
  5888  001762  0E00               	movlw	0
  5889  001764  2242               	addwfc	(___fladd@b+1)^0,f,c
  5890  001766  2243               	addwfc	(___fladd@b+2)^0,f,c
  5891  001768  2244               	addwfc	(___fladd@b+3)^0,f,c
  5892  00176A  A044               	btfss	(___fladd@b+3)^0,0,c
  5893  00176C  EFBA  F00B         	goto	u2701
  5894  001770  EFBC  F00B         	goto	u2700
  5895  001774                     u2701:
  5896  001774  EFDA  F00B         	goto	l3305
  5897  001778                     u2700:
  5898  001778  C041  F049         	movff	___fladd@b,??___fladd
  5899  00177C  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  5900  001780  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  5901  001784  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  5902  001788  344C               	rlcf	(??___fladd+3)^0,w,c
  5903  00178A  324C               	rrcf	(??___fladd+3)^0,f,c
  5904  00178C  324B               	rrcf	(??___fladd+2)^0,f,c
  5905  00178E  324A               	rrcf	(??___fladd+1)^0,f,c
  5906  001790  3249               	rrcf	??___fladd^0,f,c
  5907  001792  C049  F041         	movff	??___fladd,___fladd@b
  5908  001796  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  5909  00179A  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  5910  00179E  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  5911  0017A2  284F               	incf	___fladd@bexp^0,w,c
  5912  0017A4  B4D8               	btfsc	status,2,c
  5913  0017A6  EFD7  F00B         	goto	u2711
  5914  0017AA  EFD9  F00B         	goto	u2710
  5915  0017AE                     u2711:
  5916  0017AE  EFDA  F00B         	goto	l3305
  5917  0017B2                     u2710:
  5918  0017B2  2A4F               	incf	___fladd@bexp^0,f,c
  5919  0017B4                     l3305:
  5920  0017B4  284F               	incf	___fladd@bexp^0,w,c
  5921  0017B6  B4D8               	btfsc	status,2,c
  5922  0017B8  EFE0  F00B         	goto	u2721
  5923  0017BC  EFE2  F00B         	goto	u2720
  5924  0017C0                     u2721:
  5925  0017C0  EFEA  F00B         	goto	l3309
  5926  0017C4                     u2720:
  5927  0017C4  504F               	movf	___fladd@bexp^0,w,c
  5928  0017C6  A4D8               	btfss	status,2,c
  5929  0017C8  EFE8  F00B         	goto	u2731
  5930  0017CC  EFEA  F00B         	goto	u2730
  5931  0017D0                     u2731:
  5932  0017D0  EFFC  F00B         	goto	l3313
  5933  0017D4                     u2730:
  5934  0017D4                     l3309:
  5935  0017D4  0E00               	movlw	0
  5936  0017D6  6E41               	movwf	___fladd@b^0,c
  5937  0017D8  0E00               	movlw	0
  5938  0017DA  6E42               	movwf	(___fladd@b+1)^0,c
  5939  0017DC  0E00               	movlw	0
  5940  0017DE  6E43               	movwf	(___fladd@b+2)^0,c
  5941  0017E0  0E00               	movlw	0
  5942  0017E2  6E44               	movwf	(___fladd@b+3)^0,c
  5943  0017E4  504F               	movf	___fladd@bexp^0,w,c
  5944  0017E6  A4D8               	btfss	status,2,c
  5945  0017E8  EFF8  F00B         	goto	u2741
  5946  0017EC  EFFA  F00B         	goto	u2740
  5947  0017F0                     u2741:
  5948  0017F0  EFFC  F00B         	goto	l3313
  5949  0017F4                     u2740:
  5950  0017F4  0E00               	movlw	0
  5951  0017F6  6E4D               	movwf	___fladd@signs^0,c
  5952  0017F8                     l3313:
  5953  0017F8  A04F               	btfss	___fladd@bexp^0,0,c
  5954  0017FA  EF01  F00C         	goto	u2751
  5955  0017FE  EF03  F00C         	goto	u2750
  5956  001802                     u2751:
  5957  001802  EF06  F00C         	goto	l3317
  5958  001806                     u2750:
  5959  001806  8E43               	bsf	(___fladd@b+2)^0,7,c
  5960  001808  EF07  F00C         	goto	l3319
  5961  00180C                     l3317:
  5962  00180C  9E43               	bcf	(___fladd@b+2)^0,7,c
  5963  00180E                     l3319:
  5964  00180E  90D8               	bcf	status,0,c
  5965  001810  304F               	rrcf	___fladd@bexp^0,w,c
  5966  001812  6E44               	movwf	(___fladd@b+3)^0,c
  5967  001814  AE4D               	btfss	___fladd@signs^0,7,c
  5968  001816  EF0F  F00C         	goto	u2761
  5969  00181A  EF11  F00C         	goto	u2760
  5970  00181E                     u2761:
  5971  00181E  EF12  F00C         	goto	l3325
  5972  001822                     u2760:
  5973  001822  8E44               	bsf	(___fladd@b+3)^0,7,c
  5974  001824                     l3325:
  5975  001824  C041  F041         	movff	___fladd@b,?___fladd
  5976  001828  C042  F042         	movff	___fladd@b+1,?___fladd+1
  5977  00182C  C043  F043         	movff	___fladd@b+2,?___fladd+2
  5978  001830  C044  F044         	movff	___fladd@b+3,?___fladd+3
  5979  001834                     l1071:
  5980  001834  0012               	return		;funcret
  5981  001836                     __end_of___fladd:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _color_click_init *****************
  5985 ;; Defined at:
  5986 ;;		line 13 in file "color.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;Total ram usage:        1 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 4
  6007 ;; This function calls:
  6008 ;;		_I2C_2_Master_Init
  6009 ;;		_color_writetoaddr
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text14
  6016  00368E                     __ptext14:
  6017                           	callstack 0
  6018  00368E                     _color_click_init:
  6019                           	callstack 26
  6020  00368E                     
  6021                           ;color.c: 16:     I2C_2_Master_Init();
  6022  00368E  EC61  F01B         	call	_I2C_2_Master_Init	;wreg free
  6023  003692                     
  6024                           ;color.c: 19:   color_writetoaddr(0x00, 0x01);
  6025  003692  0E01               	movlw	1
  6026  003694  6E03               	movwf	color_writetoaddr@value^0,c
  6027  003696  0E00               	movlw	0
  6028  003698  ECBE  F01B         	call	_color_writetoaddr
  6029  00369C                     
  6030                           ;color.c: 20:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6031  00369C  0E3F               	movlw	63
  6032  00369E  6E05               	movwf	??_color_click_init^0,c
  6033  0036A0  0E55               	movlw	85
  6034  0036A2                     u4307:
  6035  0036A2  2EE8               	decfsz	wreg,f,c
  6036  0036A4  D7FE               	bra	u4307
  6037  0036A6  2E05               	decfsz	??_color_click_init^0,f,c
  6038  0036A8  D7FC               	bra	u4307
  6039  0036AA  F000               	nop	
  6040  0036AC                     
  6041                           ;color.c: 23:  color_writetoaddr(0x00, 0x03);
  6042  0036AC  0E03               	movlw	3
  6043  0036AE  6E03               	movwf	color_writetoaddr@value^0,c
  6044  0036B0  0E00               	movlw	0
  6045  0036B2  ECBE  F01B         	call	_color_writetoaddr
  6046  0036B6                     
  6047                           ;color.c: 26:  color_writetoaddr(0x01, 0xD5);
  6048  0036B6  0ED5               	movlw	213
  6049  0036B8  6E03               	movwf	color_writetoaddr@value^0,c
  6050  0036BA  0E01               	movlw	1
  6051  0036BC  ECBE  F01B         	call	_color_writetoaddr
  6052  0036C0  0012               	return		;funcret
  6053  0036C2                     __end_of_color_click_init:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _color_writetoaddr *****************
  6057 ;; Defined at:
  6058 ;;		line 29 in file "color.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  address         1    wreg     unsigned char 
  6061 ;;  value           1    2[COMRAM] unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  address         1    3[COMRAM] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;Total ram usage:        2 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 3
  6080 ;; This function calls:
  6081 ;;		_I2C_2_Master_Start
  6082 ;;		_I2C_2_Master_Stop
  6083 ;;		_I2C_2_Master_Write
  6084 ;; This function is called by:
  6085 ;;		_color_click_init
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text15
  6090  00377C                     __ptext15:
  6091                           	callstack 0
  6092  00377C                     _color_writetoaddr:
  6093                           	callstack 26
  6094                           
  6095                           ;incstack = 0
  6096                           ;color_writetoaddr@address stored from wreg
  6097  00377C  6E04               	movwf	color_writetoaddr@address^0,c
  6098  00377E                     
  6099                           ;color.c: 30:     I2C_2_Master_Start();
  6100  00377E  ECED  F01B         	call	_I2C_2_Master_Start	;wreg free
  6101                           
  6102                           ;color.c: 31:     I2C_2_Master_Write(0x52 | 0x00);
  6103  003782  0E52               	movlw	82
  6104  003784  ECDC  F01B         	call	_I2C_2_Master_Write
  6105                           
  6106                           ;color.c: 32:     I2C_2_Master_Write(0x80 | address);
  6107  003788  5004               	movf	color_writetoaddr@address^0,w,c
  6108  00378A  0980               	iorlw	128
  6109  00378C  ECDC  F01B         	call	_I2C_2_Master_Write
  6110                           
  6111                           ;color.c: 33:     I2C_2_Master_Write(value);
  6112  003790  5003               	movf	color_writetoaddr@value^0,w,c
  6113  003792  ECDC  F01B         	call	_I2C_2_Master_Write
  6114                           
  6115                           ;color.c: 34:     I2C_2_Master_Stop();
  6116  003796  ECE8  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6117  00379A  0012               	return		;funcret
  6118  00379C                     __end_of_color_writetoaddr:
  6119                           	callstack 0
  6120                           
  6121 ;; *************** function _I2C_2_Master_Init *****************
  6122 ;; Defined at:
  6123 ;;		line 4 in file "i2c.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used: 1
  6143 ;; Hardware stack levels required when called: 1
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_color_click_init
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text16
  6152  0036C2                     __ptext16:
  6153                           	callstack 0
  6154  0036C2                     _I2C_2_Master_Init:
  6155                           	callstack 28
  6156  0036C2                     
  6157                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6158  0036C2  010E               	movlb	14	; () banked
  6159  0036C4  51D9               	movf	217,w,b	;volatile
  6160  0036C6  0BF0               	andlw	-16
  6161  0036C8  0908               	iorlw	8
  6162  0036CA  6FD9               	movwf	217,b	;volatile
  6163  0036CC                     
  6164                           ; BSR set to: 14
  6165                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6166  0036CC  8BD9               	bsf	217,5,b	;volatile
  6167                           
  6168                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6169  0036CE  0E9F               	movlw	159
  6170  0036D0  6FD6               	movwf	214,b	;volatile
  6171  0036D2                     
  6172                           ; BSR set to: 14
  6173                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6174  0036D2  8A84               	bsf	132,5,c	;volatile
  6175  0036D4                     
  6176                           ; BSR set to: 14
  6177                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6178  0036D4  8C84               	bsf	132,6,c	;volatile
  6179  0036D6                     
  6180                           ; BSR set to: 14
  6181                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6182  0036D6  9BA7               	bcf	167,5,b	;volatile
  6183  0036D8                     
  6184                           ; BSR set to: 14
  6185                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6186  0036D8  9DA7               	bcf	167,6,b	;volatile
  6187                           
  6188                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6189  0036DA  0E1D               	movlw	29
  6190  0036DC  6F1D               	movwf	29,b	;volatile
  6191                           
  6192                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6193  0036DE  0E1E               	movlw	30
  6194  0036E0  6F1C               	movwf	28,b	;volatile
  6195                           
  6196                           ;i2c.c: 18:   RD5PPS=0x1C;
  6197  0036E2  0E1C               	movlw	28
  6198  0036E4  6F6F               	movwf	111,b	;volatile
  6199                           
  6200                           ;i2c.c: 19:   RD6PPS=0x1B;
  6201  0036E6  0E1B               	movlw	27
  6202  0036E8  6F70               	movwf	112,b	;volatile
  6203  0036EA                     
  6204                           ; BSR set to: 14
  6205  0036EA  0012               	return		;funcret
  6206  0036EC                     __end_of_I2C_2_Master_Init:
  6207                           	callstack 0
  6208                           
  6209 ;; *************** function _calibrateW *****************
  6210 ;; Defined at:
  6211 ;;		line 103 in file "color.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6214 ;;		 -> main@test(20), 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;Total ram usage:        2 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 4
  6233 ;; This function calls:
  6234 ;;		_color_read_Blue
  6235 ;;		_color_read_Green
  6236 ;;		_color_read_Red
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text17
  6243  00357A                     __ptext17:
  6244                           	callstack 0
  6245  00357A                     _calibrateW:
  6246                           	callstack 26
  6247  00357A                     
  6248                           ;color.c: 104:     (m->whiteR) = color_read_Red();
  6249  00357A  EC1F  F01A         	call	_color_read_Red	;wreg free
  6250  00357E  EE20 F006          	lfsr	2,6
  6251  003582  500C               	movf	calibrateW@m^0,w,c
  6252  003584  26D9               	addwf	fsr2l,f,c
  6253  003586  500D               	movf	(calibrateW@m+1)^0,w,c
  6254  003588  22DA               	addwfc	fsr2h,f,c
  6255  00358A  C005  FFDE         	movff	?_color_read_Red,postinc2
  6256  00358E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6257                           
  6258                           ;color.c: 105:     (m->whiteG) = color_read_Green();
  6259  003592  EC47  F01A         	call	_color_read_Green	;wreg free
  6260  003596  EE20 F008          	lfsr	2,8
  6261  00359A  500C               	movf	calibrateW@m^0,w,c
  6262  00359C  26D9               	addwf	fsr2l,f,c
  6263  00359E  500D               	movf	(calibrateW@m+1)^0,w,c
  6264  0035A0  22DA               	addwfc	fsr2h,f,c
  6265  0035A2  C005  FFDE         	movff	?_color_read_Green,postinc2
  6266  0035A6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6267                           
  6268                           ;color.c: 106:     (m->whiteB) = color_read_Blue();
  6269  0035AA  EC6F  F01A         	call	_color_read_Blue	;wreg free
  6270  0035AE  EE20 F00A          	lfsr	2,10
  6271  0035B2  500C               	movf	calibrateW@m^0,w,c
  6272  0035B4  26D9               	addwf	fsr2l,f,c
  6273  0035B6  500D               	movf	(calibrateW@m+1)^0,w,c
  6274  0035B8  22DA               	addwfc	fsr2h,f,c
  6275  0035BA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6276  0035BE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6277  0035C2  0012               	return		;funcret
  6278  0035C4                     __end_of_calibrateW:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _calibrateB *****************
  6282 ;; Defined at:
  6283 ;;		line 109 in file "color.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6286 ;;		 -> main@test(20), 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;Total ram usage:        2 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; Hardware stack levels required when called: 4
  6305 ;; This function calls:
  6306 ;;		_color_read_Blue
  6307 ;;		_color_read_Green
  6308 ;;		_color_read_Red
  6309 ;; This function is called by:
  6310 ;;		_main
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text18
  6315  0035C4                     __ptext18:
  6316                           	callstack 0
  6317  0035C4                     _calibrateB:
  6318                           	callstack 26
  6319  0035C4                     
  6320                           ;color.c: 110:     (m->blackR) = color_read_Red();
  6321  0035C4  EC1F  F01A         	call	_color_read_Red	;wreg free
  6322  0035C8  C00C  FFD9         	movff	calibrateB@m,fsr2l
  6323  0035CC  C00D  FFDA         	movff	calibrateB@m+1,fsr2h
  6324  0035D0  C005  FFDE         	movff	?_color_read_Red,postinc2
  6325  0035D4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6326                           
  6327                           ;color.c: 111:     (m->blackG) = color_read_Green();
  6328  0035D8  EC47  F01A         	call	_color_read_Green	;wreg free
  6329  0035DC  EE20 F002          	lfsr	2,2
  6330  0035E0  500C               	movf	calibrateB@m^0,w,c
  6331  0035E2  26D9               	addwf	fsr2l,f,c
  6332  0035E4  500D               	movf	(calibrateB@m+1)^0,w,c
  6333  0035E6  22DA               	addwfc	fsr2h,f,c
  6334  0035E8  C005  FFDE         	movff	?_color_read_Green,postinc2
  6335  0035EC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6336                           
  6337                           ;color.c: 112:     (m->blackB) = color_read_Blue();
  6338  0035F0  EC6F  F01A         	call	_color_read_Blue	;wreg free
  6339  0035F4  EE20 F004          	lfsr	2,4
  6340  0035F8  500C               	movf	calibrateB@m^0,w,c
  6341  0035FA  26D9               	addwf	fsr2l,f,c
  6342  0035FC  500D               	movf	(calibrateB@m+1)^0,w,c
  6343  0035FE  22DA               	addwfc	fsr2h,f,c
  6344  003600  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6345  003604  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6346  003608  0012               	return		;funcret
  6347  00360A                     __end_of_calibrateB:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function _color_read_Red *****************
  6351 ;; Defined at:
  6352 ;;		line 51 in file "color.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  tmp             2    9[COMRAM] unsigned int 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  2    4[COMRAM] unsigned int 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;Total ram usage:        7 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; Hardware stack levels required when called: 3
  6373 ;; This function calls:
  6374 ;;		_I2C_2_Master_Read
  6375 ;;		_I2C_2_Master_RepStart
  6376 ;;		_I2C_2_Master_Start
  6377 ;;		_I2C_2_Master_Stop
  6378 ;;		_I2C_2_Master_Write
  6379 ;; This function is called by:
  6380 ;;		_read_colours
  6381 ;;		_calibrateW
  6382 ;;		_calibrateB
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text19
  6387  00343E                     __ptext19:
  6388                           	callstack 0
  6389  00343E                     _color_read_Red:
  6390                           	callstack 26
  6391  00343E                     
  6392                           ;color.c: 53:  unsigned int tmp;;color.c: 54:  I2C_2_Master_Start();
  6393  00343E  ECED  F01B         	call	_I2C_2_Master_Start	;wreg free
  6394                           
  6395                           ;color.c: 55:  I2C_2_Master_Write(0x52 | 0x00);
  6396  003442  0E52               	movlw	82
  6397  003444  ECDC  F01B         	call	_I2C_2_Master_Write
  6398                           
  6399                           ;color.c: 56:  I2C_2_Master_Write(0xA0 | 0x16);
  6400  003448  0EB6               	movlw	182
  6401  00344A  ECDC  F01B         	call	_I2C_2_Master_Write
  6402                           
  6403                           ;color.c: 57:  I2C_2_Master_RepStart();
  6404  00344E  ECF2  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  6405                           
  6406                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x01);
  6407  003452  0E53               	movlw	83
  6408  003454  ECDC  F01B         	call	_I2C_2_Master_Write
  6409                           
  6410                           ;color.c: 59:  tmp=I2C_2_Master_Read(1);
  6411  003458  0E01               	movlw	1
  6412  00345A  EC26  F01B         	call	_I2C_2_Master_Read
  6413  00345E  6E07               	movwf	??_color_read_Red^0,c
  6414  003460  5007               	movf	??_color_read_Red^0,w,c
  6415  003462  6E0A               	movwf	color_read_Red@tmp^0,c
  6416  003464  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6417                           
  6418                           ;color.c: 60:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6419  003466  0E00               	movlw	0
  6420  003468  EC26  F01B         	call	_I2C_2_Master_Read
  6421  00346C  6E07               	movwf	??_color_read_Red^0,c
  6422  00346E  5007               	movf	??_color_read_Red^0,w,c
  6423  003470  6E09               	movwf	(??_color_read_Red+2)^0,c
  6424  003472  6A08               	clrf	(??_color_read_Red+1)^0,c
  6425  003474  500A               	movf	color_read_Red@tmp^0,w,c
  6426  003476  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6427  003478  6E0A               	movwf	color_read_Red@tmp^0,c
  6428  00347A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6429  00347C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6430  00347E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6431                           
  6432                           ;color.c: 61:  I2C_2_Master_Stop();
  6433  003480  ECE8  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6434  003484                     
  6435                           ;color.c: 62:  return tmp;
  6436  003484  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6437  003488  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6438  00348C  0012               	return		;funcret
  6439  00348E                     __end_of_color_read_Red:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _color_read_Green *****************
  6443 ;; Defined at:
  6444 ;;		line 65 in file "color.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  tmp             2    9[COMRAM] unsigned int 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2    4[COMRAM] unsigned int 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;Total ram usage:        7 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 3
  6465 ;; This function calls:
  6466 ;;		_I2C_2_Master_Read
  6467 ;;		_I2C_2_Master_RepStart
  6468 ;;		_I2C_2_Master_Start
  6469 ;;		_I2C_2_Master_Stop
  6470 ;;		_I2C_2_Master_Write
  6471 ;; This function is called by:
  6472 ;;		_read_colours
  6473 ;;		_calibrateW
  6474 ;;		_calibrateB
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text20
  6479  00348E                     __ptext20:
  6480                           	callstack 0
  6481  00348E                     _color_read_Green:
  6482                           	callstack 26
  6483  00348E                     
  6484                           ;color.c: 66:     unsigned int tmp;;color.c: 67:     I2C_2_Master_Start();
  6485  00348E  ECED  F01B         	call	_I2C_2_Master_Start	;wreg free
  6486                           
  6487                           ;color.c: 68:     I2C_2_Master_Write(0x52 | 0x00);
  6488  003492  0E52               	movlw	82
  6489  003494  ECDC  F01B         	call	_I2C_2_Master_Write
  6490                           
  6491                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  6492  003498  0EB8               	movlw	184
  6493  00349A  ECDC  F01B         	call	_I2C_2_Master_Write
  6494                           
  6495                           ;color.c: 70:  I2C_2_Master_RepStart();
  6496  00349E  ECF2  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  6497                           
  6498                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6499  0034A2  0E53               	movlw	83
  6500  0034A4  ECDC  F01B         	call	_I2C_2_Master_Write
  6501                           
  6502                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6503  0034A8  0E01               	movlw	1
  6504  0034AA  EC26  F01B         	call	_I2C_2_Master_Read
  6505  0034AE  6E07               	movwf	??_color_read_Green^0,c
  6506  0034B0  5007               	movf	??_color_read_Green^0,w,c
  6507  0034B2  6E0A               	movwf	color_read_Green@tmp^0,c
  6508  0034B4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6509                           
  6510                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6511  0034B6  0E00               	movlw	0
  6512  0034B8  EC26  F01B         	call	_I2C_2_Master_Read
  6513  0034BC  6E07               	movwf	??_color_read_Green^0,c
  6514  0034BE  5007               	movf	??_color_read_Green^0,w,c
  6515  0034C0  6E09               	movwf	(??_color_read_Green+2)^0,c
  6516  0034C2  6A08               	clrf	(??_color_read_Green+1)^0,c
  6517  0034C4  500A               	movf	color_read_Green@tmp^0,w,c
  6518  0034C6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6519  0034C8  6E0A               	movwf	color_read_Green@tmp^0,c
  6520  0034CA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6521  0034CC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6522  0034CE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6523                           
  6524                           ;color.c: 74:     I2C_2_Master_Stop();
  6525  0034D0  ECE8  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6526  0034D4                     
  6527                           ;color.c: 75:     return tmp;
  6528  0034D4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6529  0034D8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6530  0034DC  0012               	return		;funcret
  6531  0034DE                     __end_of_color_read_Green:
  6532                           	callstack 0
  6533                           
  6534 ;; *************** function _color_read_Blue *****************
  6535 ;; Defined at:
  6536 ;;		line 78 in file "color.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;		None
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  tmp             2    9[COMRAM] unsigned int 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  2    4[COMRAM] unsigned int 
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;Total ram usage:        7 bytes
  6555 ;; Hardware stack levels used: 1
  6556 ;; Hardware stack levels required when called: 3
  6557 ;; This function calls:
  6558 ;;		_I2C_2_Master_Read
  6559 ;;		_I2C_2_Master_RepStart
  6560 ;;		_I2C_2_Master_Start
  6561 ;;		_I2C_2_Master_Stop
  6562 ;;		_I2C_2_Master_Write
  6563 ;; This function is called by:
  6564 ;;		_read_colours
  6565 ;;		_calibrateW
  6566 ;;		_calibrateB
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text21
  6571  0034DE                     __ptext21:
  6572                           	callstack 0
  6573  0034DE                     _color_read_Blue:
  6574                           	callstack 26
  6575  0034DE                     
  6576                           ;color.c: 79:     unsigned int tmp;;color.c: 80:     I2C_2_Master_Start();
  6577  0034DE  ECED  F01B         	call	_I2C_2_Master_Start	;wreg free
  6578                           
  6579                           ;color.c: 81:     I2C_2_Master_Write(0x52 | 0x00);
  6580  0034E2  0E52               	movlw	82
  6581  0034E4  ECDC  F01B         	call	_I2C_2_Master_Write
  6582                           
  6583                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x1A);
  6584  0034E8  0EBA               	movlw	186
  6585  0034EA  ECDC  F01B         	call	_I2C_2_Master_Write
  6586                           
  6587                           ;color.c: 83:  I2C_2_Master_RepStart();
  6588  0034EE  ECF2  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  6589                           
  6590                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  6591  0034F2  0E53               	movlw	83
  6592  0034F4  ECDC  F01B         	call	_I2C_2_Master_Write
  6593                           
  6594                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  6595  0034F8  0E01               	movlw	1
  6596  0034FA  EC26  F01B         	call	_I2C_2_Master_Read
  6597  0034FE  6E07               	movwf	??_color_read_Blue^0,c
  6598  003500  5007               	movf	??_color_read_Blue^0,w,c
  6599  003502  6E0A               	movwf	color_read_Blue@tmp^0,c
  6600  003504  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6601                           
  6602                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6603  003506  0E00               	movlw	0
  6604  003508  EC26  F01B         	call	_I2C_2_Master_Read
  6605  00350C  6E07               	movwf	??_color_read_Blue^0,c
  6606  00350E  5007               	movf	??_color_read_Blue^0,w,c
  6607  003510  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6608  003512  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6609  003514  500A               	movf	color_read_Blue@tmp^0,w,c
  6610  003516  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6611  003518  6E0A               	movwf	color_read_Blue@tmp^0,c
  6612  00351A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6613  00351C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6614  00351E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6615                           
  6616                           ;color.c: 87:     I2C_2_Master_Stop();
  6617  003520  ECE8  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6618  003524                     
  6619                           ;color.c: 88:     return tmp;
  6620  003524  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6621  003528  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6622  00352C  0012               	return		;funcret
  6623  00352E                     __end_of_color_read_Blue:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _I2C_2_Master_Write *****************
  6627 ;; Defined at:
  6628 ;;		line 45 in file "i2c.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  data_byte       1    wreg     unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  data_byte       1    1[COMRAM] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;Total ram usage:        1 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 2
  6649 ;; This function calls:
  6650 ;;		_I2C_2_Master_Idle
  6651 ;; This function is called by:
  6652 ;;		_color_writetoaddr
  6653 ;;		_color_read_Clear
  6654 ;;		_color_read_Red
  6655 ;;		_color_read_Green
  6656 ;;		_color_read_Blue
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text22
  6661  0037B8                     __ptext22:
  6662                           	callstack 0
  6663  0037B8                     _I2C_2_Master_Write:
  6664                           	callstack 26
  6665                           
  6666                           ;incstack = 0
  6667                           ;I2C_2_Master_Write@data_byte stored from wreg
  6668  0037B8  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6669  0037BA                     
  6670                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6671  0037BA  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6672  0037BE                     
  6673                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6674  0037BE  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6675  0037C2  0012               	return		;funcret
  6676  0037C4                     __end_of_I2C_2_Master_Write:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _I2C_2_Master_Stop *****************
  6680 ;; Defined at:
  6681 ;;		line 39 in file "i2c.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 2
  6702 ;; This function calls:
  6703 ;;		_I2C_2_Master_Idle
  6704 ;; This function is called by:
  6705 ;;		_color_writetoaddr
  6706 ;;		_color_read_Clear
  6707 ;;		_color_read_Red
  6708 ;;		_color_read_Green
  6709 ;;		_color_read_Blue
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text23
  6714  0037D0                     __ptext23:
  6715                           	callstack 0
  6716  0037D0                     _I2C_2_Master_Stop:
  6717                           	callstack 26
  6718  0037D0                     
  6719                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6720  0037D0  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6721  0037D4                     
  6722                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6723  0037D4  010E               	movlb	14	; () banked
  6724  0037D6  85DA               	bsf	218,2,b	;volatile
  6725  0037D8                     
  6726                           ; BSR set to: 14
  6727  0037D8  0012               	return		;funcret
  6728  0037DA                     __end_of_I2C_2_Master_Stop:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function _I2C_2_Master_Start *****************
  6732 ;; Defined at:
  6733 ;;		line 27 in file "i2c.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used: 1
  6753 ;; Hardware stack levels required when called: 2
  6754 ;; This function calls:
  6755 ;;		_I2C_2_Master_Idle
  6756 ;; This function is called by:
  6757 ;;		_color_writetoaddr
  6758 ;;		_color_read_Clear
  6759 ;;		_color_read_Red
  6760 ;;		_color_read_Green
  6761 ;;		_color_read_Blue
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text24
  6766  0037DA                     __ptext24:
  6767                           	callstack 0
  6768  0037DA                     _I2C_2_Master_Start:
  6769                           	callstack 26
  6770  0037DA                     
  6771                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6772  0037DA  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6773  0037DE                     
  6774                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6775  0037DE  010E               	movlb	14	; () banked
  6776  0037E0  81DA               	bsf	218,0,b	;volatile
  6777  0037E2                     
  6778                           ; BSR set to: 14
  6779  0037E2  0012               	return		;funcret
  6780  0037E4                     __end_of_I2C_2_Master_Start:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function _I2C_2_Master_RepStart *****************
  6784 ;; Defined at:
  6785 ;;		line 33 in file "i2c.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;		None
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;Total ram usage:        0 bytes
  6804 ;; Hardware stack levels used: 1
  6805 ;; Hardware stack levels required when called: 2
  6806 ;; This function calls:
  6807 ;;		_I2C_2_Master_Idle
  6808 ;; This function is called by:
  6809 ;;		_color_read_Clear
  6810 ;;		_color_read_Red
  6811 ;;		_color_read_Green
  6812 ;;		_color_read_Blue
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text25
  6817  0037E4                     __ptext25:
  6818                           	callstack 0
  6819  0037E4                     _I2C_2_Master_RepStart:
  6820                           	callstack 26
  6821  0037E4                     
  6822                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6823  0037E4  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6824  0037E8                     
  6825                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6826  0037E8  010E               	movlb	14	; () banked
  6827  0037EA  83DA               	bsf	218,1,b	;volatile
  6828  0037EC                     
  6829                           ; BSR set to: 14
  6830  0037EC  0012               	return		;funcret
  6831  0037EE                     __end_of_I2C_2_Master_RepStart:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _I2C_2_Master_Read *****************
  6835 ;; Defined at:
  6836 ;;		line 51 in file "i2c.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  ack             1    wreg     unsigned char 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  ack             1    2[COMRAM] unsigned char 
  6841 ;;  tmp             1    3[COMRAM] unsigned char 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      unsigned char 
  6844 ;; Registers used:
  6845 ;;		wreg, status,2, status,0, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;Total ram usage:        3 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; Hardware stack levels required when called: 2
  6858 ;; This function calls:
  6859 ;;		_I2C_2_Master_Idle
  6860 ;; This function is called by:
  6861 ;;		_color_read_Clear
  6862 ;;		_color_read_Red
  6863 ;;		_color_read_Green
  6864 ;;		_color_read_Blue
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text26
  6869  00364C                     __ptext26:
  6870                           	callstack 0
  6871  00364C                     _I2C_2_Master_Read:
  6872                           	callstack 26
  6873                           
  6874                           ; BSR set to: 14
  6875                           ;incstack = 0
  6876                           ;I2C_2_Master_Read@ack stored from wreg
  6877  00364C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6878  00364E                     
  6879                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6880  00364E  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6881  003652                     
  6882                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6883  003652  010E               	movlb	14	; () banked
  6884  003654  87DA               	bsf	218,3,b	;volatile
  6885                           
  6886                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6887  003656  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6888  00365A                     
  6889                           ;i2c.c: 57:   tmp = SSP2BUF;
  6890  00365A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6891                           
  6892                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6893  00365E  EC76  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6894  003662                     
  6895                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6896  003662  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6897  003664  B4D8               	btfsc	status,2,c
  6898  003666  EF37  F01B         	goto	u2241
  6899  00366A  EF3B  F01B         	goto	u2240
  6900  00366E                     u2241:
  6901  00366E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6902  003670  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6903  003672  EF3C  F01B         	goto	u2258
  6904  003676                     u2240:
  6905  003676  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6906  003678                     u2258:
  6907  003678  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6908  00367A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6909  00367C  010E               	movlb	14	; () banked
  6910  00367E  51DA               	movf	218,w,b	;volatile
  6911  003680  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6912  003682  0BDF               	andlw	-33
  6913  003684  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6914  003686  6FDA               	movwf	218,b	;volatile
  6915  003688                     
  6916                           ; BSR set to: 14
  6917                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6918  003688  89DA               	bsf	218,4,b	;volatile
  6919  00368A                     
  6920                           ; BSR set to: 14
  6921                           ;i2c.c: 61:   return tmp;
  6922  00368A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6923  00368C                     
  6924                           ; BSR set to: 14
  6925  00368C  0012               	return		;funcret
  6926  00368E                     __end_of_I2C_2_Master_Read:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _I2C_2_Master_Idle *****************
  6930 ;; Defined at:
  6931 ;;		line 22 in file "i2c.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;Total ram usage:        1 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_I2C_2_Master_Start
  6956 ;;		_I2C_2_Master_RepStart
  6957 ;;		_I2C_2_Master_Stop
  6958 ;;		_I2C_2_Master_Write
  6959 ;;		_I2C_2_Master_Read
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text27
  6964  0036EC                     __ptext27:
  6965                           	callstack 0
  6966  0036EC                     _I2C_2_Master_Idle:
  6967                           	callstack 26
  6968  0036EC                     l154:
  6969  0036EC  010E               	movlb	14	; () banked
  6970  0036EE  B5D8               	btfsc	216,2,b	;volatile
  6971  0036F0  EF7C  F01B         	goto	u2221
  6972  0036F4  EF7E  F01B         	goto	u2220
  6973  0036F8                     u2221:
  6974  0036F8  EF76  F01B         	goto	l154
  6975  0036FC                     u2220:
  6976  0036FC                     
  6977                           ; BSR set to: 14
  6978  0036FC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6979  003700  0E1F               	movlw	31
  6980  003702  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6981  003704  A4D8               	btfss	status,2,c
  6982  003706  EF87  F01B         	goto	u2231
  6983  00370A  EF89  F01B         	goto	u2230
  6984  00370E                     u2231:
  6985  00370E  EF76  F01B         	goto	l154
  6986  003712                     u2230:
  6987  003712                     
  6988                           ; BSR set to: 14
  6989  003712  0012               	return		;funcret
  6990  003714                     __end_of_I2C_2_Master_Idle:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _White *****************
  6994 ;; Defined at:
  6995 ;;		line 174 in file "color.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  mL              2   42[COMRAM] PTR struct DC_motor
  6998 ;;		 -> main@motorL(9), 
  6999 ;;  mR              2   44[COMRAM] PTR struct DC_motor
  7000 ;;		 -> main@motorR(9), 
  7001 ;;  movementArra    2   46[COMRAM] PTR int 
  7002 ;;		 -> movementArray(0), 
  7003 ;;  movements       2   48[COMRAM] unsigned int 
  7004 ;;  timerArray      2   50[COMRAM] PTR int 
  7005 ;;		 -> timerArray(0), 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  tempTimerVal    2   59[COMRAM] int 
  7008 ;;  i               2   61[COMRAM] int 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7018 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;Total ram usage:       21 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 6
  7025 ;; This function calls:
  7026 ;;		_forward
  7027 ;;		_reverseTurnLeft90
  7028 ;;		_reverseTurnRight90
  7029 ;;		_stop
  7030 ;;		_turnLeft135
  7031 ;;		_turnLeft90
  7032 ;;		_turnRight135
  7033 ;;		_turnRight180
  7034 ;;		_turnRight90
  7035 ;; This function is called by:
  7036 ;;		_main
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text28
  7041  001C60                     __ptext28:
  7042                           	callstack 0
  7043  001C60                     _White:
  7044                           	callstack 24
  7045  001C60                     
  7046                           ;color.c: 174: void White(struct DC_motor *mL, struct DC_motor *mR, int movementArray[],
      +                           unsigned int movements, int timerArray[]);color.c: 175: {;color.c: 176:     stop(mL, mR
      +                          );
  7047  001C60  C02B  F019         	movff	White@mL,stop@mL
  7048  001C64  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7049  001C68  C02D  F01B         	movff	White@mR,stop@mR
  7050  001C6C  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7051  001C70  ECB0  F018         	call	_stop	;wreg free
  7052                           
  7053                           ;color.c: 177:     turnRight180(mL, mR);
  7054  001C74  C02B  F01D         	movff	White@mL,turnRight180@mL
  7055  001C78  C02C  F01E         	movff	White@mL+1,turnRight180@mL+1
  7056  001C7C  C02D  F01F         	movff	White@mR,turnRight180@mR
  7057  001C80  C02E  F020         	movff	White@mR+1,turnRight180@mR+1
  7058  001C84  EC44  F014         	call	_turnRight180	;wreg free
  7059  001C88                     
  7060                           ;color.c: 178:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7061  001C88  0E52               	movlw	82
  7062  001C8A  6E36               	movwf	(??_White+1)^0,c
  7063  001C8C  0E2B               	movlw	43
  7064  001C8E  6E35               	movwf	??_White^0,c
  7065  001C90  0E00               	movlw	0
  7066  001C92                     u4317:
  7067  001C92  2EE8               	decfsz	wreg,f,c
  7068  001C94  D7FE               	bra	u4317
  7069  001C96  2E35               	decfsz	??_White^0,f,c
  7070  001C98  D7FC               	bra	u4317
  7071  001C9A  2E36               	decfsz	(??_White+1)^0,f,c
  7072  001C9C  D7FA               	bra	u4317
  7073  001C9E  D000               	nop2	
  7074  001CA0                     
  7075                           ;color.c: 179:     for (int i=0; i<movements; i++){
  7076  001CA0  0E00               	movlw	0
  7077  001CA2  6E3F               	movwf	(White@i+1)^0,c
  7078  001CA4  0E00               	movlw	0
  7079  001CA6  6E3E               	movwf	White@i^0,c
  7080  001CA8  EFFD  F00F         	goto	l3871
  7081  001CAC                     l3829:
  7082                           
  7083                           ;color.c: 180:         if (movementArray[movements-i-1] == 0){turnLeft90(mL, mR);}
  7084  001CAC  503E               	movf	White@i^0,w,c
  7085  001CAE  5C31               	subwf	White@movements^0,w,c
  7086  001CB0  6E35               	movwf	??_White^0,c
  7087  001CB2  503F               	movf	(White@i+1)^0,w,c
  7088  001CB4  5832               	subwfb	(White@movements+1)^0,w,c
  7089  001CB6  6E36               	movwf	(??_White+1)^0,c
  7090  001CB8  90D8               	bcf	status,0,c
  7091  001CBA  3635               	rlcf	??_White^0,f,c
  7092  001CBC  3636               	rlcf	(??_White+1)^0,f,c
  7093  001CBE  C02F  F037         	movff	White@movementArray,??_White+2
  7094  001CC2  C030  F038         	movff	White@movementArray+1,??_White+3
  7095  001CC6  5035               	movf	??_White^0,w,c
  7096  001CC8  2637               	addwf	(??_White+2)^0,f,c
  7097  001CCA  5036               	movf	(??_White+1)^0,w,c
  7098  001CCC  2238               	addwfc	(??_White+3)^0,f,c
  7099  001CCE  0EFE               	movlw	254
  7100  001CD0  2437               	addwf	(??_White+2)^0,w,c
  7101  001CD2  6ED9               	movwf	fsr2l,c
  7102  001CD4  0EFF               	movlw	255
  7103  001CD6  2038               	addwfc	(??_White+3)^0,w,c
  7104  001CD8  6EDA               	movwf	fsr2h,c
  7105  001CDA  50DE               	movf	postinc2,w,c
  7106  001CDC  10DE               	iorwf	postinc2,w,c
  7107  001CDE  A4D8               	btfss	status,2,c
  7108  001CE0  EF74  F00E         	goto	u3731
  7109  001CE4  EF76  F00E         	goto	u3730
  7110  001CE8                     u3731:
  7111  001CE8  EF82  F00E         	goto	l3833
  7112  001CEC                     u3730:
  7113  001CEC  C02B  F01D         	movff	White@mL,turnLeft90@mL
  7114  001CF0  C02C  F01E         	movff	White@mL+1,turnLeft90@mL+1
  7115  001CF4  C02D  F01F         	movff	White@mR,turnLeft90@mR
  7116  001CF8  C02E  F020         	movff	White@mR+1,turnLeft90@mR+1
  7117  001CFC  ECA4  F013         	call	_turnLeft90	;wreg free
  7118  001D00  EFBC  F00F         	goto	l3861
  7119  001D04                     l3833:
  7120  001D04  503E               	movf	White@i^0,w,c
  7121  001D06  5C31               	subwf	White@movements^0,w,c
  7122  001D08  6E35               	movwf	??_White^0,c
  7123  001D0A  503F               	movf	(White@i+1)^0,w,c
  7124  001D0C  5832               	subwfb	(White@movements+1)^0,w,c
  7125  001D0E  6E36               	movwf	(??_White+1)^0,c
  7126  001D10  90D8               	bcf	status,0,c
  7127  001D12  3635               	rlcf	??_White^0,f,c
  7128  001D14  3636               	rlcf	(??_White+1)^0,f,c
  7129  001D16  C02F  F037         	movff	White@movementArray,??_White+2
  7130  001D1A  C030  F038         	movff	White@movementArray+1,??_White+3
  7131  001D1E  5035               	movf	??_White^0,w,c
  7132  001D20  2637               	addwf	(??_White+2)^0,f,c
  7133  001D22  5036               	movf	(??_White+1)^0,w,c
  7134  001D24  2238               	addwfc	(??_White+3)^0,f,c
  7135  001D26  0EFE               	movlw	254
  7136  001D28  2437               	addwf	(??_White+2)^0,w,c
  7137  001D2A  6ED9               	movwf	fsr2l,c
  7138  001D2C  0EFF               	movlw	255
  7139  001D2E  2038               	addwfc	(??_White+3)^0,w,c
  7140  001D30  6EDA               	movwf	fsr2h,c
  7141  001D32  04DE               	decf	postinc2,w,c
  7142  001D34  10DE               	iorwf	postinc2,w,c
  7143  001D36  A4D8               	btfss	status,2,c
  7144  001D38  EFA0  F00E         	goto	u3741
  7145  001D3C  EFA2  F00E         	goto	u3740
  7146  001D40                     u3741:
  7147  001D40  EFAE  F00E         	goto	l3837
  7148  001D44                     u3740:
  7149  001D44  C02B  F01D         	movff	White@mL,turnRight90@mL
  7150  001D48  C02C  F01E         	movff	White@mL+1,turnRight90@mL+1
  7151  001D4C  C02D  F01F         	movff	White@mR,turnRight90@mR
  7152  001D50  C02E  F020         	movff	White@mR+1,turnRight90@mR+1
  7153  001D54  EC82  F015         	call	_turnRight90	;wreg free
  7154  001D58  EFBC  F00F         	goto	l3861
  7155  001D5C                     l3837:
  7156  001D5C  503E               	movf	White@i^0,w,c
  7157  001D5E  5C31               	subwf	White@movements^0,w,c
  7158  001D60  6E35               	movwf	??_White^0,c
  7159  001D62  503F               	movf	(White@i+1)^0,w,c
  7160  001D64  5832               	subwfb	(White@movements+1)^0,w,c
  7161  001D66  6E36               	movwf	(??_White+1)^0,c
  7162  001D68  90D8               	bcf	status,0,c
  7163  001D6A  3635               	rlcf	??_White^0,f,c
  7164  001D6C  3636               	rlcf	(??_White+1)^0,f,c
  7165  001D6E  C02F  F037         	movff	White@movementArray,??_White+2
  7166  001D72  C030  F038         	movff	White@movementArray+1,??_White+3
  7167  001D76  5035               	movf	??_White^0,w,c
  7168  001D78  2637               	addwf	(??_White+2)^0,f,c
  7169  001D7A  5036               	movf	(??_White+1)^0,w,c
  7170  001D7C  2238               	addwfc	(??_White+3)^0,f,c
  7171  001D7E  0EFE               	movlw	254
  7172  001D80  2437               	addwf	(??_White+2)^0,w,c
  7173  001D82  6ED9               	movwf	fsr2l,c
  7174  001D84  0EFF               	movlw	255
  7175  001D86  2038               	addwfc	(??_White+3)^0,w,c
  7176  001D88  6EDA               	movwf	fsr2h,c
  7177  001D8A  0E02               	movlw	2
  7178  001D8C  18DE               	xorwf	postinc2,w,c
  7179  001D8E  10DE               	iorwf	postinc2,w,c
  7180  001D90  A4D8               	btfss	status,2,c
  7181  001D92  EFCD  F00E         	goto	u3751
  7182  001D96  EFCF  F00E         	goto	u3750
  7183  001D9A                     u3751:
  7184  001D9A  EFDB  F00E         	goto	l3841
  7185  001D9E                     u3750:
  7186  001D9E  C02B  F01D         	movff	White@mL,turnRight180@mL
  7187  001DA2  C02C  F01E         	movff	White@mL+1,turnRight180@mL+1
  7188  001DA6  C02D  F01F         	movff	White@mR,turnRight180@mR
  7189  001DAA  C02E  F020         	movff	White@mR+1,turnRight180@mR+1
  7190  001DAE  EC44  F014         	call	_turnRight180	;wreg free
  7191  001DB2  EFBC  F00F         	goto	l3861
  7192  001DB6                     l3841:
  7193  001DB6  503E               	movf	White@i^0,w,c
  7194  001DB8  5C31               	subwf	White@movements^0,w,c
  7195  001DBA  6E35               	movwf	??_White^0,c
  7196  001DBC  503F               	movf	(White@i+1)^0,w,c
  7197  001DBE  5832               	subwfb	(White@movements+1)^0,w,c
  7198  001DC0  6E36               	movwf	(??_White+1)^0,c
  7199  001DC2  90D8               	bcf	status,0,c
  7200  001DC4  3635               	rlcf	??_White^0,f,c
  7201  001DC6  3636               	rlcf	(??_White+1)^0,f,c
  7202  001DC8  C02F  F037         	movff	White@movementArray,??_White+2
  7203  001DCC  C030  F038         	movff	White@movementArray+1,??_White+3
  7204  001DD0  5035               	movf	??_White^0,w,c
  7205  001DD2  2637               	addwf	(??_White+2)^0,f,c
  7206  001DD4  5036               	movf	(??_White+1)^0,w,c
  7207  001DD6  2238               	addwfc	(??_White+3)^0,f,c
  7208  001DD8  0EFE               	movlw	254
  7209  001DDA  2437               	addwf	(??_White+2)^0,w,c
  7210  001DDC  6ED9               	movwf	fsr2l,c
  7211  001DDE  0EFF               	movlw	255
  7212  001DE0  2038               	addwfc	(??_White+3)^0,w,c
  7213  001DE2  6EDA               	movwf	fsr2h,c
  7214  001DE4  0E03               	movlw	3
  7215  001DE6  18DE               	xorwf	postinc2,w,c
  7216  001DE8  10DE               	iorwf	postinc2,w,c
  7217  001DEA  A4D8               	btfss	status,2,c
  7218  001DEC  EFFA  F00E         	goto	u3761
  7219  001DF0  EFFC  F00E         	goto	u3760
  7220  001DF4                     u3761:
  7221  001DF4  EF08  F00F         	goto	l3845
  7222  001DF8                     u3760:
  7223  001DF8  C02B  F025         	movff	White@mL,reverseTurnLeft90@mL
  7224  001DFC  C02C  F026         	movff	White@mL+1,reverseTurnLeft90@mL+1
  7225  001E00  C02D  F027         	movff	White@mR,reverseTurnLeft90@mR
  7226  001E04  C02E  F028         	movff	White@mR+1,reverseTurnLeft90@mR+1
  7227  001E08  EC3A  F018         	call	_reverseTurnLeft90	;wreg free
  7228  001E0C  EFBC  F00F         	goto	l3861
  7229  001E10                     l3845:
  7230  001E10  503E               	movf	White@i^0,w,c
  7231  001E12  5C31               	subwf	White@movements^0,w,c
  7232  001E14  6E35               	movwf	??_White^0,c
  7233  001E16  503F               	movf	(White@i+1)^0,w,c
  7234  001E18  5832               	subwfb	(White@movements+1)^0,w,c
  7235  001E1A  6E36               	movwf	(??_White+1)^0,c
  7236  001E1C  90D8               	bcf	status,0,c
  7237  001E1E  3635               	rlcf	??_White^0,f,c
  7238  001E20  3636               	rlcf	(??_White+1)^0,f,c
  7239  001E22  C02F  F037         	movff	White@movementArray,??_White+2
  7240  001E26  C030  F038         	movff	White@movementArray+1,??_White+3
  7241  001E2A  5035               	movf	??_White^0,w,c
  7242  001E2C  2637               	addwf	(??_White+2)^0,f,c
  7243  001E2E  5036               	movf	(??_White+1)^0,w,c
  7244  001E30  2238               	addwfc	(??_White+3)^0,f,c
  7245  001E32  0EFE               	movlw	254
  7246  001E34  2437               	addwf	(??_White+2)^0,w,c
  7247  001E36  6ED9               	movwf	fsr2l,c
  7248  001E38  0EFF               	movlw	255
  7249  001E3A  2038               	addwfc	(??_White+3)^0,w,c
  7250  001E3C  6EDA               	movwf	fsr2h,c
  7251  001E3E  0E04               	movlw	4
  7252  001E40  18DE               	xorwf	postinc2,w,c
  7253  001E42  10DE               	iorwf	postinc2,w,c
  7254  001E44  A4D8               	btfss	status,2,c
  7255  001E46  EF27  F00F         	goto	u3771
  7256  001E4A  EF29  F00F         	goto	u3770
  7257  001E4E                     u3771:
  7258  001E4E  EF35  F00F         	goto	l3849
  7259  001E52                     u3770:
  7260  001E52  C02B  F025         	movff	White@mL,reverseTurnRight90@mL
  7261  001E56  C02C  F026         	movff	White@mL+1,reverseTurnRight90@mL+1
  7262  001E5A  C02D  F027         	movff	White@mR,reverseTurnRight90@mR
  7263  001E5E  C02E  F028         	movff	White@mR+1,reverseTurnRight90@mR+1
  7264  001E62  ECC4  F017         	call	_reverseTurnRight90	;wreg free
  7265  001E66  EFBC  F00F         	goto	l3861
  7266  001E6A                     l3849:
  7267  001E6A  503E               	movf	White@i^0,w,c
  7268  001E6C  5C31               	subwf	White@movements^0,w,c
  7269  001E6E  6E35               	movwf	??_White^0,c
  7270  001E70  503F               	movf	(White@i+1)^0,w,c
  7271  001E72  5832               	subwfb	(White@movements+1)^0,w,c
  7272  001E74  6E36               	movwf	(??_White+1)^0,c
  7273  001E76  90D8               	bcf	status,0,c
  7274  001E78  3635               	rlcf	??_White^0,f,c
  7275  001E7A  3636               	rlcf	(??_White+1)^0,f,c
  7276  001E7C  C02F  F037         	movff	White@movementArray,??_White+2
  7277  001E80  C030  F038         	movff	White@movementArray+1,??_White+3
  7278  001E84  5035               	movf	??_White^0,w,c
  7279  001E86  2637               	addwf	(??_White+2)^0,f,c
  7280  001E88  5036               	movf	(??_White+1)^0,w,c
  7281  001E8A  2238               	addwfc	(??_White+3)^0,f,c
  7282  001E8C  0EFE               	movlw	254
  7283  001E8E  2437               	addwf	(??_White+2)^0,w,c
  7284  001E90  6ED9               	movwf	fsr2l,c
  7285  001E92  0EFF               	movlw	255
  7286  001E94  2038               	addwfc	(??_White+3)^0,w,c
  7287  001E96  6EDA               	movwf	fsr2h,c
  7288  001E98  0E05               	movlw	5
  7289  001E9A  18DE               	xorwf	postinc2,w,c
  7290  001E9C  10DE               	iorwf	postinc2,w,c
  7291  001E9E  A4D8               	btfss	status,2,c
  7292  001EA0  EF54  F00F         	goto	u3781
  7293  001EA4  EF56  F00F         	goto	u3780
  7294  001EA8                     u3781:
  7295  001EA8  EF62  F00F         	goto	l3853
  7296  001EAC                     u3780:
  7297  001EAC  C02B  F01D         	movff	White@mL,turnLeft135@mL
  7298  001EB0  C02C  F01E         	movff	White@mL+1,turnLeft135@mL+1
  7299  001EB4  C02D  F01F         	movff	White@mR,turnLeft135@mR
  7300  001EB8  C02E  F020         	movff	White@mR+1,turnLeft135@mR+1
  7301  001EBC  EC21  F016         	call	_turnLeft135	;wreg free
  7302  001EC0  EFBC  F00F         	goto	l3861
  7303  001EC4                     l3853:
  7304  001EC4  503E               	movf	White@i^0,w,c
  7305  001EC6  5C31               	subwf	White@movements^0,w,c
  7306  001EC8  6E35               	movwf	??_White^0,c
  7307  001ECA  503F               	movf	(White@i+1)^0,w,c
  7308  001ECC  5832               	subwfb	(White@movements+1)^0,w,c
  7309  001ECE  6E36               	movwf	(??_White+1)^0,c
  7310  001ED0  90D8               	bcf	status,0,c
  7311  001ED2  3635               	rlcf	??_White^0,f,c
  7312  001ED4  3636               	rlcf	(??_White+1)^0,f,c
  7313  001ED6  C02F  F037         	movff	White@movementArray,??_White+2
  7314  001EDA  C030  F038         	movff	White@movementArray+1,??_White+3
  7315  001EDE  5035               	movf	??_White^0,w,c
  7316  001EE0  2637               	addwf	(??_White+2)^0,f,c
  7317  001EE2  5036               	movf	(??_White+1)^0,w,c
  7318  001EE4  2238               	addwfc	(??_White+3)^0,f,c
  7319  001EE6  0EFE               	movlw	254
  7320  001EE8  2437               	addwf	(??_White+2)^0,w,c
  7321  001EEA  6ED9               	movwf	fsr2l,c
  7322  001EEC  0EFF               	movlw	255
  7323  001EEE  2038               	addwfc	(??_White+3)^0,w,c
  7324  001EF0  6EDA               	movwf	fsr2h,c
  7325  001EF2  0E06               	movlw	6
  7326  001EF4  18DE               	xorwf	postinc2,w,c
  7327  001EF6  10DE               	iorwf	postinc2,w,c
  7328  001EF8  A4D8               	btfss	status,2,c
  7329  001EFA  EF81  F00F         	goto	u3791
  7330  001EFE  EF83  F00F         	goto	u3790
  7331  001F02                     u3791:
  7332  001F02  EF8F  F00F         	goto	l3857
  7333  001F06                     u3790:
  7334  001F06  C02B  F01D         	movff	White@mL,turnRight135@mL
  7335  001F0A  C02C  F01E         	movff	White@mL+1,turnRight135@mL+1
  7336  001F0E  C02D  F01F         	movff	White@mR,turnRight135@mR
  7337  001F12  C02E  F020         	movff	White@mR+1,turnRight135@mR+1
  7338  001F16  ECE3  F014         	call	_turnRight135	;wreg free
  7339  001F1A  EFBC  F00F         	goto	l3861
  7340  001F1E                     l3857:
  7341  001F1E  503E               	movf	White@i^0,w,c
  7342  001F20  5C31               	subwf	White@movements^0,w,c
  7343  001F22  6E35               	movwf	??_White^0,c
  7344  001F24  503F               	movf	(White@i+1)^0,w,c
  7345  001F26  5832               	subwfb	(White@movements+1)^0,w,c
  7346  001F28  6E36               	movwf	(??_White+1)^0,c
  7347  001F2A  90D8               	bcf	status,0,c
  7348  001F2C  3635               	rlcf	??_White^0,f,c
  7349  001F2E  3636               	rlcf	(??_White+1)^0,f,c
  7350  001F30  C02F  F037         	movff	White@movementArray,??_White+2
  7351  001F34  C030  F038         	movff	White@movementArray+1,??_White+3
  7352  001F38  5035               	movf	??_White^0,w,c
  7353  001F3A  2637               	addwf	(??_White+2)^0,f,c
  7354  001F3C  5036               	movf	(??_White+1)^0,w,c
  7355  001F3E  2238               	addwfc	(??_White+3)^0,f,c
  7356  001F40  0EFE               	movlw	254
  7357  001F42  2437               	addwf	(??_White+2)^0,w,c
  7358  001F44  6ED9               	movwf	fsr2l,c
  7359  001F46  0EFF               	movlw	255
  7360  001F48  2038               	addwfc	(??_White+3)^0,w,c
  7361  001F4A  6EDA               	movwf	fsr2h,c
  7362  001F4C  0E09               	movlw	9
  7363  001F4E  18DE               	xorwf	postinc2,w,c
  7364  001F50  10DE               	iorwf	postinc2,w,c
  7365  001F52  A4D8               	btfss	status,2,c
  7366  001F54  EFAE  F00F         	goto	u3801
  7367  001F58  EFB0  F00F         	goto	u3800
  7368  001F5C                     u3801:
  7369  001F5C  EFBC  F00F         	goto	l111
  7370  001F60                     u3800:
  7371  001F60  C02B  F019         	movff	White@mL,forward@mL
  7372  001F64  C02C  F01A         	movff	White@mL+1,forward@mL+1
  7373  001F68  C02D  F01B         	movff	White@mR,forward@mR
  7374  001F6C  C02E  F01C         	movff	White@mR+1,forward@mR+1
  7375  001F70  ECCE  F019         	call	_forward	;wreg free
  7376  001F74  EFBC  F00F         	goto	l3861
  7377  001F78                     l111:
  7378  001F78                     l3861:
  7379                           
  7380                           ;color.c: 188:         int tempTimerVal = 0;
  7381  001F78  0E00               	movlw	0
  7382  001F7A  6E3D               	movwf	(White@tempTimerVal+1)^0,c
  7383  001F7C  0E00               	movlw	0
  7384  001F7E  6E3C               	movwf	White@tempTimerVal^0,c
  7385  001F80                     
  7386                           ;color.c: 189:         forward(mL, mR);
  7387  001F80  C02B  F019         	movff	White@mL,forward@mL
  7388  001F84  C02C  F01A         	movff	White@mL+1,forward@mL+1
  7389  001F88  C02D  F01B         	movff	White@mR,forward@mR
  7390  001F8C  C02E  F01C         	movff	White@mR+1,forward@mR+1
  7391  001F90  ECCE  F019         	call	_forward	;wreg free
  7392                           
  7393                           ;color.c: 190:         TMR0H = 0;
  7394  001F94  0E00               	movlw	0
  7395  001F96  6ED4               	movwf	212,c	;volatile
  7396                           
  7397                           ;color.c: 191:         TMR0L = 0;
  7398  001F98  0E00               	movlw	0
  7399  001F9A  6ED3               	movwf	211,c	;volatile
  7400                           
  7401                           ;color.c: 192:         while(tempTimerVal < timerArray[movements-i-1]){
  7402  001F9C  EFD5  F00F         	goto	l3867
  7403  001FA0                     l118:
  7404                           
  7405                           ;color.c: 193:             tempTimerVal = TMR0L;
  7406  001FA0  CFD3 F03C          	movff	4051,White@tempTimerVal	;volatile
  7407  001FA4  6A3D               	clrf	(White@tempTimerVal+1)^0,c
  7408  001FA6                     
  7409                           ;color.c: 194:             tempTimerVal += (TMR0H << 8);
  7410  001FA6  50D4               	movf	212,w,c	;volatile
  7411  001FA8  263D               	addwf	(White@tempTimerVal+1)^0,f,c
  7412  001FAA                     l3867:
  7413                           
  7414                           ;color.c: 192:         while(tempTimerVal < timerArray[movements-i-1]){
  7415  001FAA  503E               	movf	White@i^0,w,c
  7416  001FAC  5C31               	subwf	White@movements^0,w,c
  7417  001FAE  6E35               	movwf	??_White^0,c
  7418  001FB0  503F               	movf	(White@i+1)^0,w,c
  7419  001FB2  5832               	subwfb	(White@movements+1)^0,w,c
  7420  001FB4  6E36               	movwf	(??_White+1)^0,c
  7421  001FB6  90D8               	bcf	status,0,c
  7422  001FB8  3635               	rlcf	??_White^0,f,c
  7423  001FBA  3636               	rlcf	(??_White+1)^0,f,c
  7424  001FBC  C033  F037         	movff	White@timerArray,??_White+2
  7425  001FC0  C034  F038         	movff	White@timerArray+1,??_White+3
  7426  001FC4  5035               	movf	??_White^0,w,c
  7427  001FC6  2637               	addwf	(??_White+2)^0,f,c
  7428  001FC8  5036               	movf	(??_White+1)^0,w,c
  7429  001FCA  2238               	addwfc	(??_White+3)^0,f,c
  7430  001FCC  0EFE               	movlw	254
  7431  001FCE  2437               	addwf	(??_White+2)^0,w,c
  7432  001FD0  6ED9               	movwf	fsr2l,c
  7433  001FD2  0EFF               	movlw	255
  7434  001FD4  2038               	addwfc	(??_White+3)^0,w,c
  7435  001FD6  6EDA               	movwf	fsr2h,c
  7436  001FD8  50DE               	movf	postinc2,w,c
  7437  001FDA  5C3C               	subwf	White@tempTimerVal^0,w,c
  7438  001FDC  503D               	movf	(White@tempTimerVal+1)^0,w,c
  7439  001FDE  0A80               	xorlw	128
  7440  001FE0  6E3B               	movwf	(??_White+6)^0,c
  7441  001FE2  50DE               	movf	postinc2,w,c
  7442  001FE4  0A80               	xorlw	128
  7443  001FE6  583B               	subwfb	(??_White+6)^0,w,c
  7444  001FE8  A0D8               	btfss	status,0,c
  7445  001FEA  EFF9  F00F         	goto	u3811
  7446  001FEE  EFFB  F00F         	goto	u3810
  7447  001FF2                     u3811:
  7448  001FF2  EFD0  F00F         	goto	l118
  7449  001FF6                     u3810:
  7450  001FF6                     
  7451                           ;color.c: 196:     }
  7452  001FF6  4A3E               	infsnz	White@i^0,f,c
  7453  001FF8  2A3F               	incf	(White@i+1)^0,f,c
  7454  001FFA                     l3871:
  7455  001FFA  5031               	movf	White@movements^0,w,c
  7456  001FFC  5C3E               	subwf	White@i^0,w,c
  7457  001FFE  5032               	movf	(White@movements+1)^0,w,c
  7458  002000  583F               	subwfb	(White@i+1)^0,w,c
  7459  002002  A0D8               	btfss	status,0,c
  7460  002004  EF06  F010         	goto	u3821
  7461  002008  EF08  F010         	goto	u3820
  7462  00200C                     u3821:
  7463  00200C  EF56  F00E         	goto	l3829
  7464  002010                     u3820:
  7465  002010                     
  7466                           ;color.c: 197:     stop(mL, mR);
  7467  002010  C02B  F019         	movff	White@mL,stop@mL
  7468  002014  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7469  002018  C02D  F01B         	movff	White@mR,stop@mR
  7470  00201C  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7471  002020  ECB0  F018         	call	_stop	;wreg free
  7472  002024  0012               	return		;funcret
  7473  002026                     __end_of_White:
  7474                           	callstack 0
  7475                           
  7476 ;; *************** function _turnRight180 *****************
  7477 ;; Defined at:
  7478 ;;		line 183 in file "dc_motor.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7481 ;;		 -> main@motorL(9), 
  7482 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7483 ;;		 -> main@motorR(9), 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  i               2   34[COMRAM] unsigned int 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;Total ram usage:        8 bytes
  7500 ;; Hardware stack levels used: 1
  7501 ;; Hardware stack levels required when called: 4
  7502 ;; This function calls:
  7503 ;;		_reverse
  7504 ;;		_setMotorPWM
  7505 ;;		_stop
  7506 ;; This function is called by:
  7507 ;;		_White
  7508 ;;		_main
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text29
  7513  002888                     __ptext29:
  7514                           	callstack 0
  7515  002888                     _turnRight180:
  7516                           	callstack 26
  7517  002888                     
  7518                           ;dc_motor.c: 183: void turnRight180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 184: {;dc_motor.c: 185:     stop(mL, mR);
  7519  002888  C01D  F019         	movff	turnRight180@mL,stop@mL
  7520  00288C  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7521  002890  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7522  002894  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7523  002898  ECB0  F018         	call	_stop	;wreg free
  7524  00289C                     
  7525                           ;dc_motor.c: 186:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7526  00289C  0E05               	movlw	5
  7527  00289E  6E22               	movwf	(??_turnRight180+1)^0,c
  7528  0028A0  0E0F               	movlw	15
  7529  0028A2  6E21               	movwf	??_turnRight180^0,c
  7530  0028A4  0EF1               	movlw	241
  7531  0028A6                     u4327:
  7532  0028A6  2EE8               	decfsz	wreg,f,c
  7533  0028A8  D7FE               	bra	u4327
  7534  0028AA  2E21               	decfsz	??_turnRight180^0,f,c
  7535  0028AC  D7FC               	bra	u4327
  7536  0028AE  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7537  0028B0  D7FA               	bra	u4327
  7538  0028B2  F000               	nop	
  7539  0028B4                     
  7540                           ;dc_motor.c: 187:     reverse(mL, mR);
  7541  0028B4  C01D  F019         	movff	turnRight180@mL,reverse@mL
  7542  0028B8  C01E  F01A         	movff	turnRight180@mL+1,reverse@mL+1
  7543  0028BC  C01F  F01B         	movff	turnRight180@mR,reverse@mR
  7544  0028C0  C020  F01C         	movff	turnRight180@mR+1,reverse@mR+1
  7545  0028C4  ECA5  F019         	call	_reverse	;wreg free
  7546                           
  7547                           ;dc_motor.c: 188:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7548  0028C8  0E21               	movlw	33
  7549  0028CA  6E22               	movwf	(??_turnRight180+1)^0,c
  7550  0028CC  0E78               	movlw	120
  7551  0028CE  6E21               	movwf	??_turnRight180^0,c
  7552  0028D0  0E98               	movlw	152
  7553  0028D2                     u4337:
  7554  0028D2  2EE8               	decfsz	wreg,f,c
  7555  0028D4  D7FE               	bra	u4337
  7556  0028D6  2E21               	decfsz	??_turnRight180^0,f,c
  7557  0028D8  D7FC               	bra	u4337
  7558  0028DA  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7559  0028DC  D7FA               	bra	u4337
  7560  0028DE  D000               	nop2	
  7561  0028E0                     
  7562                           ;dc_motor.c: 189:     stop(mL, mR);
  7563  0028E0  C01D  F019         	movff	turnRight180@mL,stop@mL
  7564  0028E4  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7565  0028E8  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7566  0028EC  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7567  0028F0  ECB0  F018         	call	_stop	;wreg free
  7568  0028F4                     
  7569                           ;dc_motor.c: 190:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7570  0028F4  0E0D               	movlw	13
  7571  0028F6  6E22               	movwf	(??_turnRight180+1)^0,c
  7572  0028F8  0E2D               	movlw	45
  7573  0028FA  6E21               	movwf	??_turnRight180^0,c
  7574  0028FC  0ED8               	movlw	216
  7575  0028FE                     u4347:
  7576  0028FE  2EE8               	decfsz	wreg,f,c
  7577  002900  D7FE               	bra	u4347
  7578  002902  2E21               	decfsz	??_turnRight180^0,f,c
  7579  002904  D7FC               	bra	u4347
  7580  002906  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7581  002908  D7FA               	bra	u4347
  7582  00290A                     
  7583                           ;dc_motor.c: 192:     (*mL).direction = 1;
  7584  00290A  EE20 F001          	lfsr	2,1
  7585  00290E  501D               	movf	turnRight180@mL^0,w,c
  7586  002910  26D9               	addwf	fsr2l,f,c
  7587  002912  501E               	movf	(turnRight180@mL+1)^0,w,c
  7588  002914  22DA               	addwfc	fsr2h,f,c
  7589  002916  0E01               	movlw	1
  7590  002918  6EDF               	movwf	indf2,c
  7591  00291A                     
  7592                           ;dc_motor.c: 193:     (*mR).direction = 0;
  7593  00291A  EE20 F001          	lfsr	2,1
  7594  00291E  501F               	movf	turnRight180@mR^0,w,c
  7595  002920  26D9               	addwf	fsr2l,f,c
  7596  002922  5020               	movf	(turnRight180@mR+1)^0,w,c
  7597  002924  22DA               	addwfc	fsr2h,f,c
  7598  002926  0E00               	movlw	0
  7599  002928  6EDF               	movwf	indf2,c
  7600  00292A                     
  7601                           ;dc_motor.c: 194:     for (unsigned int i = 0; i < 75; ++i){
  7602  00292A  0E00               	movlw	0
  7603  00292C  6E24               	movwf	(turnRight180@i+1)^0,c
  7604  00292E  0E00               	movlw	0
  7605  002930  6E23               	movwf	turnRight180@i^0,c
  7606  002932                     l2979:
  7607                           
  7608                           ;dc_motor.c: 195:         (mL->power) += 1;
  7609  002932  C01D  FFD9         	movff	turnRight180@mL,fsr2l
  7610  002936  C01E  FFDA         	movff	turnRight180@mL+1,fsr2h
  7611  00293A  2ADF               	incf	indf2,f,c
  7612                           
  7613                           ;dc_motor.c: 196:         (mR->power) += 1;
  7614  00293C  C01F  FFD9         	movff	turnRight180@mR,fsr2l
  7615  002940  C020  FFDA         	movff	turnRight180@mR+1,fsr2h
  7616  002944  2ADF               	incf	indf2,f,c
  7617  002946                     
  7618                           ;dc_motor.c: 197:         setMotorPWM(mL);
  7619  002946  C01D  F00E         	movff	turnRight180@mL,setMotorPWM@m
  7620  00294A  C01E  F00F         	movff	turnRight180@mL+1,setMotorPWM@m+1
  7621  00294E  ECE0  F011         	call	_setMotorPWM	;wreg free
  7622  002952                     
  7623                           ;dc_motor.c: 198:         setMotorPWM(mR);
  7624  002952  C01F  F00E         	movff	turnRight180@mR,setMotorPWM@m
  7625  002956  C020  F00F         	movff	turnRight180@mR+1,setMotorPWM@m+1
  7626  00295A  ECE0  F011         	call	_setMotorPWM	;wreg free
  7627  00295E                     
  7628                           ;dc_motor.c: 199:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7629  00295E  0EA0               	movlw	160
  7630  002960                     u4357:
  7631  002960  D000               	nop2	
  7632  002962  2EE8               	decfsz	wreg,f,c
  7633  002964  D7FD               	bra	u4357
  7634  002966                     
  7635                           ;dc_motor.c: 200:     }
  7636  002966  4A23               	infsnz	turnRight180@i^0,f,c
  7637  002968  2A24               	incf	(turnRight180@i+1)^0,f,c
  7638  00296A  5024               	movf	(turnRight180@i+1)^0,w,c
  7639  00296C  E109               	bnz	u2350
  7640  00296E  0E4B               	movlw	75
  7641  002970  5C23               	subwf	turnRight180@i^0,w,c
  7642  002972  A0D8               	btfss	status,0,c
  7643  002974  EFBE  F014         	goto	u2351
  7644  002978  EFC0  F014         	goto	u2350
  7645  00297C                     u2351:
  7646  00297C  EF99  F014         	goto	l2979
  7647  002980                     u2350:
  7648  002980                     
  7649                           ;dc_motor.c: 201:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7650  002980  0E21               	movlw	33
  7651  002982  6E22               	movwf	(??_turnRight180+1)^0,c
  7652  002984  0E78               	movlw	120
  7653  002986  6E21               	movwf	??_turnRight180^0,c
  7654  002988  0E98               	movlw	152
  7655  00298A                     u4367:
  7656  00298A  2EE8               	decfsz	wreg,f,c
  7657  00298C  D7FE               	bra	u4367
  7658  00298E  2E21               	decfsz	??_turnRight180^0,f,c
  7659  002990  D7FC               	bra	u4367
  7660  002992  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7661  002994  D7FA               	bra	u4367
  7662  002996  D000               	nop2	
  7663  002998                     
  7664                           ;dc_motor.c: 202:     stop(mL, mR);
  7665  002998  C01D  F019         	movff	turnRight180@mL,stop@mL
  7666  00299C  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7667  0029A0  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7668  0029A4  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7669  0029A8  ECB0  F018         	call	_stop	;wreg free
  7670  0029AC                     
  7671                           ;dc_motor.c: 203:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7672  0029AC  0E05               	movlw	5
  7673  0029AE  6E22               	movwf	(??_turnRight180+1)^0,c
  7674  0029B0  0E0F               	movlw	15
  7675  0029B2  6E21               	movwf	??_turnRight180^0,c
  7676  0029B4  0EF1               	movlw	241
  7677  0029B6                     u4377:
  7678  0029B6  2EE8               	decfsz	wreg,f,c
  7679  0029B8  D7FE               	bra	u4377
  7680  0029BA  2E21               	decfsz	??_turnRight180^0,f,c
  7681  0029BC  D7FC               	bra	u4377
  7682  0029BE  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7683  0029C0  D7FA               	bra	u4377
  7684  0029C2  F000               	nop	
  7685  0029C4  0012               	return		;funcret
  7686  0029C6                     __end_of_turnRight180:
  7687                           	callstack 0
  7688                           
  7689 ;; *************** function _turnRight135 *****************
  7690 ;; Defined at:
  7691 ;;		line 159 in file "dc_motor.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7694 ;;		 -> main@motorL(9), 
  7695 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7696 ;;		 -> main@motorR(9), 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  i               2   34[COMRAM] unsigned int 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;Total ram usage:        8 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; Hardware stack levels required when called: 4
  7715 ;; This function calls:
  7716 ;;		_reverse
  7717 ;;		_setMotorPWM
  7718 ;;		_stop
  7719 ;; This function is called by:
  7720 ;;		_White
  7721 ;;		_main
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text30
  7726  0029C6                     __ptext30:
  7727                           	callstack 0
  7728  0029C6                     _turnRight135:
  7729                           	callstack 26
  7730  0029C6                     
  7731                           ;dc_motor.c: 159: void turnRight135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 160: {;dc_motor.c: 161:     stop(mL, mR);
  7732  0029C6  C01D  F019         	movff	turnRight135@mL,stop@mL
  7733  0029CA  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7734  0029CE  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7735  0029D2  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7736  0029D6  ECB0  F018         	call	_stop	;wreg free
  7737  0029DA                     
  7738                           ;dc_motor.c: 162:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7739  0029DA  0E05               	movlw	5
  7740  0029DC  6E22               	movwf	(??_turnRight135+1)^0,c
  7741  0029DE  0E0F               	movlw	15
  7742  0029E0  6E21               	movwf	??_turnRight135^0,c
  7743  0029E2  0EF1               	movlw	241
  7744  0029E4                     u4387:
  7745  0029E4  2EE8               	decfsz	wreg,f,c
  7746  0029E6  D7FE               	bra	u4387
  7747  0029E8  2E21               	decfsz	??_turnRight135^0,f,c
  7748  0029EA  D7FC               	bra	u4387
  7749  0029EC  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7750  0029EE  D7FA               	bra	u4387
  7751  0029F0  F000               	nop	
  7752  0029F2                     
  7753                           ;dc_motor.c: 163:     reverse(mL, mR);
  7754  0029F2  C01D  F019         	movff	turnRight135@mL,reverse@mL
  7755  0029F6  C01E  F01A         	movff	turnRight135@mL+1,reverse@mL+1
  7756  0029FA  C01F  F01B         	movff	turnRight135@mR,reverse@mR
  7757  0029FE  C020  F01C         	movff	turnRight135@mR+1,reverse@mR+1
  7758  002A02  ECA5  F019         	call	_reverse	;wreg free
  7759                           
  7760                           ;dc_motor.c: 164:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7761  002A06  0E21               	movlw	33
  7762  002A08  6E22               	movwf	(??_turnRight135+1)^0,c
  7763  002A0A  0E78               	movlw	120
  7764  002A0C  6E21               	movwf	??_turnRight135^0,c
  7765  002A0E  0E98               	movlw	152
  7766  002A10                     u4397:
  7767  002A10  2EE8               	decfsz	wreg,f,c
  7768  002A12  D7FE               	bra	u4397
  7769  002A14  2E21               	decfsz	??_turnRight135^0,f,c
  7770  002A16  D7FC               	bra	u4397
  7771  002A18  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7772  002A1A  D7FA               	bra	u4397
  7773  002A1C  D000               	nop2	
  7774  002A1E                     
  7775                           ;dc_motor.c: 165:     stop(mL, mR);
  7776  002A1E  C01D  F019         	movff	turnRight135@mL,stop@mL
  7777  002A22  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7778  002A26  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7779  002A2A  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7780  002A2E  ECB0  F018         	call	_stop	;wreg free
  7781  002A32                     
  7782                           ;dc_motor.c: 166:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7783  002A32  0E0D               	movlw	13
  7784  002A34  6E22               	movwf	(??_turnRight135+1)^0,c
  7785  002A36  0E2D               	movlw	45
  7786  002A38  6E21               	movwf	??_turnRight135^0,c
  7787  002A3A  0ED8               	movlw	216
  7788  002A3C                     u4407:
  7789  002A3C  2EE8               	decfsz	wreg,f,c
  7790  002A3E  D7FE               	bra	u4407
  7791  002A40  2E21               	decfsz	??_turnRight135^0,f,c
  7792  002A42  D7FC               	bra	u4407
  7793  002A44  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7794  002A46  D7FA               	bra	u4407
  7795  002A48                     
  7796                           ;dc_motor.c: 168:     (*mL).direction = 1;
  7797  002A48  EE20 F001          	lfsr	2,1
  7798  002A4C  501D               	movf	turnRight135@mL^0,w,c
  7799  002A4E  26D9               	addwf	fsr2l,f,c
  7800  002A50  501E               	movf	(turnRight135@mL+1)^0,w,c
  7801  002A52  22DA               	addwfc	fsr2h,f,c
  7802  002A54  0E01               	movlw	1
  7803  002A56  6EDF               	movwf	indf2,c
  7804  002A58                     
  7805                           ;dc_motor.c: 169:     (*mR).direction = 0;
  7806  002A58  EE20 F001          	lfsr	2,1
  7807  002A5C  501F               	movf	turnRight135@mR^0,w,c
  7808  002A5E  26D9               	addwf	fsr2l,f,c
  7809  002A60  5020               	movf	(turnRight135@mR+1)^0,w,c
  7810  002A62  22DA               	addwfc	fsr2h,f,c
  7811  002A64  0E00               	movlw	0
  7812  002A66  6EDF               	movwf	indf2,c
  7813  002A68                     
  7814                           ;dc_motor.c: 170:     for (unsigned int i = 0; i < 75; ++i){
  7815  002A68  0E00               	movlw	0
  7816  002A6A  6E24               	movwf	(turnRight135@i+1)^0,c
  7817  002A6C  0E00               	movlw	0
  7818  002A6E  6E23               	movwf	turnRight135@i^0,c
  7819  002A70                     l3099:
  7820                           
  7821                           ;dc_motor.c: 171:         (mL->power) += 1;
  7822  002A70  C01D  FFD9         	movff	turnRight135@mL,fsr2l
  7823  002A74  C01E  FFDA         	movff	turnRight135@mL+1,fsr2h
  7824  002A78  2ADF               	incf	indf2,f,c
  7825                           
  7826                           ;dc_motor.c: 172:         (mR->power) += 1;
  7827  002A7A  C01F  FFD9         	movff	turnRight135@mR,fsr2l
  7828  002A7E  C020  FFDA         	movff	turnRight135@mR+1,fsr2h
  7829  002A82  2ADF               	incf	indf2,f,c
  7830  002A84                     
  7831                           ;dc_motor.c: 173:         setMotorPWM(mL);
  7832  002A84  C01D  F00E         	movff	turnRight135@mL,setMotorPWM@m
  7833  002A88  C01E  F00F         	movff	turnRight135@mL+1,setMotorPWM@m+1
  7834  002A8C  ECE0  F011         	call	_setMotorPWM	;wreg free
  7835  002A90                     
  7836                           ;dc_motor.c: 174:         setMotorPWM(mR);
  7837  002A90  C01F  F00E         	movff	turnRight135@mR,setMotorPWM@m
  7838  002A94  C020  F00F         	movff	turnRight135@mR+1,setMotorPWM@m+1
  7839  002A98  ECE0  F011         	call	_setMotorPWM	;wreg free
  7840  002A9C                     
  7841                           ;dc_motor.c: 175:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7842  002A9C  0EA0               	movlw	160
  7843  002A9E                     u4417:
  7844  002A9E  D000               	nop2	
  7845  002AA0  2EE8               	decfsz	wreg,f,c
  7846  002AA2  D7FD               	bra	u4417
  7847  002AA4                     
  7848                           ;dc_motor.c: 176:     }
  7849  002AA4  4A23               	infsnz	turnRight135@i^0,f,c
  7850  002AA6  2A24               	incf	(turnRight135@i+1)^0,f,c
  7851  002AA8  5024               	movf	(turnRight135@i+1)^0,w,c
  7852  002AAA  E109               	bnz	u2370
  7853  002AAC  0E4B               	movlw	75
  7854  002AAE  5C23               	subwf	turnRight135@i^0,w,c
  7855  002AB0  A0D8               	btfss	status,0,c
  7856  002AB2  EF5D  F015         	goto	u2371
  7857  002AB6  EF5F  F015         	goto	u2370
  7858  002ABA                     u2371:
  7859  002ABA  EF38  F015         	goto	l3099
  7860  002ABE                     u2370:
  7861  002ABE                     
  7862                           ;dc_motor.c: 177:     _delay((unsigned long)((270)*(64000000/4000.0)));
  7863  002ABE  0E16               	movlw	22
  7864  002AC0  6E22               	movwf	(??_turnRight135+1)^0,c
  7865  002AC2  0EEB               	movlw	235
  7866  002AC4  6E21               	movwf	??_turnRight135^0,c
  7867  002AC6  0E53               	movlw	83
  7868  002AC8                     u4427:
  7869  002AC8  2EE8               	decfsz	wreg,f,c
  7870  002ACA  D7FE               	bra	u4427
  7871  002ACC  2E21               	decfsz	??_turnRight135^0,f,c
  7872  002ACE  D7FC               	bra	u4427
  7873  002AD0  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7874  002AD2  D7FA               	bra	u4427
  7875  002AD4  F000               	nop	
  7876  002AD6                     
  7877                           ;dc_motor.c: 178:     stop(mL, mR);
  7878  002AD6  C01D  F019         	movff	turnRight135@mL,stop@mL
  7879  002ADA  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7880  002ADE  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7881  002AE2  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7882  002AE6  ECB0  F018         	call	_stop	;wreg free
  7883  002AEA                     
  7884                           ;dc_motor.c: 179:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7885  002AEA  0E05               	movlw	5
  7886  002AEC  6E22               	movwf	(??_turnRight135+1)^0,c
  7887  002AEE  0E0F               	movlw	15
  7888  002AF0  6E21               	movwf	??_turnRight135^0,c
  7889  002AF2  0EF1               	movlw	241
  7890  002AF4                     u4437:
  7891  002AF4  2EE8               	decfsz	wreg,f,c
  7892  002AF6  D7FE               	bra	u4437
  7893  002AF8  2E21               	decfsz	??_turnRight135^0,f,c
  7894  002AFA  D7FC               	bra	u4437
  7895  002AFC  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7896  002AFE  D7FA               	bra	u4437
  7897  002B00  F000               	nop	
  7898  002B02  0012               	return		;funcret
  7899  002B04                     __end_of_turnRight135:
  7900                           	callstack 0
  7901                           
  7902 ;; *************** function _turnLeft135 *****************
  7903 ;; Defined at:
  7904 ;;		line 111 in file "dc_motor.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7907 ;;		 -> main@motorL(9), 
  7908 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7909 ;;		 -> main@motorR(9), 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  i               2   34[COMRAM] unsigned int 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;Total ram usage:        8 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; Hardware stack levels required when called: 4
  7928 ;; This function calls:
  7929 ;;		_reverse
  7930 ;;		_setMotorPWM
  7931 ;;		_stop
  7932 ;; This function is called by:
  7933 ;;		_White
  7934 ;;		_main
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text31
  7939  002C42                     __ptext31:
  7940                           	callstack 0
  7941  002C42                     _turnLeft135:
  7942                           	callstack 26
  7943  002C42                     
  7944                           ;dc_motor.c: 111: void turnLeft135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           112: {;dc_motor.c: 113:     stop(mL, mR);
  7945  002C42  C01D  F019         	movff	turnLeft135@mL,stop@mL
  7946  002C46  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  7947  002C4A  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  7948  002C4E  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  7949  002C52  ECB0  F018         	call	_stop	;wreg free
  7950  002C56                     
  7951                           ;dc_motor.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7952  002C56  0E05               	movlw	5
  7953  002C58  6E22               	movwf	(??_turnLeft135+1)^0,c
  7954  002C5A  0E0F               	movlw	15
  7955  002C5C  6E21               	movwf	??_turnLeft135^0,c
  7956  002C5E  0EF1               	movlw	241
  7957  002C60                     u4447:
  7958  002C60  2EE8               	decfsz	wreg,f,c
  7959  002C62  D7FE               	bra	u4447
  7960  002C64  2E21               	decfsz	??_turnLeft135^0,f,c
  7961  002C66  D7FC               	bra	u4447
  7962  002C68  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7963  002C6A  D7FA               	bra	u4447
  7964  002C6C  F000               	nop	
  7965  002C6E                     
  7966                           ;dc_motor.c: 115:     reverse(mL, mR);
  7967  002C6E  C01D  F019         	movff	turnLeft135@mL,reverse@mL
  7968  002C72  C01E  F01A         	movff	turnLeft135@mL+1,reverse@mL+1
  7969  002C76  C01F  F01B         	movff	turnLeft135@mR,reverse@mR
  7970  002C7A  C020  F01C         	movff	turnLeft135@mR+1,reverse@mR+1
  7971  002C7E  ECA5  F019         	call	_reverse	;wreg free
  7972                           
  7973                           ;dc_motor.c: 116:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7974  002C82  0E21               	movlw	33
  7975  002C84  6E22               	movwf	(??_turnLeft135+1)^0,c
  7976  002C86  0E78               	movlw	120
  7977  002C88  6E21               	movwf	??_turnLeft135^0,c
  7978  002C8A  0E98               	movlw	152
  7979  002C8C                     u4457:
  7980  002C8C  2EE8               	decfsz	wreg,f,c
  7981  002C8E  D7FE               	bra	u4457
  7982  002C90  2E21               	decfsz	??_turnLeft135^0,f,c
  7983  002C92  D7FC               	bra	u4457
  7984  002C94  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7985  002C96  D7FA               	bra	u4457
  7986  002C98  D000               	nop2	
  7987  002C9A                     
  7988                           ;dc_motor.c: 117:     stop(mL, mR);
  7989  002C9A  C01D  F019         	movff	turnLeft135@mL,stop@mL
  7990  002C9E  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  7991  002CA2  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  7992  002CA6  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  7993  002CAA  ECB0  F018         	call	_stop	;wreg free
  7994  002CAE                     
  7995                           ;dc_motor.c: 118:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7996  002CAE  0E0D               	movlw	13
  7997  002CB0  6E22               	movwf	(??_turnLeft135+1)^0,c
  7998  002CB2  0E2D               	movlw	45
  7999  002CB4  6E21               	movwf	??_turnLeft135^0,c
  8000  002CB6  0ED8               	movlw	216
  8001  002CB8                     u4467:
  8002  002CB8  2EE8               	decfsz	wreg,f,c
  8003  002CBA  D7FE               	bra	u4467
  8004  002CBC  2E21               	decfsz	??_turnLeft135^0,f,c
  8005  002CBE  D7FC               	bra	u4467
  8006  002CC0  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8007  002CC2  D7FA               	bra	u4467
  8008  002CC4                     
  8009                           ;dc_motor.c: 120:     (*mL).direction = 0;
  8010  002CC4  EE20 F001          	lfsr	2,1
  8011  002CC8  501D               	movf	turnLeft135@mL^0,w,c
  8012  002CCA  26D9               	addwf	fsr2l,f,c
  8013  002CCC  501E               	movf	(turnLeft135@mL+1)^0,w,c
  8014  002CCE  22DA               	addwfc	fsr2h,f,c
  8015  002CD0  0E00               	movlw	0
  8016  002CD2  6EDF               	movwf	indf2,c
  8017  002CD4                     
  8018                           ;dc_motor.c: 121:     (*mR).direction = 1;
  8019  002CD4  EE20 F001          	lfsr	2,1
  8020  002CD8  501F               	movf	turnLeft135@mR^0,w,c
  8021  002CDA  26D9               	addwf	fsr2l,f,c
  8022  002CDC  5020               	movf	(turnLeft135@mR+1)^0,w,c
  8023  002CDE  22DA               	addwfc	fsr2h,f,c
  8024  002CE0  0E01               	movlw	1
  8025  002CE2  6EDF               	movwf	indf2,c
  8026  002CE4                     
  8027                           ;dc_motor.c: 122:     for (unsigned int i = 0; i < 75; ++i){
  8028  002CE4  0E00               	movlw	0
  8029  002CE6  6E24               	movwf	(turnLeft135@i+1)^0,c
  8030  002CE8  0E00               	movlw	0
  8031  002CEA  6E23               	movwf	turnLeft135@i^0,c
  8032  002CEC                     l3061:
  8033                           
  8034                           ;dc_motor.c: 123:         (mL->power) += 1;
  8035  002CEC  C01D  FFD9         	movff	turnLeft135@mL,fsr2l
  8036  002CF0  C01E  FFDA         	movff	turnLeft135@mL+1,fsr2h
  8037  002CF4  2ADF               	incf	indf2,f,c
  8038                           
  8039                           ;dc_motor.c: 124:         (mR->power) += 1;
  8040  002CF6  C01F  FFD9         	movff	turnLeft135@mR,fsr2l
  8041  002CFA  C020  FFDA         	movff	turnLeft135@mR+1,fsr2h
  8042  002CFE  2ADF               	incf	indf2,f,c
  8043  002D00                     
  8044                           ;dc_motor.c: 125:         setMotorPWM(mL);
  8045  002D00  C01D  F00E         	movff	turnLeft135@mL,setMotorPWM@m
  8046  002D04  C01E  F00F         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  8047  002D08  ECE0  F011         	call	_setMotorPWM	;wreg free
  8048  002D0C                     
  8049                           ;dc_motor.c: 126:         setMotorPWM(mR);
  8050  002D0C  C01F  F00E         	movff	turnLeft135@mR,setMotorPWM@m
  8051  002D10  C020  F00F         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  8052  002D14  ECE0  F011         	call	_setMotorPWM	;wreg free
  8053  002D18                     
  8054                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8055  002D18  0EA0               	movlw	160
  8056  002D1A                     u4477:
  8057  002D1A  D000               	nop2	
  8058  002D1C  2EE8               	decfsz	wreg,f,c
  8059  002D1E  D7FD               	bra	u4477
  8060  002D20                     
  8061                           ;dc_motor.c: 128:     }
  8062  002D20  4A23               	infsnz	turnLeft135@i^0,f,c
  8063  002D22  2A24               	incf	(turnLeft135@i+1)^0,f,c
  8064  002D24  5024               	movf	(turnLeft135@i+1)^0,w,c
  8065  002D26  E109               	bnz	u2360
  8066  002D28  0E4B               	movlw	75
  8067  002D2A  5C23               	subwf	turnLeft135@i^0,w,c
  8068  002D2C  A0D8               	btfss	status,0,c
  8069  002D2E  EF9B  F016         	goto	u2361
  8070  002D32  EF9D  F016         	goto	u2360
  8071  002D36                     u2361:
  8072  002D36  EF76  F016         	goto	l3061
  8073  002D3A                     u2360:
  8074  002D3A                     
  8075                           ;dc_motor.c: 129:     _delay((unsigned long)((255)*(64000000/4000.0)));
  8076  002D3A  0E15               	movlw	21
  8077  002D3C  6E22               	movwf	(??_turnLeft135+1)^0,c
  8078  002D3E  0EB3               	movlw	179
  8079  002D40  6E21               	movwf	??_turnLeft135^0,c
  8080  002D42  0EA4               	movlw	164
  8081  002D44                     u4487:
  8082  002D44  2EE8               	decfsz	wreg,f,c
  8083  002D46  D7FE               	bra	u4487
  8084  002D48  2E21               	decfsz	??_turnLeft135^0,f,c
  8085  002D4A  D7FC               	bra	u4487
  8086  002D4C  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8087  002D4E  D7FA               	bra	u4487
  8088  002D50                     
  8089                           ;dc_motor.c: 130:     stop(mL, mR);
  8090  002D50  C01D  F019         	movff	turnLeft135@mL,stop@mL
  8091  002D54  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  8092  002D58  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8093  002D5C  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8094  002D60  ECB0  F018         	call	_stop	;wreg free
  8095  002D64                     
  8096                           ;dc_motor.c: 131:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8097  002D64  0E05               	movlw	5
  8098  002D66  6E22               	movwf	(??_turnLeft135+1)^0,c
  8099  002D68  0E0F               	movlw	15
  8100  002D6A  6E21               	movwf	??_turnLeft135^0,c
  8101  002D6C  0EF1               	movlw	241
  8102  002D6E                     u4497:
  8103  002D6E  2EE8               	decfsz	wreg,f,c
  8104  002D70  D7FE               	bra	u4497
  8105  002D72  2E21               	decfsz	??_turnLeft135^0,f,c
  8106  002D74  D7FC               	bra	u4497
  8107  002D76  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8108  002D78  D7FA               	bra	u4497
  8109  002D7A  F000               	nop	
  8110  002D7C  0012               	return		;funcret
  8111  002D7E                     __end_of_turnLeft135:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _reverseTurnRight90 *****************
  8115 ;; Defined at:
  8116 ;;		line 218 in file "dc_motor.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  8119 ;;		 -> main@motorL(9), 
  8120 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  8121 ;;		 -> main@motorR(9), 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8137 ;;Total ram usage:        6 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; Hardware stack levels required when called: 5
  8140 ;; This function calls:
  8141 ;;		_setMotorPWM
  8142 ;;		_stop
  8143 ;;		_turnRight90
  8144 ;; This function is called by:
  8145 ;;		_White
  8146 ;;		_main
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text32
  8151  002F88                     __ptext32:
  8152                           	callstack 0
  8153  002F88                     _reverseTurnRight90:
  8154                           	callstack 25
  8155  002F88                     
  8156                           ;dc_motor.c: 218: void reverseTurnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_m
      +                          otor.c: 219: {;dc_motor.c: 220:     stop(mL, mR);
  8157  002F88  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  8158  002F8C  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  8159  002F90  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  8160  002F94  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  8161  002F98  ECB0  F018         	call	_stop	;wreg free
  8162  002F9C                     
  8163                           ;dc_motor.c: 221:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8164  002F9C  0E05               	movlw	5
  8165  002F9E  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8166  002FA0  0E0F               	movlw	15
  8167  002FA2  6E29               	movwf	??_reverseTurnRight90^0,c
  8168  002FA4  0EF1               	movlw	241
  8169  002FA6                     u4507:
  8170  002FA6  2EE8               	decfsz	wreg,f,c
  8171  002FA8  D7FE               	bra	u4507
  8172  002FAA  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8173  002FAC  D7FC               	bra	u4507
  8174  002FAE  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8175  002FB0  D7FA               	bra	u4507
  8176  002FB2  F000               	nop	
  8177  002FB4                     
  8178                           ;dc_motor.c: 222:     (*mL).direction = 0;
  8179  002FB4  EE20 F001          	lfsr	2,1
  8180  002FB8  5025               	movf	reverseTurnRight90@mL^0,w,c
  8181  002FBA  26D9               	addwf	fsr2l,f,c
  8182  002FBC  5026               	movf	(reverseTurnRight90@mL+1)^0,w,c
  8183  002FBE  22DA               	addwfc	fsr2h,f,c
  8184  002FC0  0E00               	movlw	0
  8185  002FC2  6EDF               	movwf	indf2,c
  8186  002FC4                     
  8187                           ;dc_motor.c: 223:     (*mR).direction = 0;
  8188  002FC4  EE20 F001          	lfsr	2,1
  8189  002FC8  5027               	movf	reverseTurnRight90@mR^0,w,c
  8190  002FCA  26D9               	addwf	fsr2l,f,c
  8191  002FCC  5028               	movf	(reverseTurnRight90@mR+1)^0,w,c
  8192  002FCE  22DA               	addwfc	fsr2h,f,c
  8193  002FD0  0E00               	movlw	0
  8194  002FD2  6EDF               	movwf	indf2,c
  8195  002FD4                     
  8196                           ;dc_motor.c: 224:     (*mL).power = 60;
  8197  002FD4  C025  FFD9         	movff	reverseTurnRight90@mL,fsr2l
  8198  002FD8  C026  FFDA         	movff	reverseTurnRight90@mL+1,fsr2h
  8199  002FDC  0E3C               	movlw	60
  8200  002FDE  6EDF               	movwf	indf2,c
  8201  002FE0                     
  8202                           ;dc_motor.c: 225:     (*mR).power = 60;
  8203  002FE0  C027  FFD9         	movff	reverseTurnRight90@mR,fsr2l
  8204  002FE4  C028  FFDA         	movff	reverseTurnRight90@mR+1,fsr2h
  8205  002FE8  0E3C               	movlw	60
  8206  002FEA  6EDF               	movwf	indf2,c
  8207  002FEC                     
  8208                           ;dc_motor.c: 226:     setMotorPWM(mL);
  8209  002FEC  C025  F00E         	movff	reverseTurnRight90@mL,setMotorPWM@m
  8210  002FF0  C026  F00F         	movff	reverseTurnRight90@mL+1,setMotorPWM@m+1
  8211  002FF4  ECE0  F011         	call	_setMotorPWM	;wreg free
  8212  002FF8                     
  8213                           ;dc_motor.c: 227:     setMotorPWM(mR);
  8214  002FF8  C027  F00E         	movff	reverseTurnRight90@mR,setMotorPWM@m
  8215  002FFC  C028  F00F         	movff	reverseTurnRight90@mR+1,setMotorPWM@m+1
  8216  003000  ECE0  F011         	call	_setMotorPWM	;wreg free
  8217  003004                     
  8218                           ;dc_motor.c: 228:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8219  003004  0E21               	movlw	33
  8220  003006  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8221  003008  0E78               	movlw	120
  8222  00300A  6E29               	movwf	??_reverseTurnRight90^0,c
  8223  00300C  0E98               	movlw	152
  8224  00300E                     u4517:
  8225  00300E  2EE8               	decfsz	wreg,f,c
  8226  003010  D7FE               	bra	u4517
  8227  003012  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8228  003014  D7FC               	bra	u4517
  8229  003016  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8230  003018  D7FA               	bra	u4517
  8231  00301A  D000               	nop2	
  8232                           
  8233                           ;dc_motor.c: 229:     stop(mL, mR);
  8234  00301C  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  8235  003020  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  8236  003024  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  8237  003028  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  8238  00302C  ECB0  F018         	call	_stop	;wreg free
  8239  003030                     
  8240                           ;dc_motor.c: 230:     _delay((unsigned long)((300)*(64000000/4000.0)));
  8241  003030  0E19               	movlw	25
  8242  003032  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8243  003034  0E5A               	movlw	90
  8244  003036  6E29               	movwf	??_reverseTurnRight90^0,c
  8245  003038  0EB2               	movlw	178
  8246  00303A                     u4527:
  8247  00303A  2EE8               	decfsz	wreg,f,c
  8248  00303C  D7FE               	bra	u4527
  8249  00303E  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8250  003040  D7FC               	bra	u4527
  8251  003042  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8252  003044  D7FA               	bra	u4527
  8253  003046                     
  8254                           ;dc_motor.c: 231:     turnRight90(mL, mR);
  8255  003046  C025  F01D         	movff	reverseTurnRight90@mL,turnRight90@mL
  8256  00304A  C026  F01E         	movff	reverseTurnRight90@mL+1,turnRight90@mL+1
  8257  00304E  C027  F01F         	movff	reverseTurnRight90@mR,turnRight90@mR
  8258  003052  C028  F020         	movff	reverseTurnRight90@mR+1,turnRight90@mR+1
  8259  003056  EC82  F015         	call	_turnRight90	;wreg free
  8260                           
  8261                           ;dc_motor.c: 232:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8262  00305A  0E09               	movlw	9
  8263  00305C  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8264  00305E  0E1E               	movlw	30
  8265  003060  6E29               	movwf	??_reverseTurnRight90^0,c
  8266  003062  0EE4               	movlw	228
  8267  003064                     u4537:
  8268  003064  2EE8               	decfsz	wreg,f,c
  8269  003066  D7FE               	bra	u4537
  8270  003068  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8271  00306A  D7FC               	bra	u4537
  8272  00306C  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8273  00306E  D7FA               	bra	u4537
  8274  003070  D000               	nop2	
  8275  003072  0012               	return		;funcret
  8276  003074                     __end_of_reverseTurnRight90:
  8277                           	callstack 0
  8278                           
  8279 ;; *************** function _turnRight90 *****************
  8280 ;; Defined at:
  8281 ;;		line 135 in file "dc_motor.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8284 ;;		 -> main@motorL(9), 
  8285 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8286 ;;		 -> main@motorR(9), 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  i               2   34[COMRAM] unsigned int 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8302 ;;Total ram usage:        8 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 4
  8305 ;; This function calls:
  8306 ;;		_reverse
  8307 ;;		_setMotorPWM
  8308 ;;		_stop
  8309 ;; This function is called by:
  8310 ;;		_White
  8311 ;;		_reverseTurnRight90
  8312 ;;		_main
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text33
  8317  002B04                     __ptext33:
  8318                           	callstack 0
  8319  002B04                     _turnRight90:
  8320                           	callstack 26
  8321  002B04                     
  8322                           ;dc_motor.c: 135: void turnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           136: {;dc_motor.c: 137:     stop(mL, mR);
  8323  002B04  C01D  F019         	movff	turnRight90@mL,stop@mL
  8324  002B08  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8325  002B0C  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8326  002B10  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8327  002B14  ECB0  F018         	call	_stop	;wreg free
  8328  002B18                     
  8329                           ;dc_motor.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8330  002B18  0E05               	movlw	5
  8331  002B1A  6E22               	movwf	(??_turnRight90+1)^0,c
  8332  002B1C  0E0F               	movlw	15
  8333  002B1E  6E21               	movwf	??_turnRight90^0,c
  8334  002B20  0EF1               	movlw	241
  8335  002B22                     u4547:
  8336  002B22  2EE8               	decfsz	wreg,f,c
  8337  002B24  D7FE               	bra	u4547
  8338  002B26  2E21               	decfsz	??_turnRight90^0,f,c
  8339  002B28  D7FC               	bra	u4547
  8340  002B2A  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8341  002B2C  D7FA               	bra	u4547
  8342  002B2E  F000               	nop	
  8343  002B30                     
  8344                           ;dc_motor.c: 139:     reverse(mL, mR);
  8345  002B30  C01D  F019         	movff	turnRight90@mL,reverse@mL
  8346  002B34  C01E  F01A         	movff	turnRight90@mL+1,reverse@mL+1
  8347  002B38  C01F  F01B         	movff	turnRight90@mR,reverse@mR
  8348  002B3C  C020  F01C         	movff	turnRight90@mR+1,reverse@mR+1
  8349  002B40  ECA5  F019         	call	_reverse	;wreg free
  8350                           
  8351                           ;dc_motor.c: 140:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8352  002B44  0E21               	movlw	33
  8353  002B46  6E22               	movwf	(??_turnRight90+1)^0,c
  8354  002B48  0E78               	movlw	120
  8355  002B4A  6E21               	movwf	??_turnRight90^0,c
  8356  002B4C  0E98               	movlw	152
  8357  002B4E                     u4557:
  8358  002B4E  2EE8               	decfsz	wreg,f,c
  8359  002B50  D7FE               	bra	u4557
  8360  002B52  2E21               	decfsz	??_turnRight90^0,f,c
  8361  002B54  D7FC               	bra	u4557
  8362  002B56  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8363  002B58  D7FA               	bra	u4557
  8364  002B5A  D000               	nop2	
  8365  002B5C                     
  8366                           ;dc_motor.c: 141:     stop(mL, mR);
  8367  002B5C  C01D  F019         	movff	turnRight90@mL,stop@mL
  8368  002B60  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8369  002B64  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8370  002B68  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8371  002B6C  ECB0  F018         	call	_stop	;wreg free
  8372  002B70                     
  8373                           ;dc_motor.c: 142:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8374  002B70  0E0D               	movlw	13
  8375  002B72  6E22               	movwf	(??_turnRight90+1)^0,c
  8376  002B74  0E2D               	movlw	45
  8377  002B76  6E21               	movwf	??_turnRight90^0,c
  8378  002B78  0ED8               	movlw	216
  8379  002B7A                     u4567:
  8380  002B7A  2EE8               	decfsz	wreg,f,c
  8381  002B7C  D7FE               	bra	u4567
  8382  002B7E  2E21               	decfsz	??_turnRight90^0,f,c
  8383  002B80  D7FC               	bra	u4567
  8384  002B82  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8385  002B84  D7FA               	bra	u4567
  8386  002B86                     
  8387                           ;dc_motor.c: 144:     (*mL).direction = 1;
  8388  002B86  EE20 F001          	lfsr	2,1
  8389  002B8A  501D               	movf	turnRight90@mL^0,w,c
  8390  002B8C  26D9               	addwf	fsr2l,f,c
  8391  002B8E  501E               	movf	(turnRight90@mL+1)^0,w,c
  8392  002B90  22DA               	addwfc	fsr2h,f,c
  8393  002B92  0E01               	movlw	1
  8394  002B94  6EDF               	movwf	indf2,c
  8395  002B96                     
  8396                           ;dc_motor.c: 145:     (*mR).direction = 0;
  8397  002B96  EE20 F001          	lfsr	2,1
  8398  002B9A  501F               	movf	turnRight90@mR^0,w,c
  8399  002B9C  26D9               	addwf	fsr2l,f,c
  8400  002B9E  5020               	movf	(turnRight90@mR+1)^0,w,c
  8401  002BA0  22DA               	addwfc	fsr2h,f,c
  8402  002BA2  0E00               	movlw	0
  8403  002BA4  6EDF               	movwf	indf2,c
  8404  002BA6                     
  8405                           ;dc_motor.c: 146:     for (unsigned int i = 0; i < 75; ++i){
  8406  002BA6  0E00               	movlw	0
  8407  002BA8  6E24               	movwf	(turnRight90@i+1)^0,c
  8408  002BAA  0E00               	movlw	0
  8409  002BAC  6E23               	movwf	turnRight90@i^0,c
  8410  002BAE                     l2867:
  8411                           
  8412                           ;dc_motor.c: 147:         (mL->power) += 1;
  8413  002BAE  C01D  FFD9         	movff	turnRight90@mL,fsr2l
  8414  002BB2  C01E  FFDA         	movff	turnRight90@mL+1,fsr2h
  8415  002BB6  2ADF               	incf	indf2,f,c
  8416                           
  8417                           ;dc_motor.c: 148:         (mR->power) += 1;
  8418  002BB8  C01F  FFD9         	movff	turnRight90@mR,fsr2l
  8419  002BBC  C020  FFDA         	movff	turnRight90@mR+1,fsr2h
  8420  002BC0  2ADF               	incf	indf2,f,c
  8421  002BC2                     
  8422                           ;dc_motor.c: 149:         setMotorPWM(mL);
  8423  002BC2  C01D  F00E         	movff	turnRight90@mL,setMotorPWM@m
  8424  002BC6  C01E  F00F         	movff	turnRight90@mL+1,setMotorPWM@m+1
  8425  002BCA  ECE0  F011         	call	_setMotorPWM	;wreg free
  8426  002BCE                     
  8427                           ;dc_motor.c: 150:         setMotorPWM(mR);
  8428  002BCE  C01F  F00E         	movff	turnRight90@mR,setMotorPWM@m
  8429  002BD2  C020  F00F         	movff	turnRight90@mR+1,setMotorPWM@m+1
  8430  002BD6  ECE0  F011         	call	_setMotorPWM	;wreg free
  8431  002BDA                     
  8432                           ;dc_motor.c: 151:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8433  002BDA  0EA0               	movlw	160
  8434  002BDC                     u4577:
  8435  002BDC  D000               	nop2	
  8436  002BDE  2EE8               	decfsz	wreg,f,c
  8437  002BE0  D7FD               	bra	u4577
  8438  002BE2                     
  8439                           ;dc_motor.c: 152:     }
  8440  002BE2  4A23               	infsnz	turnRight90@i^0,f,c
  8441  002BE4  2A24               	incf	(turnRight90@i+1)^0,f,c
  8442  002BE6  5024               	movf	(turnRight90@i+1)^0,w,c
  8443  002BE8  E109               	bnz	u2270
  8444  002BEA  0E4B               	movlw	75
  8445  002BEC  5C23               	subwf	turnRight90@i^0,w,c
  8446  002BEE  A0D8               	btfss	status,0,c
  8447  002BF0  EFFC  F015         	goto	u2271
  8448  002BF4  EFFE  F015         	goto	u2270
  8449  002BF8                     u2271:
  8450  002BF8  EFD7  F015         	goto	l2867
  8451  002BFC                     u2270:
  8452  002BFC                     
  8453                           ;dc_motor.c: 153:     _delay((unsigned long)((205)*(64000000/4000.0)));
  8454  002BFC  0E11               	movlw	17
  8455  002BFE  6E22               	movwf	(??_turnRight90+1)^0,c
  8456  002C00  0EA4               	movlw	164
  8457  002C02  6E21               	movwf	??_turnRight90^0,c
  8458  002C04  0EB0               	movlw	176
  8459  002C06                     u4587:
  8460  002C06  2EE8               	decfsz	wreg,f,c
  8461  002C08  D7FE               	bra	u4587
  8462  002C0A  2E21               	decfsz	??_turnRight90^0,f,c
  8463  002C0C  D7FC               	bra	u4587
  8464  002C0E  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8465  002C10  D7FA               	bra	u4587
  8466  002C12  D000               	nop2	
  8467  002C14                     
  8468                           ;dc_motor.c: 154:     stop(mL, mR);
  8469  002C14  C01D  F019         	movff	turnRight90@mL,stop@mL
  8470  002C18  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8471  002C1C  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8472  002C20  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8473  002C24  ECB0  F018         	call	_stop	;wreg free
  8474  002C28                     
  8475                           ;dc_motor.c: 155:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8476  002C28  0E05               	movlw	5
  8477  002C2A  6E22               	movwf	(??_turnRight90+1)^0,c
  8478  002C2C  0E0F               	movlw	15
  8479  002C2E  6E21               	movwf	??_turnRight90^0,c
  8480  002C30  0EF1               	movlw	241
  8481  002C32                     u4597:
  8482  002C32  2EE8               	decfsz	wreg,f,c
  8483  002C34  D7FE               	bra	u4597
  8484  002C36  2E21               	decfsz	??_turnRight90^0,f,c
  8485  002C38  D7FC               	bra	u4597
  8486  002C3A  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8487  002C3C  D7FA               	bra	u4597
  8488  002C3E  F000               	nop	
  8489  002C40  0012               	return		;funcret
  8490  002C42                     __end_of_turnRight90:
  8491                           	callstack 0
  8492                           
  8493 ;; *************** function _reverseTurnLeft90 *****************
  8494 ;; Defined at:
  8495 ;;		line 236 in file "dc_motor.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  8498 ;;		 -> main@motorL(9), 
  8499 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  8500 ;;		 -> main@motorR(9), 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;Total ram usage:        6 bytes
  8517 ;; Hardware stack levels used: 1
  8518 ;; Hardware stack levels required when called: 5
  8519 ;; This function calls:
  8520 ;;		_setMotorPWM
  8521 ;;		_stop
  8522 ;;		_turnLeft90
  8523 ;; This function is called by:
  8524 ;;		_White
  8525 ;;		_main
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text34
  8530  003074                     __ptext34:
  8531                           	callstack 0
  8532  003074                     _reverseTurnLeft90:
  8533                           	callstack 25
  8534  003074                     
  8535                           ;dc_motor.c: 236: void reverseTurnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 237: {;dc_motor.c: 238:     stop(mL, mR);
  8536  003074  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  8537  003078  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  8538  00307C  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  8539  003080  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  8540  003084  ECB0  F018         	call	_stop	;wreg free
  8541  003088                     
  8542                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8543  003088  0E05               	movlw	5
  8544  00308A  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8545  00308C  0E0F               	movlw	15
  8546  00308E  6E29               	movwf	??_reverseTurnLeft90^0,c
  8547  003090  0EF1               	movlw	241
  8548  003092                     u4607:
  8549  003092  2EE8               	decfsz	wreg,f,c
  8550  003094  D7FE               	bra	u4607
  8551  003096  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8552  003098  D7FC               	bra	u4607
  8553  00309A  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8554  00309C  D7FA               	bra	u4607
  8555  00309E  F000               	nop	
  8556  0030A0                     
  8557                           ;dc_motor.c: 240:     (*mL).direction = 0;
  8558  0030A0  EE20 F001          	lfsr	2,1
  8559  0030A4  5025               	movf	reverseTurnLeft90@mL^0,w,c
  8560  0030A6  26D9               	addwf	fsr2l,f,c
  8561  0030A8  5026               	movf	(reverseTurnLeft90@mL+1)^0,w,c
  8562  0030AA  22DA               	addwfc	fsr2h,f,c
  8563  0030AC  0E00               	movlw	0
  8564  0030AE  6EDF               	movwf	indf2,c
  8565  0030B0                     
  8566                           ;dc_motor.c: 241:     (*mR).direction = 0;
  8567  0030B0  EE20 F001          	lfsr	2,1
  8568  0030B4  5027               	movf	reverseTurnLeft90@mR^0,w,c
  8569  0030B6  26D9               	addwf	fsr2l,f,c
  8570  0030B8  5028               	movf	(reverseTurnLeft90@mR+1)^0,w,c
  8571  0030BA  22DA               	addwfc	fsr2h,f,c
  8572  0030BC  0E00               	movlw	0
  8573  0030BE  6EDF               	movwf	indf2,c
  8574  0030C0                     
  8575                           ;dc_motor.c: 242:     (*mL).power = 60;
  8576  0030C0  C025  FFD9         	movff	reverseTurnLeft90@mL,fsr2l
  8577  0030C4  C026  FFDA         	movff	reverseTurnLeft90@mL+1,fsr2h
  8578  0030C8  0E3C               	movlw	60
  8579  0030CA  6EDF               	movwf	indf2,c
  8580  0030CC                     
  8581                           ;dc_motor.c: 243:     (*mR).power = 60;
  8582  0030CC  C027  FFD9         	movff	reverseTurnLeft90@mR,fsr2l
  8583  0030D0  C028  FFDA         	movff	reverseTurnLeft90@mR+1,fsr2h
  8584  0030D4  0E3C               	movlw	60
  8585  0030D6  6EDF               	movwf	indf2,c
  8586  0030D8                     
  8587                           ;dc_motor.c: 244:     setMotorPWM(mL);
  8588  0030D8  C025  F00E         	movff	reverseTurnLeft90@mL,setMotorPWM@m
  8589  0030DC  C026  F00F         	movff	reverseTurnLeft90@mL+1,setMotorPWM@m+1
  8590  0030E0  ECE0  F011         	call	_setMotorPWM	;wreg free
  8591  0030E4                     
  8592                           ;dc_motor.c: 245:     setMotorPWM(mR);
  8593  0030E4  C027  F00E         	movff	reverseTurnLeft90@mR,setMotorPWM@m
  8594  0030E8  C028  F00F         	movff	reverseTurnLeft90@mR+1,setMotorPWM@m+1
  8595  0030EC  ECE0  F011         	call	_setMotorPWM	;wreg free
  8596  0030F0                     
  8597                           ;dc_motor.c: 246:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8598  0030F0  0E21               	movlw	33
  8599  0030F2  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8600  0030F4  0E78               	movlw	120
  8601  0030F6  6E29               	movwf	??_reverseTurnLeft90^0,c
  8602  0030F8  0E98               	movlw	152
  8603  0030FA                     u4617:
  8604  0030FA  2EE8               	decfsz	wreg,f,c
  8605  0030FC  D7FE               	bra	u4617
  8606  0030FE  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8607  003100  D7FC               	bra	u4617
  8608  003102  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8609  003104  D7FA               	bra	u4617
  8610  003106  D000               	nop2	
  8611                           
  8612                           ;dc_motor.c: 247:     stop(mL, mR);
  8613  003108  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  8614  00310C  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  8615  003110  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  8616  003114  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  8617  003118  ECB0  F018         	call	_stop	;wreg free
  8618  00311C                     
  8619                           ;dc_motor.c: 248:     _delay((unsigned long)((300)*(64000000/4000.0)));
  8620  00311C  0E19               	movlw	25
  8621  00311E  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8622  003120  0E5A               	movlw	90
  8623  003122  6E29               	movwf	??_reverseTurnLeft90^0,c
  8624  003124  0EB2               	movlw	178
  8625  003126                     u4627:
  8626  003126  2EE8               	decfsz	wreg,f,c
  8627  003128  D7FE               	bra	u4627
  8628  00312A  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8629  00312C  D7FC               	bra	u4627
  8630  00312E  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8631  003130  D7FA               	bra	u4627
  8632  003132                     
  8633                           ;dc_motor.c: 249:     turnLeft90(mL, mR);
  8634  003132  C025  F01D         	movff	reverseTurnLeft90@mL,turnLeft90@mL
  8635  003136  C026  F01E         	movff	reverseTurnLeft90@mL+1,turnLeft90@mL+1
  8636  00313A  C027  F01F         	movff	reverseTurnLeft90@mR,turnLeft90@mR
  8637  00313E  C028  F020         	movff	reverseTurnLeft90@mR+1,turnLeft90@mR+1
  8638  003142  ECA4  F013         	call	_turnLeft90	;wreg free
  8639                           
  8640                           ;dc_motor.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8641  003146  0E09               	movlw	9
  8642  003148  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8643  00314A  0E1E               	movlw	30
  8644  00314C  6E29               	movwf	??_reverseTurnLeft90^0,c
  8645  00314E  0EE4               	movlw	228
  8646  003150                     u4637:
  8647  003150  2EE8               	decfsz	wreg,f,c
  8648  003152  D7FE               	bra	u4637
  8649  003154  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8650  003156  D7FC               	bra	u4637
  8651  003158  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8652  00315A  D7FA               	bra	u4637
  8653  00315C  D000               	nop2	
  8654  00315E  0012               	return		;funcret
  8655  003160                     __end_of_reverseTurnLeft90:
  8656                           	callstack 0
  8657                           
  8658 ;; *************** function _turnLeft90 *****************
  8659 ;; Defined at:
  8660 ;;		line 87 in file "dc_motor.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8663 ;;		 -> main@motorL(9), 
  8664 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8665 ;;		 -> main@motorR(9), 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  i               2   34[COMRAM] unsigned int 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      void 
  8670 ;; Registers used:
  8671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;Total ram usage:        8 bytes
  8682 ;; Hardware stack levels used: 1
  8683 ;; Hardware stack levels required when called: 4
  8684 ;; This function calls:
  8685 ;;		_reverse
  8686 ;;		_setMotorPWM
  8687 ;;		_stop
  8688 ;; This function is called by:
  8689 ;;		_White
  8690 ;;		_reverseTurnLeft90
  8691 ;;		_main
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text35
  8696  002748                     __ptext35:
  8697                           	callstack 0
  8698  002748                     _turnLeft90:
  8699                           	callstack 26
  8700  002748                     
  8701                           ;dc_motor.c: 87: void turnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 8
      +                          8: {;dc_motor.c: 89:     stop(mL, mR);
  8702  002748  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8703  00274C  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8704  002750  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8705  002754  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8706  002758  ECB0  F018         	call	_stop	;wreg free
  8707  00275C                     
  8708                           ;dc_motor.c: 90:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8709  00275C  0E05               	movlw	5
  8710  00275E  6E22               	movwf	(??_turnLeft90+1)^0,c
  8711  002760  0E0F               	movlw	15
  8712  002762  6E21               	movwf	??_turnLeft90^0,c
  8713  002764  0EF1               	movlw	241
  8714  002766                     u4647:
  8715  002766  2EE8               	decfsz	wreg,f,c
  8716  002768  D7FE               	bra	u4647
  8717  00276A  2E21               	decfsz	??_turnLeft90^0,f,c
  8718  00276C  D7FC               	bra	u4647
  8719  00276E  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8720  002770  D7FA               	bra	u4647
  8721  002772  F000               	nop	
  8722  002774                     
  8723                           ;dc_motor.c: 91:     reverse(mL, mR);
  8724  002774  C01D  F019         	movff	turnLeft90@mL,reverse@mL
  8725  002778  C01E  F01A         	movff	turnLeft90@mL+1,reverse@mL+1
  8726  00277C  C01F  F01B         	movff	turnLeft90@mR,reverse@mR
  8727  002780  C020  F01C         	movff	turnLeft90@mR+1,reverse@mR+1
  8728  002784  ECA5  F019         	call	_reverse	;wreg free
  8729                           
  8730                           ;dc_motor.c: 92:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8731  002788  0E21               	movlw	33
  8732  00278A  6E22               	movwf	(??_turnLeft90+1)^0,c
  8733  00278C  0E78               	movlw	120
  8734  00278E  6E21               	movwf	??_turnLeft90^0,c
  8735  002790  0E98               	movlw	152
  8736  002792                     u4657:
  8737  002792  2EE8               	decfsz	wreg,f,c
  8738  002794  D7FE               	bra	u4657
  8739  002796  2E21               	decfsz	??_turnLeft90^0,f,c
  8740  002798  D7FC               	bra	u4657
  8741  00279A  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8742  00279C  D7FA               	bra	u4657
  8743  00279E  D000               	nop2	
  8744  0027A0                     
  8745                           ;dc_motor.c: 93:     stop(mL, mR);
  8746  0027A0  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8747  0027A4  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8748  0027A8  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8749  0027AC  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8750  0027B0  ECB0  F018         	call	_stop	;wreg free
  8751  0027B4                     
  8752                           ;dc_motor.c: 94:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8753  0027B4  0E0D               	movlw	13
  8754  0027B6  6E22               	movwf	(??_turnLeft90+1)^0,c
  8755  0027B8  0E2D               	movlw	45
  8756  0027BA  6E21               	movwf	??_turnLeft90^0,c
  8757  0027BC  0ED8               	movlw	216
  8758  0027BE                     u4667:
  8759  0027BE  2EE8               	decfsz	wreg,f,c
  8760  0027C0  D7FE               	bra	u4667
  8761  0027C2  2E21               	decfsz	??_turnLeft90^0,f,c
  8762  0027C4  D7FC               	bra	u4667
  8763  0027C6  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8764  0027C8  D7FA               	bra	u4667
  8765  0027CA                     
  8766                           ;dc_motor.c: 96:     (*mL).direction = 0;
  8767  0027CA  EE20 F001          	lfsr	2,1
  8768  0027CE  501D               	movf	turnLeft90@mL^0,w,c
  8769  0027D0  26D9               	addwf	fsr2l,f,c
  8770  0027D2  501E               	movf	(turnLeft90@mL+1)^0,w,c
  8771  0027D4  22DA               	addwfc	fsr2h,f,c
  8772  0027D6  0E00               	movlw	0
  8773  0027D8  6EDF               	movwf	indf2,c
  8774  0027DA                     
  8775                           ;dc_motor.c: 97:     (*mR).direction = 1;
  8776  0027DA  EE20 F001          	lfsr	2,1
  8777  0027DE  501F               	movf	turnLeft90@mR^0,w,c
  8778  0027E0  26D9               	addwf	fsr2l,f,c
  8779  0027E2  5020               	movf	(turnLeft90@mR+1)^0,w,c
  8780  0027E4  22DA               	addwfc	fsr2h,f,c
  8781  0027E6  0E01               	movlw	1
  8782  0027E8  6EDF               	movwf	indf2,c
  8783  0027EA                     
  8784                           ;dc_motor.c: 98:     for (unsigned int i = 0; i < 75; ++i){
  8785  0027EA  0E00               	movlw	0
  8786  0027EC  6E24               	movwf	(turnLeft90@i+1)^0,c
  8787  0027EE  0E00               	movlw	0
  8788  0027F0  6E23               	movwf	turnLeft90@i^0,c
  8789  0027F2                     l2829:
  8790                           
  8791                           ;dc_motor.c: 99:         (mL->power) += 1;
  8792  0027F2  C01D  FFD9         	movff	turnLeft90@mL,fsr2l
  8793  0027F6  C01E  FFDA         	movff	turnLeft90@mL+1,fsr2h
  8794  0027FA  2ADF               	incf	indf2,f,c
  8795                           
  8796                           ;dc_motor.c: 100:         (mR->power) += 1;
  8797  0027FC  C01F  FFD9         	movff	turnLeft90@mR,fsr2l
  8798  002800  C020  FFDA         	movff	turnLeft90@mR+1,fsr2h
  8799  002804  2ADF               	incf	indf2,f,c
  8800  002806                     
  8801                           ;dc_motor.c: 101:         setMotorPWM(mL);
  8802  002806  C01D  F00E         	movff	turnLeft90@mL,setMotorPWM@m
  8803  00280A  C01E  F00F         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  8804  00280E  ECE0  F011         	call	_setMotorPWM	;wreg free
  8805  002812                     
  8806                           ;dc_motor.c: 102:         setMotorPWM(mR);
  8807  002812  C01F  F00E         	movff	turnLeft90@mR,setMotorPWM@m
  8808  002816  C020  F00F         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  8809  00281A  ECE0  F011         	call	_setMotorPWM	;wreg free
  8810  00281E                     
  8811                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8812  00281E  0EA0               	movlw	160
  8813  002820                     u4677:
  8814  002820  D000               	nop2	
  8815  002822  2EE8               	decfsz	wreg,f,c
  8816  002824  D7FD               	bra	u4677
  8817  002826                     
  8818                           ;dc_motor.c: 104:     }
  8819  002826  4A23               	infsnz	turnLeft90@i^0,f,c
  8820  002828  2A24               	incf	(turnLeft90@i+1)^0,f,c
  8821  00282A  5024               	movf	(turnLeft90@i+1)^0,w,c
  8822  00282C  E109               	bnz	u2260
  8823  00282E  0E4B               	movlw	75
  8824  002830  5C23               	subwf	turnLeft90@i^0,w,c
  8825  002832  A0D8               	btfss	status,0,c
  8826  002834  EF1E  F014         	goto	u2261
  8827  002838  EF20  F014         	goto	u2260
  8828  00283C                     u2261:
  8829  00283C  EFF9  F013         	goto	l2829
  8830  002840                     u2260:
  8831  002840                     
  8832                           ;dc_motor.c: 105:     _delay((unsigned long)((190)*(64000000/4000.0)));
  8833  002840  0E10               	movlw	16
  8834  002842  6E22               	movwf	(??_turnLeft90+1)^0,c
  8835  002844  0E6C               	movlw	108
  8836  002846  6E21               	movwf	??_turnLeft90^0,c
  8837  002848  0E00               	movlw	0
  8838  00284A                     u4687:
  8839  00284A  2EE8               	decfsz	wreg,f,c
  8840  00284C  D7FE               	bra	u4687
  8841  00284E  2E21               	decfsz	??_turnLeft90^0,f,c
  8842  002850  D7FC               	bra	u4687
  8843  002852  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8844  002854  D7FA               	bra	u4687
  8845  002856  D000               	nop2	
  8846  002858  D000               	nop2	
  8847  00285A                     
  8848                           ;dc_motor.c: 106:     stop(mL, mR);
  8849  00285A  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8850  00285E  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8851  002862  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8852  002866  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8853  00286A  ECB0  F018         	call	_stop	;wreg free
  8854  00286E                     
  8855                           ;dc_motor.c: 107:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8856  00286E  0E05               	movlw	5
  8857  002870  6E22               	movwf	(??_turnLeft90+1)^0,c
  8858  002872  0E0F               	movlw	15
  8859  002874  6E21               	movwf	??_turnLeft90^0,c
  8860  002876  0EF1               	movlw	241
  8861  002878                     u4697:
  8862  002878  2EE8               	decfsz	wreg,f,c
  8863  00287A  D7FE               	bra	u4697
  8864  00287C  2E21               	decfsz	??_turnLeft90^0,f,c
  8865  00287E  D7FC               	bra	u4697
  8866  002880  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8867  002882  D7FA               	bra	u4697
  8868  002884  F000               	nop	
  8869  002886  0012               	return		;funcret
  8870  002888                     __end_of_turnLeft90:
  8871                           	callstack 0
  8872                           
  8873 ;; *************** function _stop *****************
  8874 ;; Defined at:
  8875 ;;		line 61 in file "dc_motor.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8878 ;;		 -> main@motorL(9), 
  8879 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8880 ;;		 -> main@motorR(9), 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;		None
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  1    wreg      void 
  8885 ;; Registers used:
  8886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;Total ram usage:        4 bytes
  8897 ;; Hardware stack levels used: 1
  8898 ;; Hardware stack levels required when called: 3
  8899 ;; This function calls:
  8900 ;;		_setMotorPWM
  8901 ;; This function is called by:
  8902 ;;		_White
  8903 ;;		_turnLeft90
  8904 ;;		_turnLeft135
  8905 ;;		_turnRight90
  8906 ;;		_turnRight135
  8907 ;;		_turnRight180
  8908 ;;		_reverseTurnRight90
  8909 ;;		_reverseTurnLeft90
  8910 ;;		_main
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text36
  8915  003160                     __ptext36:
  8916                           	callstack 0
  8917  003160                     _stop:
  8918                           	callstack 26
  8919  003160                     
  8920                           ;dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 62: {;d
      +                          c_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8921  003160  EFE4  F018         	goto	l2761
  8922  003164                     l2747:
  8923                           
  8924                           ;dc_motor.c: 64:         if ((mL->power) > 0){
  8925  003164  C019  FFD9         	movff	stop@mL,fsr2l
  8926  003168  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8927  00316C  50DF               	movf	indf2,w,c
  8928  00316E  B4D8               	btfsc	status,2,c
  8929  003170  EFBC  F018         	goto	u2181
  8930  003174  EFBE  F018         	goto	u2180
  8931  003178                     u2181:
  8932  003178  EFC3  F018         	goto	l2751
  8933  00317C                     u2180:
  8934  00317C                     
  8935                           ;dc_motor.c: 65:             (mL->power) -= 1;
  8936  00317C  C019  FFD9         	movff	stop@mL,fsr2l
  8937  003180  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8938  003184  06DF               	decf	indf2,f,c
  8939  003186                     l2751:
  8940                           
  8941                           ;dc_motor.c: 67:         if ((mR->power) > 0){
  8942  003186  C01B  FFD9         	movff	stop@mR,fsr2l
  8943  00318A  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8944  00318E  50DF               	movf	indf2,w,c
  8945  003190  B4D8               	btfsc	status,2,c
  8946  003192  EFCD  F018         	goto	u2191
  8947  003196  EFCF  F018         	goto	u2190
  8948  00319A                     u2191:
  8949  00319A  EFD4  F018         	goto	l2755
  8950  00319E                     u2190:
  8951  00319E                     
  8952                           ;dc_motor.c: 68:             (mR->power) -= 1;
  8953  00319E  C01B  FFD9         	movff	stop@mR,fsr2l
  8954  0031A2  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8955  0031A6  06DF               	decf	indf2,f,c
  8956  0031A8                     l2755:
  8957                           
  8958                           ;dc_motor.c: 70:         setMotorPWM(mL);
  8959  0031A8  C019  F00E         	movff	stop@mL,setMotorPWM@m
  8960  0031AC  C01A  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8961  0031B0  ECE0  F011         	call	_setMotorPWM	;wreg free
  8962  0031B4                     
  8963                           ;dc_motor.c: 71:         setMotorPWM(mR);
  8964  0031B4  C01B  F00E         	movff	stop@mR,setMotorPWM@m
  8965  0031B8  C01C  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8966  0031BC  ECE0  F011         	call	_setMotorPWM	;wreg free
  8967  0031C0                     
  8968                           ;dc_motor.c: 72:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  8969  0031C0  0E35               	movlw	53
  8970  0031C2                     u4707:
  8971  0031C2  2EE8               	decfsz	wreg,f,c
  8972  0031C4  D7FE               	bra	u4707
  8973  0031C6  F000               	nop	
  8974  0031C8                     l2761:
  8975                           
  8976                           ;dc_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8977  0031C8  C019  FFD9         	movff	stop@mL,fsr2l
  8978  0031CC  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8979  0031D0  50DF               	movf	indf2,w,c
  8980  0031D2  B4D8               	btfsc	status,2,c
  8981  0031D4  EFEE  F018         	goto	u2201
  8982  0031D8  EFF0  F018         	goto	u2200
  8983  0031DC                     u2201:
  8984  0031DC  EFFC  F018         	goto	l226
  8985  0031E0                     u2200:
  8986  0031E0  C01B  FFD9         	movff	stop@mR,fsr2l
  8987  0031E4  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8988  0031E8  50DF               	movf	indf2,w,c
  8989  0031EA  A4D8               	btfss	status,2,c
  8990  0031EC  EFFA  F018         	goto	u2211
  8991  0031F0  EFFC  F018         	goto	u2210
  8992  0031F4                     u2211:
  8993  0031F4  EFB2  F018         	goto	l2747
  8994  0031F8                     u2210:
  8995  0031F8                     l226:
  8996  0031F8  0012               	return		;funcret
  8997  0031FA                     __end_of_stop:
  8998                           	callstack 0
  8999                           
  9000 ;; *************** function _reverse *****************
  9001 ;; Defined at:
  9002 ;;		line 76 in file "dc_motor.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9005 ;;		 -> main@motorL(9), 
  9006 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9007 ;;		 -> main@motorR(9), 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9023 ;;Total ram usage:        4 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; Hardware stack levels required when called: 3
  9026 ;; This function calls:
  9027 ;;		_setMotorPWM
  9028 ;; This function is called by:
  9029 ;;		_turnLeft90
  9030 ;;		_turnLeft135
  9031 ;;		_turnRight90
  9032 ;;		_turnRight135
  9033 ;;		_turnRight180
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	text37
  9038  00334A                     __ptext37:
  9039                           	callstack 0
  9040  00334A                     _reverse:
  9041                           	callstack 26
  9042  00334A                     
  9043                           ;dc_motor.c: 76: void reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: 
      +                          {;dc_motor.c: 78:     (*mL).direction = 0;
  9044  00334A  EE20 F001          	lfsr	2,1
  9045  00334E  5019               	movf	reverse@mL^0,w,c
  9046  003350  26D9               	addwf	fsr2l,f,c
  9047  003352  501A               	movf	(reverse@mL+1)^0,w,c
  9048  003354  22DA               	addwfc	fsr2h,f,c
  9049  003356  0E00               	movlw	0
  9050  003358  6EDF               	movwf	indf2,c
  9051                           
  9052                           ;dc_motor.c: 79:     (*mR).direction = 0;
  9053  00335A  EE20 F001          	lfsr	2,1
  9054  00335E  501B               	movf	reverse@mR^0,w,c
  9055  003360  26D9               	addwf	fsr2l,f,c
  9056  003362  501C               	movf	(reverse@mR+1)^0,w,c
  9057  003364  22DA               	addwfc	fsr2h,f,c
  9058  003366  0E00               	movlw	0
  9059  003368  6EDF               	movwf	indf2,c
  9060  00336A                     
  9061                           ;dc_motor.c: 80:     (*mL).power = 50;
  9062  00336A  C019  FFD9         	movff	reverse@mL,fsr2l
  9063  00336E  C01A  FFDA         	movff	reverse@mL+1,fsr2h
  9064  003372  0E32               	movlw	50
  9065  003374  6EDF               	movwf	indf2,c
  9066  003376                     
  9067                           ;dc_motor.c: 81:     (*mR).power = 50;
  9068  003376  C01B  FFD9         	movff	reverse@mR,fsr2l
  9069  00337A  C01C  FFDA         	movff	reverse@mR+1,fsr2h
  9070  00337E  0E32               	movlw	50
  9071  003380  6EDF               	movwf	indf2,c
  9072  003382                     
  9073                           ;dc_motor.c: 82:     setMotorPWM(mL);
  9074  003382  C019  F00E         	movff	reverse@mL,setMotorPWM@m
  9075  003386  C01A  F00F         	movff	reverse@mL+1,setMotorPWM@m+1
  9076  00338A  ECE0  F011         	call	_setMotorPWM	;wreg free
  9077  00338E                     
  9078                           ;dc_motor.c: 83:     setMotorPWM(mR);
  9079  00338E  C01B  F00E         	movff	reverse@mR,setMotorPWM@m
  9080  003392  C01C  F00F         	movff	reverse@mR+1,setMotorPWM@m+1
  9081  003396  ECE0  F011         	call	_setMotorPWM	;wreg free
  9082  00339A  0012               	return		;funcret
  9083  00339C                     __end_of_reverse:
  9084                           	callstack 0
  9085                           
  9086 ;; *************** function _forward *****************
  9087 ;; Defined at:
  9088 ;;		line 207 in file "dc_motor.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9091 ;;		 -> main@motorL(9), 
  9092 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9093 ;;		 -> main@motorR(9), 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      void 
  9098 ;; Registers used:
  9099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9109 ;;Total ram usage:        4 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; Hardware stack levels required when called: 3
  9112 ;; This function calls:
  9113 ;;		_setMotorPWM
  9114 ;; This function is called by:
  9115 ;;		_White
  9116 ;;		_main
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text38
  9121  00339C                     __ptext38:
  9122                           	callstack 0
  9123  00339C                     _forward:
  9124                           	callstack 27
  9125  00339C                     
  9126                           ;dc_motor.c: 207: void forward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 208
      +                          : {;dc_motor.c: 209:     (*mL).direction = 1;
  9127  00339C  EE20 F001          	lfsr	2,1
  9128  0033A0  5019               	movf	forward@mL^0,w,c
  9129  0033A2  26D9               	addwf	fsr2l,f,c
  9130  0033A4  501A               	movf	(forward@mL+1)^0,w,c
  9131  0033A6  22DA               	addwfc	fsr2h,f,c
  9132  0033A8  0E01               	movlw	1
  9133  0033AA  6EDF               	movwf	indf2,c
  9134                           
  9135                           ;dc_motor.c: 210:     (*mR).direction = 1;
  9136  0033AC  EE20 F001          	lfsr	2,1
  9137  0033B0  501B               	movf	forward@mR^0,w,c
  9138  0033B2  26D9               	addwf	fsr2l,f,c
  9139  0033B4  501C               	movf	(forward@mR+1)^0,w,c
  9140  0033B6  22DA               	addwfc	fsr2h,f,c
  9141  0033B8  0E01               	movlw	1
  9142  0033BA  6EDF               	movwf	indf2,c
  9143  0033BC                     
  9144                           ;dc_motor.c: 211:     (*mL).power = 13;
  9145  0033BC  C019  FFD9         	movff	forward@mL,fsr2l
  9146  0033C0  C01A  FFDA         	movff	forward@mL+1,fsr2h
  9147  0033C4  0E0D               	movlw	13
  9148  0033C6  6EDF               	movwf	indf2,c
  9149  0033C8                     
  9150                           ;dc_motor.c: 212:     (*mR).power = 13;
  9151  0033C8  C01B  FFD9         	movff	forward@mR,fsr2l
  9152  0033CC  C01C  FFDA         	movff	forward@mR+1,fsr2h
  9153  0033D0  0E0D               	movlw	13
  9154  0033D2  6EDF               	movwf	indf2,c
  9155  0033D4                     
  9156                           ;dc_motor.c: 213:     setMotorPWM(mL);
  9157  0033D4  C019  F00E         	movff	forward@mL,setMotorPWM@m
  9158  0033D8  C01A  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  9159  0033DC  ECE0  F011         	call	_setMotorPWM	;wreg free
  9160  0033E0                     
  9161                           ;dc_motor.c: 214:     setMotorPWM(mR);
  9162  0033E0  C01B  F00E         	movff	forward@mR,setMotorPWM@m
  9163  0033E4  C01C  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  9164  0033E8  ECE0  F011         	call	_setMotorPWM	;wreg free
  9165  0033EC  0012               	return		;funcret
  9166  0033EE                     __end_of_forward:
  9167                           	callstack 0
  9168                           
  9169 ;; *************** function _setMotorPWM *****************
  9170 ;; Defined at:
  9171 ;;		line 37 in file "dc_motor.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9174 ;;		 -> main@motorR(9), main@motorL(9), 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  PWMduty         2   22[COMRAM] int 
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;Total ram usage:       11 bytes
  9191 ;; Hardware stack levels used: 1
  9192 ;; Hardware stack levels required when called: 2
  9193 ;; This function calls:
  9194 ;;		___lwdiv
  9195 ;;		___wmul
  9196 ;; This function is called by:
  9197 ;;		_stop
  9198 ;;		_reverse
  9199 ;;		_turnLeft90
  9200 ;;		_turnLeft135
  9201 ;;		_turnRight90
  9202 ;;		_turnRight135
  9203 ;;		_turnRight180
  9204 ;;		_forward
  9205 ;;		_reverseTurnRight90
  9206 ;;		_reverseTurnLeft90
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text39
  9211  0023C0                     __ptext39:
  9212                           	callstack 0
  9213  0023C0                     _setMotorPWM:
  9214                           	callstack 26
  9215  0023C0                     
  9216                           ;dc_motor.c: 37: void setMotorPWM(struct DC_motor *m);dc_motor.c: 38: {;dc_motor.c: 39: 
      +                           int PWMduty;;dc_motor.c: 41:  if (m->direction){
  9217  0023C0  EE20 F001          	lfsr	2,1
  9218  0023C4  500E               	movf	setMotorPWM@m^0,w,c
  9219  0023C6  26D9               	addwf	fsr2l,f,c
  9220  0023C8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9221  0023CA  22DA               	addwfc	fsr2h,f,c
  9222  0023CC  50DF               	movf	indf2,w,c
  9223  0023CE  B4D8               	btfsc	status,2,c
  9224  0023D0  EFEC  F011         	goto	u2141
  9225  0023D4  EFEE  F011         	goto	u2140
  9226  0023D8                     u2141:
  9227  0023D8  EF1F  F012         	goto	l2735
  9228  0023DC                     u2140:
  9229  0023DC                     
  9230                           ;dc_motor.c: 43:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  9231  0023DC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9232  0023E0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9233  0023E4  50DF               	movf	indf2,w,c
  9234  0023E6  6E10               	movwf	??_setMotorPWM^0,c
  9235  0023E8  5010               	movf	??_setMotorPWM^0,w,c
  9236  0023EA  6E01               	movwf	___wmul@multiplier^0,c
  9237  0023EC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9238  0023EE  EE20 F007          	lfsr	2,7
  9239  0023F2  500E               	movf	setMotorPWM@m^0,w,c
  9240  0023F4  26D9               	addwf	fsr2l,f,c
  9241  0023F6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9242  0023F8  22DA               	addwfc	fsr2h,f,c
  9243  0023FA  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9244  0023FE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9245  002402  EC8A  F01B         	call	___wmul	;wreg free
  9246  002406  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9247  00240A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9248  00240E  0E00               	movlw	0
  9249  002410  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9250  002412  0E64               	movlw	100
  9251  002414  6E09               	movwf	___lwdiv@divisor^0,c
  9252  002416  EC3A  F019         	call	___lwdiv	;wreg free
  9253  00241A  EE20 F007          	lfsr	2,7
  9254  00241E  500E               	movf	setMotorPWM@m^0,w,c
  9255  002420  26D9               	addwf	fsr2l,f,c
  9256  002422  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9257  002424  22DA               	addwfc	fsr2h,f,c
  9258  002426  CFDE F011          	movff	postinc2,??_setMotorPWM+1
  9259  00242A  CFDD F012          	movff	postdec2,??_setMotorPWM+2
  9260  00242E  5007               	movf	?___lwdiv^0,w,c
  9261  002430  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9262  002432  6E17               	movwf	setMotorPWM@PWMduty^0,c
  9263  002434  5008               	movf	(?___lwdiv+1)^0,w,c
  9264  002436  5812               	subwfb	(??_setMotorPWM+2)^0,w,c
  9265  002438  6E18               	movwf	(setMotorPWM@PWMduty+1)^0,c
  9266                           
  9267                           ;dc_motor.c: 44:  }
  9268  00243A  EF42  F012         	goto	l2737
  9269  00243E                     l2735:
  9270                           
  9271                           ;dc_motor.c: 47:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  9272  00243E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9273  002442  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9274  002446  50DF               	movf	indf2,w,c
  9275  002448  6E10               	movwf	??_setMotorPWM^0,c
  9276  00244A  5010               	movf	??_setMotorPWM^0,w,c
  9277  00244C  6E01               	movwf	___wmul@multiplier^0,c
  9278  00244E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9279  002450  EE20 F007          	lfsr	2,7
  9280  002454  500E               	movf	setMotorPWM@m^0,w,c
  9281  002456  26D9               	addwf	fsr2l,f,c
  9282  002458  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9283  00245A  22DA               	addwfc	fsr2h,f,c
  9284  00245C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9285  002460  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9286  002464  EC8A  F01B         	call	___wmul	;wreg free
  9287  002468  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9288  00246C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9289  002470  0E00               	movlw	0
  9290  002472  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9291  002474  0E64               	movlw	100
  9292  002476  6E09               	movwf	___lwdiv@divisor^0,c
  9293  002478  EC3A  F019         	call	___lwdiv	;wreg free
  9294  00247C  C007  F017         	movff	?___lwdiv,setMotorPWM@PWMduty
  9295  002480  C008  F018         	movff	?___lwdiv+1,setMotorPWM@PWMduty+1
  9296  002484                     l2737:
  9297                           
  9298                           ;dc_motor.c: 50:  *(m->dutyHighByte) = PWMduty;
  9299  002484  EE20 F002          	lfsr	2,2
  9300  002488  500E               	movf	setMotorPWM@m^0,w,c
  9301  00248A  26D9               	addwf	fsr2l,f,c
  9302  00248C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9303  00248E  22DA               	addwfc	fsr2h,f,c
  9304  002490  CFDE F010          	movff	postinc2,??_setMotorPWM
  9305  002494  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9306  002498  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9307  00249C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9308  0024A0  C017  FFDF         	movff	setMotorPWM@PWMduty,indf2
  9309  0024A4                     
  9310                           ;dc_motor.c: 52:  if (m->direction){
  9311  0024A4  EE20 F001          	lfsr	2,1
  9312  0024A8  500E               	movf	setMotorPWM@m^0,w,c
  9313  0024AA  26D9               	addwf	fsr2l,f,c
  9314  0024AC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9315  0024AE  22DA               	addwfc	fsr2h,f,c
  9316  0024B0  50DF               	movf	indf2,w,c
  9317  0024B2  B4D8               	btfsc	status,2,c
  9318  0024B4  EF5E  F012         	goto	u2151
  9319  0024B8  EF60  F012         	goto	u2150
  9320  0024BC                     u2151:
  9321  0024BC  EF95  F012         	goto	l2743
  9322  0024C0                     u2150:
  9323  0024C0                     
  9324                           ;dc_motor.c: 53:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  9325  0024C0  EE20 F004          	lfsr	2,4
  9326  0024C4  500E               	movf	setMotorPWM@m^0,w,c
  9327  0024C6  26D9               	addwf	fsr2l,f,c
  9328  0024C8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9329  0024CA  22DA               	addwfc	fsr2h,f,c
  9330  0024CC  CFDE F010          	movff	postinc2,??_setMotorPWM
  9331  0024D0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9332  0024D4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9333  0024D8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9334  0024DC  EE10 F004          	lfsr	1,4
  9335  0024E0  500E               	movf	setMotorPWM@m^0,w,c
  9336  0024E2  26E1               	addwf	fsr1l,f,c
  9337  0024E4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9338  0024E6  22E2               	addwfc	fsr1h,f,c
  9339  0024E8  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9340  0024EC  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9341  0024F0  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9342  0024F4  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9343  0024F8  50E7               	movf	indf1,w,c
  9344  0024FA  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9345  0024FC  EE10 F006          	lfsr	1,6
  9346  002500  500E               	movf	setMotorPWM@m^0,w,c
  9347  002502  26E1               	addwf	fsr1l,f,c
  9348  002504  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9349  002506  22E2               	addwfc	fsr1h,f,c
  9350  002508  50E7               	movf	indf1,w,c
  9351  00250A  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9352  00250C  0E01               	movlw	1
  9353  00250E  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9354  002510  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9355  002512  EF8D  F012         	goto	u2164
  9356  002516                     u2165:
  9357  002516  90D8               	bcf	status,0,c
  9358  002518  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9359  00251A                     u2164:
  9360  00251A  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9361  00251C  EF8B  F012         	goto	u2165
  9362  002520  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9363  002522  1014               	iorwf	(??_setMotorPWM+4)^0,w,c
  9364  002524  6EDF               	movwf	indf2,c
  9365                           
  9366                           ;dc_motor.c: 54:  }
  9367  002526  EFC9  F012         	goto	l216
  9368  00252A                     l2743:
  9369                           
  9370                           ;dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  9371  00252A  EE20 F004          	lfsr	2,4
  9372  00252E  500E               	movf	setMotorPWM@m^0,w,c
  9373  002530  26D9               	addwf	fsr2l,f,c
  9374  002532  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9375  002534  22DA               	addwfc	fsr2h,f,c
  9376  002536  CFDE F010          	movff	postinc2,??_setMotorPWM
  9377  00253A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9378  00253E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9379  002542  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9380  002546  EE10 F004          	lfsr	1,4
  9381  00254A  500E               	movf	setMotorPWM@m^0,w,c
  9382  00254C  26E1               	addwf	fsr1l,f,c
  9383  00254E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9384  002550  22E2               	addwfc	fsr1h,f,c
  9385  002552  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9386  002556  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9387  00255A  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9388  00255E  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9389  002562  50E7               	movf	indf1,w,c
  9390  002564  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9391  002566  EE10 F006          	lfsr	1,6
  9392  00256A  500E               	movf	setMotorPWM@m^0,w,c
  9393  00256C  26E1               	addwf	fsr1l,f,c
  9394  00256E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9395  002570  22E2               	addwfc	fsr1h,f,c
  9396  002572  50E7               	movf	indf1,w,c
  9397  002574  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9398  002576  0E01               	movlw	1
  9399  002578  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9400  00257A  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9401  00257C  EFC2  F012         	goto	u2174
  9402  002580                     u2175:
  9403  002580  90D8               	bcf	status,0,c
  9404  002582  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9405  002584                     u2174:
  9406  002584  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9407  002586  EFC0  F012         	goto	u2175
  9408  00258A  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9409  00258C  0AFF               	xorlw	255
  9410  00258E  1414               	andwf	(??_setMotorPWM+4)^0,w,c
  9411  002590  6EDF               	movwf	indf2,c
  9412  002592                     l216:
  9413  002592  0012               	return		;funcret
  9414  002594                     __end_of_setMotorPWM:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function ___wmul *****************
  9418 ;; Defined at:
  9419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  multiplier      2    0[COMRAM] unsigned int 
  9422 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  product         2    4[COMRAM] unsigned int 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  2    0[COMRAM] unsigned int 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, prodl, prodh
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;Total ram usage:        6 bytes
  9439 ;; Hardware stack levels used: 1
  9440 ;; Hardware stack levels required when called: 1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_setMotorPWM
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text40
  9449  003714                     __ptext40:
  9450                           	callstack 0
  9451  003714                     ___wmul:
  9452                           	callstack 26
  9453  003714  5001               	movf	___wmul@multiplier^0,w,c
  9454  003716  0203               	mulwf	___wmul@multiplicand^0,c
  9455  003718  CFF3 F005          	movff	prodl,___wmul@product
  9456  00371C  CFF4 F006          	movff	prodh,___wmul@product+1
  9457  003720  5001               	movf	___wmul@multiplier^0,w,c
  9458  003722  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9459  003724  50F3               	movf	243,w,c
  9460  003726  2606               	addwf	(___wmul@product+1)^0,f,c
  9461  003728  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9462  00372A  0203               	mulwf	___wmul@multiplicand^0,c
  9463  00372C  50F3               	movf	243,w,c
  9464  00372E  2606               	addwf	(___wmul@product+1)^0,f,c
  9465  003730  C005  F001         	movff	___wmul@product,?___wmul
  9466  003734  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9467  003738  0012               	return		;funcret
  9468  00373A                     __end_of___wmul:
  9469                           	callstack 0
  9470                           
  9471 ;; *************** function ___lwdiv *****************
  9472 ;; Defined at:
  9473 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  dividend        2    6[COMRAM] unsigned int 
  9476 ;;  divisor         2    8[COMRAM] unsigned int 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  quotient        2   10[COMRAM] unsigned int 
  9479 ;;  counter         1   12[COMRAM] unsigned char 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2    6[COMRAM] unsigned int 
  9482 ;; Registers used:
  9483 ;;		wreg, status,2, status,0
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9490 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9492 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9493 ;;Total ram usage:        7 bytes
  9494 ;; Hardware stack levels used: 1
  9495 ;; Hardware stack levels required when called: 1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_setMotorPWM
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text41
  9504  003274                     __ptext41:
  9505                           	callstack 0
  9506  003274                     ___lwdiv:
  9507                           	callstack 26
  9508  003274  0E00               	movlw	0
  9509  003276  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9510  003278  0E00               	movlw	0
  9511  00327A  6E0B               	movwf	___lwdiv@quotient^0,c
  9512  00327C  5009               	movf	___lwdiv@divisor^0,w,c
  9513  00327E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9514  003280  B4D8               	btfsc	status,2,c
  9515  003282  EF45  F019         	goto	u2111
  9516  003286  EF47  F019         	goto	u2110
  9517  00328A                     u2111:
  9518  00328A  EF6F  F019         	goto	l1025
  9519  00328E                     u2110:
  9520  00328E  0E01               	movlw	1
  9521  003290  6E0D               	movwf	___lwdiv@counter^0,c
  9522  003292  EF4F  F019         	goto	l2717
  9523  003296                     l2715:
  9524  003296  90D8               	bcf	status,0,c
  9525  003298  3609               	rlcf	___lwdiv@divisor^0,f,c
  9526  00329A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9527  00329C  2A0D               	incf	___lwdiv@counter^0,f,c
  9528  00329E                     l2717:
  9529  00329E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9530  0032A0  EF54  F019         	goto	u2121
  9531  0032A4  EF56  F019         	goto	u2120
  9532  0032A8                     u2121:
  9533  0032A8  EF4B  F019         	goto	l2715
  9534  0032AC                     u2120:
  9535  0032AC                     l2719:
  9536  0032AC  90D8               	bcf	status,0,c
  9537  0032AE  360B               	rlcf	___lwdiv@quotient^0,f,c
  9538  0032B0  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9539  0032B2  5009               	movf	___lwdiv@divisor^0,w,c
  9540  0032B4  5C07               	subwf	___lwdiv@dividend^0,w,c
  9541  0032B6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9542  0032B8  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9543  0032BA  A0D8               	btfss	status,0,c
  9544  0032BC  EF62  F019         	goto	u2131
  9545  0032C0  EF64  F019         	goto	u2130
  9546  0032C4                     u2131:
  9547  0032C4  EF69  F019         	goto	l2727
  9548  0032C8                     u2130:
  9549  0032C8  5009               	movf	___lwdiv@divisor^0,w,c
  9550  0032CA  5E07               	subwf	___lwdiv@dividend^0,f,c
  9551  0032CC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9552  0032CE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9553  0032D0  800B               	bsf	___lwdiv@quotient^0,0,c
  9554  0032D2                     l2727:
  9555  0032D2  90D8               	bcf	status,0,c
  9556  0032D4  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9557  0032D6  3209               	rrcf	___lwdiv@divisor^0,f,c
  9558  0032D8  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9559  0032DA  EF56  F019         	goto	l2719
  9560  0032DE                     l1025:
  9561  0032DE  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9562  0032E2  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9563  0032E6  0012               	return		;funcret
  9564  0032E8                     __end_of___lwdiv:
  9565                           	callstack 0
  9566                           
  9567 ;; *************** function _Timer0_init *****************
  9568 ;; Defined at:
  9569 ;;		line 8 in file "timers.c"
  9570 ;; Parameters:    Size  Location     Type
  9571 ;;		None
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg, status,2
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9587 ;;Total ram usage:        0 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; Hardware stack levels required when called: 1
  9590 ;; This function calls:
  9591 ;;		Nothing
  9592 ;; This function is called by:
  9593 ;;		_main
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text42
  9598  00379C                     __ptext42:
  9599                           	callstack 0
  9600  00379C                     _Timer0_init:
  9601                           	callstack 29
  9602  00379C                     
  9603                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  9604  00379C  50D6               	movf	214,w,c	;volatile
  9605  00379E  0B1F               	andlw	-225
  9606  0037A0  0940               	iorlw	64
  9607  0037A2  6ED6               	movwf	214,c	;volatile
  9608  0037A4                     
  9609                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  9610  0037A4  88D6               	bsf	214,4,c	;volatile
  9611                           
  9612                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1111;
  9613  0037A6  0E0F               	movlw	15
  9614  0037A8  12D6               	iorwf	214,f,c	;volatile
  9615  0037AA                     
  9616                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  9617  0037AA  88D5               	bsf	213,4,c	;volatile
  9618                           
  9619                           ;timers.c: 16:     TMR0H=0;
  9620  0037AC  0E00               	movlw	0
  9621  0037AE  6ED4               	movwf	212,c	;volatile
  9622                           
  9623                           ;timers.c: 17:     TMR0L=0;
  9624  0037B0  0E00               	movlw	0
  9625  0037B2  6ED3               	movwf	211,c	;volatile
  9626  0037B4                     
  9627                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  9628  0037B4  8ED5               	bsf	213,7,c	;volatile
  9629  0037B6  0012               	return		;funcret
  9630  0037B8                     __end_of_Timer0_init:
  9631                           	callstack 0
  9632                           
  9633 ;; *************** function _Interrupts_init *****************
  9634 ;; Defined at:
  9635 ;;		line 11 in file "interrupts.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		None
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text43
  9664  0037C4                     __ptext43:
  9665                           	callstack 0
  9666  0037C4                     _Interrupts_init:
  9667                           	callstack 29
  9668  0037C4                     
  9669                           ;interrupts.c: 15:     PIE2bits.C1IE = 1;
  9670  0037C4  010E               	movlb	14	; () banked
  9671  0037C6  812B               	bsf	43,0,b	;volatile
  9672                           
  9673                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  9674  0037C8  8B29               	bsf	41,5,b	;volatile
  9675                           
  9676                           ;interrupts.c: 17:     INTCONbits.GIEL = 1;
  9677  0037CA  8CF2               	bsf	242,6,c	;volatile
  9678                           
  9679                           ;interrupts.c: 18:     INTCONbits.GIE = 1;
  9680  0037CC  8EF2               	bsf	242,7,c	;volatile
  9681  0037CE                     
  9682                           ; BSR set to: 14
  9683  0037CE  0012               	return		;funcret
  9684  0037D0                     __end_of_Interrupts_init:
  9685                           	callstack 0
  9686                           
  9687 ;; *************** function _HighISR *****************
  9688 ;; Defined at:
  9689 ;;		line 26 in file "interrupts.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;		None
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;		None
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  1    wreg      void 
  9696 ;; Registers used:
  9697 ;;		wreg, status,2
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;Total ram usage:        0 bytes
  9708 ;; Hardware stack levels used: 1
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		Interrupt level 2
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	intcode
  9717  000008                     __pintcode:
  9718                           	callstack 0
  9719  000008                     _HighISR:
  9720                           	callstack 24
  9721                           
  9722                           ; BSR set to: 14
  9723                           ;incstack = 0
  9724  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9725  00000A                     
  9726                           ;interrupts.c: 29:     if(PIR0bits.TMR0IF){
  9727  00000A  010E               	movlb	14	; () banked
  9728  00000C  AB33               	btfss	51,5,b	;volatile
  9729  00000E  EF0B  F000         	goto	i2u210_41
  9730  000012  EF0D  F000         	goto	i2u210_40
  9731  000016                     i2u210_41:
  9732  000016  EF12  F000         	goto	i2l517
  9733  00001A                     i2u210_40:
  9734  00001A                     
  9735                           ; BSR set to: 14
  9736                           ;interrupts.c: 31:         TMR0H = 0;
  9737  00001A  0E00               	movlw	0
  9738  00001C  6ED4               	movwf	212,c	;volatile
  9739                           
  9740                           ;interrupts.c: 32:         TMR0L = 0;
  9741  00001E  0E00               	movlw	0
  9742  000020  6ED3               	movwf	211,c	;volatile
  9743  000022                     
  9744                           ; BSR set to: 14
  9745                           ;interrupts.c: 34:         PIR0bits.TMR0IF = 0;
  9746  000022  9B33               	bcf	51,5,b	;volatile
  9747  000024                     i2l517:
  9748                           
  9749                           ; BSR set to: 14
  9750  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9751  000026  0011               	retfie		f
  9752  000028                     __end_of_HighISR:
  9753                           	callstack 0
  9754  0000                     
  9755                           	psect	rparam
  9756  0000                     
  9757                           	psect	temp
  9758  00005F                     btemp:
  9759                           	callstack 0
  9760  00005F                     	ds	1
  9761  0000                     int$flags	set	btemp
  9762  0000                     wtemp8	set	btemp+1
  9763  0000                     ttemp5	set	btemp+1
  9764  0000                     ttemp6	set	btemp+4
  9765  0000                     ttemp7	set	btemp+8
  9766                           
  9767                           	psect	idloc
  9768                           
  9769                           ;Config register IDLOC0 @ 0x200000
  9770                           ;	unspecified, using default values
  9771  200000                     	org	2097152
  9772  200000  0FFF               	dw	4095
  9773                           
  9774                           ;Config register IDLOC1 @ 0x200002
  9775                           ;	unspecified, using default values
  9776  200002                     	org	2097154
  9777  200002  0FFF               	dw	4095
  9778                           
  9779                           ;Config register IDLOC2 @ 0x200004
  9780                           ;	unspecified, using default values
  9781  200004                     	org	2097156
  9782  200004  0FFF               	dw	4095
  9783                           
  9784                           ;Config register IDLOC3 @ 0x200006
  9785                           ;	unspecified, using default values
  9786  200006                     	org	2097158
  9787  200006  0FFF               	dw	4095
  9788                           
  9789                           ;Config register IDLOC4 @ 0x200008
  9790                           ;	unspecified, using default values
  9791  200008                     	org	2097160
  9792  200008  0FFF               	dw	4095
  9793                           
  9794                           ;Config register IDLOC5 @ 0x20000A
  9795                           ;	unspecified, using default values
  9796  20000A                     	org	2097162
  9797  20000A  0FFF               	dw	4095
  9798                           
  9799                           ;Config register IDLOC6 @ 0x20000C
  9800                           ;	unspecified, using default values
  9801  20000C                     	org	2097164
  9802  20000C  0FFF               	dw	4095
  9803                           
  9804                           ;Config register IDLOC7 @ 0x20000E
  9805                           ;	unspecified, using default values
  9806  20000E                     	org	2097166
  9807  20000E  0FFF               	dw	4095
  9808                           
  9809                           	psect	config
  9810                           
  9811                           ;Config register CONFIG1L @ 0x300000
  9812                           ;	External Oscillator mode Selection bits
  9813                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9814                           ;	Power-up default value for COSC bits
  9815                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9816  300000                     	org	3145728
  9817  300000  AA                 	db	170
  9818                           
  9819                           ;Config register CONFIG1H @ 0x300001
  9820                           ;	unspecified, using default values
  9821                           ;	Clock Out Enable bit
  9822                           ;	CLKOUTEN = 0x1, unprogrammed default
  9823                           ;	Clock Switch Enable bit
  9824                           ;	CSWEN = 0x1, unprogrammed default
  9825                           ;	Fail-Safe Clock Monitor Enable bit
  9826                           ;	FCMEN = 0x1, unprogrammed default
  9827  300001                     	org	3145729
  9828  300001  FF                 	db	255
  9829                           
  9830                           ;Config register CONFIG2L @ 0x300002
  9831                           ;	unspecified, using default values
  9832                           ;	Master Clear Enable bit
  9833                           ;	MCLRE = 0x1, unprogrammed default
  9834                           ;	Power-up Timer Enable bit
  9835                           ;	PWRTE = 0x1, unprogrammed default
  9836                           ;	Low-power BOR enable bit
  9837                           ;	LPBOREN = 0x1, unprogrammed default
  9838                           ;	Brown-out Reset Enable bits
  9839                           ;	BOREN = 0x3, unprogrammed default
  9840  300002                     	org	3145730
  9841  300002  FF                 	db	255
  9842                           
  9843                           ;Config register CONFIG2H @ 0x300003
  9844                           ;	unspecified, using default values
  9845                           ;	Brown Out Reset Voltage selection bits
  9846                           ;	BORV = 0x3, unprogrammed default
  9847                           ;	ZCD Disable bit
  9848                           ;	ZCD = 0x1, unprogrammed default
  9849                           ;	PPSLOCK bit One-Way Set Enable bit
  9850                           ;	PPS1WAY = 0x1, unprogrammed default
  9851                           ;	Stack Full/Underflow Reset Enable bit
  9852                           ;	STVREN = 0x1, unprogrammed default
  9853                           ;	Debugger Enable bit
  9854                           ;	DEBUG = 0x1, unprogrammed default
  9855                           ;	Extended Instruction Set Enable bit
  9856                           ;	XINST = 0x1, unprogrammed default
  9857  300003                     	org	3145731
  9858  300003  FF                 	db	255
  9859                           
  9860                           ;Config register CONFIG3L @ 0x300004
  9861                           ;	WDT Period Select bits
  9862                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9863                           ;	WDT operating mode
  9864                           ;	WDTE = OFF, WDT Disabled
  9865  300004                     	org	3145732
  9866  300004  9F                 	db	159
  9867                           
  9868                           ;Config register CONFIG3H @ 0x300005
  9869                           ;	unspecified, using default values
  9870                           ;	WDT Window Select bits
  9871                           ;	WDTCWS = 0x7, unprogrammed default
  9872                           ;	WDT input clock selector
  9873                           ;	WDTCCS = 0x7, unprogrammed default
  9874  300005                     	org	3145733
  9875  300005  FF                 	db	255
  9876                           
  9877                           ;Config register CONFIG4L @ 0x300006
  9878                           ;	unspecified, using default values
  9879                           ;	Write Protection Block 0
  9880                           ;	WRT0 = 0x1, unprogrammed default
  9881                           ;	Write Protection Block 1
  9882                           ;	WRT1 = 0x1, unprogrammed default
  9883                           ;	Write Protection Block 2
  9884                           ;	WRT2 = 0x1, unprogrammed default
  9885                           ;	Write Protection Block 3
  9886                           ;	WRT3 = 0x1, unprogrammed default
  9887                           ;	Write Protection Block 3
  9888                           ;	WRT4 = 0x1, unprogrammed default
  9889                           ;	Write Protection Block 3
  9890                           ;	WRT5 = 0x1, unprogrammed default
  9891                           ;	Write Protection Block 3
  9892                           ;	WRT6 = 0x1, unprogrammed default
  9893                           ;	Write Protection Block 3
  9894                           ;	WRT7 = 0x1, unprogrammed default
  9895  300006                     	org	3145734
  9896  300006  FF                 	db	255
  9897                           
  9898                           ;Config register CONFIG4H @ 0x300007
  9899                           ;	unspecified, using default values
  9900                           ;	Configuration Register Write Protection bit
  9901                           ;	WRTC = 0x1, unprogrammed default
  9902                           ;	Boot Block Write Protection bit
  9903                           ;	WRTB = 0x1, unprogrammed default
  9904                           ;	Data EEPROM Write Protection bit
  9905                           ;	WRTD = 0x1, unprogrammed default
  9906                           ;	Scanner Enable bit
  9907                           ;	SCANE = 0x1, unprogrammed default
  9908                           ;	Low Voltage Programming Enable bit
  9909                           ;	LVP = 0x1, unprogrammed default
  9910  300007                     	org	3145735
  9911  300007  FF                 	db	255
  9912                           
  9913                           ;Config register CONFIG5L @ 0x300008
  9914                           ;	unspecified, using default values
  9915                           ;	UserNVM Program Memory Code Protection bit
  9916                           ;	CP = 0x1, unprogrammed default
  9917                           ;	DataNVM Memory Code Protection bit
  9918                           ;	CPD = 0x1, unprogrammed default
  9919  300008                     	org	3145736
  9920  300008  FF                 	db	255
  9921                           
  9922                           ;Config register CONFIG5H @ 0x300009
  9923                           ;	unspecified, using default values
  9924  300009                     	org	3145737
  9925  300009  FF                 	db	255
  9926                           
  9927                           ;Config register CONFIG6L @ 0x30000A
  9928                           ;	unspecified, using default values
  9929                           ;	Table Read Protection Block 0
  9930                           ;	EBTR0 = 0x1, unprogrammed default
  9931                           ;	Table Read Protection Block 1
  9932                           ;	EBTR1 = 0x1, unprogrammed default
  9933                           ;	Table Read Protection Block 2
  9934                           ;	EBTR2 = 0x1, unprogrammed default
  9935                           ;	Table Read Protection Block 3
  9936                           ;	EBTR3 = 0x1, unprogrammed default
  9937                           ;	Table Read Protection Block 4
  9938                           ;	EBTR4 = 0x1, unprogrammed default
  9939                           ;	Table Read Protection Block 5
  9940                           ;	EBTR5 = 0x1, unprogrammed default
  9941                           ;	Table Read Protection Block 6
  9942                           ;	EBTR6 = 0x1, unprogrammed default
  9943                           ;	Table Read Protection Block 7
  9944                           ;	EBTR7 = 0x1, unprogrammed default
  9945  30000A                     	org	3145738
  9946  30000A  FF                 	db	255
  9947                           
  9948                           ;Config register CONFIG6H @ 0x30000B
  9949                           ;	unspecified, using default values
  9950                           ;	Boot Block Table Read Protection bit
  9951                           ;	EBTRB = 0x1, unprogrammed default
  9952  30000B                     	org	3145739
  9953  30000B  FF                 	db	255
  9954                           tosu	equ	0xFFF
  9955                           tosh	equ	0xFFE
  9956                           tosl	equ	0xFFD
  9957                           stkptr	equ	0xFFC
  9958                           pclatu	equ	0xFFB
  9959                           pclath	equ	0xFFA
  9960                           pcl	equ	0xFF9
  9961                           tblptru	equ	0xFF8
  9962                           tblptrh	equ	0xFF7
  9963                           tblptrl	equ	0xFF6
  9964                           tablat	equ	0xFF5
  9965                           prodh	equ	0xFF4
  9966                           prodl	equ	0xFF3
  9967                           indf0	equ	0xFEF
  9968                           postinc0	equ	0xFEE
  9969                           postdec0	equ	0xFED
  9970                           preinc0	equ	0xFEC
  9971                           plusw0	equ	0xFEB
  9972                           fsr0h	equ	0xFEA
  9973                           fsr0l	equ	0xFE9
  9974                           wreg	equ	0xFE8
  9975                           indf1	equ	0xFE7
  9976                           postinc1	equ	0xFE6
  9977                           postdec1	equ	0xFE5
  9978                           preinc1	equ	0xFE4
  9979                           plusw1	equ	0xFE3
  9980                           fsr1h	equ	0xFE2
  9981                           fsr1l	equ	0xFE1
  9982                           bsr	equ	0xFE0
  9983                           indf2	equ	0xFDF
  9984                           postinc2	equ	0xFDE
  9985                           postdec2	equ	0xFDD
  9986                           preinc2	equ	0xFDC
  9987                           plusw2	equ	0xFDB
  9988                           fsr2h	equ	0xFDA
  9989                           fsr2l	equ	0xFD9
  9990                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     88     114
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseTurnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S73DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S73DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    updateMovementCount@movementArray	PTR int  size(2) Largest target is 0
		 -> movementArray(BANK0[0]), 

    updateMovementCount@timerArray	PTR int  size(2) Largest target is 0
		 -> timerArray(BANK0[0]), 

    White@timerArray	PTR int  size(2) Largest target is 0
		 -> timerArray(BANK0[0]), 

    White@movementArray	PTR int  size(2) Largest target is 0
		 -> movementArray(BANK0[0]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_determine_color_new
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _White->_reverseTurnLeft90
    _White->_reverseTurnRight90
    _turnRight180->_reverse
    _turnRight180->_stop
    _turnRight135->_reverse
    _turnRight135->_stop
    _turnLeft135->_reverse
    _turnLeft135->_stop
    _reverseTurnRight90->_turnRight90
    _turnRight90->_reverse
    _turnRight90->_stop
    _reverseTurnLeft90->_turnLeft90
    _turnLeft90->_reverse
    _turnLeft90->_stop
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_determine_color_new

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                64    64      0  257195
                                             92 COMRAM     2     2      0
                                             34 BANK0     54    54      0
                    _Interrupts_init
                        _Timer0_init
                              _White
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                  _reverseTurnLeft90
                 _reverseTurnRight90
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
                _updateMovementCount
 ---------------------------------------------------------------------------------
 (1) _updateMovementCount                                 10     2      8     439
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   15944
                                             90 COMRAM     2     0      2
                                              0 BANK0     34    34      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             12 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1219
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     425
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2432
                                             64 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _White                                               21    11     10  119362
                                             42 COMRAM    21    11     10
                            _forward
                  _reverseTurnLeft90
                 _reverseTurnRight90
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight180                                         8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight135                                         8     4      4   12765
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft135                                          8     4      4   12765
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnRight90                                   6     2      4   22135
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight90                                          8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnLeft90                                    6     2      4   22135
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _turnLeft90                                           8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    6085
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              4     0      4    3457
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              4     0      4    3153
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2565
                                             13 COMRAM    11     9      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _White
     _forward
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _reverseTurnLeft90
       _setMotorPWM
       _stop
         _setMotorPWM
       _turnLeft90
         _reverse
           _setMotorPWM
         _setMotorPWM
         _stop
     _reverseTurnRight90
       _setMotorPWM
       _stop
       _turnRight90
         _reverse
         _setMotorPWM
         _stop
     _stop
     _turnLeft135
       _reverse
       _setMotorPWM
       _stop
     _turnLeft90
     _turnRight135
       _reverse
       _setMotorPWM
       _stop
     _turnRight180
       _reverse
       _setMotorPWM
       _stop
     _turnRight90
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _isbtw
       ___flge
   _forward
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _reverseTurnLeft90
   _reverseTurnRight90
   _stop
   _turnLeft135
   _turnLeft90
   _turnRight135
   _turnRight180
   _turnRight90
   _updateMovementCount

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      72       5       71.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C       8        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 14:55:56 2021

                  _color_read_Red 343E                      ___fldiv@aexp 0027  
                    ___fldiv@bexp 0026                      ___fldiv@sign 001F  
                 _color_read_Blue 34DE                                l53 36C0  
                              l62 348C                                l71 3348  
                              l56 379A                                l65 34DC  
                              l82 3608                                l75 3272  
                              l59 343C                                l68 352C  
                              l79 35C2                                l97 0D76  
             ___wmul@multiplicand 0003                  _color_read_Clear 33EE  
                _color_read_Green 348E                 ??_Interrupts_init 0001  
                             l111 1F78                               l121 2024  
                             l124 3578                               l118 1FA0  
                             l151 36EA                               l216 2592  
                             l160 37E2                               l209 364A  
                             l226 31F8                               l234 2886  
                             l154 36EC                               l163 37EC  
                             l244 2C40                               l260 3072  
                             l172 368C                               l229 339A  
                             l157 3712                               l254 29C4  
                             l166 37D8                               l511 37CE  
                             l263 315E                               l239 2D7C  
                             l440 377A                               l257 33EC  
                             l249 2B02                               l169 37C2  
                             l370 0E82                               l372 0E90  
                             l365 0E3E                               l534 3738  
                             l374 0EC4                               l366 0E40  
                             l528 37B6                               l376 0ED2  
                             l368 0E4E                               l387 10C0  
                             l804 2F86                               l831 2E82  
                             l799 2F40                               wreg 000FE8  
                    ___flmul@aexp 0039                      ___flmul@bexp 003A  
                    ___flmul@sign 0034                      ___flmul@temp 003F  
                    ___flmul@prod 003B                      ___fltol@exp1 005A  
                            l1032 32E6                              l1025 32DE  
                            l1121 21E2                              l1130 22CA  
                            l1203 26DE                              l1116 23BE  
                            l1062 1564                              l1118 221E  
                            l1071 1834                              l1063 1552  
                            l1127 2264                              l1064 1518  
                            l1152 1C5E                              l3001 30A0  
                            l1129 22DC                              l3011 30E4  
                            l3003 30B0                              l1155 1AF0  
                            l1148 18FA                              l3013 30F0  
                            l3005 30C0                              l3021 2F9C  
                            l3101 2A84                              l1165 1C20  
                            l1157 1B68                              l1158 1B56  
                            l3015 311C                              l3007 30CC  
                            l3031 2FEC                              l3023 2FB4  
                            l3111 2ABE                              l3103 2A90  
                            l1079 167E                              l1088 174E  
                            l1192 2746                              l3121 33C8  
                            l3017 3132                              l3009 30D8  
                            l3033 2FF8                              l3025 2FC4  
                            l3041 2C42                              l3113 2AD6  
                            l3105 2A9C                              l1089 173C  
                            l3201 14AE                              l4001 0E2A  
                            l3123 33D4                              l3035 3004  
                            l3027 2FD4                              l3019 2F88  
                            l3051 2CC4                              l3043 2C56  
                            l3115 2AEA                              l3107 2AA4  
                            l3211 1500                              l3203 14B2  
                            l3131 1390                              l4011 0E5C  
                            l4003 0E2C                              l1196 2682  
                            l3125 33E0                              l3117 339C  
                            l3037 3030                              l3029 2FE0  
                            l3061 2CEC                              l3053 2CD4  
                            l3045 2C6E                              l3109 2AA8  
                            l3301 1778                              l3221 1544  
                            l3213 1510                              l3205 14B6  
                            l3141 13C4                              l3133 1392  
                            l1189 25EA                              l4101 11E2  
                            l4021 0EA0                              l4013 0E5E  
                            l4005 0E2E                              l3119 33BC  
                            l3039 3046                              l3071 2D24  
                            l3063 2D00                              l3055 2CE4  
                            l3047 2C9A                              l3311 17F4  
                            l3303 17B2                              l3223 1546  
                            l3215 1526                              l3207 14BA  
                            l3151 13F6                              l3135 13A2  
                            l3143 13CC                              l3127 1376  
                            l4111 124E                              l4103 11F8  
                            l4023 0EAC                              l4015 0E6A  
                            l4031 0EEC                              l4007 0E30  
                            l3073 2D3A                              l3065 2D0C  
                            l3049 2CAE                              l3081 29DA  
                            l3321 1814                              l3313 17F8  
                            l3305 17B4                              l3241 15CE  
                            l3233 1596                              l3225 1550  
                            l3217 1532                              l3209 14E4  
                            l3161 142C                              l3153 13FC  
                            l3145 13DC                              l3137 13B2  
                            l3129 1382                              l3401 21D2  
                            l4121 12BE                              l4113 1266  
                            l4105 120C                              l4041 0F64  
                            l4033 0F00                              l4025 0EC2  
                            l4017 0E80                              l4009 0E32  
                            l3075 2D50                              l3067 2D18  
                            l3091 2A58                              l3083 29F2  
                            l3323 1822                              l3315 1806  
                            l3307 17C4                              l3243 15D2  
                            l3235 15A6                              l3227 1572  
                            l3251 15F2                              l3219 1536  
                            l3171 1468                              l3163 143C  
                            l3155 140A                              l3147 13E2  
                            l3139 13C2                              l3411 221C  
                            l3403 21E0                              l3331 2032  
                            l4131 1344                              l4123 12EA  
                            l4115 127C                              l4107 1224  
                            l4051 0FCC                              l4043 0F78  
                            l4035 0F30                              l4027 0EE0  
                            l4019 0E9E                              l3077 2D64  
                            l3069 2D20                              l3093 2A68  
                            l3085 2A1E                              l3325 1824  
                            l3317 180C                              l3309 17D4  
                            l3253 1618                              l3261 166E  
                            l3245 15E0                              l3237 15B4  
                            l3229 1582                              l3181 1486  
                            l3173 1476                              l3165 143E  
                            l3157 140C                              l3149 13F4  
                            l3421 2262                              l3413 222E  
                            l3405 21EC                              l3341 2072  
                            l3333 2040                              l3501 190A  
                            l4133 135A                              l4125 1302  
                            l4117 1290                              l4109 123A  
                            l4061 1022                              l4053 0FE0  
                            l4045 0F8C                              l4037 0F3C  
                            l4029 0EE2                              l2711 327C  
                            l2703 3714                              l3087 2A32  
                            l3079 29C6                              l3319 180E  
                            l3271 16C2                              l3263 1694  
                            l3255 164C                              l3247 15E2  
                            l3239 15C2                              l3191 149A  
                            l3183 148A                              l3175 147A  
                            l3159 141C                              l3167 1446  
                            l3431 22C2                              l3415 2244  
                            l3423 2274                              l3407 220A  
                            l3351 2098                              l3343 2074  
                            l3335 2042                              l3511 1944  
                            l3503 191A                              l4127 1318  
                            l4119 12A8                              l4071 108A  
                            l4063 103A                              l4055 0FEE  
                            l4047 0FA2                              l4039 0F50  
                            l2721 32B2                              l2713 328E  
                            l2705 3730                              l3089 2A48  
                            l2801 3662                              l3281 16EC  
                            l3273 16D0                              l3265 16A4  
                            l3257 164E                              l3249 15EC  
                            l3193 149E                              l3185 148E  
                            l3177 147E                              l3169 1456  
                            l3441 2330                              l3425 2282  
                            l3417 224A                              l3409 220C  
                            l3361 20D8                              l3353 20A6  
                            l3337 2052                              l3345 207C  
                            l3329 2026                              l3521 1996  
                            l3513 195A                              l4129 132C  
                            l4081 1106                              l4073 109E  
                            l4065 1042                              l4057 0FF2  
                            l4049 0FB6                              l2723 32C8  
                            l2715 3296                              l2731 23C0  
                            l2811 275C                              l3099 2A70  
                            l2803 3688                              l3291 171E  
                            l3283 16FC                              l3275 16D2  
                            l3259 165E                              l3195 14A2  
                            l3187 1492                              l3179 1482  
                            l3451 239A                              l3435 22EC  
                            l3443 2334                              l3427 2286  
                            l3419 2254                              l3371 2118  
                            l3363 20DA                              l3355 20A8  
                            l3347 208C                              l3339 2062  
                            l3531 19DC                              l3523 19A4  
                            l3515 1966                              l3507 192E  
                            l3611 2DE8                              l3603 2DA8  
                            l4091 1174                              l4083 111E  
                            l4075 10B0                              l4067 1058  
                            l4059 100A                              l2725 32D0  
                            l2717 329E                              l2709 3274  
                            l2741 24C0                              l2733 23DC  
                            l2821 27DA                              l2813 2774  
                            l2805 368A                              l3701 35C4  
                            l3293 1734                              l3277 16E0  
                            l3269 16B8                              l3285 16FE  
                            l3197 14A6                              l3189 1496  
                            l3453 239E                              l3445 234E  
                            l3437 22F8                              l3429 2294  
                            l3381 2148                              l3373 2120  
                            l3357 20B8                              l3365 20E2  
                            l3349 2092                              l3541 1A4A  
                            l3533 19F6                              l3525 19B0  
                            l3517 197E                              l3509 193A  
                            l3621 2E18                              l3613 2DF6  
                            l3605 2DD2                              l2901 2F7E  
                            l4093 1188                              l4085 1132  
                            l4069 107C                              l4077 10E0  
                            l2727 32D2                              l2719 32AC  
                            l2743 252A                              l2735 243E  
                            l2751 3186                              l2831 2806  
                            l2823 27EA                              l2815 27A0  
                            l2911 36D2                              l3279 16E8  
                            l3287 170C                              l3199 14AA  
                            l3455 23AC                              l3447 2364  
                            l3439 2306                              l3391 2186  
                            l3383 2148                              l3375 2124  
                            l3367 20F2                              l3359 20C8  
                            l3551 1AE0                              l3543 1A74  
                            l3535 1A06                              l3527 19C0  
                            l3519 198A                              l3471 1850  
                            l3631 2E42                              l3623 2E22  
                            l3607 2DD4                              l2903 2F84  
                            l3711 026C                              l3703 002C  
                            l4095 11A0                              l4087 1146  
                            l4079 10F2                              l2729 32D8  
                            l2737 2484                              l2753 319E  
                            l2761 31C8                              l2745 3160  
                            l2841 2840                              l2833 2812  
                            l2817 27B4                              l2809 2748  
                            l2913 36D4                              l3297 175E  
                            l3289 1710                              l3457 23B2  
                            l3449 237E                              l3393 2196  
                            l3369 2108                              l3561 1B20  
                            l3553 1AEE                              l3545 1AAA  
                            l3537 1A22                              l3529 19CC  
                            l3481 1888                              l3473 1852  
                            l3633 2E52                              l3609 2DE4  
                            l3641 2596                              l3801 0C30  
                            l3721 054C                              l3713 0358  
                            l3705 0036                              l2921 33EE  
                            l4097 11B6                              l4089 115E  
                            l2739 24A4                              l2771 336A  
                            l2763 31E0                              l2755 31A8  
                            l2747 3164                              l2843 285A  
                            l2835 281E                              l2819 27CA  
                            l2851 2B30                              l2915 36D6  
                            l2907 36C2                              l3299 176A  
                            l3459 23B4                              l3395 21A6  
                            l3387 215C                              l3379 2138  
                            l3571 1B92                              l3563 1B4E  
                            l3555 1B00                              l3547 1AB8  
                            l3539 1A2E                              l3491 18B4  
                            l3483 1898                              l3475 1862  
                            l3467 1836                              l3635 2E62  
                            l3619 2E0E                              l3643 25A6  
                            l3803 0C76                              l3811 0D22  
                            l3731 0598                              l3723 055C  
                            l3715 0444                              l3707 00FE  
                            l2923 3434                              l4099 11CA  
                            l2773 3376                              l2757 31B4  
                            l2749 317C                              l2845 286E  
                            l2837 2826                              l2829 27F2  
                            l2861 2BA6                              l2853 2B5C  
                            l2765 36EC                              l2781 37DE  
                            l2941 3524                              l2933 348E  
                            l2917 36D8                              l2909 36CC  
                            l3397 21AE                              l3389 2176  
                            l3581 1C08                              l3573 1BBC  
                            l3557 1B0E                              l3549 1AD6  
                            l3493 18C4                              l3485 189E  
                            l3477 1872                              l3469 1842  
                            l3637 2E72                              l3629 2E36  
                            l3661 266C                              l3653 2624  
                            l3645 25B4                              l3813 0D3A  
                            l3805 0CBC                              l3741 0692  
                            l3733 05A8                              l3725 056C  
                            l3717 049C                              l3709 0188  
                            l3901 3766                              l2775 3382  
                            l2759 31C0                              l2839 282A  
                            l2871 2BCE                              l2855 2B70  
                            l2847 2B04                              l3831 1CEC  
                            l3823 1C60                              l2767 36FC  
                            l2791 37E4                              l2783 37BA  
                            l2935 34D4                              l2927 343E  
                            l2919 377E                              l3399 21BE  
                            l3583 1C24                              l3591 1C4A  
                            l3567 1B78                              l3575 1BC0  
                            l3559 1B12                              l3495 18D4  
                            l3487 18A4                              l3479 1882  
                            l3671 26EC                              l3663 2678  
                            l3655 262C                              l3647 25FA  
                            l3815 0D50                              l3807 0D02  
                            l3751 0784                              l3735 05EE  
                            l3743 069A                              l3727 057A  
                            l3719 04F4                              l3911 3778  
                            l3903 3768                              l3921 37C4  
                            l3913 379C                              l2777 338E  
                            l2769 334A                              l2881 2C14  
                            l2873 2BDA                              l2857 2B86  
                            l2849 2B18                              l2961 289C  
                            l3841 1DB6                              l3833 1D04  
                            l3825 1C88                              l2793 37E8  
                            l2785 37BE                              l2929 3484  
                            l3593 1C4E                              l3585 1C34  
                            l3577 1BDA                              l3569 1B84  
                            l3497 18E4                              l3489 18B2  
                            l3681 2734                              l3673 26EE  
                            l3665 26B4                              l3657 2638  
                            l3649 2610                              l2945 31FA  
                            l3817 0D66                              l3809 0D1A  
                            l3761 0868                              l3745 06E0  
                            l3753 078C                              l3737 0634  
                            l3729 058A                              l3905 376A  
                            l3915 37A4                              l2883 2C28  
                            l2875 2BE2                              l2867 2BAE  
                            l2859 2B96                              l2971 291A  
                            l2963 28B4                              l3851 1EAC  
                            l3843 1DF8                              l3835 1D44  
                            l3827 1CA0                              l2795 364E  
                            l2779 37DA                              l2787 37D0  
                            l2939 34DE                              l3691 369C  
                            l3587 1C42                              l3579 1BEE  
                            l3499 18EA                              l3683 2736  
                            l3675 26F2                              l3667 26C0  
                            l3659 266A                              l2891 2EF0  
                            l2947 322C                              l2955 326A  
                            l3819 0D6E                              l3763 08AE  
                            l3771 095A                              l3755 07D2  
                            l3747 0726                              l3739 067A  
                            l3907 3774                              l3917 37AA  
                            l2877 2BE6                              l2869 2BC2  
                            l2981 2946                              l2973 292A  
                            l2965 28E0                              l3853 1EC4  
                            l3845 1E10                              l3837 1D5C  
                            l3861 1F78                              l3829 1CAC  
                            l2797 3652                              l2789 37D4  
                            l3693 36AC                              l3589 1C44  
                            l3597 2D7E                              l3677 2716  
                            l3669 26CE                              l2893 2F00  
                            l2885 2E84                              l2949 325E  
                            l3773 09A0                              l3781 0A4C  
                            l3765 08F4                              l3757 0818  
                            l3749 076C                              l3909 3776  
                            l3941 0D8C                              l3919 37B4  
                            l2879 2BFC                              l2991 2980  
                            l2983 2952                              l2967 28F4  
                            l2959 2888                              l3863 1F80  
                            l3855 1F06                              l3847 1E52  
                            l3839 1D9E                              l3871 1FFA  
                            l2799 365A                              l3695 36B6  
                            l3687 368E                              l3599 2D94  
                            l3679 2726                              l2895 2F0E  
                            l2887 2EB2                              l3783 0A92  
                            l3791 0B3E                              l3775 09E6  
                            l3767 093A                              l3759 085E  
                            l3951 0DB0                              l3943 0D90  
                            l3935 0D78                              l2993 2998  
                            l2985 295E                              l2969 290A  
                            l3873 2010                              l3865 1FA6  
                            l3857 1F1E                              l3849 1E6A  
                            l3689 3692                              l2897 2F20  
                            l2889 2EC2                              l3793 0B84  
                            l3785 0AD8                              l3777 0A2C  
                            l3769 0952                              l3697 32E8  
                            l3881 3552                              l3961 0DBE  
                            l3953 0DB2                              l3945 0DA6  
                            l3937 0D84                              l2995 29AC  
                            l2987 2966                              l2979 2932  
                            l3867 1FAA                              l3859 1F60  
                            l3699 357A                              l2899 2F2E  
                            l3795 0BCA                              l3787 0B1E  
                            l3779 0A44                              l3891 361A  
                            l3883 356C                              l3875 352E  
                            l3971 0DDE                              l3963 0DC6  
                            l3955 0DB4                              l3947 0DAA  
                            l3939 0D88                              l2997 3074  
                            l2989 296A                              l3869 1FF6  
                            l3797 0C10                              l3789 0B36  
                            l3893 3632                              l3885 3570  
                            l3877 3534                              l3981 0DFE  
                            l3973 0DE2                              l3965 0DCE  
                            l3957 0DB4                              l3949 0DAC  
                            l2999 3088                              l3799 0C28  
                            l3895 3646                              l3887 3574  
                            l3879 3538                              l3991 0E20  
                            l3983 0E06                              l3975 0DEA  
                            l3967 0DD2                              l3959 0DBA  
                            l3897 3648                              l3889 360A  
                            l3993 0E22                              l3985 0E0E  
                            l3977 0DF2                              l3969 0DDA  
                            l3899 375C                              l3995 0E24  
                            l3987 0E16                              l3979 0DF6  
                            l3997 0E26                              l3989 0E1E  
                            l3999 0E28                              u2110 328E  
                            u2111 328A                              u2120 32AC  
                            u2200 31E0                              u3000 1850  
                            u2121 32A8                              u2201 31DC  
                            u3001 184C                              u2130 32C8  
                            u2210 31F8                              u3010 1862  
                            u2131 32C4                              u2211 31F4  
                            u3011 185E                              u2140 23DC  
                            u2220 36FC                              u3100 1B0E  
                            u3020 1872                              u2300 2F0E  
                            u2141 23D8                              u2221 36F8  
                            u3101 1B0A                              u3021 186E  
                            u2301 2F0A                              u2150 24C0  
                            u2230 3712                              u3110 1B20  
                            u3030 18B2                              u2310 2F2E  
                            u2151 24BC                              u2231 370E  
                            u3111 1B1C                              u3031 18AE  
                            u2311 2F2A                              u2240 3676  
                            u2400 13B2                              u3120 1B4E  
                            u3040 18C4                              u3200 2DC8  
                            u2320 2F7E                              u4000 1058  
                    _BAUD4CONbits 000EE9                              u2241 366E  
                            u2401 13AE                              u3121 1B4A  
                            u3041 18C0                              u2321 2F7A  
                            u4001 1054                              _LATE 000F7D  
                            u2410 13F4                              u3130 1B64  
                            u3050 18D4                              u3210 2DF6  
                            u2330 322C                              u4010 109E  
                            u2411 13F0                              u3131 1B60  
                            u3051 18D0                              u3211 2DF2  
                            u2331 3228                              u4011 109A  
                            _LATG 000F7F                              u2164 251A  
                            u2180 317C                              u2260 2840  
                            u2500 1526                              u2420 140A  
                            u3140 1B78                              u3060 190A  
                            u3220 2E0A                              u3300 26B0  
                            u2340 325E                              u4100 12BE  
                            u4020 10B0                              u2165 2516  
                            u2181 3178                              u2261 283C  
                            u2501 1522                              u2421 1406  
                            u3141 1B74                              u3061 1906  
                            u3221 2E06                              u3205 2DBE  
                            u3301 26AC                              u2341 325A  
                            u4101 12BA                              u4021 10AC  
                            u2174 2584                              u2190 319E  
                            u2270 2BFC                              u2350 2980  
                            u2510 1544                              u2430 141C  
                            u3150 1B92                              u3070 191A  
                            u3230 2E32                              u3310 26CE  
                            u4110 1318                              u4030 10F2  
                            u2175 2580                              u2191 319A  
                            u2271 2BF8                              u2351 297C  
                            u2511 1540                              u2431 1418  
                            u3151 1B8E                              u3071 1916  
                            u3231 2E2E                              u3311 26CA  
                            u4111 1314                              u4031 10EE  
                            u2360 2D3A                              u2600 1694  
                            u2520 1564                              u2440 142C  
                            u3160 1BDA                              u3080 1A94  
                            u3240 2E52                              u3320 26DE  
                            u2280 2EB2                              u3400 0634  
                            u4120 135A                              u4040 1132  
                            u2361 2D36                              u2601 1690  
                            u2521 1560                              u2441 1428  
                            u3161 1BD6                              u3241 2E4E  
                            u3321 26DA                              u2281 2EAE  
                            u3401 0630                              u4121 1356  
                            u4041 112E                              u2370 2ABE  
                            u2258 3678                              u2610 16A4  
                            u2530 1572                              u2450 1468  
                            u3170 1C08                              u3090 1AEE  
                            u3250 2E62                              u3330 26EC  
                            u2290 2EF0                              u3410 067A  
                            u4050 1174                              _T2PR 000FBC  
                            u2371 2ABA                              u2611 16A0  
                            u2531 156E                              u2451 1464  
                            u3171 1C04                              u3091 1AEA  
                            u3251 2E5E                              u3331 26E8  
                            u2291 2EEC                              u3411 0676  
                            u4051 1170                              u2700 1778  
                            u2620 16D0                              u2540 1582  
                            u2460 1476                              u2380 1390  
                            u3180 1C42                              u3340 2726  
                            u3260 25A6                              u3500 08AE  
                            u3420 0692                              u4060 11B6  
                            u2701 1774                              u2621 16CC  
                            u2541 157E                              u2461 1472  
                            u2381 138C                              u3181 1C3E  
                            u3085 1A8A                              u3341 2722  
                            u3261 25A2                              u3501 08AA  
                            u3421 068E                              u4061 11B2  
                            u2710 17B2                              u2630 16E0  
                            u2550 15B4                              u2470 14E4  
                            u2390 13A2                              u3190 2D94  
                            u3350 2734                              u3270 25B4  
                            u3510 08F4                              u3430 06E0  
                            u4070 11F8                              u2711 17AE  
                            u2631 16DC                              u2551 15B0  
                            u2471 14E0                              u2391 139E  
                            u3191 2D90                              u3351 2730  
                            u3271 25B0                              u3511 08F0  
                            u3431 06DC                              u4071 11F4  
                            u4207 0EB6                              u2720 17C4  
                            u2640 16FC                              u2560 15C2  
                            u2480 14FC                              u2800 20A6  
                            u3280 2610                              u3600 0B1E  
                            u3520 093A                              u3440 0726  
                            u3360 055C                              u4080 123A  
                            u2721 17C0                              u2641 16F8  
                            u2561 15BE                              u2481 14F6  
                            u2801 20A2                              u3281 260C  
                            u3601 0B1A                              u3521 0936  
                            u3441 0722                              u3361 0558  
                            u4081 1236                              u4217 1110  
                            u2730 17D4                              u2650 170C  
                            u2570 15E0                              u2490 14FE  
                            u2810 20B8                              u3290 2666  
                            u3610 0B36                              u3530 0952  
                            u3450 076C                              u3370 057A  
                            u4090 127C                              u4307 36A2  
                            u2731 17D0                              u2651 1708  
                            u2571 15DC                              u2811 20B4  
                            u3291 2662                              u3611 0B32  
                            u3531 094E                              u3451 0768  
                            u3371 0576                              u4091 1278  
                            u4227 1150                              u2740 17F4  
                            u2660 171E                              u2580 1618  
                            u2900 2262                              u2820 20C8  
                            u3700 0D3A                              u3620 0B84  
                            u3540 09A0                              u3460 0784  
                            u3380 0598                              u4317 1C92  
                            u2741 17F0                              u2661 171A  
                            u2581 1614                              u2901 225E  
                            u2821 20C4                              u3701 0D36  
                            u3621 0B80                              u3541 099C  
                            u3461 0780                              u3381 0594  
                            u4237 1192                              u2750 1806  
                            u2670 1734                              u2590 165E  
                            u2910 2282                              u2830 2108  
                            u3710 0D50                              u3630 0BCA  
                            u3550 09E6                              u3470 07D2  
                            u3390 05EE                              u4407 2A3C  
                            u4327 28A6                              u2751 1802  
                            u2671 1730                              u2591 165A  
                            u2911 227E                              u2831 2104  
                            u3711 0D4C                              u3631 0BC6  
                            u3551 09E2                              u3471 07CE  
                            u3391 05EA                              u4247 11D4  
                            u3800 1F60                              u2760 1822  
                            u2680 174A                              u2920 2294  
                            u2840 2148                              u3720 0D66  
                            u3640 0C10                              u3560 0A2C  
                            u3480 0818                              u4417 2A9E  
                            u4337 28D2                              u3801 1F5C  
                            u2761 181E                              u2681 1746  
                            u2921 2290                              u2841 2144  
                            u3721 0D62                              u3641 0C0C  
                            u3561 0A28                              u3481 0814  
                            u4257 1216                              u3810 1FF6  
                            u3730 1CEC                              u2690 175E  
                            u2930 22C2                              u2850 21BE  
                            u2770 2040                              u3650 0C28  
                            u3570 0A44                              u3490 085E  
                            u4507 2FA6                              u4427 2AC8  
                            u4347 28FE                              u3811 1FF2  
                            u3731 1CE8                              u2691 175A  
                            u2931 22BE                              u2851 21BA  
                            u2771 203C                              u3651 0C24  
                            u3571 0A40                              u3491 085A  
                            u4267 1258                              u4187 0D9A  
                            u3820 2010                              u3740 1D44  
                            u2940 22D8                              u2860 21E0  
                            u2780 2052                              u3660 0C76  
                            u3580 0A92                              u3900 0ED2  
                            u4517 300E                              u4437 2AF4  
                            u4357 2960                              u3821 200C  
                            u3741 1D40                              u2941 22D4  
                            u2861 21DC                              u2781 204E  
                            u3661 0C72                              u3581 0A8E  
                            u4277 129A                              u3901 0ECE  
                            u4197 0E74                              u3750 1D9E  
                            u2950 22EC                              u2870 220A  
                            u2790 2062                              u3670 0CBC  
                            u3590 0AD8                              u3910 0EE0  
                            u4607 3092                              u4527 303A  
                            u4447 2C60                              u4367 298A  
                            u3751 1D9A                              u2951 22E8  
                            u2871 2206                              u2791 205E  
                            u3671 0CB8                              u3591 0AD4  
                            u4287 12F4                              u3911 0EDC  
                            u3760 1DF8                              u2960 2306  
                            u2880 222E                              u3680 0D02  
                            u3920 0F00                              u4617 30FA  
                            u4537 3064                              u4457 2C8C  
                            u4377 29B6                              u3761 1DF4  
                            u2961 2302                              u2881 222A  
                            u3681 0CFE                              u4297 1336  
                            u3921 0EFC                              u3770 1E52  
                            u2970 234E                              u2890 2244  
                            u3690 0D1A                              u3930 0F50  
                            u4707 31C2                              u4627 3126  
                            u4547 2B22                              u4467 2CB8  
                            u4387 29E4                              u3771 1E4E  
                            u2971 234A                              u2891 2240  
                            u3691 0D16                              u3931 0F4C  
                            u3780 1EAC                              u2980 237E  
                            u3940 0F78                              u3860 0E4E  
                            u4637 3150                              u4557 2B4E  
                            u4477 2D1A                              u4397 2A10  
                            u3781 1EA8                              u2981 237A  
                            u3941 0F74                              u3861 0E4A  
                            u3790 1F06                              u2990 23AC  
                            u3950 0FA2                              u3870 0E5C  
                            u4647 2766                              u4567 2B7A  
                            u4487 2D44                              u3791 1F02  
                            u2991 23A8                              u3951 0F9E  
                            u3871 0E58                              u3960 0FCC  
                            u3880 0E90                              u4657 2792  
                            u4577 2BDC                              u4497 2D6E  
                            u3961 0FC8                              u3881 0E8C  
                            u3970 100A                              u3890 0E9E  
                            u4667 27BE                              u4587 2C06  
                            u3971 1006                              u3891 0E9A  
                            u3980 1022                              u4677 2820  
                            u4597 2C32                              u3981 101E  
                            u3990 103A                              u4687 284A  
                            u3991 1036                              u4697 2878  
                            _main 0D78        __end_of_reverseTurnRight90 3074  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 005F                              _stop 3160  
                            prodh 000FF4                              prodl 000FF3  
                            start 0028                   ___fldiv@new_exp 0020  
          __end_of_color_read_Red 348E                   __end_of_HighISR 0028  
                    ___param_bank 000000                       _turnLeft135 2C42  
                     _turnRight90 2B04                     ___fltol@sign1 0059  
                 __end_of___fladd 1836                             ?_main 0001  
                 __end_of___fldiv 23C0                   __end_of___flmul 1C60  
                 __end_of___fltol 2E84                             ?_stop 0019  
        __size_of_initDCmotorsPWM 0042                   __end_of___lwdiv 32E8  
                           i2l517 0024                             _TMR0H 000FD4  
                           _TMR0L 000FD3      updateMovementCount@movements 0005  
      __end_of_I2C_2_Master_Start 37E4                             _White 1C60  
      __end_of_I2C_2_Master_Write 37C4                   __end_of_forward 33EE  
                           _isbtw 31FA             __size_of_turnRight135 013E  
           __size_of_turnRight180 013E                   __end_of_reverse 339C  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
                           wtemp8 0060           __end_of_color_read_Blue 352E  
           _I2C_2_Master_RepStart 37E4                   ?_color_read_Red 0005  
                 __initialization 373A                      __end_of_main 1376  
                    __end_of_stop 31FA                            ??_main 005D  
                          ??_stop 001D                     __activetblptr 000000  
     __end_of_updateMovementCount 357A                      _turnRight135 29C6  
                    _turnRight180 2888                            ?_White 002B  
                    ?_setMotorPWM 000E                            ?_isbtw 000D  
                          _RC0PPS 000E62                            _RC4REG 000EE3  
                          _RE2PPS 000E74                            _RD5PPS 000E6F  
                          _RC7PPS 000E69                            _RD6PPS 000E70  
                          i2l2691 000A                            i2l2693 001A  
                          i2l2695 0022                         ??_HighISR 0001  
        __end_of_color_click_init 36C2                            _RX4PPS 000E15  
                          _TX4REG 000EE4                  __end_of___xxtofl 2748  
                   ??_Timer0_init 0001                     ?_read_colours 000C  
                          White@i 003E                            ___flge 2E84  
     __end_of_determine_color_new 0D78                         ??___fladd 0049  
                          ___wmul 3714                         ??___fldiv 0017  
                       ??___flmul 0030                         ??___fltol 0055  
                       ??___lwdiv 000B                            clear_0 3740  
                          clear_1 374C                            isa$std 000001  
                       ??_forward 001D                         ??_reverse 001D  
                          stop@mL 0019                            stop@mR 001B  
               ??_initDCmotorsPWM 0003                        ___flge@ff1 0001  
                      ___flge@ff2 0005                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A                      ___xxtofl@val 0001  
                      __accesstop 0060           __end_of__initialization 3752  
        __end_of_color_read_Clear 343E          __end_of_color_read_Green 34DE  
          ?_I2C_2_Master_RepStart 0001                     ___rparam_used 000001  
                      ___fltol@f1 0051                  ?_color_read_Blue 0005  
                  ??_read_colours 000E                   _Interrupts_init 37C4  
                  __pcstackCOMRAM 0001                     __end_of_White 2026  
                   __end_of_isbtw 3274               __end_of_Timer0_init 37B8  
        _determine_color_new$2631 0068                           ??_White 0035  
                      _calibrateB 35C4                        _calibrateW 357A  
                         ??_isbtw 0019                        __pbssBANK0 00B8  
                      __pbssBANK1 0100                 _color_writetoaddr 377C  
                    _T2CLKCONbits 000FBF                      ?_turnLeft135 001D  
            reverseTurnRight90@mL 0025              reverseTurnRight90@mR 0027  
                         ?___flge 0001                ?_color_writetoaddr 0003  
                         ?___wmul 0001                _reverseTurnRight90 2F88  
                    ?_turnRight90 001D               ??_color_writetoaddr 0004  
                       ?___xxtofl 0001               ?_reverseTurnRight90 0025  
                         _SP4BRGH 000EE6                           _SP4BRGL 000EE5  
                         _PWM6DCH 000FA3                           _PWM7DCH 000FA0  
                         _SSP2ADD 000ED6                           _SSP2BUF 000ED5  
            __size_of_setMotorPWM 01D4           __end_of_Interrupts_init 37D0  
          color_writetoaddr@value 0003                  ??_color_read_Red 0007  
                         _HighISR 0008         __end_of_color_writetoaddr 379C  
              _I2C_2_Master_Start 37DA                        _initUSART4 375C  
            ??_reverseTurnRight90 0029                _I2C_2_Master_Write 37B8  
                         __Hparam 0000                           __Lparam 0000  
               color_read_Red@tmp 000A                       _Timer0_init 379C  
                         White@mL 002B                           White@mR 002D  
                 __size_of___flge 0104                           ___fladd 1376  
                         ___fldiv 2026                           ___flmul 1836  
                         ___fltol 2D7E                   __size_of___wmul 0026  
             ?_I2C_2_Master_Start 0001                      turnLeft135@i 0023  
                         ___lwdiv 3274               ?_I2C_2_Master_Write 0001  
                    turnLeft90@mL 001D                      turnLeft90@mR 001F  
                         __pcinit 373A                           __ramtop 0E00  
                         __ptext0 0D78                           __ptext1 352E  
                         __ptext2 32E8                           __ptext3 33EE  
                         __ptext4 375C                           __ptext5 360A  
                         __ptext6 002C                           __ptext7 31FA  
                         __ptext8 2E84                           __ptext9 2594  
                       _T2CONbits 000FBD                           _forward 339C  
                      ??___xxtofl 0005                         _T2HLTbits 000FBE  
            __end_of_read_colours 334A                           _reverse 334A  
                   _RxBufWriteCnt 00D1                       ?_calibrateB 000C  
                     ?_calibrateW 000C                           main@cal 0082  
            ??_I2C_2_Master_Start 0002              ??_I2C_2_Master_Write 0002  
updateMovementCount@movementArray 0003              end_of_initialization 3752  
              setMotorPWM@PWMduty 0017                 ?_color_click_init 0001  
                    turnRight90@i 0023                ??_color_click_init 0005  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                        _timerArray 00D2  
                 _initDCmotorsPWM 360A                         _PORTFbits 000F8E  
                     ___fladd@grs 0050                     ___xxtofl@sign 0009  
                       _TRISAbits 000F81                         _TRISCbits 000F83  
                       _TRISDbits 000F84                         _TRISEbits 000F85  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88                       ___fldiv@grs 0022  
                     ___fldiv@rem 001B          color_writetoaddr@address 0004  
         ??_I2C_2_Master_RepStart 0002      __size_of_updateMovementCount 004C  
     determine_color_new@RedRatio 006C                        main@check1 0088  
                      main@check2 008A                        main@check3 008C  
                      main@check4 0084                  ?_Interrupts_init 0001  
                     ___flmul@grs 0035                 ?_color_read_Clear 0005  
      __size_of_color_writetoaddr 0020                      _EUSART4RXbuf 00B8  
                    _EUSART4TXbuf 0100                 ?_color_read_Green 0005  
                     ?_initUSART4 0001                        main@motorL 00A6  
                      main@motorR 00AF                ??_color_read_Clear 0007  
              ??_color_read_Green 0007                        _turnLeft90 2748  
             __size_of_calibrateB 0046               __size_of_calibrateW 004A  
                  __end_of___flge 2F88              __size_of_turnLeft135 013C  
                  __end_of___wmul 373A              __size_of_turnRight90 013E  
    __size_of_determine_color_new 0D4C               color_read_Clear@tmp 000A  
             start_initialization 373A                     _TxBufWriteCnt 00CF  
             color_read_Green@tmp 000A           __end_of_initDCmotorsPWM 364C  
                        ??___flge 0009                          ??___wmul 0005  
        __size_of_color_read_Blue 0050             __size_of_read_colours 0062  
                       ___fladd@a 0045                         ___fladd@b 0041  
             reverseTurnLeft90@mL 0025               reverseTurnLeft90@mR 0027  
                       ___fldiv@a 0013                         ___fldiv@b 000F  
   determine_color_new@GreenRatio 006E                         ___flmul@a 002C  
                       ___flmul@b 0028               __size_of_initUSART4 0020  
                   __pcstackBANK0 0060                 __size_of___xxtofl 01B4  
                        ?_HighISR 0001                  ___lwdiv@dividend 0007  
                    ?_Timer0_init 0001                 _reverseTurnLeft90 3074  
                     ?_turnLeft90 001D                      _read_colours 32E8  
                       __pintcode 0008                          ?___fladd 0041  
                        ?___fldiv 000F                          ?___flmul 0028  
                        ?___fltol 0051                ?_reverseTurnLeft90 0025  
                        ?___lwdiv 0007              I2C_2_Master_Read@ack 0003  
            I2C_2_Master_Read@tmp 0004                     ?_turnRight135 001D  
                   ?_turnRight180 001D               ??_reverseTurnLeft90 0029  
                        ?_forward 0019                 _I2C_2_Master_Idle 36EC  
               _I2C_2_Master_Init 36C2                 _I2C_2_Master_Read 364C  
               _I2C_2_Master_Stop 37D0                      _RxBufReadCnt 00D0  
                        ?_reverse 0019                ?_I2C_2_Master_Idle 0001  
                  __size_of_White 03C6                ?_I2C_2_Master_Init 0001  
              ?_I2C_2_Master_Read 0001                     ??_setMotorPWM 0010  
                    ??_calibrateB 000E                      ??_calibrateW 000E  
              ?_I2C_2_Master_Stop 0001                  ___lwdiv@quotient 000B  
                     turnLeft90@i 0023          initDCmotorsPWM@PWMperiod 0001  
                  __size_of_isbtw 007A               ??_I2C_2_Master_Idle 0001  
             ??_I2C_2_Master_Init 0001               ??_I2C_2_Master_Read 0002  
                  ___wmul@product 0005                          _LATAbits 000F79  
             ??_I2C_2_Master_Stop 0002                          _LATCbits 000F7B  
                        _LATDbits 000F7C                          _LATEbits 000F7D  
                        _LATFbits 000F7E                          _LATGbits 000F7F  
                        _LATHbits 000F80                          _PIE0bits 000E29  
                        _PIE2bits 000E2B                          _PIE4bits 000E2D  
       __end_of_reverseTurnLeft90 3160       __size_of_reverseTurnRight90 00EC  
                        i2u210_40 001A                          i2u210_41 0016  
                        _PIR0bits 000E33                          _PIR4bits 000E37  
            determine_color_new@m 005B                         _movements 00CC  
                ?_initDCmotorsPWM 0001                          _SSP2CON2 000EDA  
                 White@timerArray 0033                          _SSP2STAT 000ED8  
             _updateMovementCount 352E                __end_of_calibrateB 360A  
              __end_of_calibrateW 35C4         __size_of_color_click_init 0034  
       __end_of_I2C_2_Master_Idle 3714         __end_of_I2C_2_Master_Init 36EC  
       __end_of_I2C_2_Master_Read 368E                 ___wmul@multiplier 0001  
                  ??_turnRight135 0021                    ??_turnRight180 0021  
                   _movementArray 00D2         __end_of_I2C_2_Master_Stop 37DA  
        determine_color_new@lumin 0074                      setMotorPWM@m 000E  
     I2C_2_Master_Write@data_byte 0002                         main@count 008E  
               ??_color_read_Blue 0007                      _TxBufReadCnt 00CE  
             __size_of_turnLeft90 0140       __size_of_I2C_2_Master_Start 000A  
            ?_updateMovementCount 0001       __size_of_I2C_2_Master_Write 000C  
  __size_of_I2C_2_Master_RepStart 000A     __end_of_I2C_2_Master_RepStart 37EE  
              color_read_Blue@tmp 000A                       calibrateB@m 000C  
                     calibrateW@m 000C               __end_of_setMotorPWM 2594  
                __size_of_HighISR 0020               _determine_color_new 002C  
                    ??_initUSART4 0001                          __Hrparam 0000  
   updateMovementCount@timerArray 0007                          __Lrparam 0000  
                       forward@mL 0019                         forward@mR 001B  
         __size_of_color_read_Red 0050                  __size_of___fladd 04C0  
                __size_of___fldiv 039A                  __size_of___flmul 042A  
                __size_of___fltol 0106                         isbtw@high 0015  
                __size_of___lwdiv 0074                    turnRight135@mL 001D  
                  turnRight135@mR 001F                    turnRight180@mL 001D  
                  turnRight180@mR 001F         __size_of_color_read_Clear 0050  
                   turnLeft135@mL 001D                     turnLeft135@mR 001F  
       __size_of_color_read_Green 0050                        _ANSELDbits 000EA7  
                      _ANSELFbits 000EB4              ?_determine_color_new 005B  
                        ___xxtofl 2594                        _T0CON0bits 000FD5  
                      _T0CON1bits 000FD6                  __size_of_forward 0052  
                 ___lwdiv@divisor 0009                __end_of_initUSART4 377C  
                 ___lwdiv@counter 000D                          __ptext10 2D7E  
                        __ptext11 1836                          __ptext20 348E  
                        __ptext12 2026                          __ptext21 34DE  
                        __ptext13 1376                          __ptext30 29C6  
                        __ptext22 37B8                          __ptext14 368E  
                        __ptext31 2C42                          __ptext23 37D0  
                        __ptext15 377C                          __ptext40 3714  
                        __ptext32 2F88                          __ptext24 37DA  
                        __ptext16 36C2                          __ptext41 3274  
                        __ptext33 2B04                          __ptext25 37E4  
                        __ptext17 357A                          __ptext42 379C  
                        __ptext34 3074                          __ptext26 364C  
                        __ptext18 35C4                          __ptext43 37C4  
                        __ptext35 2748                          __ptext27 36EC  
                        __ptext19 343E                          __ptext36 3160  
                        __ptext28 1C60                          __ptext37 334A  
                        __ptext29 2888                          __ptext38 339C  
                        __ptext39 23C0                  __size_of_reverse 0052  
           ??_updateMovementCount 0009                      _SSP2CON1bits 000ED9  
                    _SSP2CON2bits 000EDA                White@movementArray 002F  
                   __size_of_main 05FE                     __size_of_stop 009A  
      __size_of_reverseTurnLeft90 00EC                         reverse@mL 0019  
                       reverse@mR 001B                   main@reset_timer 0086  
                   ??_turnLeft135 0021                    White@movements 0031  
                        isa$xinst 000000          __size_of_Interrupts_init 000C  
                      _RC4STAbits 000EE7           determine_color_new@RelB 007E  
         determine_color_new@RelG 007A           determine_color_new@RelR 0076  
                        int$flags 005F              __size_of_Timer0_init 001C  
                   ??_turnRight90 0021                          main@test 0092  
      __size_of_I2C_2_Master_Idle 0028        __size_of_I2C_2_Master_Init 002A  
      __size_of_I2C_2_Master_Read 0042             ??_determine_color_new 0060  
      __size_of_I2C_2_Master_Stop 000A                        _INTCONbits 000FF2  
                     _setMotorPWM 23C0                          isbtw@low 0011  
                        isbtw@num 000D                       _PWM6CONbits 000FA4  
                   turnRight135@i 0023                     turnRight180@i 0023  
                     _PWM7CONbits 000FA1                          intlevel2 0000  
                   turnRight90@mL 001D                     turnRight90@mR 001F  
               White@tempTimerVal 003C   updateMovementCount@tempTimerVal 0009  
            __end_of_turnRight135 2B04              __end_of_turnRight180 29C6  
 updateMovementCount@movementCode 0001               main@detected_colour 0090  
                    ??_turnLeft90 0021            determine_color_new@out 0072  
                   read_colours@m 000C                  _color_click_init 368E  
             __end_of_turnLeft135 2D7E                        _SSP2DATPPS 000E1D  
                      _SSP2CLKPPS 000E1C               __end_of_turnRight90 2C42  
                   ___fladd@signs 004D                __end_of_turnLeft90 2888  
                      _TX4STAbits 000EE8                      ___fladd@aexp 004E  
                    ___fladd@bexp 004F      determine_color_new@BlueRatio 0070  
