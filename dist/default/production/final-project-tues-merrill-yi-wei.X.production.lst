

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 18:26:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 05/05/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     _PIE0bits	set	3625
    92  0000                     _PIE2bits	set	3627
    93  0000                     _PIE4bits	set	3629
    94  0000                     _TX4REG	set	3812
    95  0000                     _RC4REG	set	3811
    96  0000                     _PIR4bits	set	3639
    97  0000                     _RC4STAbits	set	3815
    98  0000                     _SP4BRGH	set	3814
    99  0000                     _SP4BRGL	set	3813
   100  0000                     _TX4STAbits	set	3816
   101  0000                     _BAUD4CONbits	set	3817
   102  0000                     _RX4PPS	set	3605
   103  0000                     _RC0PPS	set	3682
   104  0000                     _ANSELFbits	set	3764
   105  0000                     _RC7PPS	set	3689
   106  0000                     _RE2PPS	set	3700
   107  0000                     _SSP2BUF	set	3797
   108  0000                     _SSP2CON2bits	set	3802
   109  0000                     _SSP2CON2	set	3802
   110  0000                     _SSP2STAT	set	3800
   111  0000                     _RD6PPS	set	3696
   112  0000                     _RD5PPS	set	3695
   113  0000                     _SSP2CLKPPS	set	3612
   114  0000                     _SSP2DATPPS	set	3613
   115  0000                     _ANSELDbits	set	3751
   116  0000                     _SSP2ADD	set	3798
   117  0000                     _SSP2CON1bits	set	3801
   118  0000                     _T0CON0bits	set	4053
   119  0000                     _T0CON1bits	set	4054
   120  0000                     _INTCONbits	set	4082
   121  0000                     _PORTFbits	set	3982
   122  0000                     _LATHbits	set	3968
   123  0000                     _TRISHbits	set	3976
   124  0000                     _LATDbits	set	3964
   125  0000                     _LATFbits	set	3966
   126  0000                     _TRISAbits	set	3969
   127  0000                     _LATAbits	set	3961
   128  0000                     _TRISFbits	set	3974
   129  0000                     _PWM7CONbits	set	4001
   130  0000                     _PWM6CONbits	set	4004
   131  0000                     _T2PR	set	4028
   132  0000                     _T2CLKCONbits	set	4031
   133  0000                     _T2HLTbits	set	4030
   134  0000                     _T2CONbits	set	4029
   135  0000                     _LATGbits	set	3967
   136  0000                     _LATCbits	set	3963
   137  0000                     _LATEbits	set	3965
   138  0000                     _TRISGbits	set	3975
   139  0000                     _TRISCbits	set	3971
   140  0000                     _TRISEbits	set	3973
   141  0000                     _TRISDbits	set	3972
   142  0000                     _TMR0L	set	4051
   143  0000                     _TMR0H	set	4052
   144  0000                     _LATG	set	3967
   145  0000                     _LATE	set	3965
   146  0000                     _PWM7DCH	set	4000
   147  0000                     _PWM6DCH	set	4003
   148                           
   149                           ; #config settings
   150                           
   151                           	psect	cinit
   152  01D2AA                     __pcinit:
   153                           	callstack 0
   154  01D2AA                     start_initialization:
   155                           	callstack 0
   156  01D2AA                     __initialization:
   157                           	callstack 0
   158                           
   159                           ; Clear objects allocated to BANK1 (60 bytes)
   160  01D2AA  EE01  F000         	lfsr	0,__pbssBANK1
   161  01D2AE  0E3C               	movlw	60
   162  01D2B0                     clear_0:
   163  01D2B0  6AEE               	clrf	postinc0,c
   164  01D2B2  06E8               	decf	wreg,f,c
   165  01D2B4  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to BANK0 (25 bytes)
   168  01D2B6  EE00  F0B6         	lfsr	0,__pbssBANK0
   169  01D2BA  0E19               	movlw	25
   170  01D2BC                     clear_1:
   171  01D2BC  6AEE               	clrf	postinc0,c
   172  01D2BE  06E8               	decf	wreg,f,c
   173  01D2C0  E1FD               	bnz	clear_1
   174                           
   175                           ; Clear objects allocated to COMRAM (1 bytes)
   176  01D2C2  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   177  01D2C4                     end_of_initialization:
   178                           	callstack 0
   179  01D2C4                     __end_of__initialization:
   180                           	callstack 0
   181  01D2C4  0100               	movlb	0
   182  01D2C6  EFBD  F0F6         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  00005F                     __pbssCOMRAM:
   186                           	callstack 0
   187  00005F                     _TxBufWriteCnt:
   188                           	callstack 0
   189  00005F                     	ds	1
   190  000060                     _movementArray:
   191                           	callstack 0
   192  000060                     	ds	0
   193  000060                     _timerArray:
   194                           	callstack 0
   195  000060                     	ds	0
   196                           
   197                           	psect	bssBANK0
   198  0000B6                     __pbssBANK0:
   199                           	callstack 0
   200  0000B6                     _EUSART4RXbuf:
   201                           	callstack 0
   202  0000B6                     	ds	20
   203  0000CA                     _movements:
   204                           	callstack 0
   205  0000CA                     	ds	2
   206  0000CC                     _TxBufReadCnt:
   207                           	callstack 0
   208  0000CC                     	ds	1
   209  0000CD                     _RxBufReadCnt:
   210                           	callstack 0
   211  0000CD                     	ds	1
   212  0000CE                     _RxBufWriteCnt:
   213                           	callstack 0
   214  0000CE                     	ds	1
   215                           
   216                           	psect	bssBANK1
   217  000100                     __pbssBANK1:
   218                           	callstack 0
   219  000100                     _EUSART4TXbuf:
   220                           	callstack 0
   221  000100                     	ds	60
   222                           
   223                           	psect	cstackBANK0
   224  000060                     __pcstackBANK0:
   225                           	callstack 0
   226  000060                     ??_determine_color_new:
   227                           
   228                           ; 1 bytes @ 0x0
   229  000060                     	ds	8
   230  000068                     _determine_color_new$2615:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x8
   234  000068                     	ds	4
   235  00006C                     determine_color_new@RedRatio:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0xC
   239  00006C                     	ds	2
   240  00006E                     determine_color_new@GreenRatio:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xE
   244  00006E                     	ds	2
   245  000070                     determine_color_new@BlueRatio:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000070                     	ds	2
   250  000072                     determine_color_new@out:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x12
   254  000072                     	ds	2
   255  000074                     determine_color_new@lumin:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000074                     	ds	2
   260  000076                     determine_color_new@RelR:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x16
   264  000076                     	ds	4
   265  00007A                     determine_color_new@RelG:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x1A
   269  00007A                     	ds	4
   270  00007E                     determine_color_new@RelB:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x1E
   274  00007E                     	ds	4
   275  000082                     main@cal:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279  000082                     	ds	2
   280  000084                     main@check4:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284  000084                     	ds	2
   285  000086                     main@check1:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x26
   289  000086                     	ds	2
   290  000088                     main@check2:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x28
   294  000088                     	ds	2
   295  00008A                     main@check3:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2A
   299  00008A                     	ds	2
   300  00008C                     main@count:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x2C
   304  00008C                     	ds	2
   305  00008E                     main@detected_colour:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2E
   309  00008E                     	ds	2
   310  000090                     main@test:
   311                           	callstack 0
   312                           
   313                           ; 20 bytes @ 0x30
   314  000090                     	ds	20
   315  0000A4                     main@motorL:
   316                           	callstack 0
   317                           
   318                           ; 9 bytes @ 0x44
   319  0000A4                     	ds	9
   320  0000AD                     main@motorR:
   321                           	callstack 0
   322                           
   323                           ; 9 bytes @ 0x4D
   324  0000AD                     	ds	9
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	callstack 0
   329  000001                     ??_I2C_2_Master_Idle:
   330  000001                     ?___wmul:
   331                           	callstack 0
   332  000001                     ?___xxtofl:
   333                           	callstack 0
   334  000001                     initDCmotorsPWM@PWMperiod:
   335                           	callstack 0
   336  000001                     ___wmul@multiplier:
   337                           	callstack 0
   338  000001                     ___flge@ff1:
   339                           	callstack 0
   340  000001                     ___xxtofl@val:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x0
   344  000001                     	ds	1
   345  000002                     ??_I2C_2_Master_Read:
   346  000002                     I2C_2_Master_Write@data_byte:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1
   350  000002                     	ds	1
   351  000003                     color_writetoaddr@value:
   352                           	callstack 0
   353  000003                     I2C_2_Master_Read@ack:
   354                           	callstack 0
   355  000003                     ___wmul@multiplicand:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359  000003                     	ds	1
   360  000004                     color_writetoaddr@address:
   361                           	callstack 0
   362  000004                     I2C_2_Master_Read@tmp:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x3
   366  000004                     	ds	1
   367  000005                     ??_color_click_init:
   368  000005                     ??___xxtofl:
   369  000005                     ?_color_read_Clear:
   370                           	callstack 0
   371  000005                     ?_color_read_Red:
   372                           	callstack 0
   373  000005                     ?_color_read_Green:
   374                           	callstack 0
   375  000005                     ?_color_read_Blue:
   376                           	callstack 0
   377  000005                     ___wmul@product:
   378                           	callstack 0
   379  000005                     ___flge@ff2:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x4
   383  000005                     	ds	2
   384  000007                     ??_color_read_Clear:
   385  000007                     ??_color_read_Red:
   386  000007                     ??_color_read_Green:
   387  000007                     ??_color_read_Blue:
   388  000007                     ?___lwdiv:
   389                           	callstack 0
   390  000007                     ___lwdiv@dividend:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x6
   394  000007                     	ds	2
   395  000009                     ??___flge:
   396  000009                     ___xxtofl@sign:
   397                           	callstack 0
   398  000009                     ___lwdiv@divisor:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x8
   402  000009                     	ds	1
   403  00000A                     ___xxtofl@exp:
   404                           	callstack 0
   405  00000A                     color_read_Clear@tmp:
   406                           	callstack 0
   407  00000A                     color_read_Red@tmp:
   408                           	callstack 0
   409  00000A                     color_read_Green@tmp:
   410                           	callstack 0
   411  00000A                     color_read_Blue@tmp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x9
   415  00000A                     	ds	1
   416  00000B                     ___lwdiv@quotient:
   417                           	callstack 0
   418  00000B                     ___xxtofl@arg:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0xA
   422  00000B                     	ds	1
   423  00000C                     read_colours@m:
   424                           	callstack 0
   425  00000C                     calibrateW@m:
   426                           	callstack 0
   427  00000C                     calibrateB@m:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xB
   431  00000C                     	ds	1
   432  00000D                     ?_isbtw:
   433                           	callstack 0
   434  00000D                     ___lwdiv@counter:
   435                           	callstack 0
   436  00000D                     isbtw@num:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0xC
   440  00000D                     	ds	1
   441  00000E                     setMotorPWM@m:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xD
   445  00000E                     	ds	1
   446  00000F                     ?___fldiv:
   447                           	callstack 0
   448  00000F                     ___fldiv@b:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0xE
   452  00000F                     	ds	1
   453  000010                     ??_setMotorPWM:
   454                           
   455                           ; 1 bytes @ 0xF
   456  000010                     	ds	1
   457  000011                     isbtw@low:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x10
   461  000011                     	ds	2
   462  000013                     ___fldiv@a:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x12
   466  000013                     	ds	2
   467  000015                     isbtw@high:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x14
   471  000015                     	ds	2
   472  000017                     ??___fldiv:
   473  000017                     setMotorPWM@PWMduty:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x16
   477  000017                     	ds	2
   478  000019                     stop@mL:
   479                           	callstack 0
   480  000019                     forward@mL:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x18
   484  000019                     	ds	2
   485  00001B                     stop@mR:
   486                           	callstack 0
   487  00001B                     forward@mR:
   488                           	callstack 0
   489  00001B                     ___fldiv@rem:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0x1A
   493  00001B                     	ds	2
   494  00001D                     turnLeft90@mL:
   495                           	callstack 0
   496  00001D                     turnLeft135@mL:
   497                           	callstack 0
   498  00001D                     turnRight90@mL:
   499                           	callstack 0
   500  00001D                     turnRight135@mL:
   501                           	callstack 0
   502  00001D                     turnRight180@mL:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1C
   506  00001D                     	ds	2
   507  00001F                     ___fldiv@sign:
   508                           	callstack 0
   509  00001F                     turnLeft90@mR:
   510                           	callstack 0
   511  00001F                     turnLeft135@mR:
   512                           	callstack 0
   513  00001F                     turnRight90@mR:
   514                           	callstack 0
   515  00001F                     turnRight135@mR:
   516                           	callstack 0
   517  00001F                     turnRight180@mR:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1E
   521  00001F                     	ds	1
   522  000020                     ___fldiv@new_exp:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1F
   526  000020                     	ds	1
   527  000021                     ??_turnRight180:
   528  000021                     ??_turnLeft90:
   529  000021                     ??_turnRight90:
   530  000021                     ??_turnLeft135:
   531  000021                     ??_turnRight135:
   532                           
   533                           ; 1 bytes @ 0x20
   534  000021                     	ds	1
   535  000022                     ___fldiv@grs:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x21
   539  000022                     	ds	1
   540  000023                     reverseTurnRight90@mL:
   541                           	callstack 0
   542  000023                     reverseTurnLeft90@mL:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x22
   546  000023                     	ds	2
   547  000025                     reverseTurnRight90@mR:
   548                           	callstack 0
   549  000025                     reverseTurnLeft90@mR:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x24
   553  000025                     	ds	1
   554  000026                     ___fldiv@bexp:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x25
   558  000026                     	ds	1
   559  000027                     ??_reverseTurnLeft90:
   560  000027                     ??_reverseTurnRight90:
   561  000027                     ___fldiv@aexp:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x26
   565  000027                     	ds	1
   566  000028                     ?___flmul:
   567                           	callstack 0
   568  000028                     ___flmul@b:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x27
   572  000028                     	ds	4
   573  00002C                     ___flmul@a:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x2B
   577  00002C                     	ds	4
   578  000030                     ??___flmul:
   579                           
   580                           ; 1 bytes @ 0x2F
   581  000030                     	ds	4
   582  000034                     ___flmul@sign:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x33
   586  000034                     	ds	1
   587  000035                     ___flmul@grs:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x34
   591  000035                     	ds	4
   592  000039                     ___flmul@aexp:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x38
   596  000039                     	ds	1
   597  00003A                     ___flmul@bexp:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x39
   601  00003A                     	ds	1
   602  00003B                     ___flmul@prod:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x3A
   606  00003B                     	ds	4
   607  00003F                     ___flmul@temp:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x3E
   611  00003F                     	ds	2
   612  000041                     ?___fladd:
   613                           	callstack 0
   614  000041                     ___fladd@b:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x40
   618  000041                     	ds	4
   619  000045                     ___fladd@a:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x44
   623  000045                     	ds	4
   624  000049                     ??___fladd:
   625                           
   626                           ; 1 bytes @ 0x48
   627  000049                     	ds	4
   628  00004D                     ___fladd@signs:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x4C
   632  00004D                     	ds	1
   633  00004E                     ___fladd@aexp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x4D
   637  00004E                     	ds	1
   638  00004F                     ___fladd@bexp:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x4E
   642  00004F                     	ds	1
   643  000050                     ___fladd@grs:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x4F
   647  000050                     	ds	1
   648  000051                     ?___fltol:
   649                           	callstack 0
   650  000051                     ___fltol@f1:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x50
   654  000051                     	ds	4
   655  000055                     ??___fltol:
   656                           
   657                           ; 1 bytes @ 0x54
   658  000055                     	ds	4
   659  000059                     ___fltol@sign1:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x58
   663  000059                     	ds	1
   664  00005A                     ___fltol@exp1:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x59
   668  00005A                     	ds	1
   669  00005B                     ?_determine_color_new:
   670                           	callstack 0
   671  00005B                     determine_color_new@m:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x5A
   675  00005B                     	ds	2
   676  00005D                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x5C
   679  00005D                     	ds	2
   680                           
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 25 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  detected_col    2   46[BANK0 ] unsigned int 
   691 ;;  test           20   48[BANK0 ] struct RGB_val
   692 ;;  motorR          9   77[BANK0 ] struct DC_motor
   693 ;;  motorL          9   68[BANK0 ] struct DC_motor
   694 ;;  count           2   44[BANK0 ] unsigned int 
   695 ;;  check3          2   42[BANK0 ] unsigned int 
   696 ;;  check2          2   40[BANK0 ] unsigned int 
   697 ;;  check1          2   38[BANK0 ] unsigned int 
   698 ;;  PWMcycle        2    0        unsigned int 
   699 ;;  check4          2   36[BANK0 ] unsigned int 
   700 ;;  cal             2   34[BANK0 ] unsigned int 
   701 ;;  BlueRatio       2    0        unsigned int 
   702 ;;  GreenRatio      2    0        unsigned int 
   703 ;;  RedRatio        2    0        unsigned int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   714 ;;      Locals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   717 ;;Total ram usage:       54 bytes
   718 ;; Hardware stack levels required when called: 5
   719 ;; This function calls:
   720 ;;		_Interrupts_init
   721 ;;		_Timer0_init
   722 ;;		_calibrateB
   723 ;;		_calibrateW
   724 ;;		_color_click_init
   725 ;;		_determine_color_new
   726 ;;		_forward
   727 ;;		_initDCmotorsPWM
   728 ;;		_initUSART4
   729 ;;		_read_colours
   730 ;;		_reverseTurnLeft90
   731 ;;		_reverseTurnRight90
   732 ;;		_turnLeft135
   733 ;;		_turnLeft90
   734 ;;		_turnRight135
   735 ;;		_turnRight180
   736 ;;		_turnRight90
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text0
   743  01ED7A                     __ptext0:
   744                           	callstack 0
   745  01ED7A                     _main:
   746                           	callstack 26
   747  01ED7A                     
   748                           ;main.c: 27:     initDCmotorsPWM(99);
   749  01ED7A  0E00               	movlw	0
   750  01ED7C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   751  01ED7E  0E63               	movlw	99
   752  01ED80  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   753  01ED82  ECF5  F0E9         	call	_initDCmotorsPWM	;wreg free
   754  01ED86                     
   755                           ;main.c: 28:     color_click_init();
   756  01ED86  ECBA  F0E9         	call	_color_click_init	;wreg free
   757  01ED8A                     
   758                           ;main.c: 29:     initUSART4();
   759  01ED8A  EC45  F0E9         	call	_initUSART4	;wreg free
   760  01ED8E                     
   761                           ;main.c: 30:     Timer0_init();
   762  01ED8E  EC27  F0E9         	call	_Timer0_init	;wreg free
   763  01ED92                     
   764                           ;main.c: 31:     _delay((unsigned long)((300)*(64000000/4000.0)));
   765  01ED92  0E19               	movlw	25
   766  01ED94  6E5E               	movwf	(??_main+1)^0,c
   767  01ED96  0E5A               	movlw	90
   768  01ED98  6E5D               	movwf	??_main^0,c
   769  01ED9A  0EB2               	movlw	178
   770  01ED9C                     u3897:
   771  01ED9C  2EE8               	decfsz	wreg,f,c
   772  01ED9E  D7FE               	bra	u3897
   773  01EDA0  2E5D               	decfsz	??_main^0,f,c
   774  01EDA2  D7FC               	bra	u3897
   775  01EDA4  2E5E               	decfsz	(??_main+1)^0,f,c
   776  01EDA6  D7FA               	bra	u3897
   777  01EDA8                     
   778                           ;main.c: 32:     Interrupts_init();
   779  01EDA8  EC1B  F0E9         	call	_Interrupts_init	;wreg free
   780  01EDAC                     
   781                           ;main.c: 35:     TRISFbits.TRISF2=1;
   782  01EDAC  8486               	bsf	134,2,c	;volatile
   783  01EDAE                     
   784                           ;main.c: 36:     ANSELFbits.ANSELF2=0;
   785  01EDAE  010E               	movlb	14	; () banked
   786  01EDB0  95B4               	bcf	180,2,b	;volatile
   787  01EDB2                     
   788                           ; BSR set to: 14
   789                           ;main.c: 37:     TRISFbits.TRISF3=1;
   790  01EDB2  8686               	bsf	134,3,c	;volatile
   791  01EDB4                     
   792                           ; BSR set to: 14
   793                           ;main.c: 38:     ANSELFbits.ANSELF3=0;
   794  01EDB4  97B4               	bcf	180,3,b	;volatile
   795  01EDB6                     
   796                           ; BSR set to: 14
   797                           ;main.c: 42:     motorL.power=0;
   798  01EDB6  0E00               	movlw	0
   799  01EDB8  0100               	movlb	0	; () banked
   800  01EDBA  6FA4               	movwf	main@motorL& (0+255),b
   801  01EDBC                     
   802                           ; BSR set to: 0
   803                           ;main.c: 43:     motorL.direction=1;
   804  01EDBC  0E01               	movlw	1
   805  01EDBE  6FA5               	movwf	(main@motorL+1)& (0+255),b
   806  01EDC0                     
   807                           ; BSR set to: 0
   808                           ;main.c: 44:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   809  01EDC0  0EA3               	movlw	163
   810  01EDC2  6FA6               	movwf	(main@motorL+2)& (0+255),b
   811  01EDC4  0E0F               	movlw	15
   812  01EDC6  6FA7               	movwf	(main@motorL+3)& (0+255),b
   813  01EDC8                     
   814                           ; BSR set to: 0
   815                           ;main.c: 45:     motorL.dir_LAT=(unsigned char *)(&LATE);
   816  01EDC8  0E7D               	movlw	125
   817  01EDCA  6FA8               	movwf	(main@motorL+4)& (0+255),b
   818  01EDCC  0E0F               	movlw	15
   819  01EDCE  6FA9               	movwf	(main@motorL+5)& (0+255),b
   820  01EDD0                     
   821                           ; BSR set to: 0
   822                           ;main.c: 46:     motorL.dir_pin=4;
   823  01EDD0  0E04               	movlw	4
   824  01EDD2  6FAA               	movwf	(main@motorL+6)& (0+255),b
   825  01EDD4                     
   826                           ; BSR set to: 0
   827                           ;main.c: 47:     motorL.PWMperiod=PWMcycle;
   828  01EDD4  0E00               	movlw	0
   829  01EDD6  6FAC               	movwf	(main@motorL+8)& (0+255),b
   830  01EDD8  0E63               	movlw	99
   831  01EDDA  6FAB               	movwf	(main@motorL+7)& (0+255),b
   832  01EDDC                     
   833                           ; BSR set to: 0
   834                           ;main.c: 49:     motorR.power=0;
   835  01EDDC  0E00               	movlw	0
   836  01EDDE  6FAD               	movwf	main@motorR& (0+255),b
   837  01EDE0                     
   838                           ; BSR set to: 0
   839                           ;main.c: 50:     motorR.direction=1;
   840  01EDE0  0E01               	movlw	1
   841  01EDE2  6FAE               	movwf	(main@motorR+1)& (0+255),b
   842  01EDE4                     
   843                           ; BSR set to: 0
   844                           ;main.c: 51:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   845  01EDE4  0EA0               	movlw	160
   846  01EDE6  6FAF               	movwf	(main@motorR+2)& (0+255),b
   847  01EDE8  0E0F               	movlw	15
   848  01EDEA  6FB0               	movwf	(main@motorR+3)& (0+255),b
   849  01EDEC                     
   850                           ; BSR set to: 0
   851                           ;main.c: 52:     motorR.dir_LAT=(unsigned char *)(&LATG);
   852  01EDEC  0E7F               	movlw	127
   853  01EDEE  6FB1               	movwf	(main@motorR+4)& (0+255),b
   854  01EDF0  0E0F               	movlw	15
   855  01EDF2  6FB2               	movwf	(main@motorR+5)& (0+255),b
   856  01EDF4                     
   857                           ; BSR set to: 0
   858                           ;main.c: 53:     motorR.dir_pin=6;
   859  01EDF4  0E06               	movlw	6
   860  01EDF6  6FB3               	movwf	(main@motorR+6)& (0+255),b
   861  01EDF8                     
   862                           ; BSR set to: 0
   863                           ;main.c: 54:     motorR.PWMperiod=PWMcycle;
   864  01EDF8  0E00               	movlw	0
   865  01EDFA  6FB5               	movwf	(main@motorR+8)& (0+255),b
   866  01EDFC  0E63               	movlw	99
   867  01EDFE  6FB4               	movwf	(main@motorR+7)& (0+255),b
   868  01EE00                     
   869                           ; BSR set to: 0
   870                           ;main.c: 57:     struct RGB_val test;;main.c: 58:     test.C = 0;
   871  01EE00  0E00               	movlw	0
   872  01EE02  6F9D               	movwf	(main@test+13)& (0+255),b
   873  01EE04  0E00               	movlw	0
   874  01EE06  6F9C               	movwf	(main@test+12)& (0+255),b
   875  01EE08                     
   876                           ; BSR set to: 0
   877                           ;main.c: 59:     test.R = 0;
   878  01EE08  0E00               	movlw	0
   879  01EE0A  6F9F               	movwf	(main@test+15)& (0+255),b
   880  01EE0C  0E00               	movlw	0
   881  01EE0E  6F9E               	movwf	(main@test+14)& (0+255),b
   882  01EE10                     
   883                           ; BSR set to: 0
   884                           ;main.c: 60:     test.G = 0;
   885  01EE10  0E00               	movlw	0
   886  01EE12  6FA1               	movwf	(main@test+17)& (0+255),b
   887  01EE14  0E00               	movlw	0
   888  01EE16  6FA0               	movwf	(main@test+16)& (0+255),b
   889  01EE18                     
   890                           ; BSR set to: 0
   891                           ;main.c: 61:     test.B = 0;
   892  01EE18  0E00               	movlw	0
   893  01EE1A  6FA3               	movwf	(main@test+19)& (0+255),b
   894  01EE1C  0E00               	movlw	0
   895  01EE1E  6FA2               	movwf	(main@test+18)& (0+255),b
   896  01EE20                     
   897                           ; BSR set to: 0
   898                           ;main.c: 64:     LATGbits.LATG1=0;
   899  01EE20  927F               	bcf	127,1,c	;volatile
   900  01EE22                     
   901                           ; BSR set to: 0
   902                           ;main.c: 65:     TRISGbits.TRISG1=0;
   903  01EE22  9287               	bcf	135,1,c	;volatile
   904  01EE24                     
   905                           ; BSR set to: 0
   906                           ;main.c: 66:     LATAbits.LATA4=0;
   907  01EE24  9879               	bcf	121,4,c	;volatile
   908  01EE26                     
   909                           ; BSR set to: 0
   910                           ;main.c: 67:     TRISAbits.TRISA4=0;
   911  01EE26  9881               	bcf	129,4,c	;volatile
   912  01EE28                     
   913                           ; BSR set to: 0
   914                           ;main.c: 68:     LATFbits.LATF7=0;
   915  01EE28  9E7E               	bcf	126,7,c	;volatile
   916  01EE2A                     
   917                           ; BSR set to: 0
   918                           ;main.c: 69:     TRISFbits.TRISF7=0;
   919  01EE2A  9E86               	bcf	134,7,c	;volatile
   920  01EE2C                     
   921                           ; BSR set to: 0
   922                           ;main.c: 72:     TRISDbits.TRISD7 = 0;
   923  01EE2C  9E84               	bcf	132,7,c	;volatile
   924  01EE2E                     
   925                           ; BSR set to: 0
   926                           ;main.c: 73:     LATDbits.LATD7 = 0;
   927  01EE2E  9E7C               	bcf	124,7,c	;volatile
   928  01EE30                     
   929                           ; BSR set to: 0
   930                           ;main.c: 74:     TRISHbits.TRISH3 = 0;
   931  01EE30  9688               	bcf	136,3,c	;volatile
   932  01EE32                     
   933                           ; BSR set to: 0
   934                           ;main.c: 75:     LATHbits.LATH3 = 0;
   935  01EE32  9680               	bcf	128,3,c	;volatile
   936  01EE34                     
   937                           ; BSR set to: 0
   938                           ;main.c: 82:     unsigned int RedRatio, GreenRatio, BlueRatio;;main.c: 85:     LATGbits.
      +                          LATG1=1;
   939  01EE34  827F               	bsf	127,1,c	;volatile
   940  01EE36                     
   941                           ; BSR set to: 0
   942                           ;main.c: 86:     LATAbits.LATA4=1;
   943  01EE36  8879               	bsf	121,4,c	;volatile
   944  01EE38                     
   945                           ; BSR set to: 0
   946                           ;main.c: 87:     LATFbits.LATF7=1;
   947  01EE38  8E7E               	bsf	126,7,c	;volatile
   948  01EE3A                     
   949                           ; BSR set to: 0
   950                           ;main.c: 90:     unsigned int cal = 0;
   951  01EE3A  0E00               	movlw	0
   952  01EE3C  6F83               	movwf	(main@cal+1)& (0+255),b
   953  01EE3E  0E00               	movlw	0
   954  01EE40  6F82               	movwf	main@cal& (0+255),b
   955                           
   956                           ;main.c: 91:     while(cal==0){
   957  01EE42  EF7A  F0F7         	goto	l3703
   958  01EE46                     l344:
   959                           
   960                           ; BSR set to: 0
   961                           ;main.c: 92:         LATDbits.LATD7 = 1;
   962  01EE46  8E7C               	bsf	124,7,c	;volatile
   963  01EE48                     l345:
   964  01EE48  B48E               	btfsc	142,2,c	;volatile
   965  01EE4A  EF29  F0F7         	goto	u3601
   966  01EE4E  EF2B  F0F7         	goto	u3600
   967  01EE52                     u3601:
   968  01EE52  EF24  F0F7         	goto	l345
   969  01EE56                     u3600:
   970  01EE56                     
   971                           ;main.c: 94:         if (!PORTFbits.RF2){
   972  01EE56  B48E               	btfsc	142,2,c	;volatile
   973  01EE58  EF30  F0F7         	goto	u3611
   974  01EE5C  EF32  F0F7         	goto	u3610
   975  01EE60                     u3611:
   976  01EE60  EF44  F0F7         	goto	l3689
   977  01EE64                     u3610:
   978  01EE64                     
   979                           ;main.c: 95:             LATDbits.LATD7 = 0;
   980  01EE64  9E7C               	bcf	124,7,c	;volatile
   981  01EE66                     
   982                           ;main.c: 96:             calibrateW(&test);
   983  01EE66  0E90               	movlw	low main@test
   984  01EE68  6E0C               	movwf	calibrateW@m^0,c
   985  01EE6A  0E00               	movlw	high main@test
   986  01EE6C  6E0D               	movwf	(calibrateW@m+1)^0,c
   987  01EE6E  EC39  F0EA         	call	_calibrateW	;wreg free
   988  01EE72                     
   989                           ;main.c: 97:             _delay((unsigned long)((300)*(64000000/4000.0)));
   990  01EE72  0E19               	movlw	25
   991  01EE74  6E5E               	movwf	(??_main+1)^0,c
   992  01EE76  0E5A               	movlw	90
   993  01EE78  6E5D               	movwf	??_main^0,c
   994  01EE7A  0EB2               	movlw	178
   995  01EE7C                     u3907:
   996  01EE7C  2EE8               	decfsz	wreg,f,c
   997  01EE7E  D7FE               	bra	u3907
   998  01EE80  2E5D               	decfsz	??_main^0,f,c
   999  01EE82  D7FC               	bra	u3907
  1000  01EE84  2E5E               	decfsz	(??_main+1)^0,f,c
  1001  01EE86  D7FA               	bra	u3907
  1002  01EE88                     l3689:
  1003                           
  1004                           ;main.c: 100:         LATDbits.LATD7 = 1;
  1005  01EE88  8E7C               	bsf	124,7,c	;volatile
  1006  01EE8A                     l349:
  1007  01EE8A  B48E               	btfsc	142,2,c	;volatile
  1008  01EE8C  EF4A  F0F7         	goto	u3621
  1009  01EE90  EF4C  F0F7         	goto	u3620
  1010  01EE94                     u3621:
  1011  01EE94  EF45  F0F7         	goto	l349
  1012  01EE98                     u3620:
  1013  01EE98                     
  1014                           ;main.c: 102:         if (!PORTFbits.RF2){
  1015  01EE98  B48E               	btfsc	142,2,c	;volatile
  1016  01EE9A  EF51  F0F7         	goto	u3631
  1017  01EE9E  EF53  F0F7         	goto	u3630
  1018  01EEA2                     u3631:
  1019  01EEA2  EF65  F0F7         	goto	l3697
  1020  01EEA6                     u3630:
  1021  01EEA6                     
  1022                           ;main.c: 103:             LATDbits.LATD7 = 0;
  1023  01EEA6  9E7C               	bcf	124,7,c	;volatile
  1024  01EEA8                     
  1025                           ;main.c: 104:             calibrateB(&test);
  1026  01EEA8  0E90               	movlw	low main@test
  1027  01EEAA  6E0C               	movwf	calibrateB@m^0,c
  1028  01EEAC  0E00               	movlw	high main@test
  1029  01EEAE  6E0D               	movwf	(calibrateB@m+1)^0,c
  1030  01EEB0  EC16  F0EA         	call	_calibrateB	;wreg free
  1031  01EEB4                     
  1032                           ;main.c: 105:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1033  01EEB4  0E19               	movlw	25
  1034  01EEB6  6E5E               	movwf	(??_main+1)^0,c
  1035  01EEB8  0E5A               	movlw	90
  1036  01EEBA  6E5D               	movwf	??_main^0,c
  1037  01EEBC  0EB2               	movlw	178
  1038  01EEBE                     u3917:
  1039  01EEBE  2EE8               	decfsz	wreg,f,c
  1040  01EEC0  D7FE               	bra	u3917
  1041  01EEC2  2E5D               	decfsz	??_main^0,f,c
  1042  01EEC4  D7FC               	bra	u3917
  1043  01EEC6  2E5E               	decfsz	(??_main+1)^0,f,c
  1044  01EEC8  D7FA               	bra	u3917
  1045  01EECA                     l3697:
  1046                           
  1047                           ;main.c: 108:         LATHbits.LATH3 = 1;
  1048  01EECA  8680               	bsf	128,3,c	;volatile
  1049  01EECC                     l353:
  1050  01EECC  B68E               	btfsc	142,3,c	;volatile
  1051  01EECE  EF6B  F0F7         	goto	u3641
  1052  01EED2  EF6D  F0F7         	goto	u3640
  1053  01EED6                     u3641:
  1054  01EED6  EF66  F0F7         	goto	l353
  1055  01EEDA                     u3640:
  1056  01EEDA                     
  1057                           ;main.c: 110:         if (!PORTFbits.RF3){
  1058  01EEDA  B68E               	btfsc	142,3,c	;volatile
  1059  01EEDC  EF72  F0F7         	goto	u3651
  1060  01EEE0  EF74  F0F7         	goto	u3650
  1061  01EEE4                     u3651:
  1062  01EEE4  EF7A  F0F7         	goto	l3703
  1063  01EEE8                     u3650:
  1064  01EEE8                     
  1065                           ;main.c: 111:             LATHbits.LATH3 = 0;
  1066  01EEE8  9680               	bcf	128,3,c	;volatile
  1067  01EEEA                     
  1068                           ;main.c: 112:             cal = 1;
  1069  01EEEA  0E00               	movlw	0
  1070  01EEEC  0100               	movlb	0	; () banked
  1071  01EEEE  6F83               	movwf	(main@cal+1)& (0+255),b
  1072  01EEF0  0E01               	movlw	1
  1073  01EEF2  6F82               	movwf	main@cal& (0+255),b
  1074  01EEF4                     l3703:
  1075                           
  1076                           ;main.c: 91:     while(cal==0){
  1077  01EEF4  0100               	movlb	0	; () banked
  1078  01EEF6  5182               	movf	main@cal& (0+255),w,b
  1079  01EEF8  1183               	iorwf	(main@cal+1)& (0+255),w,b
  1080  01EEFA  B4D8               	btfsc	status,2,c
  1081  01EEFC  EF82  F0F7         	goto	u3661
  1082  01EF00  EF84  F0F7         	goto	u3660
  1083  01EF04                     u3661:
  1084  01EF04  EF23  F0F7         	goto	l344
  1085  01EF08                     u3660:
  1086  01EF08                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 116:     unsigned int check1 = 9;
  1089  01EF08  0E00               	movlw	0
  1090  01EF0A  6F87               	movwf	(main@check1+1)& (0+255),b
  1091  01EF0C  0E09               	movlw	9
  1092  01EF0E  6F86               	movwf	main@check1& (0+255),b
  1093                           
  1094                           ;main.c: 117:     unsigned int check2 = 9;
  1095  01EF10  0E00               	movlw	0
  1096  01EF12  6F89               	movwf	(main@check2+1)& (0+255),b
  1097  01EF14  0E09               	movlw	9
  1098  01EF16  6F88               	movwf	main@check2& (0+255),b
  1099                           
  1100                           ;main.c: 118:     unsigned int check3 = 9;
  1101  01EF18  0E00               	movlw	0
  1102  01EF1A  6F8B               	movwf	(main@check3+1)& (0+255),b
  1103  01EF1C  0E09               	movlw	9
  1104  01EF1E  6F8A               	movwf	main@check3& (0+255),b
  1105                           
  1106                           ;main.c: 119:     unsigned int check4 = 9;
  1107  01EF20  0E00               	movlw	0
  1108  01EF22  6F85               	movwf	(main@check4+1)& (0+255),b
  1109  01EF24  0E09               	movlw	9
  1110  01EF26  6F84               	movwf	main@check4& (0+255),b
  1111                           
  1112                           ;main.c: 120:     unsigned int count = 0;
  1113  01EF28  0E00               	movlw	0
  1114  01EF2A  6F8D               	movwf	(main@count+1)& (0+255),b
  1115  01EF2C  0E00               	movlw	0
  1116  01EF2E  6F8C               	movwf	main@count& (0+255),b
  1117  01EF30                     l3707:
  1118                           
  1119                           ;main.c: 123:         unsigned int detected_colour;;main.c: 124:         read_colours(&t
      +                          est);
  1120  01EF30  0E90               	movlw	low main@test
  1121  01EF32  6E0C               	movwf	read_colours@m^0,c
  1122  01EF34  0E00               	movlw	high main@test
  1123  01EF36  6E0D               	movwf	(read_colours@m+1)^0,c
  1124  01EF38  EC27  F0EB         	call	_read_colours	;wreg free
  1125  01EF3C                     
  1126                           ;main.c: 125:         if (count==0) {check1 = determine_color_new(&test);}
  1127  01EF3C  0100               	movlb	0	; () banked
  1128  01EF3E  518C               	movf	main@count& (0+255),w,b
  1129  01EF40  118D               	iorwf	(main@count+1)& (0+255),w,b
  1130  01EF42  A4D8               	btfss	status,2,c
  1131  01EF44  EFA6  F0F7         	goto	u3671
  1132  01EF48  EFA8  F0F7         	goto	u3670
  1133  01EF4C                     u3671:
  1134  01EF4C  EFB2  F0F7         	goto	l3713
  1135  01EF50                     u3670:
  1136  01EF50                     
  1137                           ; BSR set to: 0
  1138  01EF50  0E90               	movlw	low main@test
  1139  01EF52  6E5B               	movwf	determine_color_new@m^0,c
  1140  01EF54  0E00               	movlw	high main@test
  1141  01EF56  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1142  01EF58  EC70  F0F9         	call	_determine_color_new	;wreg free
  1143  01EF5C  C05B  F086         	movff	?_determine_color_new,main@check1
  1144  01EF60  C05C  F087         	movff	?_determine_color_new+1,main@check1+1
  1145  01EF64                     l3713:
  1146                           
  1147                           ;main.c: 126:         if (count==1) {check2 = determine_color_new(&test);}
  1148  01EF64  0100               	movlb	0	; () banked
  1149  01EF66  058C               	decf	main@count& (0+255),w,b
  1150  01EF68  118D               	iorwf	(main@count+1)& (0+255),w,b
  1151  01EF6A  A4D8               	btfss	status,2,c
  1152  01EF6C  EFBA  F0F7         	goto	u3681
  1153  01EF70  EFBC  F0F7         	goto	u3680
  1154  01EF74                     u3681:
  1155  01EF74  EFC6  F0F7         	goto	l3717
  1156  01EF78                     u3680:
  1157  01EF78                     
  1158                           ; BSR set to: 0
  1159  01EF78  0E90               	movlw	low main@test
  1160  01EF7A  6E5B               	movwf	determine_color_new@m^0,c
  1161  01EF7C  0E00               	movlw	high main@test
  1162  01EF7E  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1163  01EF80  EC70  F0F9         	call	_determine_color_new	;wreg free
  1164  01EF84  C05B  F088         	movff	?_determine_color_new,main@check2
  1165  01EF88  C05C  F089         	movff	?_determine_color_new+1,main@check2+1
  1166  01EF8C                     l3717:
  1167                           
  1168                           ;main.c: 127:         if (count==2) {check3 = determine_color_new(&test);}
  1169  01EF8C  0E02               	movlw	2
  1170  01EF8E  0100               	movlb	0	; () banked
  1171  01EF90  198C               	xorwf	main@count& (0+255),w,b
  1172  01EF92  118D               	iorwf	(main@count+1)& (0+255),w,b
  1173  01EF94  A4D8               	btfss	status,2,c
  1174  01EF96  EFCF  F0F7         	goto	u3691
  1175  01EF9A  EFD1  F0F7         	goto	u3690
  1176  01EF9E                     u3691:
  1177  01EF9E  EFDB  F0F7         	goto	l3721
  1178  01EFA2                     u3690:
  1179  01EFA2                     
  1180                           ; BSR set to: 0
  1181  01EFA2  0E90               	movlw	low main@test
  1182  01EFA4  6E5B               	movwf	determine_color_new@m^0,c
  1183  01EFA6  0E00               	movlw	high main@test
  1184  01EFA8  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1185  01EFAA  EC70  F0F9         	call	_determine_color_new	;wreg free
  1186  01EFAE  C05B  F08A         	movff	?_determine_color_new,main@check3
  1187  01EFB2  C05C  F08B         	movff	?_determine_color_new+1,main@check3+1
  1188  01EFB6                     l3721:
  1189                           
  1190                           ;main.c: 128:         if (count==3) {check4 = determine_color_new(&test);count=0;}
  1191  01EFB6  0E03               	movlw	3
  1192  01EFB8  0100               	movlb	0	; () banked
  1193  01EFBA  198C               	xorwf	main@count& (0+255),w,b
  1194  01EFBC  118D               	iorwf	(main@count+1)& (0+255),w,b
  1195  01EFBE  A4D8               	btfss	status,2,c
  1196  01EFC0  EFE4  F0F7         	goto	u3701
  1197  01EFC4  EFE6  F0F7         	goto	u3700
  1198  01EFC8                     u3701:
  1199  01EFC8  EFF7  F0F7         	goto	l3727
  1200  01EFCC                     u3700:
  1201  01EFCC                     
  1202                           ; BSR set to: 0
  1203  01EFCC  0E90               	movlw	low main@test
  1204  01EFCE  6E5B               	movwf	determine_color_new@m^0,c
  1205  01EFD0  0E00               	movlw	high main@test
  1206  01EFD2  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1207  01EFD4  EC70  F0F9         	call	_determine_color_new	;wreg free
  1208  01EFD8  C05B  F084         	movff	?_determine_color_new,main@check4
  1209  01EFDC  C05C  F085         	movff	?_determine_color_new+1,main@check4+1
  1210  01EFE0  0E00               	movlw	0
  1211  01EFE2  0100               	movlb	0	; () banked
  1212  01EFE4  6F8D               	movwf	(main@count+1)& (0+255),b
  1213  01EFE6  0E00               	movlw	0
  1214  01EFE8  6F8C               	movwf	main@count& (0+255),b
  1215  01EFEA  EFF9  F0F7         	goto	l3729
  1216  01EFEE                     l3727:
  1217                           
  1218                           ; BSR set to: 0
  1219  01EFEE  4B8C               	infsnz	main@count& (0+255),f,b
  1220  01EFF0  2B8D               	incf	(main@count+1)& (0+255),f,b
  1221  01EFF2                     l3729:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 132:         if (check1==check2 && check2==check3 && check3==check4){
  1225  01EFF2  5188               	movf	main@check2& (0+255),w,b
  1226  01EFF4  1986               	xorwf	main@check1& (0+255),w,b
  1227  01EFF6  E107               	bnz	u3711
  1228  01EFF8  5189               	movf	(main@check2+1)& (0+255),w,b
  1229  01EFFA  1987               	xorwf	(main@check1+1)& (0+255),w,b
  1230  01EFFC  A4D8               	btfss	status,2,c
  1231  01EFFE  EF03  F0F8         	goto	u3711
  1232  01F002  EF05  F0F8         	goto	u3710
  1233  01F006                     u3711:
  1234  01F006  EF31  F0F8         	goto	l3739
  1235  01F00A                     u3710:
  1236  01F00A                     
  1237                           ; BSR set to: 0
  1238  01F00A  518A               	movf	main@check3& (0+255),w,b
  1239  01F00C  1988               	xorwf	main@check2& (0+255),w,b
  1240  01F00E  E107               	bnz	u3721
  1241  01F010  518B               	movf	(main@check3+1)& (0+255),w,b
  1242  01F012  1989               	xorwf	(main@check2+1)& (0+255),w,b
  1243  01F014  A4D8               	btfss	status,2,c
  1244  01F016  EF0F  F0F8         	goto	u3721
  1245  01F01A  EF11  F0F8         	goto	u3720
  1246  01F01E                     u3721:
  1247  01F01E  EF31  F0F8         	goto	l3739
  1248  01F022                     u3720:
  1249  01F022                     
  1250                           ; BSR set to: 0
  1251  01F022  5184               	movf	main@check4& (0+255),w,b
  1252  01F024  198A               	xorwf	main@check3& (0+255),w,b
  1253  01F026  E107               	bnz	u3731
  1254  01F028  5185               	movf	(main@check4+1)& (0+255),w,b
  1255  01F02A  198B               	xorwf	(main@check3+1)& (0+255),w,b
  1256  01F02C  A4D8               	btfss	status,2,c
  1257  01F02E  EF1B  F0F8         	goto	u3731
  1258  01F032  EF1D  F0F8         	goto	u3730
  1259  01F036                     u3731:
  1260  01F036  EF31  F0F8         	goto	l3739
  1261  01F03A                     u3730:
  1262  01F03A                     
  1263                           ; BSR set to: 0
  1264                           ;main.c: 133:             detected_colour = check1;
  1265  01F03A  C086  F08E         	movff	main@check1,main@detected_colour
  1266  01F03E  C087  F08F         	movff	main@check1+1,main@detected_colour+1
  1267  01F042                     
  1268                           ; BSR set to: 0
  1269                           ;main.c: 134:             check1=9;
  1270  01F042  0E00               	movlw	0
  1271  01F044  6F87               	movwf	(main@check1+1)& (0+255),b
  1272  01F046  0E09               	movlw	9
  1273  01F048  6F86               	movwf	main@check1& (0+255),b
  1274                           
  1275                           ;main.c: 135:             check2=9;
  1276  01F04A  0E00               	movlw	0
  1277  01F04C  6F89               	movwf	(main@check2+1)& (0+255),b
  1278  01F04E  0E09               	movlw	9
  1279  01F050  6F88               	movwf	main@check2& (0+255),b
  1280                           
  1281                           ;main.c: 136:             check3=9;
  1282  01F052  0E00               	movlw	0
  1283  01F054  6F8B               	movwf	(main@check3+1)& (0+255),b
  1284  01F056  0E09               	movlw	9
  1285  01F058  6F8A               	movwf	main@check3& (0+255),b
  1286                           
  1287                           ;main.c: 137:             check4=9;
  1288  01F05A  0E00               	movlw	0
  1289  01F05C  6F85               	movwf	(main@check4+1)& (0+255),b
  1290  01F05E  0E09               	movlw	9
  1291  01F060  6F84               	movwf	main@check4& (0+255),b
  1292  01F062                     l3739:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;main.c: 140:         if (detected_colour == 0){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1296  01F062  518E               	movf	main@detected_colour& (0+255),w,b
  1297  01F064  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1298  01F066  A4D8               	btfss	status,2,c
  1299  01F068  EF38  F0F8         	goto	u3741
  1300  01F06C  EF3A  F0F8         	goto	u3740
  1301  01F070                     u3741:
  1302  01F070  EF50  F0F8         	goto	l3745
  1303  01F074                     u3740:
  1304  01F074                     
  1305                           ; BSR set to: 0
  1306  01F074  0EA4               	movlw	low main@motorL
  1307  01F076  6E1D               	movwf	turnRight90@mL^0,c
  1308  01F078  0E00               	movlw	high main@motorL
  1309  01F07A  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1310  01F07C  0EAD               	movlw	low main@motorR
  1311  01F07E  6E1F               	movwf	turnRight90@mR^0,c
  1312  01F080  0E00               	movlw	high main@motorR
  1313  01F082  6E20               	movwf	(turnRight90@mR+1)^0,c
  1314  01F084  EC0E  F0EC         	call	_turnRight90	;wreg free
  1315  01F088  0E09               	movlw	9
  1316  01F08A  6E5E               	movwf	(??_main+1)^0,c
  1317  01F08C  0E1E               	movlw	30
  1318  01F08E  6E5D               	movwf	??_main^0,c
  1319  01F090  0EE4               	movlw	228
  1320  01F092                     u3927:
  1321  01F092  2EE8               	decfsz	wreg,f,c
  1322  01F094  D7FE               	bra	u3927
  1323  01F096  2E5D               	decfsz	??_main^0,f,c
  1324  01F098  D7FC               	bra	u3927
  1325  01F09A  2E5E               	decfsz	(??_main+1)^0,f,c
  1326  01F09C  D7FA               	bra	u3927
  1327  01F09E  D000               	nop2	
  1328  01F0A0                     l3745:
  1329                           
  1330                           ;main.c: 141:         if (detected_colour == 1){ turnLeft90(&motorL,&motorR);_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  1331  01F0A0  0100               	movlb	0	; () banked
  1332  01F0A2  058E               	decf	main@detected_colour& (0+255),w,b
  1333  01F0A4  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1334  01F0A6  A4D8               	btfss	status,2,c
  1335  01F0A8  EF58  F0F8         	goto	u3751
  1336  01F0AC  EF5A  F0F8         	goto	u3750
  1337  01F0B0                     u3751:
  1338  01F0B0  EF70  F0F8         	goto	l3751
  1339  01F0B4                     u3750:
  1340  01F0B4                     
  1341                           ; BSR set to: 0
  1342  01F0B4  0EA4               	movlw	low main@motorL
  1343  01F0B6  6E1D               	movwf	turnLeft90@mL^0,c
  1344  01F0B8  0E00               	movlw	high main@motorL
  1345  01F0BA  6E1E               	movwf	(turnLeft90@mL+1)^0,c
  1346  01F0BC  0EAD               	movlw	low main@motorR
  1347  01F0BE  6E1F               	movwf	turnLeft90@mR^0,c
  1348  01F0C0  0E00               	movlw	high main@motorR
  1349  01F0C2  6E20               	movwf	(turnLeft90@mR+1)^0,c
  1350  01F0C4  ECCF  F0EB         	call	_turnLeft90	;wreg free
  1351  01F0C8  0E09               	movlw	9
  1352  01F0CA  6E5E               	movwf	(??_main+1)^0,c
  1353  01F0CC  0E1E               	movlw	30
  1354  01F0CE  6E5D               	movwf	??_main^0,c
  1355  01F0D0  0EE4               	movlw	228
  1356  01F0D2                     u3937:
  1357  01F0D2  2EE8               	decfsz	wreg,f,c
  1358  01F0D4  D7FE               	bra	u3937
  1359  01F0D6  2E5D               	decfsz	??_main^0,f,c
  1360  01F0D8  D7FC               	bra	u3937
  1361  01F0DA  2E5E               	decfsz	(??_main+1)^0,f,c
  1362  01F0DC  D7FA               	bra	u3937
  1363  01F0DE  D000               	nop2	
  1364  01F0E0                     l3751:
  1365                           
  1366                           ;main.c: 142:         if (detected_colour == 2){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1367  01F0E0  0E02               	movlw	2
  1368  01F0E2  0100               	movlb	0	; () banked
  1369  01F0E4  198E               	xorwf	main@detected_colour& (0+255),w,b
  1370  01F0E6  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1371  01F0E8  A4D8               	btfss	status,2,c
  1372  01F0EA  EF79  F0F8         	goto	u3761
  1373  01F0EE  EF7B  F0F8         	goto	u3760
  1374  01F0F2                     u3761:
  1375  01F0F2  EF91  F0F8         	goto	l3757
  1376  01F0F6                     u3760:
  1377  01F0F6                     
  1378                           ; BSR set to: 0
  1379  01F0F6  0EA4               	movlw	low main@motorL
  1380  01F0F8  6E1D               	movwf	turnRight180@mL^0,c
  1381  01F0FA  0E00               	movlw	high main@motorL
  1382  01F0FC  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1383  01F0FE  0EAD               	movlw	low main@motorR
  1384  01F100  6E1F               	movwf	turnRight180@mR^0,c
  1385  01F102  0E00               	movlw	high main@motorR
  1386  01F104  6E20               	movwf	(turnRight180@mR+1)^0,c
  1387  01F106  ECCB  F0EC         	call	_turnRight180	;wreg free
  1388  01F10A  0E09               	movlw	9
  1389  01F10C  6E5E               	movwf	(??_main+1)^0,c
  1390  01F10E  0E1E               	movlw	30
  1391  01F110  6E5D               	movwf	??_main^0,c
  1392  01F112  0EE4               	movlw	228
  1393  01F114                     u3947:
  1394  01F114  2EE8               	decfsz	wreg,f,c
  1395  01F116  D7FE               	bra	u3947
  1396  01F118  2E5D               	decfsz	??_main^0,f,c
  1397  01F11A  D7FC               	bra	u3947
  1398  01F11C  2E5E               	decfsz	(??_main+1)^0,f,c
  1399  01F11E  D7FA               	bra	u3947
  1400  01F120  D000               	nop2	
  1401  01F122                     l3757:
  1402                           
  1403                           ;main.c: 143:         if (detected_colour == 3){ reverseTurnRight90(&motorL,&motorR);_de
      +                          lay((unsigned long)((100)*(64000000/4000.0)));}
  1404  01F122  0E03               	movlw	3
  1405  01F124  0100               	movlb	0	; () banked
  1406  01F126  198E               	xorwf	main@detected_colour& (0+255),w,b
  1407  01F128  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1408  01F12A  A4D8               	btfss	status,2,c
  1409  01F12C  EF9A  F0F8         	goto	u3771
  1410  01F130  EF9C  F0F8         	goto	u3770
  1411  01F134                     u3771:
  1412  01F134  EFB2  F0F8         	goto	l3763
  1413  01F138                     u3770:
  1414  01F138                     
  1415                           ; BSR set to: 0
  1416  01F138  0EA4               	movlw	low main@motorL
  1417  01F13A  6E23               	movwf	reverseTurnRight90@mL^0,c
  1418  01F13C  0E00               	movlw	high main@motorL
  1419  01F13E  6E24               	movwf	(reverseTurnRight90@mL+1)^0,c
  1420  01F140  0EAD               	movlw	low main@motorR
  1421  01F142  6E25               	movwf	reverseTurnRight90@mR^0,c
  1422  01F144  0E00               	movlw	high main@motorR
  1423  01F146  6E26               	movwf	(reverseTurnRight90@mR+1)^0,c
  1424  01F148  EC5E  F0ED         	call	_reverseTurnRight90	;wreg free
  1425  01F14C  0E09               	movlw	9
  1426  01F14E  6E5E               	movwf	(??_main+1)^0,c
  1427  01F150  0E1E               	movlw	30
  1428  01F152  6E5D               	movwf	??_main^0,c
  1429  01F154  0EE4               	movlw	228
  1430  01F156                     u3957:
  1431  01F156  2EE8               	decfsz	wreg,f,c
  1432  01F158  D7FE               	bra	u3957
  1433  01F15A  2E5D               	decfsz	??_main^0,f,c
  1434  01F15C  D7FC               	bra	u3957
  1435  01F15E  2E5E               	decfsz	(??_main+1)^0,f,c
  1436  01F160  D7FA               	bra	u3957
  1437  01F162  D000               	nop2	
  1438  01F164                     l3763:
  1439                           
  1440                           ;main.c: 144:         if (detected_colour == 4){ reverseTurnLeft90(&motorL,&motorR);_del
      +                          ay((unsigned long)((100)*(64000000/4000.0)));}
  1441  01F164  0E04               	movlw	4
  1442  01F166  0100               	movlb	0	; () banked
  1443  01F168  198E               	xorwf	main@detected_colour& (0+255),w,b
  1444  01F16A  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1445  01F16C  A4D8               	btfss	status,2,c
  1446  01F16E  EFBB  F0F8         	goto	u3781
  1447  01F172  EFBD  F0F8         	goto	u3780
  1448  01F176                     u3781:
  1449  01F176  EFD3  F0F8         	goto	l3769
  1450  01F17A                     u3780:
  1451  01F17A                     
  1452                           ; BSR set to: 0
  1453  01F17A  0EA4               	movlw	low main@motorL
  1454  01F17C  6E23               	movwf	reverseTurnLeft90@mL^0,c
  1455  01F17E  0E00               	movlw	high main@motorL
  1456  01F180  6E24               	movwf	(reverseTurnLeft90@mL+1)^0,c
  1457  01F182  0EAD               	movlw	low main@motorR
  1458  01F184  6E25               	movwf	reverseTurnLeft90@mR^0,c
  1459  01F186  0E00               	movlw	high main@motorR
  1460  01F188  6E26               	movwf	(reverseTurnLeft90@mR+1)^0,c
  1461  01F18A  EC0A  F0ED         	call	_reverseTurnLeft90	;wreg free
  1462  01F18E  0E09               	movlw	9
  1463  01F190  6E5E               	movwf	(??_main+1)^0,c
  1464  01F192  0E1E               	movlw	30
  1465  01F194  6E5D               	movwf	??_main^0,c
  1466  01F196  0EE4               	movlw	228
  1467  01F198                     u3967:
  1468  01F198  2EE8               	decfsz	wreg,f,c
  1469  01F19A  D7FE               	bra	u3967
  1470  01F19C  2E5D               	decfsz	??_main^0,f,c
  1471  01F19E  D7FC               	bra	u3967
  1472  01F1A0  2E5E               	decfsz	(??_main+1)^0,f,c
  1473  01F1A2  D7FA               	bra	u3967
  1474  01F1A4  D000               	nop2	
  1475  01F1A6                     l3769:
  1476                           
  1477                           ;main.c: 145:         if (detected_colour == 5){ turnRight135(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1478  01F1A6  0E05               	movlw	5
  1479  01F1A8  0100               	movlb	0	; () banked
  1480  01F1AA  198E               	xorwf	main@detected_colour& (0+255),w,b
  1481  01F1AC  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1482  01F1AE  A4D8               	btfss	status,2,c
  1483  01F1B0  EFDC  F0F8         	goto	u3791
  1484  01F1B4  EFDE  F0F8         	goto	u3790
  1485  01F1B8                     u3791:
  1486  01F1B8  EFF4  F0F8         	goto	l3775
  1487  01F1BC                     u3790:
  1488  01F1BC                     
  1489                           ; BSR set to: 0
  1490  01F1BC  0EA4               	movlw	low main@motorL
  1491  01F1BE  6E1D               	movwf	turnRight135@mL^0,c
  1492  01F1C0  0E00               	movlw	high main@motorL
  1493  01F1C2  6E1E               	movwf	(turnRight135@mL+1)^0,c
  1494  01F1C4  0EAD               	movlw	low main@motorR
  1495  01F1C6  6E1F               	movwf	turnRight135@mR^0,c
  1496  01F1C8  0E00               	movlw	high main@motorR
  1497  01F1CA  6E20               	movwf	(turnRight135@mR+1)^0,c
  1498  01F1CC  EC8C  F0EC         	call	_turnRight135	;wreg free
  1499  01F1D0  0E09               	movlw	9
  1500  01F1D2  6E5E               	movwf	(??_main+1)^0,c
  1501  01F1D4  0E1E               	movlw	30
  1502  01F1D6  6E5D               	movwf	??_main^0,c
  1503  01F1D8  0EE4               	movlw	228
  1504  01F1DA                     u3977:
  1505  01F1DA  2EE8               	decfsz	wreg,f,c
  1506  01F1DC  D7FE               	bra	u3977
  1507  01F1DE  2E5D               	decfsz	??_main^0,f,c
  1508  01F1E0  D7FC               	bra	u3977
  1509  01F1E2  2E5E               	decfsz	(??_main+1)^0,f,c
  1510  01F1E4  D7FA               	bra	u3977
  1511  01F1E6  D000               	nop2	
  1512  01F1E8                     l3775:
  1513                           
  1514                           ;main.c: 146:         if (detected_colour == 6){ turnLeft135(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1515  01F1E8  0E06               	movlw	6
  1516  01F1EA  0100               	movlb	0	; () banked
  1517  01F1EC  198E               	xorwf	main@detected_colour& (0+255),w,b
  1518  01F1EE  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1519  01F1F0  A4D8               	btfss	status,2,c
  1520  01F1F2  EFFD  F0F8         	goto	u3801
  1521  01F1F6  EFFF  F0F8         	goto	u3800
  1522  01F1FA                     u3801:
  1523  01F1FA  EF15  F0F9         	goto	l3781
  1524  01F1FE                     u3800:
  1525  01F1FE                     
  1526                           ; BSR set to: 0
  1527  01F1FE  0EA4               	movlw	low main@motorL
  1528  01F200  6E1D               	movwf	turnLeft135@mL^0,c
  1529  01F202  0E00               	movlw	high main@motorL
  1530  01F204  6E1E               	movwf	(turnLeft135@mL+1)^0,c
  1531  01F206  0EAD               	movlw	low main@motorR
  1532  01F208  6E1F               	movwf	turnLeft135@mR^0,c
  1533  01F20A  0E00               	movlw	high main@motorR
  1534  01F20C  6E20               	movwf	(turnLeft135@mR+1)^0,c
  1535  01F20E  EC4D  F0EC         	call	_turnLeft135	;wreg free
  1536  01F212  0E09               	movlw	9
  1537  01F214  6E5E               	movwf	(??_main+1)^0,c
  1538  01F216  0E1E               	movlw	30
  1539  01F218  6E5D               	movwf	??_main^0,c
  1540  01F21A  0EE4               	movlw	228
  1541  01F21C                     u3987:
  1542  01F21C  2EE8               	decfsz	wreg,f,c
  1543  01F21E  D7FE               	bra	u3987
  1544  01F220  2E5D               	decfsz	??_main^0,f,c
  1545  01F222  D7FC               	bra	u3987
  1546  01F224  2E5E               	decfsz	(??_main+1)^0,f,c
  1547  01F226  D7FA               	bra	u3987
  1548  01F228  D000               	nop2	
  1549  01F22A                     l3781:
  1550                           
  1551                           ;main.c: 147:         if (detected_colour == 7){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1552  01F22A  0E07               	movlw	7
  1553  01F22C  0100               	movlb	0	; () banked
  1554  01F22E  198E               	xorwf	main@detected_colour& (0+255),w,b
  1555  01F230  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1556  01F232  A4D8               	btfss	status,2,c
  1557  01F234  EF1E  F0F9         	goto	u3811
  1558  01F238  EF20  F0F9         	goto	u3810
  1559  01F23C                     u3811:
  1560  01F23C  EF36  F0F9         	goto	l3787
  1561  01F240                     u3810:
  1562  01F240                     
  1563                           ; BSR set to: 0
  1564  01F240  0EA4               	movlw	low main@motorL
  1565  01F242  6E1D               	movwf	turnRight180@mL^0,c
  1566  01F244  0E00               	movlw	high main@motorL
  1567  01F246  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1568  01F248  0EAD               	movlw	low main@motorR
  1569  01F24A  6E1F               	movwf	turnRight180@mR^0,c
  1570  01F24C  0E00               	movlw	high main@motorR
  1571  01F24E  6E20               	movwf	(turnRight180@mR+1)^0,c
  1572  01F250  ECCB  F0EC         	call	_turnRight180	;wreg free
  1573  01F254  0E09               	movlw	9
  1574  01F256  6E5E               	movwf	(??_main+1)^0,c
  1575  01F258  0E1E               	movlw	30
  1576  01F25A  6E5D               	movwf	??_main^0,c
  1577  01F25C  0EE4               	movlw	228
  1578  01F25E                     u3997:
  1579  01F25E  2EE8               	decfsz	wreg,f,c
  1580  01F260  D7FE               	bra	u3997
  1581  01F262  2E5D               	decfsz	??_main^0,f,c
  1582  01F264  D7FC               	bra	u3997
  1583  01F266  2E5E               	decfsz	(??_main+1)^0,f,c
  1584  01F268  D7FA               	bra	u3997
  1585  01F26A  D000               	nop2	
  1586  01F26C                     l3787:
  1587                           
  1588                           ;main.c: 148:         if (detected_colour == 8){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1589  01F26C  0E08               	movlw	8
  1590  01F26E  0100               	movlb	0	; () banked
  1591  01F270  198E               	xorwf	main@detected_colour& (0+255),w,b
  1592  01F272  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1593  01F274  A4D8               	btfss	status,2,c
  1594  01F276  EF3F  F0F9         	goto	u3821
  1595  01F27A  EF41  F0F9         	goto	u3820
  1596  01F27E                     u3821:
  1597  01F27E  EF57  F0F9         	goto	l3793
  1598  01F282                     u3820:
  1599  01F282                     
  1600                           ; BSR set to: 0
  1601  01F282  0EA4               	movlw	low main@motorL
  1602  01F284  6E1D               	movwf	turnRight90@mL^0,c
  1603  01F286  0E00               	movlw	high main@motorL
  1604  01F288  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1605  01F28A  0EAD               	movlw	low main@motorR
  1606  01F28C  6E1F               	movwf	turnRight90@mR^0,c
  1607  01F28E  0E00               	movlw	high main@motorR
  1608  01F290  6E20               	movwf	(turnRight90@mR+1)^0,c
  1609  01F292  EC0E  F0EC         	call	_turnRight90	;wreg free
  1610  01F296  0E09               	movlw	9
  1611  01F298  6E5E               	movwf	(??_main+1)^0,c
  1612  01F29A  0E1E               	movlw	30
  1613  01F29C  6E5D               	movwf	??_main^0,c
  1614  01F29E  0EE4               	movlw	228
  1615  01F2A0                     u4007:
  1616  01F2A0  2EE8               	decfsz	wreg,f,c
  1617  01F2A2  D7FE               	bra	u4007
  1618  01F2A4  2E5D               	decfsz	??_main^0,f,c
  1619  01F2A6  D7FC               	bra	u4007
  1620  01F2A8  2E5E               	decfsz	(??_main+1)^0,f,c
  1621  01F2AA  D7FA               	bra	u4007
  1622  01F2AC  D000               	nop2	
  1623  01F2AE                     l3793:
  1624                           
  1625                           ;main.c: 149:         if (detected_colour == 9){ forward(&motorL,&motorR);}
  1626  01F2AE  0E09               	movlw	9
  1627  01F2B0  0100               	movlb	0	; () banked
  1628  01F2B2  198E               	xorwf	main@detected_colour& (0+255),w,b
  1629  01F2B4  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1630  01F2B6  A4D8               	btfss	status,2,c
  1631  01F2B8  EF60  F0F9         	goto	u3831
  1632  01F2BC  EF62  F0F9         	goto	u3830
  1633  01F2C0                     u3831:
  1634  01F2C0  EF98  F0F7         	goto	l3707
  1635  01F2C4                     u3830:
  1636  01F2C4                     
  1637                           ; BSR set to: 0
  1638  01F2C4  0EA4               	movlw	low main@motorL
  1639  01F2C6  6E19               	movwf	forward@mL^0,c
  1640  01F2C8  0E00               	movlw	high main@motorL
  1641  01F2CA  6E1A               	movwf	(forward@mL+1)^0,c
  1642  01F2CC  0EAD               	movlw	low main@motorR
  1643  01F2CE  6E1B               	movwf	forward@mR^0,c
  1644  01F2D0  0E00               	movlw	high main@motorR
  1645  01F2D2  6E1C               	movwf	(forward@mR+1)^0,c
  1646  01F2D4  ECFE  F0EA         	call	_forward	;wreg free
  1647  01F2D8  EF98  F0F7         	goto	l3707
  1648  01F2DC  EF00  F000         	goto	start
  1649  01F2E0                     __end_of_main:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _turnRight180 *****************
  1653 ;; Defined at:
  1654 ;;		line 122 in file "dc_motor.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  1657 ;;		 -> main@motorL(9), 
  1658 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  1659 ;;		 -> main@motorR(9), 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;Total ram usage:        6 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 3
  1678 ;; This function calls:
  1679 ;;		_setMotorPWM
  1680 ;;		_stop
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;;		_Black
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text1
  1688  01D996                     __ptext1:
  1689                           	callstack 0
  1690  01D996                     _turnRight180:
  1691                           	callstack 27
  1692  01D996                     
  1693                           ;dc_motor.c: 122: void turnRight180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 123: {;dc_motor.c: 124:     (*mR).direction = 0;
  1694  01D996  EE20 F001          	lfsr	2,1
  1695  01D99A  501F               	movf	turnRight180@mR^0,w,c
  1696  01D99C  26D9               	addwf	fsr2l,f,c
  1697  01D99E  5020               	movf	(turnRight180@mR+1)^0,w,c
  1698  01D9A0  22DA               	addwfc	fsr2h,f,c
  1699  01D9A2  0E00               	movlw	0
  1700  01D9A4  6EDF               	movwf	indf2,c
  1701                           
  1702                           ;dc_motor.c: 125:     (*mL).direction = 1;
  1703  01D9A6  EE20 F001          	lfsr	2,1
  1704  01D9AA  501D               	movf	turnRight180@mL^0,w,c
  1705  01D9AC  26D9               	addwf	fsr2l,f,c
  1706  01D9AE  501E               	movf	(turnRight180@mL+1)^0,w,c
  1707  01D9B0  22DA               	addwfc	fsr2h,f,c
  1708  01D9B2  0E01               	movlw	1
  1709  01D9B4  6EDF               	movwf	indf2,c
  1710  01D9B6                     
  1711                           ;dc_motor.c: 126:     (*mR).power = 90;
  1712  01D9B6  C01F  FFD9         	movff	turnRight180@mR,fsr2l
  1713  01D9BA  C020  FFDA         	movff	turnRight180@mR+1,fsr2h
  1714  01D9BE  0E5A               	movlw	90
  1715  01D9C0  6EDF               	movwf	indf2,c
  1716  01D9C2                     
  1717                           ;dc_motor.c: 127:     (*mL).power = 90;
  1718  01D9C2  C01D  FFD9         	movff	turnRight180@mL,fsr2l
  1719  01D9C6  C01E  FFDA         	movff	turnRight180@mL+1,fsr2h
  1720  01D9CA  0E5A               	movlw	90
  1721  01D9CC  6EDF               	movwf	indf2,c
  1722  01D9CE                     
  1723                           ;dc_motor.c: 128:     setMotorPWM(mL);
  1724  01D9CE  C01D  F00E         	movff	turnRight180@mL,setMotorPWM@m
  1725  01D9D2  C01E  F00F         	movff	turnRight180@mL+1,setMotorPWM@m+1
  1726  01D9D6  EC91  F0EF         	call	_setMotorPWM	;wreg free
  1727  01D9DA                     
  1728                           ;dc_motor.c: 129:     setMotorPWM(mR);
  1729  01D9DA  C01F  F00E         	movff	turnRight180@mR,setMotorPWM@m
  1730  01D9DE  C020  F00F         	movff	turnRight180@mR+1,setMotorPWM@m+1
  1731  01D9E2  EC91  F0EF         	call	_setMotorPWM	;wreg free
  1732  01D9E6                     
  1733                           ;dc_motor.c: 130:     _delay((unsigned long)((360)*(64000000/4000.0)));
  1734  01D9E6  0E1E               	movlw	30
  1735  01D9E8  6E22               	movwf	(??_turnRight180+1)^0,c
  1736  01D9EA  0E39               	movlw	57
  1737  01D9EC  6E21               	movwf	??_turnRight180^0,c
  1738  01D9EE  0E6F               	movlw	111
  1739  01D9F0                     u4017:
  1740  01D9F0  2EE8               	decfsz	wreg,f,c
  1741  01D9F2  D7FE               	bra	u4017
  1742  01D9F4  2E21               	decfsz	??_turnRight180^0,f,c
  1743  01D9F6  D7FC               	bra	u4017
  1744  01D9F8  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  1745  01D9FA  D7FA               	bra	u4017
  1746  01D9FC  F000               	nop	
  1747  01D9FE                     
  1748                           ;dc_motor.c: 131:     stop(mL, mR);
  1749  01D9FE  C01D  F019         	movff	turnRight180@mL,stop@mL
  1750  01DA02  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  1751  01DA06  C01F  F01B         	movff	turnRight180@mR,stop@mR
  1752  01DA0A  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  1753  01DA0E  ECA1  F0E9         	call	_stop	;wreg free
  1754  01DA12  0012               	return		;funcret
  1755  01DA14                     __end_of_turnRight180:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _turnRight135 *****************
  1759 ;; Defined at:
  1760 ;;		line 109 in file "dc_motor.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  1763 ;;		 -> main@motorL(9), 
  1764 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  1765 ;;		 -> main@motorR(9), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;Total ram usage:        6 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 3
  1784 ;; This function calls:
  1785 ;;		_setMotorPWM
  1786 ;;		_stop
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;;		_Black
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text2
  1794  01D918                     __ptext2:
  1795                           	callstack 0
  1796  01D918                     _turnRight135:
  1797                           	callstack 27
  1798  01D918                     
  1799                           ;dc_motor.c: 109: void turnRight135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 110: {;dc_motor.c: 111:     (*mR).direction = 0;
  1800  01D918  EE20 F001          	lfsr	2,1
  1801  01D91C  501F               	movf	turnRight135@mR^0,w,c
  1802  01D91E  26D9               	addwf	fsr2l,f,c
  1803  01D920  5020               	movf	(turnRight135@mR+1)^0,w,c
  1804  01D922  22DA               	addwfc	fsr2h,f,c
  1805  01D924  0E00               	movlw	0
  1806  01D926  6EDF               	movwf	indf2,c
  1807                           
  1808                           ;dc_motor.c: 112:     (*mL).direction = 1;
  1809  01D928  EE20 F001          	lfsr	2,1
  1810  01D92C  501D               	movf	turnRight135@mL^0,w,c
  1811  01D92E  26D9               	addwf	fsr2l,f,c
  1812  01D930  501E               	movf	(turnRight135@mL+1)^0,w,c
  1813  01D932  22DA               	addwfc	fsr2h,f,c
  1814  01D934  0E01               	movlw	1
  1815  01D936  6EDF               	movwf	indf2,c
  1816  01D938                     
  1817                           ;dc_motor.c: 113:     (*mR).power = 90;
  1818  01D938  C01F  FFD9         	movff	turnRight135@mR,fsr2l
  1819  01D93C  C020  FFDA         	movff	turnRight135@mR+1,fsr2h
  1820  01D940  0E5A               	movlw	90
  1821  01D942  6EDF               	movwf	indf2,c
  1822  01D944                     
  1823                           ;dc_motor.c: 114:     (*mL).power = 90;
  1824  01D944  C01D  FFD9         	movff	turnRight135@mL,fsr2l
  1825  01D948  C01E  FFDA         	movff	turnRight135@mL+1,fsr2h
  1826  01D94C  0E5A               	movlw	90
  1827  01D94E  6EDF               	movwf	indf2,c
  1828  01D950                     
  1829                           ;dc_motor.c: 115:     setMotorPWM(mL);
  1830  01D950  C01D  F00E         	movff	turnRight135@mL,setMotorPWM@m
  1831  01D954  C01E  F00F         	movff	turnRight135@mL+1,setMotorPWM@m+1
  1832  01D958  EC91  F0EF         	call	_setMotorPWM	;wreg free
  1833  01D95C                     
  1834                           ;dc_motor.c: 116:     setMotorPWM(mR);
  1835  01D95C  C01F  F00E         	movff	turnRight135@mR,setMotorPWM@m
  1836  01D960  C020  F00F         	movff	turnRight135@mR+1,setMotorPWM@m+1
  1837  01D964  EC91  F0EF         	call	_setMotorPWM	;wreg free
  1838  01D968                     
  1839                           ;dc_motor.c: 117:     _delay((unsigned long)((270)*(64000000/4000.0)));
  1840  01D968  0E16               	movlw	22
  1841  01D96A  6E22               	movwf	(??_turnRight135+1)^0,c
  1842  01D96C  0EEB               	movlw	235
  1843  01D96E  6E21               	movwf	??_turnRight135^0,c
  1844  01D970  0E53               	movlw	83
  1845  01D972                     u4027:
  1846  01D972  2EE8               	decfsz	wreg,f,c
  1847  01D974  D7FE               	bra	u4027
  1848  01D976  2E21               	decfsz	??_turnRight135^0,f,c
  1849  01D978  D7FC               	bra	u4027
  1850  01D97A  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  1851  01D97C  D7FA               	bra	u4027
  1852  01D97E  F000               	nop	
  1853  01D980                     
  1854                           ;dc_motor.c: 118:     stop(mL, mR);
  1855  01D980  C01D  F019         	movff	turnRight135@mL,stop@mL
  1856  01D984  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  1857  01D988  C01F  F01B         	movff	turnRight135@mR,stop@mR
  1858  01D98C  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  1859  01D990  ECA1  F0E9         	call	_stop	;wreg free
  1860  01D994  0012               	return		;funcret
  1861  01D996                     __end_of_turnRight135:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _turnLeft135 *****************
  1865 ;; Defined at:
  1866 ;;		line 83 in file "dc_motor.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  1869 ;;		 -> main@motorL(9), 
  1870 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  1871 ;;		 -> main@motorR(9), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;Total ram usage:        6 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 3
  1890 ;; This function calls:
  1891 ;;		_setMotorPWM
  1892 ;;		_stop
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;;		_Black
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text3
  1900  01D89A                     __ptext3:
  1901                           	callstack 0
  1902  01D89A                     _turnLeft135:
  1903                           	callstack 27
  1904  01D89A                     
  1905                           ;dc_motor.c: 83: void turnLeft135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 
      +                          84: {;dc_motor.c: 85:     (*mL).direction = 0;
  1906  01D89A  EE20 F001          	lfsr	2,1
  1907  01D89E  501D               	movf	turnLeft135@mL^0,w,c
  1908  01D8A0  26D9               	addwf	fsr2l,f,c
  1909  01D8A2  501E               	movf	(turnLeft135@mL+1)^0,w,c
  1910  01D8A4  22DA               	addwfc	fsr2h,f,c
  1911  01D8A6  0E00               	movlw	0
  1912  01D8A8  6EDF               	movwf	indf2,c
  1913                           
  1914                           ;dc_motor.c: 86:     (*mR).direction = 1;
  1915  01D8AA  EE20 F001          	lfsr	2,1
  1916  01D8AE  501F               	movf	turnLeft135@mR^0,w,c
  1917  01D8B0  26D9               	addwf	fsr2l,f,c
  1918  01D8B2  5020               	movf	(turnLeft135@mR+1)^0,w,c
  1919  01D8B4  22DA               	addwfc	fsr2h,f,c
  1920  01D8B6  0E01               	movlw	1
  1921  01D8B8  6EDF               	movwf	indf2,c
  1922  01D8BA                     
  1923                           ;dc_motor.c: 87:     (*mL).power = 90;
  1924  01D8BA  C01D  FFD9         	movff	turnLeft135@mL,fsr2l
  1925  01D8BE  C01E  FFDA         	movff	turnLeft135@mL+1,fsr2h
  1926  01D8C2  0E5A               	movlw	90
  1927  01D8C4  6EDF               	movwf	indf2,c
  1928  01D8C6                     
  1929                           ;dc_motor.c: 88:     (*mR).power = 90;
  1930  01D8C6  C01F  FFD9         	movff	turnLeft135@mR,fsr2l
  1931  01D8CA  C020  FFDA         	movff	turnLeft135@mR+1,fsr2h
  1932  01D8CE  0E5A               	movlw	90
  1933  01D8D0  6EDF               	movwf	indf2,c
  1934  01D8D2                     
  1935                           ;dc_motor.c: 89:     setMotorPWM(mL);
  1936  01D8D2  C01D  F00E         	movff	turnLeft135@mL,setMotorPWM@m
  1937  01D8D6  C01E  F00F         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  1938  01D8DA  EC91  F0EF         	call	_setMotorPWM	;wreg free
  1939  01D8DE                     
  1940                           ;dc_motor.c: 90:     setMotorPWM(mR);
  1941  01D8DE  C01F  F00E         	movff	turnLeft135@mR,setMotorPWM@m
  1942  01D8E2  C020  F00F         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  1943  01D8E6  EC91  F0EF         	call	_setMotorPWM	;wreg free
  1944  01D8EA                     
  1945                           ;dc_motor.c: 91:     _delay((unsigned long)((270)*(64000000/4000.0)));
  1946  01D8EA  0E16               	movlw	22
  1947  01D8EC  6E22               	movwf	(??_turnLeft135+1)^0,c
  1948  01D8EE  0EEB               	movlw	235
  1949  01D8F0  6E21               	movwf	??_turnLeft135^0,c
  1950  01D8F2  0E53               	movlw	83
  1951  01D8F4                     u4037:
  1952  01D8F4  2EE8               	decfsz	wreg,f,c
  1953  01D8F6  D7FE               	bra	u4037
  1954  01D8F8  2E21               	decfsz	??_turnLeft135^0,f,c
  1955  01D8FA  D7FC               	bra	u4037
  1956  01D8FC  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  1957  01D8FE  D7FA               	bra	u4037
  1958  01D900  F000               	nop	
  1959  01D902                     
  1960                           ;dc_motor.c: 92:     stop(mL, mR);
  1961  01D902  C01D  F019         	movff	turnLeft135@mL,stop@mL
  1962  01D906  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  1963  01D90A  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  1964  01D90E  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  1965  01D912  ECA1  F0E9         	call	_stop	;wreg free
  1966  01D916  0012               	return		;funcret
  1967  01D918                     __end_of_turnLeft135:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _reverseTurnRight90 *****************
  1971 ;; Defined at:
  1972 ;;		line 169 in file "dc_motor.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1975 ;;		 -> main@motorL(9), 
  1976 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1977 ;;		 -> main@motorR(9), 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;Total ram usage:        6 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 4
  1996 ;; This function calls:
  1997 ;;		_setMotorPWM
  1998 ;;		_stop
  1999 ;;		_turnRight90
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;;		_Black
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text4
  2007  01DABC                     __ptext4:
  2008                           	callstack 0
  2009  01DABC                     _reverseTurnRight90:
  2010                           	callstack 26
  2011  01DABC                     
  2012                           ;dc_motor.c: 169: void reverseTurnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_m
      +                          otor.c: 170: {;dc_motor.c: 171:     (*mL).direction = 0;
  2013  01DABC  EE20 F001          	lfsr	2,1
  2014  01DAC0  5023               	movf	reverseTurnRight90@mL^0,w,c
  2015  01DAC2  26D9               	addwf	fsr2l,f,c
  2016  01DAC4  5024               	movf	(reverseTurnRight90@mL+1)^0,w,c
  2017  01DAC6  22DA               	addwfc	fsr2h,f,c
  2018  01DAC8  0E00               	movlw	0
  2019  01DACA  6EDF               	movwf	indf2,c
  2020                           
  2021                           ;dc_motor.c: 172:     (*mR).direction = 0;
  2022  01DACC  EE20 F001          	lfsr	2,1
  2023  01DAD0  5025               	movf	reverseTurnRight90@mR^0,w,c
  2024  01DAD2  26D9               	addwf	fsr2l,f,c
  2025  01DAD4  5026               	movf	(reverseTurnRight90@mR+1)^0,w,c
  2026  01DAD6  22DA               	addwfc	fsr2h,f,c
  2027  01DAD8  0E00               	movlw	0
  2028  01DADA  6EDF               	movwf	indf2,c
  2029  01DADC                     
  2030                           ;dc_motor.c: 173:     (*mL).power = 75;
  2031  01DADC  C023  FFD9         	movff	reverseTurnRight90@mL,fsr2l
  2032  01DAE0  C024  FFDA         	movff	reverseTurnRight90@mL+1,fsr2h
  2033  01DAE4  0E4B               	movlw	75
  2034  01DAE6  6EDF               	movwf	indf2,c
  2035  01DAE8                     
  2036                           ;dc_motor.c: 174:     (*mR).power = 75;
  2037  01DAE8  C025  FFD9         	movff	reverseTurnRight90@mR,fsr2l
  2038  01DAEC  C026  FFDA         	movff	reverseTurnRight90@mR+1,fsr2h
  2039  01DAF0  0E4B               	movlw	75
  2040  01DAF2  6EDF               	movwf	indf2,c
  2041  01DAF4                     
  2042                           ;dc_motor.c: 175:     setMotorPWM(mL);
  2043  01DAF4  C023  F00E         	movff	reverseTurnRight90@mL,setMotorPWM@m
  2044  01DAF8  C024  F00F         	movff	reverseTurnRight90@mL+1,setMotorPWM@m+1
  2045  01DAFC  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2046  01DB00                     
  2047                           ;dc_motor.c: 176:     setMotorPWM(mR);
  2048  01DB00  C025  F00E         	movff	reverseTurnRight90@mR,setMotorPWM@m
  2049  01DB04  C026  F00F         	movff	reverseTurnRight90@mR+1,setMotorPWM@m+1
  2050  01DB08  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2051  01DB0C                     
  2052                           ;dc_motor.c: 177:     _delay((unsigned long)((800)*(64000000/4000.0)));
  2053  01DB0C  0E41               	movlw	65
  2054  01DB0E  6E28               	movwf	(??_reverseTurnRight90+1)^0,c
  2055  01DB10  0EF0               	movlw	240
  2056  01DB12  6E27               	movwf	??_reverseTurnRight90^0,c
  2057  01DB14  0E33               	movlw	51
  2058  01DB16                     u4047:
  2059  01DB16  2EE8               	decfsz	wreg,f,c
  2060  01DB18  D7FE               	bra	u4047
  2061  01DB1A  2E27               	decfsz	??_reverseTurnRight90^0,f,c
  2062  01DB1C  D7FC               	bra	u4047
  2063  01DB1E  2E28               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2064  01DB20  D7FA               	bra	u4047
  2065  01DB22  F000               	nop	
  2066  01DB24                     
  2067                           ;dc_motor.c: 178:     stop(mL, mR);
  2068  01DB24  C023  F019         	movff	reverseTurnRight90@mL,stop@mL
  2069  01DB28  C024  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  2070  01DB2C  C025  F01B         	movff	reverseTurnRight90@mR,stop@mR
  2071  01DB30  C026  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  2072  01DB34  ECA1  F0E9         	call	_stop	;wreg free
  2073  01DB38                     
  2074                           ;dc_motor.c: 179:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2075  01DB38  0E19               	movlw	25
  2076  01DB3A  6E28               	movwf	(??_reverseTurnRight90+1)^0,c
  2077  01DB3C  0E5A               	movlw	90
  2078  01DB3E  6E27               	movwf	??_reverseTurnRight90^0,c
  2079  01DB40  0EB2               	movlw	178
  2080  01DB42                     u4057:
  2081  01DB42  2EE8               	decfsz	wreg,f,c
  2082  01DB44  D7FE               	bra	u4057
  2083  01DB46  2E27               	decfsz	??_reverseTurnRight90^0,f,c
  2084  01DB48  D7FC               	bra	u4057
  2085  01DB4A  2E28               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2086  01DB4C  D7FA               	bra	u4057
  2087  01DB4E                     
  2088                           ;dc_motor.c: 180:     turnRight90(mL, mR);
  2089  01DB4E  C023  F01D         	movff	reverseTurnRight90@mL,turnRight90@mL
  2090  01DB52  C024  F01E         	movff	reverseTurnRight90@mL+1,turnRight90@mL+1
  2091  01DB56  C025  F01F         	movff	reverseTurnRight90@mR,turnRight90@mR
  2092  01DB5A  C026  F020         	movff	reverseTurnRight90@mR+1,turnRight90@mR+1
  2093  01DB5E  EC0E  F0EC         	call	_turnRight90	;wreg free
  2094  01DB62  0012               	return		;funcret
  2095  01DB64                     __end_of_reverseTurnRight90:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _turnRight90 *****************
  2099 ;; Defined at:
  2100 ;;		line 96 in file "dc_motor.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  2103 ;;		 -> main@motorL(9), 
  2104 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  2105 ;;		 -> main@motorR(9), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;Total ram usage:        6 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 3
  2124 ;; This function calls:
  2125 ;;		_setMotorPWM
  2126 ;;		_stop
  2127 ;; This function is called by:
  2128 ;;		_reverseTurnRight90
  2129 ;;		_main
  2130 ;;		_Black
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text5
  2135  01D81C                     __ptext5:
  2136                           	callstack 0
  2137  01D81C                     _turnRight90:
  2138                           	callstack 27
  2139  01D81C                     
  2140                           ;dc_motor.c: 96: void turnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 
      +                          97: {;dc_motor.c: 98:     (*mR).direction = 0;
  2141  01D81C  EE20 F001          	lfsr	2,1
  2142  01D820  501F               	movf	turnRight90@mR^0,w,c
  2143  01D822  26D9               	addwf	fsr2l,f,c
  2144  01D824  5020               	movf	(turnRight90@mR+1)^0,w,c
  2145  01D826  22DA               	addwfc	fsr2h,f,c
  2146  01D828  0E00               	movlw	0
  2147  01D82A  6EDF               	movwf	indf2,c
  2148                           
  2149                           ;dc_motor.c: 99:     (*mL).direction = 1;
  2150  01D82C  EE20 F001          	lfsr	2,1
  2151  01D830  501D               	movf	turnRight90@mL^0,w,c
  2152  01D832  26D9               	addwf	fsr2l,f,c
  2153  01D834  501E               	movf	(turnRight90@mL+1)^0,w,c
  2154  01D836  22DA               	addwfc	fsr2h,f,c
  2155  01D838  0E01               	movlw	1
  2156  01D83A  6EDF               	movwf	indf2,c
  2157  01D83C                     
  2158                           ;dc_motor.c: 100:     (*mR).power = 90;
  2159  01D83C  C01F  FFD9         	movff	turnRight90@mR,fsr2l
  2160  01D840  C020  FFDA         	movff	turnRight90@mR+1,fsr2h
  2161  01D844  0E5A               	movlw	90
  2162  01D846  6EDF               	movwf	indf2,c
  2163  01D848                     
  2164                           ;dc_motor.c: 101:     (*mL).power = 90;
  2165  01D848  C01D  FFD9         	movff	turnRight90@mL,fsr2l
  2166  01D84C  C01E  FFDA         	movff	turnRight90@mL+1,fsr2h
  2167  01D850  0E5A               	movlw	90
  2168  01D852  6EDF               	movwf	indf2,c
  2169  01D854                     
  2170                           ;dc_motor.c: 102:     setMotorPWM(mL);
  2171  01D854  C01D  F00E         	movff	turnRight90@mL,setMotorPWM@m
  2172  01D858  C01E  F00F         	movff	turnRight90@mL+1,setMotorPWM@m+1
  2173  01D85C  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2174  01D860                     
  2175                           ;dc_motor.c: 103:     setMotorPWM(mR);
  2176  01D860  C01F  F00E         	movff	turnRight90@mR,setMotorPWM@m
  2177  01D864  C020  F00F         	movff	turnRight90@mR+1,setMotorPWM@m+1
  2178  01D868  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2179  01D86C                     
  2180                           ;dc_motor.c: 104:     _delay((unsigned long)((180)*(64000000/4000.0)));
  2181  01D86C  0E0F               	movlw	15
  2182  01D86E  6E22               	movwf	(??_turnRight90+1)^0,c
  2183  01D870  0E9D               	movlw	157
  2184  01D872  6E21               	movwf	??_turnRight90^0,c
  2185  01D874  0E36               	movlw	54
  2186  01D876                     u4067:
  2187  01D876  2EE8               	decfsz	wreg,f,c
  2188  01D878  D7FE               	bra	u4067
  2189  01D87A  2E21               	decfsz	??_turnRight90^0,f,c
  2190  01D87C  D7FC               	bra	u4067
  2191  01D87E  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  2192  01D880  D7FA               	bra	u4067
  2193  01D882  D000               	nop2	
  2194  01D884                     
  2195                           ;dc_motor.c: 105:     stop(mL, mR);
  2196  01D884  C01D  F019         	movff	turnRight90@mL,stop@mL
  2197  01D888  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  2198  01D88C  C01F  F01B         	movff	turnRight90@mR,stop@mR
  2199  01D890  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  2200  01D894  ECA1  F0E9         	call	_stop	;wreg free
  2201  01D898  0012               	return		;funcret
  2202  01D89A                     __end_of_turnRight90:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _reverseTurnLeft90 *****************
  2206 ;; Defined at:
  2207 ;;		line 184 in file "dc_motor.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  2210 ;;		 -> main@motorL(9), 
  2211 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  2212 ;;		 -> main@motorR(9), 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;Total ram usage:        6 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 4
  2231 ;; This function calls:
  2232 ;;		_setMotorPWM
  2233 ;;		_stop
  2234 ;;		_turnLeft90
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;;		_Black
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text6
  2242  01DA14                     __ptext6:
  2243                           	callstack 0
  2244  01DA14                     _reverseTurnLeft90:
  2245                           	callstack 26
  2246  01DA14                     
  2247                           ;dc_motor.c: 184: void reverseTurnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 185: {;dc_motor.c: 186:     (*mL).direction = 0;
  2248  01DA14  EE20 F001          	lfsr	2,1
  2249  01DA18  5023               	movf	reverseTurnLeft90@mL^0,w,c
  2250  01DA1A  26D9               	addwf	fsr2l,f,c
  2251  01DA1C  5024               	movf	(reverseTurnLeft90@mL+1)^0,w,c
  2252  01DA1E  22DA               	addwfc	fsr2h,f,c
  2253  01DA20  0E00               	movlw	0
  2254  01DA22  6EDF               	movwf	indf2,c
  2255                           
  2256                           ;dc_motor.c: 187:     (*mR).direction = 0;
  2257  01DA24  EE20 F001          	lfsr	2,1
  2258  01DA28  5025               	movf	reverseTurnLeft90@mR^0,w,c
  2259  01DA2A  26D9               	addwf	fsr2l,f,c
  2260  01DA2C  5026               	movf	(reverseTurnLeft90@mR+1)^0,w,c
  2261  01DA2E  22DA               	addwfc	fsr2h,f,c
  2262  01DA30  0E00               	movlw	0
  2263  01DA32  6EDF               	movwf	indf2,c
  2264  01DA34                     
  2265                           ;dc_motor.c: 188:     (*mL).power = 75;
  2266  01DA34  C023  FFD9         	movff	reverseTurnLeft90@mL,fsr2l
  2267  01DA38  C024  FFDA         	movff	reverseTurnLeft90@mL+1,fsr2h
  2268  01DA3C  0E4B               	movlw	75
  2269  01DA3E  6EDF               	movwf	indf2,c
  2270  01DA40                     
  2271                           ;dc_motor.c: 189:     (*mR).power = 75;
  2272  01DA40  C025  FFD9         	movff	reverseTurnLeft90@mR,fsr2l
  2273  01DA44  C026  FFDA         	movff	reverseTurnLeft90@mR+1,fsr2h
  2274  01DA48  0E4B               	movlw	75
  2275  01DA4A  6EDF               	movwf	indf2,c
  2276  01DA4C                     
  2277                           ;dc_motor.c: 190:     setMotorPWM(mL);
  2278  01DA4C  C023  F00E         	movff	reverseTurnLeft90@mL,setMotorPWM@m
  2279  01DA50  C024  F00F         	movff	reverseTurnLeft90@mL+1,setMotorPWM@m+1
  2280  01DA54  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2281  01DA58                     
  2282                           ;dc_motor.c: 191:     setMotorPWM(mR);
  2283  01DA58  C025  F00E         	movff	reverseTurnLeft90@mR,setMotorPWM@m
  2284  01DA5C  C026  F00F         	movff	reverseTurnLeft90@mR+1,setMotorPWM@m+1
  2285  01DA60  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2286  01DA64                     
  2287                           ;dc_motor.c: 192:     _delay((unsigned long)((800)*(64000000/4000.0)));
  2288  01DA64  0E41               	movlw	65
  2289  01DA66  6E28               	movwf	(??_reverseTurnLeft90+1)^0,c
  2290  01DA68  0EF0               	movlw	240
  2291  01DA6A  6E27               	movwf	??_reverseTurnLeft90^0,c
  2292  01DA6C  0E33               	movlw	51
  2293  01DA6E                     u4077:
  2294  01DA6E  2EE8               	decfsz	wreg,f,c
  2295  01DA70  D7FE               	bra	u4077
  2296  01DA72  2E27               	decfsz	??_reverseTurnLeft90^0,f,c
  2297  01DA74  D7FC               	bra	u4077
  2298  01DA76  2E28               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2299  01DA78  D7FA               	bra	u4077
  2300  01DA7A  F000               	nop	
  2301  01DA7C                     
  2302                           ;dc_motor.c: 193:     stop(mL, mR);
  2303  01DA7C  C023  F019         	movff	reverseTurnLeft90@mL,stop@mL
  2304  01DA80  C024  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  2305  01DA84  C025  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  2306  01DA88  C026  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  2307  01DA8C  ECA1  F0E9         	call	_stop	;wreg free
  2308  01DA90                     
  2309                           ;dc_motor.c: 194:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2310  01DA90  0E19               	movlw	25
  2311  01DA92  6E28               	movwf	(??_reverseTurnLeft90+1)^0,c
  2312  01DA94  0E5A               	movlw	90
  2313  01DA96  6E27               	movwf	??_reverseTurnLeft90^0,c
  2314  01DA98  0EB2               	movlw	178
  2315  01DA9A                     u4087:
  2316  01DA9A  2EE8               	decfsz	wreg,f,c
  2317  01DA9C  D7FE               	bra	u4087
  2318  01DA9E  2E27               	decfsz	??_reverseTurnLeft90^0,f,c
  2319  01DAA0  D7FC               	bra	u4087
  2320  01DAA2  2E28               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2321  01DAA4  D7FA               	bra	u4087
  2322  01DAA6                     
  2323                           ;dc_motor.c: 195:     turnLeft90(mL, mR);
  2324  01DAA6  C023  F01D         	movff	reverseTurnLeft90@mL,turnLeft90@mL
  2325  01DAAA  C024  F01E         	movff	reverseTurnLeft90@mL+1,turnLeft90@mL+1
  2326  01DAAE  C025  F01F         	movff	reverseTurnLeft90@mR,turnLeft90@mR
  2327  01DAB2  C026  F020         	movff	reverseTurnLeft90@mR+1,turnLeft90@mR+1
  2328  01DAB6  ECCF  F0EB         	call	_turnLeft90	;wreg free
  2329  01DABA  0012               	return		;funcret
  2330  01DABC                     __end_of_reverseTurnLeft90:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _turnLeft90 *****************
  2334 ;; Defined at:
  2335 ;;		line 70 in file "dc_motor.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  2338 ;;		 -> main@motorL(9), 
  2339 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  2340 ;;		 -> main@motorR(9), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;Total ram usage:        6 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 3
  2359 ;; This function calls:
  2360 ;;		_setMotorPWM
  2361 ;;		_stop
  2362 ;; This function is called by:
  2363 ;;		_reverseTurnLeft90
  2364 ;;		_main
  2365 ;;		_Black
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text7
  2370  01D79E                     __ptext7:
  2371                           	callstack 0
  2372  01D79E                     _turnLeft90:
  2373                           	callstack 27
  2374  01D79E                     
  2375                           ;dc_motor.c: 70: void turnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 7
      +                          1: {;dc_motor.c: 72:     (*mL).direction = 0;
  2376  01D79E  EE20 F001          	lfsr	2,1
  2377  01D7A2  501D               	movf	turnLeft90@mL^0,w,c
  2378  01D7A4  26D9               	addwf	fsr2l,f,c
  2379  01D7A6  501E               	movf	(turnLeft90@mL+1)^0,w,c
  2380  01D7A8  22DA               	addwfc	fsr2h,f,c
  2381  01D7AA  0E00               	movlw	0
  2382  01D7AC  6EDF               	movwf	indf2,c
  2383                           
  2384                           ;dc_motor.c: 73:     (*mR).direction = 1;
  2385  01D7AE  EE20 F001          	lfsr	2,1
  2386  01D7B2  501F               	movf	turnLeft90@mR^0,w,c
  2387  01D7B4  26D9               	addwf	fsr2l,f,c
  2388  01D7B6  5020               	movf	(turnLeft90@mR+1)^0,w,c
  2389  01D7B8  22DA               	addwfc	fsr2h,f,c
  2390  01D7BA  0E01               	movlw	1
  2391  01D7BC  6EDF               	movwf	indf2,c
  2392  01D7BE                     
  2393                           ;dc_motor.c: 74:     (*mL).power = 90;
  2394  01D7BE  C01D  FFD9         	movff	turnLeft90@mL,fsr2l
  2395  01D7C2  C01E  FFDA         	movff	turnLeft90@mL+1,fsr2h
  2396  01D7C6  0E5A               	movlw	90
  2397  01D7C8  6EDF               	movwf	indf2,c
  2398  01D7CA                     
  2399                           ;dc_motor.c: 75:     (*mR).power = 90;
  2400  01D7CA  C01F  FFD9         	movff	turnLeft90@mR,fsr2l
  2401  01D7CE  C020  FFDA         	movff	turnLeft90@mR+1,fsr2h
  2402  01D7D2  0E5A               	movlw	90
  2403  01D7D4  6EDF               	movwf	indf2,c
  2404  01D7D6                     
  2405                           ;dc_motor.c: 76:     setMotorPWM(mL);
  2406  01D7D6  C01D  F00E         	movff	turnLeft90@mL,setMotorPWM@m
  2407  01D7DA  C01E  F00F         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  2408  01D7DE  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2409  01D7E2                     
  2410                           ;dc_motor.c: 77:     setMotorPWM(mR);
  2411  01D7E2  C01F  F00E         	movff	turnLeft90@mR,setMotorPWM@m
  2412  01D7E6  C020  F00F         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  2413  01D7EA  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2414  01D7EE                     
  2415                           ;dc_motor.c: 78:     _delay((unsigned long)((180)*(64000000/4000.0)));
  2416  01D7EE  0E0F               	movlw	15
  2417  01D7F0  6E22               	movwf	(??_turnLeft90+1)^0,c
  2418  01D7F2  0E9D               	movlw	157
  2419  01D7F4  6E21               	movwf	??_turnLeft90^0,c
  2420  01D7F6  0E36               	movlw	54
  2421  01D7F8                     u4097:
  2422  01D7F8  2EE8               	decfsz	wreg,f,c
  2423  01D7FA  D7FE               	bra	u4097
  2424  01D7FC  2E21               	decfsz	??_turnLeft90^0,f,c
  2425  01D7FE  D7FC               	bra	u4097
  2426  01D800  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  2427  01D802  D7FA               	bra	u4097
  2428  01D804  D000               	nop2	
  2429  01D806                     
  2430                           ;dc_motor.c: 79:     stop(mL, mR);
  2431  01D806  C01D  F019         	movff	turnLeft90@mL,stop@mL
  2432  01D80A  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  2433  01D80E  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  2434  01D812  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  2435  01D816  ECA1  F0E9         	call	_stop	;wreg free
  2436  01D81A  0012               	return		;funcret
  2437  01D81C                     __end_of_turnLeft90:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _stop *****************
  2441 ;; Defined at:
  2442 ;;		line 61 in file "dc_motor.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2445 ;;		 -> main@motorL(9), 
  2446 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2447 ;;		 -> main@motorR(9), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;Total ram usage:        4 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 2
  2466 ;; This function calls:
  2467 ;;		_setMotorPWM
  2468 ;; This function is called by:
  2469 ;;		_turnLeft90
  2470 ;;		_turnLeft135
  2471 ;;		_turnRight90
  2472 ;;		_turnRight135
  2473 ;;		_turnRight180
  2474 ;;		_reverseTurnRight90
  2475 ;;		_reverseTurnLeft90
  2476 ;;		_Black
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text8
  2481  01D342                     __ptext8:
  2482                           	callstack 0
  2483  01D342                     _stop:
  2484                           	callstack 27
  2485  01D342                     
  2486                           ;dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 62: {;d
      +                          c_motor.c: 63:     (*mL).power = 0;
  2487  01D342  C019  FFD9         	movff	stop@mL,fsr2l
  2488  01D346  C01A  FFDA         	movff	stop@mL+1,fsr2h
  2489  01D34A  0E00               	movlw	0
  2490  01D34C  6EDF               	movwf	indf2,c
  2491                           
  2492                           ;dc_motor.c: 64:     (*mR).power = 0;
  2493  01D34E  C01B  FFD9         	movff	stop@mR,fsr2l
  2494  01D352  C01C  FFDA         	movff	stop@mR+1,fsr2h
  2495  01D356  0E00               	movlw	0
  2496  01D358  6EDF               	movwf	indf2,c
  2497  01D35A                     
  2498                           ;dc_motor.c: 65:     setMotorPWM(mL);
  2499  01D35A  C019  F00E         	movff	stop@mL,setMotorPWM@m
  2500  01D35E  C01A  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  2501  01D362  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2502  01D366                     
  2503                           ;dc_motor.c: 66:     setMotorPWM(mR);
  2504  01D366  C01B  F00E         	movff	stop@mR,setMotorPWM@m
  2505  01D36A  C01C  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  2506  01D36E  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2507  01D372  0012               	return		;funcret
  2508  01D374                     __end_of_stop:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _read_colours *****************
  2512 ;; Defined at:
  2513 ;;		line 96 in file "color.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  m               2   11[COMRAM] PTR struct RGB_val
  2516 ;;		 -> main@test(20), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 3
  2535 ;; This function calls:
  2536 ;;		_color_read_Blue
  2537 ;;		_color_read_Clear
  2538 ;;		_color_read_Green
  2539 ;;		_color_read_Red
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text9
  2546  01D64E                     __ptext9:
  2547                           	callstack 0
  2548  01D64E                     _read_colours:
  2549                           	callstack 27
  2550  01D64E                     
  2551                           ;color.c: 97:     (m->C) = color_read_Clear();
  2552  01D64E  ECD6  F0EA         	call	_color_read_Clear	;wreg free
  2553  01D652  EE20 F00C          	lfsr	2,12
  2554  01D656  500C               	movf	read_colours@m^0,w,c
  2555  01D658  26D9               	addwf	fsr2l,f,c
  2556  01D65A  500D               	movf	(read_colours@m+1)^0,w,c
  2557  01D65C  22DA               	addwfc	fsr2h,f,c
  2558  01D65E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2559  01D662  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2560                           
  2561                           ;color.c: 98:     (m->R) = color_read_Red();
  2562  01D666  ECAE  F0EA         	call	_color_read_Red	;wreg free
  2563  01D66A  EE20 F00E          	lfsr	2,14
  2564  01D66E  500C               	movf	read_colours@m^0,w,c
  2565  01D670  26D9               	addwf	fsr2l,f,c
  2566  01D672  500D               	movf	(read_colours@m+1)^0,w,c
  2567  01D674  22DA               	addwfc	fsr2h,f,c
  2568  01D676  C005  FFDE         	movff	?_color_read_Red,postinc2
  2569  01D67A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2570                           
  2571                           ;color.c: 99:     (m->G) = color_read_Green();
  2572  01D67E  EC86  F0EA         	call	_color_read_Green	;wreg free
  2573  01D682  EE20 F010          	lfsr	2,16
  2574  01D686  500C               	movf	read_colours@m^0,w,c
  2575  01D688  26D9               	addwf	fsr2l,f,c
  2576  01D68A  500D               	movf	(read_colours@m+1)^0,w,c
  2577  01D68C  22DA               	addwfc	fsr2h,f,c
  2578  01D68E  C005  FFDE         	movff	?_color_read_Green,postinc2
  2579  01D692  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2580                           
  2581                           ;color.c: 100:     (m->B) = color_read_Blue();
  2582  01D696  EC5E  F0EA         	call	_color_read_Blue	;wreg free
  2583  01D69A  EE20 F012          	lfsr	2,18
  2584  01D69E  500C               	movf	read_colours@m^0,w,c
  2585  01D6A0  26D9               	addwf	fsr2l,f,c
  2586  01D6A2  500D               	movf	(read_colours@m+1)^0,w,c
  2587  01D6A4  22DA               	addwfc	fsr2h,f,c
  2588  01D6A6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2589  01D6AA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2590  01D6AE  0012               	return		;funcret
  2591  01D6B0                     __end_of_read_colours:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _color_read_Clear *****************
  2595 ;; Defined at:
  2596 ;;		line 42 in file "color.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  tmp             2    9[COMRAM] unsigned int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    4[COMRAM] unsigned int 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;Total ram usage:        7 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		_I2C_2_Master_Read
  2619 ;;		_I2C_2_Master_RepStart
  2620 ;;		_I2C_2_Master_Start
  2621 ;;		_I2C_2_Master_Stop
  2622 ;;		_I2C_2_Master_Write
  2623 ;; This function is called by:
  2624 ;;		_read_colours
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text10
  2629  01D5AC                     __ptext10:
  2630                           	callstack 0
  2631  01D5AC                     _color_read_Clear:
  2632                           	callstack 27
  2633  01D5AC                     
  2634                           ;color.c: 44:  unsigned int tmp;;color.c: 45:     I2C_2_Master_Start();
  2635  01D5AC  EC11  F0E9         	call	_I2C_2_Master_Start	;wreg free
  2636                           
  2637                           ;color.c: 46:     I2C_2_Master_Write(0x52 | 0x00);
  2638  01D5B0  0E52               	movlw	82
  2639  01D5B2  EC21  F0E9         	call	_I2C_2_Master_Write
  2640                           
  2641                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x14);
  2642  01D5B6  0EB4               	movlw	180
  2643  01D5B8  EC21  F0E9         	call	_I2C_2_Master_Write
  2644                           
  2645                           ;color.c: 48:  I2C_2_Master_RepStart();
  2646  01D5BC  EC0C  F0E9         	call	_I2C_2_Master_RepStart	;wreg free
  2647                           
  2648                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2649  01D5C0  0E53               	movlw	83
  2650  01D5C2  EC21  F0E9         	call	_I2C_2_Master_Write
  2651                           
  2652                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2653  01D5C6  0E01               	movlw	1
  2654  01D5C8  ECD4  F0E9         	call	_I2C_2_Master_Read
  2655  01D5CC  6E07               	movwf	??_color_read_Clear^0,c
  2656  01D5CE  5007               	movf	??_color_read_Clear^0,w,c
  2657  01D5D0  6E0A               	movwf	color_read_Clear@tmp^0,c
  2658  01D5D2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2659                           
  2660                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2661  01D5D4  0E00               	movlw	0
  2662  01D5D6  ECD4  F0E9         	call	_I2C_2_Master_Read
  2663  01D5DA  6E07               	movwf	??_color_read_Clear^0,c
  2664  01D5DC  5007               	movf	??_color_read_Clear^0,w,c
  2665  01D5DE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2666  01D5E0  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2667  01D5E2  500A               	movf	color_read_Clear@tmp^0,w,c
  2668  01D5E4  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2669  01D5E6  6E0A               	movwf	color_read_Clear@tmp^0,c
  2670  01D5E8  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2671  01D5EA  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2672  01D5EC  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2673                           
  2674                           ;color.c: 52:     I2C_2_Master_Stop();
  2675  01D5EE  EC16  F0E9         	call	_I2C_2_Master_Stop	;wreg free
  2676  01D5F2                     
  2677                           ;color.c: 53:     return tmp;
  2678  01D5F2  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2679  01D5F6  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2680  01D5FA  0012               	return		;funcret
  2681  01D5FC                     __end_of_color_read_Clear:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _initUSART4 *****************
  2685 ;; Defined at:
  2686 ;;		line 4 in file "serial.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text11
  2714  01D28A                     __ptext11:
  2715                           	callstack 0
  2716  01D28A                     _initUSART4:
  2717                           	callstack 30
  2718  01D28A                     
  2719                           ;serial.c: 8:     RC0PPS = 0x12;
  2720  01D28A  0E12               	movlw	18
  2721  01D28C  010E               	movlb	14	; () banked
  2722  01D28E  6F62               	movwf	98,b	;volatile
  2723                           
  2724                           ;serial.c: 9:     RX4PPS = 0x11;
  2725  01D290  0E11               	movlw	17
  2726  01D292  6F15               	movwf	21,b	;volatile
  2727  01D294                     
  2728                           ; BSR set to: 14
  2729                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  2730  01D294  8283               	bsf	131,1,c	;volatile
  2731  01D296                     
  2732                           ; BSR set to: 14
  2733                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2734  01D296  97E9               	bcf	233,3,b	;volatile
  2735  01D298                     
  2736                           ; BSR set to: 14
  2737                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2738  01D298  95E8               	bcf	232,2,b	;volatile
  2739                           
  2740                           ;serial.c: 14:     SP4BRGL = 51;
  2741  01D29A  0E33               	movlw	51
  2742  01D29C  6FE5               	movwf	229,b	;volatile
  2743                           
  2744                           ;serial.c: 15:     SP4BRGH = 0;
  2745  01D29E  0E00               	movlw	0
  2746  01D2A0  6FE6               	movwf	230,b	;volatile
  2747  01D2A2                     
  2748                           ; BSR set to: 14
  2749                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2750  01D2A2  89E7               	bsf	231,4,b	;volatile
  2751  01D2A4                     
  2752                           ; BSR set to: 14
  2753                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2754  01D2A4  8BE8               	bsf	232,5,b	;volatile
  2755  01D2A6                     
  2756                           ; BSR set to: 14
  2757                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2758  01D2A6  8FE7               	bsf	231,7,b	;volatile
  2759  01D2A8                     
  2760                           ; BSR set to: 14
  2761  01D2A8  0012               	return		;funcret
  2762  01D2AA                     __end_of_initUSART4:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _initDCmotorsPWM *****************
  2766 ;; Defined at:
  2767 ;;		line 5 in file "dc_motor.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  PWMperiod       2    0[COMRAM] int 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;Total ram usage:        2 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text12
  2795  01D3EA                     __ptext12:
  2796                           	callstack 0
  2797  01D3EA                     _initDCmotorsPWM:
  2798                           	callstack 30
  2799  01D3EA                     
  2800                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  2801  01D3EA  9485               	bcf	133,2,c	;volatile
  2802                           
  2803                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  2804  01D3EC  9E83               	bcf	131,7,c	;volatile
  2805                           
  2806                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  2807  01D3EE  9885               	bcf	133,4,c	;volatile
  2808                           
  2809                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  2810  01D3F0  9C87               	bcf	135,6,c	;volatile
  2811                           
  2812                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  2813  01D3F2  947D               	bcf	125,2,c	;volatile
  2814                           
  2815                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  2816  01D3F4  9E7B               	bcf	123,7,c	;volatile
  2817                           
  2818                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  2819  01D3F6  987D               	bcf	125,4,c	;volatile
  2820                           
  2821                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
  2822  01D3F8  9C7F               	bcf	127,6,c	;volatile
  2823  01D3FA                     
  2824                           ;dc_motor.c: 17:     T2CONbits.CKPS= 0b100;
  2825  01D3FA  50BD               	movf	189,w,c	;volatile
  2826  01D3FC  0B8F               	andlw	-113
  2827  01D3FE  0940               	iorlw	64
  2828  01D400  6EBD               	movwf	189,c	;volatile
  2829                           
  2830                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2831  01D402  0EE0               	movlw	-32
  2832  01D404  16BE               	andwf	190,f,c	;volatile
  2833                           
  2834                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2835  01D406  50BF               	movf	191,w,c	;volatile
  2836  01D408  0BF0               	andlw	-16
  2837  01D40A  0901               	iorlw	1
  2838  01D40C  6EBF               	movwf	191,c	;volatile
  2839                           
  2840                           ;dc_motor.c: 22:     T2PR= 99;
  2841  01D40E  0E63               	movlw	99
  2842  01D410  6EBC               	movwf	188,c	;volatile
  2843  01D412                     
  2844                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  2845  01D412  8EBD               	bsf	189,7,c	;volatile
  2846                           
  2847                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  2848  01D414  0E0A               	movlw	10
  2849  01D416  010E               	movlb	14	; () banked
  2850  01D418  6F74               	movwf	116,b	;volatile
  2851                           
  2852                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  2853  01D41A  0E0B               	movlw	11
  2854  01D41C  6F69               	movwf	105,b	;volatile
  2855                           
  2856                           ;dc_motor.c: 28:     PWM6DCH=0;
  2857  01D41E  0E00               	movlw	0
  2858  01D420  6EA3               	movwf	163,c	;volatile
  2859                           
  2860                           ;dc_motor.c: 29:     PWM7DCH=0;
  2861  01D422  0E00               	movlw	0
  2862  01D424  6EA0               	movwf	160,c	;volatile
  2863  01D426                     
  2864                           ; BSR set to: 14
  2865                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  2866  01D426  8EA4               	bsf	164,7,c	;volatile
  2867  01D428                     
  2868                           ; BSR set to: 14
  2869                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  2870  01D428  8EA1               	bsf	161,7,c	;volatile
  2871  01D42A                     
  2872                           ; BSR set to: 14
  2873  01D42A  0012               	return		;funcret
  2874  01D42C                     __end_of_initDCmotorsPWM:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function _forward *****************
  2878 ;; Defined at:
  2879 ;;		line 146 in file "dc_motor.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2882 ;;		 -> main@motorL(9), 
  2883 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2884 ;;		 -> main@motorR(9), 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;Total ram usage:        4 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 2
  2903 ;; This function calls:
  2904 ;;		_setMotorPWM
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;;		_Black
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text13
  2912  01D5FC                     __ptext13:
  2913                           	callstack 0
  2914  01D5FC                     _forward:
  2915                           	callstack 28
  2916  01D5FC                     
  2917                           ;dc_motor.c: 146: void forward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 147
      +                          : {;dc_motor.c: 148:     (*mL).direction = 1;
  2918  01D5FC  EE20 F001          	lfsr	2,1
  2919  01D600  5019               	movf	forward@mL^0,w,c
  2920  01D602  26D9               	addwf	fsr2l,f,c
  2921  01D604  501A               	movf	(forward@mL+1)^0,w,c
  2922  01D606  22DA               	addwfc	fsr2h,f,c
  2923  01D608  0E01               	movlw	1
  2924  01D60A  6EDF               	movwf	indf2,c
  2925                           
  2926                           ;dc_motor.c: 149:     (*mR).direction = 1;
  2927  01D60C  EE20 F001          	lfsr	2,1
  2928  01D610  501B               	movf	forward@mR^0,w,c
  2929  01D612  26D9               	addwf	fsr2l,f,c
  2930  01D614  501C               	movf	(forward@mR+1)^0,w,c
  2931  01D616  22DA               	addwfc	fsr2h,f,c
  2932  01D618  0E01               	movlw	1
  2933  01D61A  6EDF               	movwf	indf2,c
  2934  01D61C                     
  2935                           ;dc_motor.c: 150:     (*mL).power = 10;
  2936  01D61C  C019  FFD9         	movff	forward@mL,fsr2l
  2937  01D620  C01A  FFDA         	movff	forward@mL+1,fsr2h
  2938  01D624  0E0A               	movlw	10
  2939  01D626  6EDF               	movwf	indf2,c
  2940  01D628                     
  2941                           ;dc_motor.c: 151:     (*mR).power = 10;
  2942  01D628  C01B  FFD9         	movff	forward@mR,fsr2l
  2943  01D62C  C01C  FFDA         	movff	forward@mR+1,fsr2h
  2944  01D630  0E0A               	movlw	10
  2945  01D632  6EDF               	movwf	indf2,c
  2946  01D634                     
  2947                           ;dc_motor.c: 152:     setMotorPWM(mL);
  2948  01D634  C019  F00E         	movff	forward@mL,setMotorPWM@m
  2949  01D638  C01A  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  2950  01D63C  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2951  01D640                     
  2952                           ;dc_motor.c: 153:     setMotorPWM(mR);
  2953  01D640  C01B  F00E         	movff	forward@mR,setMotorPWM@m
  2954  01D644  C01C  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  2955  01D648  EC91  F0EF         	call	_setMotorPWM	;wreg free
  2956  01D64C  0012               	return		;funcret
  2957  01D64E                     __end_of_forward:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _setMotorPWM *****************
  2961 ;; Defined at:
  2962 ;;		line 37 in file "dc_motor.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2965 ;;		 -> main@motorR(9), main@motorL(9), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  PWMduty         2   22[COMRAM] int 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;Total ram usage:       11 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 1
  2984 ;; This function calls:
  2985 ;;		___lwdiv
  2986 ;;		___wmul
  2987 ;; This function is called by:
  2988 ;;		_stop
  2989 ;;		_turnLeft90
  2990 ;;		_turnLeft135
  2991 ;;		_turnRight90
  2992 ;;		_turnRight135
  2993 ;;		_turnRight180
  2994 ;;		_forward
  2995 ;;		_reverseTurnRight90
  2996 ;;		_reverseTurnLeft90
  2997 ;;		_fullSpeedAhead
  2998 ;;		_reverse
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text14
  3003  01DF22                     __ptext14:
  3004                           	callstack 0
  3005  01DF22                     _setMotorPWM:
  3006                           	callstack 27
  3007  01DF22                     
  3008                           ;dc_motor.c: 37: void setMotorPWM(struct DC_motor *m);dc_motor.c: 38: {;dc_motor.c: 39: 
      +                           int PWMduty;;dc_motor.c: 41:  if (m->direction){
  3009  01DF22  EE20 F001          	lfsr	2,1
  3010  01DF26  500E               	movf	setMotorPWM@m^0,w,c
  3011  01DF28  26D9               	addwf	fsr2l,f,c
  3012  01DF2A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3013  01DF2C  22DA               	addwfc	fsr2h,f,c
  3014  01DF2E  50DF               	movf	indf2,w,c
  3015  01DF30  B4D8               	btfsc	status,2,c
  3016  01DF32  EF9D  F0EF         	goto	u2011
  3017  01DF36  EF9F  F0EF         	goto	u2010
  3018  01DF3A                     u2011:
  3019  01DF3A  EFD0  F0EF         	goto	l2549
  3020  01DF3E                     u2010:
  3021  01DF3E                     
  3022                           ;dc_motor.c: 43:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3023  01DF3E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  3024  01DF42  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3025  01DF46  50DF               	movf	indf2,w,c
  3026  01DF48  6E10               	movwf	??_setMotorPWM^0,c
  3027  01DF4A  5010               	movf	??_setMotorPWM^0,w,c
  3028  01DF4C  6E01               	movwf	___wmul@multiplier^0,c
  3029  01DF4E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3030  01DF50  EE20 F007          	lfsr	2,7
  3031  01DF54  500E               	movf	setMotorPWM@m^0,w,c
  3032  01DF56  26D9               	addwf	fsr2l,f,c
  3033  01DF58  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3034  01DF5A  22DA               	addwfc	fsr2h,f,c
  3035  01DF5C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3036  01DF60  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3037  01DF64  EC65  F0E9         	call	___wmul	;wreg free
  3038  01DF68  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3039  01DF6C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3040  01DF70  0E00               	movlw	0
  3041  01DF72  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3042  01DF74  0E64               	movlw	100
  3043  01DF76  6E09               	movwf	___lwdiv@divisor^0,c
  3044  01DF78  EC58  F0EB         	call	___lwdiv	;wreg free
  3045  01DF7C  EE20 F007          	lfsr	2,7
  3046  01DF80  500E               	movf	setMotorPWM@m^0,w,c
  3047  01DF82  26D9               	addwf	fsr2l,f,c
  3048  01DF84  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3049  01DF86  22DA               	addwfc	fsr2h,f,c
  3050  01DF88  CFDE F011          	movff	postinc2,??_setMotorPWM+1
  3051  01DF8C  CFDD F012          	movff	postdec2,??_setMotorPWM+2
  3052  01DF90  5007               	movf	?___lwdiv^0,w,c
  3053  01DF92  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  3054  01DF94  6E17               	movwf	setMotorPWM@PWMduty^0,c
  3055  01DF96  5008               	movf	(?___lwdiv+1)^0,w,c
  3056  01DF98  5812               	subwfb	(??_setMotorPWM+2)^0,w,c
  3057  01DF9A  6E18               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3058                           
  3059                           ;dc_motor.c: 44:  }
  3060  01DF9C  EFF3  F0EF         	goto	l2551
  3061  01DFA0                     l2549:
  3062                           
  3063                           ;dc_motor.c: 47:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3064  01DFA0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  3065  01DFA4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3066  01DFA8  50DF               	movf	indf2,w,c
  3067  01DFAA  6E10               	movwf	??_setMotorPWM^0,c
  3068  01DFAC  5010               	movf	??_setMotorPWM^0,w,c
  3069  01DFAE  6E01               	movwf	___wmul@multiplier^0,c
  3070  01DFB0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3071  01DFB2  EE20 F007          	lfsr	2,7
  3072  01DFB6  500E               	movf	setMotorPWM@m^0,w,c
  3073  01DFB8  26D9               	addwf	fsr2l,f,c
  3074  01DFBA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3075  01DFBC  22DA               	addwfc	fsr2h,f,c
  3076  01DFBE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3077  01DFC2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3078  01DFC6  EC65  F0E9         	call	___wmul	;wreg free
  3079  01DFCA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3080  01DFCE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3081  01DFD2  0E00               	movlw	0
  3082  01DFD4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3083  01DFD6  0E64               	movlw	100
  3084  01DFD8  6E09               	movwf	___lwdiv@divisor^0,c
  3085  01DFDA  EC58  F0EB         	call	___lwdiv	;wreg free
  3086  01DFDE  C007  F017         	movff	?___lwdiv,setMotorPWM@PWMduty
  3087  01DFE2  C008  F018         	movff	?___lwdiv+1,setMotorPWM@PWMduty+1
  3088  01DFE6                     l2551:
  3089                           
  3090                           ;dc_motor.c: 50:  *(m->dutyHighByte) = PWMduty;
  3091  01DFE6  EE20 F002          	lfsr	2,2
  3092  01DFEA  500E               	movf	setMotorPWM@m^0,w,c
  3093  01DFEC  26D9               	addwf	fsr2l,f,c
  3094  01DFEE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3095  01DFF0  22DA               	addwfc	fsr2h,f,c
  3096  01DFF2  CFDE F010          	movff	postinc2,??_setMotorPWM
  3097  01DFF6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3098  01DFFA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3099  01DFFE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3100  01E002  C017  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3101  01E006                     
  3102                           ;dc_motor.c: 52:  if (m->direction){
  3103  01E006  EE20 F001          	lfsr	2,1
  3104  01E00A  500E               	movf	setMotorPWM@m^0,w,c
  3105  01E00C  26D9               	addwf	fsr2l,f,c
  3106  01E00E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3107  01E010  22DA               	addwfc	fsr2h,f,c
  3108  01E012  50DF               	movf	indf2,w,c
  3109  01E014  B4D8               	btfsc	status,2,c
  3110  01E016  EF0F  F0F0         	goto	u2021
  3111  01E01A  EF11  F0F0         	goto	u2020
  3112  01E01E                     u2021:
  3113  01E01E  EF46  F0F0         	goto	l2557
  3114  01E022                     u2020:
  3115  01E022                     
  3116                           ;dc_motor.c: 53:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  3117  01E022  EE20 F004          	lfsr	2,4
  3118  01E026  500E               	movf	setMotorPWM@m^0,w,c
  3119  01E028  26D9               	addwf	fsr2l,f,c
  3120  01E02A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3121  01E02C  22DA               	addwfc	fsr2h,f,c
  3122  01E02E  CFDE F010          	movff	postinc2,??_setMotorPWM
  3123  01E032  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3124  01E036  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3125  01E03A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3126  01E03E  EE10 F004          	lfsr	1,4
  3127  01E042  500E               	movf	setMotorPWM@m^0,w,c
  3128  01E044  26E1               	addwf	fsr1l,f,c
  3129  01E046  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3130  01E048  22E2               	addwfc	fsr1h,f,c
  3131  01E04A  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  3132  01E04E  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  3133  01E052  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3134  01E056  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3135  01E05A  50E7               	movf	indf1,w,c
  3136  01E05C  6E14               	movwf	(??_setMotorPWM+4)^0,c
  3137  01E05E  EE10 F006          	lfsr	1,6
  3138  01E062  500E               	movf	setMotorPWM@m^0,w,c
  3139  01E064  26E1               	addwf	fsr1l,f,c
  3140  01E066  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3141  01E068  22E2               	addwfc	fsr1h,f,c
  3142  01E06A  50E7               	movf	indf1,w,c
  3143  01E06C  6E15               	movwf	(??_setMotorPWM+5)^0,c
  3144  01E06E  0E01               	movlw	1
  3145  01E070  6E16               	movwf	(??_setMotorPWM+6)^0,c
  3146  01E072  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  3147  01E074  EF3E  F0F0         	goto	u2034
  3148  01E078                     u2035:
  3149  01E078  90D8               	bcf	status,0,c
  3150  01E07A  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  3151  01E07C                     u2034:
  3152  01E07C  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  3153  01E07E  EF3C  F0F0         	goto	u2035
  3154  01E082  5016               	movf	(??_setMotorPWM+6)^0,w,c
  3155  01E084  1014               	iorwf	(??_setMotorPWM+4)^0,w,c
  3156  01E086  6EDF               	movwf	indf2,c
  3157                           
  3158                           ;dc_motor.c: 54:  }
  3159  01E088  EF7A  F0F0         	goto	l225
  3160  01E08C                     l2557:
  3161                           
  3162                           ;dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  3163  01E08C  EE20 F004          	lfsr	2,4
  3164  01E090  500E               	movf	setMotorPWM@m^0,w,c
  3165  01E092  26D9               	addwf	fsr2l,f,c
  3166  01E094  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3167  01E096  22DA               	addwfc	fsr2h,f,c
  3168  01E098  CFDE F010          	movff	postinc2,??_setMotorPWM
  3169  01E09C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3170  01E0A0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3171  01E0A4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3172  01E0A8  EE10 F004          	lfsr	1,4
  3173  01E0AC  500E               	movf	setMotorPWM@m^0,w,c
  3174  01E0AE  26E1               	addwf	fsr1l,f,c
  3175  01E0B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3176  01E0B2  22E2               	addwfc	fsr1h,f,c
  3177  01E0B4  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  3178  01E0B8  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  3179  01E0BC  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3180  01E0C0  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3181  01E0C4  50E7               	movf	indf1,w,c
  3182  01E0C6  6E14               	movwf	(??_setMotorPWM+4)^0,c
  3183  01E0C8  EE10 F006          	lfsr	1,6
  3184  01E0CC  500E               	movf	setMotorPWM@m^0,w,c
  3185  01E0CE  26E1               	addwf	fsr1l,f,c
  3186  01E0D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3187  01E0D2  22E2               	addwfc	fsr1h,f,c
  3188  01E0D4  50E7               	movf	indf1,w,c
  3189  01E0D6  6E15               	movwf	(??_setMotorPWM+5)^0,c
  3190  01E0D8  0E01               	movlw	1
  3191  01E0DA  6E16               	movwf	(??_setMotorPWM+6)^0,c
  3192  01E0DC  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  3193  01E0DE  EF73  F0F0         	goto	u2044
  3194  01E0E2                     u2045:
  3195  01E0E2  90D8               	bcf	status,0,c
  3196  01E0E4  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  3197  01E0E6                     u2044:
  3198  01E0E6  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  3199  01E0E8  EF71  F0F0         	goto	u2045
  3200  01E0EC  5016               	movf	(??_setMotorPWM+6)^0,w,c
  3201  01E0EE  0AFF               	xorlw	255
  3202  01E0F0  1414               	andwf	(??_setMotorPWM+4)^0,w,c
  3203  01E0F2  6EDF               	movwf	indf2,c
  3204  01E0F4                     l225:
  3205  01E0F4  0012               	return		;funcret
  3206  01E0F6                     __end_of_setMotorPWM:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function ___wmul *****************
  3210 ;; Defined at:
  3211 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  multiplier      2    0[COMRAM] unsigned int 
  3214 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  product         2    4[COMRAM] unsigned int 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    0[COMRAM] unsigned int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, prodl, prodh
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;Total ram usage:        6 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_setMotorPWM
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text15
  3240  01D2CA                     __ptext15:
  3241                           	callstack 0
  3242  01D2CA                     ___wmul:
  3243                           	callstack 27
  3244  01D2CA  5001               	movf	___wmul@multiplier^0,w,c
  3245  01D2CC  0203               	mulwf	___wmul@multiplicand^0,c
  3246  01D2CE  CFF3 F005          	movff	prodl,___wmul@product
  3247  01D2D2  CFF4 F006          	movff	prodh,___wmul@product+1
  3248  01D2D6  5001               	movf	___wmul@multiplier^0,w,c
  3249  01D2D8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3250  01D2DA  50F3               	movf	243,w,c
  3251  01D2DC  2606               	addwf	(___wmul@product+1)^0,f,c
  3252  01D2DE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3253  01D2E0  0203               	mulwf	___wmul@multiplicand^0,c
  3254  01D2E2  50F3               	movf	243,w,c
  3255  01D2E4  2606               	addwf	(___wmul@product+1)^0,f,c
  3256  01D2E6  C005  F001         	movff	___wmul@product,?___wmul
  3257  01D2EA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3258  01D2EE  0012               	return		;funcret
  3259  01D2F0                     __end_of___wmul:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function ___lwdiv *****************
  3263 ;; Defined at:
  3264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  dividend        2    6[COMRAM] unsigned int 
  3267 ;;  divisor         2    8[COMRAM] unsigned int 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  quotient        2   10[COMRAM] unsigned int 
  3270 ;;  counter         1   12[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2    6[COMRAM] unsigned int 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;Total ram usage:        7 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_setMotorPWM
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text16
  3294  01D6B0                     __ptext16:
  3295                           	callstack 0
  3296  01D6B0                     ___lwdiv:
  3297                           	callstack 27
  3298  01D6B0  0E00               	movlw	0
  3299  01D6B2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3300  01D6B4  0E00               	movlw	0
  3301  01D6B6  6E0B               	movwf	___lwdiv@quotient^0,c
  3302  01D6B8  5009               	movf	___lwdiv@divisor^0,w,c
  3303  01D6BA  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3304  01D6BC  B4D8               	btfsc	status,2,c
  3305  01D6BE  EF63  F0EB         	goto	u1961
  3306  01D6C2  EF65  F0EB         	goto	u1960
  3307  01D6C6                     u1961:
  3308  01D6C6  EF8D  F0EB         	goto	l989
  3309  01D6CA                     u1960:
  3310  01D6CA  0E01               	movlw	1
  3311  01D6CC  6E0D               	movwf	___lwdiv@counter^0,c
  3312  01D6CE  EF6D  F0EB         	goto	l2527
  3313  01D6D2                     l2525:
  3314  01D6D2  90D8               	bcf	status,0,c
  3315  01D6D4  3609               	rlcf	___lwdiv@divisor^0,f,c
  3316  01D6D6  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3317  01D6D8  2A0D               	incf	___lwdiv@counter^0,f,c
  3318  01D6DA                     l2527:
  3319  01D6DA  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3320  01D6DC  EF72  F0EB         	goto	u1971
  3321  01D6E0  EF74  F0EB         	goto	u1970
  3322  01D6E4                     u1971:
  3323  01D6E4  EF69  F0EB         	goto	l2525
  3324  01D6E8                     u1970:
  3325  01D6E8                     l2529:
  3326  01D6E8  90D8               	bcf	status,0,c
  3327  01D6EA  360B               	rlcf	___lwdiv@quotient^0,f,c
  3328  01D6EC  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3329  01D6EE  5009               	movf	___lwdiv@divisor^0,w,c
  3330  01D6F0  5C07               	subwf	___lwdiv@dividend^0,w,c
  3331  01D6F2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3332  01D6F4  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3333  01D6F6  A0D8               	btfss	status,0,c
  3334  01D6F8  EF80  F0EB         	goto	u1981
  3335  01D6FC  EF82  F0EB         	goto	u1980
  3336  01D700                     u1981:
  3337  01D700  EF87  F0EB         	goto	l2537
  3338  01D704                     u1980:
  3339  01D704  5009               	movf	___lwdiv@divisor^0,w,c
  3340  01D706  5E07               	subwf	___lwdiv@dividend^0,f,c
  3341  01D708  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3342  01D70A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3343  01D70C  800B               	bsf	___lwdiv@quotient^0,0,c
  3344  01D70E                     l2537:
  3345  01D70E  90D8               	bcf	status,0,c
  3346  01D710  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3347  01D712  3209               	rrcf	___lwdiv@divisor^0,f,c
  3348  01D714  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3349  01D716  EF74  F0EB         	goto	l2529
  3350  01D71A                     l989:
  3351  01D71A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3352  01D71E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3353  01D722  0012               	return		;funcret
  3354  01D724                     __end_of___lwdiv:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _determine_color_new *****************
  3358 ;; Defined at:
  3359 ;;		line 120 in file "color.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  m               2   90[COMRAM] PTR struct RGB_val
  3362 ;;		 -> main@test(20), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  RelB            4   30[BANK0 ] float 
  3365 ;;  RelG            4   26[BANK0 ] float 
  3366 ;;  RelR            4   22[BANK0 ] float 
  3367 ;;  lumin           2   20[BANK0 ] unsigned int 
  3368 ;;  out             2   18[BANK0 ] unsigned int 
  3369 ;;  BlueRatio       2   16[BANK0 ] unsigned int 
  3370 ;;  GreenRatio      2   14[BANK0 ] unsigned int 
  3371 ;;  RedRatio        2   12[BANK0 ] unsigned int 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2   90[COMRAM] unsigned int 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:       36 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 2
  3388 ;; This function calls:
  3389 ;;		___fladd
  3390 ;;		___fldiv
  3391 ;;		___flmul
  3392 ;;		___fltol
  3393 ;;		___xxtofl
  3394 ;;		_isbtw
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text17
  3401  01F2E0                     __ptext17:
  3402                           	callstack 0
  3403  01F2E0                     _determine_color_new:
  3404                           	callstack 28
  3405  01F2E0                     
  3406                           ;color.c: 121:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 122:     float
      +                           RelR, RelG, RelB;;color.c: 123:     unsigned int out = 9;
  3407  01F2E0  0E00               	movlw	0
  3408  01F2E2  0100               	movlb	0	; () banked
  3409  01F2E4  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3410  01F2E6  0E09               	movlw	9
  3411  01F2E8  6F72               	movwf	determine_color_new@out& (0+255),b
  3412  01F2EA                     
  3413                           ; BSR set to: 0
  3414                           ;color.c: 125:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  3415  01F2EA  0E59               	movlw	89
  3416  01F2EC  6E2C               	movwf	___flmul@a^0,c
  3417  01F2EE  0E17               	movlw	23
  3418  01F2F0  6E2D               	movwf	(___flmul@a+1)^0,c
  3419  01F2F2  0E37               	movlw	55
  3420  01F2F4  6E2E               	movwf	(___flmul@a+2)^0,c
  3421  01F2F6  0E3F               	movlw	63
  3422  01F2F8  6E2F               	movwf	(___flmul@a+3)^0,c
  3423  01F2FA  EE20 F010          	lfsr	2,16
  3424  01F2FE  505B               	movf	determine_color_new@m^0,w,c
  3425  01F300  26D9               	addwf	fsr2l,f,c
  3426  01F302  505C               	movf	(determine_color_new@m+1)^0,w,c
  3427  01F304  22DA               	addwfc	fsr2h,f,c
  3428  01F306  CFDE F060          	movff	postinc2,??_determine_color_new
  3429  01F30A  CFDD F061          	movff	postdec2,??_determine_color_new+1
  3430  01F30E  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  3431  01F312  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  3432  01F316  6A03               	clrf	(___xxtofl@val+2)^0,c
  3433  01F318  6A04               	clrf	(___xxtofl@val+3)^0,c
  3434  01F31A  0E00               	movlw	0
  3435  01F31C  ECB7  F0EE         	call	___xxtofl
  3436  01F320  C001  F028         	movff	?___xxtofl,___flmul@b
  3437  01F324  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3438  01F328  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3439  01F32C  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3440  01F330  EC48  F0F2         	call	___flmul	;wreg free
  3441  01F334  C028  F045         	movff	?___flmul,___fladd@a
  3442  01F338  C029  F046         	movff	?___flmul+1,___fladd@a+1
  3443  01F33C  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  3444  01F340  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  3445  01F344  0ED0               	movlw	208
  3446  01F346  6E2C               	movwf	___flmul@a^0,c
  3447  01F348  0EB3               	movlw	179
  3448  01F34A  6E2D               	movwf	(___flmul@a+1)^0,c
  3449  01F34C  0E59               	movlw	89
  3450  01F34E  6E2E               	movwf	(___flmul@a+2)^0,c
  3451  01F350  0E3E               	movlw	62
  3452  01F352  6E2F               	movwf	(___flmul@a+3)^0,c
  3453  01F354  EE20 F00E          	lfsr	2,14
  3454  01F358  505B               	movf	determine_color_new@m^0,w,c
  3455  01F35A  26D9               	addwf	fsr2l,f,c
  3456  01F35C  505C               	movf	(determine_color_new@m+1)^0,w,c
  3457  01F35E  22DA               	addwfc	fsr2h,f,c
  3458  01F360  CFDE F062          	movff	postinc2,??_determine_color_new+2
  3459  01F364  CFDD F063          	movff	postdec2,??_determine_color_new+3
  3460  01F368  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  3461  01F36C  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  3462  01F370  6A03               	clrf	(___xxtofl@val+2)^0,c
  3463  01F372  6A04               	clrf	(___xxtofl@val+3)^0,c
  3464  01F374  0E00               	movlw	0
  3465  01F376  ECB7  F0EE         	call	___xxtofl
  3466  01F37A  C001  F028         	movff	?___xxtofl,___flmul@b
  3467  01F37E  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3468  01F382  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3469  01F386  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3470  01F38A  EC48  F0F2         	call	___flmul	;wreg free
  3471  01F38E  C028  F041         	movff	?___flmul,___fladd@b
  3472  01F392  C029  F042         	movff	?___flmul+1,___fladd@b+1
  3473  01F396  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  3474  01F39A  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  3475  01F39E  EC5D  F0F4         	call	___fladd	;wreg free
  3476  01F3A2  C041  F068         	movff	?___fladd,_determine_color_new$2615
  3477  01F3A6  C042  F069         	movff	?___fladd+1,_determine_color_new$2615+1
  3478  01F3AA  C043  F06A         	movff	?___fladd+2,_determine_color_new$2615+2
  3479  01F3AE  C044  F06B         	movff	?___fladd+3,_determine_color_new$2615+3
  3480  01F3B2                     
  3481                           ;color.c: 125:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  3482  01F3B2  0E98               	movlw	152
  3483  01F3B4  6E2C               	movwf	___flmul@a^0,c
  3484  01F3B6  0EDD               	movlw	221
  3485  01F3B8  6E2D               	movwf	(___flmul@a+1)^0,c
  3486  01F3BA  0E93               	movlw	147
  3487  01F3BC  6E2E               	movwf	(___flmul@a+2)^0,c
  3488  01F3BE  0E3D               	movlw	61
  3489  01F3C0  6E2F               	movwf	(___flmul@a+3)^0,c
  3490  01F3C2  EE20 F012          	lfsr	2,18
  3491  01F3C6  505B               	movf	determine_color_new@m^0,w,c
  3492  01F3C8  26D9               	addwf	fsr2l,f,c
  3493  01F3CA  505C               	movf	(determine_color_new@m+1)^0,w,c
  3494  01F3CC  22DA               	addwfc	fsr2h,f,c
  3495  01F3CE  CFDE F060          	movff	postinc2,??_determine_color_new
  3496  01F3D2  CFDD F061          	movff	postdec2,??_determine_color_new+1
  3497  01F3D6  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  3498  01F3DA  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  3499  01F3DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3500  01F3E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3501  01F3E2  0E00               	movlw	0
  3502  01F3E4  ECB7  F0EE         	call	___xxtofl
  3503  01F3E8  C001  F028         	movff	?___xxtofl,___flmul@b
  3504  01F3EC  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3505  01F3F0  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3506  01F3F4  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3507  01F3F8  EC48  F0F2         	call	___flmul	;wreg free
  3508  01F3FC  C028  F045         	movff	?___flmul,___fladd@a
  3509  01F400  C029  F046         	movff	?___flmul+1,___fladd@a+1
  3510  01F404  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  3511  01F408  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  3512  01F40C  C068  F041         	movff	_determine_color_new$2615,___fladd@b
  3513  01F410  C069  F042         	movff	_determine_color_new$2615+1,___fladd@b+1
  3514  01F414  C06A  F043         	movff	_determine_color_new$2615+2,___fladd@b+2
  3515  01F418  C06B  F044         	movff	_determine_color_new$2615+3,___fladd@b+3
  3516  01F41C  EC5D  F0F4         	call	___fladd	;wreg free
  3517  01F420  C041  F051         	movff	?___fladd,___fltol@f1
  3518  01F424  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  3519  01F428  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  3520  01F42C  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  3521  01F430  EC34  F0EE         	call	___fltol	;wreg free
  3522  01F434  C051  F074         	movff	?___fltol,determine_color_new@lumin
  3523  01F438  C052  F075         	movff	?___fltol+1,determine_color_new@lumin+1
  3524  01F43C                     
  3525                           ;color.c: 128:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  3526  01F43C  0E00               	movlw	0
  3527  01F43E  6E2C               	movwf	___flmul@a^0,c
  3528  01F440  0E40               	movlw	64
  3529  01F442  6E2D               	movwf	(___flmul@a+1)^0,c
  3530  01F444  0E1C               	movlw	28
  3531  01F446  6E2E               	movwf	(___flmul@a+2)^0,c
  3532  01F448  0E46               	movlw	70
  3533  01F44A  6E2F               	movwf	(___flmul@a+3)^0,c
  3534  01F44C  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  3535  01F450  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  3536  01F454  CFDE F060          	movff	postinc2,??_determine_color_new
  3537  01F458  CFDD F061          	movff	postdec2,??_determine_color_new+1
  3538  01F45C  EE20 F006          	lfsr	2,6
  3539  01F460  505B               	movf	determine_color_new@m^0,w,c
  3540  01F462  26D9               	addwf	fsr2l,f,c
  3541  01F464  505C               	movf	(determine_color_new@m+1)^0,w,c
  3542  01F466  22DA               	addwfc	fsr2h,f,c
  3543  01F468  CFDE F062          	movff	postinc2,??_determine_color_new+2
  3544  01F46C  CFDD F063          	movff	postdec2,??_determine_color_new+3
  3545  01F470  0100               	movlb	0	; () banked
  3546  01F472  5160               	movf	??_determine_color_new& (0+255),w,b
  3547  01F474  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  3548  01F476  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  3549  01F478  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  3550  01F47A  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  3551  01F47E  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  3552  01F482  6A03               	clrf	(___xxtofl@val+2)^0,c
  3553  01F484  6A04               	clrf	(___xxtofl@val+3)^0,c
  3554  01F486  0E00               	movlw	0
  3555  01F488  ECB7  F0EE         	call	___xxtofl
  3556  01F48C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3557  01F490  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3558  01F494  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3559  01F498  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3560  01F49C  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  3561  01F4A0  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  3562  01F4A4  CFDE F064          	movff	postinc2,??_determine_color_new+4
  3563  01F4A8  CFDD F065          	movff	postdec2,??_determine_color_new+5
  3564  01F4AC  EE20 F00E          	lfsr	2,14
  3565  01F4B0  505B               	movf	determine_color_new@m^0,w,c
  3566  01F4B2  26D9               	addwf	fsr2l,f,c
  3567  01F4B4  505C               	movf	(determine_color_new@m+1)^0,w,c
  3568  01F4B6  22DA               	addwfc	fsr2h,f,c
  3569  01F4B8  CFDE F066          	movff	postinc2,??_determine_color_new+6
  3570  01F4BC  CFDD F067          	movff	postdec2,??_determine_color_new+7
  3571  01F4C0  0100               	movlb	0	; () banked
  3572  01F4C2  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  3573  01F4C4  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  3574  01F4C6  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  3575  01F4C8  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  3576  01F4CA  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  3577  01F4CE  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  3578  01F4D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3579  01F4D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3580  01F4D6  0E00               	movlw	0
  3581  01F4D8  ECB7  F0EE         	call	___xxtofl
  3582  01F4DC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3583  01F4E0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3584  01F4E4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3585  01F4E8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3586  01F4EC  EC7B  F0F0         	call	___fldiv	;wreg free
  3587  01F4F0  C00F  F028         	movff	?___fldiv,___flmul@b
  3588  01F4F4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3589  01F4F8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3590  01F4FC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3591  01F500  EC48  F0F2         	call	___flmul	;wreg free
  3592  01F504  C028  F051         	movff	?___flmul,___fltol@f1
  3593  01F508  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  3594  01F50C  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  3595  01F510  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  3596  01F514  EC34  F0EE         	call	___fltol	;wreg free
  3597  01F518  C051  F06C         	movff	?___fltol,determine_color_new@RedRatio
  3598  01F51C  C052  F06D         	movff	?___fltol+1,determine_color_new@RedRatio+1
  3599  01F520                     
  3600                           ;color.c: 129:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  3601  01F520  0E00               	movlw	0
  3602  01F522  6E2C               	movwf	___flmul@a^0,c
  3603  01F524  0E40               	movlw	64
  3604  01F526  6E2D               	movwf	(___flmul@a+1)^0,c
  3605  01F528  0E1C               	movlw	28
  3606  01F52A  6E2E               	movwf	(___flmul@a+2)^0,c
  3607  01F52C  0E46               	movlw	70
  3608  01F52E  6E2F               	movwf	(___flmul@a+3)^0,c
  3609  01F530  EE20 F002          	lfsr	2,2
  3610  01F534  505B               	movf	determine_color_new@m^0,w,c
  3611  01F536  26D9               	addwf	fsr2l,f,c
  3612  01F538  505C               	movf	(determine_color_new@m+1)^0,w,c
  3613  01F53A  22DA               	addwfc	fsr2h,f,c
  3614  01F53C  CFDE F060          	movff	postinc2,??_determine_color_new
  3615  01F540  CFDD F061          	movff	postdec2,??_determine_color_new+1
  3616  01F544  EE20 F008          	lfsr	2,8
  3617  01F548  505B               	movf	determine_color_new@m^0,w,c
  3618  01F54A  26D9               	addwf	fsr2l,f,c
  3619  01F54C  505C               	movf	(determine_color_new@m+1)^0,w,c
  3620  01F54E  22DA               	addwfc	fsr2h,f,c
  3621  01F550  CFDE F062          	movff	postinc2,??_determine_color_new+2
  3622  01F554  CFDD F063          	movff	postdec2,??_determine_color_new+3
  3623  01F558  0100               	movlb	0	; () banked
  3624  01F55A  5160               	movf	??_determine_color_new& (0+255),w,b
  3625  01F55C  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  3626  01F55E  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  3627  01F560  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  3628  01F562  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  3629  01F566  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  3630  01F56A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3631  01F56C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3632  01F56E  0E00               	movlw	0
  3633  01F570  ECB7  F0EE         	call	___xxtofl
  3634  01F574  C001  F013         	movff	?___xxtofl,___fldiv@a
  3635  01F578  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3636  01F57C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3637  01F580  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3638  01F584  EE20 F002          	lfsr	2,2
  3639  01F588  505B               	movf	determine_color_new@m^0,w,c
  3640  01F58A  26D9               	addwf	fsr2l,f,c
  3641  01F58C  505C               	movf	(determine_color_new@m+1)^0,w,c
  3642  01F58E  22DA               	addwfc	fsr2h,f,c
  3643  01F590  CFDE F064          	movff	postinc2,??_determine_color_new+4
  3644  01F594  CFDD F065          	movff	postdec2,??_determine_color_new+5
  3645  01F598  EE20 F010          	lfsr	2,16
  3646  01F59C  505B               	movf	determine_color_new@m^0,w,c
  3647  01F59E  26D9               	addwf	fsr2l,f,c
  3648  01F5A0  505C               	movf	(determine_color_new@m+1)^0,w,c
  3649  01F5A2  22DA               	addwfc	fsr2h,f,c
  3650  01F5A4  CFDE F066          	movff	postinc2,??_determine_color_new+6
  3651  01F5A8  CFDD F067          	movff	postdec2,??_determine_color_new+7
  3652  01F5AC  0100               	movlb	0	; () banked
  3653  01F5AE  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  3654  01F5B0  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  3655  01F5B2  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  3656  01F5B4  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  3657  01F5B6  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  3658  01F5BA  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  3659  01F5BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3660  01F5C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3661  01F5C2  0E00               	movlw	0
  3662  01F5C4  ECB7  F0EE         	call	___xxtofl
  3663  01F5C8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3664  01F5CC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3665  01F5D0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3666  01F5D4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3667  01F5D8  EC7B  F0F0         	call	___fldiv	;wreg free
  3668  01F5DC  C00F  F028         	movff	?___fldiv,___flmul@b
  3669  01F5E0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3670  01F5E4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3671  01F5E8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3672  01F5EC  EC48  F0F2         	call	___flmul	;wreg free
  3673  01F5F0  C028  F051         	movff	?___flmul,___fltol@f1
  3674  01F5F4  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  3675  01F5F8  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  3676  01F5FC  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  3677  01F600  EC34  F0EE         	call	___fltol	;wreg free
  3678  01F604  C051  F06E         	movff	?___fltol,determine_color_new@GreenRatio
  3679  01F608  C052  F06F         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  3680  01F60C                     
  3681                           ;color.c: 130:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  3682  01F60C  0E00               	movlw	0
  3683  01F60E  6E2C               	movwf	___flmul@a^0,c
  3684  01F610  0E40               	movlw	64
  3685  01F612  6E2D               	movwf	(___flmul@a+1)^0,c
  3686  01F614  0E1C               	movlw	28
  3687  01F616  6E2E               	movwf	(___flmul@a+2)^0,c
  3688  01F618  0E46               	movlw	70
  3689  01F61A  6E2F               	movwf	(___flmul@a+3)^0,c
  3690  01F61C  EE20 F004          	lfsr	2,4
  3691  01F620  505B               	movf	determine_color_new@m^0,w,c
  3692  01F622  26D9               	addwf	fsr2l,f,c
  3693  01F624  505C               	movf	(determine_color_new@m+1)^0,w,c
  3694  01F626  22DA               	addwfc	fsr2h,f,c
  3695  01F628  CFDE F060          	movff	postinc2,??_determine_color_new
  3696  01F62C  CFDD F061          	movff	postdec2,??_determine_color_new+1
  3697  01F630  EE20 F00A          	lfsr	2,10
  3698  01F634  505B               	movf	determine_color_new@m^0,w,c
  3699  01F636  26D9               	addwf	fsr2l,f,c
  3700  01F638  505C               	movf	(determine_color_new@m+1)^0,w,c
  3701  01F63A  22DA               	addwfc	fsr2h,f,c
  3702  01F63C  CFDE F062          	movff	postinc2,??_determine_color_new+2
  3703  01F640  CFDD F063          	movff	postdec2,??_determine_color_new+3
  3704  01F644  0100               	movlb	0	; () banked
  3705  01F646  5160               	movf	??_determine_color_new& (0+255),w,b
  3706  01F648  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  3707  01F64A  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  3708  01F64C  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  3709  01F64E  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  3710  01F652  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  3711  01F656  6A03               	clrf	(___xxtofl@val+2)^0,c
  3712  01F658  6A04               	clrf	(___xxtofl@val+3)^0,c
  3713  01F65A  0E00               	movlw	0
  3714  01F65C  ECB7  F0EE         	call	___xxtofl
  3715  01F660  C001  F013         	movff	?___xxtofl,___fldiv@a
  3716  01F664  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3717  01F668  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3718  01F66C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3719  01F670  EE20 F004          	lfsr	2,4
  3720  01F674  505B               	movf	determine_color_new@m^0,w,c
  3721  01F676  26D9               	addwf	fsr2l,f,c
  3722  01F678  505C               	movf	(determine_color_new@m+1)^0,w,c
  3723  01F67A  22DA               	addwfc	fsr2h,f,c
  3724  01F67C  CFDE F064          	movff	postinc2,??_determine_color_new+4
  3725  01F680  CFDD F065          	movff	postdec2,??_determine_color_new+5
  3726  01F684  EE20 F012          	lfsr	2,18
  3727  01F688  505B               	movf	determine_color_new@m^0,w,c
  3728  01F68A  26D9               	addwf	fsr2l,f,c
  3729  01F68C  505C               	movf	(determine_color_new@m+1)^0,w,c
  3730  01F68E  22DA               	addwfc	fsr2h,f,c
  3731  01F690  CFDE F066          	movff	postinc2,??_determine_color_new+6
  3732  01F694  CFDD F067          	movff	postdec2,??_determine_color_new+7
  3733  01F698  0100               	movlb	0	; () banked
  3734  01F69A  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  3735  01F69C  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  3736  01F69E  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  3737  01F6A0  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  3738  01F6A2  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  3739  01F6A6  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  3740  01F6AA  6A03               	clrf	(___xxtofl@val+2)^0,c
  3741  01F6AC  6A04               	clrf	(___xxtofl@val+3)^0,c
  3742  01F6AE  0E00               	movlw	0
  3743  01F6B0  ECB7  F0EE         	call	___xxtofl
  3744  01F6B4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3745  01F6B8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3746  01F6BC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3747  01F6C0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3748  01F6C4  EC7B  F0F0         	call	___fldiv	;wreg free
  3749  01F6C8  C00F  F028         	movff	?___fldiv,___flmul@b
  3750  01F6CC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3751  01F6D0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3752  01F6D4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3753  01F6D8  EC48  F0F2         	call	___flmul	;wreg free
  3754  01F6DC  C028  F051         	movff	?___flmul,___fltol@f1
  3755  01F6E0  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  3756  01F6E4  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  3757  01F6E8  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  3758  01F6EC  EC34  F0EE         	call	___fltol	;wreg free
  3759  01F6F0  C051  F070         	movff	?___fltol,determine_color_new@BlueRatio
  3760  01F6F4  C052  F071         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  3761  01F6F8                     
  3762                           ;color.c: 132:     RelR = (float)RedRatio / (float)GreenRatio;
  3763  01F6F8  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  3764  01F6FC  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  3765  01F700  6A03               	clrf	(___xxtofl@val+2)^0,c
  3766  01F702  6A04               	clrf	(___xxtofl@val+3)^0,c
  3767  01F704  0E00               	movlw	0
  3768  01F706  ECB7  F0EE         	call	___xxtofl
  3769  01F70A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3770  01F70E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3771  01F712  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3772  01F716  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3773  01F71A  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  3774  01F71E  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  3775  01F722  6A03               	clrf	(___xxtofl@val+2)^0,c
  3776  01F724  6A04               	clrf	(___xxtofl@val+3)^0,c
  3777  01F726  0E00               	movlw	0
  3778  01F728  ECB7  F0EE         	call	___xxtofl
  3779  01F72C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3780  01F730  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3781  01F734  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3782  01F738  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3783  01F73C  EC7B  F0F0         	call	___fldiv	;wreg free
  3784  01F740  C00F  F076         	movff	?___fldiv,determine_color_new@RelR
  3785  01F744  C010  F077         	movff	?___fldiv+1,determine_color_new@RelR+1
  3786  01F748  C011  F078         	movff	?___fldiv+2,determine_color_new@RelR+2
  3787  01F74C  C012  F079         	movff	?___fldiv+3,determine_color_new@RelR+3
  3788  01F750                     
  3789                           ;color.c: 133:     RelG = (float)RedRatio / (float)BlueRatio;
  3790  01F750  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  3791  01F754  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  3792  01F758  6A03               	clrf	(___xxtofl@val+2)^0,c
  3793  01F75A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3794  01F75C  0E00               	movlw	0
  3795  01F75E  ECB7  F0EE         	call	___xxtofl
  3796  01F762  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3797  01F766  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3798  01F76A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3799  01F76E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3800  01F772  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  3801  01F776  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  3802  01F77A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3803  01F77C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3804  01F77E  0E00               	movlw	0
  3805  01F780  ECB7  F0EE         	call	___xxtofl
  3806  01F784  C001  F013         	movff	?___xxtofl,___fldiv@a
  3807  01F788  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3808  01F78C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3809  01F790  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3810  01F794  EC7B  F0F0         	call	___fldiv	;wreg free
  3811  01F798  C00F  F07A         	movff	?___fldiv,determine_color_new@RelG
  3812  01F79C  C010  F07B         	movff	?___fldiv+1,determine_color_new@RelG+1
  3813  01F7A0  C011  F07C         	movff	?___fldiv+2,determine_color_new@RelG+2
  3814  01F7A4  C012  F07D         	movff	?___fldiv+3,determine_color_new@RelG+3
  3815  01F7A8                     
  3816                           ;color.c: 134:     RelB = (float)BlueRatio / (float)GreenRatio;
  3817  01F7A8  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  3818  01F7AC  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  3819  01F7B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3820  01F7B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3821  01F7B4  0E00               	movlw	0
  3822  01F7B6  ECB7  F0EE         	call	___xxtofl
  3823  01F7BA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3824  01F7BE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3825  01F7C2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3826  01F7C6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3827  01F7CA  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  3828  01F7CE  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  3829  01F7D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3830  01F7D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3831  01F7D6  0E00               	movlw	0
  3832  01F7D8  ECB7  F0EE         	call	___xxtofl
  3833  01F7DC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3834  01F7E0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3835  01F7E4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3836  01F7E8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3837  01F7EC  EC7B  F0F0         	call	___fldiv	;wreg free
  3838  01F7F0  C00F  F07E         	movff	?___fldiv,determine_color_new@RelB
  3839  01F7F4  C010  F07F         	movff	?___fldiv+1,determine_color_new@RelB+1
  3840  01F7F8  C011  F080         	movff	?___fldiv+2,determine_color_new@RelB+2
  3841  01F7FC  C012  F081         	movff	?___fldiv+3,determine_color_new@RelB+3
  3842  01F800                     
  3843                           ;color.c: 136:     if (RelR < 0) {RelR = 0;}
  3844  01F800  0100               	movlb	0	; () banked
  3845  01F802  BF79               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  3846  01F804  EF08  F0FC         	goto	u3120
  3847  01F808  EF06  F0FC         	goto	u3121
  3848  01F80C                     u3121:
  3849  01F80C  EF10  F0FC         	goto	l3295
  3850  01F810                     u3120:
  3851  01F810                     
  3852                           ; BSR set to: 0
  3853  01F810  0E00               	movlw	0
  3854  01F812  6F76               	movwf	determine_color_new@RelR& (0+255),b
  3855  01F814  0E00               	movlw	0
  3856  01F816  6F77               	movwf	(determine_color_new@RelR+1)& (0+255),b
  3857  01F818  0E00               	movlw	0
  3858  01F81A  6F78               	movwf	(determine_color_new@RelR+2)& (0+255),b
  3859  01F81C  0E00               	movlw	0
  3860  01F81E  6F79               	movwf	(determine_color_new@RelR+3)& (0+255),b
  3861  01F820                     l3295:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;color.c: 137:     if (RelG < 0) {RelG = 0;}
  3865  01F820  BF7D               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  3866  01F822  EF17  F0FC         	goto	u3130
  3867  01F826  EF15  F0FC         	goto	u3131
  3868  01F82A                     u3131:
  3869  01F82A  EF1F  F0FC         	goto	l3299
  3870  01F82E                     u3130:
  3871  01F82E                     
  3872                           ; BSR set to: 0
  3873  01F82E  0E00               	movlw	0
  3874  01F830  6F7A               	movwf	determine_color_new@RelG& (0+255),b
  3875  01F832  0E00               	movlw	0
  3876  01F834  6F7B               	movwf	(determine_color_new@RelG+1)& (0+255),b
  3877  01F836  0E00               	movlw	0
  3878  01F838  6F7C               	movwf	(determine_color_new@RelG+2)& (0+255),b
  3879  01F83A  0E00               	movlw	0
  3880  01F83C  6F7D               	movwf	(determine_color_new@RelG+3)& (0+255),b
  3881  01F83E                     l3299:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;color.c: 138:     if (RelB < 0) {RelB = 0;}
  3885  01F83E  BF81               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  3886  01F840  EF26  F0FC         	goto	u3140
  3887  01F844  EF24  F0FC         	goto	u3141
  3888  01F848                     u3141:
  3889  01F848  EF2E  F0FC         	goto	l3303
  3890  01F84C                     u3140:
  3891  01F84C                     
  3892                           ; BSR set to: 0
  3893  01F84C  0E00               	movlw	0
  3894  01F84E  6F7E               	movwf	determine_color_new@RelB& (0+255),b
  3895  01F850  0E00               	movlw	0
  3896  01F852  6F7F               	movwf	(determine_color_new@RelB+1)& (0+255),b
  3897  01F854  0E00               	movlw	0
  3898  01F856  6F80               	movwf	(determine_color_new@RelB+2)& (0+255),b
  3899  01F858  0E00               	movlw	0
  3900  01F85A  6F81               	movwf	(determine_color_new@RelB+3)& (0+255),b
  3901  01F85C                     l3303:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;color.c: 141:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1 && lumin>800)
  3905  01F85C  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3906  01F860  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3907  01F864  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3908  01F868  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3909  01F86C  0E33               	movlw	51
  3910  01F86E  6E11               	movwf	isbtw@low^0,c
  3911  01F870  0E33               	movlw	51
  3912  01F872  6E12               	movwf	(isbtw@low+1)^0,c
  3913  01F874  0EA3               	movlw	163
  3914  01F876  6E13               	movwf	(isbtw@low+2)^0,c
  3915  01F878  0E40               	movlw	64
  3916  01F87A  6E14               	movwf	(isbtw@low+3)^0,c
  3917  01F87C  0E00               	movlw	0
  3918  01F87E  6E15               	movwf	isbtw@high^0,c
  3919  01F880  0E00               	movlw	0
  3920  01F882  6E16               	movwf	(isbtw@high+1)^0,c
  3921  01F884  0EA4               	movlw	164
  3922  01F886  6E17               	movwf	(isbtw@high+2)^0,c
  3923  01F888  0E41               	movlw	65
  3924  01F88A  6E18               	movwf	(isbtw@high+3)^0,c
  3925  01F88C  EC92  F0EB         	call	_isbtw	;wreg free
  3926  01F890  040D               	decf	?_isbtw^0,w,c
  3927  01F892  100E               	iorwf	(?_isbtw+1)^0,w,c
  3928  01F894  A4D8               	btfss	status,2,c
  3929  01F896  EF4F  F0FC         	goto	u3151
  3930  01F89A  EF51  F0FC         	goto	u3150
  3931  01F89E                     u3151:
  3932  01F89E  EFA7  F0FC         	goto	l3313
  3933  01F8A2                     u3150:
  3934  01F8A2  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3935  01F8A6  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3936  01F8AA  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3937  01F8AE  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3938  01F8B2  0ECD               	movlw	205
  3939  01F8B4  6E11               	movwf	isbtw@low^0,c
  3940  01F8B6  0ECC               	movlw	204
  3941  01F8B8  6E12               	movwf	(isbtw@low+1)^0,c
  3942  01F8BA  0E0C               	movlw	12
  3943  01F8BC  6E13               	movwf	(isbtw@low+2)^0,c
  3944  01F8BE  0E40               	movlw	64
  3945  01F8C0  6E14               	movwf	(isbtw@low+3)^0,c
  3946  01F8C2  0E33               	movlw	51
  3947  01F8C4  6E15               	movwf	isbtw@high^0,c
  3948  01F8C6  0E33               	movlw	51
  3949  01F8C8  6E16               	movwf	(isbtw@high+1)^0,c
  3950  01F8CA  0E73               	movlw	115
  3951  01F8CC  6E17               	movwf	(isbtw@high+2)^0,c
  3952  01F8CE  0E40               	movlw	64
  3953  01F8D0  6E18               	movwf	(isbtw@high+3)^0,c
  3954  01F8D2  EC92  F0EB         	call	_isbtw	;wreg free
  3955  01F8D6  040D               	decf	?_isbtw^0,w,c
  3956  01F8D8  100E               	iorwf	(?_isbtw+1)^0,w,c
  3957  01F8DA  A4D8               	btfss	status,2,c
  3958  01F8DC  EF72  F0FC         	goto	u3161
  3959  01F8E0  EF74  F0FC         	goto	u3160
  3960  01F8E4                     u3161:
  3961  01F8E4  EFA7  F0FC         	goto	l3313
  3962  01F8E8                     u3160:
  3963  01F8E8  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3964  01F8EC  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3965  01F8F0  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3966  01F8F4  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3967  01F8F8  0E66               	movlw	102
  3968  01F8FA  6E11               	movwf	isbtw@low^0,c
  3969  01F8FC  0E66               	movlw	102
  3970  01F8FE  6E12               	movwf	(isbtw@low+1)^0,c
  3971  01F900  0EE6               	movlw	230
  3972  01F902  6E13               	movwf	(isbtw@low+2)^0,c
  3973  01F904  0E3F               	movlw	63
  3974  01F906  6E14               	movwf	(isbtw@low+3)^0,c
  3975  01F908  0E00               	movlw	0
  3976  01F90A  6E15               	movwf	isbtw@high^0,c
  3977  01F90C  0E00               	movlw	0
  3978  01F90E  6E16               	movwf	(isbtw@high+1)^0,c
  3979  01F910  0EB0               	movlw	176
  3980  01F912  6E17               	movwf	(isbtw@high+2)^0,c
  3981  01F914  0E40               	movlw	64
  3982  01F916  6E18               	movwf	(isbtw@high+3)^0,c
  3983  01F918  EC92  F0EB         	call	_isbtw	;wreg free
  3984  01F91C  040D               	decf	?_isbtw^0,w,c
  3985  01F91E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3986  01F920  A4D8               	btfss	status,2,c
  3987  01F922  EF95  F0FC         	goto	u3171
  3988  01F926  EF97  F0FC         	goto	u3170
  3989  01F92A                     u3171:
  3990  01F92A  EFA7  F0FC         	goto	l3313
  3991  01F92E                     u3170:
  3992  01F92E  0E21               	movlw	33
  3993  01F930  0100               	movlb	0	; () banked
  3994  01F932  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3995  01F934  0E03               	movlw	3
  3996  01F936  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3997  01F938  A0D8               	btfss	status,0,c
  3998  01F93A  EFA1  F0FC         	goto	u3181
  3999  01F93E  EFA3  F0FC         	goto	u3180
  4000  01F942                     u3181:
  4001  01F942  EFA7  F0FC         	goto	l3313
  4002  01F946                     u3180:
  4003  01F946                     
  4004                           ; BSR set to: 0
  4005                           ;color.c: 142:     {out = 0;}
  4006  01F946  0E00               	movlw	0
  4007  01F948  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4008  01F94A  0E00               	movlw	0
  4009  01F94C  6F72               	movwf	determine_color_new@out& (0+255),b
  4010  01F94E                     l3313:
  4011                           
  4012                           ;color.c: 145:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1)
  4013  01F94E  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4014  01F952  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4015  01F956  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4016  01F95A  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4017  01F95E  0ECD               	movlw	205
  4018  01F960  6E11               	movwf	isbtw@low^0,c
  4019  01F962  0ECC               	movlw	204
  4020  01F964  6E12               	movwf	(isbtw@low+1)^0,c
  4021  01F966  0E4C               	movlw	76
  4022  01F968  6E13               	movwf	(isbtw@low+2)^0,c
  4023  01F96A  0E3E               	movlw	62
  4024  01F96C  6E14               	movwf	(isbtw@low+3)^0,c
  4025  01F96E  0E48               	movlw	72
  4026  01F970  6E15               	movwf	isbtw@high^0,c
  4027  01F972  0EE1               	movlw	225
  4028  01F974  6E16               	movwf	(isbtw@high+1)^0,c
  4029  01F976  0EFA               	movlw	250
  4030  01F978  6E17               	movwf	(isbtw@high+2)^0,c
  4031  01F97A  0E3E               	movlw	62
  4032  01F97C  6E18               	movwf	(isbtw@high+3)^0,c
  4033  01F97E  EC92  F0EB         	call	_isbtw	;wreg free
  4034  01F982  040D               	decf	?_isbtw^0,w,c
  4035  01F984  100E               	iorwf	(?_isbtw+1)^0,w,c
  4036  01F986  A4D8               	btfss	status,2,c
  4037  01F988  EFC8  F0FC         	goto	u3191
  4038  01F98C  EFCA  F0FC         	goto	u3190
  4039  01F990                     u3191:
  4040  01F990  EF15  F0FD         	goto	l3321
  4041  01F994                     u3190:
  4042  01F994  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4043  01F998  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4044  01F99C  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4045  01F9A0  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4046  01F9A4  0E29               	movlw	41
  4047  01F9A6  6E11               	movwf	isbtw@low^0,c
  4048  01F9A8  0E5C               	movlw	92
  4049  01F9AA  6E12               	movwf	(isbtw@low+1)^0,c
  4050  01F9AC  0E8F               	movlw	143
  4051  01F9AE  6E13               	movwf	(isbtw@low+2)^0,c
  4052  01F9B0  0E3E               	movlw	62
  4053  01F9B2  6E14               	movwf	(isbtw@low+3)^0,c
  4054  01F9B4  0E3D               	movlw	61
  4055  01F9B6  6E15               	movwf	isbtw@high^0,c
  4056  01F9B8  0E0A               	movlw	10
  4057  01F9BA  6E16               	movwf	(isbtw@high+1)^0,c
  4058  01F9BC  0E17               	movlw	23
  4059  01F9BE  6E17               	movwf	(isbtw@high+2)^0,c
  4060  01F9C0  0E3F               	movlw	63
  4061  01F9C2  6E18               	movwf	(isbtw@high+3)^0,c
  4062  01F9C4  EC92  F0EB         	call	_isbtw	;wreg free
  4063  01F9C8  040D               	decf	?_isbtw^0,w,c
  4064  01F9CA  100E               	iorwf	(?_isbtw+1)^0,w,c
  4065  01F9CC  A4D8               	btfss	status,2,c
  4066  01F9CE  EFEB  F0FC         	goto	u3201
  4067  01F9D2  EFED  F0FC         	goto	u3200
  4068  01F9D6                     u3201:
  4069  01F9D6  EF15  F0FD         	goto	l3321
  4070  01F9DA                     u3200:
  4071  01F9DA  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4072  01F9DE  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4073  01F9E2  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4074  01F9E6  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4075  01F9EA  0E33               	movlw	51
  4076  01F9EC  6E11               	movwf	isbtw@low^0,c
  4077  01F9EE  0E33               	movlw	51
  4078  01F9F0  6E12               	movwf	(isbtw@low+1)^0,c
  4079  01F9F2  0E33               	movlw	51
  4080  01F9F4  6E13               	movwf	(isbtw@low+2)^0,c
  4081  01F9F6  0E3F               	movlw	63
  4082  01F9F8  6E14               	movwf	(isbtw@low+3)^0,c
  4083  01F9FA  0E66               	movlw	102
  4084  01F9FC  6E15               	movwf	isbtw@high^0,c
  4085  01F9FE  0E66               	movlw	102
  4086  01FA00  6E16               	movwf	(isbtw@high+1)^0,c
  4087  01FA02  0E66               	movlw	102
  4088  01FA04  6E17               	movwf	(isbtw@high+2)^0,c
  4089  01FA06  0E3F               	movlw	63
  4090  01FA08  6E18               	movwf	(isbtw@high+3)^0,c
  4091  01FA0A  EC92  F0EB         	call	_isbtw	;wreg free
  4092  01FA0E  040D               	decf	?_isbtw^0,w,c
  4093  01FA10  100E               	iorwf	(?_isbtw+1)^0,w,c
  4094  01FA12  A4D8               	btfss	status,2,c
  4095  01FA14  EF0E  F0FD         	goto	u3211
  4096  01FA18  EF10  F0FD         	goto	u3210
  4097  01FA1C                     u3211:
  4098  01FA1C  EF15  F0FD         	goto	l3321
  4099  01FA20                     u3210:
  4100  01FA20                     
  4101                           ;color.c: 146:     {out = 1;}
  4102  01FA20  0E00               	movlw	0
  4103  01FA22  0100               	movlb	0	; () banked
  4104  01FA24  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4105  01FA26  0E01               	movlw	1
  4106  01FA28  6F72               	movwf	determine_color_new@out& (0+255),b
  4107  01FA2A                     l3321:
  4108                           
  4109                           ;color.c: 149:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1)
  4110  01FA2A  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4111  01FA2E  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4112  01FA32  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4113  01FA36  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4114  01FA3A  0ECD               	movlw	205
  4115  01FA3C  6E11               	movwf	isbtw@low^0,c
  4116  01FA3E  0ECC               	movlw	204
  4117  01FA40  6E12               	movwf	(isbtw@low+1)^0,c
  4118  01FA42  0ECC               	movlw	204
  4119  01FA44  6E13               	movwf	(isbtw@low+2)^0,c
  4120  01FA46  0E3D               	movlw	61
  4121  01FA48  6E14               	movwf	(isbtw@low+3)^0,c
  4122  01FA4A  0ECD               	movlw	205
  4123  01FA4C  6E15               	movwf	isbtw@high^0,c
  4124  01FA4E  0ECC               	movlw	204
  4125  01FA50  6E16               	movwf	(isbtw@high+1)^0,c
  4126  01FA52  0E0C               	movlw	12
  4127  01FA54  6E17               	movwf	(isbtw@high+2)^0,c
  4128  01FA56  0E3F               	movlw	63
  4129  01FA58  6E18               	movwf	(isbtw@high+3)^0,c
  4130  01FA5A  EC92  F0EB         	call	_isbtw	;wreg free
  4131  01FA5E  040D               	decf	?_isbtw^0,w,c
  4132  01FA60  100E               	iorwf	(?_isbtw+1)^0,w,c
  4133  01FA62  A4D8               	btfss	status,2,c
  4134  01FA64  EF36  F0FD         	goto	u3221
  4135  01FA68  EF38  F0FD         	goto	u3220
  4136  01FA6C                     u3221:
  4137  01FA6C  EF83  F0FD         	goto	l3329
  4138  01FA70                     u3220:
  4139  01FA70  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4140  01FA74  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4141  01FA78  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4142  01FA7C  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4143  01FA80  0ECD               	movlw	205
  4144  01FA82  6E11               	movwf	isbtw@low^0,c
  4145  01FA84  0ECC               	movlw	204
  4146  01FA86  6E12               	movwf	(isbtw@low+1)^0,c
  4147  01FA88  0ECC               	movlw	204
  4148  01FA8A  6E13               	movwf	(isbtw@low+2)^0,c
  4149  01FA8C  0E3D               	movlw	61
  4150  01FA8E  6E14               	movwf	(isbtw@low+3)^0,c
  4151  01FA90  0E14               	movlw	20
  4152  01FA92  6E15               	movwf	isbtw@high^0,c
  4153  01FA94  0EAE               	movlw	174
  4154  01FA96  6E16               	movwf	(isbtw@high+1)^0,c
  4155  01FA98  0EC7               	movlw	199
  4156  01FA9A  6E17               	movwf	(isbtw@high+2)^0,c
  4157  01FA9C  0E3E               	movlw	62
  4158  01FA9E  6E18               	movwf	(isbtw@high+3)^0,c
  4159  01FAA0  EC92  F0EB         	call	_isbtw	;wreg free
  4160  01FAA4  040D               	decf	?_isbtw^0,w,c
  4161  01FAA6  100E               	iorwf	(?_isbtw+1)^0,w,c
  4162  01FAA8  A4D8               	btfss	status,2,c
  4163  01FAAA  EF59  F0FD         	goto	u3231
  4164  01FAAE  EF5B  F0FD         	goto	u3230
  4165  01FAB2                     u3231:
  4166  01FAB2  EF83  F0FD         	goto	l3329
  4167  01FAB6                     u3230:
  4168  01FAB6  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4169  01FABA  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4170  01FABE  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4171  01FAC2  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4172  01FAC6  0E00               	movlw	0
  4173  01FAC8  6E11               	movwf	isbtw@low^0,c
  4174  01FACA  0E00               	movlw	0
  4175  01FACC  6E12               	movwf	(isbtw@low+1)^0,c
  4176  01FACE  0E80               	movlw	128
  4177  01FAD0  6E13               	movwf	(isbtw@low+2)^0,c
  4178  01FAD2  0E3F               	movlw	63
  4179  01FAD4  6E14               	movwf	(isbtw@low+3)^0,c
  4180  01FAD6  0E9A               	movlw	154
  4181  01FAD8  6E15               	movwf	isbtw@high^0,c
  4182  01FADA  0E99               	movlw	153
  4183  01FADC  6E16               	movwf	(isbtw@high+1)^0,c
  4184  01FADE  0E99               	movlw	153
  4185  01FAE0  6E17               	movwf	(isbtw@high+2)^0,c
  4186  01FAE2  0E3F               	movlw	63
  4187  01FAE4  6E18               	movwf	(isbtw@high+3)^0,c
  4188  01FAE6  EC92  F0EB         	call	_isbtw	;wreg free
  4189  01FAEA  040D               	decf	?_isbtw^0,w,c
  4190  01FAEC  100E               	iorwf	(?_isbtw+1)^0,w,c
  4191  01FAEE  A4D8               	btfss	status,2,c
  4192  01FAF0  EF7C  F0FD         	goto	u3241
  4193  01FAF4  EF7E  F0FD         	goto	u3240
  4194  01FAF8                     u3241:
  4195  01FAF8  EF83  F0FD         	goto	l3329
  4196  01FAFC                     u3240:
  4197  01FAFC                     
  4198                           ;color.c: 150:     {out = 2;}
  4199  01FAFC  0E00               	movlw	0
  4200  01FAFE  0100               	movlb	0	; () banked
  4201  01FB00  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4202  01FB02  0E02               	movlw	2
  4203  01FB04  6F72               	movwf	determine_color_new@out& (0+255),b
  4204  01FB06                     l3329:
  4205                           
  4206                           ;color.c: 153:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1 && lumin>850)
  4207  01FB06  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4208  01FB0A  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4209  01FB0E  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4210  01FB12  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4211  01FB16  0E9A               	movlw	154
  4212  01FB18  6E11               	movwf	isbtw@low^0,c
  4213  01FB1A  0E99               	movlw	153
  4214  01FB1C  6E12               	movwf	(isbtw@low+1)^0,c
  4215  01FB1E  0E99               	movlw	153
  4216  01FB20  6E13               	movwf	(isbtw@low+2)^0,c
  4217  01FB22  0E3F               	movlw	63
  4218  01FB24  6E14               	movwf	(isbtw@low+3)^0,c
  4219  01FB26  0E33               	movlw	51
  4220  01FB28  6E15               	movwf	isbtw@high^0,c
  4221  01FB2A  0E33               	movlw	51
  4222  01FB2C  6E16               	movwf	(isbtw@high+1)^0,c
  4223  01FB2E  0EB3               	movlw	179
  4224  01FB30  6E17               	movwf	(isbtw@high+2)^0,c
  4225  01FB32  0E3F               	movlw	63
  4226  01FB34  6E18               	movwf	(isbtw@high+3)^0,c
  4227  01FB36  EC92  F0EB         	call	_isbtw	;wreg free
  4228  01FB3A  040D               	decf	?_isbtw^0,w,c
  4229  01FB3C  100E               	iorwf	(?_isbtw+1)^0,w,c
  4230  01FB3E  A4D8               	btfss	status,2,c
  4231  01FB40  EFA4  F0FD         	goto	u3251
  4232  01FB44  EFA6  F0FD         	goto	u3250
  4233  01FB48                     u3251:
  4234  01FB48  EFFC  F0FD         	goto	l3339
  4235  01FB4C                     u3250:
  4236  01FB4C  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4237  01FB50  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4238  01FB54  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4239  01FB58  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4240  01FB5C  0E00               	movlw	0
  4241  01FB5E  6E11               	movwf	isbtw@low^0,c
  4242  01FB60  0E00               	movlw	0
  4243  01FB62  6E12               	movwf	(isbtw@low+1)^0,c
  4244  01FB64  0EC0               	movlw	192
  4245  01FB66  6E13               	movwf	(isbtw@low+2)^0,c
  4246  01FB68  0E3F               	movlw	63
  4247  01FB6A  6E14               	movwf	(isbtw@low+3)^0,c
  4248  01FB6C  0EEC               	movlw	236
  4249  01FB6E  6E15               	movwf	isbtw@high^0,c
  4250  01FB70  0E51               	movlw	81
  4251  01FB72  6E16               	movwf	(isbtw@high+1)^0,c
  4252  01FB74  0ED8               	movlw	216
  4253  01FB76  6E17               	movwf	(isbtw@high+2)^0,c
  4254  01FB78  0E3F               	movlw	63
  4255  01FB7A  6E18               	movwf	(isbtw@high+3)^0,c
  4256  01FB7C  EC92  F0EB         	call	_isbtw	;wreg free
  4257  01FB80  040D               	decf	?_isbtw^0,w,c
  4258  01FB82  100E               	iorwf	(?_isbtw+1)^0,w,c
  4259  01FB84  A4D8               	btfss	status,2,c
  4260  01FB86  EFC7  F0FD         	goto	u3261
  4261  01FB8A  EFC9  F0FD         	goto	u3260
  4262  01FB8E                     u3261:
  4263  01FB8E  EFFC  F0FD         	goto	l3339
  4264  01FB92                     u3260:
  4265  01FB92  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4266  01FB96  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4267  01FB9A  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4268  01FB9E  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4269  01FBA2  0ECD               	movlw	205
  4270  01FBA4  6E11               	movwf	isbtw@low^0,c
  4271  01FBA6  0ECC               	movlw	204
  4272  01FBA8  6E12               	movwf	(isbtw@low+1)^0,c
  4273  01FBAA  0E4C               	movlw	76
  4274  01FBAC  6E13               	movwf	(isbtw@low+2)^0,c
  4275  01FBAE  0E3F               	movlw	63
  4276  01FBB0  6E14               	movwf	(isbtw@low+3)^0,c
  4277  01FBB2  0E66               	movlw	102
  4278  01FBB4  6E15               	movwf	isbtw@high^0,c
  4279  01FBB6  0E66               	movlw	102
  4280  01FBB8  6E16               	movwf	(isbtw@high+1)^0,c
  4281  01FBBA  0E66               	movlw	102
  4282  01FBBC  6E17               	movwf	(isbtw@high+2)^0,c
  4283  01FBBE  0E3F               	movlw	63
  4284  01FBC0  6E18               	movwf	(isbtw@high+3)^0,c
  4285  01FBC2  EC92  F0EB         	call	_isbtw	;wreg free
  4286  01FBC6  040D               	decf	?_isbtw^0,w,c
  4287  01FBC8  100E               	iorwf	(?_isbtw+1)^0,w,c
  4288  01FBCA  A4D8               	btfss	status,2,c
  4289  01FBCC  EFEA  F0FD         	goto	u3271
  4290  01FBD0  EFEC  F0FD         	goto	u3270
  4291  01FBD4                     u3271:
  4292  01FBD4  EFFC  F0FD         	goto	l3339
  4293  01FBD8                     u3270:
  4294  01FBD8  0E53               	movlw	83
  4295  01FBDA  0100               	movlb	0	; () banked
  4296  01FBDC  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  4297  01FBDE  0E03               	movlw	3
  4298  01FBE0  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  4299  01FBE2  A0D8               	btfss	status,0,c
  4300  01FBE4  EFF6  F0FD         	goto	u3281
  4301  01FBE8  EFF8  F0FD         	goto	u3280
  4302  01FBEC                     u3281:
  4303  01FBEC  EFFC  F0FD         	goto	l3339
  4304  01FBF0                     u3280:
  4305  01FBF0                     
  4306                           ; BSR set to: 0
  4307                           ;color.c: 154:     {out = 3;}
  4308  01FBF0  0E00               	movlw	0
  4309  01FBF2  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4310  01FBF4  0E03               	movlw	3
  4311  01FBF6  6F72               	movwf	determine_color_new@out& (0+255),b
  4312  01FBF8                     l3339:
  4313                           
  4314                           ;color.c: 157:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1 && lumin>830)
  4315  01FBF8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4316  01FBFC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4317  01FC00  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4318  01FC04  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4319  01FC08  0E14               	movlw	20
  4320  01FC0A  6E11               	movwf	isbtw@low^0,c
  4321  01FC0C  0EAE               	movlw	174
  4322  01FC0E  6E12               	movwf	(isbtw@low+1)^0,c
  4323  01FC10  0EC7               	movlw	199
  4324  01FC12  6E13               	movwf	(isbtw@low+2)^0,c
  4325  01FC14  0E3F               	movlw	63
  4326  01FC16  6E14               	movwf	(isbtw@low+3)^0,c
  4327  01FC18  0E71               	movlw	113
  4328  01FC1A  6E15               	movwf	isbtw@high^0,c
  4329  01FC1C  0E3D               	movlw	61
  4330  01FC1E  6E16               	movwf	(isbtw@high+1)^0,c
  4331  01FC20  0EEA               	movlw	234
  4332  01FC22  6E17               	movwf	(isbtw@high+2)^0,c
  4333  01FC24  0E3F               	movlw	63
  4334  01FC26  6E18               	movwf	(isbtw@high+3)^0,c
  4335  01FC28  EC92  F0EB         	call	_isbtw	;wreg free
  4336  01FC2C  040D               	decf	?_isbtw^0,w,c
  4337  01FC2E  100E               	iorwf	(?_isbtw+1)^0,w,c
  4338  01FC30  A4D8               	btfss	status,2,c
  4339  01FC32  EF1D  F0FE         	goto	u3291
  4340  01FC36  EF1F  F0FE         	goto	u3290
  4341  01FC3A                     u3291:
  4342  01FC3A  EF75  F0FE         	goto	l3349
  4343  01FC3E                     u3290:
  4344  01FC3E  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4345  01FC42  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4346  01FC46  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4347  01FC4A  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4348  01FC4E  0EA4               	movlw	164
  4349  01FC50  6E11               	movwf	isbtw@low^0,c
  4350  01FC52  0E70               	movlw	112
  4351  01FC54  6E12               	movwf	(isbtw@low+1)^0,c
  4352  01FC56  0E9D               	movlw	157
  4353  01FC58  6E13               	movwf	(isbtw@low+2)^0,c
  4354  01FC5A  0E3F               	movlw	63
  4355  01FC5C  6E14               	movwf	(isbtw@low+3)^0,c
  4356  01FC5E  0E00               	movlw	0
  4357  01FC60  6E15               	movwf	isbtw@high^0,c
  4358  01FC62  0E00               	movlw	0
  4359  01FC64  6E16               	movwf	(isbtw@high+1)^0,c
  4360  01FC66  0EC0               	movlw	192
  4361  01FC68  6E17               	movwf	(isbtw@high+2)^0,c
  4362  01FC6A  0E3F               	movlw	63
  4363  01FC6C  6E18               	movwf	(isbtw@high+3)^0,c
  4364  01FC6E  EC92  F0EB         	call	_isbtw	;wreg free
  4365  01FC72  040D               	decf	?_isbtw^0,w,c
  4366  01FC74  100E               	iorwf	(?_isbtw+1)^0,w,c
  4367  01FC76  A4D8               	btfss	status,2,c
  4368  01FC78  EF40  F0FE         	goto	u3301
  4369  01FC7C  EF42  F0FE         	goto	u3300
  4370  01FC80                     u3301:
  4371  01FC80  EF75  F0FE         	goto	l3349
  4372  01FC84                     u3300:
  4373  01FC84  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4374  01FC88  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4375  01FC8C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4376  01FC90  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4377  01FC94  0E33               	movlw	51
  4378  01FC96  6E11               	movwf	isbtw@low^0,c
  4379  01FC98  0E33               	movlw	51
  4380  01FC9A  6E12               	movwf	(isbtw@low+1)^0,c
  4381  01FC9C  0E93               	movlw	147
  4382  01FC9E  6E13               	movwf	(isbtw@low+2)^0,c
  4383  01FCA0  0E3F               	movlw	63
  4384  01FCA2  6E14               	movwf	(isbtw@low+3)^0,c
  4385  01FCA4  0E66               	movlw	102
  4386  01FCA6  6E15               	movwf	isbtw@high^0,c
  4387  01FCA8  0E66               	movlw	102
  4388  01FCAA  6E16               	movwf	(isbtw@high+1)^0,c
  4389  01FCAC  0EA6               	movlw	166
  4390  01FCAE  6E17               	movwf	(isbtw@high+2)^0,c
  4391  01FCB0  0E3F               	movlw	63
  4392  01FCB2  6E18               	movwf	(isbtw@high+3)^0,c
  4393  01FCB4  EC92  F0EB         	call	_isbtw	;wreg free
  4394  01FCB8  040D               	decf	?_isbtw^0,w,c
  4395  01FCBA  100E               	iorwf	(?_isbtw+1)^0,w,c
  4396  01FCBC  A4D8               	btfss	status,2,c
  4397  01FCBE  EF63  F0FE         	goto	u3311
  4398  01FCC2  EF65  F0FE         	goto	u3310
  4399  01FCC6                     u3311:
  4400  01FCC6  EF75  F0FE         	goto	l3349
  4401  01FCCA                     u3310:
  4402  01FCCA  0E3F               	movlw	63
  4403  01FCCC  0100               	movlb	0	; () banked
  4404  01FCCE  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  4405  01FCD0  0E03               	movlw	3
  4406  01FCD2  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  4407  01FCD4  A0D8               	btfss	status,0,c
  4408  01FCD6  EF6F  F0FE         	goto	u3321
  4409  01FCDA  EF71  F0FE         	goto	u3320
  4410  01FCDE                     u3321:
  4411  01FCDE  EF75  F0FE         	goto	l3349
  4412  01FCE2                     u3320:
  4413  01FCE2                     
  4414                           ; BSR set to: 0
  4415                           ;color.c: 158:     {out = 4;}
  4416  01FCE2  0E00               	movlw	0
  4417  01FCE4  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4418  01FCE6  0E04               	movlw	4
  4419  01FCE8  6F72               	movwf	determine_color_new@out& (0+255),b
  4420  01FCEA                     l3349:
  4421                           
  4422                           ;color.c: 161:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1 && lumin>800)
  4423  01FCEA  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4424  01FCEE  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4425  01FCF2  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4426  01FCF6  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4427  01FCFA  0E66               	movlw	102
  4428  01FCFC  6E11               	movwf	isbtw@low^0,c
  4429  01FCFE  0E66               	movlw	102
  4430  01FD00  6E12               	movwf	(isbtw@low+1)^0,c
  4431  01FD02  0E46               	movlw	70
  4432  01FD04  6E13               	movwf	(isbtw@low+2)^0,c
  4433  01FD06  0E40               	movlw	64
  4434  01FD08  6E14               	movwf	(isbtw@low+3)^0,c
  4435  01FD0A  0E33               	movlw	51
  4436  01FD0C  6E15               	movwf	isbtw@high^0,c
  4437  01FD0E  0E33               	movlw	51
  4438  01FD10  6E16               	movwf	(isbtw@high+1)^0,c
  4439  01FD12  0E9B               	movlw	155
  4440  01FD14  6E17               	movwf	(isbtw@high+2)^0,c
  4441  01FD16  0E40               	movlw	64
  4442  01FD18  6E18               	movwf	(isbtw@high+3)^0,c
  4443  01FD1A  EC92  F0EB         	call	_isbtw	;wreg free
  4444  01FD1E  040D               	decf	?_isbtw^0,w,c
  4445  01FD20  100E               	iorwf	(?_isbtw+1)^0,w,c
  4446  01FD22  A4D8               	btfss	status,2,c
  4447  01FD24  EF96  F0FE         	goto	u3331
  4448  01FD28  EF98  F0FE         	goto	u3330
  4449  01FD2C                     u3331:
  4450  01FD2C  EFEE  F0FE         	goto	l3359
  4451  01FD30                     u3330:
  4452  01FD30  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4453  01FD34  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4454  01FD38  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4455  01FD3C  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4456  01FD40  0ECD               	movlw	205
  4457  01FD42  6E11               	movwf	isbtw@low^0,c
  4458  01FD44  0ECC               	movlw	204
  4459  01FD46  6E12               	movwf	(isbtw@low+1)^0,c
  4460  01FD48  0E0C               	movlw	12
  4461  01FD4A  6E13               	movwf	(isbtw@low+2)^0,c
  4462  01FD4C  0E40               	movlw	64
  4463  01FD4E  6E14               	movwf	(isbtw@low+3)^0,c
  4464  01FD50  0EB8               	movlw	184
  4465  01FD52  6E15               	movwf	isbtw@high^0,c
  4466  01FD54  0E1E               	movlw	30
  4467  01FD56  6E16               	movwf	(isbtw@high+1)^0,c
  4468  01FD58  0E35               	movlw	53
  4469  01FD5A  6E17               	movwf	(isbtw@high+2)^0,c
  4470  01FD5C  0E40               	movlw	64
  4471  01FD5E  6E18               	movwf	(isbtw@high+3)^0,c
  4472  01FD60  EC92  F0EB         	call	_isbtw	;wreg free
  4473  01FD64  040D               	decf	?_isbtw^0,w,c
  4474  01FD66  100E               	iorwf	(?_isbtw+1)^0,w,c
  4475  01FD68  A4D8               	btfss	status,2,c
  4476  01FD6A  EFB9  F0FE         	goto	u3341
  4477  01FD6E  EFBB  F0FE         	goto	u3340
  4478  01FD72                     u3341:
  4479  01FD72  EFEE  F0FE         	goto	l3359
  4480  01FD76                     u3340:
  4481  01FD76  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4482  01FD7A  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4483  01FD7E  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4484  01FD82  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4485  01FD86  0E5C               	movlw	92
  4486  01FD88  6E11               	movwf	isbtw@low^0,c
  4487  01FD8A  0E8F               	movlw	143
  4488  01FD8C  6E12               	movwf	(isbtw@low+1)^0,c
  4489  01FD8E  0EA2               	movlw	162
  4490  01FD90  6E13               	movwf	(isbtw@low+2)^0,c
  4491  01FD92  0E3F               	movlw	63
  4492  01FD94  6E14               	movwf	(isbtw@low+3)^0,c
  4493  01FD96  0E66               	movlw	102
  4494  01FD98  6E15               	movwf	isbtw@high^0,c
  4495  01FD9A  0E66               	movlw	102
  4496  01FD9C  6E16               	movwf	(isbtw@high+1)^0,c
  4497  01FD9E  0EE6               	movlw	230
  4498  01FDA0  6E17               	movwf	(isbtw@high+2)^0,c
  4499  01FDA2  0E3F               	movlw	63
  4500  01FDA4  6E18               	movwf	(isbtw@high+3)^0,c
  4501  01FDA6  EC92  F0EB         	call	_isbtw	;wreg free
  4502  01FDAA  040D               	decf	?_isbtw^0,w,c
  4503  01FDAC  100E               	iorwf	(?_isbtw+1)^0,w,c
  4504  01FDAE  A4D8               	btfss	status,2,c
  4505  01FDB0  EFDC  F0FE         	goto	u3351
  4506  01FDB4  EFDE  F0FE         	goto	u3350
  4507  01FDB8                     u3351:
  4508  01FDB8  EFEE  F0FE         	goto	l3359
  4509  01FDBC                     u3350:
  4510  01FDBC  0E21               	movlw	33
  4511  01FDBE  0100               	movlb	0	; () banked
  4512  01FDC0  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  4513  01FDC2  0E03               	movlw	3
  4514  01FDC4  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  4515  01FDC6  A0D8               	btfss	status,0,c
  4516  01FDC8  EFE8  F0FE         	goto	u3361
  4517  01FDCC  EFEA  F0FE         	goto	u3360
  4518  01FDD0                     u3361:
  4519  01FDD0  EFEE  F0FE         	goto	l3359
  4520  01FDD4                     u3360:
  4521  01FDD4                     
  4522                           ; BSR set to: 0
  4523                           ;color.c: 162:     {;color.c: 163:         out = 5;}
  4524  01FDD4  0E00               	movlw	0
  4525  01FDD6  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4526  01FDD8  0E05               	movlw	5
  4527  01FDDA  6F72               	movwf	determine_color_new@out& (0+255),b
  4528  01FDDC                     l3359:
  4529                           
  4530                           ;color.c: 166:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1)
  4531  01FDDC  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4532  01FDE0  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4533  01FDE4  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4534  01FDE8  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4535  01FDEC  0E9A               	movlw	154
  4536  01FDEE  6E11               	movwf	isbtw@low^0,c
  4537  01FDF0  0E99               	movlw	153
  4538  01FDF2  6E12               	movwf	(isbtw@low+1)^0,c
  4539  01FDF4  0E19               	movlw	25
  4540  01FDF6  6E13               	movwf	(isbtw@low+2)^0,c
  4541  01FDF8  0E3F               	movlw	63
  4542  01FDFA  6E14               	movwf	(isbtw@low+3)^0,c
  4543  01FDFC  0EF6               	movlw	246
  4544  01FDFE  6E15               	movwf	isbtw@high^0,c
  4545  01FE00  0E28               	movlw	40
  4546  01FE02  6E16               	movwf	(isbtw@high+1)^0,c
  4547  01FE04  0E5C               	movlw	92
  4548  01FE06  6E17               	movwf	(isbtw@high+2)^0,c
  4549  01FE08  0E3F               	movlw	63
  4550  01FE0A  6E18               	movwf	(isbtw@high+3)^0,c
  4551  01FE0C  EC92  F0EB         	call	_isbtw	;wreg free
  4552  01FE10  040D               	decf	?_isbtw^0,w,c
  4553  01FE12  100E               	iorwf	(?_isbtw+1)^0,w,c
  4554  01FE14  A4D8               	btfss	status,2,c
  4555  01FE16  EF0F  F0FF         	goto	u3371
  4556  01FE1A  EF11  F0FF         	goto	u3370
  4557  01FE1E                     u3371:
  4558  01FE1E  EF5C  F0FF         	goto	l3367
  4559  01FE22                     u3370:
  4560  01FE22  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4561  01FE26  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4562  01FE2A  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4563  01FE2E  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4564  01FE32  0E9A               	movlw	154
  4565  01FE34  6E11               	movwf	isbtw@low^0,c
  4566  01FE36  0E99               	movlw	153
  4567  01FE38  6E12               	movwf	(isbtw@low+1)^0,c
  4568  01FE3A  0E19               	movlw	25
  4569  01FE3C  6E13               	movwf	(isbtw@low+2)^0,c
  4570  01FE3E  0E3F               	movlw	63
  4571  01FE40  6E14               	movwf	(isbtw@low+3)^0,c
  4572  01FE42  0E9A               	movlw	154
  4573  01FE44  6E15               	movwf	isbtw@high^0,c
  4574  01FE46  0E99               	movlw	153
  4575  01FE48  6E16               	movwf	(isbtw@high+1)^0,c
  4576  01FE4A  0E59               	movlw	89
  4577  01FE4C  6E17               	movwf	(isbtw@high+2)^0,c
  4578  01FE4E  0E3F               	movlw	63
  4579  01FE50  6E18               	movwf	(isbtw@high+3)^0,c
  4580  01FE52  EC92  F0EB         	call	_isbtw	;wreg free
  4581  01FE56  040D               	decf	?_isbtw^0,w,c
  4582  01FE58  100E               	iorwf	(?_isbtw+1)^0,w,c
  4583  01FE5A  A4D8               	btfss	status,2,c
  4584  01FE5C  EF32  F0FF         	goto	u3381
  4585  01FE60  EF34  F0FF         	goto	u3380
  4586  01FE64                     u3381:
  4587  01FE64  EF5C  F0FF         	goto	l3367
  4588  01FE68                     u3380:
  4589  01FE68  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4590  01FE6C  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4591  01FE70  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4592  01FE74  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4593  01FE78  0E33               	movlw	51
  4594  01FE7A  6E11               	movwf	isbtw@low^0,c
  4595  01FE7C  0E33               	movlw	51
  4596  01FE7E  6E12               	movwf	(isbtw@low+1)^0,c
  4597  01FE80  0E73               	movlw	115
  4598  01FE82  6E13               	movwf	(isbtw@low+2)^0,c
  4599  01FE84  0E3F               	movlw	63
  4600  01FE86  6E14               	movwf	(isbtw@low+3)^0,c
  4601  01FE88  0E29               	movlw	41
  4602  01FE8A  6E15               	movwf	isbtw@high^0,c
  4603  01FE8C  0E5C               	movlw	92
  4604  01FE8E  6E16               	movwf	(isbtw@high+1)^0,c
  4605  01FE90  0E8F               	movlw	143
  4606  01FE92  6E17               	movwf	(isbtw@high+2)^0,c
  4607  01FE94  0E3F               	movlw	63
  4608  01FE96  6E18               	movwf	(isbtw@high+3)^0,c
  4609  01FE98  EC92  F0EB         	call	_isbtw	;wreg free
  4610  01FE9C  040D               	decf	?_isbtw^0,w,c
  4611  01FE9E  100E               	iorwf	(?_isbtw+1)^0,w,c
  4612  01FEA0  A4D8               	btfss	status,2,c
  4613  01FEA2  EF55  F0FF         	goto	u3391
  4614  01FEA6  EF57  F0FF         	goto	u3390
  4615  01FEAA                     u3391:
  4616  01FEAA  EF5C  F0FF         	goto	l3367
  4617  01FEAE                     u3390:
  4618  01FEAE                     
  4619                           ;color.c: 167:     {out = 6;}
  4620  01FEAE  0E00               	movlw	0
  4621  01FEB0  0100               	movlb	0	; () banked
  4622  01FEB2  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4623  01FEB4  0E06               	movlw	6
  4624  01FEB6  6F72               	movwf	determine_color_new@out& (0+255),b
  4625  01FEB8                     l3367:
  4626                           
  4627                           ;color.c: 170:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>890)
  4628  01FEB8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4629  01FEBC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4630  01FEC0  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4631  01FEC4  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4632  01FEC8  0E66               	movlw	102
  4633  01FECA  6E11               	movwf	isbtw@low^0,c
  4634  01FECC  0E66               	movlw	102
  4635  01FECE  6E12               	movwf	(isbtw@low+1)^0,c
  4636  01FED0  0E66               	movlw	102
  4637  01FED2  6E13               	movwf	(isbtw@low+2)^0,c
  4638  01FED4  0E3F               	movlw	63
  4639  01FED6  6E14               	movwf	(isbtw@low+3)^0,c
  4640  01FED8  0ECD               	movlw	205
  4641  01FEDA  6E15               	movwf	isbtw@high^0,c
  4642  01FEDC  0ECC               	movlw	204
  4643  01FEDE  6E16               	movwf	(isbtw@high+1)^0,c
  4644  01FEE0  0E8C               	movlw	140
  4645  01FEE2  6E17               	movwf	(isbtw@high+2)^0,c
  4646  01FEE4  0E3F               	movlw	63
  4647  01FEE6  6E18               	movwf	(isbtw@high+3)^0,c
  4648  01FEE8  EC92  F0EB         	call	_isbtw	;wreg free
  4649  01FEEC  040D               	decf	?_isbtw^0,w,c
  4650  01FEEE  100E               	iorwf	(?_isbtw+1)^0,w,c
  4651  01FEF0  A4D8               	btfss	status,2,c
  4652  01FEF2  EF7D  F0FF         	goto	u3401
  4653  01FEF6  EF7F  F0FF         	goto	u3400
  4654  01FEFA                     u3401:
  4655  01FEFA  EFD5  F0FF         	goto	l3377
  4656  01FEFE                     u3400:
  4657  01FEFE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4658  01FF02  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4659  01FF06  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4660  01FF0A  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4661  01FF0E  0ECD               	movlw	205
  4662  01FF10  6E11               	movwf	isbtw@low^0,c
  4663  01FF12  0ECC               	movlw	204
  4664  01FF14  6E12               	movwf	(isbtw@low+1)^0,c
  4665  01FF16  0E4C               	movlw	76
  4666  01FF18  6E13               	movwf	(isbtw@low+2)^0,c
  4667  01FF1A  0E3F               	movlw	63
  4668  01FF1C  6E14               	movwf	(isbtw@low+3)^0,c
  4669  01FF1E  0E00               	movlw	0
  4670  01FF20  6E15               	movwf	isbtw@high^0,c
  4671  01FF22  0E00               	movlw	0
  4672  01FF24  6E16               	movwf	(isbtw@high+1)^0,c
  4673  01FF26  0E80               	movlw	128
  4674  01FF28  6E17               	movwf	(isbtw@high+2)^0,c
  4675  01FF2A  0E3F               	movlw	63
  4676  01FF2C  6E18               	movwf	(isbtw@high+3)^0,c
  4677  01FF2E  EC92  F0EB         	call	_isbtw	;wreg free
  4678  01FF32  040D               	decf	?_isbtw^0,w,c
  4679  01FF34  100E               	iorwf	(?_isbtw+1)^0,w,c
  4680  01FF36  A4D8               	btfss	status,2,c
  4681  01FF38  EFA0  F0FF         	goto	u3411
  4682  01FF3C  EFA2  F0FF         	goto	u3410
  4683  01FF40                     u3411:
  4684  01FF40  EFD5  F0FF         	goto	l3377
  4685  01FF44                     u3410:
  4686  01FF44  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4687  01FF48  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4688  01FF4C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4689  01FF50  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4690  01FF54  0E33               	movlw	51
  4691  01FF56  6E11               	movwf	isbtw@low^0,c
  4692  01FF58  0E33               	movlw	51
  4693  01FF5A  6E12               	movwf	(isbtw@low+1)^0,c
  4694  01FF5C  0E73               	movlw	115
  4695  01FF5E  6E13               	movwf	(isbtw@low+2)^0,c
  4696  01FF60  0E3F               	movlw	63
  4697  01FF62  6E14               	movwf	(isbtw@low+3)^0,c
  4698  01FF64  0ECD               	movlw	205
  4699  01FF66  6E15               	movwf	isbtw@high^0,c
  4700  01FF68  0ECC               	movlw	204
  4701  01FF6A  6E16               	movwf	(isbtw@high+1)^0,c
  4702  01FF6C  0E8C               	movlw	140
  4703  01FF6E  6E17               	movwf	(isbtw@high+2)^0,c
  4704  01FF70  0E3F               	movlw	63
  4705  01FF72  6E18               	movwf	(isbtw@high+3)^0,c
  4706  01FF74  EC92  F0EB         	call	_isbtw	;wreg free
  4707  01FF78  040D               	decf	?_isbtw^0,w,c
  4708  01FF7A  100E               	iorwf	(?_isbtw+1)^0,w,c
  4709  01FF7C  A4D8               	btfss	status,2,c
  4710  01FF7E  EFC3  F0FF         	goto	u3421
  4711  01FF82  EFC5  F0FF         	goto	u3420
  4712  01FF86                     u3421:
  4713  01FF86  EFD5  F0FF         	goto	l3377
  4714  01FF8A                     u3420:
  4715  01FF8A  0E7B               	movlw	123
  4716  01FF8C  0100               	movlb	0	; () banked
  4717  01FF8E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  4718  01FF90  0E03               	movlw	3
  4719  01FF92  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  4720  01FF94  A0D8               	btfss	status,0,c
  4721  01FF96  EFCF  F0FF         	goto	u3431
  4722  01FF9A  EFD1  F0FF         	goto	u3430
  4723  01FF9E                     u3431:
  4724  01FF9E  EFD5  F0FF         	goto	l3377
  4725  01FFA2                     u3430:
  4726  01FFA2                     
  4727                           ; BSR set to: 0
  4728                           ;color.c: 171:     {out = 7;}
  4729  01FFA2  0E00               	movlw	0
  4730  01FFA4  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4731  01FFA6  0E07               	movlw	7
  4732  01FFA8  6F72               	movwf	determine_color_new@out& (0+255),b
  4733  01FFAA                     l3377:
  4734                           
  4735                           ;color.c: 174:     if (RedRatio < 75 && GreenRatio < 75 && BlueRatio < 75) {out = 8;}
  4736  01FFAA  0100               	movlb	0	; () banked
  4737  01FFAC  516D               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  4738  01FFAE  E107               	bnz	u3441
  4739  01FFB0  0E4B               	movlw	75
  4740  01FFB2  5D6C               	subwf	determine_color_new@RedRatio& (0+255),w,b
  4741  01FFB4  B0D8               	btfsc	status,0,c
  4742  01FFB6  EFDF  F0FF         	goto	u3441
  4743  01FFBA  EFE1  F0FF         	goto	u3440
  4744  01FFBE                     u3441:
  4745  01FFBE  EFFB  F0FF         	goto	l3385
  4746  01FFC2                     u3440:
  4747  01FFC2                     
  4748                           ; BSR set to: 0
  4749  01FFC2  516F               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  4750  01FFC4  E107               	bnz	u3451
  4751  01FFC6  0E4B               	movlw	75
  4752  01FFC8  5D6E               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  4753  01FFCA  B0D8               	btfsc	status,0,c
  4754  01FFCC  EFEA  F0FF         	goto	u3451
  4755  01FFD0  EFEC  F0FF         	goto	u3450
  4756  01FFD4                     u3451:
  4757  01FFD4  EFFB  F0FF         	goto	l3385
  4758  01FFD8                     u3450:
  4759  01FFD8                     
  4760                           ; BSR set to: 0
  4761  01FFD8  5171               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  4762  01FFDA  E107               	bnz	u3461
  4763  01FFDC  0E4B               	movlw	75
  4764  01FFDE  5D70               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  4765  01FFE0  B0D8               	btfsc	status,0,c
  4766  01FFE2  EFF5  F0FF         	goto	u3461
  4767  01FFE6  EFF7  F0FF         	goto	u3460
  4768  01FFEA                     u3461:
  4769  01FFEA  EFFB  F0FF         	goto	l3385
  4770  01FFEE                     u3460:
  4771  01FFEE                     
  4772                           ; BSR set to: 0
  4773  01FFEE  0E00               	movlw	0
  4774  01FFF0  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4775  01FFF2  0E08               	movlw	8
  4776  01FFF4  6F72               	movwf	determine_color_new@out& (0+255),b
  4777  01FFF6                     l3385:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;color.c: 176:     return out;
  4781  01FFF6  C072  F05B         	movff	determine_color_new@out,?_determine_color_new
  4782  01FFFA  C073  F05C         	movff	determine_color_new@out+1,?_determine_color_new+1
  4783  01FFFE                     
  4784                           ; BSR set to: 0
  4785  01FFFE  0012               	return		;funcret
  4786  020000                     __end_of_determine_color_new:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function _isbtw *****************
  4790 ;; Defined at:
  4791 ;;		line 103 in file "color.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  num             4   12[COMRAM] float 
  4794 ;;  low             4   16[COMRAM] float 
  4795 ;;  high            4   20[COMRAM] float 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  2   12[COMRAM] unsigned int 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4807 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;Total ram usage:       12 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 1
  4814 ;; This function calls:
  4815 ;;		___flge
  4816 ;; This function is called by:
  4817 ;;		_determine_color_new
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text18
  4822  01D724                     __ptext18:
  4823                           	callstack 0
  4824  01D724                     _isbtw:
  4825                           	callstack 28
  4826  01D724                     
  4827                           ;color.c: 104:     if (num>=low && num<=high){return 1;}
  4828  01D724  C00D  F001         	movff	isbtw@num,___flge@ff1
  4829  01D728  C00E  F002         	movff	isbtw@num+1,___flge@ff1+1
  4830  01D72C  C00F  F003         	movff	isbtw@num+2,___flge@ff1+2
  4831  01D730  C010  F004         	movff	isbtw@num+3,___flge@ff1+3
  4832  01D734  C011  F005         	movff	isbtw@low,___flge@ff2
  4833  01D738  C012  F006         	movff	isbtw@low+1,___flge@ff2+1
  4834  01D73C  C013  F007         	movff	isbtw@low+2,___flge@ff2+2
  4835  01D740  C014  F008         	movff	isbtw@low+3,___flge@ff2+3
  4836  01D744  ECB2  F0ED         	call	___flge	;wreg free
  4837  01D748  A0D8               	btfss	status,0,c
  4838  01D74A  EFA9  F0EB         	goto	u2121
  4839  01D74E  EFAB  F0EB         	goto	u2120
  4840  01D752                     u2121:
  4841  01D752  EFCA  F0EB         	goto	l2665
  4842  01D756                     u2120:
  4843  01D756  C015  F001         	movff	isbtw@high,___flge@ff1
  4844  01D75A  C016  F002         	movff	isbtw@high+1,___flge@ff1+1
  4845  01D75E  C017  F003         	movff	isbtw@high+2,___flge@ff1+2
  4846  01D762  C018  F004         	movff	isbtw@high+3,___flge@ff1+3
  4847  01D766  C00D  F005         	movff	isbtw@num,___flge@ff2
  4848  01D76A  C00E  F006         	movff	isbtw@num+1,___flge@ff2+1
  4849  01D76E  C00F  F007         	movff	isbtw@num+2,___flge@ff2+2
  4850  01D772  C010  F008         	movff	isbtw@num+3,___flge@ff2+3
  4851  01D776  ECB2  F0ED         	call	___flge	;wreg free
  4852  01D77A  A0D8               	btfss	status,0,c
  4853  01D77C  EFC2  F0EB         	goto	u2131
  4854  01D780  EFC4  F0EB         	goto	u2130
  4855  01D784                     u2131:
  4856  01D784  EFCA  F0EB         	goto	l2665
  4857  01D788                     u2130:
  4858  01D788  0E00               	movlw	0
  4859  01D78A  6E0E               	movwf	(?_isbtw+1)^0,c
  4860  01D78C  0E01               	movlw	1
  4861  01D78E  6E0D               	movwf	?_isbtw^0,c
  4862  01D790  EFCE  F0EB         	goto	l81
  4863  01D794                     l2665:
  4864  01D794  0E00               	movlw	0
  4865  01D796  6E0E               	movwf	(?_isbtw+1)^0,c
  4866  01D798  0E00               	movlw	0
  4867  01D79A  6E0D               	movwf	?_isbtw^0,c
  4868  01D79C                     l81:
  4869  01D79C  0012               	return		;funcret
  4870  01D79E                     __end_of_isbtw:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function ___flge *****************
  4874 ;; Defined at:
  4875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  ff1             4    0[COMRAM] unsigned int 
  4878 ;;  ff2             4    4[COMRAM] unsigned int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;		None               void
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;Total ram usage:       12 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_isbtw
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text19
  4904  01DB64                     __ptext19:
  4905                           	callstack 0
  4906  01DB64                     ___flge:
  4907                           	callstack 28
  4908  01DB64  0E00               	movlw	0
  4909  01DB66  1401               	andwf	___flge@ff1^0,w,c
  4910  01DB68  6E09               	movwf	??___flge^0,c
  4911  01DB6A  0E00               	movlw	0
  4912  01DB6C  1402               	andwf	(___flge@ff1+1)^0,w,c
  4913  01DB6E  6E0A               	movwf	(??___flge+1)^0,c
  4914  01DB70  0E80               	movlw	128
  4915  01DB72  1403               	andwf	(___flge@ff1+2)^0,w,c
  4916  01DB74  6E0B               	movwf	(??___flge+2)^0,c
  4917  01DB76  0E7F               	movlw	127
  4918  01DB78  1404               	andwf	(___flge@ff1+3)^0,w,c
  4919  01DB7A  6E0C               	movwf	(??___flge+3)^0,c
  4920  01DB7C  5009               	movf	??___flge^0,w,c
  4921  01DB7E  100A               	iorwf	(??___flge+1)^0,w,c
  4922  01DB80  100B               	iorwf	(??___flge+2)^0,w,c
  4923  01DB82  100C               	iorwf	(??___flge+3)^0,w,c
  4924  01DB84  A4D8               	btfss	status,2,c
  4925  01DB86  EFC7  F0ED         	goto	u2071
  4926  01DB8A  EFC9  F0ED         	goto	u2070
  4927  01DB8E                     u2071:
  4928  01DB8E  EFD1  F0ED         	goto	l2599
  4929  01DB92                     u2070:
  4930  01DB92  0E00               	movlw	0
  4931  01DB94  6E01               	movwf	___flge@ff1^0,c
  4932  01DB96  0E00               	movlw	0
  4933  01DB98  6E02               	movwf	(___flge@ff1+1)^0,c
  4934  01DB9A  0E00               	movlw	0
  4935  01DB9C  6E03               	movwf	(___flge@ff1+2)^0,c
  4936  01DB9E  0E00               	movlw	0
  4937  01DBA0  6E04               	movwf	(___flge@ff1+3)^0,c
  4938  01DBA2                     l2599:
  4939  01DBA2  0E00               	movlw	0
  4940  01DBA4  1405               	andwf	___flge@ff2^0,w,c
  4941  01DBA6  6E09               	movwf	??___flge^0,c
  4942  01DBA8  0E00               	movlw	0
  4943  01DBAA  1406               	andwf	(___flge@ff2+1)^0,w,c
  4944  01DBAC  6E0A               	movwf	(??___flge+1)^0,c
  4945  01DBAE  0E80               	movlw	128
  4946  01DBB0  1407               	andwf	(___flge@ff2+2)^0,w,c
  4947  01DBB2  6E0B               	movwf	(??___flge+2)^0,c
  4948  01DBB4  0E7F               	movlw	127
  4949  01DBB6  1408               	andwf	(___flge@ff2+3)^0,w,c
  4950  01DBB8  6E0C               	movwf	(??___flge+3)^0,c
  4951  01DBBA  5009               	movf	??___flge^0,w,c
  4952  01DBBC  100A               	iorwf	(??___flge+1)^0,w,c
  4953  01DBBE  100B               	iorwf	(??___flge+2)^0,w,c
  4954  01DBC0  100C               	iorwf	(??___flge+3)^0,w,c
  4955  01DBC2  A4D8               	btfss	status,2,c
  4956  01DBC4  EFE6  F0ED         	goto	u2081
  4957  01DBC8  EFE8  F0ED         	goto	u2080
  4958  01DBCC                     u2081:
  4959  01DBCC  EFF0  F0ED         	goto	l2603
  4960  01DBD0                     u2080:
  4961  01DBD0  0E00               	movlw	0
  4962  01DBD2  6E05               	movwf	___flge@ff2^0,c
  4963  01DBD4  0E00               	movlw	0
  4964  01DBD6  6E06               	movwf	(___flge@ff2+1)^0,c
  4965  01DBD8  0E00               	movlw	0
  4966  01DBDA  6E07               	movwf	(___flge@ff2+2)^0,c
  4967  01DBDC  0E00               	movlw	0
  4968  01DBDE  6E08               	movwf	(___flge@ff2+3)^0,c
  4969  01DBE0                     l2603:
  4970  01DBE0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4971  01DBE2  EFF5  F0ED         	goto	u2091
  4972  01DBE6  EFF7  F0ED         	goto	u2090
  4973  01DBEA                     u2091:
  4974  01DBEA  EF00  F0EE         	goto	l2607
  4975  01DBEE                     u2090:
  4976  01DBEE  6C01               	negf	___flge@ff1^0,c
  4977  01DBF0  1E02               	comf	(___flge@ff1+1)^0,f,c
  4978  01DBF2  B0D8               	btfsc	status,0,c
  4979  01DBF4  2A02               	incf	(___flge@ff1+1)^0,f,c
  4980  01DBF6  1E03               	comf	(___flge@ff1+2)^0,f,c
  4981  01DBF8  B0D8               	btfsc	status,0,c
  4982  01DBFA  2A03               	incf	(___flge@ff1+2)^0,f,c
  4983  01DBFC  0E80               	movlw	128
  4984  01DBFE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4985  01DC00                     l2607:
  4986  01DC00  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4987  01DC02  EF05  F0EE         	goto	u2101
  4988  01DC06  EF07  F0EE         	goto	u2100
  4989  01DC0A                     u2101:
  4990  01DC0A  EF10  F0EE         	goto	l763
  4991  01DC0E                     u2100:
  4992  01DC0E  6C05               	negf	___flge@ff2^0,c
  4993  01DC10  1E06               	comf	(___flge@ff2+1)^0,f,c
  4994  01DC12  B0D8               	btfsc	status,0,c
  4995  01DC14  2A06               	incf	(___flge@ff2+1)^0,f,c
  4996  01DC16  1E07               	comf	(___flge@ff2+2)^0,f,c
  4997  01DC18  B0D8               	btfsc	status,0,c
  4998  01DC1A  2A07               	incf	(___flge@ff2+2)^0,f,c
  4999  01DC1C  0E80               	movlw	128
  5000  01DC1E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5001  01DC20                     l763:
  5002  01DC20  0E00               	movlw	0
  5003  01DC22  1A01               	xorwf	___flge@ff1^0,f,c
  5004  01DC24  0E00               	movlw	0
  5005  01DC26  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5006  01DC28  0E00               	movlw	0
  5007  01DC2A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5008  01DC2C  0E80               	movlw	128
  5009  01DC2E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5010  01DC30  0E00               	movlw	0
  5011  01DC32  1A05               	xorwf	___flge@ff2^0,f,c
  5012  01DC34  0E00               	movlw	0
  5013  01DC36  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5014  01DC38  0E00               	movlw	0
  5015  01DC3A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5016  01DC3C  0E80               	movlw	128
  5017  01DC3E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5018  01DC40  5005               	movf	___flge@ff2^0,w,c
  5019  01DC42  5C01               	subwf	___flge@ff1^0,w,c
  5020  01DC44  5006               	movf	(___flge@ff2+1)^0,w,c
  5021  01DC46  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5022  01DC48  5007               	movf	(___flge@ff2+2)^0,w,c
  5023  01DC4A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5024  01DC4C  5008               	movf	(___flge@ff2+3)^0,w,c
  5025  01DC4E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5026  01DC50  B0D8               	btfsc	status,0,c
  5027  01DC52  EF2D  F0EE         	goto	u2111
  5028  01DC56  EF2F  F0EE         	goto	u2110
  5029  01DC5A                     u2111:
  5030  01DC5A  EF32  F0EE         	goto	l2613
  5031  01DC5E                     u2110:
  5032  01DC5E  90D8               	bcf	status,0,c
  5033  01DC60  EF33  F0EE         	goto	l768
  5034  01DC64                     l2613:
  5035  01DC64  80D8               	bsf	status,0,c
  5036  01DC66                     l768:
  5037  01DC66  0012               	return		;funcret
  5038  01DC68                     __end_of___flge:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function ___xxtofl *****************
  5042 ;; Defined at:
  5043 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  sign            1    wreg     unsigned char 
  5046 ;;  val             4    0[COMRAM] long 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  sign            1    8[COMRAM] unsigned char 
  5049 ;;  arg             4   10[COMRAM] unsigned long 
  5050 ;;  exp             1    9[COMRAM] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  4    0[COMRAM] unsigned char 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5061 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;Total ram usage:       14 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_determine_color_new
  5070 ;;		_lumin
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text20
  5075  01DD6E                     __ptext20:
  5076                           	callstack 0
  5077  01DD6E                     ___xxtofl:
  5078                           	callstack 29
  5079                           
  5080                           ;incstack = 0
  5081                           ;___xxtofl@sign stored from wreg
  5082  01DD6E  6E09               	movwf	___xxtofl@sign^0,c
  5083  01DD70  5009               	movf	___xxtofl@sign^0,w,c
  5084  01DD72  B4D8               	btfsc	status,2,c
  5085  01DD74  EFBE  F0EE         	goto	u3021
  5086  01DD78  EFC0  F0EE         	goto	u3020
  5087  01DD7C                     u3021:
  5088  01DD7C  EFE2  F0EE         	goto	l1153
  5089  01DD80                     u3020:
  5090  01DD80  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5091  01DD82  EFC7  F0EE         	goto	u3030
  5092  01DD86  EFC5  F0EE         	goto	u3031
  5093  01DD8A                     u3031:
  5094  01DD8A  EFE2  F0EE         	goto	l1153
  5095  01DD8E                     u3030:
  5096  01DD8E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5097  01DD92  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5098  01DD96  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5099  01DD9A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5100  01DD9E  1E05               	comf	??___xxtofl^0,f,c
  5101  01DDA0  1E06               	comf	(??___xxtofl+1)^0,f,c
  5102  01DDA2  1E07               	comf	(??___xxtofl+2)^0,f,c
  5103  01DDA4  1E08               	comf	(??___xxtofl+3)^0,f,c
  5104  01DDA6  2A05               	incf	??___xxtofl^0,f,c
  5105  01DDA8  0E00               	movlw	0
  5106  01DDAA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5107  01DDAC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5108  01DDAE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5109  01DDB0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5110  01DDB4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5111  01DDB8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5112  01DDBC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5113  01DDC0  EFEA  F0EE         	goto	l3217
  5114  01DDC4                     l1153:
  5115  01DDC4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5116  01DDC8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5117  01DDCC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5118  01DDD0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5119  01DDD4                     l3217:
  5120  01DDD4  5001               	movf	___xxtofl@val^0,w,c
  5121  01DDD6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5122  01DDD8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5123  01DDDA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5124  01DDDC  A4D8               	btfss	status,2,c
  5125  01DDDE  EFF3  F0EE         	goto	u3041
  5126  01DDE2  EFF5  F0EE         	goto	u3040
  5127  01DDE6                     u3041:
  5128  01DDE6  EFFF  F0EE         	goto	l3223
  5129  01DDEA                     u3040:
  5130  01DDEA  0E00               	movlw	0
  5131  01DDEC  6E01               	movwf	?___xxtofl^0,c
  5132  01DDEE  0E00               	movlw	0
  5133  01DDF0  6E02               	movwf	(?___xxtofl+1)^0,c
  5134  01DDF2  0E00               	movlw	0
  5135  01DDF4  6E03               	movwf	(?___xxtofl+2)^0,c
  5136  01DDF6  0E00               	movlw	0
  5137  01DDF8  6E04               	movwf	(?___xxtofl+3)^0,c
  5138  01DDFA  EF90  F0EF         	goto	l1156
  5139  01DDFE                     l3223:
  5140  01DDFE  0E96               	movlw	150
  5141  01DE00  6E0A               	movwf	___xxtofl@exp^0,c
  5142  01DE02  EF09  F0EF         	goto	l3227
  5143  01DE06                     l3225:
  5144  01DE06  2A0A               	incf	___xxtofl@exp^0,f,c
  5145  01DE08  90D8               	bcf	status,0,c
  5146  01DE0A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5147  01DE0C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5148  01DE0E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5149  01DE10  320B               	rrcf	___xxtofl@arg^0,f,c
  5150  01DE12                     l3227:
  5151  01DE12  0E00               	movlw	0
  5152  01DE14  140B               	andwf	___xxtofl@arg^0,w,c
  5153  01DE16  6E05               	movwf	??___xxtofl^0,c
  5154  01DE18  0E00               	movlw	0
  5155  01DE1A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5156  01DE1C  6E06               	movwf	(??___xxtofl+1)^0,c
  5157  01DE1E  0E00               	movlw	0
  5158  01DE20  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5159  01DE22  6E07               	movwf	(??___xxtofl+2)^0,c
  5160  01DE24  0EFE               	movlw	254
  5161  01DE26  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5162  01DE28  6E08               	movwf	(??___xxtofl+3)^0,c
  5163  01DE2A  5005               	movf	??___xxtofl^0,w,c
  5164  01DE2C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5165  01DE2E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5166  01DE30  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5167  01DE32  A4D8               	btfss	status,2,c
  5168  01DE34  EF1E  F0EF         	goto	u3051
  5169  01DE38  EF20  F0EF         	goto	u3050
  5170  01DE3C                     u3051:
  5171  01DE3C  EF03  F0EF         	goto	l3225
  5172  01DE40                     u3050:
  5173  01DE40  EF2E  F0EF         	goto	l1160
  5174  01DE44                     l3229:
  5175  01DE44  2A0A               	incf	___xxtofl@exp^0,f,c
  5176  01DE46  0E01               	movlw	1
  5177  01DE48  260B               	addwf	___xxtofl@arg^0,f,c
  5178  01DE4A  0E00               	movlw	0
  5179  01DE4C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5180  01DE4E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5181  01DE50  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5182  01DE52  90D8               	bcf	status,0,c
  5183  01DE54  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5184  01DE56  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5185  01DE58  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5186  01DE5A  320B               	rrcf	___xxtofl@arg^0,f,c
  5187  01DE5C                     l1160:
  5188  01DE5C  0E00               	movlw	0
  5189  01DE5E  140B               	andwf	___xxtofl@arg^0,w,c
  5190  01DE60  6E05               	movwf	??___xxtofl^0,c
  5191  01DE62  0E00               	movlw	0
  5192  01DE64  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5193  01DE66  6E06               	movwf	(??___xxtofl+1)^0,c
  5194  01DE68  0E00               	movlw	0
  5195  01DE6A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5196  01DE6C  6E07               	movwf	(??___xxtofl+2)^0,c
  5197  01DE6E  0EFF               	movlw	255
  5198  01DE70  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5199  01DE72  6E08               	movwf	(??___xxtofl+3)^0,c
  5200  01DE74  5005               	movf	??___xxtofl^0,w,c
  5201  01DE76  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5202  01DE78  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5203  01DE7A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5204  01DE7C  A4D8               	btfss	status,2,c
  5205  01DE7E  EF43  F0EF         	goto	u3061
  5206  01DE82  EF45  F0EF         	goto	u3060
  5207  01DE86                     u3061:
  5208  01DE86  EF22  F0EF         	goto	l3229
  5209  01DE8A                     u3060:
  5210  01DE8A  EF4D  F0EF         	goto	l3237
  5211  01DE8E                     l3235:
  5212  01DE8E  060A               	decf	___xxtofl@exp^0,f,c
  5213  01DE90  90D8               	bcf	status,0,c
  5214  01DE92  360B               	rlcf	___xxtofl@arg^0,f,c
  5215  01DE94  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5216  01DE96  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5217  01DE98  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5218  01DE9A                     l3237:
  5219  01DE9A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5220  01DE9C  EF52  F0EF         	goto	u3071
  5221  01DEA0  EF54  F0EF         	goto	u3070
  5222  01DEA4                     u3071:
  5223  01DEA4  EF5C  F0EF         	goto	l1167
  5224  01DEA8                     u3070:
  5225  01DEA8  0E02               	movlw	2
  5226  01DEAA  600A               	cpfslt	___xxtofl@exp^0,c
  5227  01DEAC  EF5A  F0EF         	goto	u3081
  5228  01DEB0  EF5C  F0EF         	goto	u3080
  5229  01DEB4                     u3081:
  5230  01DEB4  EF47  F0EF         	goto	l3235
  5231  01DEB8                     u3080:
  5232  01DEB8                     l1167:
  5233  01DEB8  B00A               	btfsc	___xxtofl@exp^0,0,c
  5234  01DEBA  EF61  F0EF         	goto	u3091
  5235  01DEBE  EF63  F0EF         	goto	u3090
  5236  01DEC2                     u3091:
  5237  01DEC2  EF64  F0EF         	goto	l3243
  5238  01DEC6                     u3090:
  5239  01DEC6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5240  01DEC8                     l3243:
  5241  01DEC8  90D8               	bcf	status,0,c
  5242  01DECA  320A               	rrcf	___xxtofl@exp^0,f,c
  5243  01DECC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5244  01DED0  6A06               	clrf	(??___xxtofl+1)^0,c
  5245  01DED2  6A07               	clrf	(??___xxtofl+2)^0,c
  5246  01DED4  6A08               	clrf	(??___xxtofl+3)^0,c
  5247  01DED6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5248  01DEDA  6A07               	clrf	(??___xxtofl+2)^0,c
  5249  01DEDC  6A06               	clrf	(??___xxtofl+1)^0,c
  5250  01DEDE  6A05               	clrf	??___xxtofl^0,c
  5251  01DEE0  5005               	movf	??___xxtofl^0,w,c
  5252  01DEE2  120B               	iorwf	___xxtofl@arg^0,f,c
  5253  01DEE4  5006               	movf	(??___xxtofl+1)^0,w,c
  5254  01DEE6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5255  01DEE8  5007               	movf	(??___xxtofl+2)^0,w,c
  5256  01DEEA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5257  01DEEC  5008               	movf	(??___xxtofl+3)^0,w,c
  5258  01DEEE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5259  01DEF0  5009               	movf	___xxtofl@sign^0,w,c
  5260  01DEF2  B4D8               	btfsc	status,2,c
  5261  01DEF4  EF7E  F0EF         	goto	u3101
  5262  01DEF8  EF80  F0EF         	goto	u3100
  5263  01DEFC                     u3101:
  5264  01DEFC  EF88  F0EF         	goto	l3253
  5265  01DF00                     u3100:
  5266  01DF00  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5267  01DF02  EF87  F0EF         	goto	u3110
  5268  01DF06  EF85  F0EF         	goto	u3111
  5269  01DF0A                     u3111:
  5270  01DF0A  EF88  F0EF         	goto	l3253
  5271  01DF0E                     u3110:
  5272  01DF0E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5273  01DF10                     l3253:
  5274  01DF10  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5275  01DF14  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5276  01DF18  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5277  01DF1C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5278  01DF20                     l1156:
  5279  01DF20  0012               	return		;funcret
  5280  01DF22                     __end_of___xxtofl:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function ___fltol *****************
  5284 ;; Defined at:
  5285 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  f1              4   80[COMRAM] unsigned char 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  exp1            1   89[COMRAM] unsigned char 
  5290 ;;  sign1           1   88[COMRAM] unsigned char 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  4   80[COMRAM] long 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5303 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5304 ;;Total ram usage:       10 bytes
  5305 ;; Hardware stack levels used: 1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_determine_color_new
  5310 ;;		_lumin
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text21
  5315  01DC68                     __ptext21:
  5316                           	callstack 0
  5317  01DC68                     ___fltol:
  5318                           	callstack 29
  5319  01DC68  3453               	rlcf	(___fltol@f1+2)^0,w,c
  5320  01DC6A  3454               	rlcf	(___fltol@f1+3)^0,w,c
  5321  01DC6C  6E5A               	movwf	___fltol@exp1^0,c
  5322  01DC6E  505A               	movf	___fltol@exp1^0,w,c
  5323  01DC70  A4D8               	btfss	status,2,c
  5324  01DC72  EF3D  F0EE         	goto	u2951
  5325  01DC76  EF3F  F0EE         	goto	u2950
  5326  01DC7A                     u2951:
  5327  01DC7A  EF49  F0EE         	goto	l3173
  5328  01DC7E                     u2950:
  5329  01DC7E                     l3169:
  5330  01DC7E  0E00               	movlw	0
  5331  01DC80  6E51               	movwf	?___fltol^0,c
  5332  01DC82  0E00               	movlw	0
  5333  01DC84  6E52               	movwf	(?___fltol+1)^0,c
  5334  01DC86  0E00               	movlw	0
  5335  01DC88  6E53               	movwf	(?___fltol+2)^0,c
  5336  01DC8A  0E00               	movlw	0
  5337  01DC8C  6E54               	movwf	(?___fltol+3)^0,c
  5338  01DC8E  EFB6  F0EE         	goto	l795
  5339  01DC92                     l3173:
  5340  01DC92  C051  F055         	movff	___fltol@f1,??___fltol
  5341  01DC96  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  5342  01DC9A  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  5343  01DC9E  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  5344  01DCA2  0E20               	movlw	32
  5345  01DCA4  EF59  F0EE         	goto	u2960
  5346  01DCA8                     u2965:
  5347  01DCA8  90D8               	bcf	status,0,c
  5348  01DCAA  3258               	rrcf	(??___fltol+3)^0,f,c
  5349  01DCAC  3257               	rrcf	(??___fltol+2)^0,f,c
  5350  01DCAE  3256               	rrcf	(??___fltol+1)^0,f,c
  5351  01DCB0  3255               	rrcf	??___fltol^0,f,c
  5352  01DCB2                     u2960:
  5353  01DCB2  2EE8               	decfsz	wreg,f,c
  5354  01DCB4  EF54  F0EE         	goto	u2965
  5355  01DCB8  5055               	movf	??___fltol^0,w,c
  5356  01DCBA  6E59               	movwf	___fltol@sign1^0,c
  5357  01DCBC  8E53               	bsf	(___fltol@f1+2)^0,7,c
  5358  01DCBE  0EFF               	movlw	255
  5359  01DCC0  1651               	andwf	___fltol@f1^0,f,c
  5360  01DCC2  0EFF               	movlw	255
  5361  01DCC4  1652               	andwf	(___fltol@f1+1)^0,f,c
  5362  01DCC6  0EFF               	movlw	255
  5363  01DCC8  1653               	andwf	(___fltol@f1+2)^0,f,c
  5364  01DCCA  0E00               	movlw	0
  5365  01DCCC  1654               	andwf	(___fltol@f1+3)^0,f,c
  5366  01DCCE  0E96               	movlw	150
  5367  01DCD0  5E5A               	subwf	___fltol@exp1^0,f,c
  5368  01DCD2  BE5A               	btfsc	___fltol@exp1^0,7,c
  5369  01DCD4  EF70  F0EE         	goto	u2970
  5370  01DCD8  EF6E  F0EE         	goto	u2971
  5371  01DCDC                     u2971:
  5372  01DCDC  EF86  F0EE         	goto	l3193
  5373  01DCE0                     u2970:
  5374  01DCE0  505A               	movf	___fltol@exp1^0,w,c
  5375  01DCE2  0A80               	xorlw	128
  5376  01DCE4  0F97               	addlw	151
  5377  01DCE6  B0D8               	btfsc	status,0,c
  5378  01DCE8  EF78  F0EE         	goto	u2981
  5379  01DCEC  EF7A  F0EE         	goto	u2980
  5380  01DCF0                     u2981:
  5381  01DCF0  EF7C  F0EE         	goto	l3189
  5382  01DCF4                     u2980:
  5383  01DCF4  EF3F  F0EE         	goto	l3169
  5384  01DCF8                     l3189:
  5385  01DCF8  90D8               	bcf	status,0,c
  5386  01DCFA  3254               	rrcf	(___fltol@f1+3)^0,f,c
  5387  01DCFC  3253               	rrcf	(___fltol@f1+2)^0,f,c
  5388  01DCFE  3252               	rrcf	(___fltol@f1+1)^0,f,c
  5389  01DD00  3251               	rrcf	___fltol@f1^0,f,c
  5390  01DD02  3E5A               	incfsz	___fltol@exp1^0,f,c
  5391  01DD04  EF7C  F0EE         	goto	l3189
  5392  01DD08  EF9E  F0EE         	goto	l3203
  5393  01DD0C                     l3193:
  5394  01DD0C  0E1F               	movlw	31
  5395  01DD0E  645A               	cpfsgt	___fltol@exp1^0,c
  5396  01DD10  EF8C  F0EE         	goto	u2991
  5397  01DD14  EF8E  F0EE         	goto	u2990
  5398  01DD18                     u2991:
  5399  01DD18  EF96  F0EE         	goto	l3201
  5400  01DD1C                     u2990:
  5401  01DD1C  EF3F  F0EE         	goto	l3169
  5402  01DD20                     l3199:
  5403  01DD20  90D8               	bcf	status,0,c
  5404  01DD22  3651               	rlcf	___fltol@f1^0,f,c
  5405  01DD24  3652               	rlcf	(___fltol@f1+1)^0,f,c
  5406  01DD26  3653               	rlcf	(___fltol@f1+2)^0,f,c
  5407  01DD28  3654               	rlcf	(___fltol@f1+3)^0,f,c
  5408  01DD2A  065A               	decf	___fltol@exp1^0,f,c
  5409  01DD2C                     l3201:
  5410  01DD2C  505A               	movf	___fltol@exp1^0,w,c
  5411  01DD2E  A4D8               	btfss	status,2,c
  5412  01DD30  EF9C  F0EE         	goto	u3001
  5413  01DD34  EF9E  F0EE         	goto	u3000
  5414  01DD38                     u3001:
  5415  01DD38  EF90  F0EE         	goto	l3199
  5416  01DD3C                     u3000:
  5417  01DD3C                     l3203:
  5418  01DD3C  5059               	movf	___fltol@sign1^0,w,c
  5419  01DD3E  B4D8               	btfsc	status,2,c
  5420  01DD40  EFA4  F0EE         	goto	u3011
  5421  01DD44  EFA6  F0EE         	goto	u3010
  5422  01DD48                     u3011:
  5423  01DD48  EFAE  F0EE         	goto	l3207
  5424  01DD4C                     u3010:
  5425  01DD4C  1E54               	comf	(___fltol@f1+3)^0,f,c
  5426  01DD4E  1E53               	comf	(___fltol@f1+2)^0,f,c
  5427  01DD50  1E52               	comf	(___fltol@f1+1)^0,f,c
  5428  01DD52  6C51               	negf	___fltol@f1^0,c
  5429  01DD54  0E00               	movlw	0
  5430  01DD56  2252               	addwfc	(___fltol@f1+1)^0,f,c
  5431  01DD58  2253               	addwfc	(___fltol@f1+2)^0,f,c
  5432  01DD5A  2254               	addwfc	(___fltol@f1+3)^0,f,c
  5433  01DD5C                     l3207:
  5434  01DD5C  C051  F051         	movff	___fltol@f1,?___fltol
  5435  01DD60  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  5436  01DD64  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  5437  01DD68  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  5438  01DD6C                     l795:
  5439  01DD6C  0012               	return		;funcret
  5440  01DD6E                     __end_of___fltol:
  5441                           	callstack 0
  5442                           
  5443 ;; *************** function ___flmul *****************
  5444 ;; Defined at:
  5445 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  b               4   39[COMRAM] long 
  5448 ;;  a               4   43[COMRAM] long 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  prod            4   58[COMRAM] struct .
  5451 ;;  grs             4   52[COMRAM] unsigned long 
  5452 ;;  temp            2   62[COMRAM] struct .
  5453 ;;  bexp            1   57[COMRAM] unsigned char 
  5454 ;;  aexp            1   56[COMRAM] unsigned char 
  5455 ;;  sign            1   51[COMRAM] unsigned char 
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  4   39[COMRAM] unsigned char 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0, prodl, prodh
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5465 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;Total ram usage:       25 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_determine_color_new
  5475 ;;		_lumin
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text22
  5480  01E490                     __ptext22:
  5481                           	callstack 0
  5482  01E490                     ___flmul:
  5483                           	callstack 29
  5484  01E490  502B               	movf	(___flmul@b+3)^0,w,c
  5485  01E492  0B80               	andlw	128
  5486  01E494  6E34               	movwf	___flmul@sign^0,c
  5487  01E496  502B               	movf	(___flmul@b+3)^0,w,c
  5488  01E498  242B               	addwf	(___flmul@b+3)^0,w,c
  5489  01E49A  6E3A               	movwf	___flmul@bexp^0,c
  5490  01E49C  AE2A               	btfss	(___flmul@b+2)^0,7,c
  5491  01E49E  EF53  F0F2         	goto	u2761
  5492  01E4A2  EF55  F0F2         	goto	u2760
  5493  01E4A6                     u2761:
  5494  01E4A6  EF56  F0F2         	goto	l3043
  5495  01E4AA                     u2760:
  5496  01E4AA  803A               	bsf	___flmul@bexp^0,0,c
  5497  01E4AC                     l3043:
  5498  01E4AC  503A               	movf	___flmul@bexp^0,w,c
  5499  01E4AE  B4D8               	btfsc	status,2,c
  5500  01E4B0  EF5C  F0F2         	goto	u2771
  5501  01E4B4  EF5E  F0F2         	goto	u2770
  5502  01E4B8                     u2771:
  5503  01E4B8  EF71  F0F2         	goto	l3051
  5504  01E4BC                     u2770:
  5505  01E4BC  283A               	incf	___flmul@bexp^0,w,c
  5506  01E4BE  A4D8               	btfss	status,2,c
  5507  01E4C0  EF64  F0F2         	goto	u2781
  5508  01E4C4  EF66  F0F2         	goto	u2780
  5509  01E4C8                     u2781:
  5510  01E4C8  EF6E  F0F2         	goto	l3049
  5511  01E4CC                     u2780:
  5512  01E4CC  0E00               	movlw	0
  5513  01E4CE  6E28               	movwf	___flmul@b^0,c
  5514  01E4D0  0E00               	movlw	0
  5515  01E4D2  6E29               	movwf	(___flmul@b+1)^0,c
  5516  01E4D4  0E00               	movlw	0
  5517  01E4D6  6E2A               	movwf	(___flmul@b+2)^0,c
  5518  01E4D8  0E00               	movlw	0
  5519  01E4DA  6E2B               	movwf	(___flmul@b+3)^0,c
  5520  01E4DC                     l3049:
  5521  01E4DC  8E2A               	bsf	(___flmul@b+2)^0,7,c
  5522  01E4DE  EF79  F0F2         	goto	l3053
  5523  01E4E2                     l3051:
  5524  01E4E2  0E00               	movlw	0
  5525  01E4E4  6E28               	movwf	___flmul@b^0,c
  5526  01E4E6  0E00               	movlw	0
  5527  01E4E8  6E29               	movwf	(___flmul@b+1)^0,c
  5528  01E4EA  0E00               	movlw	0
  5529  01E4EC  6E2A               	movwf	(___flmul@b+2)^0,c
  5530  01E4EE  0E00               	movlw	0
  5531  01E4F0  6E2B               	movwf	(___flmul@b+3)^0,c
  5532  01E4F2                     l3053:
  5533  01E4F2  502F               	movf	(___flmul@a+3)^0,w,c
  5534  01E4F4  0B80               	andlw	128
  5535  01E4F6  1A34               	xorwf	___flmul@sign^0,f,c
  5536  01E4F8  502F               	movf	(___flmul@a+3)^0,w,c
  5537  01E4FA  242F               	addwf	(___flmul@a+3)^0,w,c
  5538  01E4FC  6E39               	movwf	___flmul@aexp^0,c
  5539  01E4FE  AE2E               	btfss	(___flmul@a+2)^0,7,c
  5540  01E500  EF84  F0F2         	goto	u2791
  5541  01E504  EF86  F0F2         	goto	u2790
  5542  01E508                     u2791:
  5543  01E508  EF87  F0F2         	goto	l3061
  5544  01E50C                     u2790:
  5545  01E50C  8039               	bsf	___flmul@aexp^0,0,c
  5546  01E50E                     l3061:
  5547  01E50E  5039               	movf	___flmul@aexp^0,w,c
  5548  01E510  B4D8               	btfsc	status,2,c
  5549  01E512  EF8D  F0F2         	goto	u2801
  5550  01E516  EF8F  F0F2         	goto	u2800
  5551  01E51A                     u2801:
  5552  01E51A  EFA2  F0F2         	goto	l3069
  5553  01E51E                     u2800:
  5554  01E51E  2839               	incf	___flmul@aexp^0,w,c
  5555  01E520  A4D8               	btfss	status,2,c
  5556  01E522  EF95  F0F2         	goto	u2811
  5557  01E526  EF97  F0F2         	goto	u2810
  5558  01E52A                     u2811:
  5559  01E52A  EF9F  F0F2         	goto	l3067
  5560  01E52E                     u2810:
  5561  01E52E  0E00               	movlw	0
  5562  01E530  6E2C               	movwf	___flmul@a^0,c
  5563  01E532  0E00               	movlw	0
  5564  01E534  6E2D               	movwf	(___flmul@a+1)^0,c
  5565  01E536  0E00               	movlw	0
  5566  01E538  6E2E               	movwf	(___flmul@a+2)^0,c
  5567  01E53A  0E00               	movlw	0
  5568  01E53C  6E2F               	movwf	(___flmul@a+3)^0,c
  5569  01E53E                     l3067:
  5570  01E53E  8E2E               	bsf	(___flmul@a+2)^0,7,c
  5571  01E540  EFAA  F0F2         	goto	l1112
  5572  01E544                     l3069:
  5573  01E544  0E00               	movlw	0
  5574  01E546  6E2C               	movwf	___flmul@a^0,c
  5575  01E548  0E00               	movlw	0
  5576  01E54A  6E2D               	movwf	(___flmul@a+1)^0,c
  5577  01E54C  0E00               	movlw	0
  5578  01E54E  6E2E               	movwf	(___flmul@a+2)^0,c
  5579  01E550  0E00               	movlw	0
  5580  01E552  6E2F               	movwf	(___flmul@a+3)^0,c
  5581  01E554                     l1112:
  5582  01E554  5039               	movf	___flmul@aexp^0,w,c
  5583  01E556  B4D8               	btfsc	status,2,c
  5584  01E558  EFB0  F0F2         	goto	u2821
  5585  01E55C  EFB2  F0F2         	goto	u2820
  5586  01E560                     u2821:
  5587  01E560  EFBA  F0F2         	goto	l3073
  5588  01E564                     u2820:
  5589  01E564  503A               	movf	___flmul@bexp^0,w,c
  5590  01E566  A4D8               	btfss	status,2,c
  5591  01E568  EFB8  F0F2         	goto	u2831
  5592  01E56C  EFBA  F0F2         	goto	u2830
  5593  01E570                     u2831:
  5594  01E570  EFC4  F0F2         	goto	l3077
  5595  01E574                     u2830:
  5596  01E574                     l3073:
  5597  01E574  0E00               	movlw	0
  5598  01E576  6E28               	movwf	?___flmul^0,c
  5599  01E578  0E00               	movlw	0
  5600  01E57A  6E29               	movwf	(?___flmul+1)^0,c
  5601  01E57C  0E00               	movlw	0
  5602  01E57E  6E2A               	movwf	(?___flmul+2)^0,c
  5603  01E580  0E00               	movlw	0
  5604  01E582  6E2B               	movwf	(?___flmul+3)^0,c
  5605  01E584  EF5C  F0F4         	goto	l1116
  5606  01E588                     l3077:
  5607  01E588  502E               	movf	(___flmul@a+2)^0,w,c
  5608  01E58A  0228               	mulwf	___flmul@b^0,c
  5609  01E58C  CFF3 F03F          	movff	prodl,___flmul@temp
  5610  01E590  CFF4 F040          	movff	prodh,___flmul@temp+1
  5611  01E594  503F               	movf	___flmul@temp^0,w,c
  5612  01E596  6E35               	movwf	___flmul@grs^0,c
  5613  01E598  6A36               	clrf	(___flmul@grs+1)^0,c
  5614  01E59A  6A37               	clrf	(___flmul@grs+2)^0,c
  5615  01E59C  6A38               	clrf	(___flmul@grs+3)^0,c
  5616  01E59E  5040               	movf	(___flmul@temp+1)^0,w,c
  5617  01E5A0  6E3B               	movwf	___flmul@prod^0,c
  5618  01E5A2  6A3C               	clrf	(___flmul@prod+1)^0,c
  5619  01E5A4  6A3D               	clrf	(___flmul@prod+2)^0,c
  5620  01E5A6  6A3E               	clrf	(___flmul@prod+3)^0,c
  5621  01E5A8  502D               	movf	(___flmul@a+1)^0,w,c
  5622  01E5AA  0229               	mulwf	(___flmul@b+1)^0,c
  5623  01E5AC  CFF3 F03F          	movff	prodl,___flmul@temp
  5624  01E5B0  CFF4 F040          	movff	prodh,___flmul@temp+1
  5625  01E5B4  503F               	movf	___flmul@temp^0,w,c
  5626  01E5B6  2635               	addwf	___flmul@grs^0,f,c
  5627  01E5B8  0E00               	movlw	0
  5628  01E5BA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5629  01E5BC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5630  01E5BE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5631  01E5C0  5040               	movf	(___flmul@temp+1)^0,w,c
  5632  01E5C2  263B               	addwf	___flmul@prod^0,f,c
  5633  01E5C4  0E00               	movlw	0
  5634  01E5C6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5635  01E5C8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5636  01E5CA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5637  01E5CC  502C               	movf	___flmul@a^0,w,c
  5638  01E5CE  022A               	mulwf	(___flmul@b+2)^0,c
  5639  01E5D0  CFF3 F03F          	movff	prodl,___flmul@temp
  5640  01E5D4  CFF4 F040          	movff	prodh,___flmul@temp+1
  5641  01E5D8  503F               	movf	___flmul@temp^0,w,c
  5642  01E5DA  2635               	addwf	___flmul@grs^0,f,c
  5643  01E5DC  0E00               	movlw	0
  5644  01E5DE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5645  01E5E0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5646  01E5E2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5647  01E5E4  5040               	movf	(___flmul@temp+1)^0,w,c
  5648  01E5E6  263B               	addwf	___flmul@prod^0,f,c
  5649  01E5E8  0E00               	movlw	0
  5650  01E5EA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5651  01E5EC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5652  01E5EE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5653  01E5F0  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5654  01E5F4  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5655  01E5F8  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5656  01E5FC  6A35               	clrf	___flmul@grs^0,c
  5657  01E5FE  502C               	movf	___flmul@a^0,w,c
  5658  01E600  0229               	mulwf	(___flmul@b+1)^0,c
  5659  01E602  CFF3 F03F          	movff	prodl,___flmul@temp
  5660  01E606  CFF4 F040          	movff	prodh,___flmul@temp+1
  5661  01E60A  503F               	movf	___flmul@temp^0,w,c
  5662  01E60C  2635               	addwf	___flmul@grs^0,f,c
  5663  01E60E  5040               	movf	(___flmul@temp+1)^0,w,c
  5664  01E610  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5665  01E612  0E00               	movlw	0
  5666  01E614  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5667  01E616  0E00               	movlw	0
  5668  01E618  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5669  01E61A  502D               	movf	(___flmul@a+1)^0,w,c
  5670  01E61C  0228               	mulwf	___flmul@b^0,c
  5671  01E61E  CFF3 F03F          	movff	prodl,___flmul@temp
  5672  01E622  CFF4 F040          	movff	prodh,___flmul@temp+1
  5673  01E626  503F               	movf	___flmul@temp^0,w,c
  5674  01E628  2635               	addwf	___flmul@grs^0,f,c
  5675  01E62A  5040               	movf	(___flmul@temp+1)^0,w,c
  5676  01E62C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5677  01E62E  0E00               	movlw	0
  5678  01E630  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5679  01E632  0E00               	movlw	0
  5680  01E634  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5681  01E636  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5682  01E63A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5683  01E63E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5684  01E642  6A35               	clrf	___flmul@grs^0,c
  5685  01E644  502C               	movf	___flmul@a^0,w,c
  5686  01E646  0228               	mulwf	___flmul@b^0,c
  5687  01E648  CFF3 F03F          	movff	prodl,___flmul@temp
  5688  01E64C  CFF4 F040          	movff	prodh,___flmul@temp+1
  5689  01E650  503F               	movf	___flmul@temp^0,w,c
  5690  01E652  2635               	addwf	___flmul@grs^0,f,c
  5691  01E654  5040               	movf	(___flmul@temp+1)^0,w,c
  5692  01E656  2236               	addwfc	(___flmul@grs+1)^0,f,c
  5693  01E658  0E00               	movlw	0
  5694  01E65A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  5695  01E65C  0E00               	movlw	0
  5696  01E65E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  5697  01E660  502E               	movf	(___flmul@a+2)^0,w,c
  5698  01E662  0229               	mulwf	(___flmul@b+1)^0,c
  5699  01E664  CFF3 F03F          	movff	prodl,___flmul@temp
  5700  01E668  CFF4 F040          	movff	prodh,___flmul@temp+1
  5701  01E66C  503F               	movf	___flmul@temp^0,w,c
  5702  01E66E  263B               	addwf	___flmul@prod^0,f,c
  5703  01E670  5040               	movf	(___flmul@temp+1)^0,w,c
  5704  01E672  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5705  01E674  0E00               	movlw	0
  5706  01E676  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5707  01E678  0E00               	movlw	0
  5708  01E67A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5709  01E67C  502D               	movf	(___flmul@a+1)^0,w,c
  5710  01E67E  022A               	mulwf	(___flmul@b+2)^0,c
  5711  01E680  CFF3 F03F          	movff	prodl,___flmul@temp
  5712  01E684  CFF4 F040          	movff	prodh,___flmul@temp+1
  5713  01E688  503F               	movf	___flmul@temp^0,w,c
  5714  01E68A  263B               	addwf	___flmul@prod^0,f,c
  5715  01E68C  5040               	movf	(___flmul@temp+1)^0,w,c
  5716  01E68E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5717  01E690  0E00               	movlw	0
  5718  01E692  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5719  01E694  0E00               	movlw	0
  5720  01E696  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5721  01E698  502E               	movf	(___flmul@a+2)^0,w,c
  5722  01E69A  022A               	mulwf	(___flmul@b+2)^0,c
  5723  01E69C  CFF3 F03F          	movff	prodl,___flmul@temp
  5724  01E6A0  CFF4 F040          	movff	prodh,___flmul@temp+1
  5725  01E6A4  503F               	movf	___flmul@temp^0,w,c
  5726  01E6A6  6E30               	movwf	??___flmul^0,c
  5727  01E6A8  5040               	movf	(___flmul@temp+1)^0,w,c
  5728  01E6AA  6E31               	movwf	(??___flmul+1)^0,c
  5729  01E6AC  6A32               	clrf	(??___flmul+2)^0,c
  5730  01E6AE  6A33               	clrf	(??___flmul+3)^0,c
  5731  01E6B0  C032  F033         	movff	??___flmul+2,??___flmul+3
  5732  01E6B4  C031  F032         	movff	??___flmul+1,??___flmul+2
  5733  01E6B8  C030  F031         	movff	??___flmul,??___flmul+1
  5734  01E6BC  6A30               	clrf	??___flmul^0,c
  5735  01E6BE  5030               	movf	??___flmul^0,w,c
  5736  01E6C0  263B               	addwf	___flmul@prod^0,f,c
  5737  01E6C2  5031               	movf	(??___flmul+1)^0,w,c
  5738  01E6C4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5739  01E6C6  5032               	movf	(??___flmul+2)^0,w,c
  5740  01E6C8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5741  01E6CA  5033               	movf	(??___flmul+3)^0,w,c
  5742  01E6CC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5743  01E6CE  C035  F030         	movff	___flmul@grs,??___flmul
  5744  01E6D2  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  5745  01E6D6  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  5746  01E6DA  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  5747  01E6DE  0E19               	movlw	25
  5748  01E6E0  EF77  F0F3         	goto	u2840
  5749  01E6E4                     u2845:
  5750  01E6E4  90D8               	bcf	status,0,c
  5751  01E6E6  3233               	rrcf	(??___flmul+3)^0,f,c
  5752  01E6E8  3232               	rrcf	(??___flmul+2)^0,f,c
  5753  01E6EA  3231               	rrcf	(??___flmul+1)^0,f,c
  5754  01E6EC  3230               	rrcf	??___flmul^0,f,c
  5755  01E6EE                     u2840:
  5756  01E6EE  2EE8               	decfsz	wreg,f,c
  5757  01E6F0  EF72  F0F3         	goto	u2845
  5758  01E6F4  5030               	movf	??___flmul^0,w,c
  5759  01E6F6  263B               	addwf	___flmul@prod^0,f,c
  5760  01E6F8  5031               	movf	(??___flmul+1)^0,w,c
  5761  01E6FA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5762  01E6FC  5032               	movf	(??___flmul+2)^0,w,c
  5763  01E6FE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5764  01E700  5033               	movf	(??___flmul+3)^0,w,c
  5765  01E702  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5766  01E704  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5767  01E708  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5768  01E70C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5769  01E710  6A35               	clrf	___flmul@grs^0,c
  5770  01E712  5039               	movf	___flmul@aexp^0,w,c
  5771  01E714  C03A  F030         	movff	___flmul@bexp,??___flmul
  5772  01E718  6A31               	clrf	(??___flmul+1)^0,c
  5773  01E71A  2630               	addwf	??___flmul^0,f,c
  5774  01E71C  0E00               	movlw	0
  5775  01E71E  2231               	addwfc	(??___flmul+1)^0,f,c
  5776  01E720  0E82               	movlw	130
  5777  01E722  2430               	addwf	??___flmul^0,w,c
  5778  01E724  6E3F               	movwf	___flmul@temp^0,c
  5779  01E726  0EFF               	movlw	255
  5780  01E728  2031               	addwfc	(??___flmul+1)^0,w,c
  5781  01E72A  6E40               	movwf	(___flmul@temp+1)^0,c
  5782  01E72C  EFAD  F0F3         	goto	l3125
  5783  01E730                     l3119:
  5784  01E730  90D8               	bcf	status,0,c
  5785  01E732  363B               	rlcf	___flmul@prod^0,f,c
  5786  01E734  363C               	rlcf	(___flmul@prod+1)^0,f,c
  5787  01E736  363D               	rlcf	(___flmul@prod+2)^0,f,c
  5788  01E738  363E               	rlcf	(___flmul@prod+3)^0,f,c
  5789  01E73A  AE38               	btfss	(___flmul@grs+3)^0,7,c
  5790  01E73C  EFA2  F0F3         	goto	u2851
  5791  01E740  EFA4  F0F3         	goto	u2850
  5792  01E744                     u2851:
  5793  01E744  EFA5  F0F3         	goto	l1119
  5794  01E748                     u2850:
  5795  01E748  803B               	bsf	___flmul@prod^0,0,c
  5796  01E74A                     l1119:
  5797  01E74A  90D8               	bcf	status,0,c
  5798  01E74C  3635               	rlcf	___flmul@grs^0,f,c
  5799  01E74E  3636               	rlcf	(___flmul@grs+1)^0,f,c
  5800  01E750  3637               	rlcf	(___flmul@grs+2)^0,f,c
  5801  01E752  3638               	rlcf	(___flmul@grs+3)^0,f,c
  5802  01E754  063F               	decf	___flmul@temp^0,f,c
  5803  01E756  A0D8               	btfss	status,0,c
  5804  01E758  0640               	decf	(___flmul@temp+1)^0,f,c
  5805  01E75A                     l3125:
  5806  01E75A  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  5807  01E75C  EFB2  F0F3         	goto	u2861
  5808  01E760  EFB4  F0F3         	goto	u2860
  5809  01E764                     u2861:
  5810  01E764  EF98  F0F3         	goto	l3119
  5811  01E768                     u2860:
  5812  01E768  0E00               	movlw	0
  5813  01E76A  6E39               	movwf	___flmul@aexp^0,c
  5814  01E76C  AE38               	btfss	(___flmul@grs+3)^0,7,c
  5815  01E76E  EFBB  F0F3         	goto	u2871
  5816  01E772  EFBD  F0F3         	goto	u2870
  5817  01E776                     u2871:
  5818  01E776  EFE1  F0F3         	goto	l1121
  5819  01E77A                     u2870:
  5820  01E77A  0EFF               	movlw	255
  5821  01E77C  1435               	andwf	___flmul@grs^0,w,c
  5822  01E77E  6E30               	movwf	??___flmul^0,c
  5823  01E780  0EFF               	movlw	255
  5824  01E782  1436               	andwf	(___flmul@grs+1)^0,w,c
  5825  01E784  6E31               	movwf	(??___flmul+1)^0,c
  5826  01E786  0EFF               	movlw	255
  5827  01E788  1437               	andwf	(___flmul@grs+2)^0,w,c
  5828  01E78A  6E32               	movwf	(??___flmul+2)^0,c
  5829  01E78C  0E7F               	movlw	127
  5830  01E78E  1438               	andwf	(___flmul@grs+3)^0,w,c
  5831  01E790  6E33               	movwf	(??___flmul+3)^0,c
  5832  01E792  5030               	movf	??___flmul^0,w,c
  5833  01E794  1031               	iorwf	(??___flmul+1)^0,w,c
  5834  01E796  1032               	iorwf	(??___flmul+2)^0,w,c
  5835  01E798  1033               	iorwf	(??___flmul+3)^0,w,c
  5836  01E79A  B4D8               	btfsc	status,2,c
  5837  01E79C  EFD2  F0F3         	goto	u2881
  5838  01E7A0  EFD4  F0F3         	goto	u2880
  5839  01E7A4                     u2881:
  5840  01E7A4  EFD8  F0F3         	goto	l1122
  5841  01E7A8                     u2880:
  5842  01E7A8                     l3133:
  5843  01E7A8  0E01               	movlw	1
  5844  01E7AA  6E39               	movwf	___flmul@aexp^0,c
  5845  01E7AC  EFE1  F0F3         	goto	l1121
  5846  01E7B0                     l1122:
  5847  01E7B0  A03B               	btfss	___flmul@prod^0,0,c
  5848  01E7B2  EFDD  F0F3         	goto	u2891
  5849  01E7B6  EFDF  F0F3         	goto	u2890
  5850  01E7BA                     u2891:
  5851  01E7BA  EFE1  F0F3         	goto	l1121
  5852  01E7BE                     u2890:
  5853  01E7BE  EFD4  F0F3         	goto	l3133
  5854  01E7C2                     l1121:
  5855  01E7C2  5039               	movf	___flmul@aexp^0,w,c
  5856  01E7C4  B4D8               	btfsc	status,2,c
  5857  01E7C6  EFE7  F0F3         	goto	u2901
  5858  01E7CA  EFE9  F0F3         	goto	u2900
  5859  01E7CE                     u2901:
  5860  01E7CE  EF0D  F0F4         	goto	l3145
  5861  01E7D2                     u2900:
  5862  01E7D2  0E01               	movlw	1
  5863  01E7D4  263B               	addwf	___flmul@prod^0,f,c
  5864  01E7D6  0E00               	movlw	0
  5865  01E7D8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5866  01E7DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5867  01E7DC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5868  01E7DE  A03E               	btfss	(___flmul@prod+3)^0,0,c
  5869  01E7E0  EFF4  F0F3         	goto	u2911
  5870  01E7E4  EFF6  F0F3         	goto	u2910
  5871  01E7E8                     u2911:
  5872  01E7E8  EF0D  F0F4         	goto	l3145
  5873  01E7EC                     u2910:
  5874  01E7EC  C03B  F030         	movff	___flmul@prod,??___flmul
  5875  01E7F0  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  5876  01E7F4  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  5877  01E7F8  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  5878  01E7FC  3433               	rlcf	(??___flmul+3)^0,w,c
  5879  01E7FE  3233               	rrcf	(??___flmul+3)^0,f,c
  5880  01E800  3232               	rrcf	(??___flmul+2)^0,f,c
  5881  01E802  3231               	rrcf	(??___flmul+1)^0,f,c
  5882  01E804  3230               	rrcf	??___flmul^0,f,c
  5883  01E806  C030  F03B         	movff	??___flmul,___flmul@prod
  5884  01E80A  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  5885  01E80E  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  5886  01E812  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  5887  01E816  4A3F               	infsnz	___flmul@temp^0,f,c
  5888  01E818  2A40               	incf	(___flmul@temp+1)^0,f,c
  5889  01E81A                     l3145:
  5890  01E81A  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  5891  01E81C  EF18  F0F4         	goto	u2921
  5892  01E820  5040               	movf	(___flmul@temp+1)^0,w,c
  5893  01E822  E108               	bnz	u2920
  5894  01E824  283F               	incf	___flmul@temp^0,w,c
  5895  01E826  A0D8               	btfss	status,0,c
  5896  01E828  EF18  F0F4         	goto	u2921
  5897  01E82C  EF1A  F0F4         	goto	u2920
  5898  01E830                     u2921:
  5899  01E830  EF24  F0F4         	goto	l3149
  5900  01E834                     u2920:
  5901  01E834  0E00               	movlw	0
  5902  01E836  6E3B               	movwf	___flmul@prod^0,c
  5903  01E838  0E00               	movlw	0
  5904  01E83A  6E3C               	movwf	(___flmul@prod+1)^0,c
  5905  01E83C  0E80               	movlw	128
  5906  01E83E  6E3D               	movwf	(___flmul@prod+2)^0,c
  5907  01E840  0E7F               	movlw	127
  5908  01E842  6E3E               	movwf	(___flmul@prod+3)^0,c
  5909  01E844  EF52  F0F4         	goto	l3161
  5910  01E848                     l3149:
  5911  01E848  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  5912  01E84A  EF31  F0F4         	goto	u2930
  5913  01E84E  5040               	movf	(___flmul@temp+1)^0,w,c
  5914  01E850  E106               	bnz	u2931
  5915  01E852  043F               	decf	___flmul@temp^0,w,c
  5916  01E854  B0D8               	btfsc	status,0,c
  5917  01E856  EF2F  F0F4         	goto	u2931
  5918  01E85A  EF31  F0F4         	goto	u2930
  5919  01E85E                     u2931:
  5920  01E85E  EF3D  F0F4         	goto	l1129
  5921  01E862                     u2930:
  5922  01E862  0E00               	movlw	0
  5923  01E864  6E3B               	movwf	___flmul@prod^0,c
  5924  01E866  0E00               	movlw	0
  5925  01E868  6E3C               	movwf	(___flmul@prod+1)^0,c
  5926  01E86A  0E00               	movlw	0
  5927  01E86C  6E3D               	movwf	(___flmul@prod+2)^0,c
  5928  01E86E  0E00               	movlw	0
  5929  01E870  6E3E               	movwf	(___flmul@prod+3)^0,c
  5930  01E872  0E00               	movlw	0
  5931  01E874  6E34               	movwf	___flmul@sign^0,c
  5932  01E876  EF52  F0F4         	goto	l3161
  5933  01E87A                     l1129:
  5934  01E87A  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  5935  01E87E  0EFF               	movlw	255
  5936  01E880  163B               	andwf	___flmul@prod^0,f,c
  5937  01E882  0EFF               	movlw	255
  5938  01E884  163C               	andwf	(___flmul@prod+1)^0,f,c
  5939  01E886  0E7F               	movlw	127
  5940  01E888  163D               	andwf	(___flmul@prod+2)^0,f,c
  5941  01E88A  0E00               	movlw	0
  5942  01E88C  163E               	andwf	(___flmul@prod+3)^0,f,c
  5943  01E88E  A03A               	btfss	___flmul@bexp^0,0,c
  5944  01E890  EF4C  F0F4         	goto	u2941
  5945  01E894  EF4E  F0F4         	goto	u2940
  5946  01E898                     u2941:
  5947  01E898  EF4F  F0F4         	goto	l3159
  5948  01E89C                     u2940:
  5949  01E89C  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  5950  01E89E                     l3159:
  5951  01E89E  90D8               	bcf	status,0,c
  5952  01E8A0  303A               	rrcf	___flmul@bexp^0,w,c
  5953  01E8A2  6E3E               	movwf	(___flmul@prod+3)^0,c
  5954  01E8A4                     l3161:
  5955  01E8A4  5034               	movf	___flmul@sign^0,w,c
  5956  01E8A6  123E               	iorwf	(___flmul@prod+3)^0,f,c
  5957  01E8A8  C03B  F028         	movff	___flmul@prod,?___flmul
  5958  01E8AC  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  5959  01E8B0  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  5960  01E8B4  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  5961  01E8B8                     l1116:
  5962  01E8B8  0012               	return		;funcret
  5963  01E8BA                     __end_of___flmul:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function ___fldiv *****************
  5967 ;; Defined at:
  5968 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  b               4   14[COMRAM] unsigned char 
  5971 ;;  a               4   18[COMRAM] unsigned char 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  grs             4   33[COMRAM] unsigned long 
  5974 ;;  rem             4   26[COMRAM] unsigned long 
  5975 ;;  new_exp         2   31[COMRAM] short 
  5976 ;;  aexp            1   38[COMRAM] unsigned char 
  5977 ;;  bexp            1   37[COMRAM] unsigned char 
  5978 ;;  sign            1   30[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  4   14[COMRAM] unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5988 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;Total ram usage:       25 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_determine_color_new
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text23
  6002  01E0F6                     __ptext23:
  6003                           	callstack 0
  6004  01E0F6                     ___fldiv:
  6005                           	callstack 29
  6006  01E0F6  5012               	movf	(___fldiv@b+3)^0,w,c
  6007  01E0F8  0B80               	andlw	128
  6008  01E0FA  6E1F               	movwf	___fldiv@sign^0,c
  6009  01E0FC  5012               	movf	(___fldiv@b+3)^0,w,c
  6010  01E0FE  2412               	addwf	(___fldiv@b+3)^0,w,c
  6011  01E100  6E26               	movwf	___fldiv@bexp^0,c
  6012  01E102  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6013  01E104  EF86  F0F0         	goto	u2531
  6014  01E108  EF88  F0F0         	goto	u2530
  6015  01E10C                     u2531:
  6016  01E10C  EF89  F0F0         	goto	l2905
  6017  01E110                     u2530:
  6018  01E110  8026               	bsf	___fldiv@bexp^0,0,c
  6019  01E112                     l2905:
  6020  01E112  5026               	movf	___fldiv@bexp^0,w,c
  6021  01E114  B4D8               	btfsc	status,2,c
  6022  01E116  EF8F  F0F0         	goto	u2541
  6023  01E11A  EF91  F0F0         	goto	u2540
  6024  01E11E                     u2541:
  6025  01E11E  EFA6  F0F0         	goto	l2915
  6026  01E122                     u2540:
  6027  01E122  2826               	incf	___fldiv@bexp^0,w,c
  6028  01E124  A4D8               	btfss	status,2,c
  6029  01E126  EF97  F0F0         	goto	u2551
  6030  01E12A  EF99  F0F0         	goto	u2550
  6031  01E12E                     u2551:
  6032  01E12E  EFA1  F0F0         	goto	l2911
  6033  01E132                     u2550:
  6034  01E132  0E00               	movlw	0
  6035  01E134  6E0F               	movwf	___fldiv@b^0,c
  6036  01E136  0E00               	movlw	0
  6037  01E138  6E10               	movwf	(___fldiv@b+1)^0,c
  6038  01E13A  0E00               	movlw	0
  6039  01E13C  6E11               	movwf	(___fldiv@b+2)^0,c
  6040  01E13E  0E00               	movlw	0
  6041  01E140  6E12               	movwf	(___fldiv@b+3)^0,c
  6042  01E142                     l2911:
  6043  01E142  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6044  01E144  0E00               	movlw	0
  6045  01E146  6E12               	movwf	(___fldiv@b+3)^0,c
  6046  01E148  EFAE  F0F0         	goto	l2917
  6047  01E14C                     l2915:
  6048  01E14C  0E00               	movlw	0
  6049  01E14E  6E0F               	movwf	___fldiv@b^0,c
  6050  01E150  0E00               	movlw	0
  6051  01E152  6E10               	movwf	(___fldiv@b+1)^0,c
  6052  01E154  0E00               	movlw	0
  6053  01E156  6E11               	movwf	(___fldiv@b+2)^0,c
  6054  01E158  0E00               	movlw	0
  6055  01E15A  6E12               	movwf	(___fldiv@b+3)^0,c
  6056  01E15C                     l2917:
  6057  01E15C  5016               	movf	(___fldiv@a+3)^0,w,c
  6058  01E15E  0B80               	andlw	128
  6059  01E160  1A1F               	xorwf	___fldiv@sign^0,f,c
  6060  01E162  5016               	movf	(___fldiv@a+3)^0,w,c
  6061  01E164  2416               	addwf	(___fldiv@a+3)^0,w,c
  6062  01E166  6E27               	movwf	___fldiv@aexp^0,c
  6063  01E168  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6064  01E16A  EFB9  F0F0         	goto	u2561
  6065  01E16E  EFBB  F0F0         	goto	u2560
  6066  01E172                     u2561:
  6067  01E172  EFBC  F0F0         	goto	l2925
  6068  01E176                     u2560:
  6069  01E176  8027               	bsf	___fldiv@aexp^0,0,c
  6070  01E178                     l2925:
  6071  01E178  5027               	movf	___fldiv@aexp^0,w,c
  6072  01E17A  B4D8               	btfsc	status,2,c
  6073  01E17C  EFC2  F0F0         	goto	u2571
  6074  01E180  EFC4  F0F0         	goto	u2570
  6075  01E184                     u2571:
  6076  01E184  EFD9  F0F0         	goto	l2935
  6077  01E188                     u2570:
  6078  01E188  2827               	incf	___fldiv@aexp^0,w,c
  6079  01E18A  A4D8               	btfss	status,2,c
  6080  01E18C  EFCA  F0F0         	goto	u2581
  6081  01E190  EFCC  F0F0         	goto	u2580
  6082  01E194                     u2581:
  6083  01E194  EFD4  F0F0         	goto	l2931
  6084  01E198                     u2580:
  6085  01E198  0E00               	movlw	0
  6086  01E19A  6E13               	movwf	___fldiv@a^0,c
  6087  01E19C  0E00               	movlw	0
  6088  01E19E  6E14               	movwf	(___fldiv@a+1)^0,c
  6089  01E1A0  0E00               	movlw	0
  6090  01E1A2  6E15               	movwf	(___fldiv@a+2)^0,c
  6091  01E1A4  0E00               	movlw	0
  6092  01E1A6  6E16               	movwf	(___fldiv@a+3)^0,c
  6093  01E1A8                     l2931:
  6094  01E1A8  8E15               	bsf	(___fldiv@a+2)^0,7,c
  6095  01E1AA  0E00               	movlw	0
  6096  01E1AC  6E16               	movwf	(___fldiv@a+3)^0,c
  6097  01E1AE  EFE1  F0F0         	goto	l2937
  6098  01E1B2                     l2935:
  6099  01E1B2  0E00               	movlw	0
  6100  01E1B4  6E13               	movwf	___fldiv@a^0,c
  6101  01E1B6  0E00               	movlw	0
  6102  01E1B8  6E14               	movwf	(___fldiv@a+1)^0,c
  6103  01E1BA  0E00               	movlw	0
  6104  01E1BC  6E15               	movwf	(___fldiv@a+2)^0,c
  6105  01E1BE  0E00               	movlw	0
  6106  01E1C0  6E16               	movwf	(___fldiv@a+3)^0,c
  6107  01E1C2                     l2937:
  6108  01E1C2  5013               	movf	___fldiv@a^0,w,c
  6109  01E1C4  1014               	iorwf	(___fldiv@a+1)^0,w,c
  6110  01E1C6  1015               	iorwf	(___fldiv@a+2)^0,w,c
  6111  01E1C8  1016               	iorwf	(___fldiv@a+3)^0,w,c
  6112  01E1CA  A4D8               	btfss	status,2,c
  6113  01E1CC  EFEA  F0F0         	goto	u2591
  6114  01E1D0  EFEC  F0F0         	goto	u2590
  6115  01E1D4                     u2591:
  6116  01E1D4  EF04  F0F1         	goto	l2949
  6117  01E1D8                     u2590:
  6118  01E1D8  0E00               	movlw	0
  6119  01E1DA  6E0F               	movwf	___fldiv@b^0,c
  6120  01E1DC  0E00               	movlw	0
  6121  01E1DE  6E10               	movwf	(___fldiv@b+1)^0,c
  6122  01E1E0  0E00               	movlw	0
  6123  01E1E2  6E11               	movwf	(___fldiv@b+2)^0,c
  6124  01E1E4  0E00               	movlw	0
  6125  01E1E6  6E12               	movwf	(___fldiv@b+3)^0,c
  6126  01E1E8  0E80               	movlw	128
  6127  01E1EA  1211               	iorwf	(___fldiv@b+2)^0,f,c
  6128  01E1EC  0E7F               	movlw	127
  6129  01E1EE  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6130  01E1F0                     l2943:
  6131  01E1F0  501F               	movf	___fldiv@sign^0,w,c
  6132  01E1F2  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6133  01E1F4  C00F  F00F         	movff	___fldiv@b,?___fldiv
  6134  01E1F8  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  6135  01E1FC  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  6136  01E200  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  6137  01E204  EF47  F0F2         	goto	l1080
  6138  01E208                     l2949:
  6139  01E208  5026               	movf	___fldiv@bexp^0,w,c
  6140  01E20A  A4D8               	btfss	status,2,c
  6141  01E20C  EF0A  F0F1         	goto	u2601
  6142  01E210  EF0C  F0F1         	goto	u2600
  6143  01E214                     u2601:
  6144  01E214  EF16  F0F1         	goto	l2957
  6145  01E218                     u2600:
  6146  01E218  0E00               	movlw	0
  6147  01E21A  6E0F               	movwf	?___fldiv^0,c
  6148  01E21C  0E00               	movlw	0
  6149  01E21E  6E10               	movwf	(?___fldiv+1)^0,c
  6150  01E220  0E00               	movlw	0
  6151  01E222  6E11               	movwf	(?___fldiv+2)^0,c
  6152  01E224  0E00               	movlw	0
  6153  01E226  6E12               	movwf	(?___fldiv+3)^0,c
  6154  01E228  EF47  F0F2         	goto	l1080
  6155  01E22C                     l2957:
  6156  01E22C  5027               	movf	___fldiv@aexp^0,w,c
  6157  01E22E  C026  F017         	movff	___fldiv@bexp,??___fldiv
  6158  01E232  6A18               	clrf	(??___fldiv+1)^0,c
  6159  01E234  5E17               	subwf	??___fldiv^0,f,c
  6160  01E236  0E00               	movlw	0
  6161  01E238  5A18               	subwfb	(??___fldiv+1)^0,f,c
  6162  01E23A  0E7F               	movlw	127
  6163  01E23C  2417               	addwf	??___fldiv^0,w,c
  6164  01E23E  6E20               	movwf	___fldiv@new_exp^0,c
  6165  01E240  0E00               	movlw	0
  6166  01E242  2018               	addwfc	(??___fldiv+1)^0,w,c
  6167  01E244  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6168  01E246  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  6169  01E24A  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  6170  01E24E  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  6171  01E252  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  6172  01E256  0E00               	movlw	0
  6173  01E258  6E0F               	movwf	___fldiv@b^0,c
  6174  01E25A  0E00               	movlw	0
  6175  01E25C  6E10               	movwf	(___fldiv@b+1)^0,c
  6176  01E25E  0E00               	movlw	0
  6177  01E260  6E11               	movwf	(___fldiv@b+2)^0,c
  6178  01E262  0E00               	movlw	0
  6179  01E264  6E12               	movwf	(___fldiv@b+3)^0,c
  6180  01E266  0E00               	movlw	0
  6181  01E268  6E22               	movwf	___fldiv@grs^0,c
  6182  01E26A  0E00               	movlw	0
  6183  01E26C  6E23               	movwf	(___fldiv@grs+1)^0,c
  6184  01E26E  0E00               	movlw	0
  6185  01E270  6E24               	movwf	(___fldiv@grs+2)^0,c
  6186  01E272  0E00               	movlw	0
  6187  01E274  6E25               	movwf	(___fldiv@grs+3)^0,c
  6188  01E276  0E00               	movlw	0
  6189  01E278  6E27               	movwf	___fldiv@aexp^0,c
  6190  01E27A  EF77  F0F1         	goto	l1082
  6191  01E27E                     l2967:
  6192  01E27E  5027               	movf	___fldiv@aexp^0,w,c
  6193  01E280  B4D8               	btfsc	status,2,c
  6194  01E282  EF45  F0F1         	goto	u2611
  6195  01E286  EF47  F0F1         	goto	u2610
  6196  01E28A                     u2611:
  6197  01E28A  EF5E  F0F1         	goto	l2975
  6198  01E28E                     u2610:
  6199  01E28E  90D8               	bcf	status,0,c
  6200  01E290  361B               	rlcf	___fldiv@rem^0,f,c
  6201  01E292  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  6202  01E294  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  6203  01E296  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  6204  01E298  90D8               	bcf	status,0,c
  6205  01E29A  360F               	rlcf	___fldiv@b^0,f,c
  6206  01E29C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6207  01E29E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6208  01E2A0  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6209  01E2A2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6210  01E2A4  EF56  F0F1         	goto	u2621
  6211  01E2A8  EF58  F0F1         	goto	u2620
  6212  01E2AC                     u2621:
  6213  01E2AC  EF59  F0F1         	goto	l1085
  6214  01E2B0                     u2620:
  6215  01E2B0  800F               	bsf	___fldiv@b^0,0,c
  6216  01E2B2                     l1085:
  6217  01E2B2  90D8               	bcf	status,0,c
  6218  01E2B4  3622               	rlcf	___fldiv@grs^0,f,c
  6219  01E2B6  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6220  01E2B8  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6221  01E2BA  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6222  01E2BC                     l2975:
  6223  01E2BC  5013               	movf	___fldiv@a^0,w,c
  6224  01E2BE  5C1B               	subwf	___fldiv@rem^0,w,c
  6225  01E2C0  5014               	movf	(___fldiv@a+1)^0,w,c
  6226  01E2C2  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  6227  01E2C4  5015               	movf	(___fldiv@a+2)^0,w,c
  6228  01E2C6  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  6229  01E2C8  5016               	movf	(___fldiv@a+3)^0,w,c
  6230  01E2CA  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  6231  01E2CC  A0D8               	btfss	status,0,c
  6232  01E2CE  EF6B  F0F1         	goto	u2631
  6233  01E2D2  EF6D  F0F1         	goto	u2630
  6234  01E2D6                     u2631:
  6235  01E2D6  EF76  F0F1         	goto	l2981
  6236  01E2DA                     u2630:
  6237  01E2DA  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  6238  01E2DC  5013               	movf	___fldiv@a^0,w,c
  6239  01E2DE  5E1B               	subwf	___fldiv@rem^0,f,c
  6240  01E2E0  5014               	movf	(___fldiv@a+1)^0,w,c
  6241  01E2E2  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  6242  01E2E4  5015               	movf	(___fldiv@a+2)^0,w,c
  6243  01E2E6  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  6244  01E2E8  5016               	movf	(___fldiv@a+3)^0,w,c
  6245  01E2EA  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  6246  01E2EC                     l2981:
  6247  01E2EC  2A27               	incf	___fldiv@aexp^0,f,c
  6248  01E2EE                     l1082:
  6249  01E2EE  0E19               	movlw	25
  6250  01E2F0  6427               	cpfsgt	___fldiv@aexp^0,c
  6251  01E2F2  EF7D  F0F1         	goto	u2641
  6252  01E2F6  EF7F  F0F1         	goto	u2640
  6253  01E2FA                     u2641:
  6254  01E2FA  EF3F  F0F1         	goto	l2967
  6255  01E2FE                     u2640:
  6256  01E2FE  501B               	movf	___fldiv@rem^0,w,c
  6257  01E300  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  6258  01E302  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  6259  01E304  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  6260  01E306  B4D8               	btfsc	status,2,c
  6261  01E308  EF88  F0F1         	goto	u2651
  6262  01E30C  EF8A  F0F1         	goto	u2650
  6263  01E310                     u2651:
  6264  01E310  EFA2  F0F1         	goto	l2993
  6265  01E314                     u2650:
  6266  01E314  8022               	bsf	___fldiv@grs^0,0,c
  6267  01E316  EFA2  F0F1         	goto	l2993
  6268  01E31A                     l2987:
  6269  01E31A  90D8               	bcf	status,0,c
  6270  01E31C  360F               	rlcf	___fldiv@b^0,f,c
  6271  01E31E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6272  01E320  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6273  01E322  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6274  01E324  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6275  01E326  EF97  F0F1         	goto	u2661
  6276  01E32A  EF99  F0F1         	goto	u2660
  6277  01E32E                     u2661:
  6278  01E32E  EF9A  F0F1         	goto	l1091
  6279  01E332                     u2660:
  6280  01E332  800F               	bsf	___fldiv@b^0,0,c
  6281  01E334                     l1091:
  6282  01E334  90D8               	bcf	status,0,c
  6283  01E336  3622               	rlcf	___fldiv@grs^0,f,c
  6284  01E338  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6285  01E33A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6286  01E33C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6287  01E33E  0620               	decf	___fldiv@new_exp^0,f,c
  6288  01E340  A0D8               	btfss	status,0,c
  6289  01E342  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  6290  01E344                     l2993:
  6291  01E344  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6292  01E346  EFA7  F0F1         	goto	u2671
  6293  01E34A  EFA9  F0F1         	goto	u2670
  6294  01E34E                     u2671:
  6295  01E34E  EF8D  F0F1         	goto	l2987
  6296  01E352                     u2670:
  6297  01E352  0E00               	movlw	0
  6298  01E354  6E27               	movwf	___fldiv@aexp^0,c
  6299  01E356  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6300  01E358  EFB0  F0F1         	goto	u2681
  6301  01E35C  EFB2  F0F1         	goto	u2680
  6302  01E360                     u2681:
  6303  01E360  EFD6  F0F1         	goto	l1093
  6304  01E364                     u2680:
  6305  01E364  0EFF               	movlw	255
  6306  01E366  1422               	andwf	___fldiv@grs^0,w,c
  6307  01E368  6E17               	movwf	??___fldiv^0,c
  6308  01E36A  0EFF               	movlw	255
  6309  01E36C  1423               	andwf	(___fldiv@grs+1)^0,w,c
  6310  01E36E  6E18               	movwf	(??___fldiv+1)^0,c
  6311  01E370  0EFF               	movlw	255
  6312  01E372  1424               	andwf	(___fldiv@grs+2)^0,w,c
  6313  01E374  6E19               	movwf	(??___fldiv+2)^0,c
  6314  01E376  0E7F               	movlw	127
  6315  01E378  1425               	andwf	(___fldiv@grs+3)^0,w,c
  6316  01E37A  6E1A               	movwf	(??___fldiv+3)^0,c
  6317  01E37C  5017               	movf	??___fldiv^0,w,c
  6318  01E37E  1018               	iorwf	(??___fldiv+1)^0,w,c
  6319  01E380  1019               	iorwf	(??___fldiv+2)^0,w,c
  6320  01E382  101A               	iorwf	(??___fldiv+3)^0,w,c
  6321  01E384  B4D8               	btfsc	status,2,c
  6322  01E386  EFC7  F0F1         	goto	u2691
  6323  01E38A  EFC9  F0F1         	goto	u2690
  6324  01E38E                     u2691:
  6325  01E38E  EFCD  F0F1         	goto	l1094
  6326  01E392                     u2690:
  6327  01E392                     l3001:
  6328  01E392  0E01               	movlw	1
  6329  01E394  6E27               	movwf	___fldiv@aexp^0,c
  6330  01E396  EFD6  F0F1         	goto	l1093
  6331  01E39A                     l1094:
  6332  01E39A  A00F               	btfss	___fldiv@b^0,0,c
  6333  01E39C  EFD2  F0F1         	goto	u2701
  6334  01E3A0  EFD4  F0F1         	goto	u2700
  6335  01E3A4                     u2701:
  6336  01E3A4  EFD6  F0F1         	goto	l1093
  6337  01E3A8                     u2700:
  6338  01E3A8  EFC9  F0F1         	goto	l3001
  6339  01E3AC                     l1093:
  6340  01E3AC  5027               	movf	___fldiv@aexp^0,w,c
  6341  01E3AE  B4D8               	btfsc	status,2,c
  6342  01E3B0  EFDC  F0F1         	goto	u2711
  6343  01E3B4  EFDE  F0F1         	goto	u2710
  6344  01E3B8                     u2711:
  6345  01E3B8  EF02  F0F2         	goto	l3013
  6346  01E3BC                     u2710:
  6347  01E3BC  0E01               	movlw	1
  6348  01E3BE  260F               	addwf	___fldiv@b^0,f,c
  6349  01E3C0  0E00               	movlw	0
  6350  01E3C2  2210               	addwfc	(___fldiv@b+1)^0,f,c
  6351  01E3C4  2211               	addwfc	(___fldiv@b+2)^0,f,c
  6352  01E3C6  2212               	addwfc	(___fldiv@b+3)^0,f,c
  6353  01E3C8  A012               	btfss	(___fldiv@b+3)^0,0,c
  6354  01E3CA  EFE9  F0F1         	goto	u2721
  6355  01E3CE  EFEB  F0F1         	goto	u2720
  6356  01E3D2                     u2721:
  6357  01E3D2  EF02  F0F2         	goto	l3013
  6358  01E3D6                     u2720:
  6359  01E3D6  C00F  F017         	movff	___fldiv@b,??___fldiv
  6360  01E3DA  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  6361  01E3DE  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  6362  01E3E2  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  6363  01E3E6  341A               	rlcf	(??___fldiv+3)^0,w,c
  6364  01E3E8  321A               	rrcf	(??___fldiv+3)^0,f,c
  6365  01E3EA  3219               	rrcf	(??___fldiv+2)^0,f,c
  6366  01E3EC  3218               	rrcf	(??___fldiv+1)^0,f,c
  6367  01E3EE  3217               	rrcf	??___fldiv^0,f,c
  6368  01E3F0  C017  F00F         	movff	??___fldiv,___fldiv@b
  6369  01E3F4  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  6370  01E3F8  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  6371  01E3FC  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  6372  01E400  4A20               	infsnz	___fldiv@new_exp^0,f,c
  6373  01E402  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  6374  01E404                     l3013:
  6375  01E404  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6376  01E406  EF0D  F0F2         	goto	u2731
  6377  01E40A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6378  01E40C  E108               	bnz	u2730
  6379  01E40E  2820               	incf	___fldiv@new_exp^0,w,c
  6380  01E410  A0D8               	btfss	status,0,c
  6381  01E412  EF0D  F0F2         	goto	u2731
  6382  01E416  EF0F  F0F2         	goto	u2730
  6383  01E41A                     u2731:
  6384  01E41A  EF1A  F0F2         	goto	l3017
  6385  01E41E                     u2730:
  6386  01E41E  0E00               	movlw	0
  6387  01E420  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6388  01E422  6820               	setf	___fldiv@new_exp^0,c
  6389  01E424  0E00               	movlw	0
  6390  01E426  6E0F               	movwf	___fldiv@b^0,c
  6391  01E428  0E00               	movlw	0
  6392  01E42A  6E10               	movwf	(___fldiv@b+1)^0,c
  6393  01E42C  0E00               	movlw	0
  6394  01E42E  6E11               	movwf	(___fldiv@b+2)^0,c
  6395  01E430  0E00               	movlw	0
  6396  01E432  6E12               	movwf	(___fldiv@b+3)^0,c
  6397  01E434                     l3017:
  6398  01E434  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6399  01E436  EF27  F0F2         	goto	u2740
  6400  01E43A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6401  01E43C  E106               	bnz	u2741
  6402  01E43E  0420               	decf	___fldiv@new_exp^0,w,c
  6403  01E440  B0D8               	btfsc	status,0,c
  6404  01E442  EF25  F0F2         	goto	u2741
  6405  01E446  EF27  F0F2         	goto	u2740
  6406  01E44A                     u2741:
  6407  01E44A  EF35  F0F2         	goto	l3021
  6408  01E44E                     u2740:
  6409  01E44E  0E00               	movlw	0
  6410  01E450  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6411  01E452  0E00               	movlw	0
  6412  01E454  6E20               	movwf	___fldiv@new_exp^0,c
  6413  01E456  0E00               	movlw	0
  6414  01E458  6E0F               	movwf	___fldiv@b^0,c
  6415  01E45A  0E00               	movlw	0
  6416  01E45C  6E10               	movwf	(___fldiv@b+1)^0,c
  6417  01E45E  0E00               	movlw	0
  6418  01E460  6E11               	movwf	(___fldiv@b+2)^0,c
  6419  01E462  0E00               	movlw	0
  6420  01E464  6E12               	movwf	(___fldiv@b+3)^0,c
  6421  01E466  0E00               	movlw	0
  6422  01E468  6E1F               	movwf	___fldiv@sign^0,c
  6423  01E46A                     l3021:
  6424  01E46A  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  6425  01E46E  A026               	btfss	___fldiv@bexp^0,0,c
  6426  01E470  EF3C  F0F2         	goto	u2751
  6427  01E474  EF3E  F0F2         	goto	u2750
  6428  01E478                     u2751:
  6429  01E478  EF41  F0F2         	goto	l3027
  6430  01E47C                     u2750:
  6431  01E47C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6432  01E47E  EF42  F0F2         	goto	l3029
  6433  01E482                     l3027:
  6434  01E482  9E11               	bcf	(___fldiv@b+2)^0,7,c
  6435  01E484                     l3029:
  6436  01E484  90D8               	bcf	status,0,c
  6437  01E486  3026               	rrcf	___fldiv@bexp^0,w,c
  6438  01E488  6E12               	movwf	(___fldiv@b+3)^0,c
  6439  01E48A  EFF8  F0F0         	goto	l2943
  6440  01E48E                     l1080:
  6441  01E48E  0012               	return		;funcret
  6442  01E490                     __end_of___fldiv:
  6443                           	callstack 0
  6444                           
  6445 ;; *************** function ___fladd *****************
  6446 ;; Defined at:
  6447 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  b               4   64[COMRAM] unsigned char 
  6450 ;;  a               4   68[COMRAM] unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  grs             1   79[COMRAM] unsigned char 
  6453 ;;  bexp            1   78[COMRAM] unsigned char 
  6454 ;;  aexp            1   77[COMRAM] unsigned char 
  6455 ;;  signs           1   76[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  4   64[COMRAM] unsigned char 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6465 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6468 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;Total ram usage:       16 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_determine_color_new
  6475 ;;		_lumin
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text24
  6480  01E8BA                     __ptext24:
  6481                           	callstack 0
  6482  01E8BA                     ___fladd:
  6483                           	callstack 29
  6484  01E8BA  5044               	movf	(___fladd@b+3)^0,w,c
  6485  01E8BC  0B80               	andlw	128
  6486  01E8BE  6E4D               	movwf	___fladd@signs^0,c
  6487  01E8C0  5044               	movf	(___fladd@b+3)^0,w,c
  6488  01E8C2  2444               	addwf	(___fladd@b+3)^0,w,c
  6489  01E8C4  6E4F               	movwf	___fladd@bexp^0,c
  6490  01E8C6  AE43               	btfss	(___fladd@b+2)^0,7,c
  6491  01E8C8  EF68  F0F4         	goto	u2141
  6492  01E8CC  EF6A  F0F4         	goto	u2140
  6493  01E8D0                     u2141:
  6494  01E8D0  EF6B  F0F4         	goto	l2703
  6495  01E8D4                     u2140:
  6496  01E8D4  804F               	bsf	___fladd@bexp^0,0,c
  6497  01E8D6                     l2703:
  6498  01E8D6  504F               	movf	___fladd@bexp^0,w,c
  6499  01E8D8  B4D8               	btfsc	status,2,c
  6500  01E8DA  EF71  F0F4         	goto	u2151
  6501  01E8DE  EF73  F0F4         	goto	u2150
  6502  01E8E2                     u2151:
  6503  01E8E2  EF88  F0F4         	goto	l2713
  6504  01E8E6                     u2150:
  6505  01E8E6  284F               	incf	___fladd@bexp^0,w,c
  6506  01E8E8  A4D8               	btfss	status,2,c
  6507  01E8EA  EF79  F0F4         	goto	u2161
  6508  01E8EE  EF7B  F0F4         	goto	u2160
  6509  01E8F2                     u2161:
  6510  01E8F2  EF83  F0F4         	goto	l2709
  6511  01E8F6                     u2160:
  6512  01E8F6  0E00               	movlw	0
  6513  01E8F8  6E41               	movwf	___fladd@b^0,c
  6514  01E8FA  0E00               	movlw	0
  6515  01E8FC  6E42               	movwf	(___fladd@b+1)^0,c
  6516  01E8FE  0E00               	movlw	0
  6517  01E900  6E43               	movwf	(___fladd@b+2)^0,c
  6518  01E902  0E00               	movlw	0
  6519  01E904  6E44               	movwf	(___fladd@b+3)^0,c
  6520  01E906                     l2709:
  6521  01E906  8E43               	bsf	(___fladd@b+2)^0,7,c
  6522  01E908  0E00               	movlw	0
  6523  01E90A  6E44               	movwf	(___fladd@b+3)^0,c
  6524  01E90C  EF90  F0F4         	goto	l2715
  6525  01E910                     l2713:
  6526  01E910  0E00               	movlw	0
  6527  01E912  6E41               	movwf	___fladd@b^0,c
  6528  01E914  0E00               	movlw	0
  6529  01E916  6E42               	movwf	(___fladd@b+1)^0,c
  6530  01E918  0E00               	movlw	0
  6531  01E91A  6E43               	movwf	(___fladd@b+2)^0,c
  6532  01E91C  0E00               	movlw	0
  6533  01E91E  6E44               	movwf	(___fladd@b+3)^0,c
  6534  01E920                     l2715:
  6535  01E920  5048               	movf	(___fladd@a+3)^0,w,c
  6536  01E922  0B80               	andlw	128
  6537  01E924  6E4E               	movwf	___fladd@aexp^0,c
  6538  01E926  504D               	movf	___fladd@signs^0,w,c
  6539  01E928  184E               	xorwf	___fladd@aexp^0,w,c
  6540  01E92A  B4D8               	btfsc	status,2,c
  6541  01E92C  EF9A  F0F4         	goto	u2171
  6542  01E930  EF9C  F0F4         	goto	u2170
  6543  01E934                     u2171:
  6544  01E934  EF9D  F0F4         	goto	l2721
  6545  01E938                     u2170:
  6546  01E938  8C4D               	bsf	___fladd@signs^0,6,c
  6547  01E93A                     l2721:
  6548  01E93A  5048               	movf	(___fladd@a+3)^0,w,c
  6549  01E93C  2448               	addwf	(___fladd@a+3)^0,w,c
  6550  01E93E  6E4E               	movwf	___fladd@aexp^0,c
  6551  01E940  AE47               	btfss	(___fladd@a+2)^0,7,c
  6552  01E942  EFA5  F0F4         	goto	u2181
  6553  01E946  EFA7  F0F4         	goto	u2180
  6554  01E94A                     u2181:
  6555  01E94A  EFA8  F0F4         	goto	l2727
  6556  01E94E                     u2180:
  6557  01E94E  804E               	bsf	___fladd@aexp^0,0,c
  6558  01E950                     l2727:
  6559  01E950  504E               	movf	___fladd@aexp^0,w,c
  6560  01E952  B4D8               	btfsc	status,2,c
  6561  01E954  EFAE  F0F4         	goto	u2191
  6562  01E958  EFB0  F0F4         	goto	u2190
  6563  01E95C                     u2191:
  6564  01E95C  EFC5  F0F4         	goto	l2737
  6565  01E960                     u2190:
  6566  01E960  284E               	incf	___fladd@aexp^0,w,c
  6567  01E962  A4D8               	btfss	status,2,c
  6568  01E964  EFB6  F0F4         	goto	u2201
  6569  01E968  EFB8  F0F4         	goto	u2200
  6570  01E96C                     u2201:
  6571  01E96C  EFC0  F0F4         	goto	l2733
  6572  01E970                     u2200:
  6573  01E970  0E00               	movlw	0
  6574  01E972  6E45               	movwf	___fladd@a^0,c
  6575  01E974  0E00               	movlw	0
  6576  01E976  6E46               	movwf	(___fladd@a+1)^0,c
  6577  01E978  0E00               	movlw	0
  6578  01E97A  6E47               	movwf	(___fladd@a+2)^0,c
  6579  01E97C  0E00               	movlw	0
  6580  01E97E  6E48               	movwf	(___fladd@a+3)^0,c
  6581  01E980                     l2733:
  6582  01E980  8E47               	bsf	(___fladd@a+2)^0,7,c
  6583  01E982  0E00               	movlw	0
  6584  01E984  6E48               	movwf	(___fladd@a+3)^0,c
  6585  01E986  EFCD  F0F4         	goto	l2739
  6586  01E98A                     l2737:
  6587  01E98A  0E00               	movlw	0
  6588  01E98C  6E45               	movwf	___fladd@a^0,c
  6589  01E98E  0E00               	movlw	0
  6590  01E990  6E46               	movwf	(___fladd@a+1)^0,c
  6591  01E992  0E00               	movlw	0
  6592  01E994  6E47               	movwf	(___fladd@a+2)^0,c
  6593  01E996  0E00               	movlw	0
  6594  01E998  6E48               	movwf	(___fladd@a+3)^0,c
  6595  01E99A                     l2739:
  6596  01E99A  504F               	movf	___fladd@bexp^0,w,c
  6597  01E99C  5C4E               	subwf	___fladd@aexp^0,w,c
  6598  01E99E  B0D8               	btfsc	status,0,c
  6599  01E9A0  EFD4  F0F4         	goto	u2211
  6600  01E9A4  EFD6  F0F4         	goto	u2210
  6601  01E9A8                     u2211:
  6602  01E9A8  EFFD  F0F4         	goto	l2775
  6603  01E9AC                     u2210:
  6604  01E9AC  AC4D               	btfss	___fladd@signs^0,6,c
  6605  01E9AE  EFDB  F0F4         	goto	u2221
  6606  01E9B2  EFDD  F0F4         	goto	u2220
  6607  01E9B6                     u2221:
  6608  01E9B6  EFDF  F0F4         	goto	l2745
  6609  01E9BA                     u2220:
  6610  01E9BA  0E80               	movlw	128
  6611  01E9BC  1A4D               	xorwf	___fladd@signs^0,f,c
  6612  01E9BE                     l2745:
  6613  01E9BE  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  6614  01E9C2  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6615  01E9C6  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  6616  01E9CA  C041  F050         	movff	___fladd@b,___fladd@grs
  6617  01E9CE  C045  F041         	movff	___fladd@a,___fladd@b
  6618  01E9D2  C050  F045         	movff	___fladd@grs,___fladd@a
  6619  01E9D6  C042  F050         	movff	___fladd@b+1,___fladd@grs
  6620  01E9DA  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  6621  01E9DE  C050  F046         	movff	___fladd@grs,___fladd@a+1
  6622  01E9E2  C043  F050         	movff	___fladd@b+2,___fladd@grs
  6623  01E9E6  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  6624  01E9EA  C050  F047         	movff	___fladd@grs,___fladd@a+2
  6625  01E9EE  C044  F050         	movff	___fladd@b+3,___fladd@grs
  6626  01E9F2  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  6627  01E9F6  C050  F048         	movff	___fladd@grs,___fladd@a+3
  6628  01E9FA                     l2775:
  6629  01E9FA  0E00               	movlw	0
  6630  01E9FC  6E50               	movwf	___fladd@grs^0,c
  6631  01E9FE  504F               	movf	___fladd@bexp^0,w,c
  6632  01EA00  C04E  F049         	movff	___fladd@aexp,??___fladd
  6633  01EA04  6A4A               	clrf	(??___fladd+1)^0,c
  6634  01EA06  5E49               	subwf	??___fladd^0,f,c
  6635  01EA08  0E00               	movlw	0
  6636  01EA0A  5A4A               	subwfb	(??___fladd+1)^0,f,c
  6637  01EA0C  BE4A               	btfsc	(??___fladd+1)^0,7,c
  6638  01EA0E  EF12  F0F5         	goto	u2231
  6639  01EA12  504A               	movf	(??___fladd+1)^0,w,c
  6640  01EA14  E109               	bnz	u2230
  6641  01EA16  0E1A               	movlw	26
  6642  01EA18  5C49               	subwf	??___fladd^0,w,c
  6643  01EA1A  A0D8               	btfss	status,0,c
  6644  01EA1C  EF12  F0F5         	goto	u2231
  6645  01EA20  EF14  F0F5         	goto	u2230
  6646  01EA24                     u2231:
  6647  01EA24  EF4B  F0F5         	goto	l1027
  6648  01EA28                     u2230:
  6649  01EA28  5041               	movf	___fladd@b^0,w,c
  6650  01EA2A  1042               	iorwf	(___fladd@b+1)^0,w,c
  6651  01EA2C  1043               	iorwf	(___fladd@b+2)^0,w,c
  6652  01EA2E  1044               	iorwf	(___fladd@b+3)^0,w,c
  6653  01EA30  A4D8               	btfss	status,2,c
  6654  01EA32  EF1D  F0F5         	goto	u2241
  6655  01EA36  EF20  F0F5         	goto	u2240
  6656  01EA3A                     u2241:
  6657  01EA3A  0E01               	movlw	1
  6658  01EA3C  EF21  F0F5         	goto	u2250
  6659  01EA40                     u2240:
  6660  01EA40  0E00               	movlw	0
  6661  01EA42                     u2250:
  6662  01EA42  6E50               	movwf	___fladd@grs^0,c
  6663  01EA44  0E00               	movlw	0
  6664  01EA46  6E41               	movwf	___fladd@b^0,c
  6665  01EA48  0E00               	movlw	0
  6666  01EA4A  6E42               	movwf	(___fladd@b+1)^0,c
  6667  01EA4C  0E00               	movlw	0
  6668  01EA4E  6E43               	movwf	(___fladd@b+2)^0,c
  6669  01EA50  0E00               	movlw	0
  6670  01EA52  6E44               	movwf	(___fladd@b+3)^0,c
  6671  01EA54  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6672  01EA58  EF54  F0F5         	goto	l1026
  6673  01EA5C                     l1028:
  6674  01EA5C  A050               	btfss	___fladd@grs^0,0,c
  6675  01EA5E  EF33  F0F5         	goto	u2261
  6676  01EA62  EF35  F0F5         	goto	u2260
  6677  01EA66                     u2261:
  6678  01EA66  EF3B  F0F5         	goto	l2787
  6679  01EA6A                     u2260:
  6680  01EA6A  90D8               	bcf	status,0,c
  6681  01EA6C  3050               	rrcf	___fladd@grs^0,w,c
  6682  01EA6E  0901               	iorlw	1
  6683  01EA70  6E50               	movwf	___fladd@grs^0,c
  6684  01EA72  EF3D  F0F5         	goto	l2789
  6685  01EA76                     l2787:
  6686  01EA76  90D8               	bcf	status,0,c
  6687  01EA78  3250               	rrcf	___fladd@grs^0,f,c
  6688  01EA7A                     l2789:
  6689  01EA7A  A041               	btfss	___fladd@b^0,0,c
  6690  01EA7C  EF42  F0F5         	goto	u2271
  6691  01EA80  EF44  F0F5         	goto	u2270
  6692  01EA84                     u2271:
  6693  01EA84  EF45  F0F5         	goto	l2793
  6694  01EA88                     u2270:
  6695  01EA88  8E50               	bsf	___fladd@grs^0,7,c
  6696  01EA8A                     l2793:
  6697  01EA8A  3444               	rlcf	(___fladd@b+3)^0,w,c
  6698  01EA8C  3244               	rrcf	(___fladd@b+3)^0,f,c
  6699  01EA8E  3243               	rrcf	(___fladd@b+2)^0,f,c
  6700  01EA90  3242               	rrcf	(___fladd@b+1)^0,f,c
  6701  01EA92  3241               	rrcf	___fladd@b^0,f,c
  6702  01EA94  2A4F               	incf	___fladd@bexp^0,f,c
  6703  01EA96                     l1027:
  6704  01EA96  504E               	movf	___fladd@aexp^0,w,c
  6705  01EA98  5C4F               	subwf	___fladd@bexp^0,w,c
  6706  01EA9A  A0D8               	btfss	status,0,c
  6707  01EA9C  EF52  F0F5         	goto	u2281
  6708  01EAA0  EF54  F0F5         	goto	u2280
  6709  01EAA4                     u2281:
  6710  01EAA4  EF2E  F0F5         	goto	l1028
  6711  01EAA8                     u2280:
  6712  01EAA8                     l1026:
  6713  01EAA8  BC4D               	btfsc	___fladd@signs^0,6,c
  6714  01EAAA  EF59  F0F5         	goto	u2291
  6715  01EAAE  EF5B  F0F5         	goto	u2290
  6716  01EAB2                     u2291:
  6717  01EAB2  EF9B  F0F5         	goto	l2821
  6718  01EAB6                     u2290:
  6719  01EAB6  504F               	movf	___fladd@bexp^0,w,c
  6720  01EAB8  A4D8               	btfss	status,2,c
  6721  01EABA  EF61  F0F5         	goto	u2301
  6722  01EABE  EF63  F0F5         	goto	u2300
  6723  01EAC2                     u2301:
  6724  01EAC2  EF6D  F0F5         	goto	l2803
  6725  01EAC6                     u2300:
  6726  01EAC6  0E00               	movlw	0
  6727  01EAC8  6E41               	movwf	?___fladd^0,c
  6728  01EACA  0E00               	movlw	0
  6729  01EACC  6E42               	movwf	(?___fladd+1)^0,c
  6730  01EACE  0E00               	movlw	0
  6731  01EAD0  6E43               	movwf	(?___fladd+2)^0,c
  6732  01EAD2  0E00               	movlw	0
  6733  01EAD4  6E44               	movwf	(?___fladd+3)^0,c
  6734  01EAD6  EFBC  F0F6         	goto	l1035
  6735  01EADA                     l2803:
  6736  01EADA  5045               	movf	___fladd@a^0,w,c
  6737  01EADC  2641               	addwf	___fladd@b^0,f,c
  6738  01EADE  5046               	movf	(___fladd@a+1)^0,w,c
  6739  01EAE0  2242               	addwfc	(___fladd@b+1)^0,f,c
  6740  01EAE2  5047               	movf	(___fladd@a+2)^0,w,c
  6741  01EAE4  2243               	addwfc	(___fladd@b+2)^0,f,c
  6742  01EAE6  5048               	movf	(___fladd@a+3)^0,w,c
  6743  01EAE8  2244               	addwfc	(___fladd@b+3)^0,f,c
  6744  01EAEA  A044               	btfss	(___fladd@b+3)^0,0,c
  6745  01EAEC  EF7A  F0F5         	goto	u2311
  6746  01EAF0  EF7C  F0F5         	goto	u2310
  6747  01EAF4                     u2311:
  6748  01EAF4  EF28  F0F6         	goto	l2857
  6749  01EAF8                     u2310:
  6750  01EAF8  A050               	btfss	___fladd@grs^0,0,c
  6751  01EAFA  EF81  F0F5         	goto	u2321
  6752  01EAFE  EF83  F0F5         	goto	u2320
  6753  01EB02                     u2321:
  6754  01EB02  EF89  F0F5         	goto	l2811
  6755  01EB06                     u2320:
  6756  01EB06  90D8               	bcf	status,0,c
  6757  01EB08  3050               	rrcf	___fladd@grs^0,w,c
  6758  01EB0A  0901               	iorlw	1
  6759  01EB0C  6E50               	movwf	___fladd@grs^0,c
  6760  01EB0E  EF8B  F0F5         	goto	l2813
  6761  01EB12                     l2811:
  6762  01EB12  90D8               	bcf	status,0,c
  6763  01EB14  3250               	rrcf	___fladd@grs^0,f,c
  6764  01EB16                     l2813:
  6765  01EB16  A041               	btfss	___fladd@b^0,0,c
  6766  01EB18  EF90  F0F5         	goto	u2331
  6767  01EB1C  EF92  F0F5         	goto	u2330
  6768  01EB20                     u2331:
  6769  01EB20  EF93  F0F5         	goto	l2817
  6770  01EB24                     u2330:
  6771  01EB24  8E50               	bsf	___fladd@grs^0,7,c
  6772  01EB26                     l2817:
  6773  01EB26  3444               	rlcf	(___fladd@b+3)^0,w,c
  6774  01EB28  3244               	rrcf	(___fladd@b+3)^0,f,c
  6775  01EB2A  3243               	rrcf	(___fladd@b+2)^0,f,c
  6776  01EB2C  3242               	rrcf	(___fladd@b+1)^0,f,c
  6777  01EB2E  3241               	rrcf	___fladd@b^0,f,c
  6778  01EB30  2A4F               	incf	___fladd@bexp^0,f,c
  6779  01EB32  EF28  F0F6         	goto	l2857
  6780  01EB36                     l2821:
  6781  01EB36  5045               	movf	___fladd@a^0,w,c
  6782  01EB38  5C41               	subwf	___fladd@b^0,w,c
  6783  01EB3A  5046               	movf	(___fladd@a+1)^0,w,c
  6784  01EB3C  5842               	subwfb	(___fladd@b+1)^0,w,c
  6785  01EB3E  5047               	movf	(___fladd@a+2)^0,w,c
  6786  01EB40  5843               	subwfb	(___fladd@b+2)^0,w,c
  6787  01EB42  5044               	movf	(___fladd@b+3)^0,w,c
  6788  01EB44  0A80               	xorlw	128
  6789  01EB46  6E49               	movwf	??___fladd^0,c
  6790  01EB48  5048               	movf	(___fladd@a+3)^0,w,c
  6791  01EB4A  0A80               	xorlw	128
  6792  01EB4C  5849               	subwfb	??___fladd^0,w,c
  6793  01EB4E  B0D8               	btfsc	status,0,c
  6794  01EB50  EFAC  F0F5         	goto	u2341
  6795  01EB54  EFAE  F0F5         	goto	u2340
  6796  01EB58                     u2341:
  6797  01EB58  EFD9  F0F5         	goto	l2831
  6798  01EB5C                     u2340:
  6799  01EB5C  5041               	movf	___fladd@b^0,w,c
  6800  01EB5E  5C45               	subwf	___fladd@a^0,w,c
  6801  01EB60  6E49               	movwf	??___fladd^0,c
  6802  01EB62  5042               	movf	(___fladd@b+1)^0,w,c
  6803  01EB64  5846               	subwfb	(___fladd@a+1)^0,w,c
  6804  01EB66  6E4A               	movwf	(??___fladd+1)^0,c
  6805  01EB68  5043               	movf	(___fladd@b+2)^0,w,c
  6806  01EB6A  5847               	subwfb	(___fladd@a+2)^0,w,c
  6807  01EB6C  6E4B               	movwf	(??___fladd+2)^0,c
  6808  01EB6E  5044               	movf	(___fladd@b+3)^0,w,c
  6809  01EB70  5848               	subwfb	(___fladd@a+3)^0,w,c
  6810  01EB72  6E4C               	movwf	(??___fladd+3)^0,c
  6811  01EB74  0EFF               	movlw	255
  6812  01EB76  2449               	addwf	??___fladd^0,w,c
  6813  01EB78  6E41               	movwf	___fladd@b^0,c
  6814  01EB7A  0EFF               	movlw	255
  6815  01EB7C  204A               	addwfc	(??___fladd+1)^0,w,c
  6816  01EB7E  6E42               	movwf	(___fladd@b+1)^0,c
  6817  01EB80  0EFF               	movlw	255
  6818  01EB82  204B               	addwfc	(??___fladd+2)^0,w,c
  6819  01EB84  6E43               	movwf	(___fladd@b+2)^0,c
  6820  01EB86  0EFF               	movlw	255
  6821  01EB88  204C               	addwfc	(??___fladd+3)^0,w,c
  6822  01EB8A  6E44               	movwf	(___fladd@b+3)^0,c
  6823  01EB8C  0E80               	movlw	128
  6824  01EB8E  1A4D               	xorwf	___fladd@signs^0,f,c
  6825  01EB90  6C50               	negf	___fladd@grs^0,c
  6826  01EB92  5050               	movf	___fladd@grs^0,w,c
  6827  01EB94  A4D8               	btfss	status,2,c
  6828  01EB96  EFCF  F0F5         	goto	u2351
  6829  01EB9A  EFD1  F0F5         	goto	u2350
  6830  01EB9E                     u2351:
  6831  01EB9E  EFE1  F0F5         	goto	l1043
  6832  01EBA2                     u2350:
  6833  01EBA2  0E01               	movlw	1
  6834  01EBA4  2641               	addwf	___fladd@b^0,f,c
  6835  01EBA6  0E00               	movlw	0
  6836  01EBA8  2242               	addwfc	(___fladd@b+1)^0,f,c
  6837  01EBAA  2243               	addwfc	(___fladd@b+2)^0,f,c
  6838  01EBAC  2244               	addwfc	(___fladd@b+3)^0,f,c
  6839  01EBAE  EFE1  F0F5         	goto	l1043
  6840  01EBB2                     l2831:
  6841  01EBB2  5045               	movf	___fladd@a^0,w,c
  6842  01EBB4  5E41               	subwf	___fladd@b^0,f,c
  6843  01EBB6  5046               	movf	(___fladd@a+1)^0,w,c
  6844  01EBB8  5A42               	subwfb	(___fladd@b+1)^0,f,c
  6845  01EBBA  5047               	movf	(___fladd@a+2)^0,w,c
  6846  01EBBC  5A43               	subwfb	(___fladd@b+2)^0,f,c
  6847  01EBBE  5048               	movf	(___fladd@a+3)^0,w,c
  6848  01EBC0  5A44               	subwfb	(___fladd@b+3)^0,f,c
  6849  01EBC2                     l1043:
  6850  01EBC2  5041               	movf	___fladd@b^0,w,c
  6851  01EBC4  1042               	iorwf	(___fladd@b+1)^0,w,c
  6852  01EBC6  1043               	iorwf	(___fladd@b+2)^0,w,c
  6853  01EBC8  1044               	iorwf	(___fladd@b+3)^0,w,c
  6854  01EBCA  A4D8               	btfss	status,2,c
  6855  01EBCC  EFEA  F0F5         	goto	u2361
  6856  01EBD0  EFEC  F0F5         	goto	u2360
  6857  01EBD4                     u2361:
  6858  01EBD4  EF21  F0F6         	goto	l2855
  6859  01EBD8                     u2360:
  6860  01EBD8  5050               	movf	___fladd@grs^0,w,c
  6861  01EBDA  A4D8               	btfss	status,2,c
  6862  01EBDC  EFF2  F0F5         	goto	u2371
  6863  01EBE0  EFF4  F0F5         	goto	u2370
  6864  01EBE4                     u2371:
  6865  01EBE4  EF21  F0F6         	goto	l2855
  6866  01EBE8                     u2370:
  6867  01EBE8  0E00               	movlw	0
  6868  01EBEA  6E41               	movwf	?___fladd^0,c
  6869  01EBEC  0E00               	movlw	0
  6870  01EBEE  6E42               	movwf	(?___fladd+1)^0,c
  6871  01EBF0  0E00               	movlw	0
  6872  01EBF2  6E43               	movwf	(?___fladd+2)^0,c
  6873  01EBF4  0E00               	movlw	0
  6874  01EBF6  6E44               	movwf	(?___fladd+3)^0,c
  6875  01EBF8  EFBC  F0F6         	goto	l1035
  6876  01EBFC                     l2839:
  6877  01EBFC  90D8               	bcf	status,0,c
  6878  01EBFE  3641               	rlcf	___fladd@b^0,f,c
  6879  01EC00  3642               	rlcf	(___fladd@b+1)^0,f,c
  6880  01EC02  3643               	rlcf	(___fladd@b+2)^0,f,c
  6881  01EC04  3644               	rlcf	(___fladd@b+3)^0,f,c
  6882  01EC06  AE50               	btfss	___fladd@grs^0,7,c
  6883  01EC08  EF08  F0F6         	goto	u2381
  6884  01EC0C  EF0A  F0F6         	goto	u2380
  6885  01EC10                     u2381:
  6886  01EC10  EF0B  F0F6         	goto	l2845
  6887  01EC14                     u2380:
  6888  01EC14  8041               	bsf	___fladd@b^0,0,c
  6889  01EC16                     l2845:
  6890  01EC16  A050               	btfss	___fladd@grs^0,0,c
  6891  01EC18  EF10  F0F6         	goto	u2391
  6892  01EC1C  EF12  F0F6         	goto	u2390
  6893  01EC20                     u2391:
  6894  01EC20  EF16  F0F6         	goto	l2849
  6895  01EC24                     u2390:
  6896  01EC24  80D8               	bsf	status,0,c
  6897  01EC26  3650               	rlcf	___fladd@grs^0,f,c
  6898  01EC28  EF18  F0F6         	goto	l2851
  6899  01EC2C                     l2849:
  6900  01EC2C  90D8               	bcf	status,0,c
  6901  01EC2E  3650               	rlcf	___fladd@grs^0,f,c
  6902  01EC30                     l2851:
  6903  01EC30  504F               	movf	___fladd@bexp^0,w,c
  6904  01EC32  B4D8               	btfsc	status,2,c
  6905  01EC34  EF1E  F0F6         	goto	u2401
  6906  01EC38  EF20  F0F6         	goto	u2400
  6907  01EC3C                     u2401:
  6908  01EC3C  EF21  F0F6         	goto	l2855
  6909  01EC40                     u2400:
  6910  01EC40  064F               	decf	___fladd@bexp^0,f,c
  6911  01EC42                     l2855:
  6912  01EC42  AE43               	btfss	(___fladd@b+2)^0,7,c
  6913  01EC44  EF26  F0F6         	goto	u2411
  6914  01EC48  EF28  F0F6         	goto	u2410
  6915  01EC4C                     u2411:
  6916  01EC4C  EFFE  F0F5         	goto	l2839
  6917  01EC50                     u2410:
  6918  01EC50                     l2857:
  6919  01EC50  0E00               	movlw	0
  6920  01EC52  6E4E               	movwf	___fladd@aexp^0,c
  6921  01EC54  AE50               	btfss	___fladd@grs^0,7,c
  6922  01EC56  EF2F  F0F6         	goto	u2421
  6923  01EC5A  EF31  F0F6         	goto	u2420
  6924  01EC5E                     u2421:
  6925  01EC5E  EF49  F0F6         	goto	l1052
  6926  01EC62                     u2420:
  6927  01EC62  C050  F049         	movff	___fladd@grs,??___fladd
  6928  01EC66  0E7F               	movlw	127
  6929  01EC68  1649               	andwf	??___fladd^0,f,c
  6930  01EC6A  B4D8               	btfsc	status,2,c
  6931  01EC6C  EF3A  F0F6         	goto	u2431
  6932  01EC70  EF3C  F0F6         	goto	u2430
  6933  01EC74                     u2431:
  6934  01EC74  EF40  F0F6         	goto	l1053
  6935  01EC78                     u2430:
  6936  01EC78                     l2863:
  6937  01EC78  0E01               	movlw	1
  6938  01EC7A  6E4E               	movwf	___fladd@aexp^0,c
  6939  01EC7C  EF49  F0F6         	goto	l1052
  6940  01EC80                     l1053:
  6941  01EC80  A041               	btfss	___fladd@b^0,0,c
  6942  01EC82  EF45  F0F6         	goto	u2441
  6943  01EC86  EF47  F0F6         	goto	u2440
  6944  01EC8A                     u2441:
  6945  01EC8A  EF49  F0F6         	goto	l1052
  6946  01EC8E                     u2440:
  6947  01EC8E  EF3C  F0F6         	goto	l2863
  6948  01EC92                     l1052:
  6949  01EC92  504E               	movf	___fladd@aexp^0,w,c
  6950  01EC94  B4D8               	btfsc	status,2,c
  6951  01EC96  EF4F  F0F6         	goto	u2451
  6952  01EC9A  EF51  F0F6         	goto	u2450
  6953  01EC9E                     u2451:
  6954  01EC9E  EF7C  F0F6         	goto	l2875
  6955  01ECA2                     u2450:
  6956  01ECA2  0E01               	movlw	1
  6957  01ECA4  2641               	addwf	___fladd@b^0,f,c
  6958  01ECA6  0E00               	movlw	0
  6959  01ECA8  2242               	addwfc	(___fladd@b+1)^0,f,c
  6960  01ECAA  2243               	addwfc	(___fladd@b+2)^0,f,c
  6961  01ECAC  2244               	addwfc	(___fladd@b+3)^0,f,c
  6962  01ECAE  A044               	btfss	(___fladd@b+3)^0,0,c
  6963  01ECB0  EF5C  F0F6         	goto	u2461
  6964  01ECB4  EF5E  F0F6         	goto	u2460
  6965  01ECB8                     u2461:
  6966  01ECB8  EF7C  F0F6         	goto	l2875
  6967  01ECBC                     u2460:
  6968  01ECBC  C041  F049         	movff	___fladd@b,??___fladd
  6969  01ECC0  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  6970  01ECC4  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  6971  01ECC8  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  6972  01ECCC  344C               	rlcf	(??___fladd+3)^0,w,c
  6973  01ECCE  324C               	rrcf	(??___fladd+3)^0,f,c
  6974  01ECD0  324B               	rrcf	(??___fladd+2)^0,f,c
  6975  01ECD2  324A               	rrcf	(??___fladd+1)^0,f,c
  6976  01ECD4  3249               	rrcf	??___fladd^0,f,c
  6977  01ECD6  C049  F041         	movff	??___fladd,___fladd@b
  6978  01ECDA  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  6979  01ECDE  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  6980  01ECE2  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  6981  01ECE6  284F               	incf	___fladd@bexp^0,w,c
  6982  01ECE8  B4D8               	btfsc	status,2,c
  6983  01ECEA  EF79  F0F6         	goto	u2471
  6984  01ECEE  EF7B  F0F6         	goto	u2470
  6985  01ECF2                     u2471:
  6986  01ECF2  EF7C  F0F6         	goto	l2875
  6987  01ECF6                     u2470:
  6988  01ECF6  2A4F               	incf	___fladd@bexp^0,f,c
  6989  01ECF8                     l2875:
  6990  01ECF8  284F               	incf	___fladd@bexp^0,w,c
  6991  01ECFA  B4D8               	btfsc	status,2,c
  6992  01ECFC  EF82  F0F6         	goto	u2481
  6993  01ED00  EF84  F0F6         	goto	u2480
  6994  01ED04                     u2481:
  6995  01ED04  EF8C  F0F6         	goto	l2879
  6996  01ED08                     u2480:
  6997  01ED08  504F               	movf	___fladd@bexp^0,w,c
  6998  01ED0A  A4D8               	btfss	status,2,c
  6999  01ED0C  EF8A  F0F6         	goto	u2491
  7000  01ED10  EF8C  F0F6         	goto	u2490
  7001  01ED14                     u2491:
  7002  01ED14  EF9E  F0F6         	goto	l2883
  7003  01ED18                     u2490:
  7004  01ED18                     l2879:
  7005  01ED18  0E00               	movlw	0
  7006  01ED1A  6E41               	movwf	___fladd@b^0,c
  7007  01ED1C  0E00               	movlw	0
  7008  01ED1E  6E42               	movwf	(___fladd@b+1)^0,c
  7009  01ED20  0E00               	movlw	0
  7010  01ED22  6E43               	movwf	(___fladd@b+2)^0,c
  7011  01ED24  0E00               	movlw	0
  7012  01ED26  6E44               	movwf	(___fladd@b+3)^0,c
  7013  01ED28  504F               	movf	___fladd@bexp^0,w,c
  7014  01ED2A  A4D8               	btfss	status,2,c
  7015  01ED2C  EF9A  F0F6         	goto	u2501
  7016  01ED30  EF9C  F0F6         	goto	u2500
  7017  01ED34                     u2501:
  7018  01ED34  EF9E  F0F6         	goto	l2883
  7019  01ED38                     u2500:
  7020  01ED38  0E00               	movlw	0
  7021  01ED3A  6E4D               	movwf	___fladd@signs^0,c
  7022  01ED3C                     l2883:
  7023  01ED3C  A04F               	btfss	___fladd@bexp^0,0,c
  7024  01ED3E  EFA3  F0F6         	goto	u2511
  7025  01ED42  EFA5  F0F6         	goto	u2510
  7026  01ED46                     u2511:
  7027  01ED46  EFA8  F0F6         	goto	l2887
  7028  01ED4A                     u2510:
  7029  01ED4A  8E43               	bsf	(___fladd@b+2)^0,7,c
  7030  01ED4C  EFA9  F0F6         	goto	l2889
  7031  01ED50                     l2887:
  7032  01ED50  9E43               	bcf	(___fladd@b+2)^0,7,c
  7033  01ED52                     l2889:
  7034  01ED52  90D8               	bcf	status,0,c
  7035  01ED54  304F               	rrcf	___fladd@bexp^0,w,c
  7036  01ED56  6E44               	movwf	(___fladd@b+3)^0,c
  7037  01ED58  AE4D               	btfss	___fladd@signs^0,7,c
  7038  01ED5A  EFB1  F0F6         	goto	u2521
  7039  01ED5E  EFB3  F0F6         	goto	u2520
  7040  01ED62                     u2521:
  7041  01ED62  EFB4  F0F6         	goto	l2895
  7042  01ED66                     u2520:
  7043  01ED66  8E44               	bsf	(___fladd@b+3)^0,7,c
  7044  01ED68                     l2895:
  7045  01ED68  C041  F041         	movff	___fladd@b,?___fladd
  7046  01ED6C  C042  F042         	movff	___fladd@b+1,?___fladd+1
  7047  01ED70  C043  F043         	movff	___fladd@b+2,?___fladd+2
  7048  01ED74  C044  F044         	movff	___fladd@b+3,?___fladd+3
  7049  01ED78                     l1035:
  7050  01ED78  0012               	return		;funcret
  7051  01ED7A                     __end_of___fladd:
  7052                           	callstack 0
  7053                           
  7054 ;; *************** function _color_click_init *****************
  7055 ;; Defined at:
  7056 ;;		line 17 in file "color.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7074 ;;Total ram usage:        1 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; Hardware stack levels required when called: 3
  7077 ;; This function calls:
  7078 ;;		_I2C_2_Master_Init
  7079 ;;		_color_writetoaddr
  7080 ;; This function is called by:
  7081 ;;		_main
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text25
  7086  01D374                     __ptext25:
  7087                           	callstack 0
  7088  01D374                     _color_click_init:
  7089                           	callstack 27
  7090  01D374                     
  7091                           ;color.c: 20:     I2C_2_Master_Init();
  7092  01D374  EC8C  F0E9         	call	_I2C_2_Master_Init	;wreg free
  7093  01D378                     
  7094                           ;color.c: 23:   color_writetoaddr(0x00, 0x01);
  7095  01D378  0E01               	movlw	1
  7096  01D37A  6E03               	movwf	color_writetoaddr@value^0,c
  7097  01D37C  0E00               	movlw	0
  7098  01D37E  EC35  F0E9         	call	_color_writetoaddr
  7099  01D382                     
  7100                           ;color.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7101  01D382  0E3F               	movlw	63
  7102  01D384  6E05               	movwf	??_color_click_init^0,c
  7103  01D386  0E55               	movlw	85
  7104  01D388                     u4107:
  7105  01D388  2EE8               	decfsz	wreg,f,c
  7106  01D38A  D7FE               	bra	u4107
  7107  01D38C  2E05               	decfsz	??_color_click_init^0,f,c
  7108  01D38E  D7FC               	bra	u4107
  7109  01D390  F000               	nop	
  7110  01D392                     
  7111                           ;color.c: 27:  color_writetoaddr(0x00, 0x03);
  7112  01D392  0E03               	movlw	3
  7113  01D394  6E03               	movwf	color_writetoaddr@value^0,c
  7114  01D396  0E00               	movlw	0
  7115  01D398  EC35  F0E9         	call	_color_writetoaddr
  7116  01D39C                     
  7117                           ;color.c: 30:  color_writetoaddr(0x01, 0xD5);
  7118  01D39C  0ED5               	movlw	213
  7119  01D39E  6E03               	movwf	color_writetoaddr@value^0,c
  7120  01D3A0  0E01               	movlw	1
  7121  01D3A2  EC35  F0E9         	call	_color_writetoaddr
  7122  01D3A6  0012               	return		;funcret
  7123  01D3A8                     __end_of_color_click_init:
  7124                           	callstack 0
  7125                           
  7126 ;; *************** function _color_writetoaddr *****************
  7127 ;; Defined at:
  7128 ;;		line 33 in file "color.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  address         1    wreg     unsigned char 
  7131 ;;  value           1    2[COMRAM] unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  address         1    3[COMRAM] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  1    wreg      void 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7143 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;Total ram usage:        2 bytes
  7148 ;; Hardware stack levels used: 1
  7149 ;; Hardware stack levels required when called: 2
  7150 ;; This function calls:
  7151 ;;		_I2C_2_Master_Start
  7152 ;;		_I2C_2_Master_Stop
  7153 ;;		_I2C_2_Master_Write
  7154 ;; This function is called by:
  7155 ;;		_color_click_init
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text26
  7160  01D26A                     __ptext26:
  7161                           	callstack 0
  7162  01D26A                     _color_writetoaddr:
  7163                           	callstack 27
  7164                           
  7165                           ;incstack = 0
  7166                           ;color_writetoaddr@address stored from wreg
  7167  01D26A  6E04               	movwf	color_writetoaddr@address^0,c
  7168  01D26C                     
  7169                           ;color.c: 34:     I2C_2_Master_Start();
  7170  01D26C  EC11  F0E9         	call	_I2C_2_Master_Start	;wreg free
  7171                           
  7172                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  7173  01D270  0E52               	movlw	82
  7174  01D272  EC21  F0E9         	call	_I2C_2_Master_Write
  7175                           
  7176                           ;color.c: 36:     I2C_2_Master_Write(0x80 | address);
  7177  01D276  5004               	movf	color_writetoaddr@address^0,w,c
  7178  01D278  0980               	iorlw	128
  7179  01D27A  EC21  F0E9         	call	_I2C_2_Master_Write
  7180                           
  7181                           ;color.c: 37:     I2C_2_Master_Write(value);
  7182  01D27E  5003               	movf	color_writetoaddr@value^0,w,c
  7183  01D280  EC21  F0E9         	call	_I2C_2_Master_Write
  7184                           
  7185                           ;color.c: 38:     I2C_2_Master_Stop();
  7186  01D284  EC16  F0E9         	call	_I2C_2_Master_Stop	;wreg free
  7187  01D288  0012               	return		;funcret
  7188  01D28A                     __end_of_color_writetoaddr:
  7189                           	callstack 0
  7190                           
  7191 ;; *************** function _I2C_2_Master_Init *****************
  7192 ;; Defined at:
  7193 ;;		line 4 in file "i2c.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, status,2
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used: 1
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_color_click_init
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text27
  7221  01D318                     __ptext27:
  7222                           	callstack 0
  7223  01D318                     _I2C_2_Master_Init:
  7224                           	callstack 29
  7225  01D318                     
  7226                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7227  01D318  010E               	movlb	14	; () banked
  7228  01D31A  51D9               	movf	217,w,b	;volatile
  7229  01D31C  0BF0               	andlw	-16
  7230  01D31E  0908               	iorlw	8
  7231  01D320  6FD9               	movwf	217,b	;volatile
  7232  01D322                     
  7233                           ; BSR set to: 14
  7234                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7235  01D322  8BD9               	bsf	217,5,b	;volatile
  7236                           
  7237                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7238  01D324  0E9F               	movlw	159
  7239  01D326  6FD6               	movwf	214,b	;volatile
  7240  01D328                     
  7241                           ; BSR set to: 14
  7242                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7243  01D328  8A84               	bsf	132,5,c	;volatile
  7244  01D32A                     
  7245                           ; BSR set to: 14
  7246                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7247  01D32A  8C84               	bsf	132,6,c	;volatile
  7248  01D32C                     
  7249                           ; BSR set to: 14
  7250                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7251  01D32C  9BA7               	bcf	167,5,b	;volatile
  7252  01D32E                     
  7253                           ; BSR set to: 14
  7254                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7255  01D32E  9DA7               	bcf	167,6,b	;volatile
  7256                           
  7257                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7258  01D330  0E1D               	movlw	29
  7259  01D332  6F1D               	movwf	29,b	;volatile
  7260                           
  7261                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7262  01D334  0E1E               	movlw	30
  7263  01D336  6F1C               	movwf	28,b	;volatile
  7264                           
  7265                           ;i2c.c: 18:   RD5PPS=0x1C;
  7266  01D338  0E1C               	movlw	28
  7267  01D33A  6F6F               	movwf	111,b	;volatile
  7268                           
  7269                           ;i2c.c: 19:   RD6PPS=0x1B;
  7270  01D33C  0E1B               	movlw	27
  7271  01D33E  6F70               	movwf	112,b	;volatile
  7272  01D340                     
  7273                           ; BSR set to: 14
  7274  01D340  0012               	return		;funcret
  7275  01D342                     __end_of_I2C_2_Master_Init:
  7276                           	callstack 0
  7277                           
  7278 ;; *************** function _calibrateW *****************
  7279 ;; Defined at:
  7280 ;;		line 108 in file "color.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  m               2   11[COMRAM] PTR struct RGB_val
  7283 ;;		 -> main@test(20), 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;		None
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      void 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7299 ;;Total ram usage:        2 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; Hardware stack levels required when called: 3
  7302 ;; This function calls:
  7303 ;;		_color_read_Blue
  7304 ;;		_color_read_Green
  7305 ;;		_color_read_Red
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text28
  7312  01D472                     __ptext28:
  7313                           	callstack 0
  7314  01D472                     _calibrateW:
  7315                           	callstack 27
  7316  01D472                     
  7317                           ;color.c: 109:     (m->whiteR) = color_read_Red();
  7318  01D472  ECAE  F0EA         	call	_color_read_Red	;wreg free
  7319  01D476  EE20 F006          	lfsr	2,6
  7320  01D47A  500C               	movf	calibrateW@m^0,w,c
  7321  01D47C  26D9               	addwf	fsr2l,f,c
  7322  01D47E  500D               	movf	(calibrateW@m+1)^0,w,c
  7323  01D480  22DA               	addwfc	fsr2h,f,c
  7324  01D482  C005  FFDE         	movff	?_color_read_Red,postinc2
  7325  01D486  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7326                           
  7327                           ;color.c: 110:     (m->whiteG) = color_read_Green();
  7328  01D48A  EC86  F0EA         	call	_color_read_Green	;wreg free
  7329  01D48E  EE20 F008          	lfsr	2,8
  7330  01D492  500C               	movf	calibrateW@m^0,w,c
  7331  01D494  26D9               	addwf	fsr2l,f,c
  7332  01D496  500D               	movf	(calibrateW@m+1)^0,w,c
  7333  01D498  22DA               	addwfc	fsr2h,f,c
  7334  01D49A  C005  FFDE         	movff	?_color_read_Green,postinc2
  7335  01D49E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7336                           
  7337                           ;color.c: 111:     (m->whiteB) = color_read_Blue();
  7338  01D4A2  EC5E  F0EA         	call	_color_read_Blue	;wreg free
  7339  01D4A6  EE20 F00A          	lfsr	2,10
  7340  01D4AA  500C               	movf	calibrateW@m^0,w,c
  7341  01D4AC  26D9               	addwf	fsr2l,f,c
  7342  01D4AE  500D               	movf	(calibrateW@m+1)^0,w,c
  7343  01D4B0  22DA               	addwfc	fsr2h,f,c
  7344  01D4B2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7345  01D4B6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7346  01D4BA  0012               	return		;funcret
  7347  01D4BC                     __end_of_calibrateW:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function _calibrateB *****************
  7351 ;; Defined at:
  7352 ;;		line 114 in file "color.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  m               2   11[COMRAM] PTR struct RGB_val
  7355 ;;		 -> main@test(20), 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;Total ram usage:        2 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 3
  7374 ;; This function calls:
  7375 ;;		_color_read_Blue
  7376 ;;		_color_read_Green
  7377 ;;		_color_read_Red
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text29
  7384  01D42C                     __ptext29:
  7385                           	callstack 0
  7386  01D42C                     _calibrateB:
  7387                           	callstack 27
  7388  01D42C                     
  7389                           ;color.c: 115:     (m->blackR) = color_read_Red();
  7390  01D42C  ECAE  F0EA         	call	_color_read_Red	;wreg free
  7391  01D430  C00C  FFD9         	movff	calibrateB@m,fsr2l
  7392  01D434  C00D  FFDA         	movff	calibrateB@m+1,fsr2h
  7393  01D438  C005  FFDE         	movff	?_color_read_Red,postinc2
  7394  01D43C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7395                           
  7396                           ;color.c: 116:     (m->blackG) = color_read_Green();
  7397  01D440  EC86  F0EA         	call	_color_read_Green	;wreg free
  7398  01D444  EE20 F002          	lfsr	2,2
  7399  01D448  500C               	movf	calibrateB@m^0,w,c
  7400  01D44A  26D9               	addwf	fsr2l,f,c
  7401  01D44C  500D               	movf	(calibrateB@m+1)^0,w,c
  7402  01D44E  22DA               	addwfc	fsr2h,f,c
  7403  01D450  C005  FFDE         	movff	?_color_read_Green,postinc2
  7404  01D454  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7405                           
  7406                           ;color.c: 117:     (m->blackB) = color_read_Blue();
  7407  01D458  EC5E  F0EA         	call	_color_read_Blue	;wreg free
  7408  01D45C  EE20 F004          	lfsr	2,4
  7409  01D460  500C               	movf	calibrateB@m^0,w,c
  7410  01D462  26D9               	addwf	fsr2l,f,c
  7411  01D464  500D               	movf	(calibrateB@m+1)^0,w,c
  7412  01D466  22DA               	addwfc	fsr2h,f,c
  7413  01D468  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7414  01D46C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7415  01D470  0012               	return		;funcret
  7416  01D472                     __end_of_calibrateB:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function _color_read_Red *****************
  7420 ;; Defined at:
  7421 ;;		line 56 in file "color.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  tmp             2    9[COMRAM] unsigned int 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  2    4[COMRAM] unsigned int 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;Total ram usage:        7 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; Hardware stack levels required when called: 2
  7442 ;; This function calls:
  7443 ;;		_I2C_2_Master_Read
  7444 ;;		_I2C_2_Master_RepStart
  7445 ;;		_I2C_2_Master_Start
  7446 ;;		_I2C_2_Master_Stop
  7447 ;;		_I2C_2_Master_Write
  7448 ;; This function is called by:
  7449 ;;		_read_colours
  7450 ;;		_calibrateW
  7451 ;;		_calibrateB
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text30
  7456  01D55C                     __ptext30:
  7457                           	callstack 0
  7458  01D55C                     _color_read_Red:
  7459                           	callstack 27
  7460  01D55C                     
  7461                           ;color.c: 58:  unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  7462  01D55C  EC11  F0E9         	call	_I2C_2_Master_Start	;wreg free
  7463                           
  7464                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  7465  01D560  0E52               	movlw	82
  7466  01D562  EC21  F0E9         	call	_I2C_2_Master_Write
  7467                           
  7468                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
  7469  01D566  0EB6               	movlw	182
  7470  01D568  EC21  F0E9         	call	_I2C_2_Master_Write
  7471                           
  7472                           ;color.c: 62:  I2C_2_Master_RepStart();
  7473  01D56C  EC0C  F0E9         	call	_I2C_2_Master_RepStart	;wreg free
  7474                           
  7475                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  7476  01D570  0E53               	movlw	83
  7477  01D572  EC21  F0E9         	call	_I2C_2_Master_Write
  7478                           
  7479                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  7480  01D576  0E01               	movlw	1
  7481  01D578  ECD4  F0E9         	call	_I2C_2_Master_Read
  7482  01D57C  6E07               	movwf	??_color_read_Red^0,c
  7483  01D57E  5007               	movf	??_color_read_Red^0,w,c
  7484  01D580  6E0A               	movwf	color_read_Red@tmp^0,c
  7485  01D582  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7486                           
  7487                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7488  01D584  0E00               	movlw	0
  7489  01D586  ECD4  F0E9         	call	_I2C_2_Master_Read
  7490  01D58A  6E07               	movwf	??_color_read_Red^0,c
  7491  01D58C  5007               	movf	??_color_read_Red^0,w,c
  7492  01D58E  6E09               	movwf	(??_color_read_Red+2)^0,c
  7493  01D590  6A08               	clrf	(??_color_read_Red+1)^0,c
  7494  01D592  500A               	movf	color_read_Red@tmp^0,w,c
  7495  01D594  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7496  01D596  6E0A               	movwf	color_read_Red@tmp^0,c
  7497  01D598  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7498  01D59A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7499  01D59C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7500                           
  7501                           ;color.c: 66:  I2C_2_Master_Stop();
  7502  01D59E  EC16  F0E9         	call	_I2C_2_Master_Stop	;wreg free
  7503  01D5A2                     
  7504                           ;color.c: 67:  return tmp;
  7505  01D5A2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7506  01D5A6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7507  01D5AA  0012               	return		;funcret
  7508  01D5AC                     __end_of_color_read_Red:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _color_read_Green *****************
  7512 ;; Defined at:
  7513 ;;		line 70 in file "color.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  tmp             2    9[COMRAM] unsigned int 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  2    4[COMRAM] unsigned int 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;Total ram usage:        7 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 2
  7534 ;; This function calls:
  7535 ;;		_I2C_2_Master_Read
  7536 ;;		_I2C_2_Master_RepStart
  7537 ;;		_I2C_2_Master_Start
  7538 ;;		_I2C_2_Master_Stop
  7539 ;;		_I2C_2_Master_Write
  7540 ;; This function is called by:
  7541 ;;		_read_colours
  7542 ;;		_calibrateW
  7543 ;;		_calibrateB
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text31
  7548  01D50C                     __ptext31:
  7549                           	callstack 0
  7550  01D50C                     _color_read_Green:
  7551                           	callstack 27
  7552  01D50C                     
  7553                           ;color.c: 71:     unsigned int tmp;;color.c: 72:     I2C_2_Master_Start();
  7554  01D50C  EC11  F0E9         	call	_I2C_2_Master_Start	;wreg free
  7555                           
  7556                           ;color.c: 73:     I2C_2_Master_Write(0x52 | 0x00);
  7557  01D510  0E52               	movlw	82
  7558  01D512  EC21  F0E9         	call	_I2C_2_Master_Write
  7559                           
  7560                           ;color.c: 74:  I2C_2_Master_Write(0xA0 | 0x18);
  7561  01D516  0EB8               	movlw	184
  7562  01D518  EC21  F0E9         	call	_I2C_2_Master_Write
  7563                           
  7564                           ;color.c: 75:  I2C_2_Master_RepStart();
  7565  01D51C  EC0C  F0E9         	call	_I2C_2_Master_RepStart	;wreg free
  7566                           
  7567                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x01);
  7568  01D520  0E53               	movlw	83
  7569  01D522  EC21  F0E9         	call	_I2C_2_Master_Write
  7570                           
  7571                           ;color.c: 77:  tmp=I2C_2_Master_Read(1);
  7572  01D526  0E01               	movlw	1
  7573  01D528  ECD4  F0E9         	call	_I2C_2_Master_Read
  7574  01D52C  6E07               	movwf	??_color_read_Green^0,c
  7575  01D52E  5007               	movf	??_color_read_Green^0,w,c
  7576  01D530  6E0A               	movwf	color_read_Green@tmp^0,c
  7577  01D532  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7578                           
  7579                           ;color.c: 78:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7580  01D534  0E00               	movlw	0
  7581  01D536  ECD4  F0E9         	call	_I2C_2_Master_Read
  7582  01D53A  6E07               	movwf	??_color_read_Green^0,c
  7583  01D53C  5007               	movf	??_color_read_Green^0,w,c
  7584  01D53E  6E09               	movwf	(??_color_read_Green+2)^0,c
  7585  01D540  6A08               	clrf	(??_color_read_Green+1)^0,c
  7586  01D542  500A               	movf	color_read_Green@tmp^0,w,c
  7587  01D544  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7588  01D546  6E0A               	movwf	color_read_Green@tmp^0,c
  7589  01D548  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7590  01D54A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7591  01D54C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7592                           
  7593                           ;color.c: 79:     I2C_2_Master_Stop();
  7594  01D54E  EC16  F0E9         	call	_I2C_2_Master_Stop	;wreg free
  7595  01D552                     
  7596                           ;color.c: 80:     return tmp;
  7597  01D552  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7598  01D556  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7599  01D55A  0012               	return		;funcret
  7600  01D55C                     __end_of_color_read_Green:
  7601                           	callstack 0
  7602                           
  7603 ;; *************** function _color_read_Blue *****************
  7604 ;; Defined at:
  7605 ;;		line 83 in file "color.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  tmp             2    9[COMRAM] unsigned int 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  2    4[COMRAM] unsigned int 
  7612 ;; Registers used:
  7613 ;;		wreg, status,2, status,0, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7623 ;;Total ram usage:        7 bytes
  7624 ;; Hardware stack levels used: 1
  7625 ;; Hardware stack levels required when called: 2
  7626 ;; This function calls:
  7627 ;;		_I2C_2_Master_Read
  7628 ;;		_I2C_2_Master_RepStart
  7629 ;;		_I2C_2_Master_Start
  7630 ;;		_I2C_2_Master_Stop
  7631 ;;		_I2C_2_Master_Write
  7632 ;; This function is called by:
  7633 ;;		_read_colours
  7634 ;;		_calibrateW
  7635 ;;		_calibrateB
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text32
  7640  01D4BC                     __ptext32:
  7641                           	callstack 0
  7642  01D4BC                     _color_read_Blue:
  7643                           	callstack 27
  7644  01D4BC                     
  7645                           ;color.c: 84:     unsigned int tmp;;color.c: 85:     I2C_2_Master_Start();
  7646  01D4BC  EC11  F0E9         	call	_I2C_2_Master_Start	;wreg free
  7647                           
  7648                           ;color.c: 86:     I2C_2_Master_Write(0x52 | 0x00);
  7649  01D4C0  0E52               	movlw	82
  7650  01D4C2  EC21  F0E9         	call	_I2C_2_Master_Write
  7651                           
  7652                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x1A);
  7653  01D4C6  0EBA               	movlw	186
  7654  01D4C8  EC21  F0E9         	call	_I2C_2_Master_Write
  7655                           
  7656                           ;color.c: 88:  I2C_2_Master_RepStart();
  7657  01D4CC  EC0C  F0E9         	call	_I2C_2_Master_RepStart	;wreg free
  7658                           
  7659                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  7660  01D4D0  0E53               	movlw	83
  7661  01D4D2  EC21  F0E9         	call	_I2C_2_Master_Write
  7662                           
  7663                           ;color.c: 90:  tmp=I2C_2_Master_Read(1);
  7664  01D4D6  0E01               	movlw	1
  7665  01D4D8  ECD4  F0E9         	call	_I2C_2_Master_Read
  7666  01D4DC  6E07               	movwf	??_color_read_Blue^0,c
  7667  01D4DE  5007               	movf	??_color_read_Blue^0,w,c
  7668  01D4E0  6E0A               	movwf	color_read_Blue@tmp^0,c
  7669  01D4E2  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7670                           
  7671                           ;color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7672  01D4E4  0E00               	movlw	0
  7673  01D4E6  ECD4  F0E9         	call	_I2C_2_Master_Read
  7674  01D4EA  6E07               	movwf	??_color_read_Blue^0,c
  7675  01D4EC  5007               	movf	??_color_read_Blue^0,w,c
  7676  01D4EE  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7677  01D4F0  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7678  01D4F2  500A               	movf	color_read_Blue@tmp^0,w,c
  7679  01D4F4  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7680  01D4F6  6E0A               	movwf	color_read_Blue@tmp^0,c
  7681  01D4F8  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7682  01D4FA  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7683  01D4FC  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7684                           
  7685                           ;color.c: 92:     I2C_2_Master_Stop();
  7686  01D4FE  EC16  F0E9         	call	_I2C_2_Master_Stop	;wreg free
  7687  01D502                     
  7688                           ;color.c: 93:     return tmp;
  7689  01D502  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7690  01D506  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7691  01D50A  0012               	return		;funcret
  7692  01D50C                     __end_of_color_read_Blue:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _I2C_2_Master_Write *****************
  7696 ;; Defined at:
  7697 ;;		line 45 in file "i2c.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  data_byte       1    wreg     unsigned char 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  data_byte       1    1[COMRAM] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      void 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0, cstack
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7715 ;;Total ram usage:        1 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 1
  7718 ;; This function calls:
  7719 ;;		_I2C_2_Master_Idle
  7720 ;; This function is called by:
  7721 ;;		_color_writetoaddr
  7722 ;;		_color_read_Clear
  7723 ;;		_color_read_Red
  7724 ;;		_color_read_Green
  7725 ;;		_color_read_Blue
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text33
  7730  01D242                     __ptext33:
  7731                           	callstack 0
  7732  01D242                     _I2C_2_Master_Write:
  7733                           	callstack 27
  7734                           
  7735                           ;incstack = 0
  7736                           ;I2C_2_Master_Write@data_byte stored from wreg
  7737  01D242  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7738  01D244                     
  7739                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7740  01D244  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7741  01D248                     
  7742                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7743  01D248  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7744  01D24C  0012               	return		;funcret
  7745  01D24E                     __end_of_I2C_2_Master_Write:
  7746                           	callstack 0
  7747                           
  7748 ;; *************** function _I2C_2_Master_Stop *****************
  7749 ;; Defined at:
  7750 ;;		line 39 in file "i2c.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;Total ram usage:        0 bytes
  7769 ;; Hardware stack levels used: 1
  7770 ;; Hardware stack levels required when called: 1
  7771 ;; This function calls:
  7772 ;;		_I2C_2_Master_Idle
  7773 ;; This function is called by:
  7774 ;;		_color_writetoaddr
  7775 ;;		_color_read_Clear
  7776 ;;		_color_read_Red
  7777 ;;		_color_read_Green
  7778 ;;		_color_read_Blue
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text34
  7783  01D22C                     __ptext34:
  7784                           	callstack 0
  7785  01D22C                     _I2C_2_Master_Stop:
  7786                           	callstack 27
  7787  01D22C                     
  7788                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7789  01D22C  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7790  01D230                     
  7791                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7792  01D230  010E               	movlb	14	; () banked
  7793  01D232  85DA               	bsf	218,2,b	;volatile
  7794  01D234                     
  7795                           ; BSR set to: 14
  7796  01D234  0012               	return		;funcret
  7797  01D236                     __end_of_I2C_2_Master_Stop:
  7798                           	callstack 0
  7799                           
  7800 ;; *************** function _I2C_2_Master_Start *****************
  7801 ;; Defined at:
  7802 ;;		line 27 in file "i2c.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, status,2, status,0, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;Total ram usage:        0 bytes
  7821 ;; Hardware stack levels used: 1
  7822 ;; Hardware stack levels required when called: 1
  7823 ;; This function calls:
  7824 ;;		_I2C_2_Master_Idle
  7825 ;; This function is called by:
  7826 ;;		_color_writetoaddr
  7827 ;;		_color_read_Clear
  7828 ;;		_color_read_Red
  7829 ;;		_color_read_Green
  7830 ;;		_color_read_Blue
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text35
  7835  01D222                     __ptext35:
  7836                           	callstack 0
  7837  01D222                     _I2C_2_Master_Start:
  7838                           	callstack 27
  7839  01D222                     
  7840                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7841  01D222  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7842  01D226                     
  7843                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7844  01D226  010E               	movlb	14	; () banked
  7845  01D228  81DA               	bsf	218,0,b	;volatile
  7846  01D22A                     
  7847                           ; BSR set to: 14
  7848  01D22A  0012               	return		;funcret
  7849  01D22C                     __end_of_I2C_2_Master_Start:
  7850                           	callstack 0
  7851                           
  7852 ;; *************** function _I2C_2_Master_RepStart *****************
  7853 ;; Defined at:
  7854 ;;		line 33 in file "i2c.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; Hardware stack levels required when called: 1
  7875 ;; This function calls:
  7876 ;;		_I2C_2_Master_Idle
  7877 ;; This function is called by:
  7878 ;;		_color_read_Clear
  7879 ;;		_color_read_Red
  7880 ;;		_color_read_Green
  7881 ;;		_color_read_Blue
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text36
  7886  01D218                     __ptext36:
  7887                           	callstack 0
  7888  01D218                     _I2C_2_Master_RepStart:
  7889                           	callstack 27
  7890  01D218                     
  7891                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7892  01D218  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7893  01D21C                     
  7894                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7895  01D21C  010E               	movlb	14	; () banked
  7896  01D21E  83DA               	bsf	218,1,b	;volatile
  7897  01D220                     
  7898                           ; BSR set to: 14
  7899  01D220  0012               	return		;funcret
  7900  01D222                     __end_of_I2C_2_Master_RepStart:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function _I2C_2_Master_Read *****************
  7904 ;; Defined at:
  7905 ;;		line 51 in file "i2c.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  ack             1    wreg     unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  ack             1    2[COMRAM] unsigned char 
  7910 ;;  tmp             1    3[COMRAM] unsigned char 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      unsigned char 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;Total ram usage:        3 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 1
  7927 ;; This function calls:
  7928 ;;		_I2C_2_Master_Idle
  7929 ;; This function is called by:
  7930 ;;		_color_read_Clear
  7931 ;;		_color_read_Red
  7932 ;;		_color_read_Green
  7933 ;;		_color_read_Blue
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text37
  7938  01D3A8                     __ptext37:
  7939                           	callstack 0
  7940  01D3A8                     _I2C_2_Master_Read:
  7941                           	callstack 27
  7942                           
  7943                           ; BSR set to: 14
  7944                           ;incstack = 0
  7945                           ;I2C_2_Master_Read@ack stored from wreg
  7946  01D3A8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7947  01D3AA                     
  7948                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7949  01D3AA  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7950  01D3AE                     
  7951                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7952  01D3AE  010E               	movlb	14	; () banked
  7953  01D3B0  87DA               	bsf	218,3,b	;volatile
  7954                           
  7955                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7956  01D3B2  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7957  01D3B6                     
  7958                           ;i2c.c: 57:   tmp = SSP2BUF;
  7959  01D3B6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7960                           
  7961                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7962  01D3BA  EC78  F0E9         	call	_I2C_2_Master_Idle	;wreg free
  7963  01D3BE                     
  7964                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7965  01D3BE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7966  01D3C0  B4D8               	btfsc	status,2,c
  7967  01D3C2  EFE5  F0E9         	goto	u2051
  7968  01D3C6  EFE9  F0E9         	goto	u2050
  7969  01D3CA                     u2051:
  7970  01D3CA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7971  01D3CC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7972  01D3CE  EFEA  F0E9         	goto	u2068
  7973  01D3D2                     u2050:
  7974  01D3D2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7975  01D3D4                     u2068:
  7976  01D3D4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7977  01D3D6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7978  01D3D8  010E               	movlb	14	; () banked
  7979  01D3DA  51DA               	movf	218,w,b	;volatile
  7980  01D3DC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7981  01D3DE  0BDF               	andlw	-33
  7982  01D3E0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7983  01D3E2  6FDA               	movwf	218,b	;volatile
  7984  01D3E4                     
  7985                           ; BSR set to: 14
  7986                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7987  01D3E4  89DA               	bsf	218,4,b	;volatile
  7988  01D3E6                     
  7989                           ; BSR set to: 14
  7990                           ;i2c.c: 61:   return tmp;
  7991  01D3E6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7992  01D3E8                     
  7993                           ; BSR set to: 14
  7994  01D3E8  0012               	return		;funcret
  7995  01D3EA                     __end_of_I2C_2_Master_Read:
  7996                           	callstack 0
  7997                           
  7998 ;; *************** function _I2C_2_Master_Idle *****************
  7999 ;; Defined at:
  8000 ;;		line 22 in file "i2c.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;		None
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;		None
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      void 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;Total ram usage:        1 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		_I2C_2_Master_Start
  8024 ;;		_I2C_2_Master_RepStart
  8025 ;;		_I2C_2_Master_Stop
  8026 ;;		_I2C_2_Master_Write
  8027 ;;		_I2C_2_Master_Read
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text38
  8032  01D2F0                     __ptext38:
  8033                           	callstack 0
  8034  01D2F0                     _I2C_2_Master_Idle:
  8035                           	callstack 27
  8036  01D2F0                     l163:
  8037  01D2F0  010E               	movlb	14	; () banked
  8038  01D2F2  B5D8               	btfsc	216,2,b	;volatile
  8039  01D2F4  EF7E  F0E9         	goto	u1991
  8040  01D2F8  EF80  F0E9         	goto	u1990
  8041  01D2FC                     u1991:
  8042  01D2FC  EF78  F0E9         	goto	l163
  8043  01D300                     u1990:
  8044  01D300                     
  8045                           ; BSR set to: 14
  8046  01D300  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8047  01D304  0E1F               	movlw	31
  8048  01D306  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8049  01D308  A4D8               	btfss	status,2,c
  8050  01D30A  EF89  F0E9         	goto	u2001
  8051  01D30E  EF8B  F0E9         	goto	u2000
  8052  01D312                     u2001:
  8053  01D312  EF78  F0E9         	goto	l163
  8054  01D316                     u2000:
  8055  01D316                     
  8056                           ; BSR set to: 14
  8057  01D316  0012               	return		;funcret
  8058  01D318                     __end_of_I2C_2_Master_Idle:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function _Timer0_init *****************
  8062 ;; Defined at:
  8063 ;;		line 8 in file "timers.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used: 1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text39
  8091  01D24E                     __ptext39:
  8092                           	callstack 0
  8093  01D24E                     _Timer0_init:
  8094                           	callstack 30
  8095  01D24E                     
  8096                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  8097  01D24E  50D6               	movf	214,w,c	;volatile
  8098  01D250  0B1F               	andlw	-225
  8099  01D252  0940               	iorlw	64
  8100  01D254  6ED6               	movwf	214,c	;volatile
  8101  01D256                     
  8102                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  8103  01D256  88D6               	bsf	214,4,c	;volatile
  8104                           
  8105                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1111;
  8106  01D258  0E0F               	movlw	15
  8107  01D25A  12D6               	iorwf	214,f,c	;volatile
  8108  01D25C                     
  8109                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  8110  01D25C  88D5               	bsf	213,4,c	;volatile
  8111                           
  8112                           ;timers.c: 16:     TMR0H=0;
  8113  01D25E  0E00               	movlw	0
  8114  01D260  6ED4               	movwf	212,c	;volatile
  8115                           
  8116                           ;timers.c: 17:     TMR0L=0;
  8117  01D262  0E00               	movlw	0
  8118  01D264  6ED3               	movwf	211,c	;volatile
  8119  01D266                     
  8120                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  8121  01D266  8ED5               	bsf	213,7,c	;volatile
  8122  01D268  0012               	return		;funcret
  8123  01D26A                     __end_of_Timer0_init:
  8124                           	callstack 0
  8125                           
  8126 ;; *************** function _Interrupts_init *****************
  8127 ;; Defined at:
  8128 ;;		line 9 in file "interrupts.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1    wreg      void 
  8135 ;; Registers used:
  8136 ;;		None
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;Total ram usage:        0 bytes
  8147 ;; Hardware stack levels used: 1
  8148 ;; This function calls:
  8149 ;;		Nothing
  8150 ;; This function is called by:
  8151 ;;		_main
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text40
  8156  01D236                     __ptext40:
  8157                           	callstack 0
  8158  01D236                     _Interrupts_init:
  8159                           	callstack 30
  8160  01D236                     
  8161                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  8162  01D236  010E               	movlb	14	; () banked
  8163  01D238  812B               	bsf	43,0,b	;volatile
  8164                           
  8165                           ;interrupts.c: 14:     PIE0bits.TMR0IE = 1;
  8166  01D23A  8B29               	bsf	41,5,b	;volatile
  8167                           
  8168                           ;interrupts.c: 15:     INTCONbits.GIEL = 1;
  8169  01D23C  8CF2               	bsf	242,6,c	;volatile
  8170                           
  8171                           ;interrupts.c: 16:     INTCONbits.GIE = 1;
  8172  01D23E  8EF2               	bsf	242,7,c	;volatile
  8173  01D240                     
  8174                           ; BSR set to: 14
  8175  01D240  0012               	return		;funcret
  8176  01D242                     __end_of_Interrupts_init:
  8177                           	callstack 0
  8178  0000                     
  8179                           	psect	rparam
  8180  0000                     
  8181                           	psect	idloc
  8182                           
  8183                           ;Config register IDLOC0 @ 0x200000
  8184                           ;	unspecified, using default values
  8185  200000                     	org	2097152
  8186  200000  0FFF               	dw	4095
  8187                           
  8188                           ;Config register IDLOC1 @ 0x200002
  8189                           ;	unspecified, using default values
  8190  200002                     	org	2097154
  8191  200002  0FFF               	dw	4095
  8192                           
  8193                           ;Config register IDLOC2 @ 0x200004
  8194                           ;	unspecified, using default values
  8195  200004                     	org	2097156
  8196  200004  0FFF               	dw	4095
  8197                           
  8198                           ;Config register IDLOC3 @ 0x200006
  8199                           ;	unspecified, using default values
  8200  200006                     	org	2097158
  8201  200006  0FFF               	dw	4095
  8202                           
  8203                           ;Config register IDLOC4 @ 0x200008
  8204                           ;	unspecified, using default values
  8205  200008                     	org	2097160
  8206  200008  0FFF               	dw	4095
  8207                           
  8208                           ;Config register IDLOC5 @ 0x20000A
  8209                           ;	unspecified, using default values
  8210  20000A                     	org	2097162
  8211  20000A  0FFF               	dw	4095
  8212                           
  8213                           ;Config register IDLOC6 @ 0x20000C
  8214                           ;	unspecified, using default values
  8215  20000C                     	org	2097164
  8216  20000C  0FFF               	dw	4095
  8217                           
  8218                           ;Config register IDLOC7 @ 0x20000E
  8219                           ;	unspecified, using default values
  8220  20000E                     	org	2097166
  8221  20000E  0FFF               	dw	4095
  8222                           
  8223                           	psect	config
  8224                           
  8225                           ;Config register CONFIG1L @ 0x300000
  8226                           ;	External Oscillator mode Selection bits
  8227                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8228                           ;	Power-up default value for COSC bits
  8229                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8230  300000                     	org	3145728
  8231  300000  AA                 	db	170
  8232                           
  8233                           ;Config register CONFIG1H @ 0x300001
  8234                           ;	unspecified, using default values
  8235                           ;	Clock Out Enable bit
  8236                           ;	CLKOUTEN = 0x1, unprogrammed default
  8237                           ;	Clock Switch Enable bit
  8238                           ;	CSWEN = 0x1, unprogrammed default
  8239                           ;	Fail-Safe Clock Monitor Enable bit
  8240                           ;	FCMEN = 0x1, unprogrammed default
  8241  300001                     	org	3145729
  8242  300001  FF                 	db	255
  8243                           
  8244                           ;Config register CONFIG2L @ 0x300002
  8245                           ;	unspecified, using default values
  8246                           ;	Master Clear Enable bit
  8247                           ;	MCLRE = 0x1, unprogrammed default
  8248                           ;	Power-up Timer Enable bit
  8249                           ;	PWRTE = 0x1, unprogrammed default
  8250                           ;	Low-power BOR enable bit
  8251                           ;	LPBOREN = 0x1, unprogrammed default
  8252                           ;	Brown-out Reset Enable bits
  8253                           ;	BOREN = 0x3, unprogrammed default
  8254  300002                     	org	3145730
  8255  300002  FF                 	db	255
  8256                           
  8257                           ;Config register CONFIG2H @ 0x300003
  8258                           ;	unspecified, using default values
  8259                           ;	Brown Out Reset Voltage selection bits
  8260                           ;	BORV = 0x3, unprogrammed default
  8261                           ;	ZCD Disable bit
  8262                           ;	ZCD = 0x1, unprogrammed default
  8263                           ;	PPSLOCK bit One-Way Set Enable bit
  8264                           ;	PPS1WAY = 0x1, unprogrammed default
  8265                           ;	Stack Full/Underflow Reset Enable bit
  8266                           ;	STVREN = 0x1, unprogrammed default
  8267                           ;	Debugger Enable bit
  8268                           ;	DEBUG = 0x1, unprogrammed default
  8269                           ;	Extended Instruction Set Enable bit
  8270                           ;	XINST = 0x1, unprogrammed default
  8271  300003                     	org	3145731
  8272  300003  FF                 	db	255
  8273                           
  8274                           ;Config register CONFIG3L @ 0x300004
  8275                           ;	WDT Period Select bits
  8276                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8277                           ;	WDT operating mode
  8278                           ;	WDTE = OFF, WDT Disabled
  8279  300004                     	org	3145732
  8280  300004  9F                 	db	159
  8281                           
  8282                           ;Config register CONFIG3H @ 0x300005
  8283                           ;	unspecified, using default values
  8284                           ;	WDT Window Select bits
  8285                           ;	WDTCWS = 0x7, unprogrammed default
  8286                           ;	WDT input clock selector
  8287                           ;	WDTCCS = 0x7, unprogrammed default
  8288  300005                     	org	3145733
  8289  300005  FF                 	db	255
  8290                           
  8291                           ;Config register CONFIG4L @ 0x300006
  8292                           ;	unspecified, using default values
  8293                           ;	Write Protection Block 0
  8294                           ;	WRT0 = 0x1, unprogrammed default
  8295                           ;	Write Protection Block 1
  8296                           ;	WRT1 = 0x1, unprogrammed default
  8297                           ;	Write Protection Block 2
  8298                           ;	WRT2 = 0x1, unprogrammed default
  8299                           ;	Write Protection Block 3
  8300                           ;	WRT3 = 0x1, unprogrammed default
  8301                           ;	Write Protection Block 3
  8302                           ;	WRT4 = 0x1, unprogrammed default
  8303                           ;	Write Protection Block 3
  8304                           ;	WRT5 = 0x1, unprogrammed default
  8305                           ;	Write Protection Block 3
  8306                           ;	WRT6 = 0x1, unprogrammed default
  8307                           ;	Write Protection Block 3
  8308                           ;	WRT7 = 0x1, unprogrammed default
  8309  300006                     	org	3145734
  8310  300006  FF                 	db	255
  8311                           
  8312                           ;Config register CONFIG4H @ 0x300007
  8313                           ;	unspecified, using default values
  8314                           ;	Configuration Register Write Protection bit
  8315                           ;	WRTC = 0x1, unprogrammed default
  8316                           ;	Boot Block Write Protection bit
  8317                           ;	WRTB = 0x1, unprogrammed default
  8318                           ;	Data EEPROM Write Protection bit
  8319                           ;	WRTD = 0x1, unprogrammed default
  8320                           ;	Scanner Enable bit
  8321                           ;	SCANE = 0x1, unprogrammed default
  8322                           ;	Low Voltage Programming Enable bit
  8323                           ;	LVP = 0x1, unprogrammed default
  8324  300007                     	org	3145735
  8325  300007  FF                 	db	255
  8326                           
  8327                           ;Config register CONFIG5L @ 0x300008
  8328                           ;	unspecified, using default values
  8329                           ;	UserNVM Program Memory Code Protection bit
  8330                           ;	CP = 0x1, unprogrammed default
  8331                           ;	DataNVM Memory Code Protection bit
  8332                           ;	CPD = 0x1, unprogrammed default
  8333  300008                     	org	3145736
  8334  300008  FF                 	db	255
  8335                           
  8336                           ;Config register CONFIG5H @ 0x300009
  8337                           ;	unspecified, using default values
  8338  300009                     	org	3145737
  8339  300009  FF                 	db	255
  8340                           
  8341                           ;Config register CONFIG6L @ 0x30000A
  8342                           ;	unspecified, using default values
  8343                           ;	Table Read Protection Block 0
  8344                           ;	EBTR0 = 0x1, unprogrammed default
  8345                           ;	Table Read Protection Block 1
  8346                           ;	EBTR1 = 0x1, unprogrammed default
  8347                           ;	Table Read Protection Block 2
  8348                           ;	EBTR2 = 0x1, unprogrammed default
  8349                           ;	Table Read Protection Block 3
  8350                           ;	EBTR3 = 0x1, unprogrammed default
  8351                           ;	Table Read Protection Block 4
  8352                           ;	EBTR4 = 0x1, unprogrammed default
  8353                           ;	Table Read Protection Block 5
  8354                           ;	EBTR5 = 0x1, unprogrammed default
  8355                           ;	Table Read Protection Block 6
  8356                           ;	EBTR6 = 0x1, unprogrammed default
  8357                           ;	Table Read Protection Block 7
  8358                           ;	EBTR7 = 0x1, unprogrammed default
  8359  30000A                     	org	3145738
  8360  30000A  FF                 	db	255
  8361                           
  8362                           ;Config register CONFIG6H @ 0x30000B
  8363                           ;	unspecified, using default values
  8364                           ;	Boot Block Table Read Protection bit
  8365                           ;	EBTRB = 0x1, unprogrammed default
  8366  30000B                     	org	3145739
  8367  30000B  FF                 	db	255
  8368                           tosu	equ	0xFFF
  8369                           tosh	equ	0xFFE
  8370                           tosl	equ	0xFFD
  8371                           stkptr	equ	0xFFC
  8372                           pclatu	equ	0xFFB
  8373                           pclath	equ	0xFFA
  8374                           pcl	equ	0xFF9
  8375                           tblptru	equ	0xFF8
  8376                           tblptrh	equ	0xFF7
  8377                           tblptrl	equ	0xFF6
  8378                           tablat	equ	0xFF5
  8379                           prodh	equ	0xFF4
  8380                           prodl	equ	0xFF3
  8381                           indf0	equ	0xFEF
  8382                           postinc0	equ	0xFEE
  8383                           postdec0	equ	0xFED
  8384                           preinc0	equ	0xFEC
  8385                           plusw0	equ	0xFEB
  8386                           fsr0h	equ	0xFEA
  8387                           fsr0l	equ	0xFE9
  8388                           wreg	equ	0xFE8
  8389                           indf1	equ	0xFE7
  8390                           postinc1	equ	0xFE6
  8391                           postdec1	equ	0xFE5
  8392                           preinc1	equ	0xFE4
  8393                           plusw1	equ	0xFE3
  8394                           fsr1h	equ	0xFE2
  8395                           fsr1l	equ	0xFE1
  8396                           bsr	equ	0xFE0
  8397                           indf2	equ	0xFDF
  8398                           postinc2	equ	0xFDE
  8399                           postdec2	equ	0xFDD
  8400                           preinc2	equ	0xFDC
  8401                           plusw2	equ	0xFDB
  8402                           fsr2h	equ	0xFDA
  8403                           fsr2l	equ	0xFD9
  8404                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     86     111
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseTurnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S73DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S73DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_determine_color_new
    _turnRight180->_stop
    _turnRight135->_stop
    _turnLeft135->_stop
    _reverseTurnRight90->_turnRight90
    _turnRight90->_stop
    _reverseTurnLeft90->_turnLeft90
    _turnLeft90->_stop
    _stop->_setMotorPWM
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_determine_color_new

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   91309
                                             92 COMRAM     2     2      0
                                             34 BANK0     52    52      0
                    _Interrupts_init
                        _Timer0_init
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                  _reverseTurnLeft90
                 _reverseTurnRight90
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight180                                         6     2      4    7674
                                             28 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight135                                         6     2      4    7370
                                             28 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft135                                          6     2      4    7370
                                             28 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnRight90                                   6     2      4   15088
                                             34 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight90                                          6     2      4    7674
                                             28 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnLeft90                                    6     2      4   14936
                                             34 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _turnLeft90                                           6     2      4    7522
                                             28 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4173
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                              4     0      4    3153
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2717
                                             13 COMRAM    11     9      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   16964
                                             90 COMRAM     2     0      2
                                              0 BANK0     34    34      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             12 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1447
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     501
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2636
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2736
                                             64 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _isbtw
       ___flge
   _forward
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _reverseTurnLeft90
     _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft90
       _setMotorPWM
       _stop
   _reverseTurnRight90
     _setMotorPWM
     _stop
     _turnRight90
       _setMotorPWM
       _stop
   _turnLeft135
     _setMotorPWM
     _stop
   _turnLeft90
   _turnRight135
     _setMotorPWM
     _stop
   _turnRight180
     _setMotorPWM
     _stop
   _turnRight90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10A       8        0.0%
DATA                 0      0     10A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 18:26:06 2021

                _color_read_Red D55C                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue D4BC                              l62 D288  
                            l71 D55A                              l81 D79C                              l65 D5FA  
                            l74 D50A                              l59 D3A6                              l68 D5AA  
                            l85 D4BA                              l77 D6AE                              l88 D470  
           ___wmul@multiplicand 0003                _color_read_Clear D5AC                _color_read_Green D50C  
             ??_Interrupts_init 0001                             l103 FFFE                             l231 D81A  
                           l160 D340                             l240 D994                             l225 E0F4  
                           l218 D42A                             l234 D916                             l163 D2F0  
                           l243 DA12                             l172 D220                             l228 D372  
                           l181 D3E8                             l237 D898                             l166 D316  
                           l175 D234                             l255 DB62                             l351 EE98  
                           l416 D2A8                             l344 EE46                             l169 D22A  
                           l249 D64C                             l353 EECC                             l345 EE48  
                           l178 D24C                             l258 DABA                             l355 EEDA  
                           l347 EE56                             l349 EE8A                             l481 D240  
                           l492 D268                             l498 D2EE                             l763 DC20  
                           l768 DC66                             l795 DD6C                             l996 D722  
                           l989 D71A                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                    ___fltol@exp1 005A                            l1112 E554  
                          l1121 E7C2                            l1026 EAA8                            l1122 E7B0  
                          l1043 EBC2                            l1035 ED78                            l1027 EA96  
                          l1052 EC92                            l1028 EA5C                            l1116 E8B8  
                          l1053 EC80                            l1119 E74A                            l1080 E48E  
                          l1160 DE5C                            l3001 E392                            l1129 E87A  
                          l1153 DDC4                            l1082 E2EE                            l3011 E400  
                          l1091 E334                            l1156 DF20                            l3021 E46A  
                          l3005 E3BC                            l3013 E404                            l1093 E3AC  
                          l1085 E2B2                            l3101 E636                            l1094 E39A  
                          l3023 E46E                            l3015 E41E                            l3007 E3C8  
                          l3111 E6A4                            l3103 E650                            l1167 DEB8  
                          l3025 E47C                            l3017 E434                            l3009 E3D6  
                          l3121 E73A                            l3113 E6CE                            l3105 E660  
                          l3041 E4AA                            l3201 DD2C                            l3027 E482  
                          l3019 E44E                            l3131 E77A                            l3123 E748  
                          l3115 E704                            l3107 E67C                            l3051 E4E2  
                          l3043 E4AC                            l3203 DD3C                            l3211 DD70  
                          l3029 E484                            l3141 E7EC                            l3133 E7A8  
                          l3125 E75A                            l3117 E712                            l3109 E688  
                          l3061 E50E                            l3053 E4F2                            l3045 E4BC  
                          l3037 E490                            l3205 DD4C                            l3213 DD80  
                          l3301 F84C                            l3151 E862                            l3143 E816  
                          l3127 E768                            l3119 E730                            l3071 E564  
                          l3063 E51E                            l3055 E4F8                            l3047 E4CC  
                          l3039 E49C                            l3207 DD5C                            l3231 DE46  
                          l3223 DDFE                            l3215 DD8E                            l3311 F946  
                          l3303 F85C                            l3153 E87E                            l3161 E8A4  
                          l3137 E7D2                            l3145 E81A                            l3129 E76C  
                          l3081 E59E                            l3073 E574                            l3065 E52E  
                          l3057 E4FE                            l3049 E4DC                            l3241 DEC6  
                          l3233 DE52                            l3225 DE06                            l3217 DDD4  
                          l2601 DBD0                            l3321 FA2A                            l3305 F8A2  
                          l3313 F94E                            l2521 D6B8                            l2513 D2CA  
                          l3401 D9FE                            l3163 E8A8                            l3155 E88E  
                          l3147 E834                            l3139 E7DE                            l3091 E5F0  
                          l3083 E5B4                            l3067 E53E                            l3059 E50C  
                          l3251 DF0E                            l3243 DEC8                            l3235 DE8E  
                          l3227 DE12                            l3219 DDEA                            l2611 DC5E  
                          l2603 DBE0                            l3331 FB4C                            l3323 FA70  
                          l3315 F994                            l3307 F8E8                            l2531 D6EE  
                          l2523 D6CA                            l2515 D2E6                            l3411 DA58  
                          l3403 DA14                            l3501 D24E                            l2541 D2F0  
                          l2621 D328                            l3261 D382                            l2701 E8D4  
                          l3157 E89C                            l3149 E848                            l3093 E5FE  
                          l3085 E5C0                            l3077 E588                            l3069 E544  
                          l3181 DCD2                            l3173 DC92                            l3253 DF10  
                          l3245 DECC                            l3237 DE9A                            l3229 DE44  
                          l2613 DC64                            l2605 DBEE                            l3341 FC3E  
                          l3333 FB92                            l3325 FAB6                            l3317 F9DA  
                          l3309 F92E                            l2533 D704                            l2525 D6D2  
                          l3413 DA64                            l3405 DA34                            l3421 DABC  
                          l3503 D256                            l2543 D300                            l3271 D42C  
                          l2623 D32A                            l3263 D392                            l2711 E908  
                          l2703 E8D6                            l3159 E89E                            l3095 E60A  
                          l3087 E5D8                            l3079 E594                            l3191 DD02  
                          l3183 DCE0                            l3175 DCBC                            l3167 DC68  
                          l3247 DEF0                            l3239 DEA8                            l2607 DC00  
                          l3351 FD30                            l3343 FC84                            l3335 FBD8  
                          l3327 FAFC                            l3319 FA20                            l2535 D70C  
                          l2527 D6DA                            l2519 D6B0                            l2551 DFE6  
                          l2631 D5AC                            l3415 DA7C                            l3407 DA40  
                          l3431 DB0C                            l3423 DADC                            l3505 D25C  
                          l2561 D226                            l2625 D32C                            l2617 D318  
                          l3265 D39C                            l3257 D374                            l2721 E93A  
                          l2705 E8E6                            l2713 E910                            l3097 E61A  
                          l3089 E5E4                            l3193 DD0C                            l3177 DCBE  
                          l3169 DC7E                            l3249 DF00                            l2609 DC0E  
                          l3361 FE22                            l3353 FD76                            l3345 FCCA  
                          l3337 FBF0                            l3329 FB06                            l3281 F520  
                          l3273 F2E0                            l2537 D70E                            l2529 D6E8  
                          l2553 E006                            l2545 DF22                            l2633 D5F2  
                          l3417 DA90                            l3409 DA4C                            l3433 DB24  
                          l3425 DAE8                            l3441 D8BA                            l3601 ED7A  
                          l3507 D266                            l2571 D218                            l2563 D244  
                          l2651 D502                            l2643 D50C                            l2627 D32E  
                          l2619 D322                            l3259 D378                            l2811 EB12  
                          l2803 EADA                            l2731 E970                            l2723 E940  
                          l2715 E920                            l2707 E8F6                            l3099 E626  
                          l3179 DCCE                            l3371 FF44                            l3363 FE68  
                          l3355 FDBC                            l3347 FCE2                            l3339 FBF8  
                          l3291 F800                            l3283 F60C                            l3275 F2EA  
                          l2539 D714                            l2555 E022                            l2547 DF3E  
                          l3267 D64E                            l3419 DAA6                            l3435 DB38  
                          l3427 DAF4                            l3451 D902                            l3443 D8C6  
                          l3611 EDA8                            l3603 ED86                            l3509 D236  
                          l2581 D3BE                            l2573 D21C                            l2565 D248  
                          l2645 D552                            l2637 D55C                            l3269 D472  
                          l2629 D26C                            l2813 EB16                            l2805 EAEA  
                          l2821 EB36                            l2741 E9AC                            l2733 E980  
                          l2725 E94E                            l2717 E926                            l2709 E906  
                          l2901 E102                            l3189 DCF8                            l3381 FFD8  
                          l3373 FF8A                            l3365 FEAE                            l3357 FDD4  
                          l3349 FCEA                            l3293 F810                            l3285 F6F8  
                          l3277 F3B2                            l2557 E08C                            l2549 DFA0  
                          l3437 DB4E                            l3429 DB00                            l3445 D8D2  
                          l3461 D95C                            l3453 D918                            l3701 EEEA  
                          l3621 EDB6                            l3613 EDAC                            l3605 ED8A  
                          l2583 D3E4                            l2575 D3AA                            l2559 D222  
                          l2567 D22C                            l2639 D5A2                            l2823 EB5C  
                          l2831 EBB2                            l2815 EB24                            l2807 EAF8  
                          l2751 E9CA                            l2743 E9BA                            l2735 E982  
                          l2727 E950                            l2719 E938                            l2911 E142  
                          l2903 E110                            l3199 DD20                            l2655 D724  
                          l3383 FFEE                            l3375 FFA2                            l3367 FEB8  
                          l3359 FDDC                            l3295 F820                            l3287 F750  
                          l3279 F43C                            l3471 D628                            l2591 D35A  
                          l2671 D7BE                            l3447 D8DE                            l3439 D89A  
                          l3463 D968                            l3455 D938                            l3391 D9B6  
                          l3711 EF50                            l3703 EEF4                            l3631 EDD0  
                          l3623 EDB6                            l3615 EDAE                            l3607 ED8E  
                          l2585 D3E6                            l2577 D3AE                            l2569 D230  
                          l2649 D4BC                            l2841 EC06                            l2833 EBD8  
                          l2825 EB90                            l2817 EB26                            l2809 EB06  
                          l2761 E9DE                            l2753 E9CE                            l2745 E9BE  
                          l2729 E960                            l2737 E98A                            l2921 E168  
                          l2913 E144                            l2905 E112                            l2657 D756  
                          l2665 D794                            l3385 FFF6                            l3369 FEFE  
                          l3377 FFAA                            l3297 F82E                            l3289 F7A8  
                          l3473 D634                            l3481 D412                            l2593 D366  
                          l2681 D806                            l2673 D7CA                            l3449 D8EA  
                          l3465 D980                            l3457 D944                            l3393 D9C2  
                          l3721 EFB6                            l3713 EF64                            l3705 EF08  
                          l3641 EDEC                            l3633 EDD4                            l3625 EDBC  
                          l3617 EDB2                            l3609 ED92                            l2579 D3B6  
                          l2851 EC30                            l2843 EC14                            l2835 EBE8  
                          l2827 EB92                            l2819 EB30                            l2771 E9F2  
                          l2763 E9E2                            l2755 E9D2                            l2747 E9C2  
                          l2739 E99A                            l2931 E1A8                            l2923 E176  
                          l2907 E122                            l2915 E14C                            l2595 DB64  
                          l2659 D788                            l3379 FFC2                            l3299 F83E  
                          l3475 D640                            l3467 D5FC                            l3483 D426  
                          l3491 D296                            l2675 D7D6                            l2691 D860  
                          l2683 D81C                            l3459 D950                            l3395 D9CE  
                          l3731 F00A                            l3723 EFCC                            l3715 EF78  
                          l3707 EF30                            l3651 EE10                            l3643 EDF4  
                          l3635 EDDC                            l3627 EDC0                            l3619 EDB4  
                          l2861 EC62                            l2853 EC40                            l2845 EC16  
                          l2829 EBA2                            l2781 EA44                            l2773 E9F6  
                          l2765 E9E6                            l2757 E9D6                            l2749 E9C6  
                          l2941 E1E8                            l2933 E1AA                            l2925 E178  
                          l2917 E15C                            l2909 E132                            l2597 DB92  
                          l3469 D61C                            l3485 D428                            l3477 D3EA  
                          l3493 D298                            l2589 D342                            l2677 D7E2  
                          l2669 D79E                            l2693 D86C                            l2685 D83C  
                          l3397 D9DA                            l3389 D996                            l3741 F074  
                          l3733 F022                            l3725 EFE0                            l3717 EF8C  
                          l3709 EF3C                            l3661 EE26                            l3653 EE18  
                          l3645 EDF8                            l3637 EDE0                            l3629 EDC8  
                          l2871 ECBC                            l2863 EC78                            l2847 EC24  
                          l2839 EBFC                            l2855 EC42                            l2791 EA88  
                          l2783 EA54                            l2767 E9EA                            l2759 E9DA  
                          l2775 E9FA                            l2951 E218                            l2943 E1F0  
                          l2927 E188                            l2935 E1B2                            l2919 E162  
                          l2599 DBA2                            l3479 D3FA                            l3495 D2A2  
                          l3487 D28A                            l2679 D7EE                            l2695 D884  
                          l2687 D848                            l3399 D9E6                            l3751 F0E0  
                          l3743 F088                            l3735 F03A                            l3727 EFEE  
                          l3719 EFA2                            l3671 EE30                            l3663 EE28  
                          l3655 EE20                            l3647 EE00                            l3639 EDE4  
                          l2881 ED38                            l2873 ECF6                            l2849 EC2C  
                          l2857 EC50                            l2793 EA8A                            l2785 EA6A  
                          l2777 E9FE                            l2769 E9EE                            l2697 E8BA  
                          l2961 E256                            l2953 E218                            l2945 E1F4  
                          l2937 E1C2                            l2929 E198                            l3497 D2A4  
                          l3489 D294                            l2689 D854                            l3761 F14C  
                          l3753 F0F6                            l3745 F0A0                            l3737 F042  
                          l3729 EFF2                            l3681 EE3A                            l3673 EE32  
                          l3665 EE2A                            l3657 EE22                            l3649 EE08  
                          l2891 ED58                            l2883 ED3C                            l2867 ECA2  
                          l2875 ECF8                            l2859 EC54                            l2795 EA94  
                          l2787 EA76                            l2779 EA28                            l2699 E8C6  
                          l2971 E2A2                            l2963 E266                            l2939 E1D8  
                          l3499 D2A6                            l3771 F1BC                            l3763 F164  
                          l3755 F10A                            l3747 F0B4                            l3739 F062  
                          l3691 EEA6                            l3683 EE64                            l3675 EE34  
                          l3667 EE2C                            l3659 EE24                            l2893 ED66  
                          l2885 ED4A                            l2877 ED08                            l2869 ECAE  
                          l2797 EAB6                            l2789 EA7A                            l2981 E2EC  
                          l2973 E2B0                            l2965 E276                            l2957 E22C  
                          l2949 E208                            l3781 F22A                            l3773 F1D0  
                          l3765 F17A                            l3757 F122                            l3749 F0C8  
                          l3693 EEA8                            l3685 EE66                            l3677 EE36  
                          l3669 EE2E                            l2895 ED68                            l2887 ED50  
                          l2879 ED18                            l2799 EAC6                            l2991 E332  
                          l2983 E2FE                            l2975 E2BC                            l2967 E27E  
                          l2959 E246                            l3791 F296                            l3783 F240  
                          l3775 F1E8                            l3767 F18E                            l3759 F138  
                          l3695 EEB4                            l3687 EE72                            l3679 EE38  
                          l2889 ED52                            l2985 E314                            l2993 E344  
                          l2977 E2DA                            l2969 E28E                            l3793 F2AE  
                          l3785 F254                            l3777 F1FE                            l3769 F1A6  
                          l3697 EECA                            l3689 EE88                            l2995 E352  
                          l2987 E31A                            l2979 E2DC                            l2899 E0F6  
                          l3795 F2C4                            l3787 F26C                            l3779 F212  
                          l3699 EEE8                            l2997 E356                            l2989 E324  
                          l3789 F282                            l2999 E364                            u2000 D316  
                          u2001 D312                            u2010 DF3E                            u2011 DF3A  
                          u2100 DC0E                            u2020 E022                            u2101 DC0A  
                          u2021 E01E                            u2110 DC5E                            u2111 DC5A  
                          u2200 E970                            u3000 DD3C                            u2120 D756  
                          u2201 E96C                            u3001 DD38                            u2121 D752  
                          u2050 D3D2                            u2210 E9AC                            u3010 DD4C  
                          u2130 D788                            u2034 E07C                            u2051 D3CA  
                          u2211 E9A8                            u3011 DD48                            u2131 D784  
                          u2035 E078                            u2300 EAC6                            u2220 E9BA  
                          u2140 E8D4                            u3100 DF00                            u3020 DD80  
                          u2044 E0E6                            u2301 EAC2                            u2221 E9B6  
                          u2141 E8D0                            u3101 DEFC                            u3021 DD7C  
                          u2045 E0E2                            u2310 EAF8                            u2230 EA28  
                          u2150 E8E6                            u3110 DF0E                            u3030 DD8E  
                          u2070 DB92                            u2311 EAF4                            u2231 EA24  
                          u2151 E8E2                            u3111 DF0A                            u3031 DD8A  
                          u2071 DB8E                            u2400 EC40                            u2320 EB06  
                          u2240 EA40                            u2160 E8F6                            u3040 DDEA  
                          u2080 DBD0                            u3200 F9DA                            u3120 F810  
                  _BAUD4CONbits 000EE9                            u2401 EC3C                            u2321 EB02  
                          u2241 EA3A                            u2161 E8F2                            u3041 DDE6  
                          u2081 DBCC                            u3201 F9D6                            u3121 F80C  
                          _LATE 000F7D                            u2410 EC50                            u2330 EB24  
                          u2250 EA42                            u2170 E938                            u3050 DE40  
                          u2090 DBEE                            u3210 FA20                            u3130 F82E  
                          u2411 EC4C                            u2331 EB20                            u2171 E934  
                          u3051 DE3C                            u2091 DBEA                            u3211 FA1C  
                          u3131 F82A                            _LATG 000F7F                            u2068 D3D4  
                          u2500 ED38                            u2420 EC62                            u2340 EB5C  
                          u2260 EA6A                            u2180 E94E                            u3060 DE8A  
                          u3300 FC84                            u3220 FA70                            u3140 F84C  
                          u2501 ED34                            u2421 EC5E                            u2341 EB58  
                          u2261 EA66                            u2181 E94A                            u3061 DE86  
                          u3301 FC80                            u3221 FA6C                            u3141 F848  
                          u2510 ED4A                            u2430 EC78                            u2350 EBA2  
                          u2270 EA88                            u2190 E960                            u3070 DEA8  
                          u3310 FCCA                            u3230 FAB6                            u3150 F8A2  
                          u2511 ED46                            u2431 EC74                            u2351 EB9E  
                          u2271 EA84                            u2191 E95C                            u3071 DEA4  
                          u3311 FCC6                            u3231 FAB2                            u3151 F89E  
                          u4007 F2A0                            u2520 ED66                            u2440 EC8E  
                          u2360 EBD8                            u2280 EAA8                            u2600 E218  
                          u3080 DEB8                            u3400 FEFE                            u3320 FCE2  
                          u3240 FAFC                            u3160 F8E8                            u2521 ED62  
                          u2441 EC8A                            u2361 EBD4                            u2281 EAA4  
                          u2601 E214                            u3081 DEB4                            u3401 FEFA  
                          u3321 FCDE                            u3241 FAF8                            u3161 F8E4  
                          u4017 D9F0                            u2450 ECA2                            u2370 EBE8  
                          u2290 EAB6                            u2610 E28E                            u2530 E110  
                          u3090 DEC6                            u3410 FF44                            u3330 FD30  
                          u3250 FB4C                            u3170 F92E                            _T2PR 000FBC  
                          u4107 D388                            u2451 EC9E                            u2371 EBE4  
                          u2291 EAB2                            u2611 E28A                            u2531 E10C  
                          u3091 DEC2                            u3411 FF40                            u3331 FD2C  
                          u3251 FB48                            u3171 F92A                            u4027 D972  
                          u2460 ECBC                            u2380 EC14                            u2700 E3A8  
                          u2620 E2B0                            u2540 E122                            u3420 FF8A  
                          u3340 FD76                            u3260 FB92                            u3180 F946  
                          u2461 ECB8                            u2381 EC10                            u2701 E3A4  
                          u2621 E2AC                            u2541 E11E                            u3421 FF86  
                          u3341 FD72                            u3261 FB8E                            u3181 F942  
                          u4037 D8F4                            u2470 ECF6                            u2390 EC24  
                          u2710 E3BC                            u2630 E2DA                            u2550 E132  
                          u3430 FFA2                            u3350 FDBC                            u3270 FBD8  
                          u3190 F994                            u2471 ECF2                            u2391 EC20  
                          u2711 E3B8                            u2631 E2D6                            u2551 E12E  
                          u3431 FF9E                            u3351 FDB8                            u3271 FBD4  
                          u3191 F990                            u4047 DB16                            u2480 ED08  
                          u2720 E3D6                            u2640 E2FE                            u2560 E176  
                          u2800 E51E                            u3440 FFC2                            u3360 FDD4  
                          u3280 FBF0                            u3600 EE56                            u2481 ED04  
                          u2721 E3D2                            u2641 E2FA                            u2561 E172  
                          u2801 E51A                            u3441 FFBE                            u3361 FDD0  
                          u3281 FBEC                            u4057 DB42                            u3601 EE52  
                          u2490 ED18                            u2730 E41E                            u2650 E314  
                          u2570 E188                            u2810 E52E                            u3450 FFD8  
                          u3370 FE22                            u3290 FC3E                            u3610 EE64  
                          u2491 ED14                            u2731 E41A                            u2651 E310  
                          u2571 E184                            u2811 E52A                            u3451 FFD4  
                          u3371 FE1E                            u3291 FC3A                            u4067 D876  
                          u3611 EE60                            u2740 E44E                            u2660 E332  
                          u2580 E198                            u2900 E7D2                            u2820 E564  
                          u3460 FFEE                            u3380 FE68                            u3700 EFCC  
                          u3620 EE98                            u2741 E44A                            u2661 E32E  
                          u2581 E194                            u2901 E7CE                            u2821 E560  
                          u3461 FFEA                            u3381 FE64                            u4077 DA6E  
                          u3701 EFC8                            u3621 EE94                            u2750 E47C  
                          u2670 E352                            u2590 E1D8                            u2910 E7EC  
                          u2830 E574                            u3390 FEAE                            u3710 F00A  
                          u3630 EEA6                            u2751 E478                            u2671 E34E  
                          u2591 E1D4                            u2911 E7E8                            u2831 E570  
                          u3391 FEAA                            u4087 DA9A                            u3711 F006  
                          u3631 EEA2                            u2680 E364                            u2920 E834  
                          u2840 E6EE                            u2760 E4AA                            u1960 D6CA  
                          u3800 F1FE                            u3720 F022                            u3640 EEDA  
                          u2681 E360                            u2921 E830                            u2761 E4A6  
                          u1961 D6C6                            u4097 D7F8                            u3801 F1FA  
                          u3721 F01E                            u3641 EED6                            u2690 E392  
                          u2930 E862                            u2850 E748                            u2770 E4BC  
                          u1970 D6E8                            u3810 F240                            u3730 F03A  
                          u3650 EEE8                            u2691 E38E                            u2931 E85E  
                          u2851 E744                            u2771 E4B8                            u1971 D6E4  
                          u3811 F23C                            u3731 F036                            u3651 EEE4  
                          u2940 E89C                            u2860 E768                            u2780 E4CC  
                          u1980 D704                            u3820 F282                            u3740 F074  
                          u3660 EF08                            u2941 E898                            u2861 E764  
                          u2845 E6E4                            u2781 E4C8                            u1981 D700  
                          u3821 F27E                            u3741 F070                            u3661 EF04  
                          u1990 D300                            u2870 E77A                            u2790 E50C  
                          u2950 DC7E                            u3830 F2C4                            u3750 F0B4  
                          u3670 EF50                            u1991 D2FC                            u2871 E776  
                          u2791 E508                            u2951 DC7A                            u3831 F2C0  
                          u3751 F0B0                            u3671 EF4C                            u2880 E7A8  
                          u2960 DCB2                            u3760 F0F6                            u3680 EF78  
                          u2881 E7A4                            u3761 F0F2                            u3681 EF74  
                          u2890 E7BE                            u2970 DCE0                            u3770 F138  
                          u3690 EFA2                            u2891 E7BA                            u2971 DCDC  
                          u3771 F134                            u3691 EF9E                            u3907 EE7C  
                          u2980 DCF4                            u3780 F17A                            u2981 DCF0  
                          u2965 DCA8                            u3781 F176                            u3917 EEBE  
                          u2990 DD1C                            u3790 F1BC                            u2991 DD18  
                          u3791 F1B8                            u3927 F092                            u3937 F0D2  
                          u3947 F114                            u3957 F156                            u3967 F198  
                          u3977 F1DA                            u3897 ED9C                            u3987 F21C  
                          u3997 F25E                            _main ED7A      __end_of_reverseTurnRight90 DB64  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          _stop D342                            prodh 000FF4                            prodl 000FF3  
                          start 0000                 ___fldiv@new_exp 0020          __end_of_color_read_Red D5AC  
                  ___param_bank 000000                     _turnLeft135 D89A                     _turnRight90 D81C  
                 ___fltol@sign1 0059                 __end_of___fladd ED7A                           ?_main 0001  
               __end_of___fldiv E490                 __end_of___flmul E8BA                 __end_of___fltol DD6E  
                         ?_stop 0019        __size_of_initDCmotorsPWM 0042                 __end_of___lwdiv D724  
                         _TMR0H 000FD4                           _TMR0L 000FD3      __end_of_I2C_2_Master_Start D22C  
    __end_of_I2C_2_Master_Write D24E                 __end_of_forward D64E                           _isbtw D724  
         __size_of_turnRight135 007E           __size_of_turnRight180 007E                           status 000FD8  
       __end_of_color_read_Blue D50C           _I2C_2_Master_RepStart D218                 ?_color_read_Red 0005  
               __initialization D2AA                    __end_of_main F2E0                    __end_of_stop D374  
                        ??_main 005D                          ??_stop 001D                   __activetblptr 000000  
                  _turnRight135 D918                    _turnRight180 D996                    ?_setMotorPWM 000E  
                        ?_isbtw 000D                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70        __end_of_color_click_init D3A8                          _RX4PPS 000E15  
                        _TX4REG 000EE4                __end_of___xxtofl DF22                   ??_Timer0_init 0001  
                 ?_read_colours 000C                          ___flge DB64     __end_of_determine_color_new 0000  
                     ??___fladd 0049                          ___wmul D2CA                       ??___fldiv 0017  
                     ??___flmul 0030                       ??___fltol 0055                       ??___lwdiv 000B  
                        clear_0 D2B0                          clear_1 D2BC                          isa$std 000001  
                     ??_forward 001D                          stop@mL 0019                          stop@mR 001B  
             ??_initDCmotorsPWM 0003                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0060         __end_of__initialization D2C4        __end_of_color_read_Clear D5FC  
      __end_of_color_read_Green D55C          ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001  
                    ___fltol@f1 0051                ?_color_read_Blue 0005                  ??_read_colours 000E  
               _Interrupts_init D236                  __pcstackCOMRAM 0001                   __end_of_isbtw D79E  
           __end_of_Timer0_init D26A        _determine_color_new$2615 0068                      _calibrateB D42C  
                    _calibrateW D472                         ??_isbtw 0019                      __pbssBANK0 00B6  
                    __pbssBANK1 0100               _color_writetoaddr D26A                    _T2CLKCONbits 000FBF  
                  ?_turnLeft135 001D            reverseTurnRight90@mL 0023            reverseTurnRight90@mR 0025  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
            _reverseTurnRight90 DABC                    ?_turnRight90 001D             ??_color_writetoaddr 0004  
                     ?___xxtofl 0001             ?_reverseTurnRight90 0023                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5            __size_of_setMotorPWM 01D4  
       __end_of_Interrupts_init D242          color_writetoaddr@value 0003                ??_color_read_Red 0007  
     __end_of_color_writetoaddr D28A              _I2C_2_Master_Start D222                      _initUSART4 D28A  
          ??_reverseTurnRight90 0027              _I2C_2_Master_Write D242                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init D24E  
               __size_of___flge 0104                         ___fladd E8BA                         ___fldiv E0F6  
                       ___flmul E490                         ___fltol DC68                 __size_of___wmul 0026  
           ?_I2C_2_Master_Start 0001                         ___lwdiv D6B0             ?_I2C_2_Master_Write 0001  
                  turnLeft90@mL 001D                    turnLeft90@mR 001F                         __pcinit D2AA  
                       __ramtop 0E00                         __ptext0 ED7A                         __ptext1 D996  
                       __ptext2 D918                         __ptext3 D89A                         __ptext4 DABC  
                       __ptext5 D81C                         __ptext6 DA14                         __ptext7 D79E  
                       __ptext8 D342                         __ptext9 D64E                       _T2CONbits 000FBD  
                       _forward D5FC                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
          __end_of_read_colours D6B0                   _RxBufWriteCnt 00CE                     ?_calibrateB 000C  
                   ?_calibrateW 000C                         main@cal 0082            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization D2C4              setMotorPWM@PWMduty 0017  
             ?_color_click_init 0001              ??_color_click_init 0005                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      _timerArray 0060                 _initDCmotorsPWM D3EA  
                     _PORTFbits 000F8E                     ___fladd@grs 0050                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002     determine_color_new@RedRatio 006C  
                    main@check1 0086                      main@check2 0088                      main@check3 008A  
                    main@check4 0084                ?_Interrupts_init 0001                     ___flmul@grs 0035  
             ?_color_read_Clear 0005      __size_of_color_writetoaddr 0020                    _EUSART4RXbuf 00B6  
                  _EUSART4TXbuf 0100               ?_color_read_Green 0005                     ?_initUSART4 0001  
                    main@motorL 00A4                      main@motorR 00AD              ??_color_read_Clear 0007  
            ??_color_read_Green 0007                      _turnLeft90 D79E             __size_of_calibrateB 0046  
           __size_of_calibrateW 004A                  __end_of___flge DC68            __size_of_turnLeft135 007E  
                __end_of___wmul D2F0            __size_of_turnRight90 007E    __size_of_determine_color_new 0D20  
           color_read_Clear@tmp 000A             start_initialization D2AA                   _TxBufWriteCnt 005F  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM D42C                        ??___flge 0009  
                      ??___wmul 0005        __size_of_color_read_Blue 0050           __size_of_read_colours 0062  
                     ___fladd@a 0045                       ___fladd@b 0041             reverseTurnLeft90@mL 0023  
           reverseTurnLeft90@mR 0025                       ___fldiv@a 0013                       ___fldiv@b 000F  
 determine_color_new@GreenRatio 006E                       ___flmul@a 002C                       ___flmul@b 0028  
                   __pbssCOMRAM 005F             __size_of_initUSART4 0020                   __pcstackBANK0 0060  
             __size_of___xxtofl 01B4                ___lwdiv@dividend 0007                    ?_Timer0_init 0001  
             _reverseTurnLeft90 DA14                     ?_turnLeft90 001D                    _read_colours D64E  
                      ?___fladd 0041                        ?___fldiv 000F                        ?___flmul 0028  
                      ?___fltol 0051              ?_reverseTurnLeft90 0023                        ?___lwdiv 0007  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                   ?_turnRight135 001D  
                 ?_turnRight180 001D             ??_reverseTurnLeft90 0027                        ?_forward 0019  
             _I2C_2_Master_Idle D2F0               _I2C_2_Master_Init D318               _I2C_2_Master_Read D3A8  
             _I2C_2_Master_Stop D22C                    _RxBufReadCnt 00CD              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0010  
                  ??_calibrateB 000E                    ??_calibrateW 000E              ?_I2C_2_Master_Stop 0001  
              ___lwdiv@quotient 000B        initDCmotorsPWM@PWMperiod 0001                  __size_of_isbtw 007A  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
                      _PIE0bits 000E29                        _PIE2bits 000E2B                        _PIE4bits 000E2D  
     __end_of_reverseTurnLeft90 DABC     __size_of_reverseTurnRight90 00A8                        _PIR4bits 000E37  
          determine_color_new@m 005B                       _movements 00CA                ?_initDCmotorsPWM 0001  
                      _SSP2CON2 000EDA                        _SSP2STAT 000ED8              __end_of_calibrateB D472  
            __end_of_calibrateW D4BC       __size_of_color_click_init 0034       __end_of_I2C_2_Master_Idle D318  
     __end_of_I2C_2_Master_Init D342       __end_of_I2C_2_Master_Read D3EA               ___wmul@multiplier 0001  
                ??_turnRight135 0021                  ??_turnRight180 0021                   _movementArray 0060  
     __end_of_I2C_2_Master_Stop D236        determine_color_new@lumin 0074                    setMotorPWM@m 000E  
   I2C_2_Master_Write@data_byte 0002                       main@count 008C               ??_color_read_Blue 0007  
                  _TxBufReadCnt 00CC             __size_of_turnLeft90 007E     __size_of_I2C_2_Master_Start 000A  
   __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A   __end_of_I2C_2_Master_RepStart D222  
            color_read_Blue@tmp 000A                     calibrateB@m 000C                     calibrateW@m 000C  
           __end_of_setMotorPWM E0F6             _determine_color_new F2E0                    ??_initUSART4 0001  
                      __Hrparam 0000                        __Lrparam 0000                       forward@mL 0019  
                     forward@mR 001B         __size_of_color_read_Red 0050                __size_of___fladd 04C0  
              __size_of___fldiv 039A                __size_of___flmul 042A                __size_of___fltol 0106  
                     isbtw@high 0015                __size_of___lwdiv 0074                  turnRight135@mL 001D  
                turnRight135@mR 001F                  turnRight180@mL 001D                  turnRight180@mR 001F  
     __size_of_color_read_Clear 0050                   turnLeft135@mL 001D                   turnLeft135@mR 001F  
     __size_of_color_read_Green 0050                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
          ?_determine_color_new 005B                        ___xxtofl DD6E                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6                __size_of_forward 0052                 ___lwdiv@divisor 0009  
            __end_of_initUSART4 D2AA                 ___lwdiv@counter 000D                        __ptext10 D5AC  
                      __ptext11 D28A                        __ptext20 DD6E                        __ptext12 D3EA  
                      __ptext21 DC68                        __ptext13 D5FC                        __ptext30 D55C  
                      __ptext22 E490                        __ptext14 DF22                        __ptext31 D50C  
                      __ptext23 E0F6                        __ptext15 D2CA                        __ptext40 D236  
                      __ptext32 D4BC                        __ptext24 E8BA                        __ptext16 D6B0  
                      __ptext33 D242                        __ptext25 D374                        __ptext17 F2E0  
                      __ptext34 D22C                        __ptext26 D26A                        __ptext18 D724  
                      __ptext35 D222                        __ptext27 D318                        __ptext19 DB64  
                      __ptext36 D218                        __ptext28 D472                        __ptext37 D3A8  
                      __ptext29 D42C                        __ptext38 D2F0                        __ptext39 D24E  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA                   __size_of_main 0566  
                 __size_of_stop 0032      __size_of_reverseTurnLeft90 00A8                   ??_turnLeft135 0021  
                      isa$xinst 000000        __size_of_Interrupts_init 000C                      _RC4STAbits 000EE7  
       determine_color_new@RelB 007E         determine_color_new@RelG 007A         determine_color_new@RelR 0076  
          __size_of_Timer0_init 001C                   ??_turnRight90 0021                        main@test 0090  
    __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042  
         ??_determine_color_new 0060      __size_of_I2C_2_Master_Stop 000A                      _INTCONbits 000FF2  
                   _setMotorPWM DF22                        isbtw@low 0011                        isbtw@num 000D  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                   turnRight90@mL 001D  
                 turnRight90@mR 001F            __end_of_turnRight135 D996            __end_of_turnRight180 DA14  
           main@detected_colour 008E                    ??_turnLeft90 0021          determine_color_new@out 0072  
                 read_colours@m 000C                _color_click_init D374             __end_of_turnLeft135 D918  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C             __end_of_turnRight90 D89A  
                 ___fladd@signs 004D              __end_of_turnLeft90 D81C                      _TX4STAbits 000EE8  
                  ___fladd@aexp 004E                    ___fladd@bexp 004F    determine_color_new@BlueRatio 0070  
