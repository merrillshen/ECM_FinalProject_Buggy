

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 17:45:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 05/05/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PIR0bits	set	3635
    96  0000                     _PIE0bits	set	3625
    97  0000                     _PIE2bits	set	3627
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _RC7PPS	set	3689
   111  0000                     _RE2PPS	set	3700
   112  0000                     _SSP2BUF	set	3797
   113  0000                     _SSP2CON2bits	set	3802
   114  0000                     _SSP2CON2	set	3802
   115  0000                     _SSP2STAT	set	3800
   116  0000                     _RD6PPS	set	3696
   117  0000                     _RD5PPS	set	3695
   118  0000                     _SSP2CLKPPS	set	3612
   119  0000                     _SSP2DATPPS	set	3613
   120  0000                     _ANSELDbits	set	3751
   121  0000                     _SSP2ADD	set	3798
   122  0000                     _SSP2CON1bits	set	3801
   123  0000                     _T0CON0bits	set	4053
   124  0000                     _T0CON1bits	set	4054
   125  0000                     _INTCONbits	set	4082
   126  0000                     _PORTFbits	set	3982
   127  0000                     _LATHbits	set	3968
   128  0000                     _TRISHbits	set	3976
   129  0000                     _LATDbits	set	3964
   130  0000                     _LATFbits	set	3966
   131  0000                     _TRISAbits	set	3969
   132  0000                     _LATAbits	set	3961
   133  0000                     _TRISFbits	set	3974
   134  0000                     _PWM7CONbits	set	4001
   135  0000                     _PWM6CONbits	set	4004
   136  0000                     _T2PR	set	4028
   137  0000                     _T2CLKCONbits	set	4031
   138  0000                     _T2HLTbits	set	4030
   139  0000                     _T2CONbits	set	4029
   140  0000                     _LATGbits	set	3967
   141  0000                     _LATCbits	set	3963
   142  0000                     _LATEbits	set	3965
   143  0000                     _TRISGbits	set	3975
   144  0000                     _TRISCbits	set	3971
   145  0000                     _TRISEbits	set	3973
   146  0000                     _TRISDbits	set	3972
   147  0000                     _TMR0L	set	4051
   148  0000                     _TMR0H	set	4052
   149  0000                     _LATG	set	3967
   150  0000                     _LATE	set	3965
   151  0000                     _PWM7DCH	set	4000
   152  0000                     _PWM6DCH	set	4003
   153                           
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  00375E                     __pcinit:
   158                           	callstack 0
   159  00375E                     start_initialization:
   160                           	callstack 0
   161  00375E                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (60 bytes)
   165  00375E  EE01  F000         	lfsr	0,__pbssBANK1
   166  003762  0E3C               	movlw	60
   167  003764                     clear_0:
   168  003764  6AEE               	clrf	postinc0,c
   169  003766  06E8               	decf	wreg,f,c
   170  003768  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (66 bytes)
   173  00376A  EE00  F0B8         	lfsr	0,__pbssBANK0
   174  00376E  0E42               	movlw	66
   175  003770                     clear_1:
   176  003770  6AEE               	clrf	postinc0,c
   177  003772  06E8               	decf	wreg,f,c
   178  003774  E1FD               	bnz	clear_1
   179  003776                     end_of_initialization:
   180                           	callstack 0
   181  003776                     __end_of__initialization:
   182                           	callstack 0
   183  003776  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  003778  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  00377A  0100               	movlb	0
   186  00377C  EFC7  F006         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  0000B8                     __pbssBANK0:
   190                           	callstack 0
   191  0000B8                     _EUSART4RXbuf:
   192                           	callstack 0
   193  0000B8                     	ds	20
   194  0000CC                     _movements:
   195                           	callstack 0
   196  0000CC                     	ds	2
   197  0000CE                     _TxBufReadCnt:
   198                           	callstack 0
   199  0000CE                     	ds	1
   200  0000CF                     _TxBufWriteCnt:
   201                           	callstack 0
   202  0000CF                     	ds	1
   203  0000D0                     _RxBufReadCnt:
   204                           	callstack 0
   205  0000D0                     	ds	1
   206  0000D1                     _RxBufWriteCnt:
   207                           	callstack 0
   208  0000D1                     	ds	1
   209  0000D2                     _movementArray:
   210                           	callstack 0
   211  0000D2                     	ds	20
   212  0000E6                     _timerArray:
   213                           	callstack 0
   214  0000E6                     	ds	20
   215                           
   216                           	psect	bssBANK1
   217  000100                     __pbssBANK1:
   218                           	callstack 0
   219  000100                     _EUSART4TXbuf:
   220                           	callstack 0
   221  000100                     	ds	60
   222                           
   223                           	psect	cstackBANK0
   224  000060                     __pcstackBANK0:
   225                           	callstack 0
   226  000060                     ??_determine_color_new:
   227                           
   228                           ; 1 bytes @ 0x0
   229  000060                     	ds	8
   230  000068                     _determine_color_new$2628:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x8
   234  000068                     	ds	4
   235  00006C                     determine_color_new@RedRatio:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0xC
   239  00006C                     	ds	2
   240  00006E                     determine_color_new@GreenRatio:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xE
   244  00006E                     	ds	2
   245  000070                     determine_color_new@BlueRatio:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000070                     	ds	2
   250  000072                     determine_color_new@out:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x12
   254  000072                     	ds	2
   255  000074                     determine_color_new@lumin:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000074                     	ds	2
   260  000076                     determine_color_new@RelR:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x16
   264  000076                     	ds	4
   265  00007A                     determine_color_new@RelG:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x1A
   269  00007A                     	ds	4
   270  00007E                     determine_color_new@RelB:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x1E
   274  00007E                     	ds	4
   275  000082                     main@cal:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279  000082                     	ds	2
   280  000084                     main@check4:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284  000084                     	ds	2
   285  000086                     main@reset_timer:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x26
   289  000086                     	ds	2
   290  000088                     main@check1:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x28
   294  000088                     	ds	2
   295  00008A                     main@check2:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2A
   299  00008A                     	ds	2
   300  00008C                     main@check3:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x2C
   304  00008C                     	ds	2
   305  00008E                     main@count:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2E
   309  00008E                     	ds	2
   310  000090                     main@detected_colour:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x30
   314  000090                     	ds	2
   315  000092                     main@test:
   316                           	callstack 0
   317                           
   318                           ; 20 bytes @ 0x32
   319  000092                     	ds	20
   320  0000A6                     main@motorL:
   321                           	callstack 0
   322                           
   323                           ; 9 bytes @ 0x46
   324  0000A6                     	ds	9
   325  0000AF                     main@motorR:
   326                           	callstack 0
   327                           
   328                           ; 9 bytes @ 0x4F
   329  0000AF                     	ds	9
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	callstack 0
   334  000001                     ??_I2C_2_Master_Idle:
   335  000001                     ?___wmul:
   336                           	callstack 0
   337  000001                     ?___xxtofl:
   338                           	callstack 0
   339  000001                     updateMovementCount@movementCode:
   340                           	callstack 0
   341  000001                     initDCmotorsPWM@PWMperiod:
   342                           	callstack 0
   343  000001                     ___wmul@multiplier:
   344                           	callstack 0
   345  000001                     ___flge@ff1:
   346                           	callstack 0
   347  000001                     ___xxtofl@val:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     ??_I2C_2_Master_Read:
   353  000002                     I2C_2_Master_Write@data_byte:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     color_writetoaddr@value:
   359                           	callstack 0
   360  000003                     I2C_2_Master_Read@ack:
   361                           	callstack 0
   362  000003                     updateMovementCount@movementArray:
   363                           	callstack 0
   364  000003                     ___wmul@multiplicand:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     color_writetoaddr@address:
   370                           	callstack 0
   371  000004                     I2C_2_Master_Read@tmp:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x3
   375  000004                     	ds	1
   376  000005                     ??_color_click_init:
   377  000005                     ??___xxtofl:
   378  000005                     ?_color_read_Clear:
   379                           	callstack 0
   380  000005                     ?_color_read_Red:
   381                           	callstack 0
   382  000005                     ?_color_read_Green:
   383                           	callstack 0
   384  000005                     ?_color_read_Blue:
   385                           	callstack 0
   386  000005                     updateMovementCount@movements:
   387                           	callstack 0
   388  000005                     ___wmul@product:
   389                           	callstack 0
   390  000005                     ___flge@ff2:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x4
   394  000005                     	ds	2
   395  000007                     ??_color_read_Clear:
   396  000007                     ??_color_read_Red:
   397  000007                     ??_color_read_Green:
   398  000007                     ??_color_read_Blue:
   399  000007                     ?___lwdiv:
   400                           	callstack 0
   401  000007                     updateMovementCount@timerArray:
   402                           	callstack 0
   403  000007                     ___lwdiv@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	2
   408  000009                     ??_updateMovementCount:
   409  000009                     ??___flge:
   410  000009                     ___xxtofl@sign:
   411                           	callstack 0
   412  000009                     ___lwdiv@divisor:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x8
   416  000009                     	ds	1
   417  00000A                     ___xxtofl@exp:
   418                           	callstack 0
   419  00000A                     color_read_Clear@tmp:
   420                           	callstack 0
   421  00000A                     color_read_Red@tmp:
   422                           	callstack 0
   423  00000A                     color_read_Green@tmp:
   424                           	callstack 0
   425  00000A                     color_read_Blue@tmp:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x9
   429  00000A                     	ds	1
   430  00000B                     updateMovementCount@tempTimerVal:
   431                           	callstack 0
   432  00000B                     ___lwdiv@quotient:
   433                           	callstack 0
   434  00000B                     ___xxtofl@arg:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0xA
   438  00000B                     	ds	1
   439  00000C                     read_colours@m:
   440                           	callstack 0
   441  00000C                     calibrateW@m:
   442                           	callstack 0
   443  00000C                     calibrateB@m:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     ?_isbtw:
   449                           	callstack 0
   450  00000D                     ___lwdiv@counter:
   451                           	callstack 0
   452  00000D                     isbtw@num:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xC
   456  00000D                     	ds	1
   457  00000E                     setMotorPWM@m:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xD
   461  00000E                     	ds	1
   462  00000F                     ?___fldiv:
   463                           	callstack 0
   464  00000F                     ___fldiv@b:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     ??_setMotorPWM:
   470                           
   471                           ; 1 bytes @ 0xF
   472  000010                     	ds	1
   473  000011                     isbtw@low:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x10
   477  000011                     	ds	2
   478  000013                     ___fldiv@a:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x12
   482  000013                     	ds	2
   483  000015                     isbtw@high:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x14
   487  000015                     	ds	2
   488  000017                     ??___fldiv:
   489  000017                     setMotorPWM@PWMduty:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x16
   493  000017                     	ds	2
   494  000019                     stop@mL:
   495                           	callstack 0
   496  000019                     reverse@mL:
   497                           	callstack 0
   498  000019                     forward@mL:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x18
   502  000019                     	ds	2
   503  00001B                     stop@mR:
   504                           	callstack 0
   505  00001B                     reverse@mR:
   506                           	callstack 0
   507  00001B                     forward@mR:
   508                           	callstack 0
   509  00001B                     ___fldiv@rem:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x1A
   513  00001B                     	ds	2
   514  00001D                     turnLeft90@mL:
   515                           	callstack 0
   516  00001D                     turnLeft135@mL:
   517                           	callstack 0
   518  00001D                     turnRight90@mL:
   519                           	callstack 0
   520  00001D                     turnRight135@mL:
   521                           	callstack 0
   522  00001D                     turnRight180@mL:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  00001D                     	ds	2
   527  00001F                     ___fldiv@sign:
   528                           	callstack 0
   529  00001F                     turnLeft90@mR:
   530                           	callstack 0
   531  00001F                     turnLeft135@mR:
   532                           	callstack 0
   533  00001F                     turnRight90@mR:
   534                           	callstack 0
   535  00001F                     turnRight135@mR:
   536                           	callstack 0
   537  00001F                     turnRight180@mR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1E
   541  00001F                     	ds	1
   542  000020                     ___fldiv@new_exp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1F
   546  000020                     	ds	1
   547  000021                     ??_turnRight180:
   548  000021                     ??_turnLeft90:
   549  000021                     ??_turnRight90:
   550  000021                     ??_turnLeft135:
   551  000021                     ??_turnRight135:
   552                           
   553                           ; 1 bytes @ 0x20
   554  000021                     	ds	1
   555  000022                     ___fldiv@grs:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x21
   559  000022                     	ds	1
   560  000023                     turnLeft90@i:
   561                           	callstack 0
   562  000023                     turnLeft135@i:
   563                           	callstack 0
   564  000023                     turnRight90@i:
   565                           	callstack 0
   566  000023                     turnRight135@i:
   567                           	callstack 0
   568  000023                     turnRight180@i:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572  000023                     	ds	2
   573  000025                     reverseTurnRight90@mL:
   574                           	callstack 0
   575  000025                     reverseTurnLeft90@mL:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x24
   579  000025                     	ds	1
   580  000026                     ___fldiv@bexp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x25
   584  000026                     	ds	1
   585  000027                     ___fldiv@aexp:
   586                           	callstack 0
   587  000027                     reverseTurnRight90@mR:
   588                           	callstack 0
   589  000027                     reverseTurnLeft90@mR:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x26
   593  000027                     	ds	1
   594  000028                     ?___flmul:
   595                           	callstack 0
   596  000028                     ___flmul@b:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x27
   600  000028                     	ds	1
   601  000029                     ??_reverseTurnLeft90:
   602  000029                     ??_reverseTurnRight90:
   603                           
   604                           ; 1 bytes @ 0x28
   605  000029                     	ds	2
   606  00002B                     White@mL:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x2A
   610  00002B                     	ds	1
   611  00002C                     ___flmul@a:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x2B
   615  00002C                     	ds	1
   616  00002D                     White@mR:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x2C
   620  00002D                     	ds	2
   621  00002F                     White@movementArray:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x2E
   625  00002F                     	ds	1
   626  000030                     ??___flmul:
   627                           
   628                           ; 1 bytes @ 0x2F
   629  000030                     	ds	1
   630  000031                     White@movements:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x30
   634  000031                     	ds	2
   635  000033                     White@timerArray:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x32
   639  000033                     	ds	1
   640  000034                     ___flmul@sign:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x33
   644  000034                     	ds	1
   645  000035                     ??_White:
   646  000035                     ___flmul@grs:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x34
   650  000035                     	ds	4
   651  000039                     ___flmul@aexp:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x38
   655  000039                     	ds	1
   656  00003A                     ___flmul@bexp:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x39
   660  00003A                     	ds	1
   661  00003B                     White@tempTimerVal:
   662                           	callstack 0
   663  00003B                     ___flmul@prod:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x3A
   667  00003B                     	ds	2
   668  00003D                     White@i:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x3C
   672  00003D                     	ds	2
   673  00003F                     ___flmul@temp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x3E
   677  00003F                     	ds	2
   678  000041                     ?___fladd:
   679                           	callstack 0
   680  000041                     ___fladd@b:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x40
   684  000041                     	ds	4
   685  000045                     ___fladd@a:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x44
   689  000045                     	ds	4
   690  000049                     ??___fladd:
   691                           
   692                           ; 1 bytes @ 0x48
   693  000049                     	ds	4
   694  00004D                     ___fladd@signs:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x4C
   698  00004D                     	ds	1
   699  00004E                     ___fladd@aexp:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x4D
   703  00004E                     	ds	1
   704  00004F                     ___fladd@bexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x4E
   708  00004F                     	ds	1
   709  000050                     ___fladd@grs:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x4F
   713  000050                     	ds	1
   714  000051                     ?___fltol:
   715                           	callstack 0
   716  000051                     ___fltol@f1:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x50
   720  000051                     	ds	4
   721  000055                     ??___fltol:
   722                           
   723                           ; 1 bytes @ 0x54
   724  000055                     	ds	4
   725  000059                     ___fltol@sign1:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x58
   729  000059                     	ds	1
   730  00005A                     ___fltol@exp1:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x59
   734  00005A                     	ds	1
   735  00005B                     ?_determine_color_new:
   736                           	callstack 0
   737  00005B                     determine_color_new@m:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x5A
   741  00005B                     	ds	2
   742  00005D                     ??_main:
   743                           
   744                           ; 1 bytes @ 0x5C
   745  00005D                     	ds	2
   746                           
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 24 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  detected_col    2   48[BANK0 ] unsigned int 
   757 ;;  test           20   50[BANK0 ] struct RGB_val
   758 ;;  motorR          9   79[BANK0 ] struct DC_motor
   759 ;;  motorL          9   70[BANK0 ] struct DC_motor
   760 ;;  count           2   46[BANK0 ] unsigned int 
   761 ;;  check3          2   44[BANK0 ] unsigned int 
   762 ;;  check2          2   42[BANK0 ] unsigned int 
   763 ;;  check1          2   40[BANK0 ] unsigned int 
   764 ;;  PWMcycle        2    0        unsigned int 
   765 ;;  reset_timer     2   38[BANK0 ] unsigned int 
   766 ;;  check4          2   36[BANK0 ] unsigned int 
   767 ;;  cal             2   34[BANK0 ] unsigned int 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   780 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   781 ;;Total ram usage:       56 bytes
   782 ;; Hardware stack levels required when called: 7
   783 ;; This function calls:
   784 ;;		_Interrupts_init
   785 ;;		_Timer0_init
   786 ;;		_White
   787 ;;		_calibrateB
   788 ;;		_calibrateW
   789 ;;		_color_click_init
   790 ;;		_determine_color_new
   791 ;;		_forward
   792 ;;		_initDCmotorsPWM
   793 ;;		_initUSART4
   794 ;;		_read_colours
   795 ;;		_reverseTurnLeft90
   796 ;;		_reverseTurnRight90
   797 ;;		_stop
   798 ;;		_turnLeft135
   799 ;;		_turnLeft90
   800 ;;		_turnRight135
   801 ;;		_turnRight180
   802 ;;		_turnRight90
   803 ;;		_updateMovementCount
   804 ;; This function is called by:
   805 ;;		Startup code after reset
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text0
   810  000D8E                     __ptext0:
   811                           	callstack 0
   812  000D8E                     _main:
   813                           	callstack 24
   814  000D8E                     
   815                           ;main.c: 26:     initDCmotorsPWM(99);
   816  000D8E  0E00               	movlw	0
   817  000D90  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   818  000D92  0E63               	movlw	99
   819  000D94  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   820  000D96  EC17  F01B         	call	_initDCmotorsPWM	;wreg free
   821  000D9A                     
   822                           ;main.c: 27:     color_click_init();
   823  000D9A  EC59  F01B         	call	_color_click_init	;wreg free
   824  000D9E                     
   825                           ;main.c: 28:     initUSART4();
   826  000D9E  ECC0  F01B         	call	_initUSART4	;wreg free
   827  000DA2                     
   828                           ;main.c: 29:     Timer0_init();
   829  000DA2  ECE0  F01B         	call	_Timer0_init	;wreg free
   830  000DA6                     
   831                           ;main.c: 30:     Interrupts_init();
   832  000DA6  ECF4  F01B         	call	_Interrupts_init	;wreg free
   833  000DAA                     
   834                           ;main.c: 35:     motorL.power=0;
   835  000DAA  0E00               	movlw	0
   836  000DAC  0100               	movlb	0	; () banked
   837  000DAE  6FA6               	movwf	main@motorL& (0+255),b
   838  000DB0                     
   839                           ; BSR set to: 0
   840                           ;main.c: 36:     motorL.direction=1;
   841  000DB0  0E01               	movlw	1
   842  000DB2  6FA7               	movwf	(main@motorL+1)& (0+255),b
   843  000DB4                     
   844                           ; BSR set to: 0
   845                           ;main.c: 37:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   846  000DB4  0EA3               	movlw	163
   847  000DB6  6FA8               	movwf	(main@motorL+2)& (0+255),b
   848  000DB8  0E0F               	movlw	15
   849  000DBA  6FA9               	movwf	(main@motorL+3)& (0+255),b
   850  000DBC                     
   851                           ; BSR set to: 0
   852                           ;main.c: 38:     motorL.dir_LAT=(unsigned char *)(&LATE);
   853  000DBC  0E7D               	movlw	125
   854  000DBE  6FAA               	movwf	(main@motorL+4)& (0+255),b
   855  000DC0  0E0F               	movlw	15
   856  000DC2  6FAB               	movwf	(main@motorL+5)& (0+255),b
   857  000DC4                     
   858                           ; BSR set to: 0
   859                           ;main.c: 39:     motorL.dir_pin=4;
   860  000DC4  0E04               	movlw	4
   861  000DC6  6FAC               	movwf	(main@motorL+6)& (0+255),b
   862  000DC8                     
   863                           ; BSR set to: 0
   864                           ;main.c: 40:     motorL.PWMperiod=PWMcycle;
   865  000DC8  0E00               	movlw	0
   866  000DCA  6FAE               	movwf	(main@motorL+8)& (0+255),b
   867  000DCC  0E63               	movlw	99
   868  000DCE  6FAD               	movwf	(main@motorL+7)& (0+255),b
   869  000DD0                     
   870                           ; BSR set to: 0
   871                           ;main.c: 42:     motorR.power=0;
   872  000DD0  0E00               	movlw	0
   873  000DD2  6FAF               	movwf	main@motorR& (0+255),b
   874  000DD4                     
   875                           ; BSR set to: 0
   876                           ;main.c: 43:     motorR.direction=1;
   877  000DD4  0E01               	movlw	1
   878  000DD6  6FB0               	movwf	(main@motorR+1)& (0+255),b
   879  000DD8                     
   880                           ; BSR set to: 0
   881                           ;main.c: 44:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   882  000DD8  0EA0               	movlw	160
   883  000DDA  6FB1               	movwf	(main@motorR+2)& (0+255),b
   884  000DDC  0E0F               	movlw	15
   885  000DDE  6FB2               	movwf	(main@motorR+3)& (0+255),b
   886  000DE0                     
   887                           ; BSR set to: 0
   888                           ;main.c: 45:     motorR.dir_LAT=(unsigned char *)(&LATG);
   889  000DE0  0E7F               	movlw	127
   890  000DE2  6FB3               	movwf	(main@motorR+4)& (0+255),b
   891  000DE4  0E0F               	movlw	15
   892  000DE6  6FB4               	movwf	(main@motorR+5)& (0+255),b
   893  000DE8                     
   894                           ; BSR set to: 0
   895                           ;main.c: 46:     motorR.dir_pin=6;
   896  000DE8  0E06               	movlw	6
   897  000DEA  6FB5               	movwf	(main@motorR+6)& (0+255),b
   898  000DEC                     
   899                           ; BSR set to: 0
   900                           ;main.c: 47:     motorR.PWMperiod=PWMcycle;
   901  000DEC  0E00               	movlw	0
   902  000DEE  6FB7               	movwf	(main@motorR+8)& (0+255),b
   903  000DF0  0E63               	movlw	99
   904  000DF2  6FB6               	movwf	(main@motorR+7)& (0+255),b
   905  000DF4                     
   906                           ; BSR set to: 0
   907                           ;main.c: 50:     struct RGB_val test;;main.c: 51:     test.C = 0;
   908  000DF4  0E00               	movlw	0
   909  000DF6  6F9F               	movwf	(main@test+13)& (0+255),b
   910  000DF8  0E00               	movlw	0
   911  000DFA  6F9E               	movwf	(main@test+12)& (0+255),b
   912  000DFC                     
   913                           ; BSR set to: 0
   914                           ;main.c: 52:     test.R = 0;
   915  000DFC  0E00               	movlw	0
   916  000DFE  6FA1               	movwf	(main@test+15)& (0+255),b
   917  000E00  0E00               	movlw	0
   918  000E02  6FA0               	movwf	(main@test+14)& (0+255),b
   919  000E04                     
   920                           ; BSR set to: 0
   921                           ;main.c: 53:     test.G = 0;
   922  000E04  0E00               	movlw	0
   923  000E06  6FA3               	movwf	(main@test+17)& (0+255),b
   924  000E08  0E00               	movlw	0
   925  000E0A  6FA2               	movwf	(main@test+16)& (0+255),b
   926  000E0C                     
   927                           ; BSR set to: 0
   928                           ;main.c: 54:     test.B = 0;
   929  000E0C  0E00               	movlw	0
   930  000E0E  6FA5               	movwf	(main@test+19)& (0+255),b
   931  000E10  0E00               	movlw	0
   932  000E12  6FA4               	movwf	(main@test+18)& (0+255),b
   933  000E14                     
   934                           ; BSR set to: 0
   935                           ;main.c: 57:     TRISFbits.TRISF2=1;
   936  000E14  8486               	bsf	134,2,c	;volatile
   937  000E16                     
   938                           ; BSR set to: 0
   939                           ;main.c: 58:     ANSELFbits.ANSELF2=0;
   940  000E16  010E               	movlb	14	; () banked
   941  000E18  95B4               	bcf	180,2,b	;volatile
   942  000E1A                     
   943                           ; BSR set to: 14
   944                           ;main.c: 59:     TRISFbits.TRISF3=1;
   945  000E1A  8686               	bsf	134,3,c	;volatile
   946  000E1C                     
   947                           ; BSR set to: 14
   948                           ;main.c: 60:     ANSELFbits.ANSELF3=0;
   949  000E1C  97B4               	bcf	180,3,b	;volatile
   950  000E1E                     
   951                           ; BSR set to: 14
   952                           ;main.c: 63:     LATGbits.LATG1=1;
   953  000E1E  827F               	bsf	127,1,c	;volatile
   954  000E20                     
   955                           ; BSR set to: 14
   956                           ;main.c: 64:     TRISGbits.TRISG1=0;
   957  000E20  9287               	bcf	135,1,c	;volatile
   958  000E22                     
   959                           ; BSR set to: 14
   960                           ;main.c: 65:     LATAbits.LATA4=1;
   961  000E22  8879               	bsf	121,4,c	;volatile
   962  000E24                     
   963                           ; BSR set to: 14
   964                           ;main.c: 66:     TRISAbits.TRISA4=0;
   965  000E24  9881               	bcf	129,4,c	;volatile
   966  000E26                     
   967                           ; BSR set to: 14
   968                           ;main.c: 67:     LATFbits.LATF7=1;
   969  000E26  8E7E               	bsf	126,7,c	;volatile
   970  000E28                     
   971                           ; BSR set to: 14
   972                           ;main.c: 68:     TRISFbits.TRISF7=0;
   973  000E28  9E86               	bcf	134,7,c	;volatile
   974  000E2A                     
   975                           ; BSR set to: 14
   976                           ;main.c: 71:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
   977  000E2A  9E84               	bcf	132,7,c	;volatile
   978  000E2C                     
   979                           ; BSR set to: 14
   980  000E2C  9E7C               	bcf	124,7,c	;volatile
   981  000E2E                     
   982                           ; BSR set to: 14
   983                           ;main.c: 72:     TRISHbits.TRISH3 = 0; LATHbits.LATH3 = 0;
   984  000E2E  9688               	bcf	136,3,c	;volatile
   985  000E30                     
   986                           ; BSR set to: 14
   987  000E30  9680               	bcf	128,3,c	;volatile
   988  000E32                     
   989                           ; BSR set to: 14
   990                           ;main.c: 75:     unsigned int cal = 0;
   991  000E32  0E00               	movlw	0
   992  000E34  0100               	movlb	0	; () banked
   993  000E36  6F83               	movwf	(main@cal+1)& (0+255),b
   994  000E38  0E00               	movlw	0
   995  000E3A  6F82               	movwf	main@cal& (0+255),b
   996                           
   997                           ;main.c: 76:     while(cal==0){
   998  000E3C  EF7B  F007         	goto	l4036
   999  000E40                     l365:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 77:         LATDbits.LATD7 = 1;
  1003  000E40  8E7C               	bsf	124,7,c	;volatile
  1004  000E42                     l366:
  1005  000E42  B48E               	btfsc	142,2,c	;volatile
  1006  000E44  EF26  F007         	goto	u3891
  1007  000E48  EF28  F007         	goto	u3890
  1008  000E4C                     u3891:
  1009  000E4C  EF21  F007         	goto	l366
  1010  000E50                     u3890:
  1011  000E50                     
  1012                           ;main.c: 79:         if (!PORTFbits.RF2){
  1013  000E50  B48E               	btfsc	142,2,c	;volatile
  1014  000E52  EF2D  F007         	goto	u3901
  1015  000E56  EF2F  F007         	goto	u3900
  1016  000E5A                     u3901:
  1017  000E5A  EF41  F007         	goto	l4022
  1018  000E5E                     u3900:
  1019  000E5E                     
  1020                           ;main.c: 80:             LATDbits.LATD7 = 0;
  1021  000E5E  9E7C               	bcf	124,7,c	;volatile
  1022  000E60                     
  1023                           ;main.c: 81:             calibrateW(&test);
  1024  000E60  0E92               	movlw	low main@test
  1025  000E62  6E0C               	movwf	calibrateW@m^0,c
  1026  000E64  0E00               	movlw	high main@test
  1027  000E66  6E0D               	movwf	(calibrateW@m+1)^0,c
  1028  000E68  ECCF  F01A         	call	_calibrateW	;wreg free
  1029  000E6C                     
  1030                           ;main.c: 82:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1031  000E6C  0E19               	movlw	25
  1032  000E6E  6E5E               	movwf	(??_main+1)^0,c
  1033  000E70  0E5A               	movlw	90
  1034  000E72  6E5D               	movwf	??_main^0,c
  1035  000E74  0EB2               	movlw	178
  1036  000E76                     u4227:
  1037  000E76  2EE8               	decfsz	wreg,f,c
  1038  000E78  D7FE               	bra	u4227
  1039  000E7A  2E5D               	decfsz	??_main^0,f,c
  1040  000E7C  D7FC               	bra	u4227
  1041  000E7E  2E5E               	decfsz	(??_main+1)^0,f,c
  1042  000E80  D7FA               	bra	u4227
  1043  000E82                     l4022:
  1044                           
  1045                           ;main.c: 85:         LATDbits.LATD7 = 1;
  1046  000E82  8E7C               	bsf	124,7,c	;volatile
  1047  000E84                     l370:
  1048  000E84  B48E               	btfsc	142,2,c	;volatile
  1049  000E86  EF47  F007         	goto	u3911
  1050  000E8A  EF49  F007         	goto	u3910
  1051  000E8E                     u3911:
  1052  000E8E  EF42  F007         	goto	l370
  1053  000E92                     u3910:
  1054  000E92                     
  1055                           ;main.c: 87:         if (!PORTFbits.RF2){
  1056  000E92  B48E               	btfsc	142,2,c	;volatile
  1057  000E94  EF4E  F007         	goto	u3921
  1058  000E98  EF50  F007         	goto	u3920
  1059  000E9C                     u3921:
  1060  000E9C  EF62  F007         	goto	l4030
  1061  000EA0                     u3920:
  1062  000EA0                     
  1063                           ;main.c: 88:             LATDbits.LATD7 = 0;
  1064  000EA0  9E7C               	bcf	124,7,c	;volatile
  1065  000EA2                     
  1066                           ;main.c: 89:             calibrateB(&test);
  1067  000EA2  0E92               	movlw	low main@test
  1068  000EA4  6E0C               	movwf	calibrateB@m^0,c
  1069  000EA6  0E00               	movlw	high main@test
  1070  000EA8  6E0D               	movwf	(calibrateB@m+1)^0,c
  1071  000EAA  ECF4  F01A         	call	_calibrateB	;wreg free
  1072  000EAE                     
  1073                           ;main.c: 90:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1074  000EAE  0E19               	movlw	25
  1075  000EB0  6E5E               	movwf	(??_main+1)^0,c
  1076  000EB2  0E5A               	movlw	90
  1077  000EB4  6E5D               	movwf	??_main^0,c
  1078  000EB6  0EB2               	movlw	178
  1079  000EB8                     u4237:
  1080  000EB8  2EE8               	decfsz	wreg,f,c
  1081  000EBA  D7FE               	bra	u4237
  1082  000EBC  2E5D               	decfsz	??_main^0,f,c
  1083  000EBE  D7FC               	bra	u4237
  1084  000EC0  2E5E               	decfsz	(??_main+1)^0,f,c
  1085  000EC2  D7FA               	bra	u4237
  1086  000EC4                     l4030:
  1087                           
  1088                           ;main.c: 93:         LATHbits.LATH3 = 1;
  1089  000EC4  8680               	bsf	128,3,c	;volatile
  1090  000EC6                     l374:
  1091  000EC6  B68E               	btfsc	142,3,c	;volatile
  1092  000EC8  EF68  F007         	goto	u3931
  1093  000ECC  EF6A  F007         	goto	u3930
  1094  000ED0                     u3931:
  1095  000ED0  EF63  F007         	goto	l374
  1096  000ED4                     u3930:
  1097  000ED4                     
  1098                           ;main.c: 95:         if (!PORTFbits.RF3){
  1099  000ED4  B68E               	btfsc	142,3,c	;volatile
  1100  000ED6  EF6F  F007         	goto	u3941
  1101  000EDA  EF71  F007         	goto	u3940
  1102  000EDE                     u3941:
  1103  000EDE  EF7B  F007         	goto	l4036
  1104  000EE2                     u3940:
  1105  000EE2                     
  1106                           ;main.c: 96:             LATHbits.LATH3 = 0;
  1107  000EE2  9680               	bcf	128,3,c	;volatile
  1108  000EE4                     
  1109                           ;main.c: 97:             TMR0H = 0;
  1110  000EE4  0E00               	movlw	0
  1111  000EE6  6ED4               	movwf	212,c	;volatile
  1112                           
  1113                           ;main.c: 98:             TMR0L = 0;
  1114  000EE8  0E00               	movlw	0
  1115  000EEA  6ED3               	movwf	211,c	;volatile
  1116                           
  1117                           ;main.c: 99:             cal = 1;
  1118  000EEC  0E00               	movlw	0
  1119  000EEE  0100               	movlb	0	; () banked
  1120  000EF0  6F83               	movwf	(main@cal+1)& (0+255),b
  1121  000EF2  0E01               	movlw	1
  1122  000EF4  6F82               	movwf	main@cal& (0+255),b
  1123  000EF6                     l4036:
  1124                           
  1125                           ;main.c: 76:     while(cal==0){
  1126  000EF6  0100               	movlb	0	; () banked
  1127  000EF8  5182               	movf	main@cal& (0+255),w,b
  1128  000EFA  1183               	iorwf	(main@cal+1)& (0+255),w,b
  1129  000EFC  B4D8               	btfsc	status,2,c
  1130  000EFE  EF83  F007         	goto	u3951
  1131  000F02  EF85  F007         	goto	u3950
  1132  000F06                     u3951:
  1133  000F06  EF20  F007         	goto	l365
  1134  000F0A                     u3950:
  1135  000F0A                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 104:     unsigned int check1 = 9; unsigned int check2 = 9;
  1138  000F0A  0E00               	movlw	0
  1139  000F0C  6F89               	movwf	(main@check1+1)& (0+255),b
  1140  000F0E  0E09               	movlw	9
  1141  000F10  6F88               	movwf	main@check1& (0+255),b
  1142  000F12  0E00               	movlw	0
  1143  000F14  6F8B               	movwf	(main@check2+1)& (0+255),b
  1144  000F16  0E09               	movlw	9
  1145  000F18  6F8A               	movwf	main@check2& (0+255),b
  1146                           
  1147                           ;main.c: 105:     unsigned int check3 = 9; unsigned int check4 = 9;
  1148  000F1A  0E00               	movlw	0
  1149  000F1C  6F8D               	movwf	(main@check3+1)& (0+255),b
  1150  000F1E  0E09               	movlw	9
  1151  000F20  6F8C               	movwf	main@check3& (0+255),b
  1152  000F22  0E00               	movlw	0
  1153  000F24  6F85               	movwf	(main@check4+1)& (0+255),b
  1154  000F26  0E09               	movlw	9
  1155  000F28  6F84               	movwf	main@check4& (0+255),b
  1156                           
  1157                           ;main.c: 106:     unsigned int count = 0;
  1158  000F2A  0E00               	movlw	0
  1159  000F2C  6F8F               	movwf	(main@count+1)& (0+255),b
  1160  000F2E  0E00               	movlw	0
  1161  000F30  6F8E               	movwf	main@count& (0+255),b
  1162                           
  1163                           ;main.c: 107:     unsigned int reset_timer = 1;
  1164  000F32  0E00               	movlw	0
  1165  000F34  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1166  000F36  0E01               	movlw	1
  1167  000F38  6F86               	movwf	main@reset_timer& (0+255),b
  1168  000F3A                     l4040:
  1169                           
  1170                           ;main.c: 111:         unsigned int detected_colour;;main.c: 112:         read_colours(&t
      +                          est);
  1171  000F3A  0E92               	movlw	low main@test
  1172  000F3C  6E0C               	movwf	read_colours@m^0,c
  1173  000F3E  0E00               	movlw	high main@test
  1174  000F40  6E0D               	movwf	(read_colours@m+1)^0,c
  1175  000F42  EC83  F019         	call	_read_colours	;wreg free
  1176  000F46                     
  1177                           ;main.c: 113:         if (count==0) {check1 = determine_color_new(&test);}
  1178  000F46  0100               	movlb	0	; () banked
  1179  000F48  518E               	movf	main@count& (0+255),w,b
  1180  000F4A  118F               	iorwf	(main@count+1)& (0+255),w,b
  1181  000F4C  A4D8               	btfss	status,2,c
  1182  000F4E  EFAB  F007         	goto	u3961
  1183  000F52  EFAD  F007         	goto	u3960
  1184  000F56                     u3961:
  1185  000F56  EFB7  F007         	goto	l4046
  1186  000F5A                     u3960:
  1187  000F5A                     
  1188                           ; BSR set to: 0
  1189  000F5A  0E92               	movlw	low main@test
  1190  000F5C  6E5B               	movwf	determine_color_new@m^0,c
  1191  000F5E  0E00               	movlw	high main@test
  1192  000F60  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1193  000F62  EC16  F000         	call	_determine_color_new	;wreg free
  1194  000F66  C05B  F088         	movff	?_determine_color_new,main@check1
  1195  000F6A  C05C  F089         	movff	?_determine_color_new+1,main@check1+1
  1196  000F6E                     l4046:
  1197                           
  1198                           ;main.c: 114:         if (count==1) {check2 = determine_color_new(&test);}
  1199  000F6E  0100               	movlb	0	; () banked
  1200  000F70  058E               	decf	main@count& (0+255),w,b
  1201  000F72  118F               	iorwf	(main@count+1)& (0+255),w,b
  1202  000F74  A4D8               	btfss	status,2,c
  1203  000F76  EFBF  F007         	goto	u3971
  1204  000F7A  EFC1  F007         	goto	u3970
  1205  000F7E                     u3971:
  1206  000F7E  EFCB  F007         	goto	l4050
  1207  000F82                     u3970:
  1208  000F82                     
  1209                           ; BSR set to: 0
  1210  000F82  0E92               	movlw	low main@test
  1211  000F84  6E5B               	movwf	determine_color_new@m^0,c
  1212  000F86  0E00               	movlw	high main@test
  1213  000F88  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1214  000F8A  EC16  F000         	call	_determine_color_new	;wreg free
  1215  000F8E  C05B  F08A         	movff	?_determine_color_new,main@check2
  1216  000F92  C05C  F08B         	movff	?_determine_color_new+1,main@check2+1
  1217  000F96                     l4050:
  1218                           
  1219                           ;main.c: 115:         if (count==2) {check3 = determine_color_new(&test);}
  1220  000F96  0E02               	movlw	2
  1221  000F98  0100               	movlb	0	; () banked
  1222  000F9A  198E               	xorwf	main@count& (0+255),w,b
  1223  000F9C  118F               	iorwf	(main@count+1)& (0+255),w,b
  1224  000F9E  A4D8               	btfss	status,2,c
  1225  000FA0  EFD4  F007         	goto	u3981
  1226  000FA4  EFD6  F007         	goto	u3980
  1227  000FA8                     u3981:
  1228  000FA8  EFE0  F007         	goto	l4054
  1229  000FAC                     u3980:
  1230  000FAC                     
  1231                           ; BSR set to: 0
  1232  000FAC  0E92               	movlw	low main@test
  1233  000FAE  6E5B               	movwf	determine_color_new@m^0,c
  1234  000FB0  0E00               	movlw	high main@test
  1235  000FB2  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1236  000FB4  EC16  F000         	call	_determine_color_new	;wreg free
  1237  000FB8  C05B  F08C         	movff	?_determine_color_new,main@check3
  1238  000FBC  C05C  F08D         	movff	?_determine_color_new+1,main@check3+1
  1239  000FC0                     l4054:
  1240                           
  1241                           ;main.c: 116:         if (count==3) {check4 = determine_color_new(&test);count=0;}
  1242  000FC0  0E03               	movlw	3
  1243  000FC2  0100               	movlb	0	; () banked
  1244  000FC4  198E               	xorwf	main@count& (0+255),w,b
  1245  000FC6  118F               	iorwf	(main@count+1)& (0+255),w,b
  1246  000FC8  A4D8               	btfss	status,2,c
  1247  000FCA  EFE9  F007         	goto	u3991
  1248  000FCE  EFEB  F007         	goto	u3990
  1249  000FD2                     u3991:
  1250  000FD2  EFFC  F007         	goto	l4060
  1251  000FD6                     u3990:
  1252  000FD6                     
  1253                           ; BSR set to: 0
  1254  000FD6  0E92               	movlw	low main@test
  1255  000FD8  6E5B               	movwf	determine_color_new@m^0,c
  1256  000FDA  0E00               	movlw	high main@test
  1257  000FDC  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1258  000FDE  EC16  F000         	call	_determine_color_new	;wreg free
  1259  000FE2  C05B  F084         	movff	?_determine_color_new,main@check4
  1260  000FE6  C05C  F085         	movff	?_determine_color_new+1,main@check4+1
  1261  000FEA  0E00               	movlw	0
  1262  000FEC  0100               	movlb	0	; () banked
  1263  000FEE  6F8F               	movwf	(main@count+1)& (0+255),b
  1264  000FF0  0E00               	movlw	0
  1265  000FF2  6F8E               	movwf	main@count& (0+255),b
  1266  000FF4  EFFE  F007         	goto	l4062
  1267  000FF8                     l4060:
  1268                           
  1269                           ; BSR set to: 0
  1270  000FF8  4B8E               	infsnz	main@count& (0+255),f,b
  1271  000FFA  2B8F               	incf	(main@count+1)& (0+255),f,b
  1272  000FFC                     l4062:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 120:         if (check1==check2 && check2==check3 && check3==check4){
  1276  000FFC  518A               	movf	main@check2& (0+255),w,b
  1277  000FFE  1988               	xorwf	main@check1& (0+255),w,b
  1278  001000  E107               	bnz	u4001
  1279  001002  518B               	movf	(main@check2+1)& (0+255),w,b
  1280  001004  1989               	xorwf	(main@check1+1)& (0+255),w,b
  1281  001006  A4D8               	btfss	status,2,c
  1282  001008  EF08  F008         	goto	u4001
  1283  00100C  EF0A  F008         	goto	u4000
  1284  001010                     u4001:
  1285  001010  EF77  F008         	goto	l4084
  1286  001014                     u4000:
  1287  001014                     
  1288                           ; BSR set to: 0
  1289  001014  518C               	movf	main@check3& (0+255),w,b
  1290  001016  198A               	xorwf	main@check2& (0+255),w,b
  1291  001018  E107               	bnz	u4011
  1292  00101A  518D               	movf	(main@check3+1)& (0+255),w,b
  1293  00101C  198B               	xorwf	(main@check2+1)& (0+255),w,b
  1294  00101E  A4D8               	btfss	status,2,c
  1295  001020  EF14  F008         	goto	u4011
  1296  001024  EF16  F008         	goto	u4010
  1297  001028                     u4011:
  1298  001028  EF77  F008         	goto	l4084
  1299  00102C                     u4010:
  1300  00102C                     
  1301                           ; BSR set to: 0
  1302  00102C  5184               	movf	main@check4& (0+255),w,b
  1303  00102E  198C               	xorwf	main@check3& (0+255),w,b
  1304  001030  E107               	bnz	u4021
  1305  001032  5185               	movf	(main@check4+1)& (0+255),w,b
  1306  001034  198D               	xorwf	(main@check3+1)& (0+255),w,b
  1307  001036  A4D8               	btfss	status,2,c
  1308  001038  EF20  F008         	goto	u4021
  1309  00103C  EF22  F008         	goto	u4020
  1310  001040                     u4021:
  1311  001040  EF77  F008         	goto	l4084
  1312  001044                     u4020:
  1313  001044                     
  1314                           ; BSR set to: 0
  1315                           ;main.c: 121:             detected_colour = check1;
  1316  001044  C088  F090         	movff	main@check1,main@detected_colour
  1317  001048  C089  F091         	movff	main@check1+1,main@detected_colour+1
  1318  00104C                     
  1319                           ; BSR set to: 0
  1320                           ;main.c: 122:             if (detected_colour >= 0 && detected_colour <= 6){
  1321  00104C  5191               	movf	(main@detected_colour+1)& (0+255),w,b
  1322  00104E  E107               	bnz	u4031
  1323  001050  0E07               	movlw	7
  1324  001052  5D90               	subwf	main@detected_colour& (0+255),w,b
  1325  001054  B0D8               	btfsc	status,0,c
  1326  001056  EF2F  F008         	goto	u4031
  1327  00105A  EF31  F008         	goto	u4030
  1328  00105E                     u4031:
  1329  00105E  EF4C  F008         	goto	l4078
  1330  001062                     u4030:
  1331  001062                     
  1332                           ; BSR set to: 0
  1333                           ;main.c: 123:                 updateMovementCount(detected_colour, movementArray, moveme
      +                          nts, timerArray);
  1334  001062  C090  F001         	movff	main@detected_colour,updateMovementCount@movementCode
  1335  001066  C091  F002         	movff	main@detected_colour+1,updateMovementCount@movementCode+1
  1336  00106A  0ED2               	movlw	low _movementArray
  1337  00106C  6E03               	movwf	updateMovementCount@movementArray^0,c
  1338  00106E  0E00               	movlw	high _movementArray
  1339  001070  6E04               	movwf	(updateMovementCount@movementArray+1)^0,c
  1340  001072  C0CC  F005         	movff	_movements,updateMovementCount@movements
  1341  001076  C0CD  F006         	movff	_movements+1,updateMovementCount@movements+1
  1342  00107A  0EE6               	movlw	low _timerArray
  1343  00107C  6E07               	movwf	updateMovementCount@timerArray^0,c
  1344  00107E  0E00               	movlw	high _timerArray
  1345  001080  6E08               	movwf	(updateMovementCount@timerArray+1)^0,c
  1346  001082  ECB4  F019         	call	_updateMovementCount	;wreg free
  1347  001086                     
  1348                           ;main.c: 124:                 movements++;
  1349  001086  0100               	movlb	0	; () banked
  1350  001088  4BCC               	infsnz	_movements& (0+255),f,b
  1351  00108A  2BCD               	incf	(_movements+1)& (0+255),f,b
  1352  00108C                     
  1353                           ; BSR set to: 0
  1354                           ;main.c: 125:                 reset_timer = 1;
  1355  00108C  0E00               	movlw	0
  1356  00108E  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1357  001090  0E01               	movlw	1
  1358  001092  6F86               	movwf	main@reset_timer& (0+255),b
  1359                           
  1360                           ;main.c: 126:             }
  1361  001094  EF67  F008         	goto	l387
  1362  001098                     l4078:
  1363                           
  1364                           ; BSR set to: 0
  1365  001098  0E09               	movlw	9
  1366  00109A  1990               	xorwf	main@detected_colour& (0+255),w,b
  1367  00109C  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1368  00109E  A4D8               	btfss	status,2,c
  1369  0010A0  EF54  F008         	goto	u4041
  1370  0010A4  EF56  F008         	goto	u4040
  1371  0010A8                     u4041:
  1372  0010A8  EF67  F008         	goto	l387
  1373  0010AC                     u4040:
  1374  0010AC                     
  1375                           ; BSR set to: 0
  1376  0010AC  0586               	decf	main@reset_timer& (0+255),w,b
  1377  0010AE  1187               	iorwf	(main@reset_timer+1)& (0+255),w,b
  1378  0010B0  A4D8               	btfss	status,2,c
  1379  0010B2  EF5D  F008         	goto	u4051
  1380  0010B6  EF5F  F008         	goto	u4050
  1381  0010BA                     u4051:
  1382  0010BA  EF67  F008         	goto	l387
  1383  0010BE                     u4050:
  1384  0010BE                     
  1385                           ; BSR set to: 0
  1386                           ;main.c: 128:                 TMR0H = 0;
  1387  0010BE  0E00               	movlw	0
  1388  0010C0  6ED4               	movwf	212,c	;volatile
  1389                           
  1390                           ;main.c: 129:                 TMR0L = 0;
  1391  0010C2  0E00               	movlw	0
  1392  0010C4  6ED3               	movwf	211,c	;volatile
  1393                           
  1394                           ;main.c: 130:                 reset_timer = 0;
  1395  0010C6  0E00               	movlw	0
  1396  0010C8  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1397  0010CA  0E00               	movlw	0
  1398  0010CC  6F86               	movwf	main@reset_timer& (0+255),b
  1399  0010CE                     l387:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;main.c: 132:             check1=9;check2=9;check3=9;check4=9;
  1403  0010CE  0E00               	movlw	0
  1404  0010D0  6F89               	movwf	(main@check1+1)& (0+255),b
  1405  0010D2  0E09               	movlw	9
  1406  0010D4  6F88               	movwf	main@check1& (0+255),b
  1407  0010D6  0E00               	movlw	0
  1408  0010D8  6F8B               	movwf	(main@check2+1)& (0+255),b
  1409  0010DA  0E09               	movlw	9
  1410  0010DC  6F8A               	movwf	main@check2& (0+255),b
  1411  0010DE  0E00               	movlw	0
  1412  0010E0  6F8D               	movwf	(main@check3+1)& (0+255),b
  1413  0010E2  0E09               	movlw	9
  1414  0010E4  6F8C               	movwf	main@check3& (0+255),b
  1415  0010E6  0E00               	movlw	0
  1416  0010E8  6F85               	movwf	(main@check4+1)& (0+255),b
  1417  0010EA  0E09               	movlw	9
  1418  0010EC  6F84               	movwf	main@check4& (0+255),b
  1419  0010EE                     l4084:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;main.c: 135:         if (detected_colour == 0){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1423  0010EE  5190               	movf	main@detected_colour& (0+255),w,b
  1424  0010F0  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1425  0010F2  A4D8               	btfss	status,2,c
  1426  0010F4  EF7E  F008         	goto	u4061
  1427  0010F8  EF80  F008         	goto	u4060
  1428  0010FC                     u4061:
  1429  0010FC  EF96  F008         	goto	l4090
  1430  001100                     u4060:
  1431  001100                     
  1432                           ; BSR set to: 0
  1433  001100  0EA6               	movlw	low main@motorL
  1434  001102  6E1D               	movwf	turnRight90@mL^0,c
  1435  001104  0E00               	movlw	high main@motorL
  1436  001106  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1437  001108  0EAF               	movlw	low main@motorR
  1438  00110A  6E1F               	movwf	turnRight90@mR^0,c
  1439  00110C  0E00               	movlw	high main@motorR
  1440  00110E  6E20               	movwf	(turnRight90@mR+1)^0,c
  1441  001110  ECF4  F014         	call	_turnRight90	;wreg free
  1442  001114  0E09               	movlw	9
  1443  001116  6E5E               	movwf	(??_main+1)^0,c
  1444  001118  0E1E               	movlw	30
  1445  00111A  6E5D               	movwf	??_main^0,c
  1446  00111C  0EE4               	movlw	228
  1447  00111E                     u4247:
  1448  00111E  2EE8               	decfsz	wreg,f,c
  1449  001120  D7FE               	bra	u4247
  1450  001122  2E5D               	decfsz	??_main^0,f,c
  1451  001124  D7FC               	bra	u4247
  1452  001126  2E5E               	decfsz	(??_main+1)^0,f,c
  1453  001128  D7FA               	bra	u4247
  1454  00112A  D000               	nop2	
  1455  00112C                     l4090:
  1456                           
  1457                           ;main.c: 136:         if (detected_colour == 1){ turnLeft90(&motorL,&motorR);_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  1458  00112C  0100               	movlb	0	; () banked
  1459  00112E  0590               	decf	main@detected_colour& (0+255),w,b
  1460  001130  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1461  001132  A4D8               	btfss	status,2,c
  1462  001134  EF9E  F008         	goto	u4071
  1463  001138  EFA0  F008         	goto	u4070
  1464  00113C                     u4071:
  1465  00113C  EFB6  F008         	goto	l4096
  1466  001140                     u4070:
  1467  001140                     
  1468                           ; BSR set to: 0
  1469  001140  0EA6               	movlw	low main@motorL
  1470  001142  6E1D               	movwf	turnLeft90@mL^0,c
  1471  001144  0E00               	movlw	high main@motorL
  1472  001146  6E1E               	movwf	(turnLeft90@mL+1)^0,c
  1473  001148  0EAF               	movlw	low main@motorR
  1474  00114A  6E1F               	movwf	turnLeft90@mR^0,c
  1475  00114C  0E00               	movlw	high main@motorR
  1476  00114E  6E20               	movwf	(turnLeft90@mR+1)^0,c
  1477  001150  ECB5  F013         	call	_turnLeft90	;wreg free
  1478  001154  0E09               	movlw	9
  1479  001156  6E5E               	movwf	(??_main+1)^0,c
  1480  001158  0E1E               	movlw	30
  1481  00115A  6E5D               	movwf	??_main^0,c
  1482  00115C  0EE4               	movlw	228
  1483  00115E                     u4257:
  1484  00115E  2EE8               	decfsz	wreg,f,c
  1485  001160  D7FE               	bra	u4257
  1486  001162  2E5D               	decfsz	??_main^0,f,c
  1487  001164  D7FC               	bra	u4257
  1488  001166  2E5E               	decfsz	(??_main+1)^0,f,c
  1489  001168  D7FA               	bra	u4257
  1490  00116A  D000               	nop2	
  1491  00116C                     l4096:
  1492                           
  1493                           ;main.c: 137:         if (detected_colour == 2){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1494  00116C  0E02               	movlw	2
  1495  00116E  0100               	movlb	0	; () banked
  1496  001170  1990               	xorwf	main@detected_colour& (0+255),w,b
  1497  001172  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1498  001174  A4D8               	btfss	status,2,c
  1499  001176  EFBF  F008         	goto	u4081
  1500  00117A  EFC1  F008         	goto	u4080
  1501  00117E                     u4081:
  1502  00117E  EFD7  F008         	goto	l4102
  1503  001182                     u4080:
  1504  001182                     
  1505                           ; BSR set to: 0
  1506  001182  0EA6               	movlw	low main@motorL
  1507  001184  6E1D               	movwf	turnRight180@mL^0,c
  1508  001186  0E00               	movlw	high main@motorL
  1509  001188  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1510  00118A  0EAF               	movlw	low main@motorR
  1511  00118C  6E1F               	movwf	turnRight180@mR^0,c
  1512  00118E  0E00               	movlw	high main@motorR
  1513  001190  6E20               	movwf	(turnRight180@mR+1)^0,c
  1514  001192  EC55  F014         	call	_turnRight180	;wreg free
  1515  001196  0E09               	movlw	9
  1516  001198  6E5E               	movwf	(??_main+1)^0,c
  1517  00119A  0E1E               	movlw	30
  1518  00119C  6E5D               	movwf	??_main^0,c
  1519  00119E  0EE4               	movlw	228
  1520  0011A0                     u4267:
  1521  0011A0  2EE8               	decfsz	wreg,f,c
  1522  0011A2  D7FE               	bra	u4267
  1523  0011A4  2E5D               	decfsz	??_main^0,f,c
  1524  0011A6  D7FC               	bra	u4267
  1525  0011A8  2E5E               	decfsz	(??_main+1)^0,f,c
  1526  0011AA  D7FA               	bra	u4267
  1527  0011AC  D000               	nop2	
  1528  0011AE                     l4102:
  1529                           
  1530                           ;main.c: 138:         if (detected_colour == 3){ reverseTurnRight90(&motorL,&motorR);_de
      +                          lay((unsigned long)((100)*(64000000/4000.0)));}
  1531  0011AE  0E03               	movlw	3
  1532  0011B0  0100               	movlb	0	; () banked
  1533  0011B2  1990               	xorwf	main@detected_colour& (0+255),w,b
  1534  0011B4  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1535  0011B6  A4D8               	btfss	status,2,c
  1536  0011B8  EFE0  F008         	goto	u4091
  1537  0011BC  EFE2  F008         	goto	u4090
  1538  0011C0                     u4091:
  1539  0011C0  EFF8  F008         	goto	l4108
  1540  0011C4                     u4090:
  1541  0011C4                     
  1542                           ; BSR set to: 0
  1543  0011C4  0EA6               	movlw	low main@motorL
  1544  0011C6  6E25               	movwf	reverseTurnRight90@mL^0,c
  1545  0011C8  0E00               	movlw	high main@motorL
  1546  0011CA  6E26               	movwf	(reverseTurnRight90@mL+1)^0,c
  1547  0011CC  0EAF               	movlw	low main@motorR
  1548  0011CE  6E27               	movwf	reverseTurnRight90@mR^0,c
  1549  0011D0  0E00               	movlw	high main@motorR
  1550  0011D2  6E28               	movwf	(reverseTurnRight90@mR+1)^0,c
  1551  0011D4  ECD4  F017         	call	_reverseTurnRight90	;wreg free
  1552  0011D8  0E09               	movlw	9
  1553  0011DA  6E5E               	movwf	(??_main+1)^0,c
  1554  0011DC  0E1E               	movlw	30
  1555  0011DE  6E5D               	movwf	??_main^0,c
  1556  0011E0  0EE4               	movlw	228
  1557  0011E2                     u4277:
  1558  0011E2  2EE8               	decfsz	wreg,f,c
  1559  0011E4  D7FE               	bra	u4277
  1560  0011E6  2E5D               	decfsz	??_main^0,f,c
  1561  0011E8  D7FC               	bra	u4277
  1562  0011EA  2E5E               	decfsz	(??_main+1)^0,f,c
  1563  0011EC  D7FA               	bra	u4277
  1564  0011EE  D000               	nop2	
  1565  0011F0                     l4108:
  1566                           
  1567                           ;main.c: 139:         if (detected_colour == 4){ reverseTurnLeft90(&motorL,&motorR);_del
      +                          ay((unsigned long)((100)*(64000000/4000.0)));}
  1568  0011F0  0E04               	movlw	4
  1569  0011F2  0100               	movlb	0	; () banked
  1570  0011F4  1990               	xorwf	main@detected_colour& (0+255),w,b
  1571  0011F6  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1572  0011F8  A4D8               	btfss	status,2,c
  1573  0011FA  EF01  F009         	goto	u4101
  1574  0011FE  EF03  F009         	goto	u4100
  1575  001202                     u4101:
  1576  001202  EF19  F009         	goto	l4114
  1577  001206                     u4100:
  1578  001206                     
  1579                           ; BSR set to: 0
  1580  001206  0EA6               	movlw	low main@motorL
  1581  001208  6E25               	movwf	reverseTurnLeft90@mL^0,c
  1582  00120A  0E00               	movlw	high main@motorL
  1583  00120C  6E26               	movwf	(reverseTurnLeft90@mL+1)^0,c
  1584  00120E  0EAF               	movlw	low main@motorR
  1585  001210  6E27               	movwf	reverseTurnLeft90@mR^0,c
  1586  001212  0E00               	movlw	high main@motorR
  1587  001214  6E28               	movwf	(reverseTurnLeft90@mR+1)^0,c
  1588  001216  EC4A  F018         	call	_reverseTurnLeft90	;wreg free
  1589  00121A  0E09               	movlw	9
  1590  00121C  6E5E               	movwf	(??_main+1)^0,c
  1591  00121E  0E1E               	movlw	30
  1592  001220  6E5D               	movwf	??_main^0,c
  1593  001222  0EE4               	movlw	228
  1594  001224                     u4287:
  1595  001224  2EE8               	decfsz	wreg,f,c
  1596  001226  D7FE               	bra	u4287
  1597  001228  2E5D               	decfsz	??_main^0,f,c
  1598  00122A  D7FC               	bra	u4287
  1599  00122C  2E5E               	decfsz	(??_main+1)^0,f,c
  1600  00122E  D7FA               	bra	u4287
  1601  001230  D000               	nop2	
  1602  001232                     l4114:
  1603                           
  1604                           ;main.c: 140:         if (detected_colour == 5){ turnRight135(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1605  001232  0E05               	movlw	5
  1606  001234  0100               	movlb	0	; () banked
  1607  001236  1990               	xorwf	main@detected_colour& (0+255),w,b
  1608  001238  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1609  00123A  A4D8               	btfss	status,2,c
  1610  00123C  EF22  F009         	goto	u4111
  1611  001240  EF24  F009         	goto	u4110
  1612  001244                     u4111:
  1613  001244  EF3A  F009         	goto	l4120
  1614  001248                     u4110:
  1615  001248                     
  1616                           ; BSR set to: 0
  1617  001248  0EA6               	movlw	low main@motorL
  1618  00124A  6E1D               	movwf	turnRight135@mL^0,c
  1619  00124C  0E00               	movlw	high main@motorL
  1620  00124E  6E1E               	movwf	(turnRight135@mL+1)^0,c
  1621  001250  0EAF               	movlw	low main@motorR
  1622  001252  6E1F               	movwf	turnRight135@mR^0,c
  1623  001254  0E00               	movlw	high main@motorR
  1624  001256  6E20               	movwf	(turnRight135@mR+1)^0,c
  1625  001258  EC93  F015         	call	_turnRight135	;wreg free
  1626  00125C  0E09               	movlw	9
  1627  00125E  6E5E               	movwf	(??_main+1)^0,c
  1628  001260  0E1E               	movlw	30
  1629  001262  6E5D               	movwf	??_main^0,c
  1630  001264  0EE4               	movlw	228
  1631  001266                     u4297:
  1632  001266  2EE8               	decfsz	wreg,f,c
  1633  001268  D7FE               	bra	u4297
  1634  00126A  2E5D               	decfsz	??_main^0,f,c
  1635  00126C  D7FC               	bra	u4297
  1636  00126E  2E5E               	decfsz	(??_main+1)^0,f,c
  1637  001270  D7FA               	bra	u4297
  1638  001272  D000               	nop2	
  1639  001274                     l4120:
  1640                           
  1641                           ;main.c: 141:         if (detected_colour == 6){ turnLeft135(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1642  001274  0E06               	movlw	6
  1643  001276  0100               	movlb	0	; () banked
  1644  001278  1990               	xorwf	main@detected_colour& (0+255),w,b
  1645  00127A  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1646  00127C  A4D8               	btfss	status,2,c
  1647  00127E  EF43  F009         	goto	u4121
  1648  001282  EF45  F009         	goto	u4120
  1649  001286                     u4121:
  1650  001286  EF5B  F009         	goto	l4126
  1651  00128A                     u4120:
  1652  00128A                     
  1653                           ; BSR set to: 0
  1654  00128A  0EA6               	movlw	low main@motorL
  1655  00128C  6E1D               	movwf	turnLeft135@mL^0,c
  1656  00128E  0E00               	movlw	high main@motorL
  1657  001290  6E1E               	movwf	(turnLeft135@mL+1)^0,c
  1658  001292  0EAF               	movlw	low main@motorR
  1659  001294  6E1F               	movwf	turnLeft135@mR^0,c
  1660  001296  0E00               	movlw	high main@motorR
  1661  001298  6E20               	movwf	(turnLeft135@mR+1)^0,c
  1662  00129A  EC31  F016         	call	_turnLeft135	;wreg free
  1663  00129E  0E09               	movlw	9
  1664  0012A0  6E5E               	movwf	(??_main+1)^0,c
  1665  0012A2  0E1E               	movlw	30
  1666  0012A4  6E5D               	movwf	??_main^0,c
  1667  0012A6  0EE4               	movlw	228
  1668  0012A8                     u4307:
  1669  0012A8  2EE8               	decfsz	wreg,f,c
  1670  0012AA  D7FE               	bra	u4307
  1671  0012AC  2E5D               	decfsz	??_main^0,f,c
  1672  0012AE  D7FC               	bra	u4307
  1673  0012B0  2E5E               	decfsz	(??_main+1)^0,f,c
  1674  0012B2  D7FA               	bra	u4307
  1675  0012B4  D000               	nop2	
  1676  0012B6                     l4126:
  1677                           
  1678                           ;main.c: 142:         if (detected_colour == 7){
  1679  0012B6  0E07               	movlw	7
  1680  0012B8  0100               	movlb	0	; () banked
  1681  0012BA  1990               	xorwf	main@detected_colour& (0+255),w,b
  1682  0012BC  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1683  0012BE  A4D8               	btfss	status,2,c
  1684  0012C0  EF64  F009         	goto	u4131
  1685  0012C4  EF66  F009         	goto	u4130
  1686  0012C8                     u4131:
  1687  0012C8  EF91  F009         	goto	l4136
  1688  0012CC                     u4130:
  1689  0012CC                     
  1690                           ; BSR set to: 0
  1691                           ;main.c: 143:             White(&motorL,&motorR,movementArray, movements, timerArray);
  1692  0012CC  0EA6               	movlw	low main@motorL
  1693  0012CE  6E2B               	movwf	White@mL^0,c
  1694  0012D0  0E00               	movlw	high main@motorL
  1695  0012D2  6E2C               	movwf	(White@mL+1)^0,c
  1696  0012D4  0EAF               	movlw	low main@motorR
  1697  0012D6  6E2D               	movwf	White@mR^0,c
  1698  0012D8  0E00               	movlw	high main@motorR
  1699  0012DA  6E2E               	movwf	(White@mR+1)^0,c
  1700  0012DC  0ED2               	movlw	low _movementArray
  1701  0012DE  6E2F               	movwf	White@movementArray^0,c
  1702  0012E0  0E00               	movlw	high _movementArray
  1703  0012E2  6E30               	movwf	(White@movementArray+1)^0,c
  1704  0012E4  C0CC  F031         	movff	_movements,White@movements
  1705  0012E8  C0CD  F032         	movff	_movements+1,White@movements+1
  1706  0012EC  0EE6               	movlw	low _timerArray
  1707  0012EE  6E33               	movwf	White@timerArray^0,c
  1708  0012F0  0E00               	movlw	high _timerArray
  1709  0012F2  6E34               	movwf	(White@timerArray+1)^0,c
  1710  0012F4  EC40  F00E         	call	_White	;wreg free
  1711  0012F8                     
  1712                           ;main.c: 144:             _delay((unsigned long)((100)*(64000000/4000.0)));LATDbits.LATD
      +                          7 = 1;LATHbits.LATH3 = 1;
  1713  0012F8  0E09               	movlw	9
  1714  0012FA  6E5E               	movwf	(??_main+1)^0,c
  1715  0012FC  0E1E               	movlw	30
  1716  0012FE  6E5D               	movwf	??_main^0,c
  1717  001300  0EE4               	movlw	228
  1718  001302                     u4317:
  1719  001302  2EE8               	decfsz	wreg,f,c
  1720  001304  D7FE               	bra	u4317
  1721  001306  2E5D               	decfsz	??_main^0,f,c
  1722  001308  D7FC               	bra	u4317
  1723  00130A  2E5E               	decfsz	(??_main+1)^0,f,c
  1724  00130C  D7FA               	bra	u4317
  1725  00130E  D000               	nop2	
  1726  001310  8E7C               	bsf	124,7,c	;volatile
  1727  001312  8680               	bsf	128,3,c	;volatile
  1728  001314                     l397:
  1729  001314  B68E               	btfsc	142,3,c	;volatile
  1730  001316  EF8F  F009         	goto	u4141
  1731  00131A  EF91  F009         	goto	u4140
  1732  00131E                     u4141:
  1733  00131E  EF8A  F009         	goto	l397
  1734  001322                     u4140:
  1735  001322                     l4136:
  1736                           
  1737                           ;main.c: 146:         if (detected_colour == 8){ stop(&motorL,&motorR);_delay((unsigned 
      +                          long)((100)*(64000000/4000.0)));}
  1738  001322  0E08               	movlw	8
  1739  001324  0100               	movlb	0	; () banked
  1740  001326  1990               	xorwf	main@detected_colour& (0+255),w,b
  1741  001328  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1742  00132A  A4D8               	btfss	status,2,c
  1743  00132C  EF9A  F009         	goto	u4151
  1744  001330  EF9C  F009         	goto	u4150
  1745  001334                     u4151:
  1746  001334  EFB2  F009         	goto	l4142
  1747  001338                     u4150:
  1748  001338                     
  1749                           ; BSR set to: 0
  1750  001338  0EA6               	movlw	low main@motorL
  1751  00133A  6E19               	movwf	stop@mL^0,c
  1752  00133C  0E00               	movlw	high main@motorL
  1753  00133E  6E1A               	movwf	(stop@mL+1)^0,c
  1754  001340  0EAF               	movlw	low main@motorR
  1755  001342  6E1B               	movwf	stop@mR^0,c
  1756  001344  0E00               	movlw	high main@motorR
  1757  001346  6E1C               	movwf	(stop@mR+1)^0,c
  1758  001348  ECBF  F018         	call	_stop	;wreg free
  1759  00134C  0E09               	movlw	9
  1760  00134E  6E5E               	movwf	(??_main+1)^0,c
  1761  001350  0E1E               	movlw	30
  1762  001352  6E5D               	movwf	??_main^0,c
  1763  001354  0EE4               	movlw	228
  1764  001356                     u4327:
  1765  001356  2EE8               	decfsz	wreg,f,c
  1766  001358  D7FE               	bra	u4327
  1767  00135A  2E5D               	decfsz	??_main^0,f,c
  1768  00135C  D7FC               	bra	u4327
  1769  00135E  2E5E               	decfsz	(??_main+1)^0,f,c
  1770  001360  D7FA               	bra	u4327
  1771  001362  D000               	nop2	
  1772  001364                     l4142:
  1773                           
  1774                           ;main.c: 147:         if (detected_colour == 9){ forward(&motorL,&motorR);}
  1775  001364  0E09               	movlw	9
  1776  001366  0100               	movlb	0	; () banked
  1777  001368  1990               	xorwf	main@detected_colour& (0+255),w,b
  1778  00136A  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1779  00136C  A4D8               	btfss	status,2,c
  1780  00136E  EFBB  F009         	goto	u4161
  1781  001372  EFBD  F009         	goto	u4160
  1782  001376                     u4161:
  1783  001376  EF9D  F007         	goto	l4040
  1784  00137A                     u4160:
  1785  00137A                     
  1786                           ; BSR set to: 0
  1787  00137A  0EA6               	movlw	low main@motorL
  1788  00137C  6E19               	movwf	forward@mL^0,c
  1789  00137E  0E00               	movlw	high main@motorL
  1790  001380  6E1A               	movwf	(forward@mL+1)^0,c
  1791  001382  0EAF               	movlw	low main@motorR
  1792  001384  6E1B               	movwf	forward@mR^0,c
  1793  001386  0E00               	movlw	high main@motorR
  1794  001388  6E1C               	movwf	(forward@mR+1)^0,c
  1795  00138A  EC06  F01A         	call	_forward	;wreg free
  1796  00138E  EF9D  F007         	goto	l4040
  1797  001392  EF14  F000         	goto	start
  1798  001396                     __end_of_main:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _updateMovementCount *****************
  1802 ;; Defined at:
  1803 ;;		line 203 in file "color.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  movementCode    2    0[COMRAM] unsigned int 
  1806 ;;  movementArra    2    2[COMRAM] PTR unsigned int 
  1807 ;;		 -> movementArray(20), 
  1808 ;;  movements       2    4[COMRAM] unsigned int 
  1809 ;;  timerArray      2    6[COMRAM] PTR unsigned int 
  1810 ;;		 -> timerArray(20), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  tempTimerVal    2   10[COMRAM] unsigned int 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1822 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;Total ram usage:       12 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text1
  1837  003368                     __ptext1:
  1838                           	callstack 0
  1839  003368                     _updateMovementCount:
  1840                           	callstack 29
  1841  003368                     
  1842                           ;color.c: 203: void updateMovementCount(unsigned int movementCode,unsigned int movementA
      +                          rray[], unsigned int movements,unsigned int timerArray[]);color.c: 204: {;color.c: 205: 
      +                              unsigned int tempTimerVal = TMR0L;
  1843  003368  CFD3 F00B          	movff	4051,updateMovementCount@tempTimerVal	;volatile
  1844  00336C  6A0C               	clrf	(updateMovementCount@tempTimerVal+1)^0,c
  1845  00336E                     
  1846                           ;color.c: 206:     tempTimerVal |= (TMR0H << 8);
  1847  00336E  50D4               	movf	212,w,c	;volatile
  1848  003370  6E0A               	movwf	(??_updateMovementCount+1)^0,c
  1849  003372  6A09               	clrf	??_updateMovementCount^0,c
  1850  003374  5009               	movf	??_updateMovementCount^0,w,c
  1851  003376  120B               	iorwf	updateMovementCount@tempTimerVal^0,f,c
  1852  003378  500A               	movf	(??_updateMovementCount+1)^0,w,c
  1853  00337A  120C               	iorwf	(updateMovementCount@tempTimerVal+1)^0,f,c
  1854  00337C                     
  1855                           ;color.c: 207:     timerArray[movements] = tempTimerVal;
  1856  00337C  90D8               	bcf	status,0,c
  1857  00337E  3405               	rlcf	updateMovementCount@movements^0,w,c
  1858  003380  6ED9               	movwf	fsr2l,c
  1859  003382  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1860  003384  6EDA               	movwf	fsr2h,c
  1861  003386  5007               	movf	updateMovementCount@timerArray^0,w,c
  1862  003388  26D9               	addwf	fsr2l,f,c
  1863  00338A  5008               	movf	(updateMovementCount@timerArray+1)^0,w,c
  1864  00338C  22DA               	addwfc	fsr2h,f,c
  1865  00338E  C00B  FFDE         	movff	updateMovementCount@tempTimerVal,postinc2
  1866  003392  C00C  FFDD         	movff	updateMovementCount@tempTimerVal+1,postdec2
  1867  003396                     
  1868                           ;color.c: 208:     movementArray[movements] = movementCode;
  1869  003396  90D8               	bcf	status,0,c
  1870  003398  3405               	rlcf	updateMovementCount@movements^0,w,c
  1871  00339A  6ED9               	movwf	fsr2l,c
  1872  00339C  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1873  00339E  6EDA               	movwf	fsr2h,c
  1874  0033A0  5003               	movf	updateMovementCount@movementArray^0,w,c
  1875  0033A2  26D9               	addwf	fsr2l,f,c
  1876  0033A4  5004               	movf	(updateMovementCount@movementArray+1)^0,w,c
  1877  0033A6  22DA               	addwfc	fsr2h,f,c
  1878  0033A8  C001  FFDE         	movff	updateMovementCount@movementCode,postinc2
  1879  0033AC  C002  FFDD         	movff	updateMovementCount@movementCode+1,postdec2
  1880  0033B0                     
  1881                           ;color.c: 209:     TMR0H = 0;
  1882  0033B0  0E00               	movlw	0
  1883  0033B2  6ED4               	movwf	212,c	;volatile
  1884  0033B4                     
  1885                           ;color.c: 210:     TMR0L = 0;
  1886  0033B4  0E00               	movlw	0
  1887  0033B6  6ED3               	movwf	211,c	;volatile
  1888  0033B8  0012               	return		;funcret
  1889  0033BA                     __end_of_updateMovementCount:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _read_colours *****************
  1893 ;; Defined at:
  1894 ;;		line 88 in file "color.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  m               2   11[COMRAM] PTR struct RGB_val
  1897 ;;		 -> main@test(20), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 4
  1916 ;; This function calls:
  1917 ;;		_color_read_Blue
  1918 ;;		_color_read_Clear
  1919 ;;		_color_read_Green
  1920 ;;		_color_read_Red
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text2
  1927  003306                     __ptext2:
  1928                           	callstack 0
  1929  003306                     _read_colours:
  1930                           	callstack 26
  1931  003306                     
  1932                           ;color.c: 89:     (m->C) = color_read_Clear();
  1933  003306  EC2F  F01A         	call	_color_read_Clear	;wreg free
  1934  00330A  EE20 F00C          	lfsr	2,12
  1935  00330E  500C               	movf	read_colours@m^0,w,c
  1936  003310  26D9               	addwf	fsr2l,f,c
  1937  003312  500D               	movf	(read_colours@m+1)^0,w,c
  1938  003314  22DA               	addwfc	fsr2h,f,c
  1939  003316  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1940  00331A  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1941                           
  1942                           ;color.c: 90:     (m->R) = color_read_Red();
  1943  00331E  EC57  F01A         	call	_color_read_Red	;wreg free
  1944  003322  EE20 F00E          	lfsr	2,14
  1945  003326  500C               	movf	read_colours@m^0,w,c
  1946  003328  26D9               	addwf	fsr2l,f,c
  1947  00332A  500D               	movf	(read_colours@m+1)^0,w,c
  1948  00332C  22DA               	addwfc	fsr2h,f,c
  1949  00332E  C005  FFDE         	movff	?_color_read_Red,postinc2
  1950  003332  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1951                           
  1952                           ;color.c: 91:     (m->G) = color_read_Green();
  1953  003336  EC7F  F01A         	call	_color_read_Green	;wreg free
  1954  00333A  EE20 F010          	lfsr	2,16
  1955  00333E  500C               	movf	read_colours@m^0,w,c
  1956  003340  26D9               	addwf	fsr2l,f,c
  1957  003342  500D               	movf	(read_colours@m+1)^0,w,c
  1958  003344  22DA               	addwfc	fsr2h,f,c
  1959  003346  C005  FFDE         	movff	?_color_read_Green,postinc2
  1960  00334A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1961                           
  1962                           ;color.c: 92:     (m->B) = color_read_Blue();
  1963  00334E  ECA7  F01A         	call	_color_read_Blue	;wreg free
  1964  003352  EE20 F012          	lfsr	2,18
  1965  003356  500C               	movf	read_colours@m^0,w,c
  1966  003358  26D9               	addwf	fsr2l,f,c
  1967  00335A  500D               	movf	(read_colours@m+1)^0,w,c
  1968  00335C  22DA               	addwfc	fsr2h,f,c
  1969  00335E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1970  003362  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1971  003366  0012               	return		;funcret
  1972  003368                     __end_of_read_colours:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _color_read_Clear *****************
  1976 ;; Defined at:
  1977 ;;		line 34 in file "color.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  tmp             2    9[COMRAM] unsigned int 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    4[COMRAM] unsigned int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;Total ram usage:        7 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 3
  1998 ;; This function calls:
  1999 ;;		_I2C_2_Master_Read
  2000 ;;		_I2C_2_Master_RepStart
  2001 ;;		_I2C_2_Master_Start
  2002 ;;		_I2C_2_Master_Stop
  2003 ;;		_I2C_2_Master_Write
  2004 ;; This function is called by:
  2005 ;;		_read_colours
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text3
  2010  00345E                     __ptext3:
  2011                           	callstack 0
  2012  00345E                     _color_read_Clear:
  2013                           	callstack 26
  2014  00345E                     
  2015                           ;color.c: 36:  unsigned int tmp;;color.c: 37:     I2C_2_Master_Start();
  2016  00345E  ECFF  F01B         	call	_I2C_2_Master_Start	;wreg free
  2017                           
  2018                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x00);
  2019  003462  0E52               	movlw	82
  2020  003464  ECEE  F01B         	call	_I2C_2_Master_Write
  2021                           
  2022                           ;color.c: 39:  I2C_2_Master_Write(0xA0 | 0x14);
  2023  003468  0EB4               	movlw	180
  2024  00346A  ECEE  F01B         	call	_I2C_2_Master_Write
  2025                           
  2026                           ;color.c: 40:  I2C_2_Master_RepStart();
  2027  00346E  EC04  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  2028                           
  2029                           ;color.c: 41:  I2C_2_Master_Write(0x52 | 0x01);
  2030  003472  0E53               	movlw	83
  2031  003474  ECEE  F01B         	call	_I2C_2_Master_Write
  2032                           
  2033                           ;color.c: 42:  tmp=I2C_2_Master_Read(1);
  2034  003478  0E01               	movlw	1
  2035  00347A  EC38  F01B         	call	_I2C_2_Master_Read
  2036  00347E  6E07               	movwf	??_color_read_Clear^0,c
  2037  003480  5007               	movf	??_color_read_Clear^0,w,c
  2038  003482  6E0A               	movwf	color_read_Clear@tmp^0,c
  2039  003484  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2040                           
  2041                           ;color.c: 43:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2042  003486  0E00               	movlw	0
  2043  003488  EC38  F01B         	call	_I2C_2_Master_Read
  2044  00348C  6E07               	movwf	??_color_read_Clear^0,c
  2045  00348E  5007               	movf	??_color_read_Clear^0,w,c
  2046  003490  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2047  003492  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2048  003494  500A               	movf	color_read_Clear@tmp^0,w,c
  2049  003496  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2050  003498  6E0A               	movwf	color_read_Clear@tmp^0,c
  2051  00349A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2052  00349C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2053  00349E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2054                           
  2055                           ;color.c: 44:     I2C_2_Master_Stop();
  2056  0034A0  ECFA  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2057  0034A4                     
  2058                           ;color.c: 45:     return tmp;
  2059  0034A4  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2060  0034A8  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2061  0034AC  0012               	return		;funcret
  2062  0034AE                     __end_of_color_read_Clear:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function _initUSART4 *****************
  2066 ;; Defined at:
  2067 ;;		line 4 in file "serial.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text4
  2096  003780                     __ptext4:
  2097                           	callstack 0
  2098  003780                     _initUSART4:
  2099                           	callstack 29
  2100  003780                     
  2101                           ;serial.c: 8:     RC0PPS = 0x12;
  2102  003780  0E12               	movlw	18
  2103  003782  010E               	movlb	14	; () banked
  2104  003784  6F62               	movwf	98,b	;volatile
  2105                           
  2106                           ;serial.c: 9:     RX4PPS = 0x11;
  2107  003786  0E11               	movlw	17
  2108  003788  6F15               	movwf	21,b	;volatile
  2109  00378A                     
  2110                           ; BSR set to: 14
  2111                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  2112  00378A  8283               	bsf	131,1,c	;volatile
  2113  00378C                     
  2114                           ; BSR set to: 14
  2115                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2116  00378C  97E9               	bcf	233,3,b	;volatile
  2117  00378E                     
  2118                           ; BSR set to: 14
  2119                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2120  00378E  95E8               	bcf	232,2,b	;volatile
  2121                           
  2122                           ;serial.c: 14:     SP4BRGL = 51;
  2123  003790  0E33               	movlw	51
  2124  003792  6FE5               	movwf	229,b	;volatile
  2125                           
  2126                           ;serial.c: 15:     SP4BRGH = 0;
  2127  003794  0E00               	movlw	0
  2128  003796  6FE6               	movwf	230,b	;volatile
  2129  003798                     
  2130                           ; BSR set to: 14
  2131                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2132  003798  89E7               	bsf	231,4,b	;volatile
  2133  00379A                     
  2134                           ; BSR set to: 14
  2135                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2136  00379A  8BE8               	bsf	232,5,b	;volatile
  2137  00379C                     
  2138                           ; BSR set to: 14
  2139                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2140  00379C  8FE7               	bsf	231,7,b	;volatile
  2141  00379E                     
  2142                           ; BSR set to: 14
  2143  00379E  0012               	return		;funcret
  2144  0037A0                     __end_of_initUSART4:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _initDCmotorsPWM *****************
  2148 ;; Defined at:
  2149 ;;		line 5 in file "dc_motor.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  PWMperiod       2    0[COMRAM] int 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;Total ram usage:        2 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text5
  2178  00362E                     __ptext5:
  2179                           	callstack 0
  2180  00362E                     _initDCmotorsPWM:
  2181                           	callstack 29
  2182  00362E                     
  2183                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  2184  00362E  9485               	bcf	133,2,c	;volatile
  2185                           
  2186                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  2187  003630  9E83               	bcf	131,7,c	;volatile
  2188                           
  2189                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  2190  003632  9885               	bcf	133,4,c	;volatile
  2191                           
  2192                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  2193  003634  9C87               	bcf	135,6,c	;volatile
  2194                           
  2195                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  2196  003636  947D               	bcf	125,2,c	;volatile
  2197                           
  2198                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  2199  003638  9E7B               	bcf	123,7,c	;volatile
  2200                           
  2201                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  2202  00363A  987D               	bcf	125,4,c	;volatile
  2203                           
  2204                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
  2205  00363C  9C7F               	bcf	127,6,c	;volatile
  2206  00363E                     
  2207                           ;dc_motor.c: 17:     T2CONbits.CKPS= 0b100;
  2208  00363E  50BD               	movf	189,w,c	;volatile
  2209  003640  0B8F               	andlw	-113
  2210  003642  0940               	iorlw	64
  2211  003644  6EBD               	movwf	189,c	;volatile
  2212                           
  2213                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2214  003646  0EE0               	movlw	-32
  2215  003648  16BE               	andwf	190,f,c	;volatile
  2216                           
  2217                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2218  00364A  50BF               	movf	191,w,c	;volatile
  2219  00364C  0BF0               	andlw	-16
  2220  00364E  0901               	iorlw	1
  2221  003650  6EBF               	movwf	191,c	;volatile
  2222                           
  2223                           ;dc_motor.c: 22:     T2PR= 99;
  2224  003652  0E63               	movlw	99
  2225  003654  6EBC               	movwf	188,c	;volatile
  2226  003656                     
  2227                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  2228  003656  8EBD               	bsf	189,7,c	;volatile
  2229                           
  2230                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  2231  003658  0E0A               	movlw	10
  2232  00365A  010E               	movlb	14	; () banked
  2233  00365C  6F74               	movwf	116,b	;volatile
  2234                           
  2235                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  2236  00365E  0E0B               	movlw	11
  2237  003660  6F69               	movwf	105,b	;volatile
  2238                           
  2239                           ;dc_motor.c: 28:     PWM6DCH=0;
  2240  003662  0E00               	movlw	0
  2241  003664  6EA3               	movwf	163,c	;volatile
  2242                           
  2243                           ;dc_motor.c: 29:     PWM7DCH=0;
  2244  003666  0E00               	movlw	0
  2245  003668  6EA0               	movwf	160,c	;volatile
  2246  00366A                     
  2247                           ; BSR set to: 14
  2248                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  2249  00366A  8EA4               	bsf	164,7,c	;volatile
  2250  00366C                     
  2251                           ; BSR set to: 14
  2252                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  2253  00366C  8EA1               	bsf	161,7,c	;volatile
  2254  00366E                     
  2255                           ; BSR set to: 14
  2256  00366E  0012               	return		;funcret
  2257  003670                     __end_of_initDCmotorsPWM:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _determine_color_new *****************
  2261 ;; Defined at:
  2262 ;;		line 112 in file "color.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  m               2   90[COMRAM] PTR struct RGB_val
  2265 ;;		 -> main@test(20), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  RelB            4   30[BANK0 ] float 
  2268 ;;  RelG            4   26[BANK0 ] float 
  2269 ;;  RelR            4   22[BANK0 ] float 
  2270 ;;  lumin           2   20[BANK0 ] unsigned int 
  2271 ;;  out             2   18[BANK0 ] unsigned int 
  2272 ;;  BlueRatio       2   16[BANK0 ] unsigned int 
  2273 ;;  GreenRatio      2   14[BANK0 ] unsigned int 
  2274 ;;  RedRatio        2   12[BANK0 ] unsigned int 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2   90[COMRAM] unsigned int 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;Total ram usage:       36 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 3
  2291 ;; This function calls:
  2292 ;;		___fladd
  2293 ;;		___fldiv
  2294 ;;		___flmul
  2295 ;;		___fltol
  2296 ;;		___xxtofl
  2297 ;;		_isbtw
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text6
  2304  00002C                     __ptext6:
  2305                           	callstack 0
  2306  00002C                     _determine_color_new:
  2307                           	callstack 27
  2308  00002C                     
  2309                           ;color.c: 113:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 114:     float
      +                           RelR, RelG, RelB;;color.c: 115:     unsigned int out = 9;
  2310  00002C  0E00               	movlw	0
  2311  00002E  0100               	movlb	0	; () banked
  2312  000030  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2313  000032  0E09               	movlw	9
  2314  000034  6F72               	movwf	determine_color_new@out& (0+255),b
  2315  000036                     
  2316                           ; BSR set to: 0
  2317                           ;color.c: 119:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2318  000036  0E59               	movlw	89
  2319  000038  6E2C               	movwf	___flmul@a^0,c
  2320  00003A  0E17               	movlw	23
  2321  00003C  6E2D               	movwf	(___flmul@a+1)^0,c
  2322  00003E  0E37               	movlw	55
  2323  000040  6E2E               	movwf	(___flmul@a+2)^0,c
  2324  000042  0E3F               	movlw	63
  2325  000044  6E2F               	movwf	(___flmul@a+3)^0,c
  2326  000046  EE20 F010          	lfsr	2,16
  2327  00004A  505B               	movf	determine_color_new@m^0,w,c
  2328  00004C  26D9               	addwf	fsr2l,f,c
  2329  00004E  505C               	movf	(determine_color_new@m+1)^0,w,c
  2330  000050  22DA               	addwfc	fsr2h,f,c
  2331  000052  CFDE F060          	movff	postinc2,??_determine_color_new
  2332  000056  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2333  00005A  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2334  00005E  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2335  000062  6A03               	clrf	(___xxtofl@val+2)^0,c
  2336  000064  6A04               	clrf	(___xxtofl@val+3)^0,c
  2337  000066  0E00               	movlw	0
  2338  000068  ECDB  F012         	call	___xxtofl
  2339  00006C  C001  F028         	movff	?___xxtofl,___flmul@b
  2340  000070  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2341  000074  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2342  000078  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2343  00007C  EC2B  F00C         	call	___flmul	;wreg free
  2344  000080  C028  F045         	movff	?___flmul,___fladd@a
  2345  000084  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2346  000088  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2347  00008C  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2348  000090  0ED0               	movlw	208
  2349  000092  6E2C               	movwf	___flmul@a^0,c
  2350  000094  0EB3               	movlw	179
  2351  000096  6E2D               	movwf	(___flmul@a+1)^0,c
  2352  000098  0E59               	movlw	89
  2353  00009A  6E2E               	movwf	(___flmul@a+2)^0,c
  2354  00009C  0E3E               	movlw	62
  2355  00009E  6E2F               	movwf	(___flmul@a+3)^0,c
  2356  0000A0  EE20 F00E          	lfsr	2,14
  2357  0000A4  505B               	movf	determine_color_new@m^0,w,c
  2358  0000A6  26D9               	addwf	fsr2l,f,c
  2359  0000A8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2360  0000AA  22DA               	addwfc	fsr2h,f,c
  2361  0000AC  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2362  0000B0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2363  0000B4  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2364  0000B8  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2365  0000BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2366  0000BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2367  0000C0  0E00               	movlw	0
  2368  0000C2  ECDB  F012         	call	___xxtofl
  2369  0000C6  C001  F028         	movff	?___xxtofl,___flmul@b
  2370  0000CA  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2371  0000CE  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2372  0000D2  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2373  0000D6  EC2B  F00C         	call	___flmul	;wreg free
  2374  0000DA  C028  F041         	movff	?___flmul,___fladd@b
  2375  0000DE  C029  F042         	movff	?___flmul+1,___fladd@b+1
  2376  0000E2  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  2377  0000E6  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  2378  0000EA  ECCB  F009         	call	___fladd	;wreg free
  2379  0000EE  C041  F068         	movff	?___fladd,_determine_color_new$2628
  2380  0000F2  C042  F069         	movff	?___fladd+1,_determine_color_new$2628+1
  2381  0000F6  C043  F06A         	movff	?___fladd+2,_determine_color_new$2628+2
  2382  0000FA  C044  F06B         	movff	?___fladd+3,_determine_color_new$2628+3
  2383  0000FE                     
  2384                           ;color.c: 119:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2385  0000FE  0E98               	movlw	152
  2386  000100  6E2C               	movwf	___flmul@a^0,c
  2387  000102  0EDD               	movlw	221
  2388  000104  6E2D               	movwf	(___flmul@a+1)^0,c
  2389  000106  0E93               	movlw	147
  2390  000108  6E2E               	movwf	(___flmul@a+2)^0,c
  2391  00010A  0E3D               	movlw	61
  2392  00010C  6E2F               	movwf	(___flmul@a+3)^0,c
  2393  00010E  EE20 F012          	lfsr	2,18
  2394  000112  505B               	movf	determine_color_new@m^0,w,c
  2395  000114  26D9               	addwf	fsr2l,f,c
  2396  000116  505C               	movf	(determine_color_new@m+1)^0,w,c
  2397  000118  22DA               	addwfc	fsr2h,f,c
  2398  00011A  CFDE F060          	movff	postinc2,??_determine_color_new
  2399  00011E  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2400  000122  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2401  000126  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2402  00012A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2403  00012C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2404  00012E  0E00               	movlw	0
  2405  000130  ECDB  F012         	call	___xxtofl
  2406  000134  C001  F028         	movff	?___xxtofl,___flmul@b
  2407  000138  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2408  00013C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2409  000140  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2410  000144  EC2B  F00C         	call	___flmul	;wreg free
  2411  000148  C028  F045         	movff	?___flmul,___fladd@a
  2412  00014C  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2413  000150  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2414  000154  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2415  000158  C068  F041         	movff	_determine_color_new$2628,___fladd@b
  2416  00015C  C069  F042         	movff	_determine_color_new$2628+1,___fladd@b+1
  2417  000160  C06A  F043         	movff	_determine_color_new$2628+2,___fladd@b+2
  2418  000164  C06B  F044         	movff	_determine_color_new$2628+3,___fladd@b+3
  2419  000168  ECCB  F009         	call	___fladd	;wreg free
  2420  00016C  C041  F051         	movff	?___fladd,___fltol@f1
  2421  000170  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2422  000174  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2423  000178  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2424  00017C  ECCF  F016         	call	___fltol	;wreg free
  2425  000180  C051  F074         	movff	?___fltol,determine_color_new@lumin
  2426  000184  C052  F075         	movff	?___fltol+1,determine_color_new@lumin+1
  2427  000188                     
  2428                           ;color.c: 122:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  2429  000188  0E00               	movlw	0
  2430  00018A  6E2C               	movwf	___flmul@a^0,c
  2431  00018C  0E40               	movlw	64
  2432  00018E  6E2D               	movwf	(___flmul@a+1)^0,c
  2433  000190  0E1C               	movlw	28
  2434  000192  6E2E               	movwf	(___flmul@a+2)^0,c
  2435  000194  0E46               	movlw	70
  2436  000196  6E2F               	movwf	(___flmul@a+3)^0,c
  2437  000198  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2438  00019C  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2439  0001A0  CFDE F060          	movff	postinc2,??_determine_color_new
  2440  0001A4  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2441  0001A8  EE20 F006          	lfsr	2,6
  2442  0001AC  505B               	movf	determine_color_new@m^0,w,c
  2443  0001AE  26D9               	addwf	fsr2l,f,c
  2444  0001B0  505C               	movf	(determine_color_new@m+1)^0,w,c
  2445  0001B2  22DA               	addwfc	fsr2h,f,c
  2446  0001B4  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2447  0001B8  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2448  0001BC  0100               	movlb	0	; () banked
  2449  0001BE  5160               	movf	??_determine_color_new& (0+255),w,b
  2450  0001C0  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2451  0001C2  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2452  0001C4  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2453  0001C6  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2454  0001CA  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2455  0001CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2456  0001D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2457  0001D2  0E00               	movlw	0
  2458  0001D4  ECDB  F012         	call	___xxtofl
  2459  0001D8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2460  0001DC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2461  0001E0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2462  0001E4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2463  0001E8  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2464  0001EC  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2465  0001F0  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2466  0001F4  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2467  0001F8  EE20 F00E          	lfsr	2,14
  2468  0001FC  505B               	movf	determine_color_new@m^0,w,c
  2469  0001FE  26D9               	addwf	fsr2l,f,c
  2470  000200  505C               	movf	(determine_color_new@m+1)^0,w,c
  2471  000202  22DA               	addwfc	fsr2h,f,c
  2472  000204  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2473  000208  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2474  00020C  0100               	movlb	0	; () banked
  2475  00020E  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2476  000210  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2477  000212  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2478  000214  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2479  000216  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2480  00021A  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2481  00021E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2482  000220  6A04               	clrf	(___xxtofl@val+3)^0,c
  2483  000222  0E00               	movlw	0
  2484  000224  ECDB  F012         	call	___xxtofl
  2485  000228  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2486  00022C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2487  000230  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2488  000234  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2489  000238  EC24  F010         	call	___fldiv	;wreg free
  2490  00023C  C00F  F028         	movff	?___fldiv,___flmul@b
  2491  000240  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2492  000244  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2493  000248  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2494  00024C  EC2B  F00C         	call	___flmul	;wreg free
  2495  000250  C028  F051         	movff	?___flmul,___fltol@f1
  2496  000254  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2497  000258  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2498  00025C  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2499  000260  ECCF  F016         	call	___fltol	;wreg free
  2500  000264  C051  F06C         	movff	?___fltol,determine_color_new@RedRatio
  2501  000268  C052  F06D         	movff	?___fltol+1,determine_color_new@RedRatio+1
  2502  00026C                     
  2503                           ;color.c: 123:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  2504  00026C  0E00               	movlw	0
  2505  00026E  6E2C               	movwf	___flmul@a^0,c
  2506  000270  0E40               	movlw	64
  2507  000272  6E2D               	movwf	(___flmul@a+1)^0,c
  2508  000274  0E1C               	movlw	28
  2509  000276  6E2E               	movwf	(___flmul@a+2)^0,c
  2510  000278  0E46               	movlw	70
  2511  00027A  6E2F               	movwf	(___flmul@a+3)^0,c
  2512  00027C  EE20 F002          	lfsr	2,2
  2513  000280  505B               	movf	determine_color_new@m^0,w,c
  2514  000282  26D9               	addwf	fsr2l,f,c
  2515  000284  505C               	movf	(determine_color_new@m+1)^0,w,c
  2516  000286  22DA               	addwfc	fsr2h,f,c
  2517  000288  CFDE F060          	movff	postinc2,??_determine_color_new
  2518  00028C  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2519  000290  EE20 F008          	lfsr	2,8
  2520  000294  505B               	movf	determine_color_new@m^0,w,c
  2521  000296  26D9               	addwf	fsr2l,f,c
  2522  000298  505C               	movf	(determine_color_new@m+1)^0,w,c
  2523  00029A  22DA               	addwfc	fsr2h,f,c
  2524  00029C  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2525  0002A0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2526  0002A4  0100               	movlb	0	; () banked
  2527  0002A6  5160               	movf	??_determine_color_new& (0+255),w,b
  2528  0002A8  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2529  0002AA  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2530  0002AC  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2531  0002AE  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2532  0002B2  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2533  0002B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2534  0002B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2535  0002BA  0E00               	movlw	0
  2536  0002BC  ECDB  F012         	call	___xxtofl
  2537  0002C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2538  0002C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2539  0002C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2540  0002CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2541  0002D0  EE20 F002          	lfsr	2,2
  2542  0002D4  505B               	movf	determine_color_new@m^0,w,c
  2543  0002D6  26D9               	addwf	fsr2l,f,c
  2544  0002D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2545  0002DA  22DA               	addwfc	fsr2h,f,c
  2546  0002DC  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2547  0002E0  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2548  0002E4  EE20 F010          	lfsr	2,16
  2549  0002E8  505B               	movf	determine_color_new@m^0,w,c
  2550  0002EA  26D9               	addwf	fsr2l,f,c
  2551  0002EC  505C               	movf	(determine_color_new@m+1)^0,w,c
  2552  0002EE  22DA               	addwfc	fsr2h,f,c
  2553  0002F0  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2554  0002F4  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2555  0002F8  0100               	movlb	0	; () banked
  2556  0002FA  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2557  0002FC  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2558  0002FE  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2559  000300  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2560  000302  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2561  000306  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2562  00030A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2563  00030C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2564  00030E  0E00               	movlw	0
  2565  000310  ECDB  F012         	call	___xxtofl
  2566  000314  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2567  000318  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2568  00031C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2569  000320  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2570  000324  EC24  F010         	call	___fldiv	;wreg free
  2571  000328  C00F  F028         	movff	?___fldiv,___flmul@b
  2572  00032C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2573  000330  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2574  000334  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2575  000338  EC2B  F00C         	call	___flmul	;wreg free
  2576  00033C  C028  F051         	movff	?___flmul,___fltol@f1
  2577  000340  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2578  000344  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2579  000348  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2580  00034C  ECCF  F016         	call	___fltol	;wreg free
  2581  000350  C051  F06E         	movff	?___fltol,determine_color_new@GreenRatio
  2582  000354  C052  F06F         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  2583  000358                     
  2584                           ;color.c: 124:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  2585  000358  0E00               	movlw	0
  2586  00035A  6E2C               	movwf	___flmul@a^0,c
  2587  00035C  0E40               	movlw	64
  2588  00035E  6E2D               	movwf	(___flmul@a+1)^0,c
  2589  000360  0E1C               	movlw	28
  2590  000362  6E2E               	movwf	(___flmul@a+2)^0,c
  2591  000364  0E46               	movlw	70
  2592  000366  6E2F               	movwf	(___flmul@a+3)^0,c
  2593  000368  EE20 F004          	lfsr	2,4
  2594  00036C  505B               	movf	determine_color_new@m^0,w,c
  2595  00036E  26D9               	addwf	fsr2l,f,c
  2596  000370  505C               	movf	(determine_color_new@m+1)^0,w,c
  2597  000372  22DA               	addwfc	fsr2h,f,c
  2598  000374  CFDE F060          	movff	postinc2,??_determine_color_new
  2599  000378  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2600  00037C  EE20 F00A          	lfsr	2,10
  2601  000380  505B               	movf	determine_color_new@m^0,w,c
  2602  000382  26D9               	addwf	fsr2l,f,c
  2603  000384  505C               	movf	(determine_color_new@m+1)^0,w,c
  2604  000386  22DA               	addwfc	fsr2h,f,c
  2605  000388  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2606  00038C  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2607  000390  0100               	movlb	0	; () banked
  2608  000392  5160               	movf	??_determine_color_new& (0+255),w,b
  2609  000394  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2610  000396  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2611  000398  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2612  00039A  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2613  00039E  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2614  0003A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2615  0003A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2616  0003A6  0E00               	movlw	0
  2617  0003A8  ECDB  F012         	call	___xxtofl
  2618  0003AC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2619  0003B0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2620  0003B4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2621  0003B8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2622  0003BC  EE20 F004          	lfsr	2,4
  2623  0003C0  505B               	movf	determine_color_new@m^0,w,c
  2624  0003C2  26D9               	addwf	fsr2l,f,c
  2625  0003C4  505C               	movf	(determine_color_new@m+1)^0,w,c
  2626  0003C6  22DA               	addwfc	fsr2h,f,c
  2627  0003C8  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2628  0003CC  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2629  0003D0  EE20 F012          	lfsr	2,18
  2630  0003D4  505B               	movf	determine_color_new@m^0,w,c
  2631  0003D6  26D9               	addwf	fsr2l,f,c
  2632  0003D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2633  0003DA  22DA               	addwfc	fsr2h,f,c
  2634  0003DC  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2635  0003E0  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2636  0003E4  0100               	movlb	0	; () banked
  2637  0003E6  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2638  0003E8  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2639  0003EA  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2640  0003EC  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2641  0003EE  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2642  0003F2  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2643  0003F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2644  0003F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2645  0003FA  0E00               	movlw	0
  2646  0003FC  ECDB  F012         	call	___xxtofl
  2647  000400  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2648  000404  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2649  000408  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2650  00040C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2651  000410  EC24  F010         	call	___fldiv	;wreg free
  2652  000414  C00F  F028         	movff	?___fldiv,___flmul@b
  2653  000418  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2654  00041C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2655  000420  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2656  000424  EC2B  F00C         	call	___flmul	;wreg free
  2657  000428  C028  F051         	movff	?___flmul,___fltol@f1
  2658  00042C  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2659  000430  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2660  000434  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2661  000438  ECCF  F016         	call	___fltol	;wreg free
  2662  00043C  C051  F070         	movff	?___fltol,determine_color_new@BlueRatio
  2663  000440  C052  F071         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  2664  000444                     
  2665                           ;color.c: 127:     RelR = (float)RedRatio / (float)GreenRatio;
  2666  000444  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  2667  000448  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  2668  00044C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2669  00044E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2670  000450  0E00               	movlw	0
  2671  000452  ECDB  F012         	call	___xxtofl
  2672  000456  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2673  00045A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2674  00045E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2675  000462  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2676  000466  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  2677  00046A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  2678  00046E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2679  000470  6A04               	clrf	(___xxtofl@val+3)^0,c
  2680  000472  0E00               	movlw	0
  2681  000474  ECDB  F012         	call	___xxtofl
  2682  000478  C001  F013         	movff	?___xxtofl,___fldiv@a
  2683  00047C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2684  000480  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2685  000484  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2686  000488  EC24  F010         	call	___fldiv	;wreg free
  2687  00048C  C00F  F076         	movff	?___fldiv,determine_color_new@RelR
  2688  000490  C010  F077         	movff	?___fldiv+1,determine_color_new@RelR+1
  2689  000494  C011  F078         	movff	?___fldiv+2,determine_color_new@RelR+2
  2690  000498  C012  F079         	movff	?___fldiv+3,determine_color_new@RelR+3
  2691  00049C                     
  2692                           ;color.c: 128:     RelG = (float)RedRatio / (float)BlueRatio;
  2693  00049C  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  2694  0004A0  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  2695  0004A4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2696  0004A6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2697  0004A8  0E00               	movlw	0
  2698  0004AA  ECDB  F012         	call	___xxtofl
  2699  0004AE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2700  0004B2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2701  0004B6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2702  0004BA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2703  0004BE  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  2704  0004C2  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  2705  0004C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2706  0004C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2707  0004CA  0E00               	movlw	0
  2708  0004CC  ECDB  F012         	call	___xxtofl
  2709  0004D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2710  0004D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2711  0004D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2712  0004DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2713  0004E0  EC24  F010         	call	___fldiv	;wreg free
  2714  0004E4  C00F  F07A         	movff	?___fldiv,determine_color_new@RelG
  2715  0004E8  C010  F07B         	movff	?___fldiv+1,determine_color_new@RelG+1
  2716  0004EC  C011  F07C         	movff	?___fldiv+2,determine_color_new@RelG+2
  2717  0004F0  C012  F07D         	movff	?___fldiv+3,determine_color_new@RelG+3
  2718  0004F4                     
  2719                           ;color.c: 129:     RelB = (float)BlueRatio / (float)GreenRatio;
  2720  0004F4  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  2721  0004F8  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  2722  0004FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2723  0004FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2724  000500  0E00               	movlw	0
  2725  000502  ECDB  F012         	call	___xxtofl
  2726  000506  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2727  00050A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2728  00050E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2729  000512  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2730  000516  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  2731  00051A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  2732  00051E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2733  000520  6A04               	clrf	(___xxtofl@val+3)^0,c
  2734  000522  0E00               	movlw	0
  2735  000524  ECDB  F012         	call	___xxtofl
  2736  000528  C001  F013         	movff	?___xxtofl,___fldiv@a
  2737  00052C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2738  000530  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2739  000534  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2740  000538  EC24  F010         	call	___fldiv	;wreg free
  2741  00053C  C00F  F07E         	movff	?___fldiv,determine_color_new@RelB
  2742  000540  C010  F07F         	movff	?___fldiv+1,determine_color_new@RelB+1
  2743  000544  C011  F080         	movff	?___fldiv+2,determine_color_new@RelB+2
  2744  000548  C012  F081         	movff	?___fldiv+3,determine_color_new@RelB+3
  2745  00054C                     
  2746                           ;color.c: 132:     if (RelR < 0) {RelR = 0;}
  2747  00054C  0100               	movlb	0	; () banked
  2748  00054E  BF79               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  2749  000550  EFAE  F002         	goto	u3380
  2750  000554  EFAC  F002         	goto	u3381
  2751  000558                     u3381:
  2752  000558  EFB6  F002         	goto	l3732
  2753  00055C                     u3380:
  2754  00055C                     
  2755                           ; BSR set to: 0
  2756  00055C  0E00               	movlw	0
  2757  00055E  6F76               	movwf	determine_color_new@RelR& (0+255),b
  2758  000560  0E00               	movlw	0
  2759  000562  6F77               	movwf	(determine_color_new@RelR+1)& (0+255),b
  2760  000564  0E00               	movlw	0
  2761  000566  6F78               	movwf	(determine_color_new@RelR+2)& (0+255),b
  2762  000568  0E00               	movlw	0
  2763  00056A  6F79               	movwf	(determine_color_new@RelR+3)& (0+255),b
  2764  00056C                     l3732:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;color.c: 133:     if (RelG < 0) {RelG = 0;}
  2768  00056C  BF7D               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  2769  00056E  EFBD  F002         	goto	u3390
  2770  000572  EFBB  F002         	goto	u3391
  2771  000576                     u3391:
  2772  000576  EFC5  F002         	goto	l3736
  2773  00057A                     u3390:
  2774  00057A                     
  2775                           ; BSR set to: 0
  2776  00057A  0E00               	movlw	0
  2777  00057C  6F7A               	movwf	determine_color_new@RelG& (0+255),b
  2778  00057E  0E00               	movlw	0
  2779  000580  6F7B               	movwf	(determine_color_new@RelG+1)& (0+255),b
  2780  000582  0E00               	movlw	0
  2781  000584  6F7C               	movwf	(determine_color_new@RelG+2)& (0+255),b
  2782  000586  0E00               	movlw	0
  2783  000588  6F7D               	movwf	(determine_color_new@RelG+3)& (0+255),b
  2784  00058A                     l3736:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;color.c: 134:     if (RelB < 0) {RelB = 0;}
  2788  00058A  BF81               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  2789  00058C  EFCC  F002         	goto	u3400
  2790  000590  EFCA  F002         	goto	u3401
  2791  000594                     u3401:
  2792  000594  EFD4  F002         	goto	l3740
  2793  000598                     u3400:
  2794  000598                     
  2795                           ; BSR set to: 0
  2796  000598  0E00               	movlw	0
  2797  00059A  6F7E               	movwf	determine_color_new@RelB& (0+255),b
  2798  00059C  0E00               	movlw	0
  2799  00059E  6F7F               	movwf	(determine_color_new@RelB+1)& (0+255),b
  2800  0005A0  0E00               	movlw	0
  2801  0005A2  6F80               	movwf	(determine_color_new@RelB+2)& (0+255),b
  2802  0005A4  0E00               	movlw	0
  2803  0005A6  6F81               	movwf	(determine_color_new@RelB+3)& (0+255),b
  2804  0005A8                     l3740:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;color.c: 139:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1 && lumin>800)
  2808  0005A8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2809  0005AC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2810  0005B0  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  2811  0005B4  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  2812  0005B8  0E33               	movlw	51
  2813  0005BA  6E11               	movwf	isbtw@low^0,c
  2814  0005BC  0E33               	movlw	51
  2815  0005BE  6E12               	movwf	(isbtw@low+1)^0,c
  2816  0005C0  0EA3               	movlw	163
  2817  0005C2  6E13               	movwf	(isbtw@low+2)^0,c
  2818  0005C4  0E40               	movlw	64
  2819  0005C6  6E14               	movwf	(isbtw@low+3)^0,c
  2820  0005C8  0E00               	movlw	0
  2821  0005CA  6E15               	movwf	isbtw@high^0,c
  2822  0005CC  0E00               	movlw	0
  2823  0005CE  6E16               	movwf	(isbtw@high+1)^0,c
  2824  0005D0  0EA4               	movlw	164
  2825  0005D2  6E17               	movwf	(isbtw@high+2)^0,c
  2826  0005D4  0E41               	movlw	65
  2827  0005D6  6E18               	movwf	(isbtw@high+3)^0,c
  2828  0005D8  EC0C  F019         	call	_isbtw	;wreg free
  2829  0005DC  040D               	decf	?_isbtw^0,w,c
  2830  0005DE  100E               	iorwf	(?_isbtw+1)^0,w,c
  2831  0005E0  A4D8               	btfss	status,2,c
  2832  0005E2  EFF5  F002         	goto	u3411
  2833  0005E6  EFF7  F002         	goto	u3410
  2834  0005EA                     u3411:
  2835  0005EA  EF4D  F003         	goto	l3750
  2836  0005EE                     u3410:
  2837  0005EE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  2838  0005F2  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  2839  0005F6  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  2840  0005FA  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  2841  0005FE  0ECD               	movlw	205
  2842  000600  6E11               	movwf	isbtw@low^0,c
  2843  000602  0ECC               	movlw	204
  2844  000604  6E12               	movwf	(isbtw@low+1)^0,c
  2845  000606  0E0C               	movlw	12
  2846  000608  6E13               	movwf	(isbtw@low+2)^0,c
  2847  00060A  0E40               	movlw	64
  2848  00060C  6E14               	movwf	(isbtw@low+3)^0,c
  2849  00060E  0E33               	movlw	51
  2850  000610  6E15               	movwf	isbtw@high^0,c
  2851  000612  0E33               	movlw	51
  2852  000614  6E16               	movwf	(isbtw@high+1)^0,c
  2853  000616  0E73               	movlw	115
  2854  000618  6E17               	movwf	(isbtw@high+2)^0,c
  2855  00061A  0E40               	movlw	64
  2856  00061C  6E18               	movwf	(isbtw@high+3)^0,c
  2857  00061E  EC0C  F019         	call	_isbtw	;wreg free
  2858  000622  040D               	decf	?_isbtw^0,w,c
  2859  000624  100E               	iorwf	(?_isbtw+1)^0,w,c
  2860  000626  A4D8               	btfss	status,2,c
  2861  000628  EF18  F003         	goto	u3421
  2862  00062C  EF1A  F003         	goto	u3420
  2863  000630                     u3421:
  2864  000630  EF4D  F003         	goto	l3750
  2865  000634                     u3420:
  2866  000634  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  2867  000638  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  2868  00063C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  2869  000640  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  2870  000644  0E66               	movlw	102
  2871  000646  6E11               	movwf	isbtw@low^0,c
  2872  000648  0E66               	movlw	102
  2873  00064A  6E12               	movwf	(isbtw@low+1)^0,c
  2874  00064C  0EE6               	movlw	230
  2875  00064E  6E13               	movwf	(isbtw@low+2)^0,c
  2876  000650  0E3F               	movlw	63
  2877  000652  6E14               	movwf	(isbtw@low+3)^0,c
  2878  000654  0E00               	movlw	0
  2879  000656  6E15               	movwf	isbtw@high^0,c
  2880  000658  0E00               	movlw	0
  2881  00065A  6E16               	movwf	(isbtw@high+1)^0,c
  2882  00065C  0EB0               	movlw	176
  2883  00065E  6E17               	movwf	(isbtw@high+2)^0,c
  2884  000660  0E40               	movlw	64
  2885  000662  6E18               	movwf	(isbtw@high+3)^0,c
  2886  000664  EC0C  F019         	call	_isbtw	;wreg free
  2887  000668  040D               	decf	?_isbtw^0,w,c
  2888  00066A  100E               	iorwf	(?_isbtw+1)^0,w,c
  2889  00066C  A4D8               	btfss	status,2,c
  2890  00066E  EF3B  F003         	goto	u3431
  2891  000672  EF3D  F003         	goto	u3430
  2892  000676                     u3431:
  2893  000676  EF4D  F003         	goto	l3750
  2894  00067A                     u3430:
  2895  00067A  0E21               	movlw	33
  2896  00067C  0100               	movlb	0	; () banked
  2897  00067E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  2898  000680  0E03               	movlw	3
  2899  000682  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  2900  000684  A0D8               	btfss	status,0,c
  2901  000686  EF47  F003         	goto	u3441
  2902  00068A  EF49  F003         	goto	u3440
  2903  00068E                     u3441:
  2904  00068E  EF4D  F003         	goto	l3750
  2905  000692                     u3440:
  2906  000692                     
  2907                           ; BSR set to: 0
  2908                           ;color.c: 140:     {out = 0;}
  2909  000692  0E00               	movlw	0
  2910  000694  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2911  000696  0E00               	movlw	0
  2912  000698  6F72               	movwf	determine_color_new@out& (0+255),b
  2913  00069A                     l3750:
  2914                           
  2915                           ;color.c: 143:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1 && lumin>835)
  2916  00069A  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2917  00069E  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2918  0006A2  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  2919  0006A6  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  2920  0006AA  0ECD               	movlw	205
  2921  0006AC  6E11               	movwf	isbtw@low^0,c
  2922  0006AE  0ECC               	movlw	204
  2923  0006B0  6E12               	movwf	(isbtw@low+1)^0,c
  2924  0006B2  0E4C               	movlw	76
  2925  0006B4  6E13               	movwf	(isbtw@low+2)^0,c
  2926  0006B6  0E3E               	movlw	62
  2927  0006B8  6E14               	movwf	(isbtw@low+3)^0,c
  2928  0006BA  0E48               	movlw	72
  2929  0006BC  6E15               	movwf	isbtw@high^0,c
  2930  0006BE  0EE1               	movlw	225
  2931  0006C0  6E16               	movwf	(isbtw@high+1)^0,c
  2932  0006C2  0EFA               	movlw	250
  2933  0006C4  6E17               	movwf	(isbtw@high+2)^0,c
  2934  0006C6  0E3E               	movlw	62
  2935  0006C8  6E18               	movwf	(isbtw@high+3)^0,c
  2936  0006CA  EC0C  F019         	call	_isbtw	;wreg free
  2937  0006CE  040D               	decf	?_isbtw^0,w,c
  2938  0006D0  100E               	iorwf	(?_isbtw+1)^0,w,c
  2939  0006D2  A4D8               	btfss	status,2,c
  2940  0006D4  EF6E  F003         	goto	u3451
  2941  0006D8  EF70  F003         	goto	u3450
  2942  0006DC                     u3451:
  2943  0006DC  EFC6  F003         	goto	l3760
  2944  0006E0                     u3450:
  2945  0006E0  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  2946  0006E4  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  2947  0006E8  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  2948  0006EC  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  2949  0006F0  0E29               	movlw	41
  2950  0006F2  6E11               	movwf	isbtw@low^0,c
  2951  0006F4  0E5C               	movlw	92
  2952  0006F6  6E12               	movwf	(isbtw@low+1)^0,c
  2953  0006F8  0E8F               	movlw	143
  2954  0006FA  6E13               	movwf	(isbtw@low+2)^0,c
  2955  0006FC  0E3E               	movlw	62
  2956  0006FE  6E14               	movwf	(isbtw@low+3)^0,c
  2957  000700  0E3D               	movlw	61
  2958  000702  6E15               	movwf	isbtw@high^0,c
  2959  000704  0E0A               	movlw	10
  2960  000706  6E16               	movwf	(isbtw@high+1)^0,c
  2961  000708  0E17               	movlw	23
  2962  00070A  6E17               	movwf	(isbtw@high+2)^0,c
  2963  00070C  0E3F               	movlw	63
  2964  00070E  6E18               	movwf	(isbtw@high+3)^0,c
  2965  000710  EC0C  F019         	call	_isbtw	;wreg free
  2966  000714  040D               	decf	?_isbtw^0,w,c
  2967  000716  100E               	iorwf	(?_isbtw+1)^0,w,c
  2968  000718  A4D8               	btfss	status,2,c
  2969  00071A  EF91  F003         	goto	u3461
  2970  00071E  EF93  F003         	goto	u3460
  2971  000722                     u3461:
  2972  000722  EFC6  F003         	goto	l3760
  2973  000726                     u3460:
  2974  000726  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  2975  00072A  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  2976  00072E  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  2977  000732  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  2978  000736  0E33               	movlw	51
  2979  000738  6E11               	movwf	isbtw@low^0,c
  2980  00073A  0E33               	movlw	51
  2981  00073C  6E12               	movwf	(isbtw@low+1)^0,c
  2982  00073E  0E33               	movlw	51
  2983  000740  6E13               	movwf	(isbtw@low+2)^0,c
  2984  000742  0E3F               	movlw	63
  2985  000744  6E14               	movwf	(isbtw@low+3)^0,c
  2986  000746  0E66               	movlw	102
  2987  000748  6E15               	movwf	isbtw@high^0,c
  2988  00074A  0E66               	movlw	102
  2989  00074C  6E16               	movwf	(isbtw@high+1)^0,c
  2990  00074E  0E66               	movlw	102
  2991  000750  6E17               	movwf	(isbtw@high+2)^0,c
  2992  000752  0E3F               	movlw	63
  2993  000754  6E18               	movwf	(isbtw@high+3)^0,c
  2994  000756  EC0C  F019         	call	_isbtw	;wreg free
  2995  00075A  040D               	decf	?_isbtw^0,w,c
  2996  00075C  100E               	iorwf	(?_isbtw+1)^0,w,c
  2997  00075E  A4D8               	btfss	status,2,c
  2998  000760  EFB4  F003         	goto	u3471
  2999  000764  EFB6  F003         	goto	u3470
  3000  000768                     u3471:
  3001  000768  EFC6  F003         	goto	l3760
  3002  00076C                     u3470:
  3003  00076C  0E44               	movlw	68
  3004  00076E  0100               	movlb	0	; () banked
  3005  000770  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3006  000772  0E03               	movlw	3
  3007  000774  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3008  000776  A0D8               	btfss	status,0,c
  3009  000778  EFC0  F003         	goto	u3481
  3010  00077C  EFC2  F003         	goto	u3480
  3011  000780                     u3481:
  3012  000780  EFC6  F003         	goto	l3760
  3013  000784                     u3480:
  3014  000784                     
  3015                           ; BSR set to: 0
  3016                           ;color.c: 144:     {out = 1;}
  3017  000784  0E00               	movlw	0
  3018  000786  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3019  000788  0E01               	movlw	1
  3020  00078A  6F72               	movwf	determine_color_new@out& (0+255),b
  3021  00078C                     l3760:
  3022                           
  3023                           ;color.c: 147:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1 && lumin>800)
  3024  00078C  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3025  000790  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3026  000794  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3027  000798  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3028  00079C  0ECD               	movlw	205
  3029  00079E  6E11               	movwf	isbtw@low^0,c
  3030  0007A0  0ECC               	movlw	204
  3031  0007A2  6E12               	movwf	(isbtw@low+1)^0,c
  3032  0007A4  0ECC               	movlw	204
  3033  0007A6  6E13               	movwf	(isbtw@low+2)^0,c
  3034  0007A8  0E3D               	movlw	61
  3035  0007AA  6E14               	movwf	(isbtw@low+3)^0,c
  3036  0007AC  0ECD               	movlw	205
  3037  0007AE  6E15               	movwf	isbtw@high^0,c
  3038  0007B0  0ECC               	movlw	204
  3039  0007B2  6E16               	movwf	(isbtw@high+1)^0,c
  3040  0007B4  0E0C               	movlw	12
  3041  0007B6  6E17               	movwf	(isbtw@high+2)^0,c
  3042  0007B8  0E3F               	movlw	63
  3043  0007BA  6E18               	movwf	(isbtw@high+3)^0,c
  3044  0007BC  EC0C  F019         	call	_isbtw	;wreg free
  3045  0007C0  040D               	decf	?_isbtw^0,w,c
  3046  0007C2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3047  0007C4  A4D8               	btfss	status,2,c
  3048  0007C6  EFE7  F003         	goto	u3491
  3049  0007CA  EFE9  F003         	goto	u3490
  3050  0007CE                     u3491:
  3051  0007CE  EF3F  F004         	goto	l3770
  3052  0007D2                     u3490:
  3053  0007D2  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3054  0007D6  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3055  0007DA  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3056  0007DE  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3057  0007E2  0ECD               	movlw	205
  3058  0007E4  6E11               	movwf	isbtw@low^0,c
  3059  0007E6  0ECC               	movlw	204
  3060  0007E8  6E12               	movwf	(isbtw@low+1)^0,c
  3061  0007EA  0ECC               	movlw	204
  3062  0007EC  6E13               	movwf	(isbtw@low+2)^0,c
  3063  0007EE  0E3D               	movlw	61
  3064  0007F0  6E14               	movwf	(isbtw@low+3)^0,c
  3065  0007F2  0E14               	movlw	20
  3066  0007F4  6E15               	movwf	isbtw@high^0,c
  3067  0007F6  0EAE               	movlw	174
  3068  0007F8  6E16               	movwf	(isbtw@high+1)^0,c
  3069  0007FA  0EC7               	movlw	199
  3070  0007FC  6E17               	movwf	(isbtw@high+2)^0,c
  3071  0007FE  0E3E               	movlw	62
  3072  000800  6E18               	movwf	(isbtw@high+3)^0,c
  3073  000802  EC0C  F019         	call	_isbtw	;wreg free
  3074  000806  040D               	decf	?_isbtw^0,w,c
  3075  000808  100E               	iorwf	(?_isbtw+1)^0,w,c
  3076  00080A  A4D8               	btfss	status,2,c
  3077  00080C  EF0A  F004         	goto	u3501
  3078  000810  EF0C  F004         	goto	u3500
  3079  000814                     u3501:
  3080  000814  EF3F  F004         	goto	l3770
  3081  000818                     u3500:
  3082  000818  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3083  00081C  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3084  000820  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3085  000824  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3086  000828  0E00               	movlw	0
  3087  00082A  6E11               	movwf	isbtw@low^0,c
  3088  00082C  0E00               	movlw	0
  3089  00082E  6E12               	movwf	(isbtw@low+1)^0,c
  3090  000830  0E80               	movlw	128
  3091  000832  6E13               	movwf	(isbtw@low+2)^0,c
  3092  000834  0E3F               	movlw	63
  3093  000836  6E14               	movwf	(isbtw@low+3)^0,c
  3094  000838  0E9A               	movlw	154
  3095  00083A  6E15               	movwf	isbtw@high^0,c
  3096  00083C  0E99               	movlw	153
  3097  00083E  6E16               	movwf	(isbtw@high+1)^0,c
  3098  000840  0E99               	movlw	153
  3099  000842  6E17               	movwf	(isbtw@high+2)^0,c
  3100  000844  0E3F               	movlw	63
  3101  000846  6E18               	movwf	(isbtw@high+3)^0,c
  3102  000848  EC0C  F019         	call	_isbtw	;wreg free
  3103  00084C  040D               	decf	?_isbtw^0,w,c
  3104  00084E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3105  000850  A4D8               	btfss	status,2,c
  3106  000852  EF2D  F004         	goto	u3511
  3107  000856  EF2F  F004         	goto	u3510
  3108  00085A                     u3511:
  3109  00085A  EF3F  F004         	goto	l3770
  3110  00085E                     u3510:
  3111  00085E  0E21               	movlw	33
  3112  000860  0100               	movlb	0	; () banked
  3113  000862  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3114  000864  0E03               	movlw	3
  3115  000866  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3116  000868  A0D8               	btfss	status,0,c
  3117  00086A  EF39  F004         	goto	u3521
  3118  00086E  EF3B  F004         	goto	u3520
  3119  000872                     u3521:
  3120  000872  EF3F  F004         	goto	l3770
  3121  000876                     u3520:
  3122  000876                     
  3123                           ; BSR set to: 0
  3124                           ;color.c: 148:     {out = 2;}
  3125  000876  0E00               	movlw	0
  3126  000878  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3127  00087A  0E02               	movlw	2
  3128  00087C  6F72               	movwf	determine_color_new@out& (0+255),b
  3129  00087E                     l3770:
  3130                           
  3131                           ;color.c: 151:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1 && lumin>850)
  3132  00087E  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3133  000882  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3134  000886  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3135  00088A  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3136  00088E  0E9A               	movlw	154
  3137  000890  6E11               	movwf	isbtw@low^0,c
  3138  000892  0E99               	movlw	153
  3139  000894  6E12               	movwf	(isbtw@low+1)^0,c
  3140  000896  0E99               	movlw	153
  3141  000898  6E13               	movwf	(isbtw@low+2)^0,c
  3142  00089A  0E3F               	movlw	63
  3143  00089C  6E14               	movwf	(isbtw@low+3)^0,c
  3144  00089E  0E33               	movlw	51
  3145  0008A0  6E15               	movwf	isbtw@high^0,c
  3146  0008A2  0E33               	movlw	51
  3147  0008A4  6E16               	movwf	(isbtw@high+1)^0,c
  3148  0008A6  0EB3               	movlw	179
  3149  0008A8  6E17               	movwf	(isbtw@high+2)^0,c
  3150  0008AA  0E3F               	movlw	63
  3151  0008AC  6E18               	movwf	(isbtw@high+3)^0,c
  3152  0008AE  EC0C  F019         	call	_isbtw	;wreg free
  3153  0008B2  040D               	decf	?_isbtw^0,w,c
  3154  0008B4  100E               	iorwf	(?_isbtw+1)^0,w,c
  3155  0008B6  A4D8               	btfss	status,2,c
  3156  0008B8  EF60  F004         	goto	u3531
  3157  0008BC  EF62  F004         	goto	u3530
  3158  0008C0                     u3531:
  3159  0008C0  EFB8  F004         	goto	l3780
  3160  0008C4                     u3530:
  3161  0008C4  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3162  0008C8  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3163  0008CC  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3164  0008D0  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3165  0008D4  0E00               	movlw	0
  3166  0008D6  6E11               	movwf	isbtw@low^0,c
  3167  0008D8  0E00               	movlw	0
  3168  0008DA  6E12               	movwf	(isbtw@low+1)^0,c
  3169  0008DC  0EC0               	movlw	192
  3170  0008DE  6E13               	movwf	(isbtw@low+2)^0,c
  3171  0008E0  0E3F               	movlw	63
  3172  0008E2  6E14               	movwf	(isbtw@low+3)^0,c
  3173  0008E4  0EEC               	movlw	236
  3174  0008E6  6E15               	movwf	isbtw@high^0,c
  3175  0008E8  0E51               	movlw	81
  3176  0008EA  6E16               	movwf	(isbtw@high+1)^0,c
  3177  0008EC  0ED8               	movlw	216
  3178  0008EE  6E17               	movwf	(isbtw@high+2)^0,c
  3179  0008F0  0E3F               	movlw	63
  3180  0008F2  6E18               	movwf	(isbtw@high+3)^0,c
  3181  0008F4  EC0C  F019         	call	_isbtw	;wreg free
  3182  0008F8  040D               	decf	?_isbtw^0,w,c
  3183  0008FA  100E               	iorwf	(?_isbtw+1)^0,w,c
  3184  0008FC  A4D8               	btfss	status,2,c
  3185  0008FE  EF83  F004         	goto	u3541
  3186  000902  EF85  F004         	goto	u3540
  3187  000906                     u3541:
  3188  000906  EFB8  F004         	goto	l3780
  3189  00090A                     u3540:
  3190  00090A  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3191  00090E  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3192  000912  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3193  000916  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3194  00091A  0ECD               	movlw	205
  3195  00091C  6E11               	movwf	isbtw@low^0,c
  3196  00091E  0ECC               	movlw	204
  3197  000920  6E12               	movwf	(isbtw@low+1)^0,c
  3198  000922  0E4C               	movlw	76
  3199  000924  6E13               	movwf	(isbtw@low+2)^0,c
  3200  000926  0E3F               	movlw	63
  3201  000928  6E14               	movwf	(isbtw@low+3)^0,c
  3202  00092A  0E66               	movlw	102
  3203  00092C  6E15               	movwf	isbtw@high^0,c
  3204  00092E  0E66               	movlw	102
  3205  000930  6E16               	movwf	(isbtw@high+1)^0,c
  3206  000932  0E66               	movlw	102
  3207  000934  6E17               	movwf	(isbtw@high+2)^0,c
  3208  000936  0E3F               	movlw	63
  3209  000938  6E18               	movwf	(isbtw@high+3)^0,c
  3210  00093A  EC0C  F019         	call	_isbtw	;wreg free
  3211  00093E  040D               	decf	?_isbtw^0,w,c
  3212  000940  100E               	iorwf	(?_isbtw+1)^0,w,c
  3213  000942  A4D8               	btfss	status,2,c
  3214  000944  EFA6  F004         	goto	u3551
  3215  000948  EFA8  F004         	goto	u3550
  3216  00094C                     u3551:
  3217  00094C  EFB8  F004         	goto	l3780
  3218  000950                     u3550:
  3219  000950  0E53               	movlw	83
  3220  000952  0100               	movlb	0	; () banked
  3221  000954  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3222  000956  0E03               	movlw	3
  3223  000958  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3224  00095A  A0D8               	btfss	status,0,c
  3225  00095C  EFB2  F004         	goto	u3561
  3226  000960  EFB4  F004         	goto	u3560
  3227  000964                     u3561:
  3228  000964  EFB8  F004         	goto	l3780
  3229  000968                     u3560:
  3230  000968                     
  3231                           ; BSR set to: 0
  3232                           ;color.c: 152:     {out = 3;}
  3233  000968  0E00               	movlw	0
  3234  00096A  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3235  00096C  0E03               	movlw	3
  3236  00096E  6F72               	movwf	determine_color_new@out& (0+255),b
  3237  000970                     l3780:
  3238                           
  3239                           ;color.c: 155:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1 && lumin>830)
  3240  000970  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3241  000974  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3242  000978  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3243  00097C  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3244  000980  0E14               	movlw	20
  3245  000982  6E11               	movwf	isbtw@low^0,c
  3246  000984  0EAE               	movlw	174
  3247  000986  6E12               	movwf	(isbtw@low+1)^0,c
  3248  000988  0EC7               	movlw	199
  3249  00098A  6E13               	movwf	(isbtw@low+2)^0,c
  3250  00098C  0E3F               	movlw	63
  3251  00098E  6E14               	movwf	(isbtw@low+3)^0,c
  3252  000990  0E71               	movlw	113
  3253  000992  6E15               	movwf	isbtw@high^0,c
  3254  000994  0E3D               	movlw	61
  3255  000996  6E16               	movwf	(isbtw@high+1)^0,c
  3256  000998  0EEA               	movlw	234
  3257  00099A  6E17               	movwf	(isbtw@high+2)^0,c
  3258  00099C  0E3F               	movlw	63
  3259  00099E  6E18               	movwf	(isbtw@high+3)^0,c
  3260  0009A0  EC0C  F019         	call	_isbtw	;wreg free
  3261  0009A4  040D               	decf	?_isbtw^0,w,c
  3262  0009A6  100E               	iorwf	(?_isbtw+1)^0,w,c
  3263  0009A8  A4D8               	btfss	status,2,c
  3264  0009AA  EFD9  F004         	goto	u3571
  3265  0009AE  EFDB  F004         	goto	u3570
  3266  0009B2                     u3571:
  3267  0009B2  EF31  F005         	goto	l3790
  3268  0009B6                     u3570:
  3269  0009B6  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3270  0009BA  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3271  0009BE  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3272  0009C2  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3273  0009C6  0EA4               	movlw	164
  3274  0009C8  6E11               	movwf	isbtw@low^0,c
  3275  0009CA  0E70               	movlw	112
  3276  0009CC  6E12               	movwf	(isbtw@low+1)^0,c
  3277  0009CE  0E9D               	movlw	157
  3278  0009D0  6E13               	movwf	(isbtw@low+2)^0,c
  3279  0009D2  0E3F               	movlw	63
  3280  0009D4  6E14               	movwf	(isbtw@low+3)^0,c
  3281  0009D6  0E00               	movlw	0
  3282  0009D8  6E15               	movwf	isbtw@high^0,c
  3283  0009DA  0E00               	movlw	0
  3284  0009DC  6E16               	movwf	(isbtw@high+1)^0,c
  3285  0009DE  0EC0               	movlw	192
  3286  0009E0  6E17               	movwf	(isbtw@high+2)^0,c
  3287  0009E2  0E3F               	movlw	63
  3288  0009E4  6E18               	movwf	(isbtw@high+3)^0,c
  3289  0009E6  EC0C  F019         	call	_isbtw	;wreg free
  3290  0009EA  040D               	decf	?_isbtw^0,w,c
  3291  0009EC  100E               	iorwf	(?_isbtw+1)^0,w,c
  3292  0009EE  A4D8               	btfss	status,2,c
  3293  0009F0  EFFC  F004         	goto	u3581
  3294  0009F4  EFFE  F004         	goto	u3580
  3295  0009F8                     u3581:
  3296  0009F8  EF31  F005         	goto	l3790
  3297  0009FC                     u3580:
  3298  0009FC  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3299  000A00  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3300  000A04  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3301  000A08  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3302  000A0C  0E33               	movlw	51
  3303  000A0E  6E11               	movwf	isbtw@low^0,c
  3304  000A10  0E33               	movlw	51
  3305  000A12  6E12               	movwf	(isbtw@low+1)^0,c
  3306  000A14  0E93               	movlw	147
  3307  000A16  6E13               	movwf	(isbtw@low+2)^0,c
  3308  000A18  0E3F               	movlw	63
  3309  000A1A  6E14               	movwf	(isbtw@low+3)^0,c
  3310  000A1C  0E66               	movlw	102
  3311  000A1E  6E15               	movwf	isbtw@high^0,c
  3312  000A20  0E66               	movlw	102
  3313  000A22  6E16               	movwf	(isbtw@high+1)^0,c
  3314  000A24  0EA6               	movlw	166
  3315  000A26  6E17               	movwf	(isbtw@high+2)^0,c
  3316  000A28  0E3F               	movlw	63
  3317  000A2A  6E18               	movwf	(isbtw@high+3)^0,c
  3318  000A2C  EC0C  F019         	call	_isbtw	;wreg free
  3319  000A30  040D               	decf	?_isbtw^0,w,c
  3320  000A32  100E               	iorwf	(?_isbtw+1)^0,w,c
  3321  000A34  A4D8               	btfss	status,2,c
  3322  000A36  EF1F  F005         	goto	u3591
  3323  000A3A  EF21  F005         	goto	u3590
  3324  000A3E                     u3591:
  3325  000A3E  EF31  F005         	goto	l3790
  3326  000A42                     u3590:
  3327  000A42  0E3F               	movlw	63
  3328  000A44  0100               	movlb	0	; () banked
  3329  000A46  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3330  000A48  0E03               	movlw	3
  3331  000A4A  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3332  000A4C  A0D8               	btfss	status,0,c
  3333  000A4E  EF2B  F005         	goto	u3601
  3334  000A52  EF2D  F005         	goto	u3600
  3335  000A56                     u3601:
  3336  000A56  EF31  F005         	goto	l3790
  3337  000A5A                     u3600:
  3338  000A5A                     
  3339                           ; BSR set to: 0
  3340                           ;color.c: 156:     {out = 4;}
  3341  000A5A  0E00               	movlw	0
  3342  000A5C  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3343  000A5E  0E04               	movlw	4
  3344  000A60  6F72               	movwf	determine_color_new@out& (0+255),b
  3345  000A62                     l3790:
  3346                           
  3347                           ;color.c: 159:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1 && lumin>820)
  3348  000A62  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3349  000A66  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3350  000A6A  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3351  000A6E  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3352  000A72  0E66               	movlw	102
  3353  000A74  6E11               	movwf	isbtw@low^0,c
  3354  000A76  0E66               	movlw	102
  3355  000A78  6E12               	movwf	(isbtw@low+1)^0,c
  3356  000A7A  0E46               	movlw	70
  3357  000A7C  6E13               	movwf	(isbtw@low+2)^0,c
  3358  000A7E  0E40               	movlw	64
  3359  000A80  6E14               	movwf	(isbtw@low+3)^0,c
  3360  000A82  0E33               	movlw	51
  3361  000A84  6E15               	movwf	isbtw@high^0,c
  3362  000A86  0E33               	movlw	51
  3363  000A88  6E16               	movwf	(isbtw@high+1)^0,c
  3364  000A8A  0E9B               	movlw	155
  3365  000A8C  6E17               	movwf	(isbtw@high+2)^0,c
  3366  000A8E  0E40               	movlw	64
  3367  000A90  6E18               	movwf	(isbtw@high+3)^0,c
  3368  000A92  EC0C  F019         	call	_isbtw	;wreg free
  3369  000A96  040D               	decf	?_isbtw^0,w,c
  3370  000A98  100E               	iorwf	(?_isbtw+1)^0,w,c
  3371  000A9A  A4D8               	btfss	status,2,c
  3372  000A9C  EF52  F005         	goto	u3611
  3373  000AA0  EF54  F005         	goto	u3610
  3374  000AA4                     u3611:
  3375  000AA4  EFAA  F005         	goto	l3800
  3376  000AA8                     u3610:
  3377  000AA8  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3378  000AAC  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3379  000AB0  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3380  000AB4  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3381  000AB8  0ECD               	movlw	205
  3382  000ABA  6E11               	movwf	isbtw@low^0,c
  3383  000ABC  0ECC               	movlw	204
  3384  000ABE  6E12               	movwf	(isbtw@low+1)^0,c
  3385  000AC0  0E0C               	movlw	12
  3386  000AC2  6E13               	movwf	(isbtw@low+2)^0,c
  3387  000AC4  0E40               	movlw	64
  3388  000AC6  6E14               	movwf	(isbtw@low+3)^0,c
  3389  000AC8  0EB8               	movlw	184
  3390  000ACA  6E15               	movwf	isbtw@high^0,c
  3391  000ACC  0E1E               	movlw	30
  3392  000ACE  6E16               	movwf	(isbtw@high+1)^0,c
  3393  000AD0  0E35               	movlw	53
  3394  000AD2  6E17               	movwf	(isbtw@high+2)^0,c
  3395  000AD4  0E40               	movlw	64
  3396  000AD6  6E18               	movwf	(isbtw@high+3)^0,c
  3397  000AD8  EC0C  F019         	call	_isbtw	;wreg free
  3398  000ADC  040D               	decf	?_isbtw^0,w,c
  3399  000ADE  100E               	iorwf	(?_isbtw+1)^0,w,c
  3400  000AE0  A4D8               	btfss	status,2,c
  3401  000AE2  EF75  F005         	goto	u3621
  3402  000AE6  EF77  F005         	goto	u3620
  3403  000AEA                     u3621:
  3404  000AEA  EFAA  F005         	goto	l3800
  3405  000AEE                     u3620:
  3406  000AEE  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3407  000AF2  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3408  000AF6  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3409  000AFA  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3410  000AFE  0E5C               	movlw	92
  3411  000B00  6E11               	movwf	isbtw@low^0,c
  3412  000B02  0E8F               	movlw	143
  3413  000B04  6E12               	movwf	(isbtw@low+1)^0,c
  3414  000B06  0EA2               	movlw	162
  3415  000B08  6E13               	movwf	(isbtw@low+2)^0,c
  3416  000B0A  0E3F               	movlw	63
  3417  000B0C  6E14               	movwf	(isbtw@low+3)^0,c
  3418  000B0E  0E66               	movlw	102
  3419  000B10  6E15               	movwf	isbtw@high^0,c
  3420  000B12  0E66               	movlw	102
  3421  000B14  6E16               	movwf	(isbtw@high+1)^0,c
  3422  000B16  0EE6               	movlw	230
  3423  000B18  6E17               	movwf	(isbtw@high+2)^0,c
  3424  000B1A  0E3F               	movlw	63
  3425  000B1C  6E18               	movwf	(isbtw@high+3)^0,c
  3426  000B1E  EC0C  F019         	call	_isbtw	;wreg free
  3427  000B22  040D               	decf	?_isbtw^0,w,c
  3428  000B24  100E               	iorwf	(?_isbtw+1)^0,w,c
  3429  000B26  A4D8               	btfss	status,2,c
  3430  000B28  EF98  F005         	goto	u3631
  3431  000B2C  EF9A  F005         	goto	u3630
  3432  000B30                     u3631:
  3433  000B30  EFAA  F005         	goto	l3800
  3434  000B34                     u3630:
  3435  000B34  0E35               	movlw	53
  3436  000B36  0100               	movlb	0	; () banked
  3437  000B38  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3438  000B3A  0E03               	movlw	3
  3439  000B3C  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3440  000B3E  A0D8               	btfss	status,0,c
  3441  000B40  EFA4  F005         	goto	u3641
  3442  000B44  EFA6  F005         	goto	u3640
  3443  000B48                     u3641:
  3444  000B48  EFAA  F005         	goto	l3800
  3445  000B4C                     u3640:
  3446  000B4C                     
  3447                           ; BSR set to: 0
  3448                           ;color.c: 160:     {out = 5;}
  3449  000B4C  0E00               	movlw	0
  3450  000B4E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3451  000B50  0E05               	movlw	5
  3452  000B52  6F72               	movwf	determine_color_new@out& (0+255),b
  3453  000B54                     l3800:
  3454                           
  3455                           ;color.c: 163:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1 && lumin>820)
  3456  000B54  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3457  000B58  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3458  000B5C  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3459  000B60  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3460  000B64  0E9A               	movlw	154
  3461  000B66  6E11               	movwf	isbtw@low^0,c
  3462  000B68  0E99               	movlw	153
  3463  000B6A  6E12               	movwf	(isbtw@low+1)^0,c
  3464  000B6C  0E19               	movlw	25
  3465  000B6E  6E13               	movwf	(isbtw@low+2)^0,c
  3466  000B70  0E3F               	movlw	63
  3467  000B72  6E14               	movwf	(isbtw@low+3)^0,c
  3468  000B74  0EF6               	movlw	246
  3469  000B76  6E15               	movwf	isbtw@high^0,c
  3470  000B78  0E28               	movlw	40
  3471  000B7A  6E16               	movwf	(isbtw@high+1)^0,c
  3472  000B7C  0E5C               	movlw	92
  3473  000B7E  6E17               	movwf	(isbtw@high+2)^0,c
  3474  000B80  0E3F               	movlw	63
  3475  000B82  6E18               	movwf	(isbtw@high+3)^0,c
  3476  000B84  EC0C  F019         	call	_isbtw	;wreg free
  3477  000B88  040D               	decf	?_isbtw^0,w,c
  3478  000B8A  100E               	iorwf	(?_isbtw+1)^0,w,c
  3479  000B8C  A4D8               	btfss	status,2,c
  3480  000B8E  EFCB  F005         	goto	u3651
  3481  000B92  EFCD  F005         	goto	u3650
  3482  000B96                     u3651:
  3483  000B96  EF23  F006         	goto	l3810
  3484  000B9A                     u3650:
  3485  000B9A  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3486  000B9E  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3487  000BA2  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3488  000BA6  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3489  000BAA  0E9A               	movlw	154
  3490  000BAC  6E11               	movwf	isbtw@low^0,c
  3491  000BAE  0E99               	movlw	153
  3492  000BB0  6E12               	movwf	(isbtw@low+1)^0,c
  3493  000BB2  0E19               	movlw	25
  3494  000BB4  6E13               	movwf	(isbtw@low+2)^0,c
  3495  000BB6  0E3F               	movlw	63
  3496  000BB8  6E14               	movwf	(isbtw@low+3)^0,c
  3497  000BBA  0E9A               	movlw	154
  3498  000BBC  6E15               	movwf	isbtw@high^0,c
  3499  000BBE  0E99               	movlw	153
  3500  000BC0  6E16               	movwf	(isbtw@high+1)^0,c
  3501  000BC2  0E59               	movlw	89
  3502  000BC4  6E17               	movwf	(isbtw@high+2)^0,c
  3503  000BC6  0E3F               	movlw	63
  3504  000BC8  6E18               	movwf	(isbtw@high+3)^0,c
  3505  000BCA  EC0C  F019         	call	_isbtw	;wreg free
  3506  000BCE  040D               	decf	?_isbtw^0,w,c
  3507  000BD0  100E               	iorwf	(?_isbtw+1)^0,w,c
  3508  000BD2  A4D8               	btfss	status,2,c
  3509  000BD4  EFEE  F005         	goto	u3661
  3510  000BD8  EFF0  F005         	goto	u3660
  3511  000BDC                     u3661:
  3512  000BDC  EF23  F006         	goto	l3810
  3513  000BE0                     u3660:
  3514  000BE0  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3515  000BE4  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3516  000BE8  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3517  000BEC  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3518  000BF0  0E33               	movlw	51
  3519  000BF2  6E11               	movwf	isbtw@low^0,c
  3520  000BF4  0E33               	movlw	51
  3521  000BF6  6E12               	movwf	(isbtw@low+1)^0,c
  3522  000BF8  0E73               	movlw	115
  3523  000BFA  6E13               	movwf	(isbtw@low+2)^0,c
  3524  000BFC  0E3F               	movlw	63
  3525  000BFE  6E14               	movwf	(isbtw@low+3)^0,c
  3526  000C00  0E29               	movlw	41
  3527  000C02  6E15               	movwf	isbtw@high^0,c
  3528  000C04  0E5C               	movlw	92
  3529  000C06  6E16               	movwf	(isbtw@high+1)^0,c
  3530  000C08  0E8F               	movlw	143
  3531  000C0A  6E17               	movwf	(isbtw@high+2)^0,c
  3532  000C0C  0E3F               	movlw	63
  3533  000C0E  6E18               	movwf	(isbtw@high+3)^0,c
  3534  000C10  EC0C  F019         	call	_isbtw	;wreg free
  3535  000C14  040D               	decf	?_isbtw^0,w,c
  3536  000C16  100E               	iorwf	(?_isbtw+1)^0,w,c
  3537  000C18  A4D8               	btfss	status,2,c
  3538  000C1A  EF11  F006         	goto	u3671
  3539  000C1E  EF13  F006         	goto	u3670
  3540  000C22                     u3671:
  3541  000C22  EF23  F006         	goto	l3810
  3542  000C26                     u3670:
  3543  000C26  0E35               	movlw	53
  3544  000C28  0100               	movlb	0	; () banked
  3545  000C2A  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3546  000C2C  0E03               	movlw	3
  3547  000C2E  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3548  000C30  A0D8               	btfss	status,0,c
  3549  000C32  EF1D  F006         	goto	u3681
  3550  000C36  EF1F  F006         	goto	u3680
  3551  000C3A                     u3681:
  3552  000C3A  EF23  F006         	goto	l3810
  3553  000C3E                     u3680:
  3554  000C3E                     
  3555                           ; BSR set to: 0
  3556                           ;color.c: 164:     {out = 6;}
  3557  000C3E  0E00               	movlw	0
  3558  000C40  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3559  000C42  0E06               	movlw	6
  3560  000C44  6F72               	movwf	determine_color_new@out& (0+255),b
  3561  000C46                     l3810:
  3562                           
  3563                           ;color.c: 167:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>890)
  3564  000C46  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3565  000C4A  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3566  000C4E  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3567  000C52  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3568  000C56  0E66               	movlw	102
  3569  000C58  6E11               	movwf	isbtw@low^0,c
  3570  000C5A  0E66               	movlw	102
  3571  000C5C  6E12               	movwf	(isbtw@low+1)^0,c
  3572  000C5E  0E66               	movlw	102
  3573  000C60  6E13               	movwf	(isbtw@low+2)^0,c
  3574  000C62  0E3F               	movlw	63
  3575  000C64  6E14               	movwf	(isbtw@low+3)^0,c
  3576  000C66  0ECD               	movlw	205
  3577  000C68  6E15               	movwf	isbtw@high^0,c
  3578  000C6A  0ECC               	movlw	204
  3579  000C6C  6E16               	movwf	(isbtw@high+1)^0,c
  3580  000C6E  0E8C               	movlw	140
  3581  000C70  6E17               	movwf	(isbtw@high+2)^0,c
  3582  000C72  0E3F               	movlw	63
  3583  000C74  6E18               	movwf	(isbtw@high+3)^0,c
  3584  000C76  EC0C  F019         	call	_isbtw	;wreg free
  3585  000C7A  040D               	decf	?_isbtw^0,w,c
  3586  000C7C  100E               	iorwf	(?_isbtw+1)^0,w,c
  3587  000C7E  A4D8               	btfss	status,2,c
  3588  000C80  EF44  F006         	goto	u3691
  3589  000C84  EF46  F006         	goto	u3690
  3590  000C88                     u3691:
  3591  000C88  EF9C  F006         	goto	l3820
  3592  000C8C                     u3690:
  3593  000C8C  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3594  000C90  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3595  000C94  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3596  000C98  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3597  000C9C  0ECD               	movlw	205
  3598  000C9E  6E11               	movwf	isbtw@low^0,c
  3599  000CA0  0ECC               	movlw	204
  3600  000CA2  6E12               	movwf	(isbtw@low+1)^0,c
  3601  000CA4  0E4C               	movlw	76
  3602  000CA6  6E13               	movwf	(isbtw@low+2)^0,c
  3603  000CA8  0E3F               	movlw	63
  3604  000CAA  6E14               	movwf	(isbtw@low+3)^0,c
  3605  000CAC  0E00               	movlw	0
  3606  000CAE  6E15               	movwf	isbtw@high^0,c
  3607  000CB0  0E00               	movlw	0
  3608  000CB2  6E16               	movwf	(isbtw@high+1)^0,c
  3609  000CB4  0E80               	movlw	128
  3610  000CB6  6E17               	movwf	(isbtw@high+2)^0,c
  3611  000CB8  0E3F               	movlw	63
  3612  000CBA  6E18               	movwf	(isbtw@high+3)^0,c
  3613  000CBC  EC0C  F019         	call	_isbtw	;wreg free
  3614  000CC0  040D               	decf	?_isbtw^0,w,c
  3615  000CC2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3616  000CC4  A4D8               	btfss	status,2,c
  3617  000CC6  EF67  F006         	goto	u3701
  3618  000CCA  EF69  F006         	goto	u3700
  3619  000CCE                     u3701:
  3620  000CCE  EF9C  F006         	goto	l3820
  3621  000CD2                     u3700:
  3622  000CD2  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3623  000CD6  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3624  000CDA  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3625  000CDE  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3626  000CE2  0E33               	movlw	51
  3627  000CE4  6E11               	movwf	isbtw@low^0,c
  3628  000CE6  0E33               	movlw	51
  3629  000CE8  6E12               	movwf	(isbtw@low+1)^0,c
  3630  000CEA  0E73               	movlw	115
  3631  000CEC  6E13               	movwf	(isbtw@low+2)^0,c
  3632  000CEE  0E3F               	movlw	63
  3633  000CF0  6E14               	movwf	(isbtw@low+3)^0,c
  3634  000CF2  0ECD               	movlw	205
  3635  000CF4  6E15               	movwf	isbtw@high^0,c
  3636  000CF6  0ECC               	movlw	204
  3637  000CF8  6E16               	movwf	(isbtw@high+1)^0,c
  3638  000CFA  0E8C               	movlw	140
  3639  000CFC  6E17               	movwf	(isbtw@high+2)^0,c
  3640  000CFE  0E3F               	movlw	63
  3641  000D00  6E18               	movwf	(isbtw@high+3)^0,c
  3642  000D02  EC0C  F019         	call	_isbtw	;wreg free
  3643  000D06  040D               	decf	?_isbtw^0,w,c
  3644  000D08  100E               	iorwf	(?_isbtw+1)^0,w,c
  3645  000D0A  A4D8               	btfss	status,2,c
  3646  000D0C  EF8A  F006         	goto	u3711
  3647  000D10  EF8C  F006         	goto	u3710
  3648  000D14                     u3711:
  3649  000D14  EF9C  F006         	goto	l3820
  3650  000D18                     u3710:
  3651  000D18  0E7B               	movlw	123
  3652  000D1A  0100               	movlb	0	; () banked
  3653  000D1C  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3654  000D1E  0E03               	movlw	3
  3655  000D20  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3656  000D22  A0D8               	btfss	status,0,c
  3657  000D24  EF96  F006         	goto	u3721
  3658  000D28  EF98  F006         	goto	u3720
  3659  000D2C                     u3721:
  3660  000D2C  EF9C  F006         	goto	l3820
  3661  000D30                     u3720:
  3662  000D30                     
  3663                           ; BSR set to: 0
  3664                           ;color.c: 168:     {out = 7;}
  3665  000D30  0E00               	movlw	0
  3666  000D32  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3667  000D34  0E07               	movlw	7
  3668  000D36  6F72               	movwf	determine_color_new@out& (0+255),b
  3669  000D38                     l3820:
  3670                           
  3671                           ;color.c: 171:     if (RedRatio < 50 && GreenRatio < 50 && BlueRatio < 50) {out = 8;}
  3672  000D38  0100               	movlb	0	; () banked
  3673  000D3A  516D               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  3674  000D3C  E107               	bnz	u3731
  3675  000D3E  0E32               	movlw	50
  3676  000D40  5D6C               	subwf	determine_color_new@RedRatio& (0+255),w,b
  3677  000D42  B0D8               	btfsc	status,0,c
  3678  000D44  EFA6  F006         	goto	u3731
  3679  000D48  EFA8  F006         	goto	u3730
  3680  000D4C                     u3731:
  3681  000D4C  EFC2  F006         	goto	l3828
  3682  000D50                     u3730:
  3683  000D50                     
  3684                           ; BSR set to: 0
  3685  000D50  516F               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  3686  000D52  E107               	bnz	u3741
  3687  000D54  0E32               	movlw	50
  3688  000D56  5D6E               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  3689  000D58  B0D8               	btfsc	status,0,c
  3690  000D5A  EFB1  F006         	goto	u3741
  3691  000D5E  EFB3  F006         	goto	u3740
  3692  000D62                     u3741:
  3693  000D62  EFC2  F006         	goto	l3828
  3694  000D66                     u3740:
  3695  000D66                     
  3696                           ; BSR set to: 0
  3697  000D66  5171               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  3698  000D68  E107               	bnz	u3751
  3699  000D6A  0E32               	movlw	50
  3700  000D6C  5D70               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  3701  000D6E  B0D8               	btfsc	status,0,c
  3702  000D70  EFBC  F006         	goto	u3751
  3703  000D74  EFBE  F006         	goto	u3750
  3704  000D78                     u3751:
  3705  000D78  EFC2  F006         	goto	l3828
  3706  000D7C                     u3750:
  3707  000D7C                     
  3708                           ; BSR set to: 0
  3709  000D7C  0E00               	movlw	0
  3710  000D7E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3711  000D80  0E08               	movlw	8
  3712  000D82  6F72               	movwf	determine_color_new@out& (0+255),b
  3713  000D84                     l3828:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;color.c: 173:     return out;
  3717  000D84  C072  F05B         	movff	determine_color_new@out,?_determine_color_new
  3718  000D88  C073  F05C         	movff	determine_color_new@out+1,?_determine_color_new+1
  3719  000D8C                     
  3720                           ; BSR set to: 0
  3721  000D8C  0012               	return		;funcret
  3722  000D8E                     __end_of_determine_color_new:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _isbtw *****************
  3726 ;; Defined at:
  3727 ;;		line 95 in file "color.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  num             4   12[COMRAM] float 
  3730 ;;  low             4   16[COMRAM] float 
  3731 ;;  high            4   20[COMRAM] float 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2   12[COMRAM] unsigned int 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3743 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;Total ram usage:       12 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 2
  3750 ;; This function calls:
  3751 ;;		___flge
  3752 ;; This function is called by:
  3753 ;;		_determine_color_new
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text7
  3758  003218                     __ptext7:
  3759                           	callstack 0
  3760  003218                     _isbtw:
  3761                           	callstack 27
  3762  003218                     
  3763                           ;color.c: 96:     if (num>=low && num<=high){return 1;}
  3764  003218  C00D  F001         	movff	isbtw@num,___flge@ff1
  3765  00321C  C00E  F002         	movff	isbtw@num+1,___flge@ff1+1
  3766  003220  C00F  F003         	movff	isbtw@num+2,___flge@ff1+2
  3767  003224  C010  F004         	movff	isbtw@num+3,___flge@ff1+3
  3768  003228  C011  F005         	movff	isbtw@low,___flge@ff2
  3769  00322C  C012  F006         	movff	isbtw@low+1,___flge@ff2+1
  3770  003230  C013  F007         	movff	isbtw@low+2,___flge@ff2+2
  3771  003234  C014  F008         	movff	isbtw@low+3,___flge@ff2+3
  3772  003238  EC52  F017         	call	___flge	;wreg free
  3773  00323C  A0D8               	btfss	status,0,c
  3774  00323E  EF23  F019         	goto	u2351
  3775  003242  EF25  F019         	goto	u2350
  3776  003246                     u2351:
  3777  003246  EF44  F019         	goto	l2962
  3778  00324A                     u2350:
  3779  00324A  C015  F001         	movff	isbtw@high,___flge@ff1
  3780  00324E  C016  F002         	movff	isbtw@high+1,___flge@ff1+1
  3781  003252  C017  F003         	movff	isbtw@high+2,___flge@ff1+2
  3782  003256  C018  F004         	movff	isbtw@high+3,___flge@ff1+3
  3783  00325A  C00D  F005         	movff	isbtw@num,___flge@ff2
  3784  00325E  C00E  F006         	movff	isbtw@num+1,___flge@ff2+1
  3785  003262  C00F  F007         	movff	isbtw@num+2,___flge@ff2+2
  3786  003266  C010  F008         	movff	isbtw@num+3,___flge@ff2+3
  3787  00326A  EC52  F017         	call	___flge	;wreg free
  3788  00326E  A0D8               	btfss	status,0,c
  3789  003270  EF3C  F019         	goto	u2361
  3790  003274  EF3E  F019         	goto	u2360
  3791  003278                     u2361:
  3792  003278  EF44  F019         	goto	l2962
  3793  00327C                     u2360:
  3794  00327C  0E00               	movlw	0
  3795  00327E  6E0E               	movwf	(?_isbtw+1)^0,c
  3796  003280  0E01               	movlw	1
  3797  003282  6E0D               	movwf	?_isbtw^0,c
  3798  003284  EF48  F019         	goto	l75
  3799  003288                     l2962:
  3800  003288  0E00               	movlw	0
  3801  00328A  6E0E               	movwf	(?_isbtw+1)^0,c
  3802  00328C  0E00               	movlw	0
  3803  00328E  6E0D               	movwf	?_isbtw^0,c
  3804  003290                     l75:
  3805  003290  0012               	return		;funcret
  3806  003292                     __end_of_isbtw:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function ___flge *****************
  3810 ;; Defined at:
  3811 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  ff1             4    0[COMRAM] unsigned int 
  3814 ;;  ff2             4    4[COMRAM] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3826 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;Total ram usage:       12 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_isbtw
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text8
  3841  002EA4                     __ptext8:
  3842                           	callstack 0
  3843  002EA4                     ___flge:
  3844                           	callstack 27
  3845  002EA4  0E00               	movlw	0
  3846  002EA6  1401               	andwf	___flge@ff1^0,w,c
  3847  002EA8  6E09               	movwf	??___flge^0,c
  3848  002EAA  0E00               	movlw	0
  3849  002EAC  1402               	andwf	(___flge@ff1+1)^0,w,c
  3850  002EAE  6E0A               	movwf	(??___flge+1)^0,c
  3851  002EB0  0E80               	movlw	128
  3852  002EB2  1403               	andwf	(___flge@ff1+2)^0,w,c
  3853  002EB4  6E0B               	movwf	(??___flge+2)^0,c
  3854  002EB6  0E7F               	movlw	127
  3855  002EB8  1404               	andwf	(___flge@ff1+3)^0,w,c
  3856  002EBA  6E0C               	movwf	(??___flge+3)^0,c
  3857  002EBC  5009               	movf	??___flge^0,w,c
  3858  002EBE  100A               	iorwf	(??___flge+1)^0,w,c
  3859  002EC0  100B               	iorwf	(??___flge+2)^0,w,c
  3860  002EC2  100C               	iorwf	(??___flge+3)^0,w,c
  3861  002EC4  A4D8               	btfss	status,2,c
  3862  002EC6  EF67  F017         	goto	u2301
  3863  002ECA  EF69  F017         	goto	u2300
  3864  002ECE                     u2301:
  3865  002ECE  EF71  F017         	goto	l2896
  3866  002ED2                     u2300:
  3867  002ED2  0E00               	movlw	0
  3868  002ED4  6E01               	movwf	___flge@ff1^0,c
  3869  002ED6  0E00               	movlw	0
  3870  002ED8  6E02               	movwf	(___flge@ff1+1)^0,c
  3871  002EDA  0E00               	movlw	0
  3872  002EDC  6E03               	movwf	(___flge@ff1+2)^0,c
  3873  002EDE  0E00               	movlw	0
  3874  002EE0  6E04               	movwf	(___flge@ff1+3)^0,c
  3875  002EE2                     l2896:
  3876  002EE2  0E00               	movlw	0
  3877  002EE4  1405               	andwf	___flge@ff2^0,w,c
  3878  002EE6  6E09               	movwf	??___flge^0,c
  3879  002EE8  0E00               	movlw	0
  3880  002EEA  1406               	andwf	(___flge@ff2+1)^0,w,c
  3881  002EEC  6E0A               	movwf	(??___flge+1)^0,c
  3882  002EEE  0E80               	movlw	128
  3883  002EF0  1407               	andwf	(___flge@ff2+2)^0,w,c
  3884  002EF2  6E0B               	movwf	(??___flge+2)^0,c
  3885  002EF4  0E7F               	movlw	127
  3886  002EF6  1408               	andwf	(___flge@ff2+3)^0,w,c
  3887  002EF8  6E0C               	movwf	(??___flge+3)^0,c
  3888  002EFA  5009               	movf	??___flge^0,w,c
  3889  002EFC  100A               	iorwf	(??___flge+1)^0,w,c
  3890  002EFE  100B               	iorwf	(??___flge+2)^0,w,c
  3891  002F00  100C               	iorwf	(??___flge+3)^0,w,c
  3892  002F02  A4D8               	btfss	status,2,c
  3893  002F04  EF86  F017         	goto	u2311
  3894  002F08  EF88  F017         	goto	u2310
  3895  002F0C                     u2311:
  3896  002F0C  EF90  F017         	goto	l2900
  3897  002F10                     u2310:
  3898  002F10  0E00               	movlw	0
  3899  002F12  6E05               	movwf	___flge@ff2^0,c
  3900  002F14  0E00               	movlw	0
  3901  002F16  6E06               	movwf	(___flge@ff2+1)^0,c
  3902  002F18  0E00               	movlw	0
  3903  002F1A  6E07               	movwf	(___flge@ff2+2)^0,c
  3904  002F1C  0E00               	movlw	0
  3905  002F1E  6E08               	movwf	(___flge@ff2+3)^0,c
  3906  002F20                     l2900:
  3907  002F20  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3908  002F22  EF95  F017         	goto	u2321
  3909  002F26  EF97  F017         	goto	u2320
  3910  002F2A                     u2321:
  3911  002F2A  EFA0  F017         	goto	l2904
  3912  002F2E                     u2320:
  3913  002F2E  6C01               	negf	___flge@ff1^0,c
  3914  002F30  1E02               	comf	(___flge@ff1+1)^0,f,c
  3915  002F32  B0D8               	btfsc	status,0,c
  3916  002F34  2A02               	incf	(___flge@ff1+1)^0,f,c
  3917  002F36  1E03               	comf	(___flge@ff1+2)^0,f,c
  3918  002F38  B0D8               	btfsc	status,0,c
  3919  002F3A  2A03               	incf	(___flge@ff1+2)^0,f,c
  3920  002F3C  0E80               	movlw	128
  3921  002F3E  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3922  002F40                     l2904:
  3923  002F40  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3924  002F42  EFA5  F017         	goto	u2331
  3925  002F46  EFA7  F017         	goto	u2330
  3926  002F4A                     u2331:
  3927  002F4A  EFB0  F017         	goto	l802
  3928  002F4E                     u2330:
  3929  002F4E  6C05               	negf	___flge@ff2^0,c
  3930  002F50  1E06               	comf	(___flge@ff2+1)^0,f,c
  3931  002F52  B0D8               	btfsc	status,0,c
  3932  002F54  2A06               	incf	(___flge@ff2+1)^0,f,c
  3933  002F56  1E07               	comf	(___flge@ff2+2)^0,f,c
  3934  002F58  B0D8               	btfsc	status,0,c
  3935  002F5A  2A07               	incf	(___flge@ff2+2)^0,f,c
  3936  002F5C  0E80               	movlw	128
  3937  002F5E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3938  002F60                     l802:
  3939  002F60  0E00               	movlw	0
  3940  002F62  1A01               	xorwf	___flge@ff1^0,f,c
  3941  002F64  0E00               	movlw	0
  3942  002F66  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3943  002F68  0E00               	movlw	0
  3944  002F6A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3945  002F6C  0E80               	movlw	128
  3946  002F6E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3947  002F70  0E00               	movlw	0
  3948  002F72  1A05               	xorwf	___flge@ff2^0,f,c
  3949  002F74  0E00               	movlw	0
  3950  002F76  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3951  002F78  0E00               	movlw	0
  3952  002F7A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3953  002F7C  0E80               	movlw	128
  3954  002F7E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3955  002F80  5005               	movf	___flge@ff2^0,w,c
  3956  002F82  5C01               	subwf	___flge@ff1^0,w,c
  3957  002F84  5006               	movf	(___flge@ff2+1)^0,w,c
  3958  002F86  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3959  002F88  5007               	movf	(___flge@ff2+2)^0,w,c
  3960  002F8A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3961  002F8C  5008               	movf	(___flge@ff2+3)^0,w,c
  3962  002F8E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3963  002F90  B0D8               	btfsc	status,0,c
  3964  002F92  EFCD  F017         	goto	u2341
  3965  002F96  EFCF  F017         	goto	u2340
  3966  002F9A                     u2341:
  3967  002F9A  EFD2  F017         	goto	l2910
  3968  002F9E                     u2340:
  3969  002F9E  90D8               	bcf	status,0,c
  3970  002FA0  EFD3  F017         	goto	l807
  3971  002FA4                     l2910:
  3972  002FA4  80D8               	bsf	status,0,c
  3973  002FA6                     l807:
  3974  002FA6  0012               	return		;funcret
  3975  002FA8                     __end_of___flge:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function ___xxtofl *****************
  3979 ;; Defined at:
  3980 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  sign            1    wreg     unsigned char 
  3983 ;;  val             4    0[COMRAM] long 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  sign            1    8[COMRAM] unsigned char 
  3986 ;;  arg             4   10[COMRAM] unsigned long 
  3987 ;;  exp             1    9[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  4    0[COMRAM] unsigned char 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;Total ram usage:       14 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_determine_color_new
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text9
  4012  0025B6                     __ptext9:
  4013                           	callstack 0
  4014  0025B6                     ___xxtofl:
  4015                           	callstack 28
  4016                           
  4017                           ;incstack = 0
  4018                           ;___xxtofl@sign stored from wreg
  4019  0025B6  6E09               	movwf	___xxtofl@sign^0,c
  4020  0025B8  5009               	movf	___xxtofl@sign^0,w,c
  4021  0025BA  B4D8               	btfsc	status,2,c
  4022  0025BC  EFE2  F012         	goto	u3281
  4023  0025C0  EFE4  F012         	goto	u3280
  4024  0025C4                     u3281:
  4025  0025C4  EF06  F013         	goto	l1192
  4026  0025C8                     u3280:
  4027  0025C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4028  0025CA  EFEB  F012         	goto	u3290
  4029  0025CE  EFE9  F012         	goto	u3291
  4030  0025D2                     u3291:
  4031  0025D2  EF06  F013         	goto	l1192
  4032  0025D6                     u3290:
  4033  0025D6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4034  0025DA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4035  0025DE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4036  0025E2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4037  0025E6  1E05               	comf	??___xxtofl^0,f,c
  4038  0025E8  1E06               	comf	(??___xxtofl+1)^0,f,c
  4039  0025EA  1E07               	comf	(??___xxtofl+2)^0,f,c
  4040  0025EC  1E08               	comf	(??___xxtofl+3)^0,f,c
  4041  0025EE  2A05               	incf	??___xxtofl^0,f,c
  4042  0025F0  0E00               	movlw	0
  4043  0025F2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4044  0025F4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4045  0025F6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4046  0025F8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4047  0025FC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4048  002600  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4049  002604  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4050  002608  EF0E  F013         	goto	l3654
  4051  00260C                     l1192:
  4052  00260C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4053  002610  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4054  002614  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4055  002618  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4056  00261C                     l3654:
  4057  00261C  5001               	movf	___xxtofl@val^0,w,c
  4058  00261E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4059  002620  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4060  002622  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4061  002624  A4D8               	btfss	status,2,c
  4062  002626  EF17  F013         	goto	u3301
  4063  00262A  EF19  F013         	goto	u3300
  4064  00262E                     u3301:
  4065  00262E  EF23  F013         	goto	l3660
  4066  002632                     u3300:
  4067  002632  0E00               	movlw	0
  4068  002634  6E01               	movwf	?___xxtofl^0,c
  4069  002636  0E00               	movlw	0
  4070  002638  6E02               	movwf	(?___xxtofl+1)^0,c
  4071  00263A  0E00               	movlw	0
  4072  00263C  6E03               	movwf	(?___xxtofl+2)^0,c
  4073  00263E  0E00               	movlw	0
  4074  002640  6E04               	movwf	(?___xxtofl+3)^0,c
  4075  002642  EFB4  F013         	goto	l1195
  4076  002646                     l3660:
  4077  002646  0E96               	movlw	150
  4078  002648  6E0A               	movwf	___xxtofl@exp^0,c
  4079  00264A  EF2D  F013         	goto	l3664
  4080  00264E                     l3662:
  4081  00264E  2A0A               	incf	___xxtofl@exp^0,f,c
  4082  002650  90D8               	bcf	status,0,c
  4083  002652  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4084  002654  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4085  002656  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4086  002658  320B               	rrcf	___xxtofl@arg^0,f,c
  4087  00265A                     l3664:
  4088  00265A  0E00               	movlw	0
  4089  00265C  140B               	andwf	___xxtofl@arg^0,w,c
  4090  00265E  6E05               	movwf	??___xxtofl^0,c
  4091  002660  0E00               	movlw	0
  4092  002662  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4093  002664  6E06               	movwf	(??___xxtofl+1)^0,c
  4094  002666  0E00               	movlw	0
  4095  002668  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4096  00266A  6E07               	movwf	(??___xxtofl+2)^0,c
  4097  00266C  0EFE               	movlw	254
  4098  00266E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4099  002670  6E08               	movwf	(??___xxtofl+3)^0,c
  4100  002672  5005               	movf	??___xxtofl^0,w,c
  4101  002674  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4102  002676  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4103  002678  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4104  00267A  A4D8               	btfss	status,2,c
  4105  00267C  EF42  F013         	goto	u3311
  4106  002680  EF44  F013         	goto	u3310
  4107  002684                     u3311:
  4108  002684  EF27  F013         	goto	l3662
  4109  002688                     u3310:
  4110  002688  EF52  F013         	goto	l1199
  4111  00268C                     l3666:
  4112  00268C  2A0A               	incf	___xxtofl@exp^0,f,c
  4113  00268E  0E01               	movlw	1
  4114  002690  260B               	addwf	___xxtofl@arg^0,f,c
  4115  002692  0E00               	movlw	0
  4116  002694  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4117  002696  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4118  002698  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4119  00269A  90D8               	bcf	status,0,c
  4120  00269C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4121  00269E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4122  0026A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4123  0026A2  320B               	rrcf	___xxtofl@arg^0,f,c
  4124  0026A4                     l1199:
  4125  0026A4  0E00               	movlw	0
  4126  0026A6  140B               	andwf	___xxtofl@arg^0,w,c
  4127  0026A8  6E05               	movwf	??___xxtofl^0,c
  4128  0026AA  0E00               	movlw	0
  4129  0026AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4130  0026AE  6E06               	movwf	(??___xxtofl+1)^0,c
  4131  0026B0  0E00               	movlw	0
  4132  0026B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4133  0026B4  6E07               	movwf	(??___xxtofl+2)^0,c
  4134  0026B6  0EFF               	movlw	255
  4135  0026B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4136  0026BA  6E08               	movwf	(??___xxtofl+3)^0,c
  4137  0026BC  5005               	movf	??___xxtofl^0,w,c
  4138  0026BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4139  0026C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4140  0026C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4141  0026C4  A4D8               	btfss	status,2,c
  4142  0026C6  EF67  F013         	goto	u3321
  4143  0026CA  EF69  F013         	goto	u3320
  4144  0026CE                     u3321:
  4145  0026CE  EF46  F013         	goto	l3666
  4146  0026D2                     u3320:
  4147  0026D2  EF71  F013         	goto	l3674
  4148  0026D6                     l3672:
  4149  0026D6  060A               	decf	___xxtofl@exp^0,f,c
  4150  0026D8  90D8               	bcf	status,0,c
  4151  0026DA  360B               	rlcf	___xxtofl@arg^0,f,c
  4152  0026DC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4153  0026DE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4154  0026E0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4155  0026E2                     l3674:
  4156  0026E2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4157  0026E4  EF76  F013         	goto	u3331
  4158  0026E8  EF78  F013         	goto	u3330
  4159  0026EC                     u3331:
  4160  0026EC  EF80  F013         	goto	l1206
  4161  0026F0                     u3330:
  4162  0026F0  0E02               	movlw	2
  4163  0026F2  600A               	cpfslt	___xxtofl@exp^0,c
  4164  0026F4  EF7E  F013         	goto	u3341
  4165  0026F8  EF80  F013         	goto	u3340
  4166  0026FC                     u3341:
  4167  0026FC  EF6B  F013         	goto	l3672
  4168  002700                     u3340:
  4169  002700                     l1206:
  4170  002700  B00A               	btfsc	___xxtofl@exp^0,0,c
  4171  002702  EF85  F013         	goto	u3351
  4172  002706  EF87  F013         	goto	u3350
  4173  00270A                     u3351:
  4174  00270A  EF88  F013         	goto	l3680
  4175  00270E                     u3350:
  4176  00270E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4177  002710                     l3680:
  4178  002710  90D8               	bcf	status,0,c
  4179  002712  320A               	rrcf	___xxtofl@exp^0,f,c
  4180  002714  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4181  002718  6A06               	clrf	(??___xxtofl+1)^0,c
  4182  00271A  6A07               	clrf	(??___xxtofl+2)^0,c
  4183  00271C  6A08               	clrf	(??___xxtofl+3)^0,c
  4184  00271E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4185  002722  6A07               	clrf	(??___xxtofl+2)^0,c
  4186  002724  6A06               	clrf	(??___xxtofl+1)^0,c
  4187  002726  6A05               	clrf	??___xxtofl^0,c
  4188  002728  5005               	movf	??___xxtofl^0,w,c
  4189  00272A  120B               	iorwf	___xxtofl@arg^0,f,c
  4190  00272C  5006               	movf	(??___xxtofl+1)^0,w,c
  4191  00272E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4192  002730  5007               	movf	(??___xxtofl+2)^0,w,c
  4193  002732  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4194  002734  5008               	movf	(??___xxtofl+3)^0,w,c
  4195  002736  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4196  002738  5009               	movf	___xxtofl@sign^0,w,c
  4197  00273A  B4D8               	btfsc	status,2,c
  4198  00273C  EFA2  F013         	goto	u3361
  4199  002740  EFA4  F013         	goto	u3360
  4200  002744                     u3361:
  4201  002744  EFAC  F013         	goto	l3690
  4202  002748                     u3360:
  4203  002748  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4204  00274A  EFAB  F013         	goto	u3370
  4205  00274E  EFA9  F013         	goto	u3371
  4206  002752                     u3371:
  4207  002752  EFAC  F013         	goto	l3690
  4208  002756                     u3370:
  4209  002756  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4210  002758                     l3690:
  4211  002758  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4212  00275C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4213  002760  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4214  002764  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4215  002768                     l1195:
  4216  002768  0012               	return		;funcret
  4217  00276A                     __end_of___xxtofl:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function ___fltol *****************
  4221 ;; Defined at:
  4222 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  f1              4   80[COMRAM] unsigned char 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  exp1            1   89[COMRAM] unsigned char 
  4227 ;;  sign1           1   88[COMRAM] unsigned char 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  4   80[COMRAM] long 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;Total ram usage:       10 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_determine_color_new
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text10
  4252  002D9E                     __ptext10:
  4253                           	callstack 0
  4254  002D9E                     ___fltol:
  4255                           	callstack 28
  4256  002D9E  3453               	rlcf	(___fltol@f1+2)^0,w,c
  4257  002DA0  3454               	rlcf	(___fltol@f1+3)^0,w,c
  4258  002DA2  6E5A               	movwf	___fltol@exp1^0,c
  4259  002DA4  505A               	movf	___fltol@exp1^0,w,c
  4260  002DA6  A4D8               	btfss	status,2,c
  4261  002DA8  EFD8  F016         	goto	u3211
  4262  002DAC  EFDA  F016         	goto	u3210
  4263  002DB0                     u3211:
  4264  002DB0  EFE4  F016         	goto	l3610
  4265  002DB4                     u3210:
  4266  002DB4                     l3606:
  4267  002DB4  0E00               	movlw	0
  4268  002DB6  6E51               	movwf	?___fltol^0,c
  4269  002DB8  0E00               	movlw	0
  4270  002DBA  6E52               	movwf	(?___fltol+1)^0,c
  4271  002DBC  0E00               	movlw	0
  4272  002DBE  6E53               	movwf	(?___fltol+2)^0,c
  4273  002DC0  0E00               	movlw	0
  4274  002DC2  6E54               	movwf	(?___fltol+3)^0,c
  4275  002DC4  EF51  F017         	goto	l834
  4276  002DC8                     l3610:
  4277  002DC8  C051  F055         	movff	___fltol@f1,??___fltol
  4278  002DCC  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  4279  002DD0  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  4280  002DD4  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  4281  002DD8  0E20               	movlw	32
  4282  002DDA  EFF4  F016         	goto	u3220
  4283  002DDE                     u3225:
  4284  002DDE  90D8               	bcf	status,0,c
  4285  002DE0  3258               	rrcf	(??___fltol+3)^0,f,c
  4286  002DE2  3257               	rrcf	(??___fltol+2)^0,f,c
  4287  002DE4  3256               	rrcf	(??___fltol+1)^0,f,c
  4288  002DE6  3255               	rrcf	??___fltol^0,f,c
  4289  002DE8                     u3220:
  4290  002DE8  2EE8               	decfsz	wreg,f,c
  4291  002DEA  EFEF  F016         	goto	u3225
  4292  002DEE  5055               	movf	??___fltol^0,w,c
  4293  002DF0  6E59               	movwf	___fltol@sign1^0,c
  4294  002DF2  8E53               	bsf	(___fltol@f1+2)^0,7,c
  4295  002DF4  0EFF               	movlw	255
  4296  002DF6  1651               	andwf	___fltol@f1^0,f,c
  4297  002DF8  0EFF               	movlw	255
  4298  002DFA  1652               	andwf	(___fltol@f1+1)^0,f,c
  4299  002DFC  0EFF               	movlw	255
  4300  002DFE  1653               	andwf	(___fltol@f1+2)^0,f,c
  4301  002E00  0E00               	movlw	0
  4302  002E02  1654               	andwf	(___fltol@f1+3)^0,f,c
  4303  002E04  0E96               	movlw	150
  4304  002E06  5E5A               	subwf	___fltol@exp1^0,f,c
  4305  002E08  BE5A               	btfsc	___fltol@exp1^0,7,c
  4306  002E0A  EF0B  F017         	goto	u3230
  4307  002E0E  EF09  F017         	goto	u3231
  4308  002E12                     u3231:
  4309  002E12  EF21  F017         	goto	l3630
  4310  002E16                     u3230:
  4311  002E16  505A               	movf	___fltol@exp1^0,w,c
  4312  002E18  0A80               	xorlw	128
  4313  002E1A  0F97               	addlw	151
  4314  002E1C  B0D8               	btfsc	status,0,c
  4315  002E1E  EF13  F017         	goto	u3241
  4316  002E22  EF15  F017         	goto	u3240
  4317  002E26                     u3241:
  4318  002E26  EF17  F017         	goto	l3626
  4319  002E2A                     u3240:
  4320  002E2A  EFDA  F016         	goto	l3606
  4321  002E2E                     l3626:
  4322  002E2E  90D8               	bcf	status,0,c
  4323  002E30  3254               	rrcf	(___fltol@f1+3)^0,f,c
  4324  002E32  3253               	rrcf	(___fltol@f1+2)^0,f,c
  4325  002E34  3252               	rrcf	(___fltol@f1+1)^0,f,c
  4326  002E36  3251               	rrcf	___fltol@f1^0,f,c
  4327  002E38  3E5A               	incfsz	___fltol@exp1^0,f,c
  4328  002E3A  EF17  F017         	goto	l3626
  4329  002E3E  EF39  F017         	goto	l3640
  4330  002E42                     l3630:
  4331  002E42  0E1F               	movlw	31
  4332  002E44  645A               	cpfsgt	___fltol@exp1^0,c
  4333  002E46  EF27  F017         	goto	u3251
  4334  002E4A  EF29  F017         	goto	u3250
  4335  002E4E                     u3251:
  4336  002E4E  EF31  F017         	goto	l3638
  4337  002E52                     u3250:
  4338  002E52  EFDA  F016         	goto	l3606
  4339  002E56                     l3636:
  4340  002E56  90D8               	bcf	status,0,c
  4341  002E58  3651               	rlcf	___fltol@f1^0,f,c
  4342  002E5A  3652               	rlcf	(___fltol@f1+1)^0,f,c
  4343  002E5C  3653               	rlcf	(___fltol@f1+2)^0,f,c
  4344  002E5E  3654               	rlcf	(___fltol@f1+3)^0,f,c
  4345  002E60  065A               	decf	___fltol@exp1^0,f,c
  4346  002E62                     l3638:
  4347  002E62  505A               	movf	___fltol@exp1^0,w,c
  4348  002E64  A4D8               	btfss	status,2,c
  4349  002E66  EF37  F017         	goto	u3261
  4350  002E6A  EF39  F017         	goto	u3260
  4351  002E6E                     u3261:
  4352  002E6E  EF2B  F017         	goto	l3636
  4353  002E72                     u3260:
  4354  002E72                     l3640:
  4355  002E72  5059               	movf	___fltol@sign1^0,w,c
  4356  002E74  B4D8               	btfsc	status,2,c
  4357  002E76  EF3F  F017         	goto	u3271
  4358  002E7A  EF41  F017         	goto	u3270
  4359  002E7E                     u3271:
  4360  002E7E  EF49  F017         	goto	l3644
  4361  002E82                     u3270:
  4362  002E82  1E54               	comf	(___fltol@f1+3)^0,f,c
  4363  002E84  1E53               	comf	(___fltol@f1+2)^0,f,c
  4364  002E86  1E52               	comf	(___fltol@f1+1)^0,f,c
  4365  002E88  6C51               	negf	___fltol@f1^0,c
  4366  002E8A  0E00               	movlw	0
  4367  002E8C  2252               	addwfc	(___fltol@f1+1)^0,f,c
  4368  002E8E  2253               	addwfc	(___fltol@f1+2)^0,f,c
  4369  002E90  2254               	addwfc	(___fltol@f1+3)^0,f,c
  4370  002E92                     l3644:
  4371  002E92  C051  F051         	movff	___fltol@f1,?___fltol
  4372  002E96  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  4373  002E9A  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  4374  002E9E  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  4375  002EA2                     l834:
  4376  002EA2  0012               	return		;funcret
  4377  002EA4                     __end_of___fltol:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function ___flmul *****************
  4381 ;; Defined at:
  4382 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  b               4   39[COMRAM] long 
  4385 ;;  a               4   43[COMRAM] long 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  prod            4   58[COMRAM] struct .
  4388 ;;  grs             4   52[COMRAM] unsigned long 
  4389 ;;  temp            2   62[COMRAM] struct .
  4390 ;;  bexp            1   57[COMRAM] unsigned char 
  4391 ;;  aexp            1   56[COMRAM] unsigned char 
  4392 ;;  sign            1   51[COMRAM] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  4   39[COMRAM] unsigned char 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0, prodl, prodh
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;Total ram usage:       25 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; Hardware stack levels required when called: 1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_determine_color_new
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text11
  4417  001856                     __ptext11:
  4418                           	callstack 0
  4419  001856                     ___flmul:
  4420                           	callstack 28
  4421  001856  502B               	movf	(___flmul@b+3)^0,w,c
  4422  001858  0B80               	andlw	128
  4423  00185A  6E34               	movwf	___flmul@sign^0,c
  4424  00185C  502B               	movf	(___flmul@b+3)^0,w,c
  4425  00185E  242B               	addwf	(___flmul@b+3)^0,w,c
  4426  001860  6E3A               	movwf	___flmul@bexp^0,c
  4427  001862  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4428  001864  EF36  F00C         	goto	u3021
  4429  001868  EF38  F00C         	goto	u3020
  4430  00186C                     u3021:
  4431  00186C  EF39  F00C         	goto	l3480
  4432  001870                     u3020:
  4433  001870  803A               	bsf	___flmul@bexp^0,0,c
  4434  001872                     l3480:
  4435  001872  503A               	movf	___flmul@bexp^0,w,c
  4436  001874  B4D8               	btfsc	status,2,c
  4437  001876  EF3F  F00C         	goto	u3031
  4438  00187A  EF41  F00C         	goto	u3030
  4439  00187E                     u3031:
  4440  00187E  EF54  F00C         	goto	l3488
  4441  001882                     u3030:
  4442  001882  283A               	incf	___flmul@bexp^0,w,c
  4443  001884  A4D8               	btfss	status,2,c
  4444  001886  EF47  F00C         	goto	u3041
  4445  00188A  EF49  F00C         	goto	u3040
  4446  00188E                     u3041:
  4447  00188E  EF51  F00C         	goto	l3486
  4448  001892                     u3040:
  4449  001892  0E00               	movlw	0
  4450  001894  6E28               	movwf	___flmul@b^0,c
  4451  001896  0E00               	movlw	0
  4452  001898  6E29               	movwf	(___flmul@b+1)^0,c
  4453  00189A  0E00               	movlw	0
  4454  00189C  6E2A               	movwf	(___flmul@b+2)^0,c
  4455  00189E  0E00               	movlw	0
  4456  0018A0  6E2B               	movwf	(___flmul@b+3)^0,c
  4457  0018A2                     l3486:
  4458  0018A2  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4459  0018A4  EF5C  F00C         	goto	l3490
  4460  0018A8                     l3488:
  4461  0018A8  0E00               	movlw	0
  4462  0018AA  6E28               	movwf	___flmul@b^0,c
  4463  0018AC  0E00               	movlw	0
  4464  0018AE  6E29               	movwf	(___flmul@b+1)^0,c
  4465  0018B0  0E00               	movlw	0
  4466  0018B2  6E2A               	movwf	(___flmul@b+2)^0,c
  4467  0018B4  0E00               	movlw	0
  4468  0018B6  6E2B               	movwf	(___flmul@b+3)^0,c
  4469  0018B8                     l3490:
  4470  0018B8  502F               	movf	(___flmul@a+3)^0,w,c
  4471  0018BA  0B80               	andlw	128
  4472  0018BC  1A34               	xorwf	___flmul@sign^0,f,c
  4473  0018BE  502F               	movf	(___flmul@a+3)^0,w,c
  4474  0018C0  242F               	addwf	(___flmul@a+3)^0,w,c
  4475  0018C2  6E39               	movwf	___flmul@aexp^0,c
  4476  0018C4  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4477  0018C6  EF67  F00C         	goto	u3051
  4478  0018CA  EF69  F00C         	goto	u3050
  4479  0018CE                     u3051:
  4480  0018CE  EF6A  F00C         	goto	l3498
  4481  0018D2                     u3050:
  4482  0018D2  8039               	bsf	___flmul@aexp^0,0,c
  4483  0018D4                     l3498:
  4484  0018D4  5039               	movf	___flmul@aexp^0,w,c
  4485  0018D6  B4D8               	btfsc	status,2,c
  4486  0018D8  EF70  F00C         	goto	u3061
  4487  0018DC  EF72  F00C         	goto	u3060
  4488  0018E0                     u3061:
  4489  0018E0  EF85  F00C         	goto	l3506
  4490  0018E4                     u3060:
  4491  0018E4  2839               	incf	___flmul@aexp^0,w,c
  4492  0018E6  A4D8               	btfss	status,2,c
  4493  0018E8  EF78  F00C         	goto	u3071
  4494  0018EC  EF7A  F00C         	goto	u3070
  4495  0018F0                     u3071:
  4496  0018F0  EF82  F00C         	goto	l3504
  4497  0018F4                     u3070:
  4498  0018F4  0E00               	movlw	0
  4499  0018F6  6E2C               	movwf	___flmul@a^0,c
  4500  0018F8  0E00               	movlw	0
  4501  0018FA  6E2D               	movwf	(___flmul@a+1)^0,c
  4502  0018FC  0E00               	movlw	0
  4503  0018FE  6E2E               	movwf	(___flmul@a+2)^0,c
  4504  001900  0E00               	movlw	0
  4505  001902  6E2F               	movwf	(___flmul@a+3)^0,c
  4506  001904                     l3504:
  4507  001904  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4508  001906  EF8D  F00C         	goto	l1151
  4509  00190A                     l3506:
  4510  00190A  0E00               	movlw	0
  4511  00190C  6E2C               	movwf	___flmul@a^0,c
  4512  00190E  0E00               	movlw	0
  4513  001910  6E2D               	movwf	(___flmul@a+1)^0,c
  4514  001912  0E00               	movlw	0
  4515  001914  6E2E               	movwf	(___flmul@a+2)^0,c
  4516  001916  0E00               	movlw	0
  4517  001918  6E2F               	movwf	(___flmul@a+3)^0,c
  4518  00191A                     l1151:
  4519  00191A  5039               	movf	___flmul@aexp^0,w,c
  4520  00191C  B4D8               	btfsc	status,2,c
  4521  00191E  EF93  F00C         	goto	u3081
  4522  001922  EF95  F00C         	goto	u3080
  4523  001926                     u3081:
  4524  001926  EF9D  F00C         	goto	l3510
  4525  00192A                     u3080:
  4526  00192A  503A               	movf	___flmul@bexp^0,w,c
  4527  00192C  A4D8               	btfss	status,2,c
  4528  00192E  EF9B  F00C         	goto	u3091
  4529  001932  EF9D  F00C         	goto	u3090
  4530  001936                     u3091:
  4531  001936  EFA7  F00C         	goto	l3514
  4532  00193A                     u3090:
  4533  00193A                     l3510:
  4534  00193A  0E00               	movlw	0
  4535  00193C  6E28               	movwf	?___flmul^0,c
  4536  00193E  0E00               	movlw	0
  4537  001940  6E29               	movwf	(?___flmul+1)^0,c
  4538  001942  0E00               	movlw	0
  4539  001944  6E2A               	movwf	(?___flmul+2)^0,c
  4540  001946  0E00               	movlw	0
  4541  001948  6E2B               	movwf	(?___flmul+3)^0,c
  4542  00194A  EF3F  F00E         	goto	l1155
  4543  00194E                     l3514:
  4544  00194E  502E               	movf	(___flmul@a+2)^0,w,c
  4545  001950  0228               	mulwf	___flmul@b^0,c
  4546  001952  CFF3 F03F          	movff	prodl,___flmul@temp
  4547  001956  CFF4 F040          	movff	prodh,___flmul@temp+1
  4548  00195A  503F               	movf	___flmul@temp^0,w,c
  4549  00195C  6E35               	movwf	___flmul@grs^0,c
  4550  00195E  6A36               	clrf	(___flmul@grs+1)^0,c
  4551  001960  6A37               	clrf	(___flmul@grs+2)^0,c
  4552  001962  6A38               	clrf	(___flmul@grs+3)^0,c
  4553  001964  5040               	movf	(___flmul@temp+1)^0,w,c
  4554  001966  6E3B               	movwf	___flmul@prod^0,c
  4555  001968  6A3C               	clrf	(___flmul@prod+1)^0,c
  4556  00196A  6A3D               	clrf	(___flmul@prod+2)^0,c
  4557  00196C  6A3E               	clrf	(___flmul@prod+3)^0,c
  4558  00196E  502D               	movf	(___flmul@a+1)^0,w,c
  4559  001970  0229               	mulwf	(___flmul@b+1)^0,c
  4560  001972  CFF3 F03F          	movff	prodl,___flmul@temp
  4561  001976  CFF4 F040          	movff	prodh,___flmul@temp+1
  4562  00197A  503F               	movf	___flmul@temp^0,w,c
  4563  00197C  2635               	addwf	___flmul@grs^0,f,c
  4564  00197E  0E00               	movlw	0
  4565  001980  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4566  001982  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4567  001984  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4568  001986  5040               	movf	(___flmul@temp+1)^0,w,c
  4569  001988  263B               	addwf	___flmul@prod^0,f,c
  4570  00198A  0E00               	movlw	0
  4571  00198C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4572  00198E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4573  001990  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4574  001992  502C               	movf	___flmul@a^0,w,c
  4575  001994  022A               	mulwf	(___flmul@b+2)^0,c
  4576  001996  CFF3 F03F          	movff	prodl,___flmul@temp
  4577  00199A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4578  00199E  503F               	movf	___flmul@temp^0,w,c
  4579  0019A0  2635               	addwf	___flmul@grs^0,f,c
  4580  0019A2  0E00               	movlw	0
  4581  0019A4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4582  0019A6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4583  0019A8  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4584  0019AA  5040               	movf	(___flmul@temp+1)^0,w,c
  4585  0019AC  263B               	addwf	___flmul@prod^0,f,c
  4586  0019AE  0E00               	movlw	0
  4587  0019B0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4588  0019B2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4589  0019B4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4590  0019B6  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4591  0019BA  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4592  0019BE  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4593  0019C2  6A35               	clrf	___flmul@grs^0,c
  4594  0019C4  502C               	movf	___flmul@a^0,w,c
  4595  0019C6  0229               	mulwf	(___flmul@b+1)^0,c
  4596  0019C8  CFF3 F03F          	movff	prodl,___flmul@temp
  4597  0019CC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4598  0019D0  503F               	movf	___flmul@temp^0,w,c
  4599  0019D2  2635               	addwf	___flmul@grs^0,f,c
  4600  0019D4  5040               	movf	(___flmul@temp+1)^0,w,c
  4601  0019D6  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4602  0019D8  0E00               	movlw	0
  4603  0019DA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4604  0019DC  0E00               	movlw	0
  4605  0019DE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4606  0019E0  502D               	movf	(___flmul@a+1)^0,w,c
  4607  0019E2  0228               	mulwf	___flmul@b^0,c
  4608  0019E4  CFF3 F03F          	movff	prodl,___flmul@temp
  4609  0019E8  CFF4 F040          	movff	prodh,___flmul@temp+1
  4610  0019EC  503F               	movf	___flmul@temp^0,w,c
  4611  0019EE  2635               	addwf	___flmul@grs^0,f,c
  4612  0019F0  5040               	movf	(___flmul@temp+1)^0,w,c
  4613  0019F2  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4614  0019F4  0E00               	movlw	0
  4615  0019F6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4616  0019F8  0E00               	movlw	0
  4617  0019FA  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4618  0019FC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4619  001A00  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4620  001A04  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4621  001A08  6A35               	clrf	___flmul@grs^0,c
  4622  001A0A  502C               	movf	___flmul@a^0,w,c
  4623  001A0C  0228               	mulwf	___flmul@b^0,c
  4624  001A0E  CFF3 F03F          	movff	prodl,___flmul@temp
  4625  001A12  CFF4 F040          	movff	prodh,___flmul@temp+1
  4626  001A16  503F               	movf	___flmul@temp^0,w,c
  4627  001A18  2635               	addwf	___flmul@grs^0,f,c
  4628  001A1A  5040               	movf	(___flmul@temp+1)^0,w,c
  4629  001A1C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4630  001A1E  0E00               	movlw	0
  4631  001A20  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4632  001A22  0E00               	movlw	0
  4633  001A24  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4634  001A26  502E               	movf	(___flmul@a+2)^0,w,c
  4635  001A28  0229               	mulwf	(___flmul@b+1)^0,c
  4636  001A2A  CFF3 F03F          	movff	prodl,___flmul@temp
  4637  001A2E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4638  001A32  503F               	movf	___flmul@temp^0,w,c
  4639  001A34  263B               	addwf	___flmul@prod^0,f,c
  4640  001A36  5040               	movf	(___flmul@temp+1)^0,w,c
  4641  001A38  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4642  001A3A  0E00               	movlw	0
  4643  001A3C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4644  001A3E  0E00               	movlw	0
  4645  001A40  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4646  001A42  502D               	movf	(___flmul@a+1)^0,w,c
  4647  001A44  022A               	mulwf	(___flmul@b+2)^0,c
  4648  001A46  CFF3 F03F          	movff	prodl,___flmul@temp
  4649  001A4A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4650  001A4E  503F               	movf	___flmul@temp^0,w,c
  4651  001A50  263B               	addwf	___flmul@prod^0,f,c
  4652  001A52  5040               	movf	(___flmul@temp+1)^0,w,c
  4653  001A54  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4654  001A56  0E00               	movlw	0
  4655  001A58  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4656  001A5A  0E00               	movlw	0
  4657  001A5C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4658  001A5E  502E               	movf	(___flmul@a+2)^0,w,c
  4659  001A60  022A               	mulwf	(___flmul@b+2)^0,c
  4660  001A62  CFF3 F03F          	movff	prodl,___flmul@temp
  4661  001A66  CFF4 F040          	movff	prodh,___flmul@temp+1
  4662  001A6A  503F               	movf	___flmul@temp^0,w,c
  4663  001A6C  6E30               	movwf	??___flmul^0,c
  4664  001A6E  5040               	movf	(___flmul@temp+1)^0,w,c
  4665  001A70  6E31               	movwf	(??___flmul+1)^0,c
  4666  001A72  6A32               	clrf	(??___flmul+2)^0,c
  4667  001A74  6A33               	clrf	(??___flmul+3)^0,c
  4668  001A76  C032  F033         	movff	??___flmul+2,??___flmul+3
  4669  001A7A  C031  F032         	movff	??___flmul+1,??___flmul+2
  4670  001A7E  C030  F031         	movff	??___flmul,??___flmul+1
  4671  001A82  6A30               	clrf	??___flmul^0,c
  4672  001A84  5030               	movf	??___flmul^0,w,c
  4673  001A86  263B               	addwf	___flmul@prod^0,f,c
  4674  001A88  5031               	movf	(??___flmul+1)^0,w,c
  4675  001A8A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4676  001A8C  5032               	movf	(??___flmul+2)^0,w,c
  4677  001A8E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4678  001A90  5033               	movf	(??___flmul+3)^0,w,c
  4679  001A92  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4680  001A94  C035  F030         	movff	___flmul@grs,??___flmul
  4681  001A98  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4682  001A9C  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4683  001AA0  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4684  001AA4  0E19               	movlw	25
  4685  001AA6  EF5A  F00D         	goto	u3100
  4686  001AAA                     u3105:
  4687  001AAA  90D8               	bcf	status,0,c
  4688  001AAC  3233               	rrcf	(??___flmul+3)^0,f,c
  4689  001AAE  3232               	rrcf	(??___flmul+2)^0,f,c
  4690  001AB0  3231               	rrcf	(??___flmul+1)^0,f,c
  4691  001AB2  3230               	rrcf	??___flmul^0,f,c
  4692  001AB4                     u3100:
  4693  001AB4  2EE8               	decfsz	wreg,f,c
  4694  001AB6  EF55  F00D         	goto	u3105
  4695  001ABA  5030               	movf	??___flmul^0,w,c
  4696  001ABC  263B               	addwf	___flmul@prod^0,f,c
  4697  001ABE  5031               	movf	(??___flmul+1)^0,w,c
  4698  001AC0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4699  001AC2  5032               	movf	(??___flmul+2)^0,w,c
  4700  001AC4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4701  001AC6  5033               	movf	(??___flmul+3)^0,w,c
  4702  001AC8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4703  001ACA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4704  001ACE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4705  001AD2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4706  001AD6  6A35               	clrf	___flmul@grs^0,c
  4707  001AD8  5039               	movf	___flmul@aexp^0,w,c
  4708  001ADA  C03A  F030         	movff	___flmul@bexp,??___flmul
  4709  001ADE  6A31               	clrf	(??___flmul+1)^0,c
  4710  001AE0  2630               	addwf	??___flmul^0,f,c
  4711  001AE2  0E00               	movlw	0
  4712  001AE4  2231               	addwfc	(??___flmul+1)^0,f,c
  4713  001AE6  0E82               	movlw	130
  4714  001AE8  2430               	addwf	??___flmul^0,w,c
  4715  001AEA  6E3F               	movwf	___flmul@temp^0,c
  4716  001AEC  0EFF               	movlw	255
  4717  001AEE  2031               	addwfc	(??___flmul+1)^0,w,c
  4718  001AF0  6E40               	movwf	(___flmul@temp+1)^0,c
  4719  001AF2  EF90  F00D         	goto	l3562
  4720  001AF6                     l3556:
  4721  001AF6  90D8               	bcf	status,0,c
  4722  001AF8  363B               	rlcf	___flmul@prod^0,f,c
  4723  001AFA  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4724  001AFC  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4725  001AFE  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4726  001B00  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4727  001B02  EF85  F00D         	goto	u3111
  4728  001B06  EF87  F00D         	goto	u3110
  4729  001B0A                     u3111:
  4730  001B0A  EF88  F00D         	goto	l1158
  4731  001B0E                     u3110:
  4732  001B0E  803B               	bsf	___flmul@prod^0,0,c
  4733  001B10                     l1158:
  4734  001B10  90D8               	bcf	status,0,c
  4735  001B12  3635               	rlcf	___flmul@grs^0,f,c
  4736  001B14  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4737  001B16  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4738  001B18  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4739  001B1A  063F               	decf	___flmul@temp^0,f,c
  4740  001B1C  A0D8               	btfss	status,0,c
  4741  001B1E  0640               	decf	(___flmul@temp+1)^0,f,c
  4742  001B20                     l3562:
  4743  001B20  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4744  001B22  EF95  F00D         	goto	u3121
  4745  001B26  EF97  F00D         	goto	u3120
  4746  001B2A                     u3121:
  4747  001B2A  EF7B  F00D         	goto	l3556
  4748  001B2E                     u3120:
  4749  001B2E  0E00               	movlw	0
  4750  001B30  6E39               	movwf	___flmul@aexp^0,c
  4751  001B32  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4752  001B34  EF9E  F00D         	goto	u3131
  4753  001B38  EFA0  F00D         	goto	u3130
  4754  001B3C                     u3131:
  4755  001B3C  EFC4  F00D         	goto	l1160
  4756  001B40                     u3130:
  4757  001B40  0EFF               	movlw	255
  4758  001B42  1435               	andwf	___flmul@grs^0,w,c
  4759  001B44  6E30               	movwf	??___flmul^0,c
  4760  001B46  0EFF               	movlw	255
  4761  001B48  1436               	andwf	(___flmul@grs+1)^0,w,c
  4762  001B4A  6E31               	movwf	(??___flmul+1)^0,c
  4763  001B4C  0EFF               	movlw	255
  4764  001B4E  1437               	andwf	(___flmul@grs+2)^0,w,c
  4765  001B50  6E32               	movwf	(??___flmul+2)^0,c
  4766  001B52  0E7F               	movlw	127
  4767  001B54  1438               	andwf	(___flmul@grs+3)^0,w,c
  4768  001B56  6E33               	movwf	(??___flmul+3)^0,c
  4769  001B58  5030               	movf	??___flmul^0,w,c
  4770  001B5A  1031               	iorwf	(??___flmul+1)^0,w,c
  4771  001B5C  1032               	iorwf	(??___flmul+2)^0,w,c
  4772  001B5E  1033               	iorwf	(??___flmul+3)^0,w,c
  4773  001B60  B4D8               	btfsc	status,2,c
  4774  001B62  EFB5  F00D         	goto	u3141
  4775  001B66  EFB7  F00D         	goto	u3140
  4776  001B6A                     u3141:
  4777  001B6A  EFBB  F00D         	goto	l1161
  4778  001B6E                     u3140:
  4779  001B6E                     l3570:
  4780  001B6E  0E01               	movlw	1
  4781  001B70  6E39               	movwf	___flmul@aexp^0,c
  4782  001B72  EFC4  F00D         	goto	l1160
  4783  001B76                     l1161:
  4784  001B76  A03B               	btfss	___flmul@prod^0,0,c
  4785  001B78  EFC0  F00D         	goto	u3151
  4786  001B7C  EFC2  F00D         	goto	u3150
  4787  001B80                     u3151:
  4788  001B80  EFC4  F00D         	goto	l1160
  4789  001B84                     u3150:
  4790  001B84  EFB7  F00D         	goto	l3570
  4791  001B88                     l1160:
  4792  001B88  5039               	movf	___flmul@aexp^0,w,c
  4793  001B8A  B4D8               	btfsc	status,2,c
  4794  001B8C  EFCA  F00D         	goto	u3161
  4795  001B90  EFCC  F00D         	goto	u3160
  4796  001B94                     u3161:
  4797  001B94  EFF0  F00D         	goto	l3582
  4798  001B98                     u3160:
  4799  001B98  0E01               	movlw	1
  4800  001B9A  263B               	addwf	___flmul@prod^0,f,c
  4801  001B9C  0E00               	movlw	0
  4802  001B9E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4803  001BA0  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4804  001BA2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4805  001BA4  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4806  001BA6  EFD7  F00D         	goto	u3171
  4807  001BAA  EFD9  F00D         	goto	u3170
  4808  001BAE                     u3171:
  4809  001BAE  EFF0  F00D         	goto	l3582
  4810  001BB2                     u3170:
  4811  001BB2  C03B  F030         	movff	___flmul@prod,??___flmul
  4812  001BB6  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4813  001BBA  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4814  001BBE  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4815  001BC2  3433               	rlcf	(??___flmul+3)^0,w,c
  4816  001BC4  3233               	rrcf	(??___flmul+3)^0,f,c
  4817  001BC6  3232               	rrcf	(??___flmul+2)^0,f,c
  4818  001BC8  3231               	rrcf	(??___flmul+1)^0,f,c
  4819  001BCA  3230               	rrcf	??___flmul^0,f,c
  4820  001BCC  C030  F03B         	movff	??___flmul,___flmul@prod
  4821  001BD0  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4822  001BD4  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4823  001BD8  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4824  001BDC  4A3F               	infsnz	___flmul@temp^0,f,c
  4825  001BDE  2A40               	incf	(___flmul@temp+1)^0,f,c
  4826  001BE0                     l3582:
  4827  001BE0  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4828  001BE2  EFFB  F00D         	goto	u3181
  4829  001BE6  5040               	movf	(___flmul@temp+1)^0,w,c
  4830  001BE8  E108               	bnz	u3180
  4831  001BEA  283F               	incf	___flmul@temp^0,w,c
  4832  001BEC  A0D8               	btfss	status,0,c
  4833  001BEE  EFFB  F00D         	goto	u3181
  4834  001BF2  EFFD  F00D         	goto	u3180
  4835  001BF6                     u3181:
  4836  001BF6  EF07  F00E         	goto	l3586
  4837  001BFA                     u3180:
  4838  001BFA  0E00               	movlw	0
  4839  001BFC  6E3B               	movwf	___flmul@prod^0,c
  4840  001BFE  0E00               	movlw	0
  4841  001C00  6E3C               	movwf	(___flmul@prod+1)^0,c
  4842  001C02  0E80               	movlw	128
  4843  001C04  6E3D               	movwf	(___flmul@prod+2)^0,c
  4844  001C06  0E7F               	movlw	127
  4845  001C08  6E3E               	movwf	(___flmul@prod+3)^0,c
  4846  001C0A  EF35  F00E         	goto	l3598
  4847  001C0E                     l3586:
  4848  001C0E  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4849  001C10  EF14  F00E         	goto	u3190
  4850  001C14  5040               	movf	(___flmul@temp+1)^0,w,c
  4851  001C16  E106               	bnz	u3191
  4852  001C18  043F               	decf	___flmul@temp^0,w,c
  4853  001C1A  B0D8               	btfsc	status,0,c
  4854  001C1C  EF12  F00E         	goto	u3191
  4855  001C20  EF14  F00E         	goto	u3190
  4856  001C24                     u3191:
  4857  001C24  EF20  F00E         	goto	l1168
  4858  001C28                     u3190:
  4859  001C28  0E00               	movlw	0
  4860  001C2A  6E3B               	movwf	___flmul@prod^0,c
  4861  001C2C  0E00               	movlw	0
  4862  001C2E  6E3C               	movwf	(___flmul@prod+1)^0,c
  4863  001C30  0E00               	movlw	0
  4864  001C32  6E3D               	movwf	(___flmul@prod+2)^0,c
  4865  001C34  0E00               	movlw	0
  4866  001C36  6E3E               	movwf	(___flmul@prod+3)^0,c
  4867  001C38  0E00               	movlw	0
  4868  001C3A  6E34               	movwf	___flmul@sign^0,c
  4869  001C3C  EF35  F00E         	goto	l3598
  4870  001C40                     l1168:
  4871  001C40  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4872  001C44  0EFF               	movlw	255
  4873  001C46  163B               	andwf	___flmul@prod^0,f,c
  4874  001C48  0EFF               	movlw	255
  4875  001C4A  163C               	andwf	(___flmul@prod+1)^0,f,c
  4876  001C4C  0E7F               	movlw	127
  4877  001C4E  163D               	andwf	(___flmul@prod+2)^0,f,c
  4878  001C50  0E00               	movlw	0
  4879  001C52  163E               	andwf	(___flmul@prod+3)^0,f,c
  4880  001C54  A03A               	btfss	___flmul@bexp^0,0,c
  4881  001C56  EF2F  F00E         	goto	u3201
  4882  001C5A  EF31  F00E         	goto	u3200
  4883  001C5E                     u3201:
  4884  001C5E  EF32  F00E         	goto	l3596
  4885  001C62                     u3200:
  4886  001C62  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4887  001C64                     l3596:
  4888  001C64  90D8               	bcf	status,0,c
  4889  001C66  303A               	rrcf	___flmul@bexp^0,w,c
  4890  001C68  6E3E               	movwf	(___flmul@prod+3)^0,c
  4891  001C6A                     l3598:
  4892  001C6A  5034               	movf	___flmul@sign^0,w,c
  4893  001C6C  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4894  001C6E  C03B  F028         	movff	___flmul@prod,?___flmul
  4895  001C72  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4896  001C76  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4897  001C7A  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4898  001C7E                     l1155:
  4899  001C7E  0012               	return		;funcret
  4900  001C80                     __end_of___flmul:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function ___fldiv *****************
  4904 ;; Defined at:
  4905 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  b               4   14[COMRAM] unsigned char 
  4908 ;;  a               4   18[COMRAM] unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  grs             4   33[COMRAM] unsigned long 
  4911 ;;  rem             4   26[COMRAM] unsigned long 
  4912 ;;  new_exp         2   31[COMRAM] short 
  4913 ;;  aexp            1   38[COMRAM] unsigned char 
  4914 ;;  bexp            1   37[COMRAM] unsigned char 
  4915 ;;  sign            1   30[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  4   14[COMRAM] unsigned char 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;Total ram usage:       25 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_determine_color_new
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text12
  4940  002048                     __ptext12:
  4941                           	callstack 0
  4942  002048                     ___fldiv:
  4943                           	callstack 28
  4944  002048  5012               	movf	(___fldiv@b+3)^0,w,c
  4945  00204A  0B80               	andlw	128
  4946  00204C  6E1F               	movwf	___fldiv@sign^0,c
  4947  00204E  5012               	movf	(___fldiv@b+3)^0,w,c
  4948  002050  2412               	addwf	(___fldiv@b+3)^0,w,c
  4949  002052  6E26               	movwf	___fldiv@bexp^0,c
  4950  002054  AE11               	btfss	(___fldiv@b+2)^0,7,c
  4951  002056  EF2F  F010         	goto	u2791
  4952  00205A  EF31  F010         	goto	u2790
  4953  00205E                     u2791:
  4954  00205E  EF32  F010         	goto	l3342
  4955  002062                     u2790:
  4956  002062  8026               	bsf	___fldiv@bexp^0,0,c
  4957  002064                     l3342:
  4958  002064  5026               	movf	___fldiv@bexp^0,w,c
  4959  002066  B4D8               	btfsc	status,2,c
  4960  002068  EF38  F010         	goto	u2801
  4961  00206C  EF3A  F010         	goto	u2800
  4962  002070                     u2801:
  4963  002070  EF4F  F010         	goto	l3352
  4964  002074                     u2800:
  4965  002074  2826               	incf	___fldiv@bexp^0,w,c
  4966  002076  A4D8               	btfss	status,2,c
  4967  002078  EF40  F010         	goto	u2811
  4968  00207C  EF42  F010         	goto	u2810
  4969  002080                     u2811:
  4970  002080  EF4A  F010         	goto	l3348
  4971  002084                     u2810:
  4972  002084  0E00               	movlw	0
  4973  002086  6E0F               	movwf	___fldiv@b^0,c
  4974  002088  0E00               	movlw	0
  4975  00208A  6E10               	movwf	(___fldiv@b+1)^0,c
  4976  00208C  0E00               	movlw	0
  4977  00208E  6E11               	movwf	(___fldiv@b+2)^0,c
  4978  002090  0E00               	movlw	0
  4979  002092  6E12               	movwf	(___fldiv@b+3)^0,c
  4980  002094                     l3348:
  4981  002094  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4982  002096  0E00               	movlw	0
  4983  002098  6E12               	movwf	(___fldiv@b+3)^0,c
  4984  00209A  EF57  F010         	goto	l3354
  4985  00209E                     l3352:
  4986  00209E  0E00               	movlw	0
  4987  0020A0  6E0F               	movwf	___fldiv@b^0,c
  4988  0020A2  0E00               	movlw	0
  4989  0020A4  6E10               	movwf	(___fldiv@b+1)^0,c
  4990  0020A6  0E00               	movlw	0
  4991  0020A8  6E11               	movwf	(___fldiv@b+2)^0,c
  4992  0020AA  0E00               	movlw	0
  4993  0020AC  6E12               	movwf	(___fldiv@b+3)^0,c
  4994  0020AE                     l3354:
  4995  0020AE  5016               	movf	(___fldiv@a+3)^0,w,c
  4996  0020B0  0B80               	andlw	128
  4997  0020B2  1A1F               	xorwf	___fldiv@sign^0,f,c
  4998  0020B4  5016               	movf	(___fldiv@a+3)^0,w,c
  4999  0020B6  2416               	addwf	(___fldiv@a+3)^0,w,c
  5000  0020B8  6E27               	movwf	___fldiv@aexp^0,c
  5001  0020BA  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5002  0020BC  EF62  F010         	goto	u2821
  5003  0020C0  EF64  F010         	goto	u2820
  5004  0020C4                     u2821:
  5005  0020C4  EF65  F010         	goto	l3362
  5006  0020C8                     u2820:
  5007  0020C8  8027               	bsf	___fldiv@aexp^0,0,c
  5008  0020CA                     l3362:
  5009  0020CA  5027               	movf	___fldiv@aexp^0,w,c
  5010  0020CC  B4D8               	btfsc	status,2,c
  5011  0020CE  EF6B  F010         	goto	u2831
  5012  0020D2  EF6D  F010         	goto	u2830
  5013  0020D6                     u2831:
  5014  0020D6  EF82  F010         	goto	l3372
  5015  0020DA                     u2830:
  5016  0020DA  2827               	incf	___fldiv@aexp^0,w,c
  5017  0020DC  A4D8               	btfss	status,2,c
  5018  0020DE  EF73  F010         	goto	u2841
  5019  0020E2  EF75  F010         	goto	u2840
  5020  0020E6                     u2841:
  5021  0020E6  EF7D  F010         	goto	l3368
  5022  0020EA                     u2840:
  5023  0020EA  0E00               	movlw	0
  5024  0020EC  6E13               	movwf	___fldiv@a^0,c
  5025  0020EE  0E00               	movlw	0
  5026  0020F0  6E14               	movwf	(___fldiv@a+1)^0,c
  5027  0020F2  0E00               	movlw	0
  5028  0020F4  6E15               	movwf	(___fldiv@a+2)^0,c
  5029  0020F6  0E00               	movlw	0
  5030  0020F8  6E16               	movwf	(___fldiv@a+3)^0,c
  5031  0020FA                     l3368:
  5032  0020FA  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5033  0020FC  0E00               	movlw	0
  5034  0020FE  6E16               	movwf	(___fldiv@a+3)^0,c
  5035  002100  EF8A  F010         	goto	l3374
  5036  002104                     l3372:
  5037  002104  0E00               	movlw	0
  5038  002106  6E13               	movwf	___fldiv@a^0,c
  5039  002108  0E00               	movlw	0
  5040  00210A  6E14               	movwf	(___fldiv@a+1)^0,c
  5041  00210C  0E00               	movlw	0
  5042  00210E  6E15               	movwf	(___fldiv@a+2)^0,c
  5043  002110  0E00               	movlw	0
  5044  002112  6E16               	movwf	(___fldiv@a+3)^0,c
  5045  002114                     l3374:
  5046  002114  5013               	movf	___fldiv@a^0,w,c
  5047  002116  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5048  002118  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5049  00211A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5050  00211C  A4D8               	btfss	status,2,c
  5051  00211E  EF93  F010         	goto	u2851
  5052  002122  EF95  F010         	goto	u2850
  5053  002126                     u2851:
  5054  002126  EFAD  F010         	goto	l3386
  5055  00212A                     u2850:
  5056  00212A  0E00               	movlw	0
  5057  00212C  6E0F               	movwf	___fldiv@b^0,c
  5058  00212E  0E00               	movlw	0
  5059  002130  6E10               	movwf	(___fldiv@b+1)^0,c
  5060  002132  0E00               	movlw	0
  5061  002134  6E11               	movwf	(___fldiv@b+2)^0,c
  5062  002136  0E00               	movlw	0
  5063  002138  6E12               	movwf	(___fldiv@b+3)^0,c
  5064  00213A  0E80               	movlw	128
  5065  00213C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5066  00213E  0E7F               	movlw	127
  5067  002140  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5068  002142                     l3380:
  5069  002142  501F               	movf	___fldiv@sign^0,w,c
  5070  002144  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5071  002146  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5072  00214A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5073  00214E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5074  002152  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5075  002156  EFF0  F011         	goto	l1119
  5076  00215A                     l3386:
  5077  00215A  5026               	movf	___fldiv@bexp^0,w,c
  5078  00215C  A4D8               	btfss	status,2,c
  5079  00215E  EFB3  F010         	goto	u2861
  5080  002162  EFB5  F010         	goto	u2860
  5081  002166                     u2861:
  5082  002166  EFBF  F010         	goto	l3394
  5083  00216A                     u2860:
  5084  00216A  0E00               	movlw	0
  5085  00216C  6E0F               	movwf	?___fldiv^0,c
  5086  00216E  0E00               	movlw	0
  5087  002170  6E10               	movwf	(?___fldiv+1)^0,c
  5088  002172  0E00               	movlw	0
  5089  002174  6E11               	movwf	(?___fldiv+2)^0,c
  5090  002176  0E00               	movlw	0
  5091  002178  6E12               	movwf	(?___fldiv+3)^0,c
  5092  00217A  EFF0  F011         	goto	l1119
  5093  00217E                     l3394:
  5094  00217E  5027               	movf	___fldiv@aexp^0,w,c
  5095  002180  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5096  002184  6A18               	clrf	(??___fldiv+1)^0,c
  5097  002186  5E17               	subwf	??___fldiv^0,f,c
  5098  002188  0E00               	movlw	0
  5099  00218A  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5100  00218C  0E7F               	movlw	127
  5101  00218E  2417               	addwf	??___fldiv^0,w,c
  5102  002190  6E20               	movwf	___fldiv@new_exp^0,c
  5103  002192  0E00               	movlw	0
  5104  002194  2018               	addwfc	(??___fldiv+1)^0,w,c
  5105  002196  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5106  002198  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5107  00219C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5108  0021A0  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5109  0021A4  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5110  0021A8  0E00               	movlw	0
  5111  0021AA  6E0F               	movwf	___fldiv@b^0,c
  5112  0021AC  0E00               	movlw	0
  5113  0021AE  6E10               	movwf	(___fldiv@b+1)^0,c
  5114  0021B0  0E00               	movlw	0
  5115  0021B2  6E11               	movwf	(___fldiv@b+2)^0,c
  5116  0021B4  0E00               	movlw	0
  5117  0021B6  6E12               	movwf	(___fldiv@b+3)^0,c
  5118  0021B8  0E00               	movlw	0
  5119  0021BA  6E22               	movwf	___fldiv@grs^0,c
  5120  0021BC  0E00               	movlw	0
  5121  0021BE  6E23               	movwf	(___fldiv@grs+1)^0,c
  5122  0021C0  0E00               	movlw	0
  5123  0021C2  6E24               	movwf	(___fldiv@grs+2)^0,c
  5124  0021C4  0E00               	movlw	0
  5125  0021C6  6E25               	movwf	(___fldiv@grs+3)^0,c
  5126  0021C8  0E00               	movlw	0
  5127  0021CA  6E27               	movwf	___fldiv@aexp^0,c
  5128  0021CC  EF20  F011         	goto	l1121
  5129  0021D0                     l3404:
  5130  0021D0  5027               	movf	___fldiv@aexp^0,w,c
  5131  0021D2  B4D8               	btfsc	status,2,c
  5132  0021D4  EFEE  F010         	goto	u2871
  5133  0021D8  EFF0  F010         	goto	u2870
  5134  0021DC                     u2871:
  5135  0021DC  EF07  F011         	goto	l3412
  5136  0021E0                     u2870:
  5137  0021E0  90D8               	bcf	status,0,c
  5138  0021E2  361B               	rlcf	___fldiv@rem^0,f,c
  5139  0021E4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5140  0021E6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5141  0021E8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5142  0021EA  90D8               	bcf	status,0,c
  5143  0021EC  360F               	rlcf	___fldiv@b^0,f,c
  5144  0021EE  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5145  0021F0  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5146  0021F2  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5147  0021F4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5148  0021F6  EFFF  F010         	goto	u2881
  5149  0021FA  EF01  F011         	goto	u2880
  5150  0021FE                     u2881:
  5151  0021FE  EF02  F011         	goto	l1124
  5152  002202                     u2880:
  5153  002202  800F               	bsf	___fldiv@b^0,0,c
  5154  002204                     l1124:
  5155  002204  90D8               	bcf	status,0,c
  5156  002206  3622               	rlcf	___fldiv@grs^0,f,c
  5157  002208  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5158  00220A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5159  00220C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5160  00220E                     l3412:
  5161  00220E  5013               	movf	___fldiv@a^0,w,c
  5162  002210  5C1B               	subwf	___fldiv@rem^0,w,c
  5163  002212  5014               	movf	(___fldiv@a+1)^0,w,c
  5164  002214  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5165  002216  5015               	movf	(___fldiv@a+2)^0,w,c
  5166  002218  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5167  00221A  5016               	movf	(___fldiv@a+3)^0,w,c
  5168  00221C  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5169  00221E  A0D8               	btfss	status,0,c
  5170  002220  EF14  F011         	goto	u2891
  5171  002224  EF16  F011         	goto	u2890
  5172  002228                     u2891:
  5173  002228  EF1F  F011         	goto	l3418
  5174  00222C                     u2890:
  5175  00222C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5176  00222E  5013               	movf	___fldiv@a^0,w,c
  5177  002230  5E1B               	subwf	___fldiv@rem^0,f,c
  5178  002232  5014               	movf	(___fldiv@a+1)^0,w,c
  5179  002234  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5180  002236  5015               	movf	(___fldiv@a+2)^0,w,c
  5181  002238  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5182  00223A  5016               	movf	(___fldiv@a+3)^0,w,c
  5183  00223C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5184  00223E                     l3418:
  5185  00223E  2A27               	incf	___fldiv@aexp^0,f,c
  5186  002240                     l1121:
  5187  002240  0E19               	movlw	25
  5188  002242  6427               	cpfsgt	___fldiv@aexp^0,c
  5189  002244  EF26  F011         	goto	u2901
  5190  002248  EF28  F011         	goto	u2900
  5191  00224C                     u2901:
  5192  00224C  EFE8  F010         	goto	l3404
  5193  002250                     u2900:
  5194  002250  501B               	movf	___fldiv@rem^0,w,c
  5195  002252  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5196  002254  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5197  002256  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5198  002258  B4D8               	btfsc	status,2,c
  5199  00225A  EF31  F011         	goto	u2911
  5200  00225E  EF33  F011         	goto	u2910
  5201  002262                     u2911:
  5202  002262  EF4B  F011         	goto	l3430
  5203  002266                     u2910:
  5204  002266  8022               	bsf	___fldiv@grs^0,0,c
  5205  002268  EF4B  F011         	goto	l3430
  5206  00226C                     l3424:
  5207  00226C  90D8               	bcf	status,0,c
  5208  00226E  360F               	rlcf	___fldiv@b^0,f,c
  5209  002270  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5210  002272  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5211  002274  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5212  002276  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5213  002278  EF40  F011         	goto	u2921
  5214  00227C  EF42  F011         	goto	u2920
  5215  002280                     u2921:
  5216  002280  EF43  F011         	goto	l1130
  5217  002284                     u2920:
  5218  002284  800F               	bsf	___fldiv@b^0,0,c
  5219  002286                     l1130:
  5220  002286  90D8               	bcf	status,0,c
  5221  002288  3622               	rlcf	___fldiv@grs^0,f,c
  5222  00228A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5223  00228C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5224  00228E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5225  002290  0620               	decf	___fldiv@new_exp^0,f,c
  5226  002292  A0D8               	btfss	status,0,c
  5227  002294  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5228  002296                     l3430:
  5229  002296  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5230  002298  EF50  F011         	goto	u2931
  5231  00229C  EF52  F011         	goto	u2930
  5232  0022A0                     u2931:
  5233  0022A0  EF36  F011         	goto	l3424
  5234  0022A4                     u2930:
  5235  0022A4  0E00               	movlw	0
  5236  0022A6  6E27               	movwf	___fldiv@aexp^0,c
  5237  0022A8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5238  0022AA  EF59  F011         	goto	u2941
  5239  0022AE  EF5B  F011         	goto	u2940
  5240  0022B2                     u2941:
  5241  0022B2  EF7F  F011         	goto	l1132
  5242  0022B6                     u2940:
  5243  0022B6  0EFF               	movlw	255
  5244  0022B8  1422               	andwf	___fldiv@grs^0,w,c
  5245  0022BA  6E17               	movwf	??___fldiv^0,c
  5246  0022BC  0EFF               	movlw	255
  5247  0022BE  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5248  0022C0  6E18               	movwf	(??___fldiv+1)^0,c
  5249  0022C2  0EFF               	movlw	255
  5250  0022C4  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5251  0022C6  6E19               	movwf	(??___fldiv+2)^0,c
  5252  0022C8  0E7F               	movlw	127
  5253  0022CA  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5254  0022CC  6E1A               	movwf	(??___fldiv+3)^0,c
  5255  0022CE  5017               	movf	??___fldiv^0,w,c
  5256  0022D0  1018               	iorwf	(??___fldiv+1)^0,w,c
  5257  0022D2  1019               	iorwf	(??___fldiv+2)^0,w,c
  5258  0022D4  101A               	iorwf	(??___fldiv+3)^0,w,c
  5259  0022D6  B4D8               	btfsc	status,2,c
  5260  0022D8  EF70  F011         	goto	u2951
  5261  0022DC  EF72  F011         	goto	u2950
  5262  0022E0                     u2951:
  5263  0022E0  EF76  F011         	goto	l1133
  5264  0022E4                     u2950:
  5265  0022E4                     l3438:
  5266  0022E4  0E01               	movlw	1
  5267  0022E6  6E27               	movwf	___fldiv@aexp^0,c
  5268  0022E8  EF7F  F011         	goto	l1132
  5269  0022EC                     l1133:
  5270  0022EC  A00F               	btfss	___fldiv@b^0,0,c
  5271  0022EE  EF7B  F011         	goto	u2961
  5272  0022F2  EF7D  F011         	goto	u2960
  5273  0022F6                     u2961:
  5274  0022F6  EF7F  F011         	goto	l1132
  5275  0022FA                     u2960:
  5276  0022FA  EF72  F011         	goto	l3438
  5277  0022FE                     l1132:
  5278  0022FE  5027               	movf	___fldiv@aexp^0,w,c
  5279  002300  B4D8               	btfsc	status,2,c
  5280  002302  EF85  F011         	goto	u2971
  5281  002306  EF87  F011         	goto	u2970
  5282  00230A                     u2971:
  5283  00230A  EFAB  F011         	goto	l3450
  5284  00230E                     u2970:
  5285  00230E  0E01               	movlw	1
  5286  002310  260F               	addwf	___fldiv@b^0,f,c
  5287  002312  0E00               	movlw	0
  5288  002314  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5289  002316  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5290  002318  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5291  00231A  A012               	btfss	(___fldiv@b+3)^0,0,c
  5292  00231C  EF92  F011         	goto	u2981
  5293  002320  EF94  F011         	goto	u2980
  5294  002324                     u2981:
  5295  002324  EFAB  F011         	goto	l3450
  5296  002328                     u2980:
  5297  002328  C00F  F017         	movff	___fldiv@b,??___fldiv
  5298  00232C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5299  002330  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5300  002334  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5301  002338  341A               	rlcf	(??___fldiv+3)^0,w,c
  5302  00233A  321A               	rrcf	(??___fldiv+3)^0,f,c
  5303  00233C  3219               	rrcf	(??___fldiv+2)^0,f,c
  5304  00233E  3218               	rrcf	(??___fldiv+1)^0,f,c
  5305  002340  3217               	rrcf	??___fldiv^0,f,c
  5306  002342  C017  F00F         	movff	??___fldiv,___fldiv@b
  5307  002346  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5308  00234A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5309  00234E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5310  002352  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5311  002354  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5312  002356                     l3450:
  5313  002356  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5314  002358  EFB6  F011         	goto	u2991
  5315  00235C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5316  00235E  E108               	bnz	u2990
  5317  002360  2820               	incf	___fldiv@new_exp^0,w,c
  5318  002362  A0D8               	btfss	status,0,c
  5319  002364  EFB6  F011         	goto	u2991
  5320  002368  EFB8  F011         	goto	u2990
  5321  00236C                     u2991:
  5322  00236C  EFC3  F011         	goto	l3454
  5323  002370                     u2990:
  5324  002370  0E00               	movlw	0
  5325  002372  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5326  002374  6820               	setf	___fldiv@new_exp^0,c
  5327  002376  0E00               	movlw	0
  5328  002378  6E0F               	movwf	___fldiv@b^0,c
  5329  00237A  0E00               	movlw	0
  5330  00237C  6E10               	movwf	(___fldiv@b+1)^0,c
  5331  00237E  0E00               	movlw	0
  5332  002380  6E11               	movwf	(___fldiv@b+2)^0,c
  5333  002382  0E00               	movlw	0
  5334  002384  6E12               	movwf	(___fldiv@b+3)^0,c
  5335  002386                     l3454:
  5336  002386  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5337  002388  EFD0  F011         	goto	u3000
  5338  00238C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5339  00238E  E106               	bnz	u3001
  5340  002390  0420               	decf	___fldiv@new_exp^0,w,c
  5341  002392  B0D8               	btfsc	status,0,c
  5342  002394  EFCE  F011         	goto	u3001
  5343  002398  EFD0  F011         	goto	u3000
  5344  00239C                     u3001:
  5345  00239C  EFDE  F011         	goto	l3458
  5346  0023A0                     u3000:
  5347  0023A0  0E00               	movlw	0
  5348  0023A2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5349  0023A4  0E00               	movlw	0
  5350  0023A6  6E20               	movwf	___fldiv@new_exp^0,c
  5351  0023A8  0E00               	movlw	0
  5352  0023AA  6E0F               	movwf	___fldiv@b^0,c
  5353  0023AC  0E00               	movlw	0
  5354  0023AE  6E10               	movwf	(___fldiv@b+1)^0,c
  5355  0023B0  0E00               	movlw	0
  5356  0023B2  6E11               	movwf	(___fldiv@b+2)^0,c
  5357  0023B4  0E00               	movlw	0
  5358  0023B6  6E12               	movwf	(___fldiv@b+3)^0,c
  5359  0023B8  0E00               	movlw	0
  5360  0023BA  6E1F               	movwf	___fldiv@sign^0,c
  5361  0023BC                     l3458:
  5362  0023BC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5363  0023C0  A026               	btfss	___fldiv@bexp^0,0,c
  5364  0023C2  EFE5  F011         	goto	u3011
  5365  0023C6  EFE7  F011         	goto	u3010
  5366  0023CA                     u3011:
  5367  0023CA  EFEA  F011         	goto	l3464
  5368  0023CE                     u3010:
  5369  0023CE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5370  0023D0  EFEB  F011         	goto	l3466
  5371  0023D4                     l3464:
  5372  0023D4  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5373  0023D6                     l3466:
  5374  0023D6  90D8               	bcf	status,0,c
  5375  0023D8  3026               	rrcf	___fldiv@bexp^0,w,c
  5376  0023DA  6E12               	movwf	(___fldiv@b+3)^0,c
  5377  0023DC  EFA1  F010         	goto	l3380
  5378  0023E0                     l1119:
  5379  0023E0  0012               	return		;funcret
  5380  0023E2                     __end_of___fldiv:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function ___fladd *****************
  5384 ;; Defined at:
  5385 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  b               4   64[COMRAM] unsigned char 
  5388 ;;  a               4   68[COMRAM] unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  grs             1   79[COMRAM] unsigned char 
  5391 ;;  bexp            1   78[COMRAM] unsigned char 
  5392 ;;  aexp            1   77[COMRAM] unsigned char 
  5393 ;;  signs           1   76[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  4   64[COMRAM] unsigned char 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;Total ram usage:       16 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_determine_color_new
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text13
  5418  001396                     __ptext13:
  5419                           	callstack 0
  5420  001396                     ___fladd:
  5421                           	callstack 28
  5422  001396  5044               	movf	(___fladd@b+3)^0,w,c
  5423  001398  0B80               	andlw	128
  5424  00139A  6E4D               	movwf	___fladd@signs^0,c
  5425  00139C  5044               	movf	(___fladd@b+3)^0,w,c
  5426  00139E  2444               	addwf	(___fladd@b+3)^0,w,c
  5427  0013A0  6E4F               	movwf	___fladd@bexp^0,c
  5428  0013A2  AE43               	btfss	(___fladd@b+2)^0,7,c
  5429  0013A4  EFD6  F009         	goto	u2401
  5430  0013A8  EFD8  F009         	goto	u2400
  5431  0013AC                     u2401:
  5432  0013AC  EFD9  F009         	goto	l3140
  5433  0013B0                     u2400:
  5434  0013B0  804F               	bsf	___fladd@bexp^0,0,c
  5435  0013B2                     l3140:
  5436  0013B2  504F               	movf	___fladd@bexp^0,w,c
  5437  0013B4  B4D8               	btfsc	status,2,c
  5438  0013B6  EFDF  F009         	goto	u2411
  5439  0013BA  EFE1  F009         	goto	u2410
  5440  0013BE                     u2411:
  5441  0013BE  EFF6  F009         	goto	l3150
  5442  0013C2                     u2410:
  5443  0013C2  284F               	incf	___fladd@bexp^0,w,c
  5444  0013C4  A4D8               	btfss	status,2,c
  5445  0013C6  EFE7  F009         	goto	u2421
  5446  0013CA  EFE9  F009         	goto	u2420
  5447  0013CE                     u2421:
  5448  0013CE  EFF1  F009         	goto	l3146
  5449  0013D2                     u2420:
  5450  0013D2  0E00               	movlw	0
  5451  0013D4  6E41               	movwf	___fladd@b^0,c
  5452  0013D6  0E00               	movlw	0
  5453  0013D8  6E42               	movwf	(___fladd@b+1)^0,c
  5454  0013DA  0E00               	movlw	0
  5455  0013DC  6E43               	movwf	(___fladd@b+2)^0,c
  5456  0013DE  0E00               	movlw	0
  5457  0013E0  6E44               	movwf	(___fladd@b+3)^0,c
  5458  0013E2                     l3146:
  5459  0013E2  8E43               	bsf	(___fladd@b+2)^0,7,c
  5460  0013E4  0E00               	movlw	0
  5461  0013E6  6E44               	movwf	(___fladd@b+3)^0,c
  5462  0013E8  EFFE  F009         	goto	l3152
  5463  0013EC                     l3150:
  5464  0013EC  0E00               	movlw	0
  5465  0013EE  6E41               	movwf	___fladd@b^0,c
  5466  0013F0  0E00               	movlw	0
  5467  0013F2  6E42               	movwf	(___fladd@b+1)^0,c
  5468  0013F4  0E00               	movlw	0
  5469  0013F6  6E43               	movwf	(___fladd@b+2)^0,c
  5470  0013F8  0E00               	movlw	0
  5471  0013FA  6E44               	movwf	(___fladd@b+3)^0,c
  5472  0013FC                     l3152:
  5473  0013FC  5048               	movf	(___fladd@a+3)^0,w,c
  5474  0013FE  0B80               	andlw	128
  5475  001400  6E4E               	movwf	___fladd@aexp^0,c
  5476  001402  504D               	movf	___fladd@signs^0,w,c
  5477  001404  184E               	xorwf	___fladd@aexp^0,w,c
  5478  001406  B4D8               	btfsc	status,2,c
  5479  001408  EF08  F00A         	goto	u2431
  5480  00140C  EF0A  F00A         	goto	u2430
  5481  001410                     u2431:
  5482  001410  EF0B  F00A         	goto	l3158
  5483  001414                     u2430:
  5484  001414  8C4D               	bsf	___fladd@signs^0,6,c
  5485  001416                     l3158:
  5486  001416  5048               	movf	(___fladd@a+3)^0,w,c
  5487  001418  2448               	addwf	(___fladd@a+3)^0,w,c
  5488  00141A  6E4E               	movwf	___fladd@aexp^0,c
  5489  00141C  AE47               	btfss	(___fladd@a+2)^0,7,c
  5490  00141E  EF13  F00A         	goto	u2441
  5491  001422  EF15  F00A         	goto	u2440
  5492  001426                     u2441:
  5493  001426  EF16  F00A         	goto	l3164
  5494  00142A                     u2440:
  5495  00142A  804E               	bsf	___fladd@aexp^0,0,c
  5496  00142C                     l3164:
  5497  00142C  504E               	movf	___fladd@aexp^0,w,c
  5498  00142E  B4D8               	btfsc	status,2,c
  5499  001430  EF1C  F00A         	goto	u2451
  5500  001434  EF1E  F00A         	goto	u2450
  5501  001438                     u2451:
  5502  001438  EF33  F00A         	goto	l3174
  5503  00143C                     u2450:
  5504  00143C  284E               	incf	___fladd@aexp^0,w,c
  5505  00143E  A4D8               	btfss	status,2,c
  5506  001440  EF24  F00A         	goto	u2461
  5507  001444  EF26  F00A         	goto	u2460
  5508  001448                     u2461:
  5509  001448  EF2E  F00A         	goto	l3170
  5510  00144C                     u2460:
  5511  00144C  0E00               	movlw	0
  5512  00144E  6E45               	movwf	___fladd@a^0,c
  5513  001450  0E00               	movlw	0
  5514  001452  6E46               	movwf	(___fladd@a+1)^0,c
  5515  001454  0E00               	movlw	0
  5516  001456  6E47               	movwf	(___fladd@a+2)^0,c
  5517  001458  0E00               	movlw	0
  5518  00145A  6E48               	movwf	(___fladd@a+3)^0,c
  5519  00145C                     l3170:
  5520  00145C  8E47               	bsf	(___fladd@a+2)^0,7,c
  5521  00145E  0E00               	movlw	0
  5522  001460  6E48               	movwf	(___fladd@a+3)^0,c
  5523  001462  EF3B  F00A         	goto	l3176
  5524  001466                     l3174:
  5525  001466  0E00               	movlw	0
  5526  001468  6E45               	movwf	___fladd@a^0,c
  5527  00146A  0E00               	movlw	0
  5528  00146C  6E46               	movwf	(___fladd@a+1)^0,c
  5529  00146E  0E00               	movlw	0
  5530  001470  6E47               	movwf	(___fladd@a+2)^0,c
  5531  001472  0E00               	movlw	0
  5532  001474  6E48               	movwf	(___fladd@a+3)^0,c
  5533  001476                     l3176:
  5534  001476  504F               	movf	___fladd@bexp^0,w,c
  5535  001478  5C4E               	subwf	___fladd@aexp^0,w,c
  5536  00147A  B0D8               	btfsc	status,0,c
  5537  00147C  EF42  F00A         	goto	u2471
  5538  001480  EF44  F00A         	goto	u2470
  5539  001484                     u2471:
  5540  001484  EF6B  F00A         	goto	l3212
  5541  001488                     u2470:
  5542  001488  AC4D               	btfss	___fladd@signs^0,6,c
  5543  00148A  EF49  F00A         	goto	u2481
  5544  00148E  EF4B  F00A         	goto	u2480
  5545  001492                     u2481:
  5546  001492  EF4D  F00A         	goto	l3182
  5547  001496                     u2480:
  5548  001496  0E80               	movlw	128
  5549  001498  1A4D               	xorwf	___fladd@signs^0,f,c
  5550  00149A                     l3182:
  5551  00149A  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5552  00149E  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5553  0014A2  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5554  0014A6  C041  F050         	movff	___fladd@b,___fladd@grs
  5555  0014AA  C045  F041         	movff	___fladd@a,___fladd@b
  5556  0014AE  C050  F045         	movff	___fladd@grs,___fladd@a
  5557  0014B2  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5558  0014B6  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5559  0014BA  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5560  0014BE  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5561  0014C2  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5562  0014C6  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5563  0014CA  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5564  0014CE  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5565  0014D2  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5566  0014D6                     l3212:
  5567  0014D6  0E00               	movlw	0
  5568  0014D8  6E50               	movwf	___fladd@grs^0,c
  5569  0014DA  504F               	movf	___fladd@bexp^0,w,c
  5570  0014DC  C04E  F049         	movff	___fladd@aexp,??___fladd
  5571  0014E0  6A4A               	clrf	(??___fladd+1)^0,c
  5572  0014E2  5E49               	subwf	??___fladd^0,f,c
  5573  0014E4  0E00               	movlw	0
  5574  0014E6  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5575  0014E8  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5576  0014EA  EF80  F00A         	goto	u2491
  5577  0014EE  504A               	movf	(??___fladd+1)^0,w,c
  5578  0014F0  E109               	bnz	u2490
  5579  0014F2  0E1A               	movlw	26
  5580  0014F4  5C49               	subwf	??___fladd^0,w,c
  5581  0014F6  A0D8               	btfss	status,0,c
  5582  0014F8  EF80  F00A         	goto	u2491
  5583  0014FC  EF82  F00A         	goto	u2490
  5584  001500                     u2491:
  5585  001500  EFB9  F00A         	goto	l1066
  5586  001504                     u2490:
  5587  001504  5041               	movf	___fladd@b^0,w,c
  5588  001506  1042               	iorwf	(___fladd@b+1)^0,w,c
  5589  001508  1043               	iorwf	(___fladd@b+2)^0,w,c
  5590  00150A  1044               	iorwf	(___fladd@b+3)^0,w,c
  5591  00150C  A4D8               	btfss	status,2,c
  5592  00150E  EF8B  F00A         	goto	u2501
  5593  001512  EF8E  F00A         	goto	u2500
  5594  001516                     u2501:
  5595  001516  0E01               	movlw	1
  5596  001518  EF8F  F00A         	goto	u2510
  5597  00151C                     u2500:
  5598  00151C  0E00               	movlw	0
  5599  00151E                     u2510:
  5600  00151E  6E50               	movwf	___fladd@grs^0,c
  5601  001520  0E00               	movlw	0
  5602  001522  6E41               	movwf	___fladd@b^0,c
  5603  001524  0E00               	movlw	0
  5604  001526  6E42               	movwf	(___fladd@b+1)^0,c
  5605  001528  0E00               	movlw	0
  5606  00152A  6E43               	movwf	(___fladd@b+2)^0,c
  5607  00152C  0E00               	movlw	0
  5608  00152E  6E44               	movwf	(___fladd@b+3)^0,c
  5609  001530  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5610  001534  EFC2  F00A         	goto	l1065
  5611  001538                     l1067:
  5612  001538  A050               	btfss	___fladd@grs^0,0,c
  5613  00153A  EFA1  F00A         	goto	u2521
  5614  00153E  EFA3  F00A         	goto	u2520
  5615  001542                     u2521:
  5616  001542  EFA9  F00A         	goto	l3224
  5617  001546                     u2520:
  5618  001546  90D8               	bcf	status,0,c
  5619  001548  3050               	rrcf	___fladd@grs^0,w,c
  5620  00154A  0901               	iorlw	1
  5621  00154C  6E50               	movwf	___fladd@grs^0,c
  5622  00154E  EFAB  F00A         	goto	l3226
  5623  001552                     l3224:
  5624  001552  90D8               	bcf	status,0,c
  5625  001554  3250               	rrcf	___fladd@grs^0,f,c
  5626  001556                     l3226:
  5627  001556  A041               	btfss	___fladd@b^0,0,c
  5628  001558  EFB0  F00A         	goto	u2531
  5629  00155C  EFB2  F00A         	goto	u2530
  5630  001560                     u2531:
  5631  001560  EFB3  F00A         	goto	l3230
  5632  001564                     u2530:
  5633  001564  8E50               	bsf	___fladd@grs^0,7,c
  5634  001566                     l3230:
  5635  001566  3444               	rlcf	(___fladd@b+3)^0,w,c
  5636  001568  3244               	rrcf	(___fladd@b+3)^0,f,c
  5637  00156A  3243               	rrcf	(___fladd@b+2)^0,f,c
  5638  00156C  3242               	rrcf	(___fladd@b+1)^0,f,c
  5639  00156E  3241               	rrcf	___fladd@b^0,f,c
  5640  001570  2A4F               	incf	___fladd@bexp^0,f,c
  5641  001572                     l1066:
  5642  001572  504E               	movf	___fladd@aexp^0,w,c
  5643  001574  5C4F               	subwf	___fladd@bexp^0,w,c
  5644  001576  A0D8               	btfss	status,0,c
  5645  001578  EFC0  F00A         	goto	u2541
  5646  00157C  EFC2  F00A         	goto	u2540
  5647  001580                     u2541:
  5648  001580  EF9C  F00A         	goto	l1067
  5649  001584                     u2540:
  5650  001584                     l1065:
  5651  001584  BC4D               	btfsc	___fladd@signs^0,6,c
  5652  001586  EFC7  F00A         	goto	u2551
  5653  00158A  EFC9  F00A         	goto	u2550
  5654  00158E                     u2551:
  5655  00158E  EF09  F00B         	goto	l3258
  5656  001592                     u2550:
  5657  001592  504F               	movf	___fladd@bexp^0,w,c
  5658  001594  A4D8               	btfss	status,2,c
  5659  001596  EFCF  F00A         	goto	u2561
  5660  00159A  EFD1  F00A         	goto	u2560
  5661  00159E                     u2561:
  5662  00159E  EFDB  F00A         	goto	l3240
  5663  0015A2                     u2560:
  5664  0015A2  0E00               	movlw	0
  5665  0015A4  6E41               	movwf	?___fladd^0,c
  5666  0015A6  0E00               	movlw	0
  5667  0015A8  6E42               	movwf	(?___fladd+1)^0,c
  5668  0015AA  0E00               	movlw	0
  5669  0015AC  6E43               	movwf	(?___fladd+2)^0,c
  5670  0015AE  0E00               	movlw	0
  5671  0015B0  6E44               	movwf	(?___fladd+3)^0,c
  5672  0015B2  EF2A  F00C         	goto	l1074
  5673  0015B6                     l3240:
  5674  0015B6  5045               	movf	___fladd@a^0,w,c
  5675  0015B8  2641               	addwf	___fladd@b^0,f,c
  5676  0015BA  5046               	movf	(___fladd@a+1)^0,w,c
  5677  0015BC  2242               	addwfc	(___fladd@b+1)^0,f,c
  5678  0015BE  5047               	movf	(___fladd@a+2)^0,w,c
  5679  0015C0  2243               	addwfc	(___fladd@b+2)^0,f,c
  5680  0015C2  5048               	movf	(___fladd@a+3)^0,w,c
  5681  0015C4  2244               	addwfc	(___fladd@b+3)^0,f,c
  5682  0015C6  A044               	btfss	(___fladd@b+3)^0,0,c
  5683  0015C8  EFE8  F00A         	goto	u2571
  5684  0015CC  EFEA  F00A         	goto	u2570
  5685  0015D0                     u2571:
  5686  0015D0  EF96  F00B         	goto	l3294
  5687  0015D4                     u2570:
  5688  0015D4  A050               	btfss	___fladd@grs^0,0,c
  5689  0015D6  EFEF  F00A         	goto	u2581
  5690  0015DA  EFF1  F00A         	goto	u2580
  5691  0015DE                     u2581:
  5692  0015DE  EFF7  F00A         	goto	l3248
  5693  0015E2                     u2580:
  5694  0015E2  90D8               	bcf	status,0,c
  5695  0015E4  3050               	rrcf	___fladd@grs^0,w,c
  5696  0015E6  0901               	iorlw	1
  5697  0015E8  6E50               	movwf	___fladd@grs^0,c
  5698  0015EA  EFF9  F00A         	goto	l3250
  5699  0015EE                     l3248:
  5700  0015EE  90D8               	bcf	status,0,c
  5701  0015F0  3250               	rrcf	___fladd@grs^0,f,c
  5702  0015F2                     l3250:
  5703  0015F2  A041               	btfss	___fladd@b^0,0,c
  5704  0015F4  EFFE  F00A         	goto	u2591
  5705  0015F8  EF00  F00B         	goto	u2590
  5706  0015FC                     u2591:
  5707  0015FC  EF01  F00B         	goto	l3254
  5708  001600                     u2590:
  5709  001600  8E50               	bsf	___fladd@grs^0,7,c
  5710  001602                     l3254:
  5711  001602  3444               	rlcf	(___fladd@b+3)^0,w,c
  5712  001604  3244               	rrcf	(___fladd@b+3)^0,f,c
  5713  001606  3243               	rrcf	(___fladd@b+2)^0,f,c
  5714  001608  3242               	rrcf	(___fladd@b+1)^0,f,c
  5715  00160A  3241               	rrcf	___fladd@b^0,f,c
  5716  00160C  2A4F               	incf	___fladd@bexp^0,f,c
  5717  00160E  EF96  F00B         	goto	l3294
  5718  001612                     l3258:
  5719  001612  5045               	movf	___fladd@a^0,w,c
  5720  001614  5C41               	subwf	___fladd@b^0,w,c
  5721  001616  5046               	movf	(___fladd@a+1)^0,w,c
  5722  001618  5842               	subwfb	(___fladd@b+1)^0,w,c
  5723  00161A  5047               	movf	(___fladd@a+2)^0,w,c
  5724  00161C  5843               	subwfb	(___fladd@b+2)^0,w,c
  5725  00161E  5044               	movf	(___fladd@b+3)^0,w,c
  5726  001620  0A80               	xorlw	128
  5727  001622  6E49               	movwf	??___fladd^0,c
  5728  001624  5048               	movf	(___fladd@a+3)^0,w,c
  5729  001626  0A80               	xorlw	128
  5730  001628  5849               	subwfb	??___fladd^0,w,c
  5731  00162A  B0D8               	btfsc	status,0,c
  5732  00162C  EF1A  F00B         	goto	u2601
  5733  001630  EF1C  F00B         	goto	u2600
  5734  001634                     u2601:
  5735  001634  EF47  F00B         	goto	l3268
  5736  001638                     u2600:
  5737  001638  5041               	movf	___fladd@b^0,w,c
  5738  00163A  5C45               	subwf	___fladd@a^0,w,c
  5739  00163C  6E49               	movwf	??___fladd^0,c
  5740  00163E  5042               	movf	(___fladd@b+1)^0,w,c
  5741  001640  5846               	subwfb	(___fladd@a+1)^0,w,c
  5742  001642  6E4A               	movwf	(??___fladd+1)^0,c
  5743  001644  5043               	movf	(___fladd@b+2)^0,w,c
  5744  001646  5847               	subwfb	(___fladd@a+2)^0,w,c
  5745  001648  6E4B               	movwf	(??___fladd+2)^0,c
  5746  00164A  5044               	movf	(___fladd@b+3)^0,w,c
  5747  00164C  5848               	subwfb	(___fladd@a+3)^0,w,c
  5748  00164E  6E4C               	movwf	(??___fladd+3)^0,c
  5749  001650  0EFF               	movlw	255
  5750  001652  2449               	addwf	??___fladd^0,w,c
  5751  001654  6E41               	movwf	___fladd@b^0,c
  5752  001656  0EFF               	movlw	255
  5753  001658  204A               	addwfc	(??___fladd+1)^0,w,c
  5754  00165A  6E42               	movwf	(___fladd@b+1)^0,c
  5755  00165C  0EFF               	movlw	255
  5756  00165E  204B               	addwfc	(??___fladd+2)^0,w,c
  5757  001660  6E43               	movwf	(___fladd@b+2)^0,c
  5758  001662  0EFF               	movlw	255
  5759  001664  204C               	addwfc	(??___fladd+3)^0,w,c
  5760  001666  6E44               	movwf	(___fladd@b+3)^0,c
  5761  001668  0E80               	movlw	128
  5762  00166A  1A4D               	xorwf	___fladd@signs^0,f,c
  5763  00166C  6C50               	negf	___fladd@grs^0,c
  5764  00166E  5050               	movf	___fladd@grs^0,w,c
  5765  001670  A4D8               	btfss	status,2,c
  5766  001672  EF3D  F00B         	goto	u2611
  5767  001676  EF3F  F00B         	goto	u2610
  5768  00167A                     u2611:
  5769  00167A  EF4F  F00B         	goto	l1082
  5770  00167E                     u2610:
  5771  00167E  0E01               	movlw	1
  5772  001680  2641               	addwf	___fladd@b^0,f,c
  5773  001682  0E00               	movlw	0
  5774  001684  2242               	addwfc	(___fladd@b+1)^0,f,c
  5775  001686  2243               	addwfc	(___fladd@b+2)^0,f,c
  5776  001688  2244               	addwfc	(___fladd@b+3)^0,f,c
  5777  00168A  EF4F  F00B         	goto	l1082
  5778  00168E                     l3268:
  5779  00168E  5045               	movf	___fladd@a^0,w,c
  5780  001690  5E41               	subwf	___fladd@b^0,f,c
  5781  001692  5046               	movf	(___fladd@a+1)^0,w,c
  5782  001694  5A42               	subwfb	(___fladd@b+1)^0,f,c
  5783  001696  5047               	movf	(___fladd@a+2)^0,w,c
  5784  001698  5A43               	subwfb	(___fladd@b+2)^0,f,c
  5785  00169A  5048               	movf	(___fladd@a+3)^0,w,c
  5786  00169C  5A44               	subwfb	(___fladd@b+3)^0,f,c
  5787  00169E                     l1082:
  5788  00169E  5041               	movf	___fladd@b^0,w,c
  5789  0016A0  1042               	iorwf	(___fladd@b+1)^0,w,c
  5790  0016A2  1043               	iorwf	(___fladd@b+2)^0,w,c
  5791  0016A4  1044               	iorwf	(___fladd@b+3)^0,w,c
  5792  0016A6  A4D8               	btfss	status,2,c
  5793  0016A8  EF58  F00B         	goto	u2621
  5794  0016AC  EF5A  F00B         	goto	u2620
  5795  0016B0                     u2621:
  5796  0016B0  EF8F  F00B         	goto	l3292
  5797  0016B4                     u2620:
  5798  0016B4  5050               	movf	___fladd@grs^0,w,c
  5799  0016B6  A4D8               	btfss	status,2,c
  5800  0016B8  EF60  F00B         	goto	u2631
  5801  0016BC  EF62  F00B         	goto	u2630
  5802  0016C0                     u2631:
  5803  0016C0  EF8F  F00B         	goto	l3292
  5804  0016C4                     u2630:
  5805  0016C4  0E00               	movlw	0
  5806  0016C6  6E41               	movwf	?___fladd^0,c
  5807  0016C8  0E00               	movlw	0
  5808  0016CA  6E42               	movwf	(?___fladd+1)^0,c
  5809  0016CC  0E00               	movlw	0
  5810  0016CE  6E43               	movwf	(?___fladd+2)^0,c
  5811  0016D0  0E00               	movlw	0
  5812  0016D2  6E44               	movwf	(?___fladd+3)^0,c
  5813  0016D4  EF2A  F00C         	goto	l1074
  5814  0016D8                     l3276:
  5815  0016D8  90D8               	bcf	status,0,c
  5816  0016DA  3641               	rlcf	___fladd@b^0,f,c
  5817  0016DC  3642               	rlcf	(___fladd@b+1)^0,f,c
  5818  0016DE  3643               	rlcf	(___fladd@b+2)^0,f,c
  5819  0016E0  3644               	rlcf	(___fladd@b+3)^0,f,c
  5820  0016E2  AE50               	btfss	___fladd@grs^0,7,c
  5821  0016E4  EF76  F00B         	goto	u2641
  5822  0016E8  EF78  F00B         	goto	u2640
  5823  0016EC                     u2641:
  5824  0016EC  EF79  F00B         	goto	l3282
  5825  0016F0                     u2640:
  5826  0016F0  8041               	bsf	___fladd@b^0,0,c
  5827  0016F2                     l3282:
  5828  0016F2  A050               	btfss	___fladd@grs^0,0,c
  5829  0016F4  EF7E  F00B         	goto	u2651
  5830  0016F8  EF80  F00B         	goto	u2650
  5831  0016FC                     u2651:
  5832  0016FC  EF84  F00B         	goto	l3286
  5833  001700                     u2650:
  5834  001700  80D8               	bsf	status,0,c
  5835  001702  3650               	rlcf	___fladd@grs^0,f,c
  5836  001704  EF86  F00B         	goto	l3288
  5837  001708                     l3286:
  5838  001708  90D8               	bcf	status,0,c
  5839  00170A  3650               	rlcf	___fladd@grs^0,f,c
  5840  00170C                     l3288:
  5841  00170C  504F               	movf	___fladd@bexp^0,w,c
  5842  00170E  B4D8               	btfsc	status,2,c
  5843  001710  EF8C  F00B         	goto	u2661
  5844  001714  EF8E  F00B         	goto	u2660
  5845  001718                     u2661:
  5846  001718  EF8F  F00B         	goto	l3292
  5847  00171C                     u2660:
  5848  00171C  064F               	decf	___fladd@bexp^0,f,c
  5849  00171E                     l3292:
  5850  00171E  AE43               	btfss	(___fladd@b+2)^0,7,c
  5851  001720  EF94  F00B         	goto	u2671
  5852  001724  EF96  F00B         	goto	u2670
  5853  001728                     u2671:
  5854  001728  EF6C  F00B         	goto	l3276
  5855  00172C                     u2670:
  5856  00172C                     l3294:
  5857  00172C  0E00               	movlw	0
  5858  00172E  6E4E               	movwf	___fladd@aexp^0,c
  5859  001730  AE50               	btfss	___fladd@grs^0,7,c
  5860  001732  EF9D  F00B         	goto	u2681
  5861  001736  EF9F  F00B         	goto	u2680
  5862  00173A                     u2681:
  5863  00173A  EFB7  F00B         	goto	l1091
  5864  00173E                     u2680:
  5865  00173E  C050  F049         	movff	___fladd@grs,??___fladd
  5866  001742  0E7F               	movlw	127
  5867  001744  1649               	andwf	??___fladd^0,f,c
  5868  001746  B4D8               	btfsc	status,2,c
  5869  001748  EFA8  F00B         	goto	u2691
  5870  00174C  EFAA  F00B         	goto	u2690
  5871  001750                     u2691:
  5872  001750  EFAE  F00B         	goto	l1092
  5873  001754                     u2690:
  5874  001754                     l3300:
  5875  001754  0E01               	movlw	1
  5876  001756  6E4E               	movwf	___fladd@aexp^0,c
  5877  001758  EFB7  F00B         	goto	l1091
  5878  00175C                     l1092:
  5879  00175C  A041               	btfss	___fladd@b^0,0,c
  5880  00175E  EFB3  F00B         	goto	u2701
  5881  001762  EFB5  F00B         	goto	u2700
  5882  001766                     u2701:
  5883  001766  EFB7  F00B         	goto	l1091
  5884  00176A                     u2700:
  5885  00176A  EFAA  F00B         	goto	l3300
  5886  00176E                     l1091:
  5887  00176E  504E               	movf	___fladd@aexp^0,w,c
  5888  001770  B4D8               	btfsc	status,2,c
  5889  001772  EFBD  F00B         	goto	u2711
  5890  001776  EFBF  F00B         	goto	u2710
  5891  00177A                     u2711:
  5892  00177A  EFEA  F00B         	goto	l3312
  5893  00177E                     u2710:
  5894  00177E  0E01               	movlw	1
  5895  001780  2641               	addwf	___fladd@b^0,f,c
  5896  001782  0E00               	movlw	0
  5897  001784  2242               	addwfc	(___fladd@b+1)^0,f,c
  5898  001786  2243               	addwfc	(___fladd@b+2)^0,f,c
  5899  001788  2244               	addwfc	(___fladd@b+3)^0,f,c
  5900  00178A  A044               	btfss	(___fladd@b+3)^0,0,c
  5901  00178C  EFCA  F00B         	goto	u2721
  5902  001790  EFCC  F00B         	goto	u2720
  5903  001794                     u2721:
  5904  001794  EFEA  F00B         	goto	l3312
  5905  001798                     u2720:
  5906  001798  C041  F049         	movff	___fladd@b,??___fladd
  5907  00179C  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  5908  0017A0  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  5909  0017A4  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  5910  0017A8  344C               	rlcf	(??___fladd+3)^0,w,c
  5911  0017AA  324C               	rrcf	(??___fladd+3)^0,f,c
  5912  0017AC  324B               	rrcf	(??___fladd+2)^0,f,c
  5913  0017AE  324A               	rrcf	(??___fladd+1)^0,f,c
  5914  0017B0  3249               	rrcf	??___fladd^0,f,c
  5915  0017B2  C049  F041         	movff	??___fladd,___fladd@b
  5916  0017B6  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  5917  0017BA  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  5918  0017BE  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  5919  0017C2  284F               	incf	___fladd@bexp^0,w,c
  5920  0017C4  B4D8               	btfsc	status,2,c
  5921  0017C6  EFE7  F00B         	goto	u2731
  5922  0017CA  EFE9  F00B         	goto	u2730
  5923  0017CE                     u2731:
  5924  0017CE  EFEA  F00B         	goto	l3312
  5925  0017D2                     u2730:
  5926  0017D2  2A4F               	incf	___fladd@bexp^0,f,c
  5927  0017D4                     l3312:
  5928  0017D4  284F               	incf	___fladd@bexp^0,w,c
  5929  0017D6  B4D8               	btfsc	status,2,c
  5930  0017D8  EFF0  F00B         	goto	u2741
  5931  0017DC  EFF2  F00B         	goto	u2740
  5932  0017E0                     u2741:
  5933  0017E0  EFFA  F00B         	goto	l3316
  5934  0017E4                     u2740:
  5935  0017E4  504F               	movf	___fladd@bexp^0,w,c
  5936  0017E6  A4D8               	btfss	status,2,c
  5937  0017E8  EFF8  F00B         	goto	u2751
  5938  0017EC  EFFA  F00B         	goto	u2750
  5939  0017F0                     u2751:
  5940  0017F0  EF0C  F00C         	goto	l3320
  5941  0017F4                     u2750:
  5942  0017F4                     l3316:
  5943  0017F4  0E00               	movlw	0
  5944  0017F6  6E41               	movwf	___fladd@b^0,c
  5945  0017F8  0E00               	movlw	0
  5946  0017FA  6E42               	movwf	(___fladd@b+1)^0,c
  5947  0017FC  0E00               	movlw	0
  5948  0017FE  6E43               	movwf	(___fladd@b+2)^0,c
  5949  001800  0E00               	movlw	0
  5950  001802  6E44               	movwf	(___fladd@b+3)^0,c
  5951  001804  504F               	movf	___fladd@bexp^0,w,c
  5952  001806  A4D8               	btfss	status,2,c
  5953  001808  EF08  F00C         	goto	u2761
  5954  00180C  EF0A  F00C         	goto	u2760
  5955  001810                     u2761:
  5956  001810  EF0C  F00C         	goto	l3320
  5957  001814                     u2760:
  5958  001814  0E00               	movlw	0
  5959  001816  6E4D               	movwf	___fladd@signs^0,c
  5960  001818                     l3320:
  5961  001818  A04F               	btfss	___fladd@bexp^0,0,c
  5962  00181A  EF11  F00C         	goto	u2771
  5963  00181E  EF13  F00C         	goto	u2770
  5964  001822                     u2771:
  5965  001822  EF16  F00C         	goto	l3324
  5966  001826                     u2770:
  5967  001826  8E43               	bsf	(___fladd@b+2)^0,7,c
  5968  001828  EF17  F00C         	goto	l3326
  5969  00182C                     l3324:
  5970  00182C  9E43               	bcf	(___fladd@b+2)^0,7,c
  5971  00182E                     l3326:
  5972  00182E  90D8               	bcf	status,0,c
  5973  001830  304F               	rrcf	___fladd@bexp^0,w,c
  5974  001832  6E44               	movwf	(___fladd@b+3)^0,c
  5975  001834  AE4D               	btfss	___fladd@signs^0,7,c
  5976  001836  EF1F  F00C         	goto	u2781
  5977  00183A  EF21  F00C         	goto	u2780
  5978  00183E                     u2781:
  5979  00183E  EF22  F00C         	goto	l3332
  5980  001842                     u2780:
  5981  001842  8E44               	bsf	(___fladd@b+3)^0,7,c
  5982  001844                     l3332:
  5983  001844  C041  F041         	movff	___fladd@b,?___fladd
  5984  001848  C042  F042         	movff	___fladd@b+1,?___fladd+1
  5985  00184C  C043  F043         	movff	___fladd@b+2,?___fladd+2
  5986  001850  C044  F044         	movff	___fladd@b+3,?___fladd+3
  5987  001854                     l1074:
  5988  001854  0012               	return		;funcret
  5989  001856                     __end_of___fladd:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function _color_click_init *****************
  5993 ;; Defined at:
  5994 ;;		line 10 in file "color.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;Total ram usage:        1 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 4
  6015 ;; This function calls:
  6016 ;;		_I2C_2_Master_Init
  6017 ;;		_color_writetoaddr
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text14
  6024  0036B2                     __ptext14:
  6025                           	callstack 0
  6026  0036B2                     _color_click_init:
  6027                           	callstack 26
  6028  0036B2                     
  6029                           ;color.c: 13:     I2C_2_Master_Init();
  6030  0036B2  EC73  F01B         	call	_I2C_2_Master_Init	;wreg free
  6031  0036B6                     
  6032                           ;color.c: 16:   color_writetoaddr(0x00, 0x01);
  6033  0036B6  0E01               	movlw	1
  6034  0036B8  6E03               	movwf	color_writetoaddr@value^0,c
  6035  0036BA  0E00               	movlw	0
  6036  0036BC  ECD0  F01B         	call	_color_writetoaddr
  6037  0036C0                     
  6038                           ;color.c: 17:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6039  0036C0  0E3F               	movlw	63
  6040  0036C2  6E05               	movwf	??_color_click_init^0,c
  6041  0036C4  0E55               	movlw	85
  6042  0036C6                     u4337:
  6043  0036C6  2EE8               	decfsz	wreg,f,c
  6044  0036C8  D7FE               	bra	u4337
  6045  0036CA  2E05               	decfsz	??_color_click_init^0,f,c
  6046  0036CC  D7FC               	bra	u4337
  6047  0036CE  F000               	nop	
  6048  0036D0                     
  6049                           ;color.c: 20:  color_writetoaddr(0x00, 0x03);
  6050  0036D0  0E03               	movlw	3
  6051  0036D2  6E03               	movwf	color_writetoaddr@value^0,c
  6052  0036D4  0E00               	movlw	0
  6053  0036D6  ECD0  F01B         	call	_color_writetoaddr
  6054  0036DA                     
  6055                           ;color.c: 23:  color_writetoaddr(0x01, 0xD5);
  6056  0036DA  0ED5               	movlw	213
  6057  0036DC  6E03               	movwf	color_writetoaddr@value^0,c
  6058  0036DE  0E01               	movlw	1
  6059  0036E0  ECD0  F01B         	call	_color_writetoaddr
  6060  0036E4  0012               	return		;funcret
  6061  0036E6                     __end_of_color_click_init:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _color_writetoaddr *****************
  6065 ;; Defined at:
  6066 ;;		line 26 in file "color.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  address         1    wreg     unsigned char 
  6069 ;;  value           1    2[COMRAM] unsigned char 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  address         1    3[COMRAM] unsigned char 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6081 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;Total ram usage:        2 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 3
  6088 ;; This function calls:
  6089 ;;		_I2C_2_Master_Start
  6090 ;;		_I2C_2_Master_Stop
  6091 ;;		_I2C_2_Master_Write
  6092 ;; This function is called by:
  6093 ;;		_color_click_init
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text15
  6098  0037A0                     __ptext15:
  6099                           	callstack 0
  6100  0037A0                     _color_writetoaddr:
  6101                           	callstack 26
  6102                           
  6103                           ;incstack = 0
  6104                           ;color_writetoaddr@address stored from wreg
  6105  0037A0  6E04               	movwf	color_writetoaddr@address^0,c
  6106  0037A2                     
  6107                           ;color.c: 27:     I2C_2_Master_Start();
  6108  0037A2  ECFF  F01B         	call	_I2C_2_Master_Start	;wreg free
  6109                           
  6110                           ;color.c: 28:     I2C_2_Master_Write(0x52 | 0x00);
  6111  0037A6  0E52               	movlw	82
  6112  0037A8  ECEE  F01B         	call	_I2C_2_Master_Write
  6113                           
  6114                           ;color.c: 29:     I2C_2_Master_Write(0x80 | address);
  6115  0037AC  5004               	movf	color_writetoaddr@address^0,w,c
  6116  0037AE  0980               	iorlw	128
  6117  0037B0  ECEE  F01B         	call	_I2C_2_Master_Write
  6118                           
  6119                           ;color.c: 30:     I2C_2_Master_Write(value);
  6120  0037B4  5003               	movf	color_writetoaddr@value^0,w,c
  6121  0037B6  ECEE  F01B         	call	_I2C_2_Master_Write
  6122                           
  6123                           ;color.c: 31:     I2C_2_Master_Stop();
  6124  0037BA  ECFA  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6125  0037BE  0012               	return		;funcret
  6126  0037C0                     __end_of_color_writetoaddr:
  6127                           	callstack 0
  6128                           
  6129 ;; *************** function _I2C_2_Master_Init *****************
  6130 ;; Defined at:
  6131 ;;		line 4 in file "i2c.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;		None
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;		None
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;Total ram usage:        0 bytes
  6150 ;; Hardware stack levels used: 1
  6151 ;; Hardware stack levels required when called: 1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_color_click_init
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text16
  6160  0036E6                     __ptext16:
  6161                           	callstack 0
  6162  0036E6                     _I2C_2_Master_Init:
  6163                           	callstack 28
  6164  0036E6                     
  6165                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6166  0036E6  010E               	movlb	14	; () banked
  6167  0036E8  51D9               	movf	217,w,b	;volatile
  6168  0036EA  0BF0               	andlw	-16
  6169  0036EC  0908               	iorlw	8
  6170  0036EE  6FD9               	movwf	217,b	;volatile
  6171  0036F0                     
  6172                           ; BSR set to: 14
  6173                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6174  0036F0  8BD9               	bsf	217,5,b	;volatile
  6175                           
  6176                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6177  0036F2  0E9F               	movlw	159
  6178  0036F4  6FD6               	movwf	214,b	;volatile
  6179  0036F6                     
  6180                           ; BSR set to: 14
  6181                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6182  0036F6  8A84               	bsf	132,5,c	;volatile
  6183  0036F8                     
  6184                           ; BSR set to: 14
  6185                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6186  0036F8  8C84               	bsf	132,6,c	;volatile
  6187  0036FA                     
  6188                           ; BSR set to: 14
  6189                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6190  0036FA  9BA7               	bcf	167,5,b	;volatile
  6191  0036FC                     
  6192                           ; BSR set to: 14
  6193                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6194  0036FC  9DA7               	bcf	167,6,b	;volatile
  6195                           
  6196                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6197  0036FE  0E1D               	movlw	29
  6198  003700  6F1D               	movwf	29,b	;volatile
  6199                           
  6200                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6201  003702  0E1E               	movlw	30
  6202  003704  6F1C               	movwf	28,b	;volatile
  6203                           
  6204                           ;i2c.c: 18:   RD5PPS=0x1C;
  6205  003706  0E1C               	movlw	28
  6206  003708  6F6F               	movwf	111,b	;volatile
  6207                           
  6208                           ;i2c.c: 19:   RD6PPS=0x1B;
  6209  00370A  0E1B               	movlw	27
  6210  00370C  6F70               	movwf	112,b	;volatile
  6211  00370E                     
  6212                           ; BSR set to: 14
  6213  00370E  0012               	return		;funcret
  6214  003710                     __end_of_I2C_2_Master_Init:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _calibrateW *****************
  6218 ;; Defined at:
  6219 ;;		line 100 in file "color.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6222 ;;		 -> main@test(20), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;Total ram usage:        2 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 4
  6241 ;; This function calls:
  6242 ;;		_color_read_Blue
  6243 ;;		_color_read_Green
  6244 ;;		_color_read_Red
  6245 ;; This function is called by:
  6246 ;;		_main
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text17
  6251  00359E                     __ptext17:
  6252                           	callstack 0
  6253  00359E                     _calibrateW:
  6254                           	callstack 26
  6255  00359E                     
  6256                           ;color.c: 101:     (m->whiteR) = color_read_Red();
  6257  00359E  EC57  F01A         	call	_color_read_Red	;wreg free
  6258  0035A2  EE20 F006          	lfsr	2,6
  6259  0035A6  500C               	movf	calibrateW@m^0,w,c
  6260  0035A8  26D9               	addwf	fsr2l,f,c
  6261  0035AA  500D               	movf	(calibrateW@m+1)^0,w,c
  6262  0035AC  22DA               	addwfc	fsr2h,f,c
  6263  0035AE  C005  FFDE         	movff	?_color_read_Red,postinc2
  6264  0035B2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6265                           
  6266                           ;color.c: 102:     (m->whiteG) = color_read_Green();
  6267  0035B6  EC7F  F01A         	call	_color_read_Green	;wreg free
  6268  0035BA  EE20 F008          	lfsr	2,8
  6269  0035BE  500C               	movf	calibrateW@m^0,w,c
  6270  0035C0  26D9               	addwf	fsr2l,f,c
  6271  0035C2  500D               	movf	(calibrateW@m+1)^0,w,c
  6272  0035C4  22DA               	addwfc	fsr2h,f,c
  6273  0035C6  C005  FFDE         	movff	?_color_read_Green,postinc2
  6274  0035CA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6275                           
  6276                           ;color.c: 103:     (m->whiteB) = color_read_Blue();
  6277  0035CE  ECA7  F01A         	call	_color_read_Blue	;wreg free
  6278  0035D2  EE20 F00A          	lfsr	2,10
  6279  0035D6  500C               	movf	calibrateW@m^0,w,c
  6280  0035D8  26D9               	addwf	fsr2l,f,c
  6281  0035DA  500D               	movf	(calibrateW@m+1)^0,w,c
  6282  0035DC  22DA               	addwfc	fsr2h,f,c
  6283  0035DE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6284  0035E2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6285  0035E6  0012               	return		;funcret
  6286  0035E8                     __end_of_calibrateW:
  6287                           	callstack 0
  6288                           
  6289 ;; *************** function _calibrateB *****************
  6290 ;; Defined at:
  6291 ;;		line 106 in file "color.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6294 ;;		 -> main@test(20), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;Total ram usage:        2 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 4
  6313 ;; This function calls:
  6314 ;;		_color_read_Blue
  6315 ;;		_color_read_Green
  6316 ;;		_color_read_Red
  6317 ;; This function is called by:
  6318 ;;		_main
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text18
  6323  0035E8                     __ptext18:
  6324                           	callstack 0
  6325  0035E8                     _calibrateB:
  6326                           	callstack 26
  6327  0035E8                     
  6328                           ;color.c: 107:     (m->blackR) = color_read_Red();
  6329  0035E8  EC57  F01A         	call	_color_read_Red	;wreg free
  6330  0035EC  C00C  FFD9         	movff	calibrateB@m,fsr2l
  6331  0035F0  C00D  FFDA         	movff	calibrateB@m+1,fsr2h
  6332  0035F4  C005  FFDE         	movff	?_color_read_Red,postinc2
  6333  0035F8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6334                           
  6335                           ;color.c: 108:     (m->blackG) = color_read_Green();
  6336  0035FC  EC7F  F01A         	call	_color_read_Green	;wreg free
  6337  003600  EE20 F002          	lfsr	2,2
  6338  003604  500C               	movf	calibrateB@m^0,w,c
  6339  003606  26D9               	addwf	fsr2l,f,c
  6340  003608  500D               	movf	(calibrateB@m+1)^0,w,c
  6341  00360A  22DA               	addwfc	fsr2h,f,c
  6342  00360C  C005  FFDE         	movff	?_color_read_Green,postinc2
  6343  003610  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6344                           
  6345                           ;color.c: 109:     (m->blackB) = color_read_Blue();
  6346  003614  ECA7  F01A         	call	_color_read_Blue	;wreg free
  6347  003618  EE20 F004          	lfsr	2,4
  6348  00361C  500C               	movf	calibrateB@m^0,w,c
  6349  00361E  26D9               	addwf	fsr2l,f,c
  6350  003620  500D               	movf	(calibrateB@m+1)^0,w,c
  6351  003622  22DA               	addwfc	fsr2h,f,c
  6352  003624  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6353  003628  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6354  00362C  0012               	return		;funcret
  6355  00362E                     __end_of_calibrateB:
  6356                           	callstack 0
  6357                           
  6358 ;; *************** function _color_read_Red *****************
  6359 ;; Defined at:
  6360 ;;		line 48 in file "color.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  tmp             2    9[COMRAM] unsigned int 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  2    4[COMRAM] unsigned int 
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6376 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;Total ram usage:        7 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; Hardware stack levels required when called: 3
  6381 ;; This function calls:
  6382 ;;		_I2C_2_Master_Read
  6383 ;;		_I2C_2_Master_RepStart
  6384 ;;		_I2C_2_Master_Start
  6385 ;;		_I2C_2_Master_Stop
  6386 ;;		_I2C_2_Master_Write
  6387 ;; This function is called by:
  6388 ;;		_read_colours
  6389 ;;		_calibrateW
  6390 ;;		_calibrateB
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text19
  6395  0034AE                     __ptext19:
  6396                           	callstack 0
  6397  0034AE                     _color_read_Red:
  6398                           	callstack 26
  6399  0034AE                     
  6400                           ;color.c: 50:  unsigned int tmp;;color.c: 51:  I2C_2_Master_Start();
  6401  0034AE  ECFF  F01B         	call	_I2C_2_Master_Start	;wreg free
  6402                           
  6403                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x00);
  6404  0034B2  0E52               	movlw	82
  6405  0034B4  ECEE  F01B         	call	_I2C_2_Master_Write
  6406                           
  6407                           ;color.c: 53:  I2C_2_Master_Write(0xA0 | 0x16);
  6408  0034B8  0EB6               	movlw	182
  6409  0034BA  ECEE  F01B         	call	_I2C_2_Master_Write
  6410                           
  6411                           ;color.c: 54:  I2C_2_Master_RepStart();
  6412  0034BE  EC04  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6413                           
  6414                           ;color.c: 55:  I2C_2_Master_Write(0x52 | 0x01);
  6415  0034C2  0E53               	movlw	83
  6416  0034C4  ECEE  F01B         	call	_I2C_2_Master_Write
  6417                           
  6418                           ;color.c: 56:  tmp=I2C_2_Master_Read(1);
  6419  0034C8  0E01               	movlw	1
  6420  0034CA  EC38  F01B         	call	_I2C_2_Master_Read
  6421  0034CE  6E07               	movwf	??_color_read_Red^0,c
  6422  0034D0  5007               	movf	??_color_read_Red^0,w,c
  6423  0034D2  6E0A               	movwf	color_read_Red@tmp^0,c
  6424  0034D4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6425                           
  6426                           ;color.c: 57:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6427  0034D6  0E00               	movlw	0
  6428  0034D8  EC38  F01B         	call	_I2C_2_Master_Read
  6429  0034DC  6E07               	movwf	??_color_read_Red^0,c
  6430  0034DE  5007               	movf	??_color_read_Red^0,w,c
  6431  0034E0  6E09               	movwf	(??_color_read_Red+2)^0,c
  6432  0034E2  6A08               	clrf	(??_color_read_Red+1)^0,c
  6433  0034E4  500A               	movf	color_read_Red@tmp^0,w,c
  6434  0034E6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6435  0034E8  6E0A               	movwf	color_read_Red@tmp^0,c
  6436  0034EA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6437  0034EC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6438  0034EE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6439                           
  6440                           ;color.c: 58:  I2C_2_Master_Stop();
  6441  0034F0  ECFA  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6442  0034F4                     
  6443                           ;color.c: 59:  return tmp;
  6444  0034F4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6445  0034F8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6446  0034FC  0012               	return		;funcret
  6447  0034FE                     __end_of_color_read_Red:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function _color_read_Green *****************
  6451 ;; Defined at:
  6452 ;;		line 62 in file "color.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  tmp             2    9[COMRAM] unsigned int 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  2    4[COMRAM] unsigned int 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;Total ram usage:        7 bytes
  6471 ;; Hardware stack levels used: 1
  6472 ;; Hardware stack levels required when called: 3
  6473 ;; This function calls:
  6474 ;;		_I2C_2_Master_Read
  6475 ;;		_I2C_2_Master_RepStart
  6476 ;;		_I2C_2_Master_Start
  6477 ;;		_I2C_2_Master_Stop
  6478 ;;		_I2C_2_Master_Write
  6479 ;; This function is called by:
  6480 ;;		_read_colours
  6481 ;;		_calibrateW
  6482 ;;		_calibrateB
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text20
  6487  0034FE                     __ptext20:
  6488                           	callstack 0
  6489  0034FE                     _color_read_Green:
  6490                           	callstack 26
  6491  0034FE                     
  6492                           ;color.c: 63:     unsigned int tmp;;color.c: 64:     I2C_2_Master_Start();
  6493  0034FE  ECFF  F01B         	call	_I2C_2_Master_Start	;wreg free
  6494                           
  6495                           ;color.c: 65:     I2C_2_Master_Write(0x52 | 0x00);
  6496  003502  0E52               	movlw	82
  6497  003504  ECEE  F01B         	call	_I2C_2_Master_Write
  6498                           
  6499                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  6500  003508  0EB8               	movlw	184
  6501  00350A  ECEE  F01B         	call	_I2C_2_Master_Write
  6502                           
  6503                           ;color.c: 67:  I2C_2_Master_RepStart();
  6504  00350E  EC04  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6505                           
  6506                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  6507  003512  0E53               	movlw	83
  6508  003514  ECEE  F01B         	call	_I2C_2_Master_Write
  6509                           
  6510                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  6511  003518  0E01               	movlw	1
  6512  00351A  EC38  F01B         	call	_I2C_2_Master_Read
  6513  00351E  6E07               	movwf	??_color_read_Green^0,c
  6514  003520  5007               	movf	??_color_read_Green^0,w,c
  6515  003522  6E0A               	movwf	color_read_Green@tmp^0,c
  6516  003524  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6517                           
  6518                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6519  003526  0E00               	movlw	0
  6520  003528  EC38  F01B         	call	_I2C_2_Master_Read
  6521  00352C  6E07               	movwf	??_color_read_Green^0,c
  6522  00352E  5007               	movf	??_color_read_Green^0,w,c
  6523  003530  6E09               	movwf	(??_color_read_Green+2)^0,c
  6524  003532  6A08               	clrf	(??_color_read_Green+1)^0,c
  6525  003534  500A               	movf	color_read_Green@tmp^0,w,c
  6526  003536  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6527  003538  6E0A               	movwf	color_read_Green@tmp^0,c
  6528  00353A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6529  00353C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6530  00353E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6531                           
  6532                           ;color.c: 71:     I2C_2_Master_Stop();
  6533  003540  ECFA  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6534  003544                     
  6535                           ;color.c: 72:     return tmp;
  6536  003544  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6537  003548  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6538  00354C  0012               	return		;funcret
  6539  00354E                     __end_of_color_read_Green:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function _color_read_Blue *****************
  6543 ;; Defined at:
  6544 ;;		line 75 in file "color.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  tmp             2    9[COMRAM] unsigned int 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2    4[COMRAM] unsigned int 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;Total ram usage:        7 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 3
  6565 ;; This function calls:
  6566 ;;		_I2C_2_Master_Read
  6567 ;;		_I2C_2_Master_RepStart
  6568 ;;		_I2C_2_Master_Start
  6569 ;;		_I2C_2_Master_Stop
  6570 ;;		_I2C_2_Master_Write
  6571 ;; This function is called by:
  6572 ;;		_read_colours
  6573 ;;		_calibrateW
  6574 ;;		_calibrateB
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text21
  6579  00354E                     __ptext21:
  6580                           	callstack 0
  6581  00354E                     _color_read_Blue:
  6582                           	callstack 26
  6583  00354E                     
  6584                           ;color.c: 76:     unsigned int tmp;;color.c: 77:     I2C_2_Master_Start();
  6585  00354E  ECFF  F01B         	call	_I2C_2_Master_Start	;wreg free
  6586                           
  6587                           ;color.c: 78:     I2C_2_Master_Write(0x52 | 0x00);
  6588  003552  0E52               	movlw	82
  6589  003554  ECEE  F01B         	call	_I2C_2_Master_Write
  6590                           
  6591                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  6592  003558  0EBA               	movlw	186
  6593  00355A  ECEE  F01B         	call	_I2C_2_Master_Write
  6594                           
  6595                           ;color.c: 80:  I2C_2_Master_RepStart();
  6596  00355E  EC04  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6597                           
  6598                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  6599  003562  0E53               	movlw	83
  6600  003564  ECEE  F01B         	call	_I2C_2_Master_Write
  6601                           
  6602                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  6603  003568  0E01               	movlw	1
  6604  00356A  EC38  F01B         	call	_I2C_2_Master_Read
  6605  00356E  6E07               	movwf	??_color_read_Blue^0,c
  6606  003570  5007               	movf	??_color_read_Blue^0,w,c
  6607  003572  6E0A               	movwf	color_read_Blue@tmp^0,c
  6608  003574  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6609                           
  6610                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6611  003576  0E00               	movlw	0
  6612  003578  EC38  F01B         	call	_I2C_2_Master_Read
  6613  00357C  6E07               	movwf	??_color_read_Blue^0,c
  6614  00357E  5007               	movf	??_color_read_Blue^0,w,c
  6615  003580  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6616  003582  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6617  003584  500A               	movf	color_read_Blue@tmp^0,w,c
  6618  003586  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6619  003588  6E0A               	movwf	color_read_Blue@tmp^0,c
  6620  00358A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6621  00358C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6622  00358E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6623                           
  6624                           ;color.c: 84:     I2C_2_Master_Stop();
  6625  003590  ECFA  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6626  003594                     
  6627                           ;color.c: 85:     return tmp;
  6628  003594  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6629  003598  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6630  00359C  0012               	return		;funcret
  6631  00359E                     __end_of_color_read_Blue:
  6632                           	callstack 0
  6633                           
  6634 ;; *************** function _I2C_2_Master_Write *****************
  6635 ;; Defined at:
  6636 ;;		line 45 in file "i2c.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  data_byte       1    wreg     unsigned char 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  data_byte       1    1[COMRAM] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1    wreg      void 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6654 ;;Total ram usage:        1 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; Hardware stack levels required when called: 2
  6657 ;; This function calls:
  6658 ;;		_I2C_2_Master_Idle
  6659 ;; This function is called by:
  6660 ;;		_color_writetoaddr
  6661 ;;		_color_read_Clear
  6662 ;;		_color_read_Red
  6663 ;;		_color_read_Green
  6664 ;;		_color_read_Blue
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text22
  6669  0037DC                     __ptext22:
  6670                           	callstack 0
  6671  0037DC                     _I2C_2_Master_Write:
  6672                           	callstack 26
  6673                           
  6674                           ;incstack = 0
  6675                           ;I2C_2_Master_Write@data_byte stored from wreg
  6676  0037DC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6677  0037DE                     
  6678                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6679  0037DE  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6680  0037E2                     
  6681                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6682  0037E2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6683  0037E6  0012               	return		;funcret
  6684  0037E8                     __end_of_I2C_2_Master_Write:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function _I2C_2_Master_Stop *****************
  6688 ;; Defined at:
  6689 ;;		line 39 in file "i2c.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 2
  6710 ;; This function calls:
  6711 ;;		_I2C_2_Master_Idle
  6712 ;; This function is called by:
  6713 ;;		_color_writetoaddr
  6714 ;;		_color_read_Clear
  6715 ;;		_color_read_Red
  6716 ;;		_color_read_Green
  6717 ;;		_color_read_Blue
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text23
  6722  0037F4                     __ptext23:
  6723                           	callstack 0
  6724  0037F4                     _I2C_2_Master_Stop:
  6725                           	callstack 26
  6726  0037F4                     
  6727                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6728  0037F4  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6729  0037F8                     
  6730                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6731  0037F8  010E               	movlb	14	; () banked
  6732  0037FA  85DA               	bsf	218,2,b	;volatile
  6733  0037FC                     
  6734                           ; BSR set to: 14
  6735  0037FC  0012               	return		;funcret
  6736  0037FE                     __end_of_I2C_2_Master_Stop:
  6737                           	callstack 0
  6738                           
  6739 ;; *************** function _I2C_2_Master_Start *****************
  6740 ;; Defined at:
  6741 ;;		line 27 in file "i2c.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      void 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;Total ram usage:        0 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; Hardware stack levels required when called: 2
  6762 ;; This function calls:
  6763 ;;		_I2C_2_Master_Idle
  6764 ;; This function is called by:
  6765 ;;		_color_writetoaddr
  6766 ;;		_color_read_Clear
  6767 ;;		_color_read_Red
  6768 ;;		_color_read_Green
  6769 ;;		_color_read_Blue
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text24
  6774  0037FE                     __ptext24:
  6775                           	callstack 0
  6776  0037FE                     _I2C_2_Master_Start:
  6777                           	callstack 26
  6778  0037FE                     
  6779                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6780  0037FE  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6781  003802                     
  6782                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6783  003802  010E               	movlb	14	; () banked
  6784  003804  81DA               	bsf	218,0,b	;volatile
  6785  003806                     
  6786                           ; BSR set to: 14
  6787  003806  0012               	return		;funcret
  6788  003808                     __end_of_I2C_2_Master_Start:
  6789                           	callstack 0
  6790                           
  6791 ;; *************** function _I2C_2_Master_RepStart *****************
  6792 ;; Defined at:
  6793 ;;		line 33 in file "i2c.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;		None
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;Total ram usage:        0 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 2
  6814 ;; This function calls:
  6815 ;;		_I2C_2_Master_Idle
  6816 ;; This function is called by:
  6817 ;;		_color_read_Clear
  6818 ;;		_color_read_Red
  6819 ;;		_color_read_Green
  6820 ;;		_color_read_Blue
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text25
  6825  003808                     __ptext25:
  6826                           	callstack 0
  6827  003808                     _I2C_2_Master_RepStart:
  6828                           	callstack 26
  6829  003808                     
  6830                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6831  003808  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6832  00380C                     
  6833                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6834  00380C  010E               	movlb	14	; () banked
  6835  00380E  83DA               	bsf	218,1,b	;volatile
  6836  003810                     
  6837                           ; BSR set to: 14
  6838  003810  0012               	return		;funcret
  6839  003812                     __end_of_I2C_2_Master_RepStart:
  6840                           	callstack 0
  6841                           
  6842 ;; *************** function _I2C_2_Master_Read *****************
  6843 ;; Defined at:
  6844 ;;		line 51 in file "i2c.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  ack             1    wreg     unsigned char 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  ack             1    2[COMRAM] unsigned char 
  6849 ;;  tmp             1    3[COMRAM] unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      unsigned char 
  6852 ;; Registers used:
  6853 ;;		wreg, status,2, status,0, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;Total ram usage:        3 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 2
  6866 ;; This function calls:
  6867 ;;		_I2C_2_Master_Idle
  6868 ;; This function is called by:
  6869 ;;		_color_read_Clear
  6870 ;;		_color_read_Red
  6871 ;;		_color_read_Green
  6872 ;;		_color_read_Blue
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text26
  6877  003670                     __ptext26:
  6878                           	callstack 0
  6879  003670                     _I2C_2_Master_Read:
  6880                           	callstack 26
  6881                           
  6882                           ; BSR set to: 14
  6883                           ;incstack = 0
  6884                           ;I2C_2_Master_Read@ack stored from wreg
  6885  003670  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6886  003672                     
  6887                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6888  003672  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6889  003676                     
  6890                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6891  003676  010E               	movlb	14	; () banked
  6892  003678  87DA               	bsf	218,3,b	;volatile
  6893                           
  6894                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6895  00367A  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6896  00367E                     
  6897                           ;i2c.c: 57:   tmp = SSP2BUF;
  6898  00367E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6899                           
  6900                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6901  003682  EC88  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6902  003686                     
  6903                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6904  003686  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6905  003688  B4D8               	btfsc	status,2,c
  6906  00368A  EF49  F01B         	goto	u2261
  6907  00368E  EF4D  F01B         	goto	u2260
  6908  003692                     u2261:
  6909  003692  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6910  003694  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6911  003696  EF4E  F01B         	goto	u2278
  6912  00369A                     u2260:
  6913  00369A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6914  00369C                     u2278:
  6915  00369C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6916  00369E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6917  0036A0  010E               	movlb	14	; () banked
  6918  0036A2  51DA               	movf	218,w,b	;volatile
  6919  0036A4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6920  0036A6  0BDF               	andlw	-33
  6921  0036A8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6922  0036AA  6FDA               	movwf	218,b	;volatile
  6923  0036AC                     
  6924                           ; BSR set to: 14
  6925                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6926  0036AC  89DA               	bsf	218,4,b	;volatile
  6927  0036AE                     
  6928                           ; BSR set to: 14
  6929                           ;i2c.c: 61:   return tmp;
  6930  0036AE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6931  0036B0                     
  6932                           ; BSR set to: 14
  6933  0036B0  0012               	return		;funcret
  6934  0036B2                     __end_of_I2C_2_Master_Read:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _I2C_2_Master_Idle *****************
  6938 ;; Defined at:
  6939 ;;		line 22 in file "i2c.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6957 ;;Total ram usage:        1 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; Hardware stack levels required when called: 1
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_I2C_2_Master_Start
  6964 ;;		_I2C_2_Master_RepStart
  6965 ;;		_I2C_2_Master_Stop
  6966 ;;		_I2C_2_Master_Write
  6967 ;;		_I2C_2_Master_Read
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text27
  6972  003710                     __ptext27:
  6973                           	callstack 0
  6974  003710                     _I2C_2_Master_Idle:
  6975                           	callstack 26
  6976  003710                     l154:
  6977  003710  010E               	movlb	14	; () banked
  6978  003712  B5D8               	btfsc	216,2,b	;volatile
  6979  003714  EF8E  F01B         	goto	u2241
  6980  003718  EF90  F01B         	goto	u2240
  6981  00371C                     u2241:
  6982  00371C  EF88  F01B         	goto	l154
  6983  003720                     u2240:
  6984  003720                     
  6985                           ; BSR set to: 14
  6986  003720  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6987  003724  0E1F               	movlw	31
  6988  003726  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6989  003728  A4D8               	btfss	status,2,c
  6990  00372A  EF99  F01B         	goto	u2251
  6991  00372E  EF9B  F01B         	goto	u2250
  6992  003732                     u2251:
  6993  003732  EF88  F01B         	goto	l154
  6994  003736                     u2250:
  6995  003736                     
  6996                           ; BSR set to: 14
  6997  003736  0012               	return		;funcret
  6998  003738                     __end_of_I2C_2_Master_Idle:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _White *****************
  7002 ;; Defined at:
  7003 ;;		line 176 in file "color.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  mL              2   42[COMRAM] PTR struct DC_motor
  7006 ;;		 -> main@motorL(9), 
  7007 ;;  mR              2   44[COMRAM] PTR struct DC_motor
  7008 ;;		 -> main@motorR(9), 
  7009 ;;  movementArra    2   46[COMRAM] PTR unsigned int 
  7010 ;;		 -> movementArray(20), 
  7011 ;;  movements       2   48[COMRAM] unsigned int 
  7012 ;;  timerArray      2   50[COMRAM] PTR unsigned int 
  7013 ;;		 -> timerArray(20), 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  tempTimerVal    2   58[COMRAM] unsigned int 
  7016 ;;  i               2   60[COMRAM] int 
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7026 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;Total ram usage:       20 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; Hardware stack levels required when called: 6
  7033 ;; This function calls:
  7034 ;;		_forward
  7035 ;;		_reverseTurnLeft90
  7036 ;;		_reverseTurnRight90
  7037 ;;		_stop
  7038 ;;		_turnLeft135
  7039 ;;		_turnLeft90
  7040 ;;		_turnRight135
  7041 ;;		_turnRight180
  7042 ;;		_turnRight90
  7043 ;; This function is called by:
  7044 ;;		_main
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text28
  7049  001C80                     __ptext28:
  7050                           	callstack 0
  7051  001C80                     _White:
  7052                           	callstack 24
  7053  001C80                     
  7054                           ;color.c: 176: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movement
      +                          Array[], unsigned int movements,unsigned int timerArray[]);color.c: 177: {;color.c: 178:
      +                               stop(mL, mR);
  7055  001C80  C02B  F019         	movff	White@mL,stop@mL
  7056  001C84  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7057  001C88  C02D  F01B         	movff	White@mR,stop@mR
  7058  001C8C  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7059  001C90  ECBF  F018         	call	_stop	;wreg free
  7060                           
  7061                           ;color.c: 179:     turnRight180(mL, mR);
  7062  001C94  C02B  F01D         	movff	White@mL,turnRight180@mL
  7063  001C98  C02C  F01E         	movff	White@mL+1,turnRight180@mL+1
  7064  001C9C  C02D  F01F         	movff	White@mR,turnRight180@mR
  7065  001CA0  C02E  F020         	movff	White@mR+1,turnRight180@mR+1
  7066  001CA4  EC55  F014         	call	_turnRight180	;wreg free
  7067  001CA8                     
  7068                           ;color.c: 180:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7069  001CA8  0E52               	movlw	82
  7070  001CAA  6E36               	movwf	(??_White+1)^0,c
  7071  001CAC  0E2B               	movlw	43
  7072  001CAE  6E35               	movwf	??_White^0,c
  7073  001CB0  0E00               	movlw	0
  7074  001CB2                     u4347:
  7075  001CB2  2EE8               	decfsz	wreg,f,c
  7076  001CB4  D7FE               	bra	u4347
  7077  001CB6  2E35               	decfsz	??_White^0,f,c
  7078  001CB8  D7FC               	bra	u4347
  7079  001CBA  2E36               	decfsz	(??_White+1)^0,f,c
  7080  001CBC  D7FA               	bra	u4347
  7081  001CBE  D000               	nop2	
  7082  001CC0                     
  7083                           ;color.c: 181:     for (int i=0; i<movements; i++){
  7084  001CC0  0E00               	movlw	0
  7085  001CC2  6E3E               	movwf	(White@i+1)^0,c
  7086  001CC4  0E00               	movlw	0
  7087  001CC6  6E3D               	movwf	White@i^0,c
  7088  001CC8  EF0E  F010         	goto	l3880
  7089  001CCC                     l3838:
  7090                           
  7091                           ;color.c: 182:         if (movementArray[movements-i-1] == 0){turnLeft90(mL, mR);}
  7092  001CCC  503D               	movf	White@i^0,w,c
  7093  001CCE  5C31               	subwf	White@movements^0,w,c
  7094  001CD0  6E35               	movwf	??_White^0,c
  7095  001CD2  503E               	movf	(White@i+1)^0,w,c
  7096  001CD4  5832               	subwfb	(White@movements+1)^0,w,c
  7097  001CD6  6E36               	movwf	(??_White+1)^0,c
  7098  001CD8  90D8               	bcf	status,0,c
  7099  001CDA  3635               	rlcf	??_White^0,f,c
  7100  001CDC  3636               	rlcf	(??_White+1)^0,f,c
  7101  001CDE  C02F  F037         	movff	White@movementArray,??_White+2
  7102  001CE2  C030  F038         	movff	White@movementArray+1,??_White+3
  7103  001CE6  5035               	movf	??_White^0,w,c
  7104  001CE8  2637               	addwf	(??_White+2)^0,f,c
  7105  001CEA  5036               	movf	(??_White+1)^0,w,c
  7106  001CEC  2238               	addwfc	(??_White+3)^0,f,c
  7107  001CEE  0EFE               	movlw	254
  7108  001CF0  2437               	addwf	(??_White+2)^0,w,c
  7109  001CF2  6ED9               	movwf	fsr2l,c
  7110  001CF4  0EFF               	movlw	255
  7111  001CF6  2038               	addwfc	(??_White+3)^0,w,c
  7112  001CF8  6EDA               	movwf	fsr2h,c
  7113  001CFA  50DE               	movf	postinc2,w,c
  7114  001CFC  10DE               	iorwf	postinc2,w,c
  7115  001CFE  A4D8               	btfss	status,2,c
  7116  001D00  EF84  F00E         	goto	u3761
  7117  001D04  EF86  F00E         	goto	u3760
  7118  001D08                     u3761:
  7119  001D08  EF92  F00E         	goto	l3842
  7120  001D0C                     u3760:
  7121  001D0C  C02B  F01D         	movff	White@mL,turnLeft90@mL
  7122  001D10  C02C  F01E         	movff	White@mL+1,turnLeft90@mL+1
  7123  001D14  C02D  F01F         	movff	White@mR,turnLeft90@mR
  7124  001D18  C02E  F020         	movff	White@mR+1,turnLeft90@mR+1
  7125  001D1C  ECB5  F013         	call	_turnLeft90	;wreg free
  7126  001D20  EFCC  F00F         	goto	l3870
  7127  001D24                     l3842:
  7128  001D24  503D               	movf	White@i^0,w,c
  7129  001D26  5C31               	subwf	White@movements^0,w,c
  7130  001D28  6E35               	movwf	??_White^0,c
  7131  001D2A  503E               	movf	(White@i+1)^0,w,c
  7132  001D2C  5832               	subwfb	(White@movements+1)^0,w,c
  7133  001D2E  6E36               	movwf	(??_White+1)^0,c
  7134  001D30  90D8               	bcf	status,0,c
  7135  001D32  3635               	rlcf	??_White^0,f,c
  7136  001D34  3636               	rlcf	(??_White+1)^0,f,c
  7137  001D36  C02F  F037         	movff	White@movementArray,??_White+2
  7138  001D3A  C030  F038         	movff	White@movementArray+1,??_White+3
  7139  001D3E  5035               	movf	??_White^0,w,c
  7140  001D40  2637               	addwf	(??_White+2)^0,f,c
  7141  001D42  5036               	movf	(??_White+1)^0,w,c
  7142  001D44  2238               	addwfc	(??_White+3)^0,f,c
  7143  001D46  0EFE               	movlw	254
  7144  001D48  2437               	addwf	(??_White+2)^0,w,c
  7145  001D4A  6ED9               	movwf	fsr2l,c
  7146  001D4C  0EFF               	movlw	255
  7147  001D4E  2038               	addwfc	(??_White+3)^0,w,c
  7148  001D50  6EDA               	movwf	fsr2h,c
  7149  001D52  04DE               	decf	postinc2,w,c
  7150  001D54  10DE               	iorwf	postinc2,w,c
  7151  001D56  A4D8               	btfss	status,2,c
  7152  001D58  EFB0  F00E         	goto	u3771
  7153  001D5C  EFB2  F00E         	goto	u3770
  7154  001D60                     u3771:
  7155  001D60  EFBE  F00E         	goto	l3846
  7156  001D64                     u3770:
  7157  001D64  C02B  F01D         	movff	White@mL,turnRight90@mL
  7158  001D68  C02C  F01E         	movff	White@mL+1,turnRight90@mL+1
  7159  001D6C  C02D  F01F         	movff	White@mR,turnRight90@mR
  7160  001D70  C02E  F020         	movff	White@mR+1,turnRight90@mR+1
  7161  001D74  ECF4  F014         	call	_turnRight90	;wreg free
  7162  001D78  EFCC  F00F         	goto	l3870
  7163  001D7C                     l3846:
  7164  001D7C  503D               	movf	White@i^0,w,c
  7165  001D7E  5C31               	subwf	White@movements^0,w,c
  7166  001D80  6E35               	movwf	??_White^0,c
  7167  001D82  503E               	movf	(White@i+1)^0,w,c
  7168  001D84  5832               	subwfb	(White@movements+1)^0,w,c
  7169  001D86  6E36               	movwf	(??_White+1)^0,c
  7170  001D88  90D8               	bcf	status,0,c
  7171  001D8A  3635               	rlcf	??_White^0,f,c
  7172  001D8C  3636               	rlcf	(??_White+1)^0,f,c
  7173  001D8E  C02F  F037         	movff	White@movementArray,??_White+2
  7174  001D92  C030  F038         	movff	White@movementArray+1,??_White+3
  7175  001D96  5035               	movf	??_White^0,w,c
  7176  001D98  2637               	addwf	(??_White+2)^0,f,c
  7177  001D9A  5036               	movf	(??_White+1)^0,w,c
  7178  001D9C  2238               	addwfc	(??_White+3)^0,f,c
  7179  001D9E  0EFE               	movlw	254
  7180  001DA0  2437               	addwf	(??_White+2)^0,w,c
  7181  001DA2  6ED9               	movwf	fsr2l,c
  7182  001DA4  0EFF               	movlw	255
  7183  001DA6  2038               	addwfc	(??_White+3)^0,w,c
  7184  001DA8  6EDA               	movwf	fsr2h,c
  7185  001DAA  0E02               	movlw	2
  7186  001DAC  18DE               	xorwf	postinc2,w,c
  7187  001DAE  10DE               	iorwf	postinc2,w,c
  7188  001DB0  A4D8               	btfss	status,2,c
  7189  001DB2  EFDD  F00E         	goto	u3781
  7190  001DB6  EFDF  F00E         	goto	u3780
  7191  001DBA                     u3781:
  7192  001DBA  EFEB  F00E         	goto	l3850
  7193  001DBE                     u3780:
  7194  001DBE  C02B  F01D         	movff	White@mL,turnRight180@mL
  7195  001DC2  C02C  F01E         	movff	White@mL+1,turnRight180@mL+1
  7196  001DC6  C02D  F01F         	movff	White@mR,turnRight180@mR
  7197  001DCA  C02E  F020         	movff	White@mR+1,turnRight180@mR+1
  7198  001DCE  EC55  F014         	call	_turnRight180	;wreg free
  7199  001DD2  EFCC  F00F         	goto	l3870
  7200  001DD6                     l3850:
  7201  001DD6  503D               	movf	White@i^0,w,c
  7202  001DD8  5C31               	subwf	White@movements^0,w,c
  7203  001DDA  6E35               	movwf	??_White^0,c
  7204  001DDC  503E               	movf	(White@i+1)^0,w,c
  7205  001DDE  5832               	subwfb	(White@movements+1)^0,w,c
  7206  001DE0  6E36               	movwf	(??_White+1)^0,c
  7207  001DE2  90D8               	bcf	status,0,c
  7208  001DE4  3635               	rlcf	??_White^0,f,c
  7209  001DE6  3636               	rlcf	(??_White+1)^0,f,c
  7210  001DE8  C02F  F037         	movff	White@movementArray,??_White+2
  7211  001DEC  C030  F038         	movff	White@movementArray+1,??_White+3
  7212  001DF0  5035               	movf	??_White^0,w,c
  7213  001DF2  2637               	addwf	(??_White+2)^0,f,c
  7214  001DF4  5036               	movf	(??_White+1)^0,w,c
  7215  001DF6  2238               	addwfc	(??_White+3)^0,f,c
  7216  001DF8  0EFE               	movlw	254
  7217  001DFA  2437               	addwf	(??_White+2)^0,w,c
  7218  001DFC  6ED9               	movwf	fsr2l,c
  7219  001DFE  0EFF               	movlw	255
  7220  001E00  2038               	addwfc	(??_White+3)^0,w,c
  7221  001E02  6EDA               	movwf	fsr2h,c
  7222  001E04  0E03               	movlw	3
  7223  001E06  18DE               	xorwf	postinc2,w,c
  7224  001E08  10DE               	iorwf	postinc2,w,c
  7225  001E0A  A4D8               	btfss	status,2,c
  7226  001E0C  EF0A  F00F         	goto	u3791
  7227  001E10  EF0C  F00F         	goto	u3790
  7228  001E14                     u3791:
  7229  001E14  EF18  F00F         	goto	l3854
  7230  001E18                     u3790:
  7231  001E18  C02B  F025         	movff	White@mL,reverseTurnLeft90@mL
  7232  001E1C  C02C  F026         	movff	White@mL+1,reverseTurnLeft90@mL+1
  7233  001E20  C02D  F027         	movff	White@mR,reverseTurnLeft90@mR
  7234  001E24  C02E  F028         	movff	White@mR+1,reverseTurnLeft90@mR+1
  7235  001E28  EC4A  F018         	call	_reverseTurnLeft90	;wreg free
  7236  001E2C  EFCC  F00F         	goto	l3870
  7237  001E30                     l3854:
  7238  001E30  503D               	movf	White@i^0,w,c
  7239  001E32  5C31               	subwf	White@movements^0,w,c
  7240  001E34  6E35               	movwf	??_White^0,c
  7241  001E36  503E               	movf	(White@i+1)^0,w,c
  7242  001E38  5832               	subwfb	(White@movements+1)^0,w,c
  7243  001E3A  6E36               	movwf	(??_White+1)^0,c
  7244  001E3C  90D8               	bcf	status,0,c
  7245  001E3E  3635               	rlcf	??_White^0,f,c
  7246  001E40  3636               	rlcf	(??_White+1)^0,f,c
  7247  001E42  C02F  F037         	movff	White@movementArray,??_White+2
  7248  001E46  C030  F038         	movff	White@movementArray+1,??_White+3
  7249  001E4A  5035               	movf	??_White^0,w,c
  7250  001E4C  2637               	addwf	(??_White+2)^0,f,c
  7251  001E4E  5036               	movf	(??_White+1)^0,w,c
  7252  001E50  2238               	addwfc	(??_White+3)^0,f,c
  7253  001E52  0EFE               	movlw	254
  7254  001E54  2437               	addwf	(??_White+2)^0,w,c
  7255  001E56  6ED9               	movwf	fsr2l,c
  7256  001E58  0EFF               	movlw	255
  7257  001E5A  2038               	addwfc	(??_White+3)^0,w,c
  7258  001E5C  6EDA               	movwf	fsr2h,c
  7259  001E5E  0E04               	movlw	4
  7260  001E60  18DE               	xorwf	postinc2,w,c
  7261  001E62  10DE               	iorwf	postinc2,w,c
  7262  001E64  A4D8               	btfss	status,2,c
  7263  001E66  EF37  F00F         	goto	u3801
  7264  001E6A  EF39  F00F         	goto	u3800
  7265  001E6E                     u3801:
  7266  001E6E  EF45  F00F         	goto	l3858
  7267  001E72                     u3800:
  7268  001E72  C02B  F025         	movff	White@mL,reverseTurnRight90@mL
  7269  001E76  C02C  F026         	movff	White@mL+1,reverseTurnRight90@mL+1
  7270  001E7A  C02D  F027         	movff	White@mR,reverseTurnRight90@mR
  7271  001E7E  C02E  F028         	movff	White@mR+1,reverseTurnRight90@mR+1
  7272  001E82  ECD4  F017         	call	_reverseTurnRight90	;wreg free
  7273  001E86  EFCC  F00F         	goto	l3870
  7274  001E8A                     l3858:
  7275  001E8A  503D               	movf	White@i^0,w,c
  7276  001E8C  5C31               	subwf	White@movements^0,w,c
  7277  001E8E  6E35               	movwf	??_White^0,c
  7278  001E90  503E               	movf	(White@i+1)^0,w,c
  7279  001E92  5832               	subwfb	(White@movements+1)^0,w,c
  7280  001E94  6E36               	movwf	(??_White+1)^0,c
  7281  001E96  90D8               	bcf	status,0,c
  7282  001E98  3635               	rlcf	??_White^0,f,c
  7283  001E9A  3636               	rlcf	(??_White+1)^0,f,c
  7284  001E9C  C02F  F037         	movff	White@movementArray,??_White+2
  7285  001EA0  C030  F038         	movff	White@movementArray+1,??_White+3
  7286  001EA4  5035               	movf	??_White^0,w,c
  7287  001EA6  2637               	addwf	(??_White+2)^0,f,c
  7288  001EA8  5036               	movf	(??_White+1)^0,w,c
  7289  001EAA  2238               	addwfc	(??_White+3)^0,f,c
  7290  001EAC  0EFE               	movlw	254
  7291  001EAE  2437               	addwf	(??_White+2)^0,w,c
  7292  001EB0  6ED9               	movwf	fsr2l,c
  7293  001EB2  0EFF               	movlw	255
  7294  001EB4  2038               	addwfc	(??_White+3)^0,w,c
  7295  001EB6  6EDA               	movwf	fsr2h,c
  7296  001EB8  0E05               	movlw	5
  7297  001EBA  18DE               	xorwf	postinc2,w,c
  7298  001EBC  10DE               	iorwf	postinc2,w,c
  7299  001EBE  A4D8               	btfss	status,2,c
  7300  001EC0  EF64  F00F         	goto	u3811
  7301  001EC4  EF66  F00F         	goto	u3810
  7302  001EC8                     u3811:
  7303  001EC8  EF72  F00F         	goto	l3862
  7304  001ECC                     u3810:
  7305  001ECC  C02B  F01D         	movff	White@mL,turnLeft135@mL
  7306  001ED0  C02C  F01E         	movff	White@mL+1,turnLeft135@mL+1
  7307  001ED4  C02D  F01F         	movff	White@mR,turnLeft135@mR
  7308  001ED8  C02E  F020         	movff	White@mR+1,turnLeft135@mR+1
  7309  001EDC  EC31  F016         	call	_turnLeft135	;wreg free
  7310  001EE0  EFCC  F00F         	goto	l3870
  7311  001EE4                     l3862:
  7312  001EE4  503D               	movf	White@i^0,w,c
  7313  001EE6  5C31               	subwf	White@movements^0,w,c
  7314  001EE8  6E35               	movwf	??_White^0,c
  7315  001EEA  503E               	movf	(White@i+1)^0,w,c
  7316  001EEC  5832               	subwfb	(White@movements+1)^0,w,c
  7317  001EEE  6E36               	movwf	(??_White+1)^0,c
  7318  001EF0  90D8               	bcf	status,0,c
  7319  001EF2  3635               	rlcf	??_White^0,f,c
  7320  001EF4  3636               	rlcf	(??_White+1)^0,f,c
  7321  001EF6  C02F  F037         	movff	White@movementArray,??_White+2
  7322  001EFA  C030  F038         	movff	White@movementArray+1,??_White+3
  7323  001EFE  5035               	movf	??_White^0,w,c
  7324  001F00  2637               	addwf	(??_White+2)^0,f,c
  7325  001F02  5036               	movf	(??_White+1)^0,w,c
  7326  001F04  2238               	addwfc	(??_White+3)^0,f,c
  7327  001F06  0EFE               	movlw	254
  7328  001F08  2437               	addwf	(??_White+2)^0,w,c
  7329  001F0A  6ED9               	movwf	fsr2l,c
  7330  001F0C  0EFF               	movlw	255
  7331  001F0E  2038               	addwfc	(??_White+3)^0,w,c
  7332  001F10  6EDA               	movwf	fsr2h,c
  7333  001F12  0E06               	movlw	6
  7334  001F14  18DE               	xorwf	postinc2,w,c
  7335  001F16  10DE               	iorwf	postinc2,w,c
  7336  001F18  A4D8               	btfss	status,2,c
  7337  001F1A  EF91  F00F         	goto	u3821
  7338  001F1E  EF93  F00F         	goto	u3820
  7339  001F22                     u3821:
  7340  001F22  EF9F  F00F         	goto	l3866
  7341  001F26                     u3820:
  7342  001F26  C02B  F01D         	movff	White@mL,turnRight135@mL
  7343  001F2A  C02C  F01E         	movff	White@mL+1,turnRight135@mL+1
  7344  001F2E  C02D  F01F         	movff	White@mR,turnRight135@mR
  7345  001F32  C02E  F020         	movff	White@mR+1,turnRight135@mR+1
  7346  001F36  EC93  F015         	call	_turnRight135	;wreg free
  7347  001F3A  EFCC  F00F         	goto	l3870
  7348  001F3E                     l3866:
  7349  001F3E  503D               	movf	White@i^0,w,c
  7350  001F40  5C31               	subwf	White@movements^0,w,c
  7351  001F42  6E35               	movwf	??_White^0,c
  7352  001F44  503E               	movf	(White@i+1)^0,w,c
  7353  001F46  5832               	subwfb	(White@movements+1)^0,w,c
  7354  001F48  6E36               	movwf	(??_White+1)^0,c
  7355  001F4A  90D8               	bcf	status,0,c
  7356  001F4C  3635               	rlcf	??_White^0,f,c
  7357  001F4E  3636               	rlcf	(??_White+1)^0,f,c
  7358  001F50  C02F  F037         	movff	White@movementArray,??_White+2
  7359  001F54  C030  F038         	movff	White@movementArray+1,??_White+3
  7360  001F58  5035               	movf	??_White^0,w,c
  7361  001F5A  2637               	addwf	(??_White+2)^0,f,c
  7362  001F5C  5036               	movf	(??_White+1)^0,w,c
  7363  001F5E  2238               	addwfc	(??_White+3)^0,f,c
  7364  001F60  0EFE               	movlw	254
  7365  001F62  2437               	addwf	(??_White+2)^0,w,c
  7366  001F64  6ED9               	movwf	fsr2l,c
  7367  001F66  0EFF               	movlw	255
  7368  001F68  2038               	addwfc	(??_White+3)^0,w,c
  7369  001F6A  6EDA               	movwf	fsr2h,c
  7370  001F6C  0E09               	movlw	9
  7371  001F6E  18DE               	xorwf	postinc2,w,c
  7372  001F70  10DE               	iorwf	postinc2,w,c
  7373  001F72  A4D8               	btfss	status,2,c
  7374  001F74  EFBE  F00F         	goto	u3831
  7375  001F78  EFC0  F00F         	goto	u3830
  7376  001F7C                     u3831:
  7377  001F7C  EFCC  F00F         	goto	l111
  7378  001F80                     u3830:
  7379  001F80  C02B  F019         	movff	White@mL,stop@mL
  7380  001F84  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7381  001F88  C02D  F01B         	movff	White@mR,stop@mR
  7382  001F8C  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7383  001F90  ECBF  F018         	call	_stop	;wreg free
  7384  001F94  EFCC  F00F         	goto	l3870
  7385  001F98                     l111:
  7386  001F98                     l3870:
  7387                           
  7388                           ;color.c: 190:         unsigned int tempTimerVal = 0;
  7389  001F98  0E00               	movlw	0
  7390  001F9A  6E3C               	movwf	(White@tempTimerVal+1)^0,c
  7391  001F9C  0E00               	movlw	0
  7392  001F9E  6E3B               	movwf	White@tempTimerVal^0,c
  7393  001FA0                     
  7394                           ;color.c: 191:         forward(mL, mR);
  7395  001FA0  C02B  F019         	movff	White@mL,forward@mL
  7396  001FA4  C02C  F01A         	movff	White@mL+1,forward@mL+1
  7397  001FA8  C02D  F01B         	movff	White@mR,forward@mR
  7398  001FAC  C02E  F01C         	movff	White@mR+1,forward@mR+1
  7399  001FB0  EC06  F01A         	call	_forward	;wreg free
  7400                           
  7401                           ;color.c: 192:         TMR0H = 0;
  7402  001FB4  0E00               	movlw	0
  7403  001FB6  6ED4               	movwf	212,c	;volatile
  7404                           
  7405                           ;color.c: 193:         TMR0L = 0;
  7406  001FB8  0E00               	movlw	0
  7407  001FBA  6ED3               	movwf	211,c	;volatile
  7408                           
  7409                           ;color.c: 194:         while(tempTimerVal < timerArray[movements-i-1]){
  7410  001FBC  EFEA  F00F         	goto	l3876
  7411  001FC0                     l118:
  7412                           
  7413                           ;color.c: 195:             tempTimerVal = TMR0L;
  7414  001FC0  CFD3 F03B          	movff	4051,White@tempTimerVal	;volatile
  7415  001FC4  6A3C               	clrf	(White@tempTimerVal+1)^0,c
  7416  001FC6                     
  7417                           ;color.c: 196:             tempTimerVal |= (TMR0H << 8);
  7418  001FC6  50D4               	movf	212,w,c	;volatile
  7419  001FC8  6E36               	movwf	(??_White+1)^0,c
  7420  001FCA  6A35               	clrf	??_White^0,c
  7421  001FCC  5035               	movf	??_White^0,w,c
  7422  001FCE  123B               	iorwf	White@tempTimerVal^0,f,c
  7423  001FD0  5036               	movf	(??_White+1)^0,w,c
  7424  001FD2  123C               	iorwf	(White@tempTimerVal+1)^0,f,c
  7425  001FD4                     l3876:
  7426                           
  7427                           ;color.c: 194:         while(tempTimerVal < timerArray[movements-i-1]){
  7428  001FD4  503D               	movf	White@i^0,w,c
  7429  001FD6  5C31               	subwf	White@movements^0,w,c
  7430  001FD8  6E35               	movwf	??_White^0,c
  7431  001FDA  503E               	movf	(White@i+1)^0,w,c
  7432  001FDC  5832               	subwfb	(White@movements+1)^0,w,c
  7433  001FDE  6E36               	movwf	(??_White+1)^0,c
  7434  001FE0  90D8               	bcf	status,0,c
  7435  001FE2  3635               	rlcf	??_White^0,f,c
  7436  001FE4  3636               	rlcf	(??_White+1)^0,f,c
  7437  001FE6  C033  F037         	movff	White@timerArray,??_White+2
  7438  001FEA  C034  F038         	movff	White@timerArray+1,??_White+3
  7439  001FEE  5035               	movf	??_White^0,w,c
  7440  001FF0  2637               	addwf	(??_White+2)^0,f,c
  7441  001FF2  5036               	movf	(??_White+1)^0,w,c
  7442  001FF4  2238               	addwfc	(??_White+3)^0,f,c
  7443  001FF6  0EFE               	movlw	254
  7444  001FF8  2437               	addwf	(??_White+2)^0,w,c
  7445  001FFA  6ED9               	movwf	fsr2l,c
  7446  001FFC  0EFF               	movlw	255
  7447  001FFE  2038               	addwfc	(??_White+3)^0,w,c
  7448  002000  6EDA               	movwf	fsr2h,c
  7449  002002  50DE               	movf	postinc2,w,c
  7450  002004  5C3B               	subwf	White@tempTimerVal^0,w,c
  7451  002006  50DE               	movf	postinc2,w,c
  7452  002008  583C               	subwfb	(White@tempTimerVal+1)^0,w,c
  7453  00200A  A0D8               	btfss	status,0,c
  7454  00200C  EF0A  F010         	goto	u3841
  7455  002010  EF0C  F010         	goto	u3840
  7456  002014                     u3841:
  7457  002014  EFE0  F00F         	goto	l118
  7458  002018                     u3840:
  7459  002018                     
  7460                           ;color.c: 198:     }
  7461  002018  4A3D               	infsnz	White@i^0,f,c
  7462  00201A  2A3E               	incf	(White@i+1)^0,f,c
  7463  00201C                     l3880:
  7464  00201C  5031               	movf	White@movements^0,w,c
  7465  00201E  5C3D               	subwf	White@i^0,w,c
  7466  002020  5032               	movf	(White@movements+1)^0,w,c
  7467  002022  583E               	subwfb	(White@i+1)^0,w,c
  7468  002024  A0D8               	btfss	status,0,c
  7469  002026  EF17  F010         	goto	u3851
  7470  00202A  EF19  F010         	goto	u3850
  7471  00202E                     u3851:
  7472  00202E  EF66  F00E         	goto	l3838
  7473  002032                     u3850:
  7474  002032                     
  7475                           ;color.c: 199:     stop(mL, mR);
  7476  002032  C02B  F019         	movff	White@mL,stop@mL
  7477  002036  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7478  00203A  C02D  F01B         	movff	White@mR,stop@mR
  7479  00203E  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7480  002042  ECBF  F018         	call	_stop	;wreg free
  7481  002046  0012               	return		;funcret
  7482  002048                     __end_of_White:
  7483                           	callstack 0
  7484                           
  7485 ;; *************** function _turnRight180 *****************
  7486 ;; Defined at:
  7487 ;;		line 183 in file "dc_motor.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7490 ;;		 -> main@motorL(9), 
  7491 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7492 ;;		 -> main@motorR(9), 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  i               2   34[COMRAM] unsigned int 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;Total ram usage:        8 bytes
  7509 ;; Hardware stack levels used: 1
  7510 ;; Hardware stack levels required when called: 4
  7511 ;; This function calls:
  7512 ;;		_reverse
  7513 ;;		_setMotorPWM
  7514 ;;		_stop
  7515 ;; This function is called by:
  7516 ;;		_White
  7517 ;;		_main
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text29
  7522  0028AA                     __ptext29:
  7523                           	callstack 0
  7524  0028AA                     _turnRight180:
  7525                           	callstack 26
  7526  0028AA                     
  7527                           ;dc_motor.c: 183: void turnRight180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 184: {;dc_motor.c: 185:     stop(mL, mR);
  7528  0028AA  C01D  F019         	movff	turnRight180@mL,stop@mL
  7529  0028AE  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7530  0028B2  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7531  0028B6  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7532  0028BA  ECBF  F018         	call	_stop	;wreg free
  7533  0028BE                     
  7534                           ;dc_motor.c: 186:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7535  0028BE  0E05               	movlw	5
  7536  0028C0  6E22               	movwf	(??_turnRight180+1)^0,c
  7537  0028C2  0E0F               	movlw	15
  7538  0028C4  6E21               	movwf	??_turnRight180^0,c
  7539  0028C6  0EF1               	movlw	241
  7540  0028C8                     u4357:
  7541  0028C8  2EE8               	decfsz	wreg,f,c
  7542  0028CA  D7FE               	bra	u4357
  7543  0028CC  2E21               	decfsz	??_turnRight180^0,f,c
  7544  0028CE  D7FC               	bra	u4357
  7545  0028D0  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7546  0028D2  D7FA               	bra	u4357
  7547  0028D4  F000               	nop	
  7548  0028D6                     
  7549                           ;dc_motor.c: 187:     reverse(mL, mR);
  7550  0028D6  C01D  F019         	movff	turnRight180@mL,reverse@mL
  7551  0028DA  C01E  F01A         	movff	turnRight180@mL+1,reverse@mL+1
  7552  0028DE  C01F  F01B         	movff	turnRight180@mR,reverse@mR
  7553  0028E2  C020  F01C         	movff	turnRight180@mR+1,reverse@mR+1
  7554  0028E6  ECDD  F019         	call	_reverse	;wreg free
  7555                           
  7556                           ;dc_motor.c: 188:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7557  0028EA  0E21               	movlw	33
  7558  0028EC  6E22               	movwf	(??_turnRight180+1)^0,c
  7559  0028EE  0E78               	movlw	120
  7560  0028F0  6E21               	movwf	??_turnRight180^0,c
  7561  0028F2  0E98               	movlw	152
  7562  0028F4                     u4367:
  7563  0028F4  2EE8               	decfsz	wreg,f,c
  7564  0028F6  D7FE               	bra	u4367
  7565  0028F8  2E21               	decfsz	??_turnRight180^0,f,c
  7566  0028FA  D7FC               	bra	u4367
  7567  0028FC  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7568  0028FE  D7FA               	bra	u4367
  7569  002900  D000               	nop2	
  7570  002902                     
  7571                           ;dc_motor.c: 189:     stop(mL, mR);
  7572  002902  C01D  F019         	movff	turnRight180@mL,stop@mL
  7573  002906  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7574  00290A  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7575  00290E  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7576  002912  ECBF  F018         	call	_stop	;wreg free
  7577  002916                     
  7578                           ;dc_motor.c: 190:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7579  002916  0E0D               	movlw	13
  7580  002918  6E22               	movwf	(??_turnRight180+1)^0,c
  7581  00291A  0E2D               	movlw	45
  7582  00291C  6E21               	movwf	??_turnRight180^0,c
  7583  00291E  0ED8               	movlw	216
  7584  002920                     u4377:
  7585  002920  2EE8               	decfsz	wreg,f,c
  7586  002922  D7FE               	bra	u4377
  7587  002924  2E21               	decfsz	??_turnRight180^0,f,c
  7588  002926  D7FC               	bra	u4377
  7589  002928  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7590  00292A  D7FA               	bra	u4377
  7591  00292C                     
  7592                           ;dc_motor.c: 192:     (*mL).direction = 1;
  7593  00292C  EE20 F001          	lfsr	2,1
  7594  002930  501D               	movf	turnRight180@mL^0,w,c
  7595  002932  26D9               	addwf	fsr2l,f,c
  7596  002934  501E               	movf	(turnRight180@mL+1)^0,w,c
  7597  002936  22DA               	addwfc	fsr2h,f,c
  7598  002938  0E01               	movlw	1
  7599  00293A  6EDF               	movwf	indf2,c
  7600  00293C                     
  7601                           ;dc_motor.c: 193:     (*mR).direction = 0;
  7602  00293C  EE20 F001          	lfsr	2,1
  7603  002940  501F               	movf	turnRight180@mR^0,w,c
  7604  002942  26D9               	addwf	fsr2l,f,c
  7605  002944  5020               	movf	(turnRight180@mR+1)^0,w,c
  7606  002946  22DA               	addwfc	fsr2h,f,c
  7607  002948  0E00               	movlw	0
  7608  00294A  6EDF               	movwf	indf2,c
  7609  00294C                     
  7610                           ;dc_motor.c: 194:     for (unsigned int i = 0; i < 75; ++i){
  7611  00294C  0E00               	movlw	0
  7612  00294E  6E24               	movwf	(turnRight180@i+1)^0,c
  7613  002950  0E00               	movlw	0
  7614  002952  6E23               	movwf	turnRight180@i^0,c
  7615  002954                     l2986:
  7616                           
  7617                           ;dc_motor.c: 195:         (mL->power) += 1;
  7618  002954  C01D  FFD9         	movff	turnRight180@mL,fsr2l
  7619  002958  C01E  FFDA         	movff	turnRight180@mL+1,fsr2h
  7620  00295C  2ADF               	incf	indf2,f,c
  7621                           
  7622                           ;dc_motor.c: 196:         (mR->power) += 1;
  7623  00295E  C01F  FFD9         	movff	turnRight180@mR,fsr2l
  7624  002962  C020  FFDA         	movff	turnRight180@mR+1,fsr2h
  7625  002966  2ADF               	incf	indf2,f,c
  7626  002968                     
  7627                           ;dc_motor.c: 197:         setMotorPWM(mL);
  7628  002968  C01D  F00E         	movff	turnRight180@mL,setMotorPWM@m
  7629  00296C  C01E  F00F         	movff	turnRight180@mL+1,setMotorPWM@m+1
  7630  002970  ECF1  F011         	call	_setMotorPWM	;wreg free
  7631  002974                     
  7632                           ;dc_motor.c: 198:         setMotorPWM(mR);
  7633  002974  C01F  F00E         	movff	turnRight180@mR,setMotorPWM@m
  7634  002978  C020  F00F         	movff	turnRight180@mR+1,setMotorPWM@m+1
  7635  00297C  ECF1  F011         	call	_setMotorPWM	;wreg free
  7636  002980                     
  7637                           ;dc_motor.c: 199:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7638  002980  0EA0               	movlw	160
  7639  002982                     u4387:
  7640  002982  D000               	nop2	
  7641  002984  2EE8               	decfsz	wreg,f,c
  7642  002986  D7FD               	bra	u4387
  7643  002988                     
  7644                           ;dc_motor.c: 200:     }
  7645  002988  4A23               	infsnz	turnRight180@i^0,f,c
  7646  00298A  2A24               	incf	(turnRight180@i+1)^0,f,c
  7647  00298C  5024               	movf	(turnRight180@i+1)^0,w,c
  7648  00298E  E109               	bnz	u2370
  7649  002990  0E4B               	movlw	75
  7650  002992  5C23               	subwf	turnRight180@i^0,w,c
  7651  002994  A0D8               	btfss	status,0,c
  7652  002996  EFCF  F014         	goto	u2371
  7653  00299A  EFD1  F014         	goto	u2370
  7654  00299E                     u2371:
  7655  00299E  EFAA  F014         	goto	l2986
  7656  0029A2                     u2370:
  7657  0029A2                     
  7658                           ;dc_motor.c: 201:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7659  0029A2  0E21               	movlw	33
  7660  0029A4  6E22               	movwf	(??_turnRight180+1)^0,c
  7661  0029A6  0E78               	movlw	120
  7662  0029A8  6E21               	movwf	??_turnRight180^0,c
  7663  0029AA  0E98               	movlw	152
  7664  0029AC                     u4397:
  7665  0029AC  2EE8               	decfsz	wreg,f,c
  7666  0029AE  D7FE               	bra	u4397
  7667  0029B0  2E21               	decfsz	??_turnRight180^0,f,c
  7668  0029B2  D7FC               	bra	u4397
  7669  0029B4  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7670  0029B6  D7FA               	bra	u4397
  7671  0029B8  D000               	nop2	
  7672  0029BA                     
  7673                           ;dc_motor.c: 202:     stop(mL, mR);
  7674  0029BA  C01D  F019         	movff	turnRight180@mL,stop@mL
  7675  0029BE  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7676  0029C2  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7677  0029C6  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7678  0029CA  ECBF  F018         	call	_stop	;wreg free
  7679  0029CE                     
  7680                           ;dc_motor.c: 203:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7681  0029CE  0E05               	movlw	5
  7682  0029D0  6E22               	movwf	(??_turnRight180+1)^0,c
  7683  0029D2  0E0F               	movlw	15
  7684  0029D4  6E21               	movwf	??_turnRight180^0,c
  7685  0029D6  0EF1               	movlw	241
  7686  0029D8                     u4407:
  7687  0029D8  2EE8               	decfsz	wreg,f,c
  7688  0029DA  D7FE               	bra	u4407
  7689  0029DC  2E21               	decfsz	??_turnRight180^0,f,c
  7690  0029DE  D7FC               	bra	u4407
  7691  0029E0  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7692  0029E2  D7FA               	bra	u4407
  7693  0029E4  F000               	nop	
  7694  0029E6  0012               	return		;funcret
  7695  0029E8                     __end_of_turnRight180:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _turnRight135 *****************
  7699 ;; Defined at:
  7700 ;;		line 159 in file "dc_motor.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7703 ;;		 -> main@motorL(9), 
  7704 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7705 ;;		 -> main@motorR(9), 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  i               2   34[COMRAM] unsigned int 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      void 
  7710 ;; Registers used:
  7711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;Total ram usage:        8 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; Hardware stack levels required when called: 4
  7724 ;; This function calls:
  7725 ;;		_reverse
  7726 ;;		_setMotorPWM
  7727 ;;		_stop
  7728 ;; This function is called by:
  7729 ;;		_White
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text30
  7735  002B26                     __ptext30:
  7736                           	callstack 0
  7737  002B26                     _turnRight135:
  7738                           	callstack 26
  7739  002B26                     
  7740                           ;dc_motor.c: 159: void turnRight135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 160: {;dc_motor.c: 161:     stop(mL, mR);
  7741  002B26  C01D  F019         	movff	turnRight135@mL,stop@mL
  7742  002B2A  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7743  002B2E  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7744  002B32  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7745  002B36  ECBF  F018         	call	_stop	;wreg free
  7746  002B3A                     
  7747                           ;dc_motor.c: 162:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7748  002B3A  0E05               	movlw	5
  7749  002B3C  6E22               	movwf	(??_turnRight135+1)^0,c
  7750  002B3E  0E0F               	movlw	15
  7751  002B40  6E21               	movwf	??_turnRight135^0,c
  7752  002B42  0EF1               	movlw	241
  7753  002B44                     u4417:
  7754  002B44  2EE8               	decfsz	wreg,f,c
  7755  002B46  D7FE               	bra	u4417
  7756  002B48  2E21               	decfsz	??_turnRight135^0,f,c
  7757  002B4A  D7FC               	bra	u4417
  7758  002B4C  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7759  002B4E  D7FA               	bra	u4417
  7760  002B50  F000               	nop	
  7761  002B52                     
  7762                           ;dc_motor.c: 163:     reverse(mL, mR);
  7763  002B52  C01D  F019         	movff	turnRight135@mL,reverse@mL
  7764  002B56  C01E  F01A         	movff	turnRight135@mL+1,reverse@mL+1
  7765  002B5A  C01F  F01B         	movff	turnRight135@mR,reverse@mR
  7766  002B5E  C020  F01C         	movff	turnRight135@mR+1,reverse@mR+1
  7767  002B62  ECDD  F019         	call	_reverse	;wreg free
  7768                           
  7769                           ;dc_motor.c: 164:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7770  002B66  0E21               	movlw	33
  7771  002B68  6E22               	movwf	(??_turnRight135+1)^0,c
  7772  002B6A  0E78               	movlw	120
  7773  002B6C  6E21               	movwf	??_turnRight135^0,c
  7774  002B6E  0E98               	movlw	152
  7775  002B70                     u4427:
  7776  002B70  2EE8               	decfsz	wreg,f,c
  7777  002B72  D7FE               	bra	u4427
  7778  002B74  2E21               	decfsz	??_turnRight135^0,f,c
  7779  002B76  D7FC               	bra	u4427
  7780  002B78  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7781  002B7A  D7FA               	bra	u4427
  7782  002B7C  D000               	nop2	
  7783  002B7E                     
  7784                           ;dc_motor.c: 165:     stop(mL, mR);
  7785  002B7E  C01D  F019         	movff	turnRight135@mL,stop@mL
  7786  002B82  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7787  002B86  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7788  002B8A  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7789  002B8E  ECBF  F018         	call	_stop	;wreg free
  7790  002B92                     
  7791                           ;dc_motor.c: 166:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7792  002B92  0E0D               	movlw	13
  7793  002B94  6E22               	movwf	(??_turnRight135+1)^0,c
  7794  002B96  0E2D               	movlw	45
  7795  002B98  6E21               	movwf	??_turnRight135^0,c
  7796  002B9A  0ED8               	movlw	216
  7797  002B9C                     u4437:
  7798  002B9C  2EE8               	decfsz	wreg,f,c
  7799  002B9E  D7FE               	bra	u4437
  7800  002BA0  2E21               	decfsz	??_turnRight135^0,f,c
  7801  002BA2  D7FC               	bra	u4437
  7802  002BA4  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7803  002BA6  D7FA               	bra	u4437
  7804  002BA8                     
  7805                           ;dc_motor.c: 168:     (*mL).direction = 1;
  7806  002BA8  EE20 F001          	lfsr	2,1
  7807  002BAC  501D               	movf	turnRight135@mL^0,w,c
  7808  002BAE  26D9               	addwf	fsr2l,f,c
  7809  002BB0  501E               	movf	(turnRight135@mL+1)^0,w,c
  7810  002BB2  22DA               	addwfc	fsr2h,f,c
  7811  002BB4  0E01               	movlw	1
  7812  002BB6  6EDF               	movwf	indf2,c
  7813  002BB8                     
  7814                           ;dc_motor.c: 169:     (*mR).direction = 0;
  7815  002BB8  EE20 F001          	lfsr	2,1
  7816  002BBC  501F               	movf	turnRight135@mR^0,w,c
  7817  002BBE  26D9               	addwf	fsr2l,f,c
  7818  002BC0  5020               	movf	(turnRight135@mR+1)^0,w,c
  7819  002BC2  22DA               	addwfc	fsr2h,f,c
  7820  002BC4  0E00               	movlw	0
  7821  002BC6  6EDF               	movwf	indf2,c
  7822  002BC8                     
  7823                           ;dc_motor.c: 170:     for (unsigned int i = 0; i < 75; ++i){
  7824  002BC8  0E00               	movlw	0
  7825  002BCA  6E24               	movwf	(turnRight135@i+1)^0,c
  7826  002BCC  0E00               	movlw	0
  7827  002BCE  6E23               	movwf	turnRight135@i^0,c
  7828  002BD0                     l3106:
  7829                           
  7830                           ;dc_motor.c: 171:         (mL->power) += 1;
  7831  002BD0  C01D  FFD9         	movff	turnRight135@mL,fsr2l
  7832  002BD4  C01E  FFDA         	movff	turnRight135@mL+1,fsr2h
  7833  002BD8  2ADF               	incf	indf2,f,c
  7834                           
  7835                           ;dc_motor.c: 172:         (mR->power) += 1;
  7836  002BDA  C01F  FFD9         	movff	turnRight135@mR,fsr2l
  7837  002BDE  C020  FFDA         	movff	turnRight135@mR+1,fsr2h
  7838  002BE2  2ADF               	incf	indf2,f,c
  7839  002BE4                     
  7840                           ;dc_motor.c: 173:         setMotorPWM(mL);
  7841  002BE4  C01D  F00E         	movff	turnRight135@mL,setMotorPWM@m
  7842  002BE8  C01E  F00F         	movff	turnRight135@mL+1,setMotorPWM@m+1
  7843  002BEC  ECF1  F011         	call	_setMotorPWM	;wreg free
  7844  002BF0                     
  7845                           ;dc_motor.c: 174:         setMotorPWM(mR);
  7846  002BF0  C01F  F00E         	movff	turnRight135@mR,setMotorPWM@m
  7847  002BF4  C020  F00F         	movff	turnRight135@mR+1,setMotorPWM@m+1
  7848  002BF8  ECF1  F011         	call	_setMotorPWM	;wreg free
  7849  002BFC                     
  7850                           ;dc_motor.c: 175:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7851  002BFC  0EA0               	movlw	160
  7852  002BFE                     u4447:
  7853  002BFE  D000               	nop2	
  7854  002C00  2EE8               	decfsz	wreg,f,c
  7855  002C02  D7FD               	bra	u4447
  7856  002C04                     
  7857                           ;dc_motor.c: 176:     }
  7858  002C04  4A23               	infsnz	turnRight135@i^0,f,c
  7859  002C06  2A24               	incf	(turnRight135@i+1)^0,f,c
  7860  002C08  5024               	movf	(turnRight135@i+1)^0,w,c
  7861  002C0A  E109               	bnz	u2390
  7862  002C0C  0E4B               	movlw	75
  7863  002C0E  5C23               	subwf	turnRight135@i^0,w,c
  7864  002C10  A0D8               	btfss	status,0,c
  7865  002C12  EF0D  F016         	goto	u2391
  7866  002C16  EF0F  F016         	goto	u2390
  7867  002C1A                     u2391:
  7868  002C1A  EFE8  F015         	goto	l3106
  7869  002C1E                     u2390:
  7870  002C1E                     
  7871                           ;dc_motor.c: 177:     _delay((unsigned long)((275)*(64000000/4000.0)));
  7872  002C1E  0E17               	movlw	23
  7873  002C20  6E22               	movwf	(??_turnRight135+1)^0,c
  7874  002C22  0E53               	movlw	83
  7875  002C24  6E21               	movwf	??_turnRight135^0,c
  7876  002C26  0E38               	movlw	56
  7877  002C28                     u4457:
  7878  002C28  2EE8               	decfsz	wreg,f,c
  7879  002C2A  D7FE               	bra	u4457
  7880  002C2C  2E21               	decfsz	??_turnRight135^0,f,c
  7881  002C2E  D7FC               	bra	u4457
  7882  002C30  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7883  002C32  D7FA               	bra	u4457
  7884  002C34                     
  7885                           ;dc_motor.c: 178:     stop(mL, mR);
  7886  002C34  C01D  F019         	movff	turnRight135@mL,stop@mL
  7887  002C38  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7888  002C3C  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7889  002C40  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7890  002C44  ECBF  F018         	call	_stop	;wreg free
  7891  002C48                     
  7892                           ;dc_motor.c: 179:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7893  002C48  0E05               	movlw	5
  7894  002C4A  6E22               	movwf	(??_turnRight135+1)^0,c
  7895  002C4C  0E0F               	movlw	15
  7896  002C4E  6E21               	movwf	??_turnRight135^0,c
  7897  002C50  0EF1               	movlw	241
  7898  002C52                     u4467:
  7899  002C52  2EE8               	decfsz	wreg,f,c
  7900  002C54  D7FE               	bra	u4467
  7901  002C56  2E21               	decfsz	??_turnRight135^0,f,c
  7902  002C58  D7FC               	bra	u4467
  7903  002C5A  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7904  002C5C  D7FA               	bra	u4467
  7905  002C5E  F000               	nop	
  7906  002C60  0012               	return		;funcret
  7907  002C62                     __end_of_turnRight135:
  7908                           	callstack 0
  7909                           
  7910 ;; *************** function _turnLeft135 *****************
  7911 ;; Defined at:
  7912 ;;		line 111 in file "dc_motor.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7915 ;;		 -> main@motorL(9), 
  7916 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7917 ;;		 -> main@motorR(9), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  i               2   34[COMRAM] unsigned int 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7932 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;Total ram usage:        8 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 4
  7936 ;; This function calls:
  7937 ;;		_reverse
  7938 ;;		_setMotorPWM
  7939 ;;		_stop
  7940 ;; This function is called by:
  7941 ;;		_White
  7942 ;;		_main
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text31
  7947  002C62                     __ptext31:
  7948                           	callstack 0
  7949  002C62                     _turnLeft135:
  7950                           	callstack 26
  7951  002C62                     
  7952                           ;dc_motor.c: 111: void turnLeft135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           112: {;dc_motor.c: 113:     stop(mL, mR);
  7953  002C62  C01D  F019         	movff	turnLeft135@mL,stop@mL
  7954  002C66  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  7955  002C6A  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  7956  002C6E  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  7957  002C72  ECBF  F018         	call	_stop	;wreg free
  7958  002C76                     
  7959                           ;dc_motor.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7960  002C76  0E05               	movlw	5
  7961  002C78  6E22               	movwf	(??_turnLeft135+1)^0,c
  7962  002C7A  0E0F               	movlw	15
  7963  002C7C  6E21               	movwf	??_turnLeft135^0,c
  7964  002C7E  0EF1               	movlw	241
  7965  002C80                     u4477:
  7966  002C80  2EE8               	decfsz	wreg,f,c
  7967  002C82  D7FE               	bra	u4477
  7968  002C84  2E21               	decfsz	??_turnLeft135^0,f,c
  7969  002C86  D7FC               	bra	u4477
  7970  002C88  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7971  002C8A  D7FA               	bra	u4477
  7972  002C8C  F000               	nop	
  7973  002C8E                     
  7974                           ;dc_motor.c: 115:     reverse(mL, mR);
  7975  002C8E  C01D  F019         	movff	turnLeft135@mL,reverse@mL
  7976  002C92  C01E  F01A         	movff	turnLeft135@mL+1,reverse@mL+1
  7977  002C96  C01F  F01B         	movff	turnLeft135@mR,reverse@mR
  7978  002C9A  C020  F01C         	movff	turnLeft135@mR+1,reverse@mR+1
  7979  002C9E  ECDD  F019         	call	_reverse	;wreg free
  7980                           
  7981                           ;dc_motor.c: 116:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7982  002CA2  0E21               	movlw	33
  7983  002CA4  6E22               	movwf	(??_turnLeft135+1)^0,c
  7984  002CA6  0E78               	movlw	120
  7985  002CA8  6E21               	movwf	??_turnLeft135^0,c
  7986  002CAA  0E98               	movlw	152
  7987  002CAC                     u4487:
  7988  002CAC  2EE8               	decfsz	wreg,f,c
  7989  002CAE  D7FE               	bra	u4487
  7990  002CB0  2E21               	decfsz	??_turnLeft135^0,f,c
  7991  002CB2  D7FC               	bra	u4487
  7992  002CB4  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7993  002CB6  D7FA               	bra	u4487
  7994  002CB8  D000               	nop2	
  7995  002CBA                     
  7996                           ;dc_motor.c: 117:     stop(mL, mR);
  7997  002CBA  C01D  F019         	movff	turnLeft135@mL,stop@mL
  7998  002CBE  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  7999  002CC2  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8000  002CC6  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8001  002CCA  ECBF  F018         	call	_stop	;wreg free
  8002  002CCE                     
  8003                           ;dc_motor.c: 118:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8004  002CCE  0E0D               	movlw	13
  8005  002CD0  6E22               	movwf	(??_turnLeft135+1)^0,c
  8006  002CD2  0E2D               	movlw	45
  8007  002CD4  6E21               	movwf	??_turnLeft135^0,c
  8008  002CD6  0ED8               	movlw	216
  8009  002CD8                     u4497:
  8010  002CD8  2EE8               	decfsz	wreg,f,c
  8011  002CDA  D7FE               	bra	u4497
  8012  002CDC  2E21               	decfsz	??_turnLeft135^0,f,c
  8013  002CDE  D7FC               	bra	u4497
  8014  002CE0  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8015  002CE2  D7FA               	bra	u4497
  8016  002CE4                     
  8017                           ;dc_motor.c: 120:     (*mL).direction = 0;
  8018  002CE4  EE20 F001          	lfsr	2,1
  8019  002CE8  501D               	movf	turnLeft135@mL^0,w,c
  8020  002CEA  26D9               	addwf	fsr2l,f,c
  8021  002CEC  501E               	movf	(turnLeft135@mL+1)^0,w,c
  8022  002CEE  22DA               	addwfc	fsr2h,f,c
  8023  002CF0  0E00               	movlw	0
  8024  002CF2  6EDF               	movwf	indf2,c
  8025  002CF4                     
  8026                           ;dc_motor.c: 121:     (*mR).direction = 1;
  8027  002CF4  EE20 F001          	lfsr	2,1
  8028  002CF8  501F               	movf	turnLeft135@mR^0,w,c
  8029  002CFA  26D9               	addwf	fsr2l,f,c
  8030  002CFC  5020               	movf	(turnLeft135@mR+1)^0,w,c
  8031  002CFE  22DA               	addwfc	fsr2h,f,c
  8032  002D00  0E01               	movlw	1
  8033  002D02  6EDF               	movwf	indf2,c
  8034  002D04                     
  8035                           ;dc_motor.c: 122:     for (unsigned int i = 0; i < 75; ++i){
  8036  002D04  0E00               	movlw	0
  8037  002D06  6E24               	movwf	(turnLeft135@i+1)^0,c
  8038  002D08  0E00               	movlw	0
  8039  002D0A  6E23               	movwf	turnLeft135@i^0,c
  8040  002D0C                     l3068:
  8041                           
  8042                           ;dc_motor.c: 123:         (mL->power) += 1;
  8043  002D0C  C01D  FFD9         	movff	turnLeft135@mL,fsr2l
  8044  002D10  C01E  FFDA         	movff	turnLeft135@mL+1,fsr2h
  8045  002D14  2ADF               	incf	indf2,f,c
  8046                           
  8047                           ;dc_motor.c: 124:         (mR->power) += 1;
  8048  002D16  C01F  FFD9         	movff	turnLeft135@mR,fsr2l
  8049  002D1A  C020  FFDA         	movff	turnLeft135@mR+1,fsr2h
  8050  002D1E  2ADF               	incf	indf2,f,c
  8051  002D20                     
  8052                           ;dc_motor.c: 125:         setMotorPWM(mL);
  8053  002D20  C01D  F00E         	movff	turnLeft135@mL,setMotorPWM@m
  8054  002D24  C01E  F00F         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  8055  002D28  ECF1  F011         	call	_setMotorPWM	;wreg free
  8056  002D2C                     
  8057                           ;dc_motor.c: 126:         setMotorPWM(mR);
  8058  002D2C  C01F  F00E         	movff	turnLeft135@mR,setMotorPWM@m
  8059  002D30  C020  F00F         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  8060  002D34  ECF1  F011         	call	_setMotorPWM	;wreg free
  8061  002D38                     
  8062                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8063  002D38  0EA0               	movlw	160
  8064  002D3A                     u4507:
  8065  002D3A  D000               	nop2	
  8066  002D3C  2EE8               	decfsz	wreg,f,c
  8067  002D3E  D7FD               	bra	u4507
  8068  002D40                     
  8069                           ;dc_motor.c: 128:     }
  8070  002D40  4A23               	infsnz	turnLeft135@i^0,f,c
  8071  002D42  2A24               	incf	(turnLeft135@i+1)^0,f,c
  8072  002D44  5024               	movf	(turnLeft135@i+1)^0,w,c
  8073  002D46  E109               	bnz	u2380
  8074  002D48  0E4B               	movlw	75
  8075  002D4A  5C23               	subwf	turnLeft135@i^0,w,c
  8076  002D4C  A0D8               	btfss	status,0,c
  8077  002D4E  EFAB  F016         	goto	u2381
  8078  002D52  EFAD  F016         	goto	u2380
  8079  002D56                     u2381:
  8080  002D56  EF86  F016         	goto	l3068
  8081  002D5A                     u2380:
  8082  002D5A                     
  8083                           ;dc_motor.c: 129:     _delay((unsigned long)((255)*(64000000/4000.0)));
  8084  002D5A  0E15               	movlw	21
  8085  002D5C  6E22               	movwf	(??_turnLeft135+1)^0,c
  8086  002D5E  0EB3               	movlw	179
  8087  002D60  6E21               	movwf	??_turnLeft135^0,c
  8088  002D62  0EA4               	movlw	164
  8089  002D64                     u4517:
  8090  002D64  2EE8               	decfsz	wreg,f,c
  8091  002D66  D7FE               	bra	u4517
  8092  002D68  2E21               	decfsz	??_turnLeft135^0,f,c
  8093  002D6A  D7FC               	bra	u4517
  8094  002D6C  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8095  002D6E  D7FA               	bra	u4517
  8096  002D70                     
  8097                           ;dc_motor.c: 130:     stop(mL, mR);
  8098  002D70  C01D  F019         	movff	turnLeft135@mL,stop@mL
  8099  002D74  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  8100  002D78  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8101  002D7C  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8102  002D80  ECBF  F018         	call	_stop	;wreg free
  8103  002D84                     
  8104                           ;dc_motor.c: 131:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8105  002D84  0E05               	movlw	5
  8106  002D86  6E22               	movwf	(??_turnLeft135+1)^0,c
  8107  002D88  0E0F               	movlw	15
  8108  002D8A  6E21               	movwf	??_turnLeft135^0,c
  8109  002D8C  0EF1               	movlw	241
  8110  002D8E                     u4527:
  8111  002D8E  2EE8               	decfsz	wreg,f,c
  8112  002D90  D7FE               	bra	u4527
  8113  002D92  2E21               	decfsz	??_turnLeft135^0,f,c
  8114  002D94  D7FC               	bra	u4527
  8115  002D96  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8116  002D98  D7FA               	bra	u4527
  8117  002D9A  F000               	nop	
  8118  002D9C  0012               	return		;funcret
  8119  002D9E                     __end_of_turnLeft135:
  8120                           	callstack 0
  8121                           
  8122 ;; *************** function _reverseTurnRight90 *****************
  8123 ;; Defined at:
  8124 ;;		line 218 in file "dc_motor.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  8127 ;;		 -> main@motorL(9), 
  8128 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  8129 ;;		 -> main@motorR(9), 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;Total ram usage:        6 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; Hardware stack levels required when called: 5
  8148 ;; This function calls:
  8149 ;;		_setMotorPWM
  8150 ;;		_stop
  8151 ;;		_turnRight90
  8152 ;; This function is called by:
  8153 ;;		_White
  8154 ;;		_main
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text32
  8159  002FA8                     __ptext32:
  8160                           	callstack 0
  8161  002FA8                     _reverseTurnRight90:
  8162                           	callstack 25
  8163  002FA8                     
  8164                           ;dc_motor.c: 218: void reverseTurnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_m
      +                          otor.c: 219: {;dc_motor.c: 220:     stop(mL, mR);
  8165  002FA8  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  8166  002FAC  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  8167  002FB0  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  8168  002FB4  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  8169  002FB8  ECBF  F018         	call	_stop	;wreg free
  8170  002FBC                     
  8171                           ;dc_motor.c: 221:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8172  002FBC  0E05               	movlw	5
  8173  002FBE  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8174  002FC0  0E0F               	movlw	15
  8175  002FC2  6E29               	movwf	??_reverseTurnRight90^0,c
  8176  002FC4  0EF1               	movlw	241
  8177  002FC6                     u4537:
  8178  002FC6  2EE8               	decfsz	wreg,f,c
  8179  002FC8  D7FE               	bra	u4537
  8180  002FCA  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8181  002FCC  D7FC               	bra	u4537
  8182  002FCE  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8183  002FD0  D7FA               	bra	u4537
  8184  002FD2  F000               	nop	
  8185  002FD4                     
  8186                           ;dc_motor.c: 222:     (*mL).direction = 0;
  8187  002FD4  EE20 F001          	lfsr	2,1
  8188  002FD8  5025               	movf	reverseTurnRight90@mL^0,w,c
  8189  002FDA  26D9               	addwf	fsr2l,f,c
  8190  002FDC  5026               	movf	(reverseTurnRight90@mL+1)^0,w,c
  8191  002FDE  22DA               	addwfc	fsr2h,f,c
  8192  002FE0  0E00               	movlw	0
  8193  002FE2  6EDF               	movwf	indf2,c
  8194  002FE4                     
  8195                           ;dc_motor.c: 223:     (*mR).direction = 0;
  8196  002FE4  EE20 F001          	lfsr	2,1
  8197  002FE8  5027               	movf	reverseTurnRight90@mR^0,w,c
  8198  002FEA  26D9               	addwf	fsr2l,f,c
  8199  002FEC  5028               	movf	(reverseTurnRight90@mR+1)^0,w,c
  8200  002FEE  22DA               	addwfc	fsr2h,f,c
  8201  002FF0  0E00               	movlw	0
  8202  002FF2  6EDF               	movwf	indf2,c
  8203  002FF4                     
  8204                           ;dc_motor.c: 224:     (*mL).power = 70;
  8205  002FF4  C025  FFD9         	movff	reverseTurnRight90@mL,fsr2l
  8206  002FF8  C026  FFDA         	movff	reverseTurnRight90@mL+1,fsr2h
  8207  002FFC  0E46               	movlw	70
  8208  002FFE  6EDF               	movwf	indf2,c
  8209  003000                     
  8210                           ;dc_motor.c: 225:     (*mR).power = 70;
  8211  003000  C027  FFD9         	movff	reverseTurnRight90@mR,fsr2l
  8212  003004  C028  FFDA         	movff	reverseTurnRight90@mR+1,fsr2h
  8213  003008  0E46               	movlw	70
  8214  00300A  6EDF               	movwf	indf2,c
  8215  00300C                     
  8216                           ;dc_motor.c: 226:     setMotorPWM(mL);
  8217  00300C  C025  F00E         	movff	reverseTurnRight90@mL,setMotorPWM@m
  8218  003010  C026  F00F         	movff	reverseTurnRight90@mL+1,setMotorPWM@m+1
  8219  003014  ECF1  F011         	call	_setMotorPWM	;wreg free
  8220  003018                     
  8221                           ;dc_motor.c: 227:     setMotorPWM(mR);
  8222  003018  C027  F00E         	movff	reverseTurnRight90@mR,setMotorPWM@m
  8223  00301C  C028  F00F         	movff	reverseTurnRight90@mR+1,setMotorPWM@m+1
  8224  003020  ECF1  F011         	call	_setMotorPWM	;wreg free
  8225  003024                     
  8226                           ;dc_motor.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8227  003024  0E29               	movlw	41
  8228  003026  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8229  003028  0E96               	movlw	150
  8230  00302A  6E29               	movwf	??_reverseTurnRight90^0,c
  8231  00302C  0E7F               	movlw	127
  8232  00302E                     u4547:
  8233  00302E  2EE8               	decfsz	wreg,f,c
  8234  003030  D7FE               	bra	u4547
  8235  003032  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8236  003034  D7FC               	bra	u4547
  8237  003036  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8238  003038  D7FA               	bra	u4547
  8239  00303A  F000               	nop	
  8240                           
  8241                           ;dc_motor.c: 229:     stop(mL, mR);
  8242  00303C  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  8243  003040  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  8244  003044  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  8245  003048  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  8246  00304C  ECBF  F018         	call	_stop	;wreg free
  8247  003050                     
  8248                           ;dc_motor.c: 230:     _delay((unsigned long)((600)*(64000000/4000.0)));
  8249  003050  0E31               	movlw	49
  8250  003052  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8251  003054  0EB4               	movlw	180
  8252  003056  6E29               	movwf	??_reverseTurnRight90^0,c
  8253  003058  0E66               	movlw	102
  8254  00305A                     u4557:
  8255  00305A  2EE8               	decfsz	wreg,f,c
  8256  00305C  D7FE               	bra	u4557
  8257  00305E  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8258  003060  D7FC               	bra	u4557
  8259  003062  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8260  003064  D7FA               	bra	u4557
  8261  003066                     
  8262                           ;dc_motor.c: 231:     turnRight90(mL, mR);
  8263  003066  C025  F01D         	movff	reverseTurnRight90@mL,turnRight90@mL
  8264  00306A  C026  F01E         	movff	reverseTurnRight90@mL+1,turnRight90@mL+1
  8265  00306E  C027  F01F         	movff	reverseTurnRight90@mR,turnRight90@mR
  8266  003072  C028  F020         	movff	reverseTurnRight90@mR+1,turnRight90@mR+1
  8267  003076  ECF4  F014         	call	_turnRight90	;wreg free
  8268                           
  8269                           ;dc_motor.c: 232:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8270  00307A  0E09               	movlw	9
  8271  00307C  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8272  00307E  0E1E               	movlw	30
  8273  003080  6E29               	movwf	??_reverseTurnRight90^0,c
  8274  003082  0EE4               	movlw	228
  8275  003084                     u4567:
  8276  003084  2EE8               	decfsz	wreg,f,c
  8277  003086  D7FE               	bra	u4567
  8278  003088  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8279  00308A  D7FC               	bra	u4567
  8280  00308C  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8281  00308E  D7FA               	bra	u4567
  8282  003090  D000               	nop2	
  8283  003092  0012               	return		;funcret
  8284  003094                     __end_of_reverseTurnRight90:
  8285                           	callstack 0
  8286                           
  8287 ;; *************** function _turnRight90 *****************
  8288 ;; Defined at:
  8289 ;;		line 135 in file "dc_motor.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8292 ;;		 -> main@motorL(9), 
  8293 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8294 ;;		 -> main@motorR(9), 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  i               2   34[COMRAM] unsigned int 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8309 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8310 ;;Total ram usage:        8 bytes
  8311 ;; Hardware stack levels used: 1
  8312 ;; Hardware stack levels required when called: 4
  8313 ;; This function calls:
  8314 ;;		_reverse
  8315 ;;		_setMotorPWM
  8316 ;;		_stop
  8317 ;; This function is called by:
  8318 ;;		_White
  8319 ;;		_reverseTurnRight90
  8320 ;;		_main
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text33
  8325  0029E8                     __ptext33:
  8326                           	callstack 0
  8327  0029E8                     _turnRight90:
  8328                           	callstack 26
  8329  0029E8                     
  8330                           ;dc_motor.c: 135: void turnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           136: {;dc_motor.c: 137:     stop(mL, mR);
  8331  0029E8  C01D  F019         	movff	turnRight90@mL,stop@mL
  8332  0029EC  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8333  0029F0  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8334  0029F4  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8335  0029F8  ECBF  F018         	call	_stop	;wreg free
  8336  0029FC                     
  8337                           ;dc_motor.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8338  0029FC  0E05               	movlw	5
  8339  0029FE  6E22               	movwf	(??_turnRight90+1)^0,c
  8340  002A00  0E0F               	movlw	15
  8341  002A02  6E21               	movwf	??_turnRight90^0,c
  8342  002A04  0EF1               	movlw	241
  8343  002A06                     u4577:
  8344  002A06  2EE8               	decfsz	wreg,f,c
  8345  002A08  D7FE               	bra	u4577
  8346  002A0A  2E21               	decfsz	??_turnRight90^0,f,c
  8347  002A0C  D7FC               	bra	u4577
  8348  002A0E  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8349  002A10  D7FA               	bra	u4577
  8350  002A12  F000               	nop	
  8351  002A14                     
  8352                           ;dc_motor.c: 139:     reverse(mL, mR);
  8353  002A14  C01D  F019         	movff	turnRight90@mL,reverse@mL
  8354  002A18  C01E  F01A         	movff	turnRight90@mL+1,reverse@mL+1
  8355  002A1C  C01F  F01B         	movff	turnRight90@mR,reverse@mR
  8356  002A20  C020  F01C         	movff	turnRight90@mR+1,reverse@mR+1
  8357  002A24  ECDD  F019         	call	_reverse	;wreg free
  8358                           
  8359                           ;dc_motor.c: 140:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8360  002A28  0E21               	movlw	33
  8361  002A2A  6E22               	movwf	(??_turnRight90+1)^0,c
  8362  002A2C  0E78               	movlw	120
  8363  002A2E  6E21               	movwf	??_turnRight90^0,c
  8364  002A30  0E98               	movlw	152
  8365  002A32                     u4587:
  8366  002A32  2EE8               	decfsz	wreg,f,c
  8367  002A34  D7FE               	bra	u4587
  8368  002A36  2E21               	decfsz	??_turnRight90^0,f,c
  8369  002A38  D7FC               	bra	u4587
  8370  002A3A  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8371  002A3C  D7FA               	bra	u4587
  8372  002A3E  D000               	nop2	
  8373  002A40                     
  8374                           ;dc_motor.c: 141:     stop(mL, mR);
  8375  002A40  C01D  F019         	movff	turnRight90@mL,stop@mL
  8376  002A44  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8377  002A48  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8378  002A4C  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8379  002A50  ECBF  F018         	call	_stop	;wreg free
  8380  002A54                     
  8381                           ;dc_motor.c: 142:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8382  002A54  0E0D               	movlw	13
  8383  002A56  6E22               	movwf	(??_turnRight90+1)^0,c
  8384  002A58  0E2D               	movlw	45
  8385  002A5A  6E21               	movwf	??_turnRight90^0,c
  8386  002A5C  0ED8               	movlw	216
  8387  002A5E                     u4597:
  8388  002A5E  2EE8               	decfsz	wreg,f,c
  8389  002A60  D7FE               	bra	u4597
  8390  002A62  2E21               	decfsz	??_turnRight90^0,f,c
  8391  002A64  D7FC               	bra	u4597
  8392  002A66  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8393  002A68  D7FA               	bra	u4597
  8394  002A6A                     
  8395                           ;dc_motor.c: 144:     (*mL).direction = 1;
  8396  002A6A  EE20 F001          	lfsr	2,1
  8397  002A6E  501D               	movf	turnRight90@mL^0,w,c
  8398  002A70  26D9               	addwf	fsr2l,f,c
  8399  002A72  501E               	movf	(turnRight90@mL+1)^0,w,c
  8400  002A74  22DA               	addwfc	fsr2h,f,c
  8401  002A76  0E01               	movlw	1
  8402  002A78  6EDF               	movwf	indf2,c
  8403  002A7A                     
  8404                           ;dc_motor.c: 145:     (*mR).direction = 0;
  8405  002A7A  EE20 F001          	lfsr	2,1
  8406  002A7E  501F               	movf	turnRight90@mR^0,w,c
  8407  002A80  26D9               	addwf	fsr2l,f,c
  8408  002A82  5020               	movf	(turnRight90@mR+1)^0,w,c
  8409  002A84  22DA               	addwfc	fsr2h,f,c
  8410  002A86  0E00               	movlw	0
  8411  002A88  6EDF               	movwf	indf2,c
  8412  002A8A                     
  8413                           ;dc_motor.c: 146:     for (unsigned int i = 0; i < 80; ++i){
  8414  002A8A  0E00               	movlw	0
  8415  002A8C  6E24               	movwf	(turnRight90@i+1)^0,c
  8416  002A8E  0E00               	movlw	0
  8417  002A90  6E23               	movwf	turnRight90@i^0,c
  8418  002A92                     l2874:
  8419                           
  8420                           ;dc_motor.c: 147:         (mL->power) += 1;
  8421  002A92  C01D  FFD9         	movff	turnRight90@mL,fsr2l
  8422  002A96  C01E  FFDA         	movff	turnRight90@mL+1,fsr2h
  8423  002A9A  2ADF               	incf	indf2,f,c
  8424                           
  8425                           ;dc_motor.c: 148:         (mR->power) += 1;
  8426  002A9C  C01F  FFD9         	movff	turnRight90@mR,fsr2l
  8427  002AA0  C020  FFDA         	movff	turnRight90@mR+1,fsr2h
  8428  002AA4  2ADF               	incf	indf2,f,c
  8429  002AA6                     
  8430                           ;dc_motor.c: 149:         setMotorPWM(mL);
  8431  002AA6  C01D  F00E         	movff	turnRight90@mL,setMotorPWM@m
  8432  002AAA  C01E  F00F         	movff	turnRight90@mL+1,setMotorPWM@m+1
  8433  002AAE  ECF1  F011         	call	_setMotorPWM	;wreg free
  8434  002AB2                     
  8435                           ;dc_motor.c: 150:         setMotorPWM(mR);
  8436  002AB2  C01F  F00E         	movff	turnRight90@mR,setMotorPWM@m
  8437  002AB6  C020  F00F         	movff	turnRight90@mR+1,setMotorPWM@m+1
  8438  002ABA  ECF1  F011         	call	_setMotorPWM	;wreg free
  8439  002ABE                     
  8440                           ;dc_motor.c: 151:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8441  002ABE  0EA0               	movlw	160
  8442  002AC0                     u4607:
  8443  002AC0  D000               	nop2	
  8444  002AC2  2EE8               	decfsz	wreg,f,c
  8445  002AC4  D7FD               	bra	u4607
  8446  002AC6                     
  8447                           ;dc_motor.c: 152:     }
  8448  002AC6  4A23               	infsnz	turnRight90@i^0,f,c
  8449  002AC8  2A24               	incf	(turnRight90@i+1)^0,f,c
  8450  002ACA  5024               	movf	(turnRight90@i+1)^0,w,c
  8451  002ACC  E109               	bnz	u2290
  8452  002ACE  0E50               	movlw	80
  8453  002AD0  5C23               	subwf	turnRight90@i^0,w,c
  8454  002AD2  A0D8               	btfss	status,0,c
  8455  002AD4  EF6E  F015         	goto	u2291
  8456  002AD8  EF70  F015         	goto	u2290
  8457  002ADC                     u2291:
  8458  002ADC  EF49  F015         	goto	l2874
  8459  002AE0                     u2290:
  8460  002AE0                     
  8461                           ;dc_motor.c: 153:     _delay((unsigned long)((215)*(64000000/4000.0)));
  8462  002AE0  0E12               	movlw	18
  8463  002AE2  6E22               	movwf	(??_turnRight90+1)^0,c
  8464  002AE4  0E74               	movlw	116
  8465  002AE6  6E21               	movwf	??_turnRight90^0,c
  8466  002AE8  0E7A               	movlw	122
  8467  002AEA                     u4617:
  8468  002AEA  2EE8               	decfsz	wreg,f,c
  8469  002AEC  D7FE               	bra	u4617
  8470  002AEE  2E21               	decfsz	??_turnRight90^0,f,c
  8471  002AF0  D7FC               	bra	u4617
  8472  002AF2  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8473  002AF4  D7FA               	bra	u4617
  8474  002AF6  D000               	nop2	
  8475  002AF8                     
  8476                           ;dc_motor.c: 154:     stop(mL, mR);
  8477  002AF8  C01D  F019         	movff	turnRight90@mL,stop@mL
  8478  002AFC  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8479  002B00  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8480  002B04  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8481  002B08  ECBF  F018         	call	_stop	;wreg free
  8482  002B0C                     
  8483                           ;dc_motor.c: 155:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8484  002B0C  0E05               	movlw	5
  8485  002B0E  6E22               	movwf	(??_turnRight90+1)^0,c
  8486  002B10  0E0F               	movlw	15
  8487  002B12  6E21               	movwf	??_turnRight90^0,c
  8488  002B14  0EF1               	movlw	241
  8489  002B16                     u4627:
  8490  002B16  2EE8               	decfsz	wreg,f,c
  8491  002B18  D7FE               	bra	u4627
  8492  002B1A  2E21               	decfsz	??_turnRight90^0,f,c
  8493  002B1C  D7FC               	bra	u4627
  8494  002B1E  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8495  002B20  D7FA               	bra	u4627
  8496  002B22  F000               	nop	
  8497  002B24  0012               	return		;funcret
  8498  002B26                     __end_of_turnRight90:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function _reverseTurnLeft90 *****************
  8502 ;; Defined at:
  8503 ;;		line 236 in file "dc_motor.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  8506 ;;		 -> main@motorL(9), 
  8507 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  8508 ;;		 -> main@motorR(9), 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;Total ram usage:        6 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 5
  8527 ;; This function calls:
  8528 ;;		_setMotorPWM
  8529 ;;		_stop
  8530 ;;		_turnLeft90
  8531 ;; This function is called by:
  8532 ;;		_White
  8533 ;;		_main
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text34
  8538  003094                     __ptext34:
  8539                           	callstack 0
  8540  003094                     _reverseTurnLeft90:
  8541                           	callstack 25
  8542  003094                     
  8543                           ;dc_motor.c: 236: void reverseTurnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 237: {;dc_motor.c: 238:     stop(mL, mR);
  8544  003094  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  8545  003098  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  8546  00309C  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  8547  0030A0  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  8548  0030A4  ECBF  F018         	call	_stop	;wreg free
  8549  0030A8                     
  8550                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8551  0030A8  0E05               	movlw	5
  8552  0030AA  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8553  0030AC  0E0F               	movlw	15
  8554  0030AE  6E29               	movwf	??_reverseTurnLeft90^0,c
  8555  0030B0  0EF1               	movlw	241
  8556  0030B2                     u4637:
  8557  0030B2  2EE8               	decfsz	wreg,f,c
  8558  0030B4  D7FE               	bra	u4637
  8559  0030B6  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8560  0030B8  D7FC               	bra	u4637
  8561  0030BA  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8562  0030BC  D7FA               	bra	u4637
  8563  0030BE  F000               	nop	
  8564  0030C0                     
  8565                           ;dc_motor.c: 240:     (*mL).direction = 0;
  8566  0030C0  EE20 F001          	lfsr	2,1
  8567  0030C4  5025               	movf	reverseTurnLeft90@mL^0,w,c
  8568  0030C6  26D9               	addwf	fsr2l,f,c
  8569  0030C8  5026               	movf	(reverseTurnLeft90@mL+1)^0,w,c
  8570  0030CA  22DA               	addwfc	fsr2h,f,c
  8571  0030CC  0E00               	movlw	0
  8572  0030CE  6EDF               	movwf	indf2,c
  8573  0030D0                     
  8574                           ;dc_motor.c: 241:     (*mR).direction = 0;
  8575  0030D0  EE20 F001          	lfsr	2,1
  8576  0030D4  5027               	movf	reverseTurnLeft90@mR^0,w,c
  8577  0030D6  26D9               	addwf	fsr2l,f,c
  8578  0030D8  5028               	movf	(reverseTurnLeft90@mR+1)^0,w,c
  8579  0030DA  22DA               	addwfc	fsr2h,f,c
  8580  0030DC  0E00               	movlw	0
  8581  0030DE  6EDF               	movwf	indf2,c
  8582  0030E0                     
  8583                           ;dc_motor.c: 242:     (*mL).power = 70;
  8584  0030E0  C025  FFD9         	movff	reverseTurnLeft90@mL,fsr2l
  8585  0030E4  C026  FFDA         	movff	reverseTurnLeft90@mL+1,fsr2h
  8586  0030E8  0E46               	movlw	70
  8587  0030EA  6EDF               	movwf	indf2,c
  8588  0030EC                     
  8589                           ;dc_motor.c: 243:     (*mR).power = 70;
  8590  0030EC  C027  FFD9         	movff	reverseTurnLeft90@mR,fsr2l
  8591  0030F0  C028  FFDA         	movff	reverseTurnLeft90@mR+1,fsr2h
  8592  0030F4  0E46               	movlw	70
  8593  0030F6  6EDF               	movwf	indf2,c
  8594  0030F8                     
  8595                           ;dc_motor.c: 244:     setMotorPWM(mL);
  8596  0030F8  C025  F00E         	movff	reverseTurnLeft90@mL,setMotorPWM@m
  8597  0030FC  C026  F00F         	movff	reverseTurnLeft90@mL+1,setMotorPWM@m+1
  8598  003100  ECF1  F011         	call	_setMotorPWM	;wreg free
  8599  003104                     
  8600                           ;dc_motor.c: 245:     setMotorPWM(mR);
  8601  003104  C027  F00E         	movff	reverseTurnLeft90@mR,setMotorPWM@m
  8602  003108  C028  F00F         	movff	reverseTurnLeft90@mR+1,setMotorPWM@m+1
  8603  00310C  ECF1  F011         	call	_setMotorPWM	;wreg free
  8604  003110                     
  8605                           ;dc_motor.c: 246:     _delay((unsigned long)((600)*(64000000/4000.0)));
  8606  003110  0E31               	movlw	49
  8607  003112  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8608  003114  0EB4               	movlw	180
  8609  003116  6E29               	movwf	??_reverseTurnLeft90^0,c
  8610  003118  0E66               	movlw	102
  8611  00311A                     u4647:
  8612  00311A  2EE8               	decfsz	wreg,f,c
  8613  00311C  D7FE               	bra	u4647
  8614  00311E  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8615  003120  D7FC               	bra	u4647
  8616  003122  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8617  003124  D7FA               	bra	u4647
  8618                           
  8619                           ;dc_motor.c: 247:     stop(mL, mR);
  8620  003126  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  8621  00312A  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  8622  00312E  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  8623  003132  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  8624  003136  ECBF  F018         	call	_stop	;wreg free
  8625  00313A                     
  8626                           ;dc_motor.c: 248:     _delay((unsigned long)((300)*(64000000/4000.0)));
  8627  00313A  0E19               	movlw	25
  8628  00313C  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8629  00313E  0E5A               	movlw	90
  8630  003140  6E29               	movwf	??_reverseTurnLeft90^0,c
  8631  003142  0EB2               	movlw	178
  8632  003144                     u4657:
  8633  003144  2EE8               	decfsz	wreg,f,c
  8634  003146  D7FE               	bra	u4657
  8635  003148  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8636  00314A  D7FC               	bra	u4657
  8637  00314C  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8638  00314E  D7FA               	bra	u4657
  8639  003150                     
  8640                           ;dc_motor.c: 249:     turnLeft90(mL, mR);
  8641  003150  C025  F01D         	movff	reverseTurnLeft90@mL,turnLeft90@mL
  8642  003154  C026  F01E         	movff	reverseTurnLeft90@mL+1,turnLeft90@mL+1
  8643  003158  C027  F01F         	movff	reverseTurnLeft90@mR,turnLeft90@mR
  8644  00315C  C028  F020         	movff	reverseTurnLeft90@mR+1,turnLeft90@mR+1
  8645  003160  ECB5  F013         	call	_turnLeft90	;wreg free
  8646                           
  8647                           ;dc_motor.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8648  003164  0E09               	movlw	9
  8649  003166  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8650  003168  0E1E               	movlw	30
  8651  00316A  6E29               	movwf	??_reverseTurnLeft90^0,c
  8652  00316C  0EE4               	movlw	228
  8653  00316E                     u4667:
  8654  00316E  2EE8               	decfsz	wreg,f,c
  8655  003170  D7FE               	bra	u4667
  8656  003172  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8657  003174  D7FC               	bra	u4667
  8658  003176  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8659  003178  D7FA               	bra	u4667
  8660  00317A  D000               	nop2	
  8661  00317C  0012               	return		;funcret
  8662  00317E                     __end_of_reverseTurnLeft90:
  8663                           	callstack 0
  8664                           
  8665 ;; *************** function _turnLeft90 *****************
  8666 ;; Defined at:
  8667 ;;		line 87 in file "dc_motor.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8670 ;;		 -> main@motorL(9), 
  8671 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8672 ;;		 -> main@motorR(9), 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  i               2   34[COMRAM] unsigned int 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;Total ram usage:        8 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 4
  8691 ;; This function calls:
  8692 ;;		_reverse
  8693 ;;		_setMotorPWM
  8694 ;;		_stop
  8695 ;; This function is called by:
  8696 ;;		_White
  8697 ;;		_reverseTurnLeft90
  8698 ;;		_main
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text35
  8703  00276A                     __ptext35:
  8704                           	callstack 0
  8705  00276A                     _turnLeft90:
  8706                           	callstack 26
  8707  00276A                     
  8708                           ;dc_motor.c: 87: void turnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 8
      +                          8: {;dc_motor.c: 89:     stop(mL, mR);
  8709  00276A  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8710  00276E  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8711  002772  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8712  002776  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8713  00277A  ECBF  F018         	call	_stop	;wreg free
  8714  00277E                     
  8715                           ;dc_motor.c: 90:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8716  00277E  0E05               	movlw	5
  8717  002780  6E22               	movwf	(??_turnLeft90+1)^0,c
  8718  002782  0E0F               	movlw	15
  8719  002784  6E21               	movwf	??_turnLeft90^0,c
  8720  002786  0EF1               	movlw	241
  8721  002788                     u4677:
  8722  002788  2EE8               	decfsz	wreg,f,c
  8723  00278A  D7FE               	bra	u4677
  8724  00278C  2E21               	decfsz	??_turnLeft90^0,f,c
  8725  00278E  D7FC               	bra	u4677
  8726  002790  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8727  002792  D7FA               	bra	u4677
  8728  002794  F000               	nop	
  8729  002796                     
  8730                           ;dc_motor.c: 91:     reverse(mL, mR);
  8731  002796  C01D  F019         	movff	turnLeft90@mL,reverse@mL
  8732  00279A  C01E  F01A         	movff	turnLeft90@mL+1,reverse@mL+1
  8733  00279E  C01F  F01B         	movff	turnLeft90@mR,reverse@mR
  8734  0027A2  C020  F01C         	movff	turnLeft90@mR+1,reverse@mR+1
  8735  0027A6  ECDD  F019         	call	_reverse	;wreg free
  8736                           
  8737                           ;dc_motor.c: 92:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8738  0027AA  0E21               	movlw	33
  8739  0027AC  6E22               	movwf	(??_turnLeft90+1)^0,c
  8740  0027AE  0E78               	movlw	120
  8741  0027B0  6E21               	movwf	??_turnLeft90^0,c
  8742  0027B2  0E98               	movlw	152
  8743  0027B4                     u4687:
  8744  0027B4  2EE8               	decfsz	wreg,f,c
  8745  0027B6  D7FE               	bra	u4687
  8746  0027B8  2E21               	decfsz	??_turnLeft90^0,f,c
  8747  0027BA  D7FC               	bra	u4687
  8748  0027BC  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8749  0027BE  D7FA               	bra	u4687
  8750  0027C0  D000               	nop2	
  8751  0027C2                     
  8752                           ;dc_motor.c: 93:     stop(mL, mR);
  8753  0027C2  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8754  0027C6  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8755  0027CA  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8756  0027CE  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8757  0027D2  ECBF  F018         	call	_stop	;wreg free
  8758  0027D6                     
  8759                           ;dc_motor.c: 94:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8760  0027D6  0E0D               	movlw	13
  8761  0027D8  6E22               	movwf	(??_turnLeft90+1)^0,c
  8762  0027DA  0E2D               	movlw	45
  8763  0027DC  6E21               	movwf	??_turnLeft90^0,c
  8764  0027DE  0ED8               	movlw	216
  8765  0027E0                     u4697:
  8766  0027E0  2EE8               	decfsz	wreg,f,c
  8767  0027E2  D7FE               	bra	u4697
  8768  0027E4  2E21               	decfsz	??_turnLeft90^0,f,c
  8769  0027E6  D7FC               	bra	u4697
  8770  0027E8  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8771  0027EA  D7FA               	bra	u4697
  8772  0027EC                     
  8773                           ;dc_motor.c: 96:     (*mL).direction = 0;
  8774  0027EC  EE20 F001          	lfsr	2,1
  8775  0027F0  501D               	movf	turnLeft90@mL^0,w,c
  8776  0027F2  26D9               	addwf	fsr2l,f,c
  8777  0027F4  501E               	movf	(turnLeft90@mL+1)^0,w,c
  8778  0027F6  22DA               	addwfc	fsr2h,f,c
  8779  0027F8  0E00               	movlw	0
  8780  0027FA  6EDF               	movwf	indf2,c
  8781  0027FC                     
  8782                           ;dc_motor.c: 97:     (*mR).direction = 1;
  8783  0027FC  EE20 F001          	lfsr	2,1
  8784  002800  501F               	movf	turnLeft90@mR^0,w,c
  8785  002802  26D9               	addwf	fsr2l,f,c
  8786  002804  5020               	movf	(turnLeft90@mR+1)^0,w,c
  8787  002806  22DA               	addwfc	fsr2h,f,c
  8788  002808  0E01               	movlw	1
  8789  00280A  6EDF               	movwf	indf2,c
  8790  00280C                     
  8791                           ;dc_motor.c: 98:     for (unsigned int i = 0; i < 80; ++i){
  8792  00280C  0E00               	movlw	0
  8793  00280E  6E24               	movwf	(turnLeft90@i+1)^0,c
  8794  002810  0E00               	movlw	0
  8795  002812  6E23               	movwf	turnLeft90@i^0,c
  8796  002814                     l2836:
  8797                           
  8798                           ;dc_motor.c: 99:         (mL->power) += 1;
  8799  002814  C01D  FFD9         	movff	turnLeft90@mL,fsr2l
  8800  002818  C01E  FFDA         	movff	turnLeft90@mL+1,fsr2h
  8801  00281C  2ADF               	incf	indf2,f,c
  8802                           
  8803                           ;dc_motor.c: 100:         (mR->power) += 1;
  8804  00281E  C01F  FFD9         	movff	turnLeft90@mR,fsr2l
  8805  002822  C020  FFDA         	movff	turnLeft90@mR+1,fsr2h
  8806  002826  2ADF               	incf	indf2,f,c
  8807  002828                     
  8808                           ;dc_motor.c: 101:         setMotorPWM(mL);
  8809  002828  C01D  F00E         	movff	turnLeft90@mL,setMotorPWM@m
  8810  00282C  C01E  F00F         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  8811  002830  ECF1  F011         	call	_setMotorPWM	;wreg free
  8812  002834                     
  8813                           ;dc_motor.c: 102:         setMotorPWM(mR);
  8814  002834  C01F  F00E         	movff	turnLeft90@mR,setMotorPWM@m
  8815  002838  C020  F00F         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  8816  00283C  ECF1  F011         	call	_setMotorPWM	;wreg free
  8817  002840                     
  8818                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8819  002840  0EA0               	movlw	160
  8820  002842                     u4707:
  8821  002842  D000               	nop2	
  8822  002844  2EE8               	decfsz	wreg,f,c
  8823  002846  D7FD               	bra	u4707
  8824  002848                     
  8825                           ;dc_motor.c: 104:     }
  8826  002848  4A23               	infsnz	turnLeft90@i^0,f,c
  8827  00284A  2A24               	incf	(turnLeft90@i+1)^0,f,c
  8828  00284C  5024               	movf	(turnLeft90@i+1)^0,w,c
  8829  00284E  E109               	bnz	u2280
  8830  002850  0E50               	movlw	80
  8831  002852  5C23               	subwf	turnLeft90@i^0,w,c
  8832  002854  A0D8               	btfss	status,0,c
  8833  002856  EF2F  F014         	goto	u2281
  8834  00285A  EF31  F014         	goto	u2280
  8835  00285E                     u2281:
  8836  00285E  EF0A  F014         	goto	l2836
  8837  002862                     u2280:
  8838  002862                     
  8839                           ;dc_motor.c: 105:     _delay((unsigned long)((190)*(64000000/4000.0)));
  8840  002862  0E10               	movlw	16
  8841  002864  6E22               	movwf	(??_turnLeft90+1)^0,c
  8842  002866  0E6C               	movlw	108
  8843  002868  6E21               	movwf	??_turnLeft90^0,c
  8844  00286A  0E00               	movlw	0
  8845  00286C                     u4717:
  8846  00286C  2EE8               	decfsz	wreg,f,c
  8847  00286E  D7FE               	bra	u4717
  8848  002870  2E21               	decfsz	??_turnLeft90^0,f,c
  8849  002872  D7FC               	bra	u4717
  8850  002874  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8851  002876  D7FA               	bra	u4717
  8852  002878  D000               	nop2	
  8853  00287A  D000               	nop2	
  8854  00287C                     
  8855                           ;dc_motor.c: 106:     stop(mL, mR);
  8856  00287C  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8857  002880  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8858  002884  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8859  002888  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8860  00288C  ECBF  F018         	call	_stop	;wreg free
  8861  002890                     
  8862                           ;dc_motor.c: 107:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8863  002890  0E05               	movlw	5
  8864  002892  6E22               	movwf	(??_turnLeft90+1)^0,c
  8865  002894  0E0F               	movlw	15
  8866  002896  6E21               	movwf	??_turnLeft90^0,c
  8867  002898  0EF1               	movlw	241
  8868  00289A                     u4727:
  8869  00289A  2EE8               	decfsz	wreg,f,c
  8870  00289C  D7FE               	bra	u4727
  8871  00289E  2E21               	decfsz	??_turnLeft90^0,f,c
  8872  0028A0  D7FC               	bra	u4727
  8873  0028A2  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8874  0028A4  D7FA               	bra	u4727
  8875  0028A6  F000               	nop	
  8876  0028A8  0012               	return		;funcret
  8877  0028AA                     __end_of_turnLeft90:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function _stop *****************
  8881 ;; Defined at:
  8882 ;;		line 61 in file "dc_motor.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8885 ;;		 -> main@motorL(9), 
  8886 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8887 ;;		 -> main@motorR(9), 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;Total ram usage:        4 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 3
  8906 ;; This function calls:
  8907 ;;		_setMotorPWM
  8908 ;; This function is called by:
  8909 ;;		_White
  8910 ;;		_turnLeft90
  8911 ;;		_turnLeft135
  8912 ;;		_turnRight90
  8913 ;;		_turnRight135
  8914 ;;		_turnRight180
  8915 ;;		_reverseTurnRight90
  8916 ;;		_reverseTurnLeft90
  8917 ;;		_main
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           	psect	text36
  8922  00317E                     __ptext36:
  8923                           	callstack 0
  8924  00317E                     _stop:
  8925                           	callstack 26
  8926  00317E                     
  8927                           ;dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 62: {;d
      +                          c_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8928  00317E  EFF3  F018         	goto	l2768
  8929  003182                     l2754:
  8930                           
  8931                           ;dc_motor.c: 64:         if ((mL->power) > 0){
  8932  003182  C019  FFD9         	movff	stop@mL,fsr2l
  8933  003186  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8934  00318A  50DF               	movf	indf2,w,c
  8935  00318C  B4D8               	btfsc	status,2,c
  8936  00318E  EFCB  F018         	goto	u2201
  8937  003192  EFCD  F018         	goto	u2200
  8938  003196                     u2201:
  8939  003196  EFD2  F018         	goto	l2758
  8940  00319A                     u2200:
  8941  00319A                     
  8942                           ;dc_motor.c: 65:             (mL->power) -= 1;
  8943  00319A  C019  FFD9         	movff	stop@mL,fsr2l
  8944  00319E  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8945  0031A2  06DF               	decf	indf2,f,c
  8946  0031A4                     l2758:
  8947                           
  8948                           ;dc_motor.c: 67:         if ((mR->power) > 0){
  8949  0031A4  C01B  FFD9         	movff	stop@mR,fsr2l
  8950  0031A8  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8951  0031AC  50DF               	movf	indf2,w,c
  8952  0031AE  B4D8               	btfsc	status,2,c
  8953  0031B0  EFDC  F018         	goto	u2211
  8954  0031B4  EFDE  F018         	goto	u2210
  8955  0031B8                     u2211:
  8956  0031B8  EFE3  F018         	goto	l2762
  8957  0031BC                     u2210:
  8958  0031BC                     
  8959                           ;dc_motor.c: 68:             (mR->power) -= 1;
  8960  0031BC  C01B  FFD9         	movff	stop@mR,fsr2l
  8961  0031C0  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8962  0031C4  06DF               	decf	indf2,f,c
  8963  0031C6                     l2762:
  8964                           
  8965                           ;dc_motor.c: 70:         setMotorPWM(mL);
  8966  0031C6  C019  F00E         	movff	stop@mL,setMotorPWM@m
  8967  0031CA  C01A  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8968  0031CE  ECF1  F011         	call	_setMotorPWM	;wreg free
  8969  0031D2                     
  8970                           ;dc_motor.c: 71:         setMotorPWM(mR);
  8971  0031D2  C01B  F00E         	movff	stop@mR,setMotorPWM@m
  8972  0031D6  C01C  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8973  0031DA  ECF1  F011         	call	_setMotorPWM	;wreg free
  8974  0031DE                     
  8975                           ;dc_motor.c: 72:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  8976  0031DE  0E35               	movlw	53
  8977  0031E0                     u4737:
  8978  0031E0  2EE8               	decfsz	wreg,f,c
  8979  0031E2  D7FE               	bra	u4737
  8980  0031E4  F000               	nop	
  8981  0031E6                     l2768:
  8982                           
  8983                           ;dc_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8984  0031E6  C019  FFD9         	movff	stop@mL,fsr2l
  8985  0031EA  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8986  0031EE  50DF               	movf	indf2,w,c
  8987  0031F0  B4D8               	btfsc	status,2,c
  8988  0031F2  EFFD  F018         	goto	u2221
  8989  0031F6  EFFF  F018         	goto	u2220
  8990  0031FA                     u2221:
  8991  0031FA  EF0B  F019         	goto	l226
  8992  0031FE                     u2220:
  8993  0031FE  C01B  FFD9         	movff	stop@mR,fsr2l
  8994  003202  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8995  003206  50DF               	movf	indf2,w,c
  8996  003208  A4D8               	btfss	status,2,c
  8997  00320A  EF09  F019         	goto	u2231
  8998  00320E  EF0B  F019         	goto	u2230
  8999  003212                     u2231:
  9000  003212  EFC1  F018         	goto	l2754
  9001  003216                     u2230:
  9002  003216                     l226:
  9003  003216  0012               	return		;funcret
  9004  003218                     __end_of_stop:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function _reverse *****************
  9008 ;; Defined at:
  9009 ;;		line 76 in file "dc_motor.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9012 ;;		 -> main@motorL(9), 
  9013 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9014 ;;		 -> main@motorR(9), 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9030 ;;Total ram usage:        4 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; Hardware stack levels required when called: 3
  9033 ;; This function calls:
  9034 ;;		_setMotorPWM
  9035 ;; This function is called by:
  9036 ;;		_turnLeft90
  9037 ;;		_turnLeft135
  9038 ;;		_turnRight90
  9039 ;;		_turnRight135
  9040 ;;		_turnRight180
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text37
  9045  0033BA                     __ptext37:
  9046                           	callstack 0
  9047  0033BA                     _reverse:
  9048                           	callstack 26
  9049  0033BA                     
  9050                           ;dc_motor.c: 76: void reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: 
      +                          {;dc_motor.c: 78:     (*mL).direction = 0;
  9051  0033BA  EE20 F001          	lfsr	2,1
  9052  0033BE  5019               	movf	reverse@mL^0,w,c
  9053  0033C0  26D9               	addwf	fsr2l,f,c
  9054  0033C2  501A               	movf	(reverse@mL+1)^0,w,c
  9055  0033C4  22DA               	addwfc	fsr2h,f,c
  9056  0033C6  0E00               	movlw	0
  9057  0033C8  6EDF               	movwf	indf2,c
  9058                           
  9059                           ;dc_motor.c: 79:     (*mR).direction = 0;
  9060  0033CA  EE20 F001          	lfsr	2,1
  9061  0033CE  501B               	movf	reverse@mR^0,w,c
  9062  0033D0  26D9               	addwf	fsr2l,f,c
  9063  0033D2  501C               	movf	(reverse@mR+1)^0,w,c
  9064  0033D4  22DA               	addwfc	fsr2h,f,c
  9065  0033D6  0E00               	movlw	0
  9066  0033D8  6EDF               	movwf	indf2,c
  9067  0033DA                     
  9068                           ;dc_motor.c: 80:     (*mL).power = 50;
  9069  0033DA  C019  FFD9         	movff	reverse@mL,fsr2l
  9070  0033DE  C01A  FFDA         	movff	reverse@mL+1,fsr2h
  9071  0033E2  0E32               	movlw	50
  9072  0033E4  6EDF               	movwf	indf2,c
  9073  0033E6                     
  9074                           ;dc_motor.c: 81:     (*mR).power = 50;
  9075  0033E6  C01B  FFD9         	movff	reverse@mR,fsr2l
  9076  0033EA  C01C  FFDA         	movff	reverse@mR+1,fsr2h
  9077  0033EE  0E32               	movlw	50
  9078  0033F0  6EDF               	movwf	indf2,c
  9079  0033F2                     
  9080                           ;dc_motor.c: 82:     setMotorPWM(mL);
  9081  0033F2  C019  F00E         	movff	reverse@mL,setMotorPWM@m
  9082  0033F6  C01A  F00F         	movff	reverse@mL+1,setMotorPWM@m+1
  9083  0033FA  ECF1  F011         	call	_setMotorPWM	;wreg free
  9084  0033FE                     
  9085                           ;dc_motor.c: 83:     setMotorPWM(mR);
  9086  0033FE  C01B  F00E         	movff	reverse@mR,setMotorPWM@m
  9087  003402  C01C  F00F         	movff	reverse@mR+1,setMotorPWM@m+1
  9088  003406  ECF1  F011         	call	_setMotorPWM	;wreg free
  9089  00340A  0012               	return		;funcret
  9090  00340C                     __end_of_reverse:
  9091                           	callstack 0
  9092                           
  9093 ;; *************** function _forward *****************
  9094 ;; Defined at:
  9095 ;;		line 207 in file "dc_motor.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9098 ;;		 -> main@motorL(9), 
  9099 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9100 ;;		 -> main@motorR(9), 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;		None
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9115 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9116 ;;Total ram usage:        4 bytes
  9117 ;; Hardware stack levels used: 1
  9118 ;; Hardware stack levels required when called: 3
  9119 ;; This function calls:
  9120 ;;		_setMotorPWM
  9121 ;; This function is called by:
  9122 ;;		_White
  9123 ;;		_main
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           	psect	text38
  9128  00340C                     __ptext38:
  9129                           	callstack 0
  9130  00340C                     _forward:
  9131                           	callstack 27
  9132  00340C                     
  9133                           ;dc_motor.c: 207: void forward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 208
      +                          : {;dc_motor.c: 209:     (*mL).direction = 1;
  9134  00340C  EE20 F001          	lfsr	2,1
  9135  003410  5019               	movf	forward@mL^0,w,c
  9136  003412  26D9               	addwf	fsr2l,f,c
  9137  003414  501A               	movf	(forward@mL+1)^0,w,c
  9138  003416  22DA               	addwfc	fsr2h,f,c
  9139  003418  0E01               	movlw	1
  9140  00341A  6EDF               	movwf	indf2,c
  9141                           
  9142                           ;dc_motor.c: 210:     (*mR).direction = 1;
  9143  00341C  EE20 F001          	lfsr	2,1
  9144  003420  501B               	movf	forward@mR^0,w,c
  9145  003422  26D9               	addwf	fsr2l,f,c
  9146  003424  501C               	movf	(forward@mR+1)^0,w,c
  9147  003426  22DA               	addwfc	fsr2h,f,c
  9148  003428  0E01               	movlw	1
  9149  00342A  6EDF               	movwf	indf2,c
  9150  00342C                     
  9151                           ;dc_motor.c: 211:     (*mL).power = 13;
  9152  00342C  C019  FFD9         	movff	forward@mL,fsr2l
  9153  003430  C01A  FFDA         	movff	forward@mL+1,fsr2h
  9154  003434  0E0D               	movlw	13
  9155  003436  6EDF               	movwf	indf2,c
  9156  003438                     
  9157                           ;dc_motor.c: 212:     (*mR).power = 13;
  9158  003438  C01B  FFD9         	movff	forward@mR,fsr2l
  9159  00343C  C01C  FFDA         	movff	forward@mR+1,fsr2h
  9160  003440  0E0D               	movlw	13
  9161  003442  6EDF               	movwf	indf2,c
  9162  003444                     
  9163                           ;dc_motor.c: 213:     setMotorPWM(mL);
  9164  003444  C019  F00E         	movff	forward@mL,setMotorPWM@m
  9165  003448  C01A  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  9166  00344C  ECF1  F011         	call	_setMotorPWM	;wreg free
  9167  003450                     
  9168                           ;dc_motor.c: 214:     setMotorPWM(mR);
  9169  003450  C01B  F00E         	movff	forward@mR,setMotorPWM@m
  9170  003454  C01C  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  9171  003458  ECF1  F011         	call	_setMotorPWM	;wreg free
  9172  00345C  0012               	return		;funcret
  9173  00345E                     __end_of_forward:
  9174                           	callstack 0
  9175                           
  9176 ;; *************** function _setMotorPWM *****************
  9177 ;; Defined at:
  9178 ;;		line 37 in file "dc_motor.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9181 ;;		 -> main@motorR(9), main@motorL(9), 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  PWMduty         2   22[COMRAM] int 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;Total ram usage:       11 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 2
  9200 ;; This function calls:
  9201 ;;		___lwdiv
  9202 ;;		___wmul
  9203 ;; This function is called by:
  9204 ;;		_stop
  9205 ;;		_reverse
  9206 ;;		_turnLeft90
  9207 ;;		_turnLeft135
  9208 ;;		_turnRight90
  9209 ;;		_turnRight135
  9210 ;;		_turnRight180
  9211 ;;		_forward
  9212 ;;		_reverseTurnRight90
  9213 ;;		_reverseTurnLeft90
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text39
  9218  0023E2                     __ptext39:
  9219                           	callstack 0
  9220  0023E2                     _setMotorPWM:
  9221                           	callstack 26
  9222  0023E2                     
  9223                           ;dc_motor.c: 37: void setMotorPWM(struct DC_motor *m);dc_motor.c: 38: {;dc_motor.c: 39: 
      +                           int PWMduty;;dc_motor.c: 41:  if (m->direction){
  9224  0023E2  EE20 F001          	lfsr	2,1
  9225  0023E6  500E               	movf	setMotorPWM@m^0,w,c
  9226  0023E8  26D9               	addwf	fsr2l,f,c
  9227  0023EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9228  0023EC  22DA               	addwfc	fsr2h,f,c
  9229  0023EE  50DF               	movf	indf2,w,c
  9230  0023F0  B4D8               	btfsc	status,2,c
  9231  0023F2  EFFD  F011         	goto	u2161
  9232  0023F6  EFFF  F011         	goto	u2160
  9233  0023FA                     u2161:
  9234  0023FA  EF30  F012         	goto	l2742
  9235  0023FE                     u2160:
  9236  0023FE                     
  9237                           ;dc_motor.c: 43:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  9238  0023FE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9239  002402  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9240  002406  50DF               	movf	indf2,w,c
  9241  002408  6E10               	movwf	??_setMotorPWM^0,c
  9242  00240A  5010               	movf	??_setMotorPWM^0,w,c
  9243  00240C  6E01               	movwf	___wmul@multiplier^0,c
  9244  00240E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9245  002410  EE20 F007          	lfsr	2,7
  9246  002414  500E               	movf	setMotorPWM@m^0,w,c
  9247  002416  26D9               	addwf	fsr2l,f,c
  9248  002418  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9249  00241A  22DA               	addwfc	fsr2h,f,c
  9250  00241C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9251  002420  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9252  002424  EC9C  F01B         	call	___wmul	;wreg free
  9253  002428  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9254  00242C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9255  002430  0E00               	movlw	0
  9256  002432  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9257  002434  0E64               	movlw	100
  9258  002436  6E09               	movwf	___lwdiv@divisor^0,c
  9259  002438  EC49  F019         	call	___lwdiv	;wreg free
  9260  00243C  EE20 F007          	lfsr	2,7
  9261  002440  500E               	movf	setMotorPWM@m^0,w,c
  9262  002442  26D9               	addwf	fsr2l,f,c
  9263  002444  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9264  002446  22DA               	addwfc	fsr2h,f,c
  9265  002448  CFDE F011          	movff	postinc2,??_setMotorPWM+1
  9266  00244C  CFDD F012          	movff	postdec2,??_setMotorPWM+2
  9267  002450  5007               	movf	?___lwdiv^0,w,c
  9268  002452  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9269  002454  6E17               	movwf	setMotorPWM@PWMduty^0,c
  9270  002456  5008               	movf	(?___lwdiv+1)^0,w,c
  9271  002458  5812               	subwfb	(??_setMotorPWM+2)^0,w,c
  9272  00245A  6E18               	movwf	(setMotorPWM@PWMduty+1)^0,c
  9273                           
  9274                           ;dc_motor.c: 44:  }
  9275  00245C  EF53  F012         	goto	l2744
  9276  002460                     l2742:
  9277                           
  9278                           ;dc_motor.c: 47:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  9279  002460  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9280  002464  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9281  002468  50DF               	movf	indf2,w,c
  9282  00246A  6E10               	movwf	??_setMotorPWM^0,c
  9283  00246C  5010               	movf	??_setMotorPWM^0,w,c
  9284  00246E  6E01               	movwf	___wmul@multiplier^0,c
  9285  002470  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9286  002472  EE20 F007          	lfsr	2,7
  9287  002476  500E               	movf	setMotorPWM@m^0,w,c
  9288  002478  26D9               	addwf	fsr2l,f,c
  9289  00247A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9290  00247C  22DA               	addwfc	fsr2h,f,c
  9291  00247E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9292  002482  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9293  002486  EC9C  F01B         	call	___wmul	;wreg free
  9294  00248A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9295  00248E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9296  002492  0E00               	movlw	0
  9297  002494  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9298  002496  0E64               	movlw	100
  9299  002498  6E09               	movwf	___lwdiv@divisor^0,c
  9300  00249A  EC49  F019         	call	___lwdiv	;wreg free
  9301  00249E  C007  F017         	movff	?___lwdiv,setMotorPWM@PWMduty
  9302  0024A2  C008  F018         	movff	?___lwdiv+1,setMotorPWM@PWMduty+1
  9303  0024A6                     l2744:
  9304                           
  9305                           ;dc_motor.c: 50:  *(m->dutyHighByte) = PWMduty;
  9306  0024A6  EE20 F002          	lfsr	2,2
  9307  0024AA  500E               	movf	setMotorPWM@m^0,w,c
  9308  0024AC  26D9               	addwf	fsr2l,f,c
  9309  0024AE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9310  0024B0  22DA               	addwfc	fsr2h,f,c
  9311  0024B2  CFDE F010          	movff	postinc2,??_setMotorPWM
  9312  0024B6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9313  0024BA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9314  0024BE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9315  0024C2  C017  FFDF         	movff	setMotorPWM@PWMduty,indf2
  9316  0024C6                     
  9317                           ;dc_motor.c: 52:  if (m->direction){
  9318  0024C6  EE20 F001          	lfsr	2,1
  9319  0024CA  500E               	movf	setMotorPWM@m^0,w,c
  9320  0024CC  26D9               	addwf	fsr2l,f,c
  9321  0024CE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9322  0024D0  22DA               	addwfc	fsr2h,f,c
  9323  0024D2  50DF               	movf	indf2,w,c
  9324  0024D4  B4D8               	btfsc	status,2,c
  9325  0024D6  EF6F  F012         	goto	u2171
  9326  0024DA  EF71  F012         	goto	u2170
  9327  0024DE                     u2171:
  9328  0024DE  EFA6  F012         	goto	l2750
  9329  0024E2                     u2170:
  9330  0024E2                     
  9331                           ;dc_motor.c: 53:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  9332  0024E2  EE20 F004          	lfsr	2,4
  9333  0024E6  500E               	movf	setMotorPWM@m^0,w,c
  9334  0024E8  26D9               	addwf	fsr2l,f,c
  9335  0024EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9336  0024EC  22DA               	addwfc	fsr2h,f,c
  9337  0024EE  CFDE F010          	movff	postinc2,??_setMotorPWM
  9338  0024F2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9339  0024F6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9340  0024FA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9341  0024FE  EE10 F004          	lfsr	1,4
  9342  002502  500E               	movf	setMotorPWM@m^0,w,c
  9343  002504  26E1               	addwf	fsr1l,f,c
  9344  002506  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9345  002508  22E2               	addwfc	fsr1h,f,c
  9346  00250A  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9347  00250E  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9348  002512  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9349  002516  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9350  00251A  50E7               	movf	indf1,w,c
  9351  00251C  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9352  00251E  EE10 F006          	lfsr	1,6
  9353  002522  500E               	movf	setMotorPWM@m^0,w,c
  9354  002524  26E1               	addwf	fsr1l,f,c
  9355  002526  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9356  002528  22E2               	addwfc	fsr1h,f,c
  9357  00252A  50E7               	movf	indf1,w,c
  9358  00252C  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9359  00252E  0E01               	movlw	1
  9360  002530  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9361  002532  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9362  002534  EF9E  F012         	goto	u2184
  9363  002538                     u2185:
  9364  002538  90D8               	bcf	status,0,c
  9365  00253A  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9366  00253C                     u2184:
  9367  00253C  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9368  00253E  EF9C  F012         	goto	u2185
  9369  002542  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9370  002544  1014               	iorwf	(??_setMotorPWM+4)^0,w,c
  9371  002546  6EDF               	movwf	indf2,c
  9372                           
  9373                           ;dc_motor.c: 54:  }
  9374  002548  EFDA  F012         	goto	l216
  9375  00254C                     l2750:
  9376                           
  9377                           ;dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  9378  00254C  EE20 F004          	lfsr	2,4
  9379  002550  500E               	movf	setMotorPWM@m^0,w,c
  9380  002552  26D9               	addwf	fsr2l,f,c
  9381  002554  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9382  002556  22DA               	addwfc	fsr2h,f,c
  9383  002558  CFDE F010          	movff	postinc2,??_setMotorPWM
  9384  00255C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9385  002560  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9386  002564  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9387  002568  EE10 F004          	lfsr	1,4
  9388  00256C  500E               	movf	setMotorPWM@m^0,w,c
  9389  00256E  26E1               	addwf	fsr1l,f,c
  9390  002570  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9391  002572  22E2               	addwfc	fsr1h,f,c
  9392  002574  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9393  002578  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9394  00257C  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9395  002580  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9396  002584  50E7               	movf	indf1,w,c
  9397  002586  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9398  002588  EE10 F006          	lfsr	1,6
  9399  00258C  500E               	movf	setMotorPWM@m^0,w,c
  9400  00258E  26E1               	addwf	fsr1l,f,c
  9401  002590  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9402  002592  22E2               	addwfc	fsr1h,f,c
  9403  002594  50E7               	movf	indf1,w,c
  9404  002596  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9405  002598  0E01               	movlw	1
  9406  00259A  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9407  00259C  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9408  00259E  EFD3  F012         	goto	u2194
  9409  0025A2                     u2195:
  9410  0025A2  90D8               	bcf	status,0,c
  9411  0025A4  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9412  0025A6                     u2194:
  9413  0025A6  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9414  0025A8  EFD1  F012         	goto	u2195
  9415  0025AC  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9416  0025AE  0AFF               	xorlw	255
  9417  0025B0  1414               	andwf	(??_setMotorPWM+4)^0,w,c
  9418  0025B2  6EDF               	movwf	indf2,c
  9419  0025B4                     l216:
  9420  0025B4  0012               	return		;funcret
  9421  0025B6                     __end_of_setMotorPWM:
  9422                           	callstack 0
  9423                           
  9424 ;; *************** function ___wmul *****************
  9425 ;; Defined at:
  9426 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  multiplier      2    0[COMRAM] unsigned int 
  9429 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;  product         2    4[COMRAM] unsigned int 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  2    0[COMRAM] unsigned int 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0, prodl, prodh
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9444 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9445 ;;Total ram usage:        6 bytes
  9446 ;; Hardware stack levels used: 1
  9447 ;; Hardware stack levels required when called: 1
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_setMotorPWM
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text40
  9456  003738                     __ptext40:
  9457                           	callstack 0
  9458  003738                     ___wmul:
  9459                           	callstack 26
  9460  003738  5001               	movf	___wmul@multiplier^0,w,c
  9461  00373A  0203               	mulwf	___wmul@multiplicand^0,c
  9462  00373C  CFF3 F005          	movff	prodl,___wmul@product
  9463  003740  CFF4 F006          	movff	prodh,___wmul@product+1
  9464  003744  5001               	movf	___wmul@multiplier^0,w,c
  9465  003746  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9466  003748  50F3               	movf	243,w,c
  9467  00374A  2606               	addwf	(___wmul@product+1)^0,f,c
  9468  00374C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9469  00374E  0203               	mulwf	___wmul@multiplicand^0,c
  9470  003750  50F3               	movf	243,w,c
  9471  003752  2606               	addwf	(___wmul@product+1)^0,f,c
  9472  003754  C005  F001         	movff	___wmul@product,?___wmul
  9473  003758  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9474  00375C  0012               	return		;funcret
  9475  00375E                     __end_of___wmul:
  9476                           	callstack 0
  9477                           
  9478 ;; *************** function ___lwdiv *****************
  9479 ;; Defined at:
  9480 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  dividend        2    6[COMRAM] unsigned int 
  9483 ;;  divisor         2    8[COMRAM] unsigned int 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  quotient        2   10[COMRAM] unsigned int 
  9486 ;;  counter         1   12[COMRAM] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  2    6[COMRAM] unsigned int 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9497 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9499 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;Total ram usage:        7 bytes
  9501 ;; Hardware stack levels used: 1
  9502 ;; Hardware stack levels required when called: 1
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_setMotorPWM
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text41
  9511  003292                     __ptext41:
  9512                           	callstack 0
  9513  003292                     ___lwdiv:
  9514                           	callstack 26
  9515  003292  0E00               	movlw	0
  9516  003294  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9517  003296  0E00               	movlw	0
  9518  003298  6E0B               	movwf	___lwdiv@quotient^0,c
  9519  00329A  5009               	movf	___lwdiv@divisor^0,w,c
  9520  00329C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9521  00329E  B4D8               	btfsc	status,2,c
  9522  0032A0  EF54  F019         	goto	u2131
  9523  0032A4  EF56  F019         	goto	u2130
  9524  0032A8                     u2131:
  9525  0032A8  EF7E  F019         	goto	l1028
  9526  0032AC                     u2130:
  9527  0032AC  0E01               	movlw	1
  9528  0032AE  6E0D               	movwf	___lwdiv@counter^0,c
  9529  0032B0  EF5E  F019         	goto	l2724
  9530  0032B4                     l2722:
  9531  0032B4  90D8               	bcf	status,0,c
  9532  0032B6  3609               	rlcf	___lwdiv@divisor^0,f,c
  9533  0032B8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9534  0032BA  2A0D               	incf	___lwdiv@counter^0,f,c
  9535  0032BC                     l2724:
  9536  0032BC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9537  0032BE  EF63  F019         	goto	u2141
  9538  0032C2  EF65  F019         	goto	u2140
  9539  0032C6                     u2141:
  9540  0032C6  EF5A  F019         	goto	l2722
  9541  0032CA                     u2140:
  9542  0032CA                     l2726:
  9543  0032CA  90D8               	bcf	status,0,c
  9544  0032CC  360B               	rlcf	___lwdiv@quotient^0,f,c
  9545  0032CE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9546  0032D0  5009               	movf	___lwdiv@divisor^0,w,c
  9547  0032D2  5C07               	subwf	___lwdiv@dividend^0,w,c
  9548  0032D4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9549  0032D6  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9550  0032D8  A0D8               	btfss	status,0,c
  9551  0032DA  EF71  F019         	goto	u2151
  9552  0032DE  EF73  F019         	goto	u2150
  9553  0032E2                     u2151:
  9554  0032E2  EF78  F019         	goto	l2734
  9555  0032E6                     u2150:
  9556  0032E6  5009               	movf	___lwdiv@divisor^0,w,c
  9557  0032E8  5E07               	subwf	___lwdiv@dividend^0,f,c
  9558  0032EA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9559  0032EC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9560  0032EE  800B               	bsf	___lwdiv@quotient^0,0,c
  9561  0032F0                     l2734:
  9562  0032F0  90D8               	bcf	status,0,c
  9563  0032F2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9564  0032F4  3209               	rrcf	___lwdiv@divisor^0,f,c
  9565  0032F6  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9566  0032F8  EF65  F019         	goto	l2726
  9567  0032FC                     l1028:
  9568  0032FC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9569  003300  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9570  003304  0012               	return		;funcret
  9571  003306                     __end_of___lwdiv:
  9572                           	callstack 0
  9573                           
  9574 ;; *************** function _Timer0_init *****************
  9575 ;; Defined at:
  9576 ;;		line 8 in file "timers.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;		None
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;		None
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  1    wreg      void 
  9583 ;; Registers used:
  9584 ;;		wreg, status,2
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9594 ;;Total ram usage:        0 bytes
  9595 ;; Hardware stack levels used: 1
  9596 ;; Hardware stack levels required when called: 1
  9597 ;; This function calls:
  9598 ;;		Nothing
  9599 ;; This function is called by:
  9600 ;;		_main
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text42
  9605  0037C0                     __ptext42:
  9606                           	callstack 0
  9607  0037C0                     _Timer0_init:
  9608                           	callstack 29
  9609  0037C0                     
  9610                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  9611  0037C0  50D6               	movf	214,w,c	;volatile
  9612  0037C2  0B1F               	andlw	-225
  9613  0037C4  0940               	iorlw	64
  9614  0037C6  6ED6               	movwf	214,c	;volatile
  9615  0037C8                     
  9616                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  9617  0037C8  88D6               	bsf	214,4,c	;volatile
  9618                           
  9619                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1111;
  9620  0037CA  0E0F               	movlw	15
  9621  0037CC  12D6               	iorwf	214,f,c	;volatile
  9622  0037CE                     
  9623                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  9624  0037CE  88D5               	bsf	213,4,c	;volatile
  9625                           
  9626                           ;timers.c: 16:     TMR0H=0;
  9627  0037D0  0E00               	movlw	0
  9628  0037D2  6ED4               	movwf	212,c	;volatile
  9629                           
  9630                           ;timers.c: 17:     TMR0L=0;
  9631  0037D4  0E00               	movlw	0
  9632  0037D6  6ED3               	movwf	211,c	;volatile
  9633  0037D8                     
  9634                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  9635  0037D8  8ED5               	bsf	213,7,c	;volatile
  9636  0037DA  0012               	return		;funcret
  9637  0037DC                     __end_of_Timer0_init:
  9638                           	callstack 0
  9639                           
  9640 ;; *************** function _Interrupts_init *****************
  9641 ;; Defined at:
  9642 ;;		line 11 in file "interrupts.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		None
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; Hardware stack levels required when called: 1
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_main
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text43
  9671  0037E8                     __ptext43:
  9672                           	callstack 0
  9673  0037E8                     _Interrupts_init:
  9674                           	callstack 29
  9675  0037E8                     
  9676                           ;interrupts.c: 15:     PIE2bits.C1IE = 1;
  9677  0037E8  010E               	movlb	14	; () banked
  9678  0037EA  812B               	bsf	43,0,b	;volatile
  9679                           
  9680                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  9681  0037EC  8B29               	bsf	41,5,b	;volatile
  9682                           
  9683                           ;interrupts.c: 17:     INTCONbits.GIEL = 1;
  9684  0037EE  8CF2               	bsf	242,6,c	;volatile
  9685                           
  9686                           ;interrupts.c: 18:     INTCONbits.GIE = 1;
  9687  0037F0  8EF2               	bsf	242,7,c	;volatile
  9688  0037F2                     
  9689                           ; BSR set to: 14
  9690  0037F2  0012               	return		;funcret
  9691  0037F4                     __end_of_Interrupts_init:
  9692                           	callstack 0
  9693                           
  9694 ;; *************** function _HighISR *****************
  9695 ;; Defined at:
  9696 ;;		line 26 in file "interrupts.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;		None
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      void 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;Total ram usage:        0 bytes
  9715 ;; Hardware stack levels used: 1
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		Interrupt level 2
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	intcode
  9724  000008                     __pintcode:
  9725                           	callstack 0
  9726  000008                     _HighISR:
  9727                           	callstack 24
  9728                           
  9729                           ; BSR set to: 14
  9730                           ;incstack = 0
  9731  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9732  00000A                     
  9733                           ;interrupts.c: 29:     if(PIR0bits.TMR0IF){
  9734  00000A  010E               	movlb	14	; () banked
  9735  00000C  AB33               	btfss	51,5,b	;volatile
  9736  00000E  EF0B  F000         	goto	i2u212_41
  9737  000012  EF0D  F000         	goto	i2u212_40
  9738  000016                     i2u212_41:
  9739  000016  EF12  F000         	goto	i2l520
  9740  00001A                     i2u212_40:
  9741  00001A                     
  9742                           ; BSR set to: 14
  9743                           ;interrupts.c: 31:         TMR0H = 0;
  9744  00001A  0E00               	movlw	0
  9745  00001C  6ED4               	movwf	212,c	;volatile
  9746                           
  9747                           ;interrupts.c: 32:         TMR0L = 0;
  9748  00001E  0E00               	movlw	0
  9749  000020  6ED3               	movwf	211,c	;volatile
  9750  000022                     
  9751                           ; BSR set to: 14
  9752                           ;interrupts.c: 34:         PIR0bits.TMR0IF = 0;
  9753  000022  9B33               	bcf	51,5,b	;volatile
  9754  000024                     i2l520:
  9755                           
  9756                           ; BSR set to: 14
  9757  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9758  000026  0011               	retfie		f
  9759  000028                     __end_of_HighISR:
  9760                           	callstack 0
  9761  0000                     
  9762                           	psect	rparam
  9763  0000                     
  9764                           	psect	temp
  9765  00005F                     btemp:
  9766                           	callstack 0
  9767  00005F                     	ds	1
  9768  0000                     int$flags	set	btemp
  9769  0000                     wtemp8	set	btemp+1
  9770  0000                     ttemp5	set	btemp+1
  9771  0000                     ttemp6	set	btemp+4
  9772  0000                     ttemp7	set	btemp+8
  9773                           
  9774                           	psect	idloc
  9775                           
  9776                           ;Config register IDLOC0 @ 0x200000
  9777                           ;	unspecified, using default values
  9778  200000                     	org	2097152
  9779  200000  0FFF               	dw	4095
  9780                           
  9781                           ;Config register IDLOC1 @ 0x200002
  9782                           ;	unspecified, using default values
  9783  200002                     	org	2097154
  9784  200002  0FFF               	dw	4095
  9785                           
  9786                           ;Config register IDLOC2 @ 0x200004
  9787                           ;	unspecified, using default values
  9788  200004                     	org	2097156
  9789  200004  0FFF               	dw	4095
  9790                           
  9791                           ;Config register IDLOC3 @ 0x200006
  9792                           ;	unspecified, using default values
  9793  200006                     	org	2097158
  9794  200006  0FFF               	dw	4095
  9795                           
  9796                           ;Config register IDLOC4 @ 0x200008
  9797                           ;	unspecified, using default values
  9798  200008                     	org	2097160
  9799  200008  0FFF               	dw	4095
  9800                           
  9801                           ;Config register IDLOC5 @ 0x20000A
  9802                           ;	unspecified, using default values
  9803  20000A                     	org	2097162
  9804  20000A  0FFF               	dw	4095
  9805                           
  9806                           ;Config register IDLOC6 @ 0x20000C
  9807                           ;	unspecified, using default values
  9808  20000C                     	org	2097164
  9809  20000C  0FFF               	dw	4095
  9810                           
  9811                           ;Config register IDLOC7 @ 0x20000E
  9812                           ;	unspecified, using default values
  9813  20000E                     	org	2097166
  9814  20000E  0FFF               	dw	4095
  9815                           
  9816                           	psect	config
  9817                           
  9818                           ;Config register CONFIG1L @ 0x300000
  9819                           ;	External Oscillator mode Selection bits
  9820                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9821                           ;	Power-up default value for COSC bits
  9822                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9823  300000                     	org	3145728
  9824  300000  AA                 	db	170
  9825                           
  9826                           ;Config register CONFIG1H @ 0x300001
  9827                           ;	unspecified, using default values
  9828                           ;	Clock Out Enable bit
  9829                           ;	CLKOUTEN = 0x1, unprogrammed default
  9830                           ;	Clock Switch Enable bit
  9831                           ;	CSWEN = 0x1, unprogrammed default
  9832                           ;	Fail-Safe Clock Monitor Enable bit
  9833                           ;	FCMEN = 0x1, unprogrammed default
  9834  300001                     	org	3145729
  9835  300001  FF                 	db	255
  9836                           
  9837                           ;Config register CONFIG2L @ 0x300002
  9838                           ;	unspecified, using default values
  9839                           ;	Master Clear Enable bit
  9840                           ;	MCLRE = 0x1, unprogrammed default
  9841                           ;	Power-up Timer Enable bit
  9842                           ;	PWRTE = 0x1, unprogrammed default
  9843                           ;	Low-power BOR enable bit
  9844                           ;	LPBOREN = 0x1, unprogrammed default
  9845                           ;	Brown-out Reset Enable bits
  9846                           ;	BOREN = 0x3, unprogrammed default
  9847  300002                     	org	3145730
  9848  300002  FF                 	db	255
  9849                           
  9850                           ;Config register CONFIG2H @ 0x300003
  9851                           ;	unspecified, using default values
  9852                           ;	Brown Out Reset Voltage selection bits
  9853                           ;	BORV = 0x3, unprogrammed default
  9854                           ;	ZCD Disable bit
  9855                           ;	ZCD = 0x1, unprogrammed default
  9856                           ;	PPSLOCK bit One-Way Set Enable bit
  9857                           ;	PPS1WAY = 0x1, unprogrammed default
  9858                           ;	Stack Full/Underflow Reset Enable bit
  9859                           ;	STVREN = 0x1, unprogrammed default
  9860                           ;	Debugger Enable bit
  9861                           ;	DEBUG = 0x1, unprogrammed default
  9862                           ;	Extended Instruction Set Enable bit
  9863                           ;	XINST = 0x1, unprogrammed default
  9864  300003                     	org	3145731
  9865  300003  FF                 	db	255
  9866                           
  9867                           ;Config register CONFIG3L @ 0x300004
  9868                           ;	WDT Period Select bits
  9869                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9870                           ;	WDT operating mode
  9871                           ;	WDTE = OFF, WDT Disabled
  9872  300004                     	org	3145732
  9873  300004  9F                 	db	159
  9874                           
  9875                           ;Config register CONFIG3H @ 0x300005
  9876                           ;	unspecified, using default values
  9877                           ;	WDT Window Select bits
  9878                           ;	WDTCWS = 0x7, unprogrammed default
  9879                           ;	WDT input clock selector
  9880                           ;	WDTCCS = 0x7, unprogrammed default
  9881  300005                     	org	3145733
  9882  300005  FF                 	db	255
  9883                           
  9884                           ;Config register CONFIG4L @ 0x300006
  9885                           ;	unspecified, using default values
  9886                           ;	Write Protection Block 0
  9887                           ;	WRT0 = 0x1, unprogrammed default
  9888                           ;	Write Protection Block 1
  9889                           ;	WRT1 = 0x1, unprogrammed default
  9890                           ;	Write Protection Block 2
  9891                           ;	WRT2 = 0x1, unprogrammed default
  9892                           ;	Write Protection Block 3
  9893                           ;	WRT3 = 0x1, unprogrammed default
  9894                           ;	Write Protection Block 3
  9895                           ;	WRT4 = 0x1, unprogrammed default
  9896                           ;	Write Protection Block 3
  9897                           ;	WRT5 = 0x1, unprogrammed default
  9898                           ;	Write Protection Block 3
  9899                           ;	WRT6 = 0x1, unprogrammed default
  9900                           ;	Write Protection Block 3
  9901                           ;	WRT7 = 0x1, unprogrammed default
  9902  300006                     	org	3145734
  9903  300006  FF                 	db	255
  9904                           
  9905                           ;Config register CONFIG4H @ 0x300007
  9906                           ;	unspecified, using default values
  9907                           ;	Configuration Register Write Protection bit
  9908                           ;	WRTC = 0x1, unprogrammed default
  9909                           ;	Boot Block Write Protection bit
  9910                           ;	WRTB = 0x1, unprogrammed default
  9911                           ;	Data EEPROM Write Protection bit
  9912                           ;	WRTD = 0x1, unprogrammed default
  9913                           ;	Scanner Enable bit
  9914                           ;	SCANE = 0x1, unprogrammed default
  9915                           ;	Low Voltage Programming Enable bit
  9916                           ;	LVP = 0x1, unprogrammed default
  9917  300007                     	org	3145735
  9918  300007  FF                 	db	255
  9919                           
  9920                           ;Config register CONFIG5L @ 0x300008
  9921                           ;	unspecified, using default values
  9922                           ;	UserNVM Program Memory Code Protection bit
  9923                           ;	CP = 0x1, unprogrammed default
  9924                           ;	DataNVM Memory Code Protection bit
  9925                           ;	CPD = 0x1, unprogrammed default
  9926  300008                     	org	3145736
  9927  300008  FF                 	db	255
  9928                           
  9929                           ;Config register CONFIG5H @ 0x300009
  9930                           ;	unspecified, using default values
  9931  300009                     	org	3145737
  9932  300009  FF                 	db	255
  9933                           
  9934                           ;Config register CONFIG6L @ 0x30000A
  9935                           ;	unspecified, using default values
  9936                           ;	Table Read Protection Block 0
  9937                           ;	EBTR0 = 0x1, unprogrammed default
  9938                           ;	Table Read Protection Block 1
  9939                           ;	EBTR1 = 0x1, unprogrammed default
  9940                           ;	Table Read Protection Block 2
  9941                           ;	EBTR2 = 0x1, unprogrammed default
  9942                           ;	Table Read Protection Block 3
  9943                           ;	EBTR3 = 0x1, unprogrammed default
  9944                           ;	Table Read Protection Block 4
  9945                           ;	EBTR4 = 0x1, unprogrammed default
  9946                           ;	Table Read Protection Block 5
  9947                           ;	EBTR5 = 0x1, unprogrammed default
  9948                           ;	Table Read Protection Block 6
  9949                           ;	EBTR6 = 0x1, unprogrammed default
  9950                           ;	Table Read Protection Block 7
  9951                           ;	EBTR7 = 0x1, unprogrammed default
  9952  30000A                     	org	3145738
  9953  30000A  FF                 	db	255
  9954                           
  9955                           ;Config register CONFIG6H @ 0x30000B
  9956                           ;	unspecified, using default values
  9957                           ;	Boot Block Table Read Protection bit
  9958                           ;	EBTRB = 0x1, unprogrammed default
  9959  30000B                     	org	3145739
  9960  30000B  FF                 	db	255
  9961                           tosu	equ	0xFFF
  9962                           tosh	equ	0xFFE
  9963                           tosl	equ	0xFFD
  9964                           stkptr	equ	0xFFC
  9965                           pclatu	equ	0xFFB
  9966                           pclath	equ	0xFFA
  9967                           pcl	equ	0xFF9
  9968                           tblptru	equ	0xFF8
  9969                           tblptrh	equ	0xFF7
  9970                           tblptrl	equ	0xFF6
  9971                           tablat	equ	0xFF5
  9972                           prodh	equ	0xFF4
  9973                           prodl	equ	0xFF3
  9974                           indf0	equ	0xFEF
  9975                           postinc0	equ	0xFEE
  9976                           postdec0	equ	0xFED
  9977                           preinc0	equ	0xFEC
  9978                           plusw0	equ	0xFEB
  9979                           fsr0h	equ	0xFEA
  9980                           fsr0l	equ	0xFE9
  9981                           wreg	equ	0xFE8
  9982                           indf1	equ	0xFE7
  9983                           postinc1	equ	0xFE6
  9984                           postdec1	equ	0xFE5
  9985                           preinc1	equ	0xFE4
  9986                           plusw1	equ	0xFE3
  9987                           fsr1h	equ	0xFE2
  9988                           fsr1l	equ	0xFE1
  9989                           bsr	equ	0xFE0
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           postdec2	equ	0xFDD
  9993                           preinc2	equ	0xFDC
  9994                           plusw2	equ	0xFDB
  9995                           fsr2h	equ	0xFDA
  9996                           fsr2l	equ	0xFD9
  9997                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     88     154
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseTurnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S73DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S73DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    updateMovementCount@movementArray	PTR unsigned int  size(2) Largest target is 20
		 -> movementArray(BANK0[20]), 

    updateMovementCount@timerArray	PTR unsigned int  size(2) Largest target is 20
		 -> timerArray(BANK0[20]), 

    White@timerArray	PTR unsigned int  size(2) Largest target is 20
		 -> timerArray(BANK0[20]), 

    White@movementArray	PTR unsigned int  size(2) Largest target is 20
		 -> movementArray(BANK0[20]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_determine_color_new
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _White->_reverseTurnLeft90
    _White->_reverseTurnRight90
    _turnRight180->_reverse
    _turnRight180->_stop
    _turnRight135->_reverse
    _turnRight135->_stop
    _turnLeft135->_reverse
    _turnLeft135->_stop
    _reverseTurnRight90->_turnRight90
    _turnRight90->_reverse
    _turnRight90->_stop
    _reverseTurnLeft90->_turnLeft90
    _turnLeft90->_reverse
    _turnLeft90->_stop
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_determine_color_new

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0  259952
                                             92 COMRAM     2     2      0
                                             34 BANK0     54    54      0
                    _Interrupts_init
                        _Timer0_init
                              _White
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                  _reverseTurnLeft90
                 _reverseTurnRight90
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
                _updateMovementCount
 ---------------------------------------------------------------------------------
 (1) _updateMovementCount                                 12     4      8     438
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   15966
                                             90 COMRAM     2     0      2
                                              0 BANK0     34    34      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             12 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1219
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     425
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2432
                                             64 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _White                                               20    10     10  120730
                                             42 COMRAM    20    10     10
                            _forward
                  _reverseTurnLeft90
                 _reverseTurnRight90
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight180                                         8     4      4   13069
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight135                                         8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft135                                          8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnRight90                                   6     2      4   22439
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight90                                          8     4      4   13069
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnLeft90                                    6     2      4   22439
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _turnLeft90                                           8     4      4   13069
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    6237
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              4     0      4    3457
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              4     0      4    3001
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2565
                                             13 COMRAM    11     9      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _White
     _forward
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _reverseTurnLeft90
       _setMotorPWM
       _stop
         _setMotorPWM
       _turnLeft90
         _reverse
           _setMotorPWM
         _setMotorPWM
         _stop
     _reverseTurnRight90
       _setMotorPWM
       _stop
       _turnRight90
         _reverse
         _setMotorPWM
         _stop
     _stop
     _turnLeft135
       _reverse
       _setMotorPWM
       _stop
     _turnLeft90
     _turnRight135
       _reverse
       _setMotorPWM
       _stop
     _turnRight180
       _reverse
       _setMotorPWM
       _stop
     _turnRight90
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _isbtw
       ___flge
   _forward
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _reverseTurnLeft90
   _reverseTurnRight90
   _stop
   _turnLeft135
   _turnLeft90
   _turnRight135
   _turnRight180
   _turnRight90
   _updateMovementCount

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134       8        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 17:45:02 2021

                  _color_read_Red 34AE                      ___fldiv@aexp 0027  
                    ___fldiv@bexp 0026                      ___fldiv@sign 001F  
                 _color_read_Blue 354E                                l53 36E4  
                              l62 34FC                                l71 3366  
                              l56 37BE                                l65 354C  
                              l82 362C                                l75 3290  
                              l59 34AC                                l68 359C  
                              l79 35E6                                l97 0D8C  
             ___wmul@multiplicand 0003                  _color_read_Clear 345E  
                _color_read_Green 34FE                 ??_Interrupts_init 0001  
                             l111 1F98                               l121 2046  
                             l124 33B8                               l118 1FC0  
                             l151 370E                               l216 25B4  
                             l160 3806                               l209 366E  
                             l226 3216                               l234 28A8  
                             l154 3710                               l163 3810  
                             l244 2B24                               l260 3092  
                             l172 36B0                               l229 340A  
                             l157 3736                               l254 29E6  
                             l166 37FC                               l263 317C  
                             l239 2D9C                               l257 345C  
                             l249 2C60                               l169 37E6  
                             l514 37F2                               l370 0E84  
                             l531 37DA                               l443 379E  
                             l372 0E92                               l365 0E40  
                             l374 0EC6                               l366 0E42  
                             l376 0ED4                               l368 0E50  
                             l537 375C                               l802 2F60  
                             l387 10CE                               l397 1314  
                             l807 2FA6                               l834 2EA2  
                             wreg 000FE8                      ___flmul@aexp 0039  
                    ___flmul@bexp 003A                      ___flmul@sign 0034  
                    ___flmul@temp 003F                      ___flmul@prod 003B  
                    ___fltol@exp1 005A                              l1121 2240  
                            l1130 2286                              l1035 3304  
                            l1028 32FC                              l1132 22FE  
                            l1124 2204                              l1133 22EC  
                            l1206 2700                              l1119 23E0  
                            l1151 191A                              l3000 29BA  
                            l1160 1B88                              l1065 1584  
                            l1161 1B76                              l3010 30D0  
                            l3002 29CE                              l1082 169E  
                            l1074 1854                              l1066 1572  
                            l1091 176E                              l1067 1538  
                            l1155 1C7E                              l3020 3110  
                            l3012 30E0                              l3004 3094  
                            l3100 2BC8                              l1092 175C  
                            l3022 313A                              l3014 30EC  
                            l3006 30A8                              l3030 2FD4  
                            l3110 2BF0                              l1158 1B10  
                            l3024 3150                              l3016 30F8  
                            l3008 30C0                              l3040 3018  
                            l3032 2FE4                              l3120 2C34  
                            l3112 2BFC                              l3200 14BE  
                            l1168 1C40                              l1192 260C  
                            l4000 0E24                              l3130 3444  
                            l3018 3104                              l3042 3024  
                            l3034 2FF4                              l3026 2FA8  
                            l3050 2C76                              l3122 2C48  
                            l3114 2C04                              l3106 2BD0  
                            l3210 14D2                              l3202 14C2  
                            l4010 0E2E                              l4002 0E26  
                            l1195 2768                              l3132 3450  
                            l3124 340C                              l3044 3050  
                            l3036 3000                              l3028 2FBC  
                            l3060 2CF4                              l3052 2C8E  
                            l3116 2C08                              l3108 2BE4  
                            l3300 1754                              l3220 1530  
                            l3204 14C6                              l3212 14D6  
                            l3140 13B2                              l4100 1196  
                            l4020 0E6C                              l4012 0E30  
                            l4004 0E28                              l3126 342C  
                            l3046 3066                              l3038 300C  
                            l3070 2D20                              l3062 2D04  
                            l3054 2CBA                              l3118 2C1E  
                            l3310 17D2                              l3230 1566  
                            l3222 1546                              l3214 14DA  
                            l3206 14CA                              l3142 13C2  
                            l3150 13EC                              l3134 1396  
                            l4110 1206                              l4102 11AE  
                            l4030 0EC4                              l4022 0E82  
                            l4014 0E32                              l4006 0E2A  
                            l1199 26A4                              l3128 3438  
                            l3080 2D5A                              l3072 2D2C  
                            l3056 2CCE                              l3048 2C62  
                            l3320 1818                              l3304 177E  
                            l3312 17D4                              l3240 15B6  
                            l3232 1570                              l3224 1552  
                            l3216 1504                              l3208 14CE  
                            l3160 141C                              l3152 13FC  
                            l3144 13D2                              l3136 13A2  
                            l3400 21B8                              l4120 1274  
                            l4112 121A                              l4104 11C4  
                            l4040 0F3A                              l4032 0EE2  
                            l4024 0EA0                              l4016 0E5E  
                            l4008 0E2C                              l3082 2D70  
                            l3074 2D38                              l3058 2CE4  
                            l3090 2B52                              l3330 1842  
                            l3322 1826                              l3314 17E4  
                            l3306 178A                              l3250 15F2  
                            l3242 15C6                              l3234 1592  
                            l3226 1556                              l3218 1520  
                            l3170 145C                              l3162 142A  
                            l3154 1402                              l3146 13E2  
                            l3138 13B0                              l3410 2202  
                            l3402 21C8                              l4130 12F8  
                            l4122 128A                              l4114 1232  
                            l4106 11D8                              l4050 0F96  
                            l4042 0F46                              l4034 0EE4  
                            l4026 0EA2                              l4018 0E60  
                            l3084 2D84                              l3076 2D40  
                            l3068 2D0C                              l3092 2B7E  
                            l3332 1844                              l3324 182C  
                            l3316 17F4                              l3308 1798  
                            l3260 1638                              l3252 1600  
                            l3244 15D4                              l3236 15A2  
                            l3228 1564                              l3180 1496  
                            l3172 145E                              l3164 142C  
                            l3156 1414                              l3148 13E4  
                            l3420 2250                              l3412 220E  
                            l3404 21D0                              l3340 2062  
                            l3500 18E4                              l4140 134C  
                            l4132 1310                              l4124 129E  
                            l4116 1248                              l4108 11F0  
                            l4060 0FF8                              l4052 0FAC  
                            l4044 0F5A                              l4028 0EAE  
                            l4036 0EF6                              l2710 3738  
                            l3078 2D44                              l3094 2B92  
                            l3086 2B26                              l3326 182E  
                            l3318 1814                              l3270 16B4  
                            l3262 166C                              l3254 1602  
                            l3246 15E2                              l3190 14AA  
                            l3182 149A                              l3166 143C  
                            l3174 1466                              l3158 1416  
                            l3422 2266                              l3430 2296  
                            l3414 222C                              l3406 21E0  
                            l3350 2096                              l3342 2064  
                            l3510 193A                              l3502 18F4  
                            l4142 1364                              l4134 1312  
                            l4126 12B6                              l4118 125C  
                            l4070 104C                              l4062 0FFC  
                            l4054 0FC0                              l4046 0F6E  
                            l4038 0F0A                              l2720 32AC  
                            l2712 3754                              l3096 2BA8  
                            l3088 2B3A                              l2800 380C  
                            l3328 1834                              l3280 16F0  
                            l3272 16C4                              l3264 166E  
                            l3256 160C                              l3248 15EE  
                            l3192 14AE                              l3184 149E  
                            l3176 1476                              l3168 144C  
                            l3432 22A4                              l3424 226C  
                            l3416 222E                              l3408 21F4  
                            l3360 20C8                              l3344 2074  
                            l3352 209E                              l3336 2048  
                            l3600 1C6E                              l3520 197A  
                            l3504 1904                              l4144 137A  
                            l4128 12CC                              l4136 1322  
                            l4080 10AC                              l4072 1062  
                            l4064 1014                              l4056 0FD6  
                            l4048 0F82                              l2730 32E6  
                            l2722 32B4                              l3098 2BB8  
                            l2810 36AC                              l2802 3672  
                            l3290 171C                              l3282 16F2  
                            l3266 167E                              l3258 1612  
                            l3194 14B2                              l3186 14A2  
                            l3178 1488                              l3442 230E  
                            l3450 2356                              l3434 22A8  
                            l3426 2276                              l3418 223E  
                            l3370 20FC                              l3362 20CA  
                            l3354 20AE                              l3346 2084  
                            l3338 2054                              l3530 19C4  
                            l3522 1986                              l3514 194E  
                            l3506 190A                              l3610 2DC8  
                            l4138 1338                              l4090 112C  
                            l4082 10BE                              l4074 1086  
                            l4066 102C                              l4058 0FEA  
                            l2732 32EE                              l2724 32BC  
                            l2716 3292                              l2740 23FE  
                            l2820 2796                              l2812 36AE  
                            l2804 3676                              l3700 36D0  
                            l3284 1700                              l3276 16D8  
                            l3292 171E                              l3268 168E  
                            l3196 14B6                              l3188 14A6  
                            l3460 23C0                              l3452 2370  
                            l3444 231A                              l3436 22B6  
                            l3428 2284                              l3380 2142  
                            l3364 20DA                              l3372 2104  
                            l3356 20B4                              l3348 2094  
                            l3540 1A16                              l3532 19D0  
                            l3524 199E                              l3516 195A  
                            l3508 192A                              l3620 2E16  
                            l3612 2DF2                              l3604 2D9E  
                            l2900 2F20                              l4092 1140  
                            l4076 108C                              l4068 1044  
                            l4084 10EE                              l2734 32F0  
                            l2726 32CA                              l2718 329A  
                            l2750 254C                              l2742 2460  
                            l2830 280C                              l2822 27C2  
                            l2806 367E                              l3702 36DA  
                            l3286 1708                              l3278 16E2  
                            l3294 172C                              l3198 14BA  
                            l3462 23CE                              l3454 2386  
                            l3446 2328                              l3438 22E4  
                            l3390 216A                              l3382 2146  
                            l3374 2114                              l3366 20EA  
                            l3358 20BA                              l3550 1A94  
                            l3542 1A26                              l3534 19E0  
                            l3526 19AA                              l3518 1964  
                            l3630 2E42                              l3614 2DF4  
                            l3606 2DB4                              l2910 2FA4  
                            l2902 2F2E                              l3710 002C  
                            l4094 1154                              l4086 1100  
                            l4078 1098                              l2736 32F6  
                            l2728 32D0                              l2744 24A6  
                            l2760 31BC                              l2752 317E  
                            l2840 2834                              l2824 27D6  
                            l2816 276A                              l2808 3686  
                            l2920 36F8                              l3296 1730  
                            l3288 170C                              l3464 23D4  
                            l3456 23A0                              l3448 2352  
                            l3376 212A                              l3368 20FA  
                            l3560 1B0E                              l3552 1ACA  
                            l3544 1A42                              l3536 19EC  
                            l3528 19B6                              l3480 1872  
                            l3640 2E72                              l3616 2E04  
                            l2904 2F40                              l3800 0B54  
                            l3720 0358                              l3712 0036  
                            l3704 3306                              l4096 116C  
                            l4088 1114                              l2746 24C6  
                            l2738 23E2                              l2770 31FE  
                            l2762 31C6                              l2754 3182  
                            l2850 287C                              l2842 2840  
                            l2826 27EC                              l2818 277E  
                            l3706 359E                              l2922 36FA  
                            l2914 36E6                              l3298 173E  
                            l3466 23D6                              l3458 23BC  
                            l3394 217E                              l3378 213A  
                            l3386 215A                              l3570 1B6E  
                            l3562 1B20                              l3554 1AD8  
                            l3546 1A4E                              l3538 19FC  
                            l3490 18B8                              l3482 1882  
                            l3474 1856                              l3642 2E82  
                            l3626 2E2E                              l3618 2E08  
                            l3650 25C8                              l2906 2F4E  
                            l3802 0B9A                              l3810 0C46  
                            l3730 055C                              l3722 0444  
                            l3714 00FE                              l2930 34A4  
                            l4098 1182                              l2748 24E2  
                            l2780 33E6                              l2764 31D2  
                            l2756 319A                              l2852 2890  
                            l2844 2848                              l2836 2814  
                            l2828 27FC                              l2860 2A40  
                            l2772 3710                              l2940 34FE  
                            l3708 35E8                              l2924 36FC  
                            l2916 36F0                              l3396 2198  
                            l3388 216A                              l3580 1BDC  
                            l3564 1B2E                              l3556 1AF6  
                            l3548 1A6A                              l3492 18BE  
                            l3484 1892                              l3476 1862  
                            l3644 2E92                              l3636 2E56  
                            l3628 2E38                              l3660 2646  
                            l3652 25D6                              l2908 2F9E  
                            l3812 0C8C                              l3820 0D38  
                            l3804 0BE0                              l3740 05A8  
                            l3732 056C                              l3724 049C  
                            l3716 0188                              l3900 3656  
                            l2782 33F2                              l2766 31DE  
                            l2758 31A4                              l2846 284C  
                            l2838 2828                              l2862 2A54  
                            l2854 29E8                              l2774 3720  
                            l2790 37DE                              l2942 3544  
                            l2934 34AE                              l2918 36F6  
                            l2926 37A2                              l3398 21A8  
                            l3590 1C44                              l3574 1B98  
                            l3582 1BE0                              l3566 1B32  
                            l3558 1B00                              l3494 18C4  
                            l3486 18A2                              l3478 1870  
                            l3638 2E62                              l3670 269A  
                            l3662 264E                              l3654 261C  
                            l3822 0D50                              l3814 0CD2  
                            l3806 0C26                              l3742 05EE  
                            l3750 069A                              l3734 057A  
                            l3726 04F4                              l3718 026C  
                            l3902 366A                              l3910 378C  
                            l3920 37C0                              l2784 33FE  
                            l2776 33BA                              l2768 31E6  
                            l2848 2862                              l2880 2ABE  
                            l2864 2A6A                              l2856 29FC  
                            l3840 1D0C                              l3832 1C80  
                            l2792 37E2                              l2936 34F4  
                            l3592 1C54                              l3584 1BFA  
                            l3576 1BA4                              l3568 1B40  
                            l3496 18D2                              l3488 18A8  
                            l3680 2710                              l3672 26D6  
                            l3664 265A                              l3656 2632  
                            l3648 25B8                              l2952 3218  
                            l3824 0D66                              l3816 0D18  
                            l3808 0C3E                              l3752 06E0  
                            l3760 078C                              l3744 0634  
                            l3736 058A                              l3728 054C  
                            l3904 366C                              l3912 378E  
                            l2928 345E                              l3922 37C8  
                            l2778 33DA                              l2890 2B0C  
                            l2882 2AC6                              l2874 2A92  
                            l2866 2A7A                              l2858 2A14  
                            l2970 28D6                              l3850 1DD6  
                            l3842 1D24                              l3834 1CA8  
                            l2786 37FE                              l2794 37F4  
                            l2946 354E                              l3594 1C62  
                            l3586 1C0E                              l3578 1BB2  
                            l3498 18D4                              l3690 2758  
                            l3682 2714                              l3674 26E2  
                            l3666 268C                              l2954 324A  
                            l2962 3288                              l3826 0D7C  
                            l3818 0D30                              l3762 07D2  
                            l3770 087E                              l3754 0726  
                            l3746 067A                              l3738 0598  
                            l3914 3798                              l3906 3780  
                            l3924 37CE                              l2884 2ACA  
                            l2876 2AA6                              l2868 2A8A  
                            l2980 294C                              l2972 2902  
                            l3860 1ECC                              l3852 1E18  
                            l3844 1D64                              l3836 1CC0  
                            l2788 3802                              l2796 37F8  
                            l2948 3594                              l3596 1C64  
                            l3588 1C28                              l3684 2738  
                            l3676 26F0                              l3668 268E  
                            l2892 2EA4                              l2956 327C  
                            l3828 0D84                              l3772 08C4  
                            l3780 0970                              l3764 0818  
                            l3756 076C                              l3748 0692  
                            l3916 379A                              l3908 378A  
                            l3926 37D8                              l2886 2AE0  
                            l2878 2AB2                              l2990 2974  
                            l2974 2916                              l2966 28AA  
                            l3862 1EE4                              l3854 1E30  
                            l3846 1D7C                              l3870 1F98  
                            l3838 1CCC                              l2798 3808  
                            l3694 36B2                              l3598 1C6A  
                            l3686 2748                              l3678 270E  
                            l2894 2ED2                              l3782 09B6  
                            l3790 0A62                              l3774 090A  
                            l3766 085E                              l3758 0784  
                            l3918 379C                              l3950 0DA6  
                            l3942 0D8E                              l3928 37E8  
                            l2888 2AF8                              l2992 2980  
                            l2976 292C                              l2968 28BE  
                            l3872 1FA0                              l3864 1F26  
                            l3856 1E72                              l3848 1DBE  
                            l3880 201C                              l3696 36B6  
                            l3688 2756                              l2896 2EE2  
                            l3792 0AA8                              l3784 09FC  
                            l3776 0950                              l3768 0876  
                            l3960 0DBC                              l3952 0DAA  
                            l3944 0D9A                              l2994 2988  
                            l2986 2954                              l2978 293C  
                            l3882 2032                              l3874 1FC6  
                            l3866 1F3E                              l3858 1E8A  
                            l3698 36C0                              l2898 2F10  
                            l3794 0AEE                              l3786 0A42  
                            l3778 0968                              l3890 3396  
                            l3970 0DD8                              l3962 0DC4  
                            l3954 0DAA                              l3946 0D9E  
                            l2996 298C                              l2988 2968  
                            l3876 1FD4                              l3868 1F80  
                            l3796 0B34                              l3788 0A5A  
                            l3892 33B0                              l3884 3368  
                            l3980 0DFC                              l3972 0DE0  
                            l3964 0DC8                              l3956 0DB0  
                            l3948 0DA2                              l2998 29A2  
                            l3878 2018                              l3798 0B4C  
                            l3894 33B4                              l3886 336E  
                            l3990 0E1A                              l3982 0E04  
                            l3974 0DE8                              l3966 0DD0  
                            l3958 0DB4                              l3896 362E  
                            l3888 337C                              l3992 0E1C  
                            l3984 0E0C                              l3976 0DEC  
                            l3968 0DD4                              l3898 363E  
                            l3994 0E1E                              l3986 0E14  
                            l3978 0DF4                              l3996 0E20  
                            l3988 0E16                              l3998 0E22  
                            u2200 319A                              u3000 23A0  
                            u2201 3196                              u3001 239C  
                            u2130 32AC                              u2210 31BC  
                            u3010 23CE                              u2131 32A8  
                            u2211 31B8                              u3011 23CA  
                            u2140 32CA                              u2220 31FE  
                            u3100 1AB4                              u3020 1870  
                            u2300 2ED2                              u2141 32C6  
                            u2221 31FA                              u3021 186C  
                            u2301 2ECE                              u2150 32E6  
                            u2230 3216                              u3110 1B0E  
                            u3030 1882                              u2310 2F10  
                            u2151 32E2                              u2231 3212  
                            u3111 1B0A                              u3031 187E  
                            u2311 2F0C                              u2160 23FE  
                            u2240 3720                              u2400 13B0  
                            u3200 1C62                              u3120 1B2E  
                            u3040 1892                              u2320 2F2E  
                            u4000 1014                      _BAUD4CONbits 000EE9  
                            u2161 23FA                              u2241 371C  
                            u2401 13AC                              u3201 1C5E  
                            u3121 1B2A                              u3105 1AAA  
                            u3041 188E                              u2321 2F2A  
                            u4001 1010                              _LATE 000F7D  
                            u2170 24E2                              u2250 3736  
                            u2410 13C2                              u3130 1B40  
                            u3050 18D2                              u3210 2DB4  
                            u2330 2F4E                              u4010 102C  
                            u2171 24DE                              u2251 3732  
                            u2411 13BE                              u3131 1B3C  
                            u3051 18CE                              u3211 2DB0  
                            u2331 2F4A                              u4011 1028  
                            _LATG 000F7F                              u2260 369A  
                            u2500 151C                              u2420 13D2  
                            u3140 1B6E                              u3060 18E4  
                            u3220 2DE8                              u3300 2632  
                            u2340 2F9E                              u4100 1206  
                            u4020 1044                              u2261 3692  
                            u2501 1516                              u2421 13CE  
                            u3141 1B6A                              u3061 18E0  
                            u3301 262E                              u2341 2F9A  
                            u4101 1202                              u4021 1040  
                            u2510 151E                              u2430 1414  
                            u3150 1B84                              u3070 18F4  
                            u3230 2E16                              u3310 2688  
                            u2350 324A                              u4110 1248  
                            u4030 1062                              u2431 1410  
                            u3151 1B80                              u3071 18F0  
                            u3231 2E12                              u3311 2684  
                            u2351 3246                              u4111 1244  
                            u4031 105E                              u2184 253C  
                            u2280 2862                              u2600 1638  
                            u2520 1546                              u2440 142A  
                            u3160 1B98                              u3080 192A  
                            u3240 2E2A                              u3320 26D2  
                            u2360 327C                              u3400 0598  
                            u4120 128A                              u4040 10AC  
                            u2185 2538                              u2281 285E  
                            u2601 1634                              u2521 1542  
                            u2441 1426                              u3161 1B94  
                            u3081 1926                              u3241 2E26  
                            u3225 2DDE                              u3321 26CE  
                            u2361 3278                              u3401 0594  
                            u4121 1286                              u4041 10A8  
                            u2194 25A6                              u2290 2AE0  
                            u2370 29A2                              u2610 167E  
                            u2530 1564                              u2450 143C  
                            u3170 1BB2                              u3090 193A  
                            u3250 2E52                              u3330 26F0  
                            u3410 05EE                              u4130 12CC  
                            u4050 10BE                              _T2PR 000FBC  
                            u2195 25A2                              u2291 2ADC  
                            u2371 299E                              u2611 167A  
                            u2531 1560                              u2451 1438  
                            u3171 1BAE                              u3091 1936  
                            u3251 2E4E                              u3331 26EC  
                            u3411 05EA                              u4131 12C8  
                            u4051 10BA                              u2380 2D5A  
                            u2700 176A                              u2620 16B4  
                            u2540 1584                              u2460 144C  
                            u3180 1BFA                              u3260 2E72  
                            u3340 2700                              u3500 0818  
                            u3420 0634                              u4140 1322  
                            u4060 1100                              u2381 2D56  
                            u2701 1766                              u2621 16B0  
                            u2541 1580                              u2461 1448  
                            u3181 1BF6                              u3261 2E6E  
                            u3341 26FC                              u3501 0814  
                            u3421 0630                              u4141 131E  
                            u4061 10FC                              u2390 2C1E  
                            u2278 369C                              u2710 177E  
                            u2630 16C4                              u2550 1592  
                            u2470 1488                              u3190 1C28  
                            u3270 2E82                              u3350 270E  
                            u3510 085E                              u3430 067A  
                            u4150 1338                              u4070 1140  
                            u2391 2C1A                              u2711 177A  
                            u2631 16C0                              u2551 158E  
                            u2471 1484                              u3191 1C24  
                            u3271 2E7E                              u3351 270A  
                            u3511 085A                              u3431 0676  
                            u4151 1334                              u4071 113C  
                            u2720 1798                              u2640 16F0  
                            u2560 15A2                              u2480 1496  
                            u2800 2074                              u3360 2748  
                            u3280 25C8                              u3600 0A5A  
                            u3520 0876                              u3440 0692  
                            u4160 137A                              u4080 1182  
                            u2721 1794                              u2641 16EC  
                            u2561 159E                              u2481 1492  
                            u2801 2070                              u3361 2744  
                            u3281 25C4                              u3601 0A56  
                            u3521 0872                              u3441 068E  
                            u4161 1376                              u4081 117E  
                            u2730 17D2                              u2650 1700  
                            u2570 15D4                              u2490 1504  
                            u2810 2084                              u3370 2756  
                            u3290 25D6                              u3610 0AA8  
                            u3530 08C4                              u3450 06E0  
                            u4090 11C4                              u2731 17CE  
                            u2651 16FC                              u2571 15D0  
                            u2491 1500                              u2811 2080  
                            u3371 2752                              u3291 25D2  
                            u3611 0AA4                              u3531 08C0  
                            u3451 06DC                              u4307 12A8  
                            u4091 11C0                              u4227 0E76  
                            u2740 17E4                              u2660 171C  
                            u2580 15E2                              u2900 2250  
                            u2820 20C8                              u3700 0CD2  
                            u3620 0AEE                              u3540 090A  
                            u3460 0726                              u3380 055C  
                            u2741 17E0                              u2661 1718  
                            u2581 15DE                              u2901 224C  
                            u2821 20C4                              u3701 0CCE  
                            u3621 0AEA                              u3541 0906  
                            u3461 0722                              u3381 0558  
                            u4317 1302                              u4237 0EB8  
                            u2750 17F4                              u2670 172C  
                            u2590 1600                              u2910 2266  
                            u2830 20DA                              u3710 0D18  
                            u3630 0B34                              u3550 0950  
                            u3470 076C                              u3390 057A  
                            u4407 29D8                              u2751 17F0  
                            u2671 1728                              u2591 15FC  
                            u2911 2262                              u2831 20D6  
                            u3711 0D14                              u3631 0B30  
                            u3551 094C                              u3471 0768  
                            u3391 0576                              u4327 1356  
                            u4247 111E                              u3800 1E72  
                            u2760 1814                              u2680 173E  
                            u2920 2284                              u2840 20EA  
                            u3720 0D30                              u3640 0B4C  
                            u3560 0968                              u3480 0784  
                            u4417 2B44                              u3801 1E6E  
                            u4337 36C6                              u2761 1810  
                            u2681 173A                              u2921 2280  
                            u2841 20E6                              u3721 0D2C  
                            u3641 0B48                              u3561 0964  
                            u3481 0780                              u4257 115E  
                            u3810 1ECC                              u2770 1826  
                            u2690 1754                              u2930 22A4  
                            u2850 212A                              u3730 0D50  
                            u3650 0B9A                              u3570 09B6  
                            u3490 07D2                              u4507 2D3A  
                            u4427 2B70                              u3811 1EC8  
                            u4347 1CB2                              u2771 1822  
                            u2691 1750                              u2931 22A0  
                            u2851 2126                              u3731 0D4C  
                            u3651 0B96                              u3571 09B2  
                            u3491 07CE                              u4267 11A0  
                            u3820 1F26                              u2780 1842  
                            u2940 22B6                              u2860 216A  
                            u3740 0D66                              u3660 0BE0  
                            u3580 09FC                              u3900 0E5E  
                            u4517 2D64                              u4437 2B9C  
                            u4357 28C8                              u3821 1F22  
                            u2781 183E                              u2941 22B2  
                            u2861 2166                              u3741 0D62  
                            u3661 0BDC                              u3581 09F8  
                            u4277 11E2                              u3901 0E5A  
                            u3830 1F80                              u2950 22E4  
                            u2870 21E0                              u2790 2062  
                            u3750 0D7C                              u3670 0C26  
                            u3590 0A42                              u3910 0E92  
                            u4607 2AC0                              u4527 2D8E  
                            u4447 2BFE                              u4367 28F4  
                            u3831 1F7C                              u2951 22E0  
                            u2871 21DC                              u2791 205E  
                            u3751 0D78                              u3671 0C22  
                            u3591 0A3E                              u4287 1224  
                            u3911 0E8E                              u3840 2018  
                            u3760 1D0C                              u2960 22FA  
                            u2880 2202                              u3680 0C3E  
                            u3920 0EA0                              u4617 2AEA  
                            u4537 2FC6                              u4457 2C28  
                            u4377 2920                              u3841 2014  
                            u3761 1D08                              u2961 22F6  
                            u2881 21FE                              u3681 0C3A  
                            u4297 1266                              u3921 0E9C  
                            u3850 2032                              u3770 1D64  
                            u2970 230E                              u2890 222C  
                            u3690 0C8C                              u3930 0ED4  
                            u4707 2842                              u4627 2B16  
                            u4547 302E                              u4467 2C52  
                            u4387 2982                              u3851 202E  
                            u3771 1D60                              u2971 230A  
                            u2891 2228                              u3691 0C88  
                            u3931 0ED0                              u3780 1DBE  
                            u2980 2328                              u3940 0EE2  
                            u4717 286C                              u4637 30B2  
                            u4557 305A                              u4477 2C80  
                            u4397 29AC                              u3781 1DBA  
                            u2981 2324                              u3941 0EDE  
                            u3790 1E18                              u2990 2370  
                            u3950 0F0A                              u4727 289A  
                            u4647 311A                              u4567 3084  
                            u4487 2CAC                              u3791 1E14  
                            u2991 236C                              u3951 0F06  
                            u3960 0F5A                              u4737 31E0  
                            u4657 3144                              u4577 2A06  
                            u4497 2CD8                              u3961 0F56  
                            u3970 0F82                              u3890 0E50  
                            u4667 316E                              u4587 2A32  
                            u3971 0F7E                              u3891 0E4C  
                            u3980 0FAC                              u4677 2788  
                            u4597 2A5E                              u3981 0FA8  
                            u3990 0FD6                              u4687 27B4  
                            u3991 0FD2                              u4697 27E0  
                            _main 0D8E        __end_of_reverseTurnRight90 3094  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 005F                              _stop 317E  
                            prodh 000FF4                              prodl 000FF3  
                            start 0028                   ___fldiv@new_exp 0020  
          __end_of_color_read_Red 34FE                   __end_of_HighISR 0028  
                    ___param_bank 000000                       _turnLeft135 2C62  
                     _turnRight90 29E8                     ___fltol@sign1 0059  
                 __end_of___fladd 1856                             ?_main 0001  
                 __end_of___fldiv 23E2                   __end_of___flmul 1C80  
                 __end_of___fltol 2EA4                             ?_stop 0019  
        __size_of_initDCmotorsPWM 0042                   __end_of___lwdiv 3306  
                           i2l520 0024                             _TMR0H 000FD4  
                           _TMR0L 000FD3      updateMovementCount@movements 0005  
      __end_of_I2C_2_Master_Start 3808                             _White 1C80  
      __end_of_I2C_2_Master_Write 37E8                   __end_of_forward 345E  
                           _isbtw 3218             __size_of_turnRight135 013C  
           __size_of_turnRight180 013E                   __end_of_reverse 340C  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
                           wtemp8 0060           __end_of_color_read_Blue 359E  
           _I2C_2_Master_RepStart 3808                   ?_color_read_Red 0005  
                 __initialization 375E                      __end_of_main 1396  
                    __end_of_stop 3218                            ??_main 005D  
                          ??_stop 001D                     __activetblptr 000000  
     __end_of_updateMovementCount 33BA                      _turnRight135 2B26  
                    _turnRight180 28AA                            ?_White 002B  
                    ?_setMotorPWM 000E                            ?_isbtw 000D  
                          _RC0PPS 000E62                            _RC4REG 000EE3  
                          _RE2PPS 000E74                            _RD5PPS 000E6F  
                          _RC7PPS 000E69                            _RD6PPS 000E70  
                          i2l2700 001A                            i2l2702 0022  
                          i2l2698 000A                         ??_HighISR 0001  
        __end_of_color_click_init 36E6                            _RX4PPS 000E15  
                          _TX4REG 000EE4                  __end_of___xxtofl 276A  
                   ??_Timer0_init 0001                     ?_read_colours 000C  
                          White@i 003D                            ___flge 2EA4  
     __end_of_determine_color_new 0D8E                         ??___fladd 0049  
                          ___wmul 3738                         ??___fldiv 0017  
                       ??___flmul 0030                         ??___fltol 0055  
                       ??___lwdiv 000B                            clear_0 3764  
                          clear_1 3770                            isa$std 000001  
                       ??_forward 001D                         ??_reverse 001D  
                          stop@mL 0019                            stop@mR 001B  
               ??_initDCmotorsPWM 0003                        ___flge@ff1 0001  
                      ___flge@ff2 0005                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A                      ___xxtofl@val 0001  
                      __accesstop 0060           __end_of__initialization 3776  
        __end_of_color_read_Clear 34AE          __end_of_color_read_Green 354E  
          ?_I2C_2_Master_RepStart 0001                     ___rparam_used 000001  
                      ___fltol@f1 0051                  ?_color_read_Blue 0005  
                  ??_read_colours 000E                   _Interrupts_init 37E8  
                  __pcstackCOMRAM 0001                     __end_of_White 2048  
                   __end_of_isbtw 3292               __end_of_Timer0_init 37DC  
        _determine_color_new$2628 0068                           ??_White 0035  
                      _calibrateB 35E8                        _calibrateW 359E  
                         ??_isbtw 0019                        __pbssBANK0 00B8  
                      __pbssBANK1 0100                 _color_writetoaddr 37A0  
                    _T2CLKCONbits 000FBF                      ?_turnLeft135 001D  
            reverseTurnRight90@mL 0025              reverseTurnRight90@mR 0027  
                         ?___flge 0001                ?_color_writetoaddr 0003  
                         ?___wmul 0001                _reverseTurnRight90 2FA8  
                    ?_turnRight90 001D               ??_color_writetoaddr 0004  
                       ?___xxtofl 0001               ?_reverseTurnRight90 0025  
                         _SP4BRGH 000EE6                           _SP4BRGL 000EE5  
                         _PWM6DCH 000FA3                           _PWM7DCH 000FA0  
                         _SSP2ADD 000ED6                           _SSP2BUF 000ED5  
            __size_of_setMotorPWM 01D4           __end_of_Interrupts_init 37F4  
          color_writetoaddr@value 0003                  ??_color_read_Red 0007  
                         _HighISR 0008         __end_of_color_writetoaddr 37C0  
              _I2C_2_Master_Start 37FE                        _initUSART4 3780  
            ??_reverseTurnRight90 0029                _I2C_2_Master_Write 37DC  
                         __Hparam 0000                           __Lparam 0000  
               color_read_Red@tmp 000A                       _Timer0_init 37C0  
                         White@mL 002B                           White@mR 002D  
                 __size_of___flge 0104                           ___fladd 1396  
                         ___fldiv 2048                           ___flmul 1856  
                         ___fltol 2D9E                   __size_of___wmul 0026  
             ?_I2C_2_Master_Start 0001                      turnLeft135@i 0023  
                         ___lwdiv 3292               ?_I2C_2_Master_Write 0001  
                    turnLeft90@mL 001D                      turnLeft90@mR 001F  
                         __pcinit 375E                           __ramtop 0E00  
                         __ptext0 0D8E                           __ptext1 3368  
                         __ptext2 3306                           __ptext3 345E  
                         __ptext4 3780                           __ptext5 362E  
                         __ptext6 002C                           __ptext7 3218  
                         __ptext8 2EA4                           __ptext9 25B6  
                       _T2CONbits 000FBD                           _forward 340C  
                      ??___xxtofl 0005                         _T2HLTbits 000FBE  
            __end_of_read_colours 3368                           _reverse 33BA  
                   _RxBufWriteCnt 00D1                       ?_calibrateB 000C  
                     ?_calibrateW 000C                           main@cal 0082  
            ??_I2C_2_Master_Start 0002              ??_I2C_2_Master_Write 0002  
updateMovementCount@movementArray 0003              end_of_initialization 3776  
              setMotorPWM@PWMduty 0017                 ?_color_click_init 0001  
                    turnRight90@i 0023                ??_color_click_init 0005  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                        _timerArray 00E6  
                 _initDCmotorsPWM 362E                         _PORTFbits 000F8E  
                     ___fladd@grs 0050                     ___xxtofl@sign 0009  
                       _TRISAbits 000F81                         _TRISCbits 000F83  
                       _TRISDbits 000F84                         _TRISEbits 000F85  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88                       ___fldiv@grs 0022  
                     ___fldiv@rem 001B          color_writetoaddr@address 0004  
         ??_I2C_2_Master_RepStart 0002      __size_of_updateMovementCount 0052  
     determine_color_new@RedRatio 006C                        main@check1 0088  
                      main@check2 008A                        main@check3 008C  
                      main@check4 0084                  ?_Interrupts_init 0001  
                     ___flmul@grs 0035                 ?_color_read_Clear 0005  
      __size_of_color_writetoaddr 0020                      _EUSART4RXbuf 00B8  
                    _EUSART4TXbuf 0100                 ?_color_read_Green 0005  
                     ?_initUSART4 0001                        main@motorL 00A6  
                      main@motorR 00AF                ??_color_read_Clear 0007  
              ??_color_read_Green 0007                        _turnLeft90 276A  
             __size_of_calibrateB 0046               __size_of_calibrateW 004A  
                  __end_of___flge 2FA8              __size_of_turnLeft135 013C  
                  __end_of___wmul 375E              __size_of_turnRight90 013E  
    __size_of_determine_color_new 0D62               color_read_Clear@tmp 000A  
             start_initialization 375E                     _TxBufWriteCnt 00CF  
             color_read_Green@tmp 000A           __end_of_initDCmotorsPWM 3670  
                        ??___flge 0009                          ??___wmul 0005  
        __size_of_color_read_Blue 0050             __size_of_read_colours 0062  
                       ___fladd@a 0045                         ___fladd@b 0041  
             reverseTurnLeft90@mL 0025               reverseTurnLeft90@mR 0027  
                       ___fldiv@a 0013                         ___fldiv@b 000F  
   determine_color_new@GreenRatio 006E                         ___flmul@a 002C  
                       ___flmul@b 0028               __size_of_initUSART4 0020  
                   __pcstackBANK0 0060                 __size_of___xxtofl 01B4  
                        ?_HighISR 0001                  ___lwdiv@dividend 0007  
                    ?_Timer0_init 0001                 _reverseTurnLeft90 3094  
                     ?_turnLeft90 001D                      _read_colours 3306  
                       __pintcode 0008                          ?___fladd 0041  
                        ?___fldiv 000F                          ?___flmul 0028  
                        ?___fltol 0051                ?_reverseTurnLeft90 0025  
                        ?___lwdiv 0007              I2C_2_Master_Read@ack 0003  
            I2C_2_Master_Read@tmp 0004                     ?_turnRight135 001D  
                   ?_turnRight180 001D               ??_reverseTurnLeft90 0029  
                        ?_forward 0019                 _I2C_2_Master_Idle 3710  
               _I2C_2_Master_Init 36E6                 _I2C_2_Master_Read 3670  
               _I2C_2_Master_Stop 37F4                      _RxBufReadCnt 00D0  
                        ?_reverse 0019                ?_I2C_2_Master_Idle 0001  
                  __size_of_White 03C8                ?_I2C_2_Master_Init 0001  
              ?_I2C_2_Master_Read 0001                     ??_setMotorPWM 0010  
                    ??_calibrateB 000E                      ??_calibrateW 000E  
              ?_I2C_2_Master_Stop 0001                  ___lwdiv@quotient 000B  
                     turnLeft90@i 0023          initDCmotorsPWM@PWMperiod 0001  
                  __size_of_isbtw 007A               ??_I2C_2_Master_Idle 0001  
             ??_I2C_2_Master_Init 0001               ??_I2C_2_Master_Read 0002  
                  ___wmul@product 0005                          _LATAbits 000F79  
             ??_I2C_2_Master_Stop 0002                          _LATCbits 000F7B  
                        _LATDbits 000F7C                          _LATEbits 000F7D  
                        _LATFbits 000F7E                          _LATGbits 000F7F  
                        _LATHbits 000F80                          _PIE0bits 000E29  
                        _PIE2bits 000E2B                          _PIE4bits 000E2D  
       __end_of_reverseTurnLeft90 317E       __size_of_reverseTurnRight90 00EC  
                        i2u212_40 001A                          i2u212_41 0016  
                        _PIR0bits 000E33                          _PIR4bits 000E37  
            determine_color_new@m 005B                         _movements 00CC  
                ?_initDCmotorsPWM 0001                          _SSP2CON2 000EDA  
                 White@timerArray 0033                          _SSP2STAT 000ED8  
             _updateMovementCount 3368                __end_of_calibrateB 362E  
              __end_of_calibrateW 35E8         __size_of_color_click_init 0034  
       __end_of_I2C_2_Master_Idle 3738         __end_of_I2C_2_Master_Init 3710  
       __end_of_I2C_2_Master_Read 36B2                 ___wmul@multiplier 0001  
                  ??_turnRight135 0021                    ??_turnRight180 0021  
                   _movementArray 00D2         __end_of_I2C_2_Master_Stop 37FE  
        determine_color_new@lumin 0074                      setMotorPWM@m 000E  
     I2C_2_Master_Write@data_byte 0002                         main@count 008E  
               ??_color_read_Blue 0007                      _TxBufReadCnt 00CE  
             __size_of_turnLeft90 0140       __size_of_I2C_2_Master_Start 000A  
            ?_updateMovementCount 0001       __size_of_I2C_2_Master_Write 000C  
  __size_of_I2C_2_Master_RepStart 000A     __end_of_I2C_2_Master_RepStart 3812  
              color_read_Blue@tmp 000A                       calibrateB@m 000C  
                     calibrateW@m 000C               __end_of_setMotorPWM 25B6  
                __size_of_HighISR 0020               _determine_color_new 002C  
                    ??_initUSART4 0001                          __Hrparam 0000  
   updateMovementCount@timerArray 0007                          __Lrparam 0000  
                       forward@mL 0019                         forward@mR 001B  
         __size_of_color_read_Red 0050                  __size_of___fladd 04C0  
                __size_of___fldiv 039A                  __size_of___flmul 042A  
                __size_of___fltol 0106                         isbtw@high 0015  
                __size_of___lwdiv 0074                    turnRight135@mL 001D  
                  turnRight135@mR 001F                    turnRight180@mL 001D  
                  turnRight180@mR 001F         __size_of_color_read_Clear 0050  
                   turnLeft135@mL 001D                     turnLeft135@mR 001F  
       __size_of_color_read_Green 0050                        _ANSELDbits 000EA7  
                      _ANSELFbits 000EB4              ?_determine_color_new 005B  
                        ___xxtofl 25B6                        _T0CON0bits 000FD5  
                      _T0CON1bits 000FD6                  __size_of_forward 0052  
                 ___lwdiv@divisor 0009                __end_of_initUSART4 37A0  
                 ___lwdiv@counter 000D                          __ptext10 2D9E  
                        __ptext11 1856                          __ptext20 34FE  
                        __ptext12 2048                          __ptext21 354E  
                        __ptext13 1396                          __ptext30 2B26  
                        __ptext22 37DC                          __ptext14 36B2  
                        __ptext31 2C62                          __ptext23 37F4  
                        __ptext15 37A0                          __ptext40 3738  
                        __ptext32 2FA8                          __ptext24 37FE  
                        __ptext16 36E6                          __ptext41 3292  
                        __ptext33 29E8                          __ptext25 3808  
                        __ptext17 359E                          __ptext42 37C0  
                        __ptext34 3094                          __ptext26 3670  
                        __ptext18 35E8                          __ptext43 37E8  
                        __ptext35 276A                          __ptext27 3710  
                        __ptext19 34AE                          __ptext36 317E  
                        __ptext28 1C80                          __ptext37 33BA  
                        __ptext29 28AA                          __ptext38 340C  
                        __ptext39 23E2                  __size_of_reverse 0052  
           ??_updateMovementCount 0009                      _SSP2CON1bits 000ED9  
                    _SSP2CON2bits 000EDA                White@movementArray 002F  
                   __size_of_main 0608                     __size_of_stop 009A  
      __size_of_reverseTurnLeft90 00EA                         reverse@mL 0019  
                       reverse@mR 001B                   main@reset_timer 0086  
                   ??_turnLeft135 0021                    White@movements 0031  
                        isa$xinst 000000          __size_of_Interrupts_init 000C  
                      _RC4STAbits 000EE7           determine_color_new@RelB 007E  
         determine_color_new@RelG 007A           determine_color_new@RelR 0076  
                        int$flags 005F              __size_of_Timer0_init 001C  
                   ??_turnRight90 0021                          main@test 0092  
      __size_of_I2C_2_Master_Idle 0028        __size_of_I2C_2_Master_Init 002A  
      __size_of_I2C_2_Master_Read 0042             ??_determine_color_new 0060  
      __size_of_I2C_2_Master_Stop 000A                        _INTCONbits 000FF2  
                     _setMotorPWM 23E2                          isbtw@low 0011  
                        isbtw@num 000D                       _PWM6CONbits 000FA4  
                   turnRight135@i 0023                     turnRight180@i 0023  
                     _PWM7CONbits 000FA1                          intlevel2 0000  
                   turnRight90@mL 001D                     turnRight90@mR 001F  
               White@tempTimerVal 003B   updateMovementCount@tempTimerVal 000B  
            __end_of_turnRight135 2C62              __end_of_turnRight180 29E8  
 updateMovementCount@movementCode 0001               main@detected_colour 0090  
                    ??_turnLeft90 0021            determine_color_new@out 0072  
                   read_colours@m 000C                  _color_click_init 36B2  
             __end_of_turnLeft135 2D9E                        _SSP2DATPPS 000E1D  
                      _SSP2CLKPPS 000E1C               __end_of_turnRight90 2B26  
                   ___fladd@signs 004D                __end_of_turnLeft90 28AA  
                      _TX4STAbits 000EE8                      ___fladd@aexp 004E  
                    ___fladd@bexp 004F      determine_color_new@BlueRatio 0070  
