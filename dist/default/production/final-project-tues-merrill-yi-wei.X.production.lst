

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 21:50:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 05/05/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     _PIE0bits	set	3625
    93  0000                     _PIE2bits	set	3627
    94  0000                     _PIE4bits	set	3629
    95  0000                     _TX4REG	set	3812
    96  0000                     _RC4REG	set	3811
    97  0000                     _PIR4bits	set	3639
    98  0000                     _RC4STAbits	set	3815
    99  0000                     _SP4BRGH	set	3814
   100  0000                     _SP4BRGL	set	3813
   101  0000                     _TX4STAbits	set	3816
   102  0000                     _BAUD4CONbits	set	3817
   103  0000                     _RX4PPS	set	3605
   104  0000                     _RC0PPS	set	3682
   105  0000                     _ANSELFbits	set	3764
   106  0000                     _RC7PPS	set	3689
   107  0000                     _RE2PPS	set	3700
   108  0000                     _SSP2BUF	set	3797
   109  0000                     _SSP2CON2bits	set	3802
   110  0000                     _SSP2CON2	set	3802
   111  0000                     _SSP2STAT	set	3800
   112  0000                     _RD6PPS	set	3696
   113  0000                     _RD5PPS	set	3695
   114  0000                     _SSP2CLKPPS	set	3612
   115  0000                     _SSP2DATPPS	set	3613
   116  0000                     _ANSELDbits	set	3751
   117  0000                     _SSP2ADD	set	3798
   118  0000                     _SSP2CON1bits	set	3801
   119  0000                     _T0CON0bits	set	4053
   120  0000                     _T0CON1bits	set	4054
   121  0000                     _INTCONbits	set	4082
   122  0000                     _PORTFbits	set	3982
   123  0000                     _LATHbits	set	3968
   124  0000                     _TRISHbits	set	3976
   125  0000                     _LATDbits	set	3964
   126  0000                     _LATFbits	set	3966
   127  0000                     _TRISAbits	set	3969
   128  0000                     _LATAbits	set	3961
   129  0000                     _TRISFbits	set	3974
   130  0000                     _PWM7CONbits	set	4001
   131  0000                     _PWM6CONbits	set	4004
   132  0000                     _T2PR	set	4028
   133  0000                     _T2CLKCONbits	set	4031
   134  0000                     _T2HLTbits	set	4030
   135  0000                     _T2CONbits	set	4029
   136  0000                     _LATGbits	set	3967
   137  0000                     _LATCbits	set	3963
   138  0000                     _LATEbits	set	3965
   139  0000                     _TRISGbits	set	3975
   140  0000                     _TRISCbits	set	3971
   141  0000                     _TRISEbits	set	3973
   142  0000                     _TRISDbits	set	3972
   143  0000                     _TMR0L	set	4051
   144  0000                     _TMR0H	set	4052
   145  0000                     _LATG	set	3967
   146  0000                     _LATE	set	3965
   147  0000                     _PWM7DCH	set	4000
   148  0000                     _PWM6DCH	set	4003
   149                           
   150                           ; #config settings
   151                           
   152                           	psect	cinit
   153  01CD7C                     __pcinit:
   154                           	callstack 0
   155  01CD7C                     start_initialization:
   156                           	callstack 0
   157  01CD7C                     __initialization:
   158                           	callstack 0
   159                           
   160                           ; Clear objects allocated to BANK1 (180 bytes)
   161  01CD7C  EE01  F000         	lfsr	0,__pbssBANK1
   162  01CD80  0EB4               	movlw	180
   163  01CD82                     clear_0:
   164  01CD82  6AEE               	clrf	postinc0,c
   165  01CD84  06E8               	decf	wreg,f,c
   166  01CD86  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BANK0 (27 bytes)
   169  01CD88  EE00  F0B6         	lfsr	0,__pbssBANK0
   170  01CD8C  0E1B               	movlw	27
   171  01CD8E                     clear_1:
   172  01CD8E  6AEE               	clrf	postinc0,c
   173  01CD90  06E8               	decf	wreg,f,c
   174  01CD92  E1FD               	bnz	clear_1
   175                           
   176                           ; Clear objects allocated to COMRAM (1 bytes)
   177  01CD94  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   178  01CD96                     end_of_initialization:
   179                           	callstack 0
   180  01CD96                     __end_of__initialization:
   181                           	callstack 0
   182  01CD96  0100               	movlb	0
   183  01CD98  EFA7  F0F6         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186  00005F                     __pbssCOMRAM:
   187                           	callstack 0
   188  00005F                     _TxBufWriteCnt:
   189                           	callstack 0
   190  00005F                     	ds	1
   191                           
   192                           	psect	bssBANK0
   193  0000B6                     __pbssBANK0:
   194                           	callstack 0
   195  0000B6                     _EUSART4RXbuf:
   196                           	callstack 0
   197  0000B6                     	ds	20
   198  0000CA                     _movements@main$F1441:
   199                           	callstack 0
   200  0000CA                     	ds	2
   201  0000CC                     _movements:
   202                           	callstack 0
   203  0000CC                     	ds	2
   204  0000CE                     _TxBufReadCnt:
   205                           	callstack 0
   206  0000CE                     	ds	1
   207  0000CF                     _RxBufReadCnt:
   208                           	callstack 0
   209  0000CF                     	ds	1
   210  0000D0                     _RxBufWriteCnt:
   211                           	callstack 0
   212  0000D0                     	ds	1
   213                           
   214                           	psect	bssBANK1
   215  000100                     __pbssBANK1:
   216                           	callstack 0
   217  000100                     _movementArray:
   218                           	callstack 0
   219  000100                     	ds	60
   220  00013C                     _timerArray:
   221                           	callstack 0
   222  00013C                     	ds	60
   223  000178                     _EUSART4TXbuf:
   224                           	callstack 0
   225  000178                     	ds	60
   226                           
   227                           	psect	cstackBANK0
   228  000060                     __pcstackBANK0:
   229                           	callstack 0
   230  000060                     ??_determine_color_new:
   231                           
   232                           ; 1 bytes @ 0x0
   233  000060                     	ds	8
   234  000068                     _determine_color_new$2590:
   235                           	callstack 0
   236                           
   237                           ; 4 bytes @ 0x8
   238  000068                     	ds	4
   239  00006C                     determine_color_new@RedRatio:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xC
   243  00006C                     	ds	2
   244  00006E                     determine_color_new@GreenRatio:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xE
   248  00006E                     	ds	2
   249  000070                     determine_color_new@BlueRatio:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x10
   253  000070                     	ds	2
   254  000072                     determine_color_new@out:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x12
   258  000072                     	ds	2
   259  000074                     determine_color_new@lumin:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x14
   263  000074                     	ds	2
   264  000076                     determine_color_new@RelR:
   265                           	callstack 0
   266                           
   267                           ; 4 bytes @ 0x16
   268  000076                     	ds	4
   269  00007A                     determine_color_new@RelG:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x1A
   273  00007A                     	ds	4
   274  00007E                     determine_color_new@RelB:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0x1E
   278  00007E                     	ds	4
   279  000082                     main@cal:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x22
   283  000082                     	ds	2
   284  000084                     main@check4:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x24
   288  000084                     	ds	2
   289  000086                     main@check1:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x26
   293  000086                     	ds	2
   294  000088                     main@check2:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x28
   298  000088                     	ds	2
   299  00008A                     main@check3:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x2A
   303  00008A                     	ds	2
   304  00008C                     main@count:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x2C
   308  00008C                     	ds	2
   309  00008E                     main@detected_colour:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x2E
   313  00008E                     	ds	2
   314  000090                     main@test:
   315                           	callstack 0
   316                           
   317                           ; 20 bytes @ 0x30
   318  000090                     	ds	20
   319  0000A4                     main@motorL:
   320                           	callstack 0
   321                           
   322                           ; 9 bytes @ 0x44
   323  0000A4                     	ds	9
   324  0000AD                     main@motorR:
   325                           	callstack 0
   326                           
   327                           ; 9 bytes @ 0x4D
   328  0000AD                     	ds	9
   329                           
   330                           	psect	cstackCOMRAM
   331  000001                     __pcstackCOMRAM:
   332                           	callstack 0
   333  000001                     ??_I2C_2_Master_Idle:
   334  000001                     ?___wmul:
   335                           	callstack 0
   336  000001                     ?___xxtofl:
   337                           	callstack 0
   338  000001                     initDCmotorsPWM@PWMperiod:
   339                           	callstack 0
   340  000001                     ___wmul@multiplier:
   341                           	callstack 0
   342  000001                     ___flge@ff1:
   343                           	callstack 0
   344  000001                     ___xxtofl@val:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0x0
   348  000001                     	ds	1
   349  000002                     ??_I2C_2_Master_Read:
   350  000002                     I2C_2_Master_Write@data_byte:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x1
   354  000002                     	ds	1
   355  000003                     color_writetoaddr@value:
   356                           	callstack 0
   357  000003                     I2C_2_Master_Read@ack:
   358                           	callstack 0
   359  000003                     ___wmul@multiplicand:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x2
   363  000003                     	ds	1
   364  000004                     color_writetoaddr@address:
   365                           	callstack 0
   366  000004                     I2C_2_Master_Read@tmp:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x3
   370  000004                     	ds	1
   371  000005                     ??_color_click_init:
   372  000005                     ??___xxtofl:
   373  000005                     ?_color_read_Clear:
   374                           	callstack 0
   375  000005                     ?_color_read_Red:
   376                           	callstack 0
   377  000005                     ?_color_read_Green:
   378                           	callstack 0
   379  000005                     ?_color_read_Blue:
   380                           	callstack 0
   381  000005                     ___wmul@product:
   382                           	callstack 0
   383  000005                     ___flge@ff2:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x4
   387  000005                     	ds	2
   388  000007                     ??_color_read_Clear:
   389  000007                     ??_color_read_Red:
   390  000007                     ??_color_read_Green:
   391  000007                     ??_color_read_Blue:
   392  000007                     ?___lwdiv:
   393                           	callstack 0
   394  000007                     ___lwdiv@dividend:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x6
   398  000007                     	ds	2
   399  000009                     ??___flge:
   400  000009                     ___xxtofl@sign:
   401                           	callstack 0
   402  000009                     ___lwdiv@divisor:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     ___xxtofl@exp:
   408                           	callstack 0
   409  00000A                     color_read_Clear@tmp:
   410                           	callstack 0
   411  00000A                     color_read_Red@tmp:
   412                           	callstack 0
   413  00000A                     color_read_Green@tmp:
   414                           	callstack 0
   415  00000A                     color_read_Blue@tmp:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x9
   419  00000A                     	ds	1
   420  00000B                     ___lwdiv@quotient:
   421                           	callstack 0
   422  00000B                     ___xxtofl@arg:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0xA
   426  00000B                     	ds	1
   427  00000C                     read_colours@m:
   428                           	callstack 0
   429  00000C                     calibrateW@m:
   430                           	callstack 0
   431  00000C                     calibrateB@m:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0xB
   435  00000C                     	ds	1
   436  00000D                     ?_isbtw:
   437                           	callstack 0
   438  00000D                     ___lwdiv@counter:
   439                           	callstack 0
   440  00000D                     isbtw@num:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0xC
   444  00000D                     	ds	1
   445  00000E                     setMotorPWM@m:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0xD
   449  00000E                     	ds	1
   450  00000F                     ?___fldiv:
   451                           	callstack 0
   452  00000F                     ___fldiv@b:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xE
   456  00000F                     	ds	1
   457  000010                     ??_setMotorPWM:
   458                           
   459                           ; 1 bytes @ 0xF
   460  000010                     	ds	1
   461  000011                     isbtw@low:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x10
   465  000011                     	ds	2
   466  000013                     ___fldiv@a:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x12
   470  000013                     	ds	2
   471  000015                     isbtw@high:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x14
   475  000015                     	ds	2
   476  000017                     ??___fldiv:
   477  000017                     setMotorPWM@PWMduty:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x16
   481  000017                     	ds	2
   482  000019                     stop@mL:
   483                           	callstack 0
   484  000019                     reverse@mL:
   485                           	callstack 0
   486  000019                     forward@mL:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  000019                     	ds	2
   491  00001B                     stop@mR:
   492                           	callstack 0
   493  00001B                     reverse@mR:
   494                           	callstack 0
   495  00001B                     forward@mR:
   496                           	callstack 0
   497  00001B                     ___fldiv@rem:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x1A
   501  00001B                     	ds	2
   502  00001D                     turnLeft90@mL:
   503                           	callstack 0
   504  00001D                     turnLeft135@mL:
   505                           	callstack 0
   506  00001D                     turnRight90@mL:
   507                           	callstack 0
   508  00001D                     turnRight135@mL:
   509                           	callstack 0
   510  00001D                     turnRight180@mL:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x1C
   514  00001D                     	ds	2
   515  00001F                     ___fldiv@sign:
   516                           	callstack 0
   517  00001F                     turnLeft90@mR:
   518                           	callstack 0
   519  00001F                     turnLeft135@mR:
   520                           	callstack 0
   521  00001F                     turnRight90@mR:
   522                           	callstack 0
   523  00001F                     turnRight135@mR:
   524                           	callstack 0
   525  00001F                     turnRight180@mR:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1E
   529  00001F                     	ds	1
   530  000020                     ___fldiv@new_exp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x1F
   534  000020                     	ds	1
   535  000021                     ??_turnRight180:
   536  000021                     ??_turnLeft90:
   537  000021                     ??_turnRight90:
   538  000021                     ??_turnLeft135:
   539  000021                     ??_turnRight135:
   540                           
   541                           ; 1 bytes @ 0x20
   542  000021                     	ds	1
   543  000022                     ___fldiv@grs:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x21
   547  000022                     	ds	1
   548  000023                     turnLeft90@i:
   549                           	callstack 0
   550  000023                     turnLeft135@i:
   551                           	callstack 0
   552  000023                     turnRight90@i:
   553                           	callstack 0
   554  000023                     turnRight135@i:
   555                           	callstack 0
   556  000023                     turnRight180@i:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x22
   560  000023                     	ds	2
   561  000025                     reverseTurnRight90@mL:
   562                           	callstack 0
   563  000025                     reverseTurnLeft90@mL:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x24
   567  000025                     	ds	1
   568  000026                     ___fldiv@bexp:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x25
   572  000026                     	ds	1
   573  000027                     ___fldiv@aexp:
   574                           	callstack 0
   575  000027                     reverseTurnRight90@mR:
   576                           	callstack 0
   577  000027                     reverseTurnLeft90@mR:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x26
   581  000027                     	ds	1
   582  000028                     ?___flmul:
   583                           	callstack 0
   584  000028                     ___flmul@b:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x27
   588  000028                     	ds	1
   589  000029                     ??_reverseTurnLeft90:
   590  000029                     ??_reverseTurnRight90:
   591                           
   592                           ; 1 bytes @ 0x28
   593  000029                     	ds	3
   594  00002C                     ___flmul@a:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x2B
   598  00002C                     	ds	4
   599  000030                     ??___flmul:
   600                           
   601                           ; 1 bytes @ 0x2F
   602  000030                     	ds	4
   603  000034                     ___flmul@sign:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x33
   607  000034                     	ds	1
   608  000035                     ___flmul@grs:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x34
   612  000035                     	ds	4
   613  000039                     ___flmul@aexp:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x38
   617  000039                     	ds	1
   618  00003A                     ___flmul@bexp:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x39
   622  00003A                     	ds	1
   623  00003B                     ___flmul@prod:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x3A
   627  00003B                     	ds	4
   628  00003F                     ___flmul@temp:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x3E
   632  00003F                     	ds	2
   633  000041                     ?___fladd:
   634                           	callstack 0
   635  000041                     ___fladd@b:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x40
   639  000041                     	ds	4
   640  000045                     ___fladd@a:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x44
   644  000045                     	ds	4
   645  000049                     ??___fladd:
   646                           
   647                           ; 1 bytes @ 0x48
   648  000049                     	ds	4
   649  00004D                     ___fladd@signs:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x4C
   653  00004D                     	ds	1
   654  00004E                     ___fladd@aexp:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x4D
   658  00004E                     	ds	1
   659  00004F                     ___fladd@bexp:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x4E
   663  00004F                     	ds	1
   664  000050                     ___fladd@grs:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x4F
   668  000050                     	ds	1
   669  000051                     ?___fltol:
   670                           	callstack 0
   671  000051                     ___fltol@f1:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x50
   675  000051                     	ds	4
   676  000055                     ??___fltol:
   677                           
   678                           ; 1 bytes @ 0x54
   679  000055                     	ds	4
   680  000059                     ___fltol@sign1:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x58
   684  000059                     	ds	1
   685  00005A                     ___fltol@exp1:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x59
   689  00005A                     	ds	1
   690  00005B                     ?_determine_color_new:
   691                           	callstack 0
   692  00005B                     determine_color_new@m:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x5A
   696  00005B                     	ds	2
   697  00005D                     ??_main:
   698                           
   699                           ; 1 bytes @ 0x5C
   700  00005D                     	ds	2
   701                           
   702 ;;
   703 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   704 ;;
   705 ;; *************** function _main *****************
   706 ;; Defined at:
   707 ;;		line 25 in file "main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  detected_col    2   46[BANK0 ] unsigned int 
   712 ;;  test           20   48[BANK0 ] struct RGB_val
   713 ;;  motorR          9   77[BANK0 ] struct DC_motor
   714 ;;  motorL          9   68[BANK0 ] struct DC_motor
   715 ;;  count           2   44[BANK0 ] unsigned int 
   716 ;;  check3          2   42[BANK0 ] unsigned int 
   717 ;;  check2          2   40[BANK0 ] unsigned int 
   718 ;;  check1          2   38[BANK0 ] unsigned int 
   719 ;;  PWMcycle        2    0        unsigned int 
   720 ;;  check4          2   36[BANK0 ] unsigned int 
   721 ;;  cal             2   34[BANK0 ] unsigned int 
   722 ;;  BlueRatio       2    0        unsigned int 
   723 ;;  GreenRatio      2    0        unsigned int 
   724 ;;  RedRatio        2    0        unsigned int 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;      Locals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   737 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;Total ram usage:       54 bytes
   739 ;; Hardware stack levels required when called: 5
   740 ;; This function calls:
   741 ;;		_Interrupts_init
   742 ;;		_Timer0_init
   743 ;;		_calibrateB
   744 ;;		_calibrateW
   745 ;;		_color_click_init
   746 ;;		_determine_color_new
   747 ;;		_forward
   748 ;;		_initDCmotorsPWM
   749 ;;		_initUSART4
   750 ;;		_read_colours
   751 ;;		_reverseTurnLeft90
   752 ;;		_reverseTurnRight90
   753 ;;		_stop
   754 ;;		_turnLeft135
   755 ;;		_turnLeft90
   756 ;;		_turnRight135
   757 ;;		_turnRight180
   758 ;;		_turnRight90
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text0
   765  01ED4E                     __ptext0:
   766                           	callstack 0
   767  01ED4E                     _main:
   768                           	callstack 26
   769  01ED4E                     
   770                           ;main.c: 27:     initDCmotorsPWM(99);
   771  01ED4E  0E00               	movlw	0
   772  01ED50  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   773  01ED52  0E63               	movlw	99
   774  01ED54  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   775  01ED56  EC45  F0E7         	call	_initDCmotorsPWM	;wreg free
   776  01ED5A                     
   777                           ;main.c: 28:     color_click_init();
   778  01ED5A  EC0A  F0E7         	call	_color_click_init	;wreg free
   779  01ED5E                     
   780                           ;main.c: 29:     initUSART4();
   781  01ED5E  ECAE  F0E6         	call	_initUSART4	;wreg free
   782  01ED62                     
   783                           ;main.c: 30:     Timer0_init();
   784  01ED62  EC90  F0E6         	call	_Timer0_init	;wreg free
   785  01ED66                     
   786                           ;main.c: 31:     _delay((unsigned long)((300)*(64000000/4000.0)));
   787  01ED66  0E19               	movlw	25
   788  01ED68  6E5E               	movwf	(??_main+1)^0,c
   789  01ED6A  0E5A               	movlw	90
   790  01ED6C  6E5D               	movwf	??_main^0,c
   791  01ED6E  0EB2               	movlw	178
   792  01ED70                     u4117:
   793  01ED70  2EE8               	decfsz	wreg,f,c
   794  01ED72  D7FE               	bra	u4117
   795  01ED74  2E5D               	decfsz	??_main^0,f,c
   796  01ED76  D7FC               	bra	u4117
   797  01ED78  2E5E               	decfsz	(??_main+1)^0,f,c
   798  01ED7A  D7FA               	bra	u4117
   799  01ED7C                     
   800                           ;main.c: 32:     Interrupts_init();
   801  01ED7C  EC84  F0E6         	call	_Interrupts_init	;wreg free
   802  01ED80                     
   803                           ;main.c: 35:     TRISFbits.TRISF2=1;
   804  01ED80  8486               	bsf	134,2,c	;volatile
   805  01ED82                     
   806                           ;main.c: 36:     ANSELFbits.ANSELF2=0;
   807  01ED82  010E               	movlb	14	; () banked
   808  01ED84  95B4               	bcf	180,2,b	;volatile
   809  01ED86                     
   810                           ; BSR set to: 14
   811                           ;main.c: 37:     TRISFbits.TRISF3=1;
   812  01ED86  8686               	bsf	134,3,c	;volatile
   813  01ED88                     
   814                           ; BSR set to: 14
   815                           ;main.c: 38:     ANSELFbits.ANSELF3=0;
   816  01ED88  97B4               	bcf	180,3,b	;volatile
   817  01ED8A                     
   818                           ; BSR set to: 14
   819                           ;main.c: 42:     motorL.power=0;
   820  01ED8A  0E00               	movlw	0
   821  01ED8C  0100               	movlb	0	; () banked
   822  01ED8E  6FA4               	movwf	main@motorL& (0+255),b
   823  01ED90                     
   824                           ; BSR set to: 0
   825                           ;main.c: 43:     motorL.direction=1;
   826  01ED90  0E01               	movlw	1
   827  01ED92  6FA5               	movwf	(main@motorL+1)& (0+255),b
   828  01ED94                     
   829                           ; BSR set to: 0
   830                           ;main.c: 44:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   831  01ED94  0EA3               	movlw	163
   832  01ED96  6FA6               	movwf	(main@motorL+2)& (0+255),b
   833  01ED98  0E0F               	movlw	15
   834  01ED9A  6FA7               	movwf	(main@motorL+3)& (0+255),b
   835  01ED9C                     
   836                           ; BSR set to: 0
   837                           ;main.c: 45:     motorL.dir_LAT=(unsigned char *)(&LATE);
   838  01ED9C  0E7D               	movlw	125
   839  01ED9E  6FA8               	movwf	(main@motorL+4)& (0+255),b
   840  01EDA0  0E0F               	movlw	15
   841  01EDA2  6FA9               	movwf	(main@motorL+5)& (0+255),b
   842  01EDA4                     
   843                           ; BSR set to: 0
   844                           ;main.c: 46:     motorL.dir_pin=4;
   845  01EDA4  0E04               	movlw	4
   846  01EDA6  6FAA               	movwf	(main@motorL+6)& (0+255),b
   847  01EDA8                     
   848                           ; BSR set to: 0
   849                           ;main.c: 47:     motorL.PWMperiod=PWMcycle;
   850  01EDA8  0E00               	movlw	0
   851  01EDAA  6FAC               	movwf	(main@motorL+8)& (0+255),b
   852  01EDAC  0E63               	movlw	99
   853  01EDAE  6FAB               	movwf	(main@motorL+7)& (0+255),b
   854  01EDB0                     
   855                           ; BSR set to: 0
   856                           ;main.c: 49:     motorR.power=0;
   857  01EDB0  0E00               	movlw	0
   858  01EDB2  6FAD               	movwf	main@motorR& (0+255),b
   859  01EDB4                     
   860                           ; BSR set to: 0
   861                           ;main.c: 50:     motorR.direction=1;
   862  01EDB4  0E01               	movlw	1
   863  01EDB6  6FAE               	movwf	(main@motorR+1)& (0+255),b
   864  01EDB8                     
   865                           ; BSR set to: 0
   866                           ;main.c: 51:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   867  01EDB8  0EA0               	movlw	160
   868  01EDBA  6FAF               	movwf	(main@motorR+2)& (0+255),b
   869  01EDBC  0E0F               	movlw	15
   870  01EDBE  6FB0               	movwf	(main@motorR+3)& (0+255),b
   871  01EDC0                     
   872                           ; BSR set to: 0
   873                           ;main.c: 52:     motorR.dir_LAT=(unsigned char *)(&LATG);
   874  01EDC0  0E7F               	movlw	127
   875  01EDC2  6FB1               	movwf	(main@motorR+4)& (0+255),b
   876  01EDC4  0E0F               	movlw	15
   877  01EDC6  6FB2               	movwf	(main@motorR+5)& (0+255),b
   878  01EDC8                     
   879                           ; BSR set to: 0
   880                           ;main.c: 53:     motorR.dir_pin=6;
   881  01EDC8  0E06               	movlw	6
   882  01EDCA  6FB3               	movwf	(main@motorR+6)& (0+255),b
   883  01EDCC                     
   884                           ; BSR set to: 0
   885                           ;main.c: 54:     motorR.PWMperiod=PWMcycle;
   886  01EDCC  0E00               	movlw	0
   887  01EDCE  6FB5               	movwf	(main@motorR+8)& (0+255),b
   888  01EDD0  0E63               	movlw	99
   889  01EDD2  6FB4               	movwf	(main@motorR+7)& (0+255),b
   890  01EDD4                     
   891                           ; BSR set to: 0
   892                           ;main.c: 57:     struct RGB_val test;;main.c: 58:     test.C = 0;
   893  01EDD4  0E00               	movlw	0
   894  01EDD6  6F9D               	movwf	(main@test+13)& (0+255),b
   895  01EDD8  0E00               	movlw	0
   896  01EDDA  6F9C               	movwf	(main@test+12)& (0+255),b
   897  01EDDC                     
   898                           ; BSR set to: 0
   899                           ;main.c: 59:     test.R = 0;
   900  01EDDC  0E00               	movlw	0
   901  01EDDE  6F9F               	movwf	(main@test+15)& (0+255),b
   902  01EDE0  0E00               	movlw	0
   903  01EDE2  6F9E               	movwf	(main@test+14)& (0+255),b
   904  01EDE4                     
   905                           ; BSR set to: 0
   906                           ;main.c: 60:     test.G = 0;
   907  01EDE4  0E00               	movlw	0
   908  01EDE6  6FA1               	movwf	(main@test+17)& (0+255),b
   909  01EDE8  0E00               	movlw	0
   910  01EDEA  6FA0               	movwf	(main@test+16)& (0+255),b
   911  01EDEC                     
   912                           ; BSR set to: 0
   913                           ;main.c: 61:     test.B = 0;
   914  01EDEC  0E00               	movlw	0
   915  01EDEE  6FA3               	movwf	(main@test+19)& (0+255),b
   916  01EDF0  0E00               	movlw	0
   917  01EDF2  6FA2               	movwf	(main@test+18)& (0+255),b
   918  01EDF4                     
   919                           ; BSR set to: 0
   920                           ;main.c: 64:     LATGbits.LATG1=0;
   921  01EDF4  927F               	bcf	127,1,c	;volatile
   922  01EDF6                     
   923                           ; BSR set to: 0
   924                           ;main.c: 65:     TRISGbits.TRISG1=0;
   925  01EDF6  9287               	bcf	135,1,c	;volatile
   926  01EDF8                     
   927                           ; BSR set to: 0
   928                           ;main.c: 66:     LATAbits.LATA4=0;
   929  01EDF8  9879               	bcf	121,4,c	;volatile
   930  01EDFA                     
   931                           ; BSR set to: 0
   932                           ;main.c: 67:     TRISAbits.TRISA4=0;
   933  01EDFA  9881               	bcf	129,4,c	;volatile
   934  01EDFC                     
   935                           ; BSR set to: 0
   936                           ;main.c: 68:     LATFbits.LATF7=0;
   937  01EDFC  9E7E               	bcf	126,7,c	;volatile
   938  01EDFE                     
   939                           ; BSR set to: 0
   940                           ;main.c: 69:     TRISFbits.TRISF7=0;
   941  01EDFE  9E86               	bcf	134,7,c	;volatile
   942  01EE00                     
   943                           ; BSR set to: 0
   944                           ;main.c: 72:     TRISDbits.TRISD7 = 0;
   945  01EE00  9E84               	bcf	132,7,c	;volatile
   946  01EE02                     
   947                           ; BSR set to: 0
   948                           ;main.c: 73:     LATDbits.LATD7 = 0;
   949  01EE02  9E7C               	bcf	124,7,c	;volatile
   950  01EE04                     
   951                           ; BSR set to: 0
   952                           ;main.c: 74:     TRISHbits.TRISH3 = 0;
   953  01EE04  9688               	bcf	136,3,c	;volatile
   954  01EE06                     
   955                           ; BSR set to: 0
   956                           ;main.c: 75:     LATHbits.LATH3 = 0;
   957  01EE06  9680               	bcf	128,3,c	;volatile
   958  01EE08                     
   959                           ; BSR set to: 0
   960                           ;main.c: 82:     unsigned int RedRatio, GreenRatio, BlueRatio;;main.c: 85:     LATGbits.
      +                          LATG1=1;
   961  01EE08  827F               	bsf	127,1,c	;volatile
   962  01EE0A                     
   963                           ; BSR set to: 0
   964                           ;main.c: 86:     LATAbits.LATA4=1;
   965  01EE0A  8879               	bsf	121,4,c	;volatile
   966  01EE0C                     
   967                           ; BSR set to: 0
   968                           ;main.c: 87:     LATFbits.LATF7=1;
   969  01EE0C  8E7E               	bsf	126,7,c	;volatile
   970  01EE0E                     
   971                           ; BSR set to: 0
   972                           ;main.c: 90:     unsigned int cal = 0;
   973  01EE0E  0E00               	movlw	0
   974  01EE10  6F83               	movwf	(main@cal+1)& (0+255),b
   975  01EE12  0E00               	movlw	0
   976  01EE14  6F82               	movwf	main@cal& (0+255),b
   977                           
   978                           ;main.c: 91:     while(cal==0){
   979  01EE16  EF64  F0F7         	goto	l4014
   980  01EE1A                     l363:
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 92:         LATDbits.LATD7 = 1;
   984  01EE1A  8E7C               	bsf	124,7,c	;volatile
   985  01EE1C                     l364:
   986  01EE1C  B48E               	btfsc	142,2,c	;volatile
   987  01EE1E  EF13  F0F7         	goto	u3821
   988  01EE22  EF15  F0F7         	goto	u3820
   989  01EE26                     u3821:
   990  01EE26  EF0E  F0F7         	goto	l364
   991  01EE2A                     u3820:
   992  01EE2A                     
   993                           ;main.c: 94:         if (!PORTFbits.RF2){
   994  01EE2A  B48E               	btfsc	142,2,c	;volatile
   995  01EE2C  EF1A  F0F7         	goto	u3831
   996  01EE30  EF1C  F0F7         	goto	u3830
   997  01EE34                     u3831:
   998  01EE34  EF2E  F0F7         	goto	l4000
   999  01EE38                     u3830:
  1000  01EE38                     
  1001                           ;main.c: 95:             LATDbits.LATD7 = 0;
  1002  01EE38  9E7C               	bcf	124,7,c	;volatile
  1003  01EE3A                     
  1004                           ;main.c: 96:             calibrateW(&test);
  1005  01EE3A  0E90               	movlw	low main@test
  1006  01EE3C  6E0C               	movwf	calibrateW@m^0,c
  1007  01EE3E  0E00               	movlw	high main@test
  1008  01EE40  6E0D               	movwf	(calibrateW@m+1)^0,c
  1009  01EE42  EC89  F0E7         	call	_calibrateW	;wreg free
  1010  01EE46                     
  1011                           ;main.c: 97:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1012  01EE46  0E19               	movlw	25
  1013  01EE48  6E5E               	movwf	(??_main+1)^0,c
  1014  01EE4A  0E5A               	movlw	90
  1015  01EE4C  6E5D               	movwf	??_main^0,c
  1016  01EE4E  0EB2               	movlw	178
  1017  01EE50                     u4127:
  1018  01EE50  2EE8               	decfsz	wreg,f,c
  1019  01EE52  D7FE               	bra	u4127
  1020  01EE54  2E5D               	decfsz	??_main^0,f,c
  1021  01EE56  D7FC               	bra	u4127
  1022  01EE58  2E5E               	decfsz	(??_main+1)^0,f,c
  1023  01EE5A  D7FA               	bra	u4127
  1024  01EE5C                     l4000:
  1025                           
  1026                           ;main.c: 100:         LATDbits.LATD7 = 1;
  1027  01EE5C  8E7C               	bsf	124,7,c	;volatile
  1028  01EE5E                     l368:
  1029  01EE5E  B48E               	btfsc	142,2,c	;volatile
  1030  01EE60  EF34  F0F7         	goto	u3841
  1031  01EE64  EF36  F0F7         	goto	u3840
  1032  01EE68                     u3841:
  1033  01EE68  EF2F  F0F7         	goto	l368
  1034  01EE6C                     u3840:
  1035  01EE6C                     
  1036                           ;main.c: 102:         if (!PORTFbits.RF2){
  1037  01EE6C  B48E               	btfsc	142,2,c	;volatile
  1038  01EE6E  EF3B  F0F7         	goto	u3851
  1039  01EE72  EF3D  F0F7         	goto	u3850
  1040  01EE76                     u3851:
  1041  01EE76  EF4F  F0F7         	goto	l4008
  1042  01EE7A                     u3850:
  1043  01EE7A                     
  1044                           ;main.c: 103:             LATDbits.LATD7 = 0;
  1045  01EE7A  9E7C               	bcf	124,7,c	;volatile
  1046  01EE7C                     
  1047                           ;main.c: 104:             calibrateB(&test);
  1048  01EE7C  0E90               	movlw	low main@test
  1049  01EE7E  6E0C               	movwf	calibrateB@m^0,c
  1050  01EE80  0E00               	movlw	high main@test
  1051  01EE82  6E0D               	movwf	(calibrateB@m+1)^0,c
  1052  01EE84  EC66  F0E7         	call	_calibrateB	;wreg free
  1053  01EE88                     
  1054                           ;main.c: 105:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1055  01EE88  0E19               	movlw	25
  1056  01EE8A  6E5E               	movwf	(??_main+1)^0,c
  1057  01EE8C  0E5A               	movlw	90
  1058  01EE8E  6E5D               	movwf	??_main^0,c
  1059  01EE90  0EB2               	movlw	178
  1060  01EE92                     u4137:
  1061  01EE92  2EE8               	decfsz	wreg,f,c
  1062  01EE94  D7FE               	bra	u4137
  1063  01EE96  2E5D               	decfsz	??_main^0,f,c
  1064  01EE98  D7FC               	bra	u4137
  1065  01EE9A  2E5E               	decfsz	(??_main+1)^0,f,c
  1066  01EE9C  D7FA               	bra	u4137
  1067  01EE9E                     l4008:
  1068                           
  1069                           ;main.c: 108:         LATHbits.LATH3 = 1;
  1070  01EE9E  8680               	bsf	128,3,c	;volatile
  1071  01EEA0                     l372:
  1072  01EEA0  B68E               	btfsc	142,3,c	;volatile
  1073  01EEA2  EF55  F0F7         	goto	u3861
  1074  01EEA6  EF57  F0F7         	goto	u3860
  1075  01EEAA                     u3861:
  1076  01EEAA  EF50  F0F7         	goto	l372
  1077  01EEAE                     u3860:
  1078  01EEAE                     
  1079                           ;main.c: 110:         if (!PORTFbits.RF3){
  1080  01EEAE  B68E               	btfsc	142,3,c	;volatile
  1081  01EEB0  EF5C  F0F7         	goto	u3871
  1082  01EEB4  EF5E  F0F7         	goto	u3870
  1083  01EEB8                     u3871:
  1084  01EEB8  EF64  F0F7         	goto	l4014
  1085  01EEBC                     u3870:
  1086  01EEBC                     
  1087                           ;main.c: 111:             LATHbits.LATH3 = 0;
  1088  01EEBC  9680               	bcf	128,3,c	;volatile
  1089  01EEBE                     
  1090                           ;main.c: 112:             cal = 1;
  1091  01EEBE  0E00               	movlw	0
  1092  01EEC0  0100               	movlb	0	; () banked
  1093  01EEC2  6F83               	movwf	(main@cal+1)& (0+255),b
  1094  01EEC4  0E01               	movlw	1
  1095  01EEC6  6F82               	movwf	main@cal& (0+255),b
  1096  01EEC8                     l4014:
  1097                           
  1098                           ;main.c: 91:     while(cal==0){
  1099  01EEC8  0100               	movlb	0	; () banked
  1100  01EECA  5182               	movf	main@cal& (0+255),w,b
  1101  01EECC  1183               	iorwf	(main@cal+1)& (0+255),w,b
  1102  01EECE  B4D8               	btfsc	status,2,c
  1103  01EED0  EF6C  F0F7         	goto	u3881
  1104  01EED4  EF6E  F0F7         	goto	u3880
  1105  01EED8                     u3881:
  1106  01EED8  EF0D  F0F7         	goto	l363
  1107  01EEDC                     u3880:
  1108  01EEDC                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 116:     unsigned int check1 = 9;
  1111  01EEDC  0E00               	movlw	0
  1112  01EEDE  6F87               	movwf	(main@check1+1)& (0+255),b
  1113  01EEE0  0E09               	movlw	9
  1114  01EEE2  6F86               	movwf	main@check1& (0+255),b
  1115                           
  1116                           ;main.c: 117:     unsigned int check2 = 9;
  1117  01EEE4  0E00               	movlw	0
  1118  01EEE6  6F89               	movwf	(main@check2+1)& (0+255),b
  1119  01EEE8  0E09               	movlw	9
  1120  01EEEA  6F88               	movwf	main@check2& (0+255),b
  1121                           
  1122                           ;main.c: 118:     unsigned int check3 = 9;
  1123  01EEEC  0E00               	movlw	0
  1124  01EEEE  6F8B               	movwf	(main@check3+1)& (0+255),b
  1125  01EEF0  0E09               	movlw	9
  1126  01EEF2  6F8A               	movwf	main@check3& (0+255),b
  1127                           
  1128                           ;main.c: 119:     unsigned int check4 = 9;
  1129  01EEF4  0E00               	movlw	0
  1130  01EEF6  6F85               	movwf	(main@check4+1)& (0+255),b
  1131  01EEF8  0E09               	movlw	9
  1132  01EEFA  6F84               	movwf	main@check4& (0+255),b
  1133                           
  1134                           ;main.c: 120:     unsigned int count = 0;
  1135  01EEFC  0E00               	movlw	0
  1136  01EEFE  6F8D               	movwf	(main@count+1)& (0+255),b
  1137  01EF00  0E00               	movlw	0
  1138  01EF02  6F8C               	movwf	main@count& (0+255),b
  1139  01EF04                     l4018:
  1140                           
  1141                           ;main.c: 123:         unsigned int detected_colour;;main.c: 124:         read_colours(&t
      +                          est);
  1142  01EF04  0E90               	movlw	low main@test
  1143  01EF06  6E0C               	movwf	read_colours@m^0,c
  1144  01EF08  0E00               	movlw	high main@test
  1145  01EF0A  6E0D               	movwf	(read_colours@m+1)^0,c
  1146  01EF0C  ECA0  F0E8         	call	_read_colours	;wreg free
  1147  01EF10                     
  1148                           ;main.c: 125:         if (count==0) {check1 = determine_color_new(&test);}
  1149  01EF10  0100               	movlb	0	; () banked
  1150  01EF12  518C               	movf	main@count& (0+255),w,b
  1151  01EF14  118D               	iorwf	(main@count+1)& (0+255),w,b
  1152  01EF16  A4D8               	btfss	status,2,c
  1153  01EF18  EF90  F0F7         	goto	u3891
  1154  01EF1C  EF92  F0F7         	goto	u3890
  1155  01EF20                     u3891:
  1156  01EF20  EF9C  F0F7         	goto	l4024
  1157  01EF24                     u3890:
  1158  01EF24                     
  1159                           ; BSR set to: 0
  1160  01EF24  0E90               	movlw	low main@test
  1161  01EF26  6E5B               	movwf	determine_color_new@m^0,c
  1162  01EF28  0E00               	movlw	high main@test
  1163  01EF2A  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1164  01EF2C  EC5A  F0F9         	call	_determine_color_new	;wreg free
  1165  01EF30  C05B  F086         	movff	?_determine_color_new,main@check1
  1166  01EF34  C05C  F087         	movff	?_determine_color_new+1,main@check1+1
  1167  01EF38                     l4024:
  1168                           
  1169                           ;main.c: 126:         if (count==1) {check2 = determine_color_new(&test);}
  1170  01EF38  0100               	movlb	0	; () banked
  1171  01EF3A  058C               	decf	main@count& (0+255),w,b
  1172  01EF3C  118D               	iorwf	(main@count+1)& (0+255),w,b
  1173  01EF3E  A4D8               	btfss	status,2,c
  1174  01EF40  EFA4  F0F7         	goto	u3901
  1175  01EF44  EFA6  F0F7         	goto	u3900
  1176  01EF48                     u3901:
  1177  01EF48  EFB0  F0F7         	goto	l4028
  1178  01EF4C                     u3900:
  1179  01EF4C                     
  1180                           ; BSR set to: 0
  1181  01EF4C  0E90               	movlw	low main@test
  1182  01EF4E  6E5B               	movwf	determine_color_new@m^0,c
  1183  01EF50  0E00               	movlw	high main@test
  1184  01EF52  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1185  01EF54  EC5A  F0F9         	call	_determine_color_new	;wreg free
  1186  01EF58  C05B  F088         	movff	?_determine_color_new,main@check2
  1187  01EF5C  C05C  F089         	movff	?_determine_color_new+1,main@check2+1
  1188  01EF60                     l4028:
  1189                           
  1190                           ;main.c: 127:         if (count==2) {check3 = determine_color_new(&test);}
  1191  01EF60  0E02               	movlw	2
  1192  01EF62  0100               	movlb	0	; () banked
  1193  01EF64  198C               	xorwf	main@count& (0+255),w,b
  1194  01EF66  118D               	iorwf	(main@count+1)& (0+255),w,b
  1195  01EF68  A4D8               	btfss	status,2,c
  1196  01EF6A  EFB9  F0F7         	goto	u3911
  1197  01EF6E  EFBB  F0F7         	goto	u3910
  1198  01EF72                     u3911:
  1199  01EF72  EFC5  F0F7         	goto	l4032
  1200  01EF76                     u3910:
  1201  01EF76                     
  1202                           ; BSR set to: 0
  1203  01EF76  0E90               	movlw	low main@test
  1204  01EF78  6E5B               	movwf	determine_color_new@m^0,c
  1205  01EF7A  0E00               	movlw	high main@test
  1206  01EF7C  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1207  01EF7E  EC5A  F0F9         	call	_determine_color_new	;wreg free
  1208  01EF82  C05B  F08A         	movff	?_determine_color_new,main@check3
  1209  01EF86  C05C  F08B         	movff	?_determine_color_new+1,main@check3+1
  1210  01EF8A                     l4032:
  1211                           
  1212                           ;main.c: 128:         if (count==3) {check4 = determine_color_new(&test);count=0;}
  1213  01EF8A  0E03               	movlw	3
  1214  01EF8C  0100               	movlb	0	; () banked
  1215  01EF8E  198C               	xorwf	main@count& (0+255),w,b
  1216  01EF90  118D               	iorwf	(main@count+1)& (0+255),w,b
  1217  01EF92  A4D8               	btfss	status,2,c
  1218  01EF94  EFCE  F0F7         	goto	u3921
  1219  01EF98  EFD0  F0F7         	goto	u3920
  1220  01EF9C                     u3921:
  1221  01EF9C  EFE1  F0F7         	goto	l4038
  1222  01EFA0                     u3920:
  1223  01EFA0                     
  1224                           ; BSR set to: 0
  1225  01EFA0  0E90               	movlw	low main@test
  1226  01EFA2  6E5B               	movwf	determine_color_new@m^0,c
  1227  01EFA4  0E00               	movlw	high main@test
  1228  01EFA6  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1229  01EFA8  EC5A  F0F9         	call	_determine_color_new	;wreg free
  1230  01EFAC  C05B  F084         	movff	?_determine_color_new,main@check4
  1231  01EFB0  C05C  F085         	movff	?_determine_color_new+1,main@check4+1
  1232  01EFB4  0E00               	movlw	0
  1233  01EFB6  0100               	movlb	0	; () banked
  1234  01EFB8  6F8D               	movwf	(main@count+1)& (0+255),b
  1235  01EFBA  0E00               	movlw	0
  1236  01EFBC  6F8C               	movwf	main@count& (0+255),b
  1237  01EFBE  EFE3  F0F7         	goto	l4040
  1238  01EFC2                     l4038:
  1239                           
  1240                           ; BSR set to: 0
  1241  01EFC2  4B8C               	infsnz	main@count& (0+255),f,b
  1242  01EFC4  2B8D               	incf	(main@count+1)& (0+255),f,b
  1243  01EFC6                     l4040:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;main.c: 132:         if (check1==check2 && check2==check3 && check3==check4){
  1247  01EFC6  5188               	movf	main@check2& (0+255),w,b
  1248  01EFC8  1986               	xorwf	main@check1& (0+255),w,b
  1249  01EFCA  E107               	bnz	u3931
  1250  01EFCC  5189               	movf	(main@check2+1)& (0+255),w,b
  1251  01EFCE  1987               	xorwf	(main@check1+1)& (0+255),w,b
  1252  01EFD0  A4D8               	btfss	status,2,c
  1253  01EFD2  EFED  F0F7         	goto	u3931
  1254  01EFD6  EFEF  F0F7         	goto	u3930
  1255  01EFDA                     u3931:
  1256  01EFDA  EF1B  F0F8         	goto	l4050
  1257  01EFDE                     u3930:
  1258  01EFDE                     
  1259                           ; BSR set to: 0
  1260  01EFDE  518A               	movf	main@check3& (0+255),w,b
  1261  01EFE0  1988               	xorwf	main@check2& (0+255),w,b
  1262  01EFE2  E107               	bnz	u3941
  1263  01EFE4  518B               	movf	(main@check3+1)& (0+255),w,b
  1264  01EFE6  1989               	xorwf	(main@check2+1)& (0+255),w,b
  1265  01EFE8  A4D8               	btfss	status,2,c
  1266  01EFEA  EFF9  F0F7         	goto	u3941
  1267  01EFEE  EFFB  F0F7         	goto	u3940
  1268  01EFF2                     u3941:
  1269  01EFF2  EF1B  F0F8         	goto	l4050
  1270  01EFF6                     u3940:
  1271  01EFF6                     
  1272                           ; BSR set to: 0
  1273  01EFF6  5184               	movf	main@check4& (0+255),w,b
  1274  01EFF8  198A               	xorwf	main@check3& (0+255),w,b
  1275  01EFFA  E107               	bnz	u3951
  1276  01EFFC  5185               	movf	(main@check4+1)& (0+255),w,b
  1277  01EFFE  198B               	xorwf	(main@check3+1)& (0+255),w,b
  1278  01F000  A4D8               	btfss	status,2,c
  1279  01F002  EF05  F0F8         	goto	u3951
  1280  01F006  EF07  F0F8         	goto	u3950
  1281  01F00A                     u3951:
  1282  01F00A  EF1B  F0F8         	goto	l4050
  1283  01F00E                     u3950:
  1284  01F00E                     
  1285                           ; BSR set to: 0
  1286                           ;main.c: 133:             detected_colour = check1;
  1287  01F00E  C086  F08E         	movff	main@check1,main@detected_colour
  1288  01F012  C087  F08F         	movff	main@check1+1,main@detected_colour+1
  1289  01F016                     
  1290                           ; BSR set to: 0
  1291                           ;main.c: 134:             check1=9;check2=9;check3=9;check4=9;
  1292  01F016  0E00               	movlw	0
  1293  01F018  6F87               	movwf	(main@check1+1)& (0+255),b
  1294  01F01A  0E09               	movlw	9
  1295  01F01C  6F86               	movwf	main@check1& (0+255),b
  1296  01F01E  0E00               	movlw	0
  1297  01F020  6F89               	movwf	(main@check2+1)& (0+255),b
  1298  01F022  0E09               	movlw	9
  1299  01F024  6F88               	movwf	main@check2& (0+255),b
  1300  01F026  0E00               	movlw	0
  1301  01F028  6F8B               	movwf	(main@check3+1)& (0+255),b
  1302  01F02A  0E09               	movlw	9
  1303  01F02C  6F8A               	movwf	main@check3& (0+255),b
  1304  01F02E  0E00               	movlw	0
  1305  01F030  6F85               	movwf	(main@check4+1)& (0+255),b
  1306  01F032  0E09               	movlw	9
  1307  01F034  6F84               	movwf	main@check4& (0+255),b
  1308  01F036                     l4050:
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 137:         if (detected_colour == 0){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1312  01F036  518E               	movf	main@detected_colour& (0+255),w,b
  1313  01F038  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1314  01F03A  A4D8               	btfss	status,2,c
  1315  01F03C  EF22  F0F8         	goto	u3961
  1316  01F040  EF24  F0F8         	goto	u3960
  1317  01F044                     u3961:
  1318  01F044  EF3A  F0F8         	goto	l4056
  1319  01F048                     u3960:
  1320  01F048                     
  1321                           ; BSR set to: 0
  1322  01F048  0EA4               	movlw	low main@motorL
  1323  01F04A  6E1D               	movwf	turnRight90@mL^0,c
  1324  01F04C  0E00               	movlw	high main@motorL
  1325  01F04E  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1326  01F050  0EAD               	movlw	low main@motorR
  1327  01F052  6E1F               	movwf	turnRight90@mR^0,c
  1328  01F054  0E00               	movlw	high main@motorR
  1329  01F056  6E20               	movwf	(turnRight90@mR+1)^0,c
  1330  01F058  EC24  F0EC         	call	_turnRight90	;wreg free
  1331  01F05C  0E09               	movlw	9
  1332  01F05E  6E5E               	movwf	(??_main+1)^0,c
  1333  01F060  0E1E               	movlw	30
  1334  01F062  6E5D               	movwf	??_main^0,c
  1335  01F064  0EE4               	movlw	228
  1336  01F066                     u4147:
  1337  01F066  2EE8               	decfsz	wreg,f,c
  1338  01F068  D7FE               	bra	u4147
  1339  01F06A  2E5D               	decfsz	??_main^0,f,c
  1340  01F06C  D7FC               	bra	u4147
  1341  01F06E  2E5E               	decfsz	(??_main+1)^0,f,c
  1342  01F070  D7FA               	bra	u4147
  1343  01F072  D000               	nop2	
  1344  01F074                     l4056:
  1345                           
  1346                           ;main.c: 138:         if (detected_colour == 1){ turnLeft90(&motorL,&motorR);_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  1347  01F074  0100               	movlb	0	; () banked
  1348  01F076  058E               	decf	main@detected_colour& (0+255),w,b
  1349  01F078  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1350  01F07A  A4D8               	btfss	status,2,c
  1351  01F07C  EF42  F0F8         	goto	u3971
  1352  01F080  EF44  F0F8         	goto	u3970
  1353  01F084                     u3971:
  1354  01F084  EF5A  F0F8         	goto	l4062
  1355  01F088                     u3970:
  1356  01F088                     
  1357                           ; BSR set to: 0
  1358  01F088  0EA4               	movlw	low main@motorL
  1359  01F08A  6E1D               	movwf	turnLeft90@mL^0,c
  1360  01F08C  0E00               	movlw	high main@motorL
  1361  01F08E  6E1E               	movwf	(turnLeft90@mL+1)^0,c
  1362  01F090  0EAD               	movlw	low main@motorR
  1363  01F092  6E1F               	movwf	turnLeft90@mR^0,c
  1364  01F094  0E00               	movlw	high main@motorR
  1365  01F096  6E20               	movwf	(turnLeft90@mR+1)^0,c
  1366  01F098  EC01  F0EE         	call	_turnLeft90	;wreg free
  1367  01F09C  0E09               	movlw	9
  1368  01F09E  6E5E               	movwf	(??_main+1)^0,c
  1369  01F0A0  0E1E               	movlw	30
  1370  01F0A2  6E5D               	movwf	??_main^0,c
  1371  01F0A4  0EE4               	movlw	228
  1372  01F0A6                     u4157:
  1373  01F0A6  2EE8               	decfsz	wreg,f,c
  1374  01F0A8  D7FE               	bra	u4157
  1375  01F0AA  2E5D               	decfsz	??_main^0,f,c
  1376  01F0AC  D7FC               	bra	u4157
  1377  01F0AE  2E5E               	decfsz	(??_main+1)^0,f,c
  1378  01F0B0  D7FA               	bra	u4157
  1379  01F0B2  D000               	nop2	
  1380  01F0B4                     l4062:
  1381                           
  1382                           ;main.c: 139:         if (detected_colour == 2){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1383  01F0B4  0E02               	movlw	2
  1384  01F0B6  0100               	movlb	0	; () banked
  1385  01F0B8  198E               	xorwf	main@detected_colour& (0+255),w,b
  1386  01F0BA  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1387  01F0BC  A4D8               	btfss	status,2,c
  1388  01F0BE  EF63  F0F8         	goto	u3981
  1389  01F0C2  EF65  F0F8         	goto	u3980
  1390  01F0C6                     u3981:
  1391  01F0C6  EF7B  F0F8         	goto	l4068
  1392  01F0CA                     u3980:
  1393  01F0CA                     
  1394                           ; BSR set to: 0
  1395  01F0CA  0EA4               	movlw	low main@motorL
  1396  01F0CC  6E1D               	movwf	turnRight180@mL^0,c
  1397  01F0CE  0E00               	movlw	high main@motorL
  1398  01F0D0  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1399  01F0D2  0EAD               	movlw	low main@motorR
  1400  01F0D4  6E1F               	movwf	turnRight180@mR^0,c
  1401  01F0D6  0E00               	movlw	high main@motorR
  1402  01F0D8  6E20               	movwf	(turnRight180@mR+1)^0,c
  1403  01F0DA  EC62  F0ED         	call	_turnRight180	;wreg free
  1404  01F0DE  0E09               	movlw	9
  1405  01F0E0  6E5E               	movwf	(??_main+1)^0,c
  1406  01F0E2  0E1E               	movlw	30
  1407  01F0E4  6E5D               	movwf	??_main^0,c
  1408  01F0E6  0EE4               	movlw	228
  1409  01F0E8                     u4167:
  1410  01F0E8  2EE8               	decfsz	wreg,f,c
  1411  01F0EA  D7FE               	bra	u4167
  1412  01F0EC  2E5D               	decfsz	??_main^0,f,c
  1413  01F0EE  D7FC               	bra	u4167
  1414  01F0F0  2E5E               	decfsz	(??_main+1)^0,f,c
  1415  01F0F2  D7FA               	bra	u4167
  1416  01F0F4  D000               	nop2	
  1417  01F0F6                     l4068:
  1418                           
  1419                           ;main.c: 140:         if (detected_colour == 3){ reverseTurnRight90(&motorL,&motorR);_de
      +                          lay((unsigned long)((100)*(64000000/4000.0)));}
  1420  01F0F6  0E03               	movlw	3
  1421  01F0F8  0100               	movlb	0	; () banked
  1422  01F0FA  198E               	xorwf	main@detected_colour& (0+255),w,b
  1423  01F0FC  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1424  01F0FE  A4D8               	btfss	status,2,c
  1425  01F100  EF84  F0F8         	goto	u3991
  1426  01F104  EF86  F0F8         	goto	u3990
  1427  01F108                     u3991:
  1428  01F108  EF9C  F0F8         	goto	l4074
  1429  01F10C                     u3990:
  1430  01F10C                     
  1431                           ; BSR set to: 0
  1432  01F10C  0EA4               	movlw	low main@motorL
  1433  01F10E  6E25               	movwf	reverseTurnRight90@mL^0,c
  1434  01F110  0E00               	movlw	high main@motorL
  1435  01F112  6E26               	movwf	(reverseTurnRight90@mL+1)^0,c
  1436  01F114  0EAD               	movlw	low main@motorR
  1437  01F116  6E27               	movwf	reverseTurnRight90@mR^0,c
  1438  01F118  0E00               	movlw	high main@motorR
  1439  01F11A  6E28               	movwf	(reverseTurnRight90@mR+1)^0,c
  1440  01F11C  EC0B  F0EA         	call	_reverseTurnRight90	;wreg free
  1441  01F120  0E09               	movlw	9
  1442  01F122  6E5E               	movwf	(??_main+1)^0,c
  1443  01F124  0E1E               	movlw	30
  1444  01F126  6E5D               	movwf	??_main^0,c
  1445  01F128  0EE4               	movlw	228
  1446  01F12A                     u4177:
  1447  01F12A  2EE8               	decfsz	wreg,f,c
  1448  01F12C  D7FE               	bra	u4177
  1449  01F12E  2E5D               	decfsz	??_main^0,f,c
  1450  01F130  D7FC               	bra	u4177
  1451  01F132  2E5E               	decfsz	(??_main+1)^0,f,c
  1452  01F134  D7FA               	bra	u4177
  1453  01F136  D000               	nop2	
  1454  01F138                     l4074:
  1455                           
  1456                           ;main.c: 141:         if (detected_colour == 4){ reverseTurnLeft90(&motorL,&motorR);_del
      +                          ay((unsigned long)((100)*(64000000/4000.0)));}
  1457  01F138  0E04               	movlw	4
  1458  01F13A  0100               	movlb	0	; () banked
  1459  01F13C  198E               	xorwf	main@detected_colour& (0+255),w,b
  1460  01F13E  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1461  01F140  A4D8               	btfss	status,2,c
  1462  01F142  EFA5  F0F8         	goto	u4001
  1463  01F146  EFA7  F0F8         	goto	u4000
  1464  01F14A                     u4001:
  1465  01F14A  EFBD  F0F8         	goto	l4080
  1466  01F14E                     u4000:
  1467  01F14E                     
  1468                           ; BSR set to: 0
  1469  01F14E  0EA4               	movlw	low main@motorL
  1470  01F150  6E25               	movwf	reverseTurnLeft90@mL^0,c
  1471  01F152  0E00               	movlw	high main@motorL
  1472  01F154  6E26               	movwf	(reverseTurnLeft90@mL+1)^0,c
  1473  01F156  0EAD               	movlw	low main@motorR
  1474  01F158  6E27               	movwf	reverseTurnLeft90@mR^0,c
  1475  01F15A  0E00               	movlw	high main@motorR
  1476  01F15C  6E28               	movwf	(reverseTurnLeft90@mR+1)^0,c
  1477  01F15E  EC95  F0E9         	call	_reverseTurnLeft90	;wreg free
  1478  01F162  0E09               	movlw	9
  1479  01F164  6E5E               	movwf	(??_main+1)^0,c
  1480  01F166  0E1E               	movlw	30
  1481  01F168  6E5D               	movwf	??_main^0,c
  1482  01F16A  0EE4               	movlw	228
  1483  01F16C                     u4187:
  1484  01F16C  2EE8               	decfsz	wreg,f,c
  1485  01F16E  D7FE               	bra	u4187
  1486  01F170  2E5D               	decfsz	??_main^0,f,c
  1487  01F172  D7FC               	bra	u4187
  1488  01F174  2E5E               	decfsz	(??_main+1)^0,f,c
  1489  01F176  D7FA               	bra	u4187
  1490  01F178  D000               	nop2	
  1491  01F17A                     l4080:
  1492                           
  1493                           ;main.c: 142:         if (detected_colour == 5){ turnRight135(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1494  01F17A  0E05               	movlw	5
  1495  01F17C  0100               	movlb	0	; () banked
  1496  01F17E  198E               	xorwf	main@detected_colour& (0+255),w,b
  1497  01F180  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1498  01F182  A4D8               	btfss	status,2,c
  1499  01F184  EFC6  F0F8         	goto	u4011
  1500  01F188  EFC8  F0F8         	goto	u4010
  1501  01F18C                     u4011:
  1502  01F18C  EFDE  F0F8         	goto	l4086
  1503  01F190                     u4010:
  1504  01F190                     
  1505                           ; BSR set to: 0
  1506  01F190  0EA4               	movlw	low main@motorL
  1507  01F192  6E1D               	movwf	turnRight135@mL^0,c
  1508  01F194  0E00               	movlw	high main@motorL
  1509  01F196  6E1E               	movwf	(turnRight135@mL+1)^0,c
  1510  01F198  0EAD               	movlw	low main@motorR
  1511  01F19A  6E1F               	movwf	turnRight135@mR^0,c
  1512  01F19C  0E00               	movlw	high main@motorR
  1513  01F19E  6E20               	movwf	(turnRight135@mR+1)^0,c
  1514  01F1A0  ECC3  F0EC         	call	_turnRight135	;wreg free
  1515  01F1A4  0E09               	movlw	9
  1516  01F1A6  6E5E               	movwf	(??_main+1)^0,c
  1517  01F1A8  0E1E               	movlw	30
  1518  01F1AA  6E5D               	movwf	??_main^0,c
  1519  01F1AC  0EE4               	movlw	228
  1520  01F1AE                     u4197:
  1521  01F1AE  2EE8               	decfsz	wreg,f,c
  1522  01F1B0  D7FE               	bra	u4197
  1523  01F1B2  2E5D               	decfsz	??_main^0,f,c
  1524  01F1B4  D7FC               	bra	u4197
  1525  01F1B6  2E5E               	decfsz	(??_main+1)^0,f,c
  1526  01F1B8  D7FA               	bra	u4197
  1527  01F1BA  D000               	nop2	
  1528  01F1BC                     l4086:
  1529                           
  1530                           ;main.c: 143:         if (detected_colour == 6){ turnLeft135(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1531  01F1BC  0E06               	movlw	6
  1532  01F1BE  0100               	movlb	0	; () banked
  1533  01F1C0  198E               	xorwf	main@detected_colour& (0+255),w,b
  1534  01F1C2  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1535  01F1C4  A4D8               	btfss	status,2,c
  1536  01F1C6  EFE7  F0F8         	goto	u4021
  1537  01F1CA  EFE9  F0F8         	goto	u4020
  1538  01F1CE                     u4021:
  1539  01F1CE  EFFF  F0F8         	goto	l4092
  1540  01F1D2                     u4020:
  1541  01F1D2                     
  1542                           ; BSR set to: 0
  1543  01F1D2  0EA4               	movlw	low main@motorL
  1544  01F1D4  6E1D               	movwf	turnLeft135@mL^0,c
  1545  01F1D6  0E00               	movlw	high main@motorL
  1546  01F1D8  6E1E               	movwf	(turnLeft135@mL+1)^0,c
  1547  01F1DA  0EAD               	movlw	low main@motorR
  1548  01F1DC  6E1F               	movwf	turnLeft135@mR^0,c
  1549  01F1DE  0E00               	movlw	high main@motorR
  1550  01F1E0  6E20               	movwf	(turnLeft135@mR+1)^0,c
  1551  01F1E2  EC86  F0EB         	call	_turnLeft135	;wreg free
  1552  01F1E6  0E09               	movlw	9
  1553  01F1E8  6E5E               	movwf	(??_main+1)^0,c
  1554  01F1EA  0E1E               	movlw	30
  1555  01F1EC  6E5D               	movwf	??_main^0,c
  1556  01F1EE  0EE4               	movlw	228
  1557  01F1F0                     u4207:
  1558  01F1F0  2EE8               	decfsz	wreg,f,c
  1559  01F1F2  D7FE               	bra	u4207
  1560  01F1F4  2E5D               	decfsz	??_main^0,f,c
  1561  01F1F6  D7FC               	bra	u4207
  1562  01F1F8  2E5E               	decfsz	(??_main+1)^0,f,c
  1563  01F1FA  D7FA               	bra	u4207
  1564  01F1FC  D000               	nop2	
  1565  01F1FE                     l4092:
  1566                           
  1567                           ;main.c: 144:         if (detected_colour == 7){ stop(&motorL,&motorR);_delay((unsigned 
      +                          long)((100)*(64000000/4000.0)));}
  1568  01F1FE  0E07               	movlw	7
  1569  01F200  0100               	movlb	0	; () banked
  1570  01F202  198E               	xorwf	main@detected_colour& (0+255),w,b
  1571  01F204  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1572  01F206  A4D8               	btfss	status,2,c
  1573  01F208  EF08  F0F9         	goto	u4031
  1574  01F20C  EF0A  F0F9         	goto	u4030
  1575  01F210                     u4031:
  1576  01F210  EF20  F0F9         	goto	l4098
  1577  01F214                     u4030:
  1578  01F214                     
  1579                           ; BSR set to: 0
  1580  01F214  0EA4               	movlw	low main@motorL
  1581  01F216  6E19               	movwf	stop@mL^0,c
  1582  01F218  0E00               	movlw	high main@motorL
  1583  01F21A  6E1A               	movwf	(stop@mL+1)^0,c
  1584  01F21C  0EAD               	movlw	low main@motorR
  1585  01F21E  6E1B               	movwf	stop@mR^0,c
  1586  01F220  0E00               	movlw	high main@motorR
  1587  01F222  6E1C               	movwf	(stop@mR+1)^0,c
  1588  01F224  EC48  F0E9         	call	_stop	;wreg free
  1589  01F228  0E09               	movlw	9
  1590  01F22A  6E5E               	movwf	(??_main+1)^0,c
  1591  01F22C  0E1E               	movlw	30
  1592  01F22E  6E5D               	movwf	??_main^0,c
  1593  01F230  0EE4               	movlw	228
  1594  01F232                     u4217:
  1595  01F232  2EE8               	decfsz	wreg,f,c
  1596  01F234  D7FE               	bra	u4217
  1597  01F236  2E5D               	decfsz	??_main^0,f,c
  1598  01F238  D7FC               	bra	u4217
  1599  01F23A  2E5E               	decfsz	(??_main+1)^0,f,c
  1600  01F23C  D7FA               	bra	u4217
  1601  01F23E  D000               	nop2	
  1602  01F240                     l4098:
  1603                           
  1604                           ;main.c: 145:         if (detected_colour == 8){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1605  01F240  0E08               	movlw	8
  1606  01F242  0100               	movlb	0	; () banked
  1607  01F244  198E               	xorwf	main@detected_colour& (0+255),w,b
  1608  01F246  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1609  01F248  A4D8               	btfss	status,2,c
  1610  01F24A  EF29  F0F9         	goto	u4041
  1611  01F24E  EF2B  F0F9         	goto	u4040
  1612  01F252                     u4041:
  1613  01F252  EF41  F0F9         	goto	l4104
  1614  01F256                     u4040:
  1615  01F256                     
  1616                           ; BSR set to: 0
  1617  01F256  0EA4               	movlw	low main@motorL
  1618  01F258  6E1D               	movwf	turnRight90@mL^0,c
  1619  01F25A  0E00               	movlw	high main@motorL
  1620  01F25C  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1621  01F25E  0EAD               	movlw	low main@motorR
  1622  01F260  6E1F               	movwf	turnRight90@mR^0,c
  1623  01F262  0E00               	movlw	high main@motorR
  1624  01F264  6E20               	movwf	(turnRight90@mR+1)^0,c
  1625  01F266  EC24  F0EC         	call	_turnRight90	;wreg free
  1626  01F26A  0E09               	movlw	9
  1627  01F26C  6E5E               	movwf	(??_main+1)^0,c
  1628  01F26E  0E1E               	movlw	30
  1629  01F270  6E5D               	movwf	??_main^0,c
  1630  01F272  0EE4               	movlw	228
  1631  01F274                     u4227:
  1632  01F274  2EE8               	decfsz	wreg,f,c
  1633  01F276  D7FE               	bra	u4227
  1634  01F278  2E5D               	decfsz	??_main^0,f,c
  1635  01F27A  D7FC               	bra	u4227
  1636  01F27C  2E5E               	decfsz	(??_main+1)^0,f,c
  1637  01F27E  D7FA               	bra	u4227
  1638  01F280  D000               	nop2	
  1639  01F282                     l4104:
  1640                           
  1641                           ;main.c: 146:         if (detected_colour == 9){ forward(&motorL,&motorR);}
  1642  01F282  0E09               	movlw	9
  1643  01F284  0100               	movlb	0	; () banked
  1644  01F286  198E               	xorwf	main@detected_colour& (0+255),w,b
  1645  01F288  118F               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1646  01F28A  A4D8               	btfss	status,2,c
  1647  01F28C  EF4A  F0F9         	goto	u4051
  1648  01F290  EF4C  F0F9         	goto	u4050
  1649  01F294                     u4051:
  1650  01F294  EF82  F0F7         	goto	l4018
  1651  01F298                     u4050:
  1652  01F298                     
  1653                           ; BSR set to: 0
  1654  01F298  0EA4               	movlw	low main@motorL
  1655  01F29A  6E19               	movwf	forward@mL^0,c
  1656  01F29C  0E00               	movlw	high main@motorL
  1657  01F29E  6E1A               	movwf	(forward@mL+1)^0,c
  1658  01F2A0  0EAD               	movlw	low main@motorR
  1659  01F2A2  6E1B               	movwf	forward@mR^0,c
  1660  01F2A4  0E00               	movlw	high main@motorR
  1661  01F2A6  6E1C               	movwf	(forward@mR+1)^0,c
  1662  01F2A8  EC4E  F0E8         	call	_forward	;wreg free
  1663  01F2AC  EF82  F0F7         	goto	l4018
  1664  01F2B0  EF00  F000         	goto	start
  1665  01F2B4                     __end_of_main:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _turnRight180 *****************
  1669 ;; Defined at:
  1670 ;;		line 183 in file "dc_motor.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  1673 ;;		 -> main@motorL(9), 
  1674 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  1675 ;;		 -> main@motorR(9), 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  i               2   34[COMRAM] unsigned int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;Total ram usage:        8 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 3
  1694 ;; This function calls:
  1695 ;;		_reverse
  1696 ;;		_setMotorPWM
  1697 ;;		_stop
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;;		_Black
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text1
  1705  01DAC4                     __ptext1:
  1706                           	callstack 0
  1707  01DAC4                     _turnRight180:
  1708                           	callstack 27
  1709  01DAC4                     
  1710                           ;dc_motor.c: 183: void turnRight180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 184: {;dc_motor.c: 185:     stop(mL, mR);
  1711  01DAC4  C01D  F019         	movff	turnRight180@mL,stop@mL
  1712  01DAC8  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  1713  01DACC  C01F  F01B         	movff	turnRight180@mR,stop@mR
  1714  01DAD0  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  1715  01DAD4  EC48  F0E9         	call	_stop	;wreg free
  1716  01DAD8                     
  1717                           ;dc_motor.c: 186:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1718  01DAD8  0E05               	movlw	5
  1719  01DADA  6E22               	movwf	(??_turnRight180+1)^0,c
  1720  01DADC  0E0F               	movlw	15
  1721  01DADE  6E21               	movwf	??_turnRight180^0,c
  1722  01DAE0  0EF1               	movlw	241
  1723  01DAE2                     u4237:
  1724  01DAE2  2EE8               	decfsz	wreg,f,c
  1725  01DAE4  D7FE               	bra	u4237
  1726  01DAE6  2E21               	decfsz	??_turnRight180^0,f,c
  1727  01DAE8  D7FC               	bra	u4237
  1728  01DAEA  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  1729  01DAEC  D7FA               	bra	u4237
  1730  01DAEE  F000               	nop	
  1731  01DAF0                     
  1732                           ;dc_motor.c: 187:     reverse(mL, mR);
  1733  01DAF0  C01D  F019         	movff	turnRight180@mL,reverse@mL
  1734  01DAF4  C01E  F01A         	movff	turnRight180@mL+1,reverse@mL+1
  1735  01DAF8  C01F  F01B         	movff	turnRight180@mR,reverse@mR
  1736  01DAFC  C020  F01C         	movff	turnRight180@mR+1,reverse@mR+1
  1737  01DB00  EC77  F0E8         	call	_reverse	;wreg free
  1738                           
  1739                           ;dc_motor.c: 188:     _delay((unsigned long)((400)*(64000000/4000.0)));
  1740  01DB04  0E21               	movlw	33
  1741  01DB06  6E22               	movwf	(??_turnRight180+1)^0,c
  1742  01DB08  0E78               	movlw	120
  1743  01DB0A  6E21               	movwf	??_turnRight180^0,c
  1744  01DB0C  0E98               	movlw	152
  1745  01DB0E                     u4247:
  1746  01DB0E  2EE8               	decfsz	wreg,f,c
  1747  01DB10  D7FE               	bra	u4247
  1748  01DB12  2E21               	decfsz	??_turnRight180^0,f,c
  1749  01DB14  D7FC               	bra	u4247
  1750  01DB16  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  1751  01DB18  D7FA               	bra	u4247
  1752  01DB1A  D000               	nop2	
  1753  01DB1C                     
  1754                           ;dc_motor.c: 189:     stop(mL, mR);
  1755  01DB1C  C01D  F019         	movff	turnRight180@mL,stop@mL
  1756  01DB20  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  1757  01DB24  C01F  F01B         	movff	turnRight180@mR,stop@mR
  1758  01DB28  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  1759  01DB2C  EC48  F0E9         	call	_stop	;wreg free
  1760  01DB30                     
  1761                           ;dc_motor.c: 190:     _delay((unsigned long)((150)*(64000000/4000.0)));
  1762  01DB30  0E0D               	movlw	13
  1763  01DB32  6E22               	movwf	(??_turnRight180+1)^0,c
  1764  01DB34  0E2D               	movlw	45
  1765  01DB36  6E21               	movwf	??_turnRight180^0,c
  1766  01DB38  0ED8               	movlw	216
  1767  01DB3A                     u4257:
  1768  01DB3A  2EE8               	decfsz	wreg,f,c
  1769  01DB3C  D7FE               	bra	u4257
  1770  01DB3E  2E21               	decfsz	??_turnRight180^0,f,c
  1771  01DB40  D7FC               	bra	u4257
  1772  01DB42  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  1773  01DB44  D7FA               	bra	u4257
  1774  01DB46                     
  1775                           ;dc_motor.c: 192:     (*mL).direction = 1;
  1776  01DB46  EE20 F001          	lfsr	2,1
  1777  01DB4A  501D               	movf	turnRight180@mL^0,w,c
  1778  01DB4C  26D9               	addwf	fsr2l,f,c
  1779  01DB4E  501E               	movf	(turnRight180@mL+1)^0,w,c
  1780  01DB50  22DA               	addwfc	fsr2h,f,c
  1781  01DB52  0E01               	movlw	1
  1782  01DB54  6EDF               	movwf	indf2,c
  1783  01DB56                     
  1784                           ;dc_motor.c: 193:     (*mR).direction = 0;
  1785  01DB56  EE20 F001          	lfsr	2,1
  1786  01DB5A  501F               	movf	turnRight180@mR^0,w,c
  1787  01DB5C  26D9               	addwf	fsr2l,f,c
  1788  01DB5E  5020               	movf	(turnRight180@mR+1)^0,w,c
  1789  01DB60  22DA               	addwfc	fsr2h,f,c
  1790  01DB62  0E00               	movlw	0
  1791  01DB64  6EDF               	movwf	indf2,c
  1792  01DB66                     
  1793                           ;dc_motor.c: 194:     for (unsigned int i = 0; i < 75; ++i){
  1794  01DB66  0E00               	movlw	0
  1795  01DB68  6E24               	movwf	(turnRight180@i+1)^0,c
  1796  01DB6A  0E00               	movlw	0
  1797  01DB6C  6E23               	movwf	turnRight180@i^0,c
  1798  01DB6E                     l3650:
  1799                           
  1800                           ;dc_motor.c: 195:         (mL->power) += 1;
  1801  01DB6E  C01D  FFD9         	movff	turnRight180@mL,fsr2l
  1802  01DB72  C01E  FFDA         	movff	turnRight180@mL+1,fsr2h
  1803  01DB76  2ADF               	incf	indf2,f,c
  1804                           
  1805                           ;dc_motor.c: 196:         (mR->power) += 1;
  1806  01DB78  C01F  FFD9         	movff	turnRight180@mR,fsr2l
  1807  01DB7C  C020  FFDA         	movff	turnRight180@mR+1,fsr2h
  1808  01DB80  2ADF               	incf	indf2,f,c
  1809  01DB82                     
  1810                           ;dc_motor.c: 197:         setMotorPWM(mL);
  1811  01DB82  C01D  F00E         	movff	turnRight180@mL,setMotorPWM@m
  1812  01DB86  C01E  F00F         	movff	turnRight180@mL+1,setMotorPWM@m+1
  1813  01DB8A  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  1814  01DB8E                     
  1815                           ;dc_motor.c: 198:         setMotorPWM(mR);
  1816  01DB8E  C01F  F00E         	movff	turnRight180@mR,setMotorPWM@m
  1817  01DB92  C020  F00F         	movff	turnRight180@mR+1,setMotorPWM@m+1
  1818  01DB96  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  1819  01DB9A                     
  1820                           ;dc_motor.c: 199:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  1821  01DB9A  0EA0               	movlw	160
  1822  01DB9C                     u4267:
  1823  01DB9C  D000               	nop2	
  1824  01DB9E  2EE8               	decfsz	wreg,f,c
  1825  01DBA0  D7FD               	bra	u4267
  1826  01DBA2                     
  1827                           ;dc_motor.c: 200:     }
  1828  01DBA2  4A23               	infsnz	turnRight180@i^0,f,c
  1829  01DBA4  2A24               	incf	(turnRight180@i+1)^0,f,c
  1830  01DBA6  5024               	movf	(turnRight180@i+1)^0,w,c
  1831  01DBA8  E109               	bnz	u3660
  1832  01DBAA  0E4B               	movlw	75
  1833  01DBAC  5C23               	subwf	turnRight180@i^0,w,c
  1834  01DBAE  A0D8               	btfss	status,0,c
  1835  01DBB0  EFDC  F0ED         	goto	u3661
  1836  01DBB4  EFDE  F0ED         	goto	u3660
  1837  01DBB8                     u3661:
  1838  01DBB8  EFB7  F0ED         	goto	l3650
  1839  01DBBC                     u3660:
  1840  01DBBC                     
  1841                           ;dc_motor.c: 201:     _delay((unsigned long)((400)*(64000000/4000.0)));
  1842  01DBBC  0E21               	movlw	33
  1843  01DBBE  6E22               	movwf	(??_turnRight180+1)^0,c
  1844  01DBC0  0E78               	movlw	120
  1845  01DBC2  6E21               	movwf	??_turnRight180^0,c
  1846  01DBC4  0E98               	movlw	152
  1847  01DBC6                     u4277:
  1848  01DBC6  2EE8               	decfsz	wreg,f,c
  1849  01DBC8  D7FE               	bra	u4277
  1850  01DBCA  2E21               	decfsz	??_turnRight180^0,f,c
  1851  01DBCC  D7FC               	bra	u4277
  1852  01DBCE  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  1853  01DBD0  D7FA               	bra	u4277
  1854  01DBD2  D000               	nop2	
  1855  01DBD4                     
  1856                           ;dc_motor.c: 202:     stop(mL, mR);
  1857  01DBD4  C01D  F019         	movff	turnRight180@mL,stop@mL
  1858  01DBD8  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  1859  01DBDC  C01F  F01B         	movff	turnRight180@mR,stop@mR
  1860  01DBE0  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  1861  01DBE4  EC48  F0E9         	call	_stop	;wreg free
  1862  01DBE8                     
  1863                           ;dc_motor.c: 203:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1864  01DBE8  0E05               	movlw	5
  1865  01DBEA  6E22               	movwf	(??_turnRight180+1)^0,c
  1866  01DBEC  0E0F               	movlw	15
  1867  01DBEE  6E21               	movwf	??_turnRight180^0,c
  1868  01DBF0  0EF1               	movlw	241
  1869  01DBF2                     u4287:
  1870  01DBF2  2EE8               	decfsz	wreg,f,c
  1871  01DBF4  D7FE               	bra	u4287
  1872  01DBF6  2E21               	decfsz	??_turnRight180^0,f,c
  1873  01DBF8  D7FC               	bra	u4287
  1874  01DBFA  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  1875  01DBFC  D7FA               	bra	u4287
  1876  01DBFE  F000               	nop	
  1877  01DC00  0012               	return		;funcret
  1878  01DC02                     __end_of_turnRight180:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _turnRight135 *****************
  1882 ;; Defined at:
  1883 ;;		line 159 in file "dc_motor.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  1886 ;;		 -> main@motorL(9), 
  1887 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  1888 ;;		 -> main@motorR(9), 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  i               2   34[COMRAM] unsigned int 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;Total ram usage:        8 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 3
  1907 ;; This function calls:
  1908 ;;		_reverse
  1909 ;;		_setMotorPWM
  1910 ;;		_stop
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;;		_Black
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text2
  1918  01D986                     __ptext2:
  1919                           	callstack 0
  1920  01D986                     _turnRight135:
  1921                           	callstack 27
  1922  01D986                     
  1923                           ;dc_motor.c: 159: void turnRight135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 160: {;dc_motor.c: 161:     stop(mL, mR);
  1924  01D986  C01D  F019         	movff	turnRight135@mL,stop@mL
  1925  01D98A  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  1926  01D98E  C01F  F01B         	movff	turnRight135@mR,stop@mR
  1927  01D992  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  1928  01D996  EC48  F0E9         	call	_stop	;wreg free
  1929  01D99A                     
  1930                           ;dc_motor.c: 162:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1931  01D99A  0E05               	movlw	5
  1932  01D99C  6E22               	movwf	(??_turnRight135+1)^0,c
  1933  01D99E  0E0F               	movlw	15
  1934  01D9A0  6E21               	movwf	??_turnRight135^0,c
  1935  01D9A2  0EF1               	movlw	241
  1936  01D9A4                     u4297:
  1937  01D9A4  2EE8               	decfsz	wreg,f,c
  1938  01D9A6  D7FE               	bra	u4297
  1939  01D9A8  2E21               	decfsz	??_turnRight135^0,f,c
  1940  01D9AA  D7FC               	bra	u4297
  1941  01D9AC  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  1942  01D9AE  D7FA               	bra	u4297
  1943  01D9B0  F000               	nop	
  1944  01D9B2                     
  1945                           ;dc_motor.c: 163:     reverse(mL, mR);
  1946  01D9B2  C01D  F019         	movff	turnRight135@mL,reverse@mL
  1947  01D9B6  C01E  F01A         	movff	turnRight135@mL+1,reverse@mL+1
  1948  01D9BA  C01F  F01B         	movff	turnRight135@mR,reverse@mR
  1949  01D9BE  C020  F01C         	movff	turnRight135@mR+1,reverse@mR+1
  1950  01D9C2  EC77  F0E8         	call	_reverse	;wreg free
  1951                           
  1952                           ;dc_motor.c: 164:     _delay((unsigned long)((400)*(64000000/4000.0)));
  1953  01D9C6  0E21               	movlw	33
  1954  01D9C8  6E22               	movwf	(??_turnRight135+1)^0,c
  1955  01D9CA  0E78               	movlw	120
  1956  01D9CC  6E21               	movwf	??_turnRight135^0,c
  1957  01D9CE  0E98               	movlw	152
  1958  01D9D0                     u4307:
  1959  01D9D0  2EE8               	decfsz	wreg,f,c
  1960  01D9D2  D7FE               	bra	u4307
  1961  01D9D4  2E21               	decfsz	??_turnRight135^0,f,c
  1962  01D9D6  D7FC               	bra	u4307
  1963  01D9D8  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  1964  01D9DA  D7FA               	bra	u4307
  1965  01D9DC  D000               	nop2	
  1966  01D9DE                     
  1967                           ;dc_motor.c: 165:     stop(mL, mR);
  1968  01D9DE  C01D  F019         	movff	turnRight135@mL,stop@mL
  1969  01D9E2  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  1970  01D9E6  C01F  F01B         	movff	turnRight135@mR,stop@mR
  1971  01D9EA  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  1972  01D9EE  EC48  F0E9         	call	_stop	;wreg free
  1973  01D9F2                     
  1974                           ;dc_motor.c: 166:     _delay((unsigned long)((150)*(64000000/4000.0)));
  1975  01D9F2  0E0D               	movlw	13
  1976  01D9F4  6E22               	movwf	(??_turnRight135+1)^0,c
  1977  01D9F6  0E2D               	movlw	45
  1978  01D9F8  6E21               	movwf	??_turnRight135^0,c
  1979  01D9FA  0ED8               	movlw	216
  1980  01D9FC                     u4317:
  1981  01D9FC  2EE8               	decfsz	wreg,f,c
  1982  01D9FE  D7FE               	bra	u4317
  1983  01DA00  2E21               	decfsz	??_turnRight135^0,f,c
  1984  01DA02  D7FC               	bra	u4317
  1985  01DA04  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  1986  01DA06  D7FA               	bra	u4317
  1987  01DA08                     
  1988                           ;dc_motor.c: 168:     (*mL).direction = 1;
  1989  01DA08  EE20 F001          	lfsr	2,1
  1990  01DA0C  501D               	movf	turnRight135@mL^0,w,c
  1991  01DA0E  26D9               	addwf	fsr2l,f,c
  1992  01DA10  501E               	movf	(turnRight135@mL+1)^0,w,c
  1993  01DA12  22DA               	addwfc	fsr2h,f,c
  1994  01DA14  0E01               	movlw	1
  1995  01DA16  6EDF               	movwf	indf2,c
  1996  01DA18                     
  1997                           ;dc_motor.c: 169:     (*mR).direction = 0;
  1998  01DA18  EE20 F001          	lfsr	2,1
  1999  01DA1C  501F               	movf	turnRight135@mR^0,w,c
  2000  01DA1E  26D9               	addwf	fsr2l,f,c
  2001  01DA20  5020               	movf	(turnRight135@mR+1)^0,w,c
  2002  01DA22  22DA               	addwfc	fsr2h,f,c
  2003  01DA24  0E00               	movlw	0
  2004  01DA26  6EDF               	movwf	indf2,c
  2005  01DA28                     
  2006                           ;dc_motor.c: 170:     for (unsigned int i = 0; i < 75; ++i){
  2007  01DA28  0E00               	movlw	0
  2008  01DA2A  6E24               	movwf	(turnRight135@i+1)^0,c
  2009  01DA2C  0E00               	movlw	0
  2010  01DA2E  6E23               	movwf	turnRight135@i^0,c
  2011  01DA30                     l3770:
  2012                           
  2013                           ;dc_motor.c: 171:         (mL->power) += 1;
  2014  01DA30  C01D  FFD9         	movff	turnRight135@mL,fsr2l
  2015  01DA34  C01E  FFDA         	movff	turnRight135@mL+1,fsr2h
  2016  01DA38  2ADF               	incf	indf2,f,c
  2017                           
  2018                           ;dc_motor.c: 172:         (mR->power) += 1;
  2019  01DA3A  C01F  FFD9         	movff	turnRight135@mR,fsr2l
  2020  01DA3E  C020  FFDA         	movff	turnRight135@mR+1,fsr2h
  2021  01DA42  2ADF               	incf	indf2,f,c
  2022  01DA44                     
  2023                           ;dc_motor.c: 173:         setMotorPWM(mL);
  2024  01DA44  C01D  F00E         	movff	turnRight135@mL,setMotorPWM@m
  2025  01DA48  C01E  F00F         	movff	turnRight135@mL+1,setMotorPWM@m+1
  2026  01DA4C  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2027  01DA50                     
  2028                           ;dc_motor.c: 174:         setMotorPWM(mR);
  2029  01DA50  C01F  F00E         	movff	turnRight135@mR,setMotorPWM@m
  2030  01DA54  C020  F00F         	movff	turnRight135@mR+1,setMotorPWM@m+1
  2031  01DA58  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2032  01DA5C                     
  2033                           ;dc_motor.c: 175:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  2034  01DA5C  0EA0               	movlw	160
  2035  01DA5E                     u4327:
  2036  01DA5E  D000               	nop2	
  2037  01DA60  2EE8               	decfsz	wreg,f,c
  2038  01DA62  D7FD               	bra	u4327
  2039  01DA64                     
  2040                           ;dc_motor.c: 176:     }
  2041  01DA64  4A23               	infsnz	turnRight135@i^0,f,c
  2042  01DA66  2A24               	incf	(turnRight135@i+1)^0,f,c
  2043  01DA68  5024               	movf	(turnRight135@i+1)^0,w,c
  2044  01DA6A  E109               	bnz	u3680
  2045  01DA6C  0E4B               	movlw	75
  2046  01DA6E  5C23               	subwf	turnRight135@i^0,w,c
  2047  01DA70  A0D8               	btfss	status,0,c
  2048  01DA72  EF3D  F0ED         	goto	u3681
  2049  01DA76  EF3F  F0ED         	goto	u3680
  2050  01DA7A                     u3681:
  2051  01DA7A  EF18  F0ED         	goto	l3770
  2052  01DA7E                     u3680:
  2053  01DA7E                     
  2054                           ;dc_motor.c: 177:     _delay((unsigned long)((270)*(64000000/4000.0)));
  2055  01DA7E  0E16               	movlw	22
  2056  01DA80  6E22               	movwf	(??_turnRight135+1)^0,c
  2057  01DA82  0EEB               	movlw	235
  2058  01DA84  6E21               	movwf	??_turnRight135^0,c
  2059  01DA86  0E53               	movlw	83
  2060  01DA88                     u4337:
  2061  01DA88  2EE8               	decfsz	wreg,f,c
  2062  01DA8A  D7FE               	bra	u4337
  2063  01DA8C  2E21               	decfsz	??_turnRight135^0,f,c
  2064  01DA8E  D7FC               	bra	u4337
  2065  01DA90  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  2066  01DA92  D7FA               	bra	u4337
  2067  01DA94  F000               	nop	
  2068  01DA96                     
  2069                           ;dc_motor.c: 178:     stop(mL, mR);
  2070  01DA96  C01D  F019         	movff	turnRight135@mL,stop@mL
  2071  01DA9A  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  2072  01DA9E  C01F  F01B         	movff	turnRight135@mR,stop@mR
  2073  01DAA2  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  2074  01DAA6  EC48  F0E9         	call	_stop	;wreg free
  2075  01DAAA                     
  2076                           ;dc_motor.c: 179:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2077  01DAAA  0E05               	movlw	5
  2078  01DAAC  6E22               	movwf	(??_turnRight135+1)^0,c
  2079  01DAAE  0E0F               	movlw	15
  2080  01DAB0  6E21               	movwf	??_turnRight135^0,c
  2081  01DAB2  0EF1               	movlw	241
  2082  01DAB4                     u4347:
  2083  01DAB4  2EE8               	decfsz	wreg,f,c
  2084  01DAB6  D7FE               	bra	u4347
  2085  01DAB8  2E21               	decfsz	??_turnRight135^0,f,c
  2086  01DABA  D7FC               	bra	u4347
  2087  01DABC  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  2088  01DABE  D7FA               	bra	u4347
  2089  01DAC0  F000               	nop	
  2090  01DAC2  0012               	return		;funcret
  2091  01DAC4                     __end_of_turnRight135:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _turnLeft135 *****************
  2095 ;; Defined at:
  2096 ;;		line 111 in file "dc_motor.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  2099 ;;		 -> main@motorL(9), 
  2100 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  2101 ;;		 -> main@motorR(9), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  i               2   34[COMRAM] unsigned int 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;Total ram usage:        8 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 3
  2120 ;; This function calls:
  2121 ;;		_reverse
  2122 ;;		_setMotorPWM
  2123 ;;		_stop
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;;		_Black
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text3
  2131  01D70C                     __ptext3:
  2132                           	callstack 0
  2133  01D70C                     _turnLeft135:
  2134                           	callstack 27
  2135  01D70C                     
  2136                           ;dc_motor.c: 111: void turnLeft135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           112: {;dc_motor.c: 113:     stop(mL, mR);
  2137  01D70C  C01D  F019         	movff	turnLeft135@mL,stop@mL
  2138  01D710  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  2139  01D714  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  2140  01D718  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  2141  01D71C  EC48  F0E9         	call	_stop	;wreg free
  2142  01D720                     
  2143                           ;dc_motor.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2144  01D720  0E05               	movlw	5
  2145  01D722  6E22               	movwf	(??_turnLeft135+1)^0,c
  2146  01D724  0E0F               	movlw	15
  2147  01D726  6E21               	movwf	??_turnLeft135^0,c
  2148  01D728  0EF1               	movlw	241
  2149  01D72A                     u4357:
  2150  01D72A  2EE8               	decfsz	wreg,f,c
  2151  01D72C  D7FE               	bra	u4357
  2152  01D72E  2E21               	decfsz	??_turnLeft135^0,f,c
  2153  01D730  D7FC               	bra	u4357
  2154  01D732  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  2155  01D734  D7FA               	bra	u4357
  2156  01D736  F000               	nop	
  2157  01D738                     
  2158                           ;dc_motor.c: 115:     reverse(mL, mR);
  2159  01D738  C01D  F019         	movff	turnLeft135@mL,reverse@mL
  2160  01D73C  C01E  F01A         	movff	turnLeft135@mL+1,reverse@mL+1
  2161  01D740  C01F  F01B         	movff	turnLeft135@mR,reverse@mR
  2162  01D744  C020  F01C         	movff	turnLeft135@mR+1,reverse@mR+1
  2163  01D748  EC77  F0E8         	call	_reverse	;wreg free
  2164                           
  2165                           ;dc_motor.c: 116:     _delay((unsigned long)((400)*(64000000/4000.0)));
  2166  01D74C  0E21               	movlw	33
  2167  01D74E  6E22               	movwf	(??_turnLeft135+1)^0,c
  2168  01D750  0E78               	movlw	120
  2169  01D752  6E21               	movwf	??_turnLeft135^0,c
  2170  01D754  0E98               	movlw	152
  2171  01D756                     u4367:
  2172  01D756  2EE8               	decfsz	wreg,f,c
  2173  01D758  D7FE               	bra	u4367
  2174  01D75A  2E21               	decfsz	??_turnLeft135^0,f,c
  2175  01D75C  D7FC               	bra	u4367
  2176  01D75E  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  2177  01D760  D7FA               	bra	u4367
  2178  01D762  D000               	nop2	
  2179  01D764                     
  2180                           ;dc_motor.c: 117:     stop(mL, mR);
  2181  01D764  C01D  F019         	movff	turnLeft135@mL,stop@mL
  2182  01D768  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  2183  01D76C  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  2184  01D770  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  2185  01D774  EC48  F0E9         	call	_stop	;wreg free
  2186  01D778                     
  2187                           ;dc_motor.c: 118:     _delay((unsigned long)((150)*(64000000/4000.0)));
  2188  01D778  0E0D               	movlw	13
  2189  01D77A  6E22               	movwf	(??_turnLeft135+1)^0,c
  2190  01D77C  0E2D               	movlw	45
  2191  01D77E  6E21               	movwf	??_turnLeft135^0,c
  2192  01D780  0ED8               	movlw	216
  2193  01D782                     u4377:
  2194  01D782  2EE8               	decfsz	wreg,f,c
  2195  01D784  D7FE               	bra	u4377
  2196  01D786  2E21               	decfsz	??_turnLeft135^0,f,c
  2197  01D788  D7FC               	bra	u4377
  2198  01D78A  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  2199  01D78C  D7FA               	bra	u4377
  2200  01D78E                     
  2201                           ;dc_motor.c: 120:     (*mL).direction = 0;
  2202  01D78E  EE20 F001          	lfsr	2,1
  2203  01D792  501D               	movf	turnLeft135@mL^0,w,c
  2204  01D794  26D9               	addwf	fsr2l,f,c
  2205  01D796  501E               	movf	(turnLeft135@mL+1)^0,w,c
  2206  01D798  22DA               	addwfc	fsr2h,f,c
  2207  01D79A  0E00               	movlw	0
  2208  01D79C  6EDF               	movwf	indf2,c
  2209  01D79E                     
  2210                           ;dc_motor.c: 121:     (*mR).direction = 1;
  2211  01D79E  EE20 F001          	lfsr	2,1
  2212  01D7A2  501F               	movf	turnLeft135@mR^0,w,c
  2213  01D7A4  26D9               	addwf	fsr2l,f,c
  2214  01D7A6  5020               	movf	(turnLeft135@mR+1)^0,w,c
  2215  01D7A8  22DA               	addwfc	fsr2h,f,c
  2216  01D7AA  0E01               	movlw	1
  2217  01D7AC  6EDF               	movwf	indf2,c
  2218  01D7AE                     
  2219                           ;dc_motor.c: 122:     for (unsigned int i = 0; i < 75; ++i){
  2220  01D7AE  0E00               	movlw	0
  2221  01D7B0  6E24               	movwf	(turnLeft135@i+1)^0,c
  2222  01D7B2  0E00               	movlw	0
  2223  01D7B4  6E23               	movwf	turnLeft135@i^0,c
  2224  01D7B6                     l3732:
  2225                           
  2226                           ;dc_motor.c: 123:         (mL->power) += 1;
  2227  01D7B6  C01D  FFD9         	movff	turnLeft135@mL,fsr2l
  2228  01D7BA  C01E  FFDA         	movff	turnLeft135@mL+1,fsr2h
  2229  01D7BE  2ADF               	incf	indf2,f,c
  2230                           
  2231                           ;dc_motor.c: 124:         (mR->power) += 1;
  2232  01D7C0  C01F  FFD9         	movff	turnLeft135@mR,fsr2l
  2233  01D7C4  C020  FFDA         	movff	turnLeft135@mR+1,fsr2h
  2234  01D7C8  2ADF               	incf	indf2,f,c
  2235  01D7CA                     
  2236                           ;dc_motor.c: 125:         setMotorPWM(mL);
  2237  01D7CA  C01D  F00E         	movff	turnLeft135@mL,setMotorPWM@m
  2238  01D7CE  C01E  F00F         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  2239  01D7D2  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2240  01D7D6                     
  2241                           ;dc_motor.c: 126:         setMotorPWM(mR);
  2242  01D7D6  C01F  F00E         	movff	turnLeft135@mR,setMotorPWM@m
  2243  01D7DA  C020  F00F         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  2244  01D7DE  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2245  01D7E2                     
  2246                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  2247  01D7E2  0EA0               	movlw	160
  2248  01D7E4                     u4387:
  2249  01D7E4  D000               	nop2	
  2250  01D7E6  2EE8               	decfsz	wreg,f,c
  2251  01D7E8  D7FD               	bra	u4387
  2252  01D7EA                     
  2253                           ;dc_motor.c: 128:     }
  2254  01D7EA  4A23               	infsnz	turnLeft135@i^0,f,c
  2255  01D7EC  2A24               	incf	(turnLeft135@i+1)^0,f,c
  2256  01D7EE  5024               	movf	(turnLeft135@i+1)^0,w,c
  2257  01D7F0  E109               	bnz	u3670
  2258  01D7F2  0E4B               	movlw	75
  2259  01D7F4  5C23               	subwf	turnLeft135@i^0,w,c
  2260  01D7F6  A0D8               	btfss	status,0,c
  2261  01D7F8  EF00  F0EC         	goto	u3671
  2262  01D7FC  EF02  F0EC         	goto	u3670
  2263  01D800                     u3671:
  2264  01D800  EFDB  F0EB         	goto	l3732
  2265  01D804                     u3670:
  2266  01D804                     
  2267                           ;dc_motor.c: 129:     _delay((unsigned long)((255)*(64000000/4000.0)));
  2268  01D804  0E15               	movlw	21
  2269  01D806  6E22               	movwf	(??_turnLeft135+1)^0,c
  2270  01D808  0EB3               	movlw	179
  2271  01D80A  6E21               	movwf	??_turnLeft135^0,c
  2272  01D80C  0EA4               	movlw	164
  2273  01D80E                     u4397:
  2274  01D80E  2EE8               	decfsz	wreg,f,c
  2275  01D810  D7FE               	bra	u4397
  2276  01D812  2E21               	decfsz	??_turnLeft135^0,f,c
  2277  01D814  D7FC               	bra	u4397
  2278  01D816  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  2279  01D818  D7FA               	bra	u4397
  2280  01D81A                     
  2281                           ;dc_motor.c: 130:     stop(mL, mR);
  2282  01D81A  C01D  F019         	movff	turnLeft135@mL,stop@mL
  2283  01D81E  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  2284  01D822  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  2285  01D826  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  2286  01D82A  EC48  F0E9         	call	_stop	;wreg free
  2287  01D82E                     
  2288                           ;dc_motor.c: 131:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2289  01D82E  0E05               	movlw	5
  2290  01D830  6E22               	movwf	(??_turnLeft135+1)^0,c
  2291  01D832  0E0F               	movlw	15
  2292  01D834  6E21               	movwf	??_turnLeft135^0,c
  2293  01D836  0EF1               	movlw	241
  2294  01D838                     u4407:
  2295  01D838  2EE8               	decfsz	wreg,f,c
  2296  01D83A  D7FE               	bra	u4407
  2297  01D83C  2E21               	decfsz	??_turnLeft135^0,f,c
  2298  01D83E  D7FC               	bra	u4407
  2299  01D840  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  2300  01D842  D7FA               	bra	u4407
  2301  01D844  F000               	nop	
  2302  01D846  0012               	return		;funcret
  2303  01D848                     __end_of_turnLeft135:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _reverseTurnRight90 *****************
  2307 ;; Defined at:
  2308 ;;		line 218 in file "dc_motor.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  2311 ;;		 -> main@motorL(9), 
  2312 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  2313 ;;		 -> main@motorR(9), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;Total ram usage:        6 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 4
  2332 ;; This function calls:
  2333 ;;		_setMotorPWM
  2334 ;;		_stop
  2335 ;;		_turnRight90
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;;		_Black
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text4
  2343  01D416                     __ptext4:
  2344                           	callstack 0
  2345  01D416                     _reverseTurnRight90:
  2346                           	callstack 26
  2347  01D416                     
  2348                           ;dc_motor.c: 218: void reverseTurnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_m
      +                          otor.c: 219: {;dc_motor.c: 220:     stop(mL, mR);
  2349  01D416  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  2350  01D41A  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  2351  01D41E  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  2352  01D422  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  2353  01D426  EC48  F0E9         	call	_stop	;wreg free
  2354  01D42A                     
  2355                           ;dc_motor.c: 221:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2356  01D42A  0E05               	movlw	5
  2357  01D42C  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2358  01D42E  0E0F               	movlw	15
  2359  01D430  6E29               	movwf	??_reverseTurnRight90^0,c
  2360  01D432  0EF1               	movlw	241
  2361  01D434                     u4417:
  2362  01D434  2EE8               	decfsz	wreg,f,c
  2363  01D436  D7FE               	bra	u4417
  2364  01D438  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2365  01D43A  D7FC               	bra	u4417
  2366  01D43C  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2367  01D43E  D7FA               	bra	u4417
  2368  01D440  F000               	nop	
  2369  01D442                     
  2370                           ;dc_motor.c: 222:     (*mL).direction = 0;
  2371  01D442  EE20 F001          	lfsr	2,1
  2372  01D446  5025               	movf	reverseTurnRight90@mL^0,w,c
  2373  01D448  26D9               	addwf	fsr2l,f,c
  2374  01D44A  5026               	movf	(reverseTurnRight90@mL+1)^0,w,c
  2375  01D44C  22DA               	addwfc	fsr2h,f,c
  2376  01D44E  0E00               	movlw	0
  2377  01D450  6EDF               	movwf	indf2,c
  2378  01D452                     
  2379                           ;dc_motor.c: 223:     (*mR).direction = 0;
  2380  01D452  EE20 F001          	lfsr	2,1
  2381  01D456  5027               	movf	reverseTurnRight90@mR^0,w,c
  2382  01D458  26D9               	addwf	fsr2l,f,c
  2383  01D45A  5028               	movf	(reverseTurnRight90@mR+1)^0,w,c
  2384  01D45C  22DA               	addwfc	fsr2h,f,c
  2385  01D45E  0E00               	movlw	0
  2386  01D460  6EDF               	movwf	indf2,c
  2387  01D462                     
  2388                           ;dc_motor.c: 224:     (*mL).power = 60;
  2389  01D462  C025  FFD9         	movff	reverseTurnRight90@mL,fsr2l
  2390  01D466  C026  FFDA         	movff	reverseTurnRight90@mL+1,fsr2h
  2391  01D46A  0E3C               	movlw	60
  2392  01D46C  6EDF               	movwf	indf2,c
  2393  01D46E                     
  2394                           ;dc_motor.c: 225:     (*mR).power = 60;
  2395  01D46E  C027  FFD9         	movff	reverseTurnRight90@mR,fsr2l
  2396  01D472  C028  FFDA         	movff	reverseTurnRight90@mR+1,fsr2h
  2397  01D476  0E3C               	movlw	60
  2398  01D478  6EDF               	movwf	indf2,c
  2399  01D47A                     
  2400                           ;dc_motor.c: 226:     setMotorPWM(mL);
  2401  01D47A  C025  F00E         	movff	reverseTurnRight90@mL,setMotorPWM@m
  2402  01D47E  C026  F00F         	movff	reverseTurnRight90@mL+1,setMotorPWM@m+1
  2403  01D482  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2404  01D486                     
  2405                           ;dc_motor.c: 227:     setMotorPWM(mR);
  2406  01D486  C027  F00E         	movff	reverseTurnRight90@mR,setMotorPWM@m
  2407  01D48A  C028  F00F         	movff	reverseTurnRight90@mR+1,setMotorPWM@m+1
  2408  01D48E  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2409  01D492                     
  2410                           ;dc_motor.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2411  01D492  0E29               	movlw	41
  2412  01D494  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2413  01D496  0E96               	movlw	150
  2414  01D498  6E29               	movwf	??_reverseTurnRight90^0,c
  2415  01D49A  0E7F               	movlw	127
  2416  01D49C                     u4427:
  2417  01D49C  2EE8               	decfsz	wreg,f,c
  2418  01D49E  D7FE               	bra	u4427
  2419  01D4A0  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2420  01D4A2  D7FC               	bra	u4427
  2421  01D4A4  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2422  01D4A6  D7FA               	bra	u4427
  2423  01D4A8  F000               	nop	
  2424                           
  2425                           ;dc_motor.c: 229:     stop(mL, mR);
  2426  01D4AA  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  2427  01D4AE  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  2428  01D4B2  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  2429  01D4B6  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  2430  01D4BA  EC48  F0E9         	call	_stop	;wreg free
  2431  01D4BE                     
  2432                           ;dc_motor.c: 230:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2433  01D4BE  0E19               	movlw	25
  2434  01D4C0  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2435  01D4C2  0E5A               	movlw	90
  2436  01D4C4  6E29               	movwf	??_reverseTurnRight90^0,c
  2437  01D4C6  0EB2               	movlw	178
  2438  01D4C8                     u4437:
  2439  01D4C8  2EE8               	decfsz	wreg,f,c
  2440  01D4CA  D7FE               	bra	u4437
  2441  01D4CC  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2442  01D4CE  D7FC               	bra	u4437
  2443  01D4D0  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2444  01D4D2  D7FA               	bra	u4437
  2445  01D4D4                     
  2446                           ;dc_motor.c: 231:     turnRight90(mL, mR);
  2447  01D4D4  C025  F01D         	movff	reverseTurnRight90@mL,turnRight90@mL
  2448  01D4D8  C026  F01E         	movff	reverseTurnRight90@mL+1,turnRight90@mL+1
  2449  01D4DC  C027  F01F         	movff	reverseTurnRight90@mR,turnRight90@mR
  2450  01D4E0  C028  F020         	movff	reverseTurnRight90@mR+1,turnRight90@mR+1
  2451  01D4E4  EC24  F0EC         	call	_turnRight90	;wreg free
  2452                           
  2453                           ;dc_motor.c: 232:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2454  01D4E8  0E09               	movlw	9
  2455  01D4EA  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2456  01D4EC  0E1E               	movlw	30
  2457  01D4EE  6E29               	movwf	??_reverseTurnRight90^0,c
  2458  01D4F0  0EE4               	movlw	228
  2459  01D4F2                     u4447:
  2460  01D4F2  2EE8               	decfsz	wreg,f,c
  2461  01D4F4  D7FE               	bra	u4447
  2462  01D4F6  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2463  01D4F8  D7FC               	bra	u4447
  2464  01D4FA  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2465  01D4FC  D7FA               	bra	u4447
  2466  01D4FE  D000               	nop2	
  2467  01D500  0012               	return		;funcret
  2468  01D502                     __end_of_reverseTurnRight90:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _turnRight90 *****************
  2472 ;; Defined at:
  2473 ;;		line 135 in file "dc_motor.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  2476 ;;		 -> main@motorL(9), 
  2477 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  2478 ;;		 -> main@motorR(9), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  i               2   34[COMRAM] unsigned int 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;Total ram usage:        8 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 3
  2497 ;; This function calls:
  2498 ;;		_reverse
  2499 ;;		_setMotorPWM
  2500 ;;		_stop
  2501 ;; This function is called by:
  2502 ;;		_reverseTurnRight90
  2503 ;;		_main
  2504 ;;		_Black
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text5
  2509  01D848                     __ptext5:
  2510                           	callstack 0
  2511  01D848                     _turnRight90:
  2512                           	callstack 27
  2513  01D848                     
  2514                           ;dc_motor.c: 135: void turnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           136: {;dc_motor.c: 137:     stop(mL, mR);
  2515  01D848  C01D  F019         	movff	turnRight90@mL,stop@mL
  2516  01D84C  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  2517  01D850  C01F  F01B         	movff	turnRight90@mR,stop@mR
  2518  01D854  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  2519  01D858  EC48  F0E9         	call	_stop	;wreg free
  2520  01D85C                     
  2521                           ;dc_motor.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2522  01D85C  0E05               	movlw	5
  2523  01D85E  6E22               	movwf	(??_turnRight90+1)^0,c
  2524  01D860  0E0F               	movlw	15
  2525  01D862  6E21               	movwf	??_turnRight90^0,c
  2526  01D864  0EF1               	movlw	241
  2527  01D866                     u4457:
  2528  01D866  2EE8               	decfsz	wreg,f,c
  2529  01D868  D7FE               	bra	u4457
  2530  01D86A  2E21               	decfsz	??_turnRight90^0,f,c
  2531  01D86C  D7FC               	bra	u4457
  2532  01D86E  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  2533  01D870  D7FA               	bra	u4457
  2534  01D872  F000               	nop	
  2535  01D874                     
  2536                           ;dc_motor.c: 139:     reverse(mL, mR);
  2537  01D874  C01D  F019         	movff	turnRight90@mL,reverse@mL
  2538  01D878  C01E  F01A         	movff	turnRight90@mL+1,reverse@mL+1
  2539  01D87C  C01F  F01B         	movff	turnRight90@mR,reverse@mR
  2540  01D880  C020  F01C         	movff	turnRight90@mR+1,reverse@mR+1
  2541  01D884  EC77  F0E8         	call	_reverse	;wreg free
  2542                           
  2543                           ;dc_motor.c: 140:     _delay((unsigned long)((400)*(64000000/4000.0)));
  2544  01D888  0E21               	movlw	33
  2545  01D88A  6E22               	movwf	(??_turnRight90+1)^0,c
  2546  01D88C  0E78               	movlw	120
  2547  01D88E  6E21               	movwf	??_turnRight90^0,c
  2548  01D890  0E98               	movlw	152
  2549  01D892                     u4467:
  2550  01D892  2EE8               	decfsz	wreg,f,c
  2551  01D894  D7FE               	bra	u4467
  2552  01D896  2E21               	decfsz	??_turnRight90^0,f,c
  2553  01D898  D7FC               	bra	u4467
  2554  01D89A  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  2555  01D89C  D7FA               	bra	u4467
  2556  01D89E  D000               	nop2	
  2557  01D8A0                     
  2558                           ;dc_motor.c: 141:     stop(mL, mR);
  2559  01D8A0  C01D  F019         	movff	turnRight90@mL,stop@mL
  2560  01D8A4  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  2561  01D8A8  C01F  F01B         	movff	turnRight90@mR,stop@mR
  2562  01D8AC  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  2563  01D8B0  EC48  F0E9         	call	_stop	;wreg free
  2564  01D8B4                     
  2565                           ;dc_motor.c: 142:     _delay((unsigned long)((150)*(64000000/4000.0)));
  2566  01D8B4  0E0D               	movlw	13
  2567  01D8B6  6E22               	movwf	(??_turnRight90+1)^0,c
  2568  01D8B8  0E2D               	movlw	45
  2569  01D8BA  6E21               	movwf	??_turnRight90^0,c
  2570  01D8BC  0ED8               	movlw	216
  2571  01D8BE                     u4477:
  2572  01D8BE  2EE8               	decfsz	wreg,f,c
  2573  01D8C0  D7FE               	bra	u4477
  2574  01D8C2  2E21               	decfsz	??_turnRight90^0,f,c
  2575  01D8C4  D7FC               	bra	u4477
  2576  01D8C6  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  2577  01D8C8  D7FA               	bra	u4477
  2578  01D8CA                     
  2579                           ;dc_motor.c: 144:     (*mL).direction = 1;
  2580  01D8CA  EE20 F001          	lfsr	2,1
  2581  01D8CE  501D               	movf	turnRight90@mL^0,w,c
  2582  01D8D0  26D9               	addwf	fsr2l,f,c
  2583  01D8D2  501E               	movf	(turnRight90@mL+1)^0,w,c
  2584  01D8D4  22DA               	addwfc	fsr2h,f,c
  2585  01D8D6  0E01               	movlw	1
  2586  01D8D8  6EDF               	movwf	indf2,c
  2587  01D8DA                     
  2588                           ;dc_motor.c: 145:     (*mR).direction = 0;
  2589  01D8DA  EE20 F001          	lfsr	2,1
  2590  01D8DE  501F               	movf	turnRight90@mR^0,w,c
  2591  01D8E0  26D9               	addwf	fsr2l,f,c
  2592  01D8E2  5020               	movf	(turnRight90@mR+1)^0,w,c
  2593  01D8E4  22DA               	addwfc	fsr2h,f,c
  2594  01D8E6  0E00               	movlw	0
  2595  01D8E8  6EDF               	movwf	indf2,c
  2596  01D8EA                     
  2597                           ;dc_motor.c: 146:     for (unsigned int i = 0; i < 75; ++i){
  2598  01D8EA  0E00               	movlw	0
  2599  01D8EC  6E24               	movwf	(turnRight90@i+1)^0,c
  2600  01D8EE  0E00               	movlw	0
  2601  01D8F0  6E23               	movwf	turnRight90@i^0,c
  2602  01D8F2                     l2916:
  2603                           
  2604                           ;dc_motor.c: 147:         (mL->power) += 1;
  2605  01D8F2  C01D  FFD9         	movff	turnRight90@mL,fsr2l
  2606  01D8F6  C01E  FFDA         	movff	turnRight90@mL+1,fsr2h
  2607  01D8FA  2ADF               	incf	indf2,f,c
  2608                           
  2609                           ;dc_motor.c: 148:         (mR->power) += 1;
  2610  01D8FC  C01F  FFD9         	movff	turnRight90@mR,fsr2l
  2611  01D900  C020  FFDA         	movff	turnRight90@mR+1,fsr2h
  2612  01D904  2ADF               	incf	indf2,f,c
  2613  01D906                     
  2614                           ;dc_motor.c: 149:         setMotorPWM(mL);
  2615  01D906  C01D  F00E         	movff	turnRight90@mL,setMotorPWM@m
  2616  01D90A  C01E  F00F         	movff	turnRight90@mL+1,setMotorPWM@m+1
  2617  01D90E  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2618  01D912                     
  2619                           ;dc_motor.c: 150:         setMotorPWM(mR);
  2620  01D912  C01F  F00E         	movff	turnRight90@mR,setMotorPWM@m
  2621  01D916  C020  F00F         	movff	turnRight90@mR+1,setMotorPWM@m+1
  2622  01D91A  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2623  01D91E                     
  2624                           ;dc_motor.c: 151:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  2625  01D91E  0EA0               	movlw	160
  2626  01D920                     u4487:
  2627  01D920  D000               	nop2	
  2628  01D922  2EE8               	decfsz	wreg,f,c
  2629  01D924  D7FD               	bra	u4487
  2630  01D926                     
  2631                           ;dc_motor.c: 152:     }
  2632  01D926  4A23               	infsnz	turnRight90@i^0,f,c
  2633  01D928  2A24               	incf	(turnRight90@i+1)^0,f,c
  2634  01D92A  5024               	movf	(turnRight90@i+1)^0,w,c
  2635  01D92C  E109               	bnz	u2300
  2636  01D92E  0E4B               	movlw	75
  2637  01D930  5C23               	subwf	turnRight90@i^0,w,c
  2638  01D932  A0D8               	btfss	status,0,c
  2639  01D934  EF9E  F0EC         	goto	u2301
  2640  01D938  EFA0  F0EC         	goto	u2300
  2641  01D93C                     u2301:
  2642  01D93C  EF79  F0EC         	goto	l2916
  2643  01D940                     u2300:
  2644  01D940                     
  2645                           ;dc_motor.c: 153:     _delay((unsigned long)((195)*(64000000/4000.0)));
  2646  01D940  0E10               	movlw	16
  2647  01D942  6E22               	movwf	(??_turnRight90+1)^0,c
  2648  01D944  0ED4               	movlw	212
  2649  01D946  6E21               	movwf	??_turnRight90^0,c
  2650  01D948  0EE6               	movlw	230
  2651  01D94A                     u4497:
  2652  01D94A  2EE8               	decfsz	wreg,f,c
  2653  01D94C  D7FE               	bra	u4497
  2654  01D94E  2E21               	decfsz	??_turnRight90^0,f,c
  2655  01D950  D7FC               	bra	u4497
  2656  01D952  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  2657  01D954  D7FA               	bra	u4497
  2658  01D956  D000               	nop2	
  2659  01D958                     
  2660                           ;dc_motor.c: 154:     stop(mL, mR);
  2661  01D958  C01D  F019         	movff	turnRight90@mL,stop@mL
  2662  01D95C  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  2663  01D960  C01F  F01B         	movff	turnRight90@mR,stop@mR
  2664  01D964  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  2665  01D968  EC48  F0E9         	call	_stop	;wreg free
  2666  01D96C                     
  2667                           ;dc_motor.c: 155:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2668  01D96C  0E05               	movlw	5
  2669  01D96E  6E22               	movwf	(??_turnRight90+1)^0,c
  2670  01D970  0E0F               	movlw	15
  2671  01D972  6E21               	movwf	??_turnRight90^0,c
  2672  01D974  0EF1               	movlw	241
  2673  01D976                     u4507:
  2674  01D976  2EE8               	decfsz	wreg,f,c
  2675  01D978  D7FE               	bra	u4507
  2676  01D97A  2E21               	decfsz	??_turnRight90^0,f,c
  2677  01D97C  D7FC               	bra	u4507
  2678  01D97E  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  2679  01D980  D7FA               	bra	u4507
  2680  01D982  F000               	nop	
  2681  01D984  0012               	return		;funcret
  2682  01D986                     __end_of_turnRight90:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function _reverseTurnLeft90 *****************
  2686 ;; Defined at:
  2687 ;;		line 236 in file "dc_motor.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  2690 ;;		 -> main@motorL(9), 
  2691 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  2692 ;;		 -> main@motorR(9), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 4
  2711 ;; This function calls:
  2712 ;;		_setMotorPWM
  2713 ;;		_stop
  2714 ;;		_turnLeft90
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;;		_Black
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text6
  2722  01D32A                     __ptext6:
  2723                           	callstack 0
  2724  01D32A                     _reverseTurnLeft90:
  2725                           	callstack 26
  2726  01D32A                     
  2727                           ;dc_motor.c: 236: void reverseTurnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 237: {;dc_motor.c: 238:     stop(mL, mR);
  2728  01D32A  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  2729  01D32E  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  2730  01D332  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  2731  01D336  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  2732  01D33A  EC48  F0E9         	call	_stop	;wreg free
  2733  01D33E                     
  2734                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2735  01D33E  0E05               	movlw	5
  2736  01D340  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2737  01D342  0E0F               	movlw	15
  2738  01D344  6E29               	movwf	??_reverseTurnLeft90^0,c
  2739  01D346  0EF1               	movlw	241
  2740  01D348                     u4517:
  2741  01D348  2EE8               	decfsz	wreg,f,c
  2742  01D34A  D7FE               	bra	u4517
  2743  01D34C  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2744  01D34E  D7FC               	bra	u4517
  2745  01D350  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2746  01D352  D7FA               	bra	u4517
  2747  01D354  F000               	nop	
  2748  01D356                     
  2749                           ;dc_motor.c: 240:     (*mL).direction = 0;
  2750  01D356  EE20 F001          	lfsr	2,1
  2751  01D35A  5025               	movf	reverseTurnLeft90@mL^0,w,c
  2752  01D35C  26D9               	addwf	fsr2l,f,c
  2753  01D35E  5026               	movf	(reverseTurnLeft90@mL+1)^0,w,c
  2754  01D360  22DA               	addwfc	fsr2h,f,c
  2755  01D362  0E00               	movlw	0
  2756  01D364  6EDF               	movwf	indf2,c
  2757  01D366                     
  2758                           ;dc_motor.c: 241:     (*mR).direction = 0;
  2759  01D366  EE20 F001          	lfsr	2,1
  2760  01D36A  5027               	movf	reverseTurnLeft90@mR^0,w,c
  2761  01D36C  26D9               	addwf	fsr2l,f,c
  2762  01D36E  5028               	movf	(reverseTurnLeft90@mR+1)^0,w,c
  2763  01D370  22DA               	addwfc	fsr2h,f,c
  2764  01D372  0E00               	movlw	0
  2765  01D374  6EDF               	movwf	indf2,c
  2766  01D376                     
  2767                           ;dc_motor.c: 242:     (*mL).power = 60;
  2768  01D376  C025  FFD9         	movff	reverseTurnLeft90@mL,fsr2l
  2769  01D37A  C026  FFDA         	movff	reverseTurnLeft90@mL+1,fsr2h
  2770  01D37E  0E3C               	movlw	60
  2771  01D380  6EDF               	movwf	indf2,c
  2772  01D382                     
  2773                           ;dc_motor.c: 243:     (*mR).power = 60;
  2774  01D382  C027  FFD9         	movff	reverseTurnLeft90@mR,fsr2l
  2775  01D386  C028  FFDA         	movff	reverseTurnLeft90@mR+1,fsr2h
  2776  01D38A  0E3C               	movlw	60
  2777  01D38C  6EDF               	movwf	indf2,c
  2778  01D38E                     
  2779                           ;dc_motor.c: 244:     setMotorPWM(mL);
  2780  01D38E  C025  F00E         	movff	reverseTurnLeft90@mL,setMotorPWM@m
  2781  01D392  C026  F00F         	movff	reverseTurnLeft90@mL+1,setMotorPWM@m+1
  2782  01D396  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2783  01D39A                     
  2784                           ;dc_motor.c: 245:     setMotorPWM(mR);
  2785  01D39A  C027  F00E         	movff	reverseTurnLeft90@mR,setMotorPWM@m
  2786  01D39E  C028  F00F         	movff	reverseTurnLeft90@mR+1,setMotorPWM@m+1
  2787  01D3A2  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2788  01D3A6                     
  2789                           ;dc_motor.c: 246:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2790  01D3A6  0E29               	movlw	41
  2791  01D3A8  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2792  01D3AA  0E96               	movlw	150
  2793  01D3AC  6E29               	movwf	??_reverseTurnLeft90^0,c
  2794  01D3AE  0E7F               	movlw	127
  2795  01D3B0                     u4527:
  2796  01D3B0  2EE8               	decfsz	wreg,f,c
  2797  01D3B2  D7FE               	bra	u4527
  2798  01D3B4  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2799  01D3B6  D7FC               	bra	u4527
  2800  01D3B8  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2801  01D3BA  D7FA               	bra	u4527
  2802  01D3BC  F000               	nop	
  2803                           
  2804                           ;dc_motor.c: 247:     stop(mL, mR);
  2805  01D3BE  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  2806  01D3C2  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  2807  01D3C6  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  2808  01D3CA  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  2809  01D3CE  EC48  F0E9         	call	_stop	;wreg free
  2810  01D3D2                     
  2811                           ;dc_motor.c: 248:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2812  01D3D2  0E19               	movlw	25
  2813  01D3D4  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2814  01D3D6  0E5A               	movlw	90
  2815  01D3D8  6E29               	movwf	??_reverseTurnLeft90^0,c
  2816  01D3DA  0EB2               	movlw	178
  2817  01D3DC                     u4537:
  2818  01D3DC  2EE8               	decfsz	wreg,f,c
  2819  01D3DE  D7FE               	bra	u4537
  2820  01D3E0  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2821  01D3E2  D7FC               	bra	u4537
  2822  01D3E4  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2823  01D3E6  D7FA               	bra	u4537
  2824  01D3E8                     
  2825                           ;dc_motor.c: 249:     turnLeft90(mL, mR);
  2826  01D3E8  C025  F01D         	movff	reverseTurnLeft90@mL,turnLeft90@mL
  2827  01D3EC  C026  F01E         	movff	reverseTurnLeft90@mL+1,turnLeft90@mL+1
  2828  01D3F0  C027  F01F         	movff	reverseTurnLeft90@mR,turnLeft90@mR
  2829  01D3F4  C028  F020         	movff	reverseTurnLeft90@mR+1,turnLeft90@mR+1
  2830  01D3F8  EC01  F0EE         	call	_turnLeft90	;wreg free
  2831                           
  2832                           ;dc_motor.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2833  01D3FC  0E09               	movlw	9
  2834  01D3FE  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2835  01D400  0E1E               	movlw	30
  2836  01D402  6E29               	movwf	??_reverseTurnLeft90^0,c
  2837  01D404  0EE4               	movlw	228
  2838  01D406                     u4547:
  2839  01D406  2EE8               	decfsz	wreg,f,c
  2840  01D408  D7FE               	bra	u4547
  2841  01D40A  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2842  01D40C  D7FC               	bra	u4547
  2843  01D40E  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2844  01D410  D7FA               	bra	u4547
  2845  01D412  D000               	nop2	
  2846  01D414  0012               	return		;funcret
  2847  01D416                     __end_of_reverseTurnLeft90:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _turnLeft90 *****************
  2851 ;; Defined at:
  2852 ;;		line 87 in file "dc_motor.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  2855 ;;		 -> main@motorL(9), 
  2856 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  2857 ;;		 -> main@motorR(9), 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  i               2   34[COMRAM] unsigned int 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;Total ram usage:        8 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 3
  2876 ;; This function calls:
  2877 ;;		_reverse
  2878 ;;		_setMotorPWM
  2879 ;;		_stop
  2880 ;; This function is called by:
  2881 ;;		_reverseTurnLeft90
  2882 ;;		_main
  2883 ;;		_Black
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text7
  2888  01DC02                     __ptext7:
  2889                           	callstack 0
  2890  01DC02                     _turnLeft90:
  2891                           	callstack 27
  2892  01DC02                     
  2893                           ;dc_motor.c: 87: void turnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 8
      +                          8: {;dc_motor.c: 89:     stop(mL, mR);
  2894  01DC02  C01D  F019         	movff	turnLeft90@mL,stop@mL
  2895  01DC06  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  2896  01DC0A  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  2897  01DC0E  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  2898  01DC12  EC48  F0E9         	call	_stop	;wreg free
  2899  01DC16                     
  2900                           ;dc_motor.c: 90:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2901  01DC16  0E05               	movlw	5
  2902  01DC18  6E22               	movwf	(??_turnLeft90+1)^0,c
  2903  01DC1A  0E0F               	movlw	15
  2904  01DC1C  6E21               	movwf	??_turnLeft90^0,c
  2905  01DC1E  0EF1               	movlw	241
  2906  01DC20                     u4557:
  2907  01DC20  2EE8               	decfsz	wreg,f,c
  2908  01DC22  D7FE               	bra	u4557
  2909  01DC24  2E21               	decfsz	??_turnLeft90^0,f,c
  2910  01DC26  D7FC               	bra	u4557
  2911  01DC28  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  2912  01DC2A  D7FA               	bra	u4557
  2913  01DC2C  F000               	nop	
  2914  01DC2E                     
  2915                           ;dc_motor.c: 91:     reverse(mL, mR);
  2916  01DC2E  C01D  F019         	movff	turnLeft90@mL,reverse@mL
  2917  01DC32  C01E  F01A         	movff	turnLeft90@mL+1,reverse@mL+1
  2918  01DC36  C01F  F01B         	movff	turnLeft90@mR,reverse@mR
  2919  01DC3A  C020  F01C         	movff	turnLeft90@mR+1,reverse@mR+1
  2920  01DC3E  EC77  F0E8         	call	_reverse	;wreg free
  2921                           
  2922                           ;dc_motor.c: 92:     _delay((unsigned long)((400)*(64000000/4000.0)));
  2923  01DC42  0E21               	movlw	33
  2924  01DC44  6E22               	movwf	(??_turnLeft90+1)^0,c
  2925  01DC46  0E78               	movlw	120
  2926  01DC48  6E21               	movwf	??_turnLeft90^0,c
  2927  01DC4A  0E98               	movlw	152
  2928  01DC4C                     u4567:
  2929  01DC4C  2EE8               	decfsz	wreg,f,c
  2930  01DC4E  D7FE               	bra	u4567
  2931  01DC50  2E21               	decfsz	??_turnLeft90^0,f,c
  2932  01DC52  D7FC               	bra	u4567
  2933  01DC54  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  2934  01DC56  D7FA               	bra	u4567
  2935  01DC58  D000               	nop2	
  2936  01DC5A                     
  2937                           ;dc_motor.c: 93:     stop(mL, mR);
  2938  01DC5A  C01D  F019         	movff	turnLeft90@mL,stop@mL
  2939  01DC5E  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  2940  01DC62  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  2941  01DC66  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  2942  01DC6A  EC48  F0E9         	call	_stop	;wreg free
  2943  01DC6E                     
  2944                           ;dc_motor.c: 94:     _delay((unsigned long)((150)*(64000000/4000.0)));
  2945  01DC6E  0E0D               	movlw	13
  2946  01DC70  6E22               	movwf	(??_turnLeft90+1)^0,c
  2947  01DC72  0E2D               	movlw	45
  2948  01DC74  6E21               	movwf	??_turnLeft90^0,c
  2949  01DC76  0ED8               	movlw	216
  2950  01DC78                     u4577:
  2951  01DC78  2EE8               	decfsz	wreg,f,c
  2952  01DC7A  D7FE               	bra	u4577
  2953  01DC7C  2E21               	decfsz	??_turnLeft90^0,f,c
  2954  01DC7E  D7FC               	bra	u4577
  2955  01DC80  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  2956  01DC82  D7FA               	bra	u4577
  2957  01DC84                     
  2958                           ;dc_motor.c: 96:     (*mL).direction = 0;
  2959  01DC84  EE20 F001          	lfsr	2,1
  2960  01DC88  501D               	movf	turnLeft90@mL^0,w,c
  2961  01DC8A  26D9               	addwf	fsr2l,f,c
  2962  01DC8C  501E               	movf	(turnLeft90@mL+1)^0,w,c
  2963  01DC8E  22DA               	addwfc	fsr2h,f,c
  2964  01DC90  0E00               	movlw	0
  2965  01DC92  6EDF               	movwf	indf2,c
  2966  01DC94                     
  2967                           ;dc_motor.c: 97:     (*mR).direction = 1;
  2968  01DC94  EE20 F001          	lfsr	2,1
  2969  01DC98  501F               	movf	turnLeft90@mR^0,w,c
  2970  01DC9A  26D9               	addwf	fsr2l,f,c
  2971  01DC9C  5020               	movf	(turnLeft90@mR+1)^0,w,c
  2972  01DC9E  22DA               	addwfc	fsr2h,f,c
  2973  01DCA0  0E01               	movlw	1
  2974  01DCA2  6EDF               	movwf	indf2,c
  2975  01DCA4                     
  2976                           ;dc_motor.c: 98:     for (unsigned int i = 0; i < 75; ++i){
  2977  01DCA4  0E00               	movlw	0
  2978  01DCA6  6E24               	movwf	(turnLeft90@i+1)^0,c
  2979  01DCA8  0E00               	movlw	0
  2980  01DCAA  6E23               	movwf	turnLeft90@i^0,c
  2981  01DCAC                     l2878:
  2982                           
  2983                           ;dc_motor.c: 99:         (mL->power) += 1;
  2984  01DCAC  C01D  FFD9         	movff	turnLeft90@mL,fsr2l
  2985  01DCB0  C01E  FFDA         	movff	turnLeft90@mL+1,fsr2h
  2986  01DCB4  2ADF               	incf	indf2,f,c
  2987                           
  2988                           ;dc_motor.c: 100:         (mR->power) += 1;
  2989  01DCB6  C01F  FFD9         	movff	turnLeft90@mR,fsr2l
  2990  01DCBA  C020  FFDA         	movff	turnLeft90@mR+1,fsr2h
  2991  01DCBE  2ADF               	incf	indf2,f,c
  2992  01DCC0                     
  2993                           ;dc_motor.c: 101:         setMotorPWM(mL);
  2994  01DCC0  C01D  F00E         	movff	turnLeft90@mL,setMotorPWM@m
  2995  01DCC4  C01E  F00F         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  2996  01DCC8  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  2997  01DCCC                     
  2998                           ;dc_motor.c: 102:         setMotorPWM(mR);
  2999  01DCCC  C01F  F00E         	movff	turnLeft90@mR,setMotorPWM@m
  3000  01DCD0  C020  F00F         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  3001  01DCD4  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3002  01DCD8                     
  3003                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3004  01DCD8  0EA0               	movlw	160
  3005  01DCDA                     u4587:
  3006  01DCDA  D000               	nop2	
  3007  01DCDC  2EE8               	decfsz	wreg,f,c
  3008  01DCDE  D7FD               	bra	u4587
  3009  01DCE0                     
  3010                           ;dc_motor.c: 104:     }
  3011  01DCE0  4A23               	infsnz	turnLeft90@i^0,f,c
  3012  01DCE2  2A24               	incf	(turnLeft90@i+1)^0,f,c
  3013  01DCE4  5024               	movf	(turnLeft90@i+1)^0,w,c
  3014  01DCE6  E109               	bnz	u2290
  3015  01DCE8  0E4B               	movlw	75
  3016  01DCEA  5C23               	subwf	turnLeft90@i^0,w,c
  3017  01DCEC  A0D8               	btfss	status,0,c
  3018  01DCEE  EF7B  F0EE         	goto	u2291
  3019  01DCF2  EF7D  F0EE         	goto	u2290
  3020  01DCF6                     u2291:
  3021  01DCF6  EF56  F0EE         	goto	l2878
  3022  01DCFA                     u2290:
  3023  01DCFA                     
  3024                           ;dc_motor.c: 105:     _delay((unsigned long)((190)*(64000000/4000.0)));
  3025  01DCFA  0E10               	movlw	16
  3026  01DCFC  6E22               	movwf	(??_turnLeft90+1)^0,c
  3027  01DCFE  0E6C               	movlw	108
  3028  01DD00  6E21               	movwf	??_turnLeft90^0,c
  3029  01DD02  0E00               	movlw	0
  3030  01DD04                     u4597:
  3031  01DD04  2EE8               	decfsz	wreg,f,c
  3032  01DD06  D7FE               	bra	u4597
  3033  01DD08  2E21               	decfsz	??_turnLeft90^0,f,c
  3034  01DD0A  D7FC               	bra	u4597
  3035  01DD0C  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  3036  01DD0E  D7FA               	bra	u4597
  3037  01DD10  D000               	nop2	
  3038  01DD12  D000               	nop2	
  3039  01DD14                     
  3040                           ;dc_motor.c: 106:     stop(mL, mR);
  3041  01DD14  C01D  F019         	movff	turnLeft90@mL,stop@mL
  3042  01DD18  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  3043  01DD1C  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  3044  01DD20  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  3045  01DD24  EC48  F0E9         	call	_stop	;wreg free
  3046  01DD28                     
  3047                           ;dc_motor.c: 107:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3048  01DD28  0E05               	movlw	5
  3049  01DD2A  6E22               	movwf	(??_turnLeft90+1)^0,c
  3050  01DD2C  0E0F               	movlw	15
  3051  01DD2E  6E21               	movwf	??_turnLeft90^0,c
  3052  01DD30  0EF1               	movlw	241
  3053  01DD32                     u4607:
  3054  01DD32  2EE8               	decfsz	wreg,f,c
  3055  01DD34  D7FE               	bra	u4607
  3056  01DD36  2E21               	decfsz	??_turnLeft90^0,f,c
  3057  01DD38  D7FC               	bra	u4607
  3058  01DD3A  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  3059  01DD3C  D7FA               	bra	u4607
  3060  01DD3E  F000               	nop	
  3061  01DD40  0012               	return		;funcret
  3062  01DD42                     __end_of_turnLeft90:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _stop *****************
  3066 ;; Defined at:
  3067 ;;		line 61 in file "dc_motor.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3070 ;;		 -> main@motorL(9), 
  3071 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3072 ;;		 -> main@motorR(9), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;Total ram usage:        4 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 2
  3091 ;; This function calls:
  3092 ;;		_setMotorPWM
  3093 ;; This function is called by:
  3094 ;;		_turnLeft90
  3095 ;;		_turnLeft135
  3096 ;;		_turnRight90
  3097 ;;		_turnRight135
  3098 ;;		_turnRight180
  3099 ;;		_reverseTurnRight90
  3100 ;;		_reverseTurnLeft90
  3101 ;;		_main
  3102 ;;		_Black
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text8
  3107  01D290                     __ptext8:
  3108                           	callstack 0
  3109  01D290                     _stop:
  3110                           	callstack 27
  3111  01D290                     
  3112                           ;dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 62: {;d
      +                          c_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  3113  01D290  EF7C  F0E9         	goto	l2770
  3114  01D294                     l2756:
  3115                           
  3116                           ;dc_motor.c: 64:         if ((mL->power) > 0){
  3117  01D294  C019  FFD9         	movff	stop@mL,fsr2l
  3118  01D298  C01A  FFDA         	movff	stop@mL+1,fsr2h
  3119  01D29C  50DF               	movf	indf2,w,c
  3120  01D29E  B4D8               	btfsc	status,2,c
  3121  01D2A0  EF54  F0E9         	goto	u2181
  3122  01D2A4  EF56  F0E9         	goto	u2180
  3123  01D2A8                     u2181:
  3124  01D2A8  EF5B  F0E9         	goto	l2760
  3125  01D2AC                     u2180:
  3126  01D2AC                     
  3127                           ;dc_motor.c: 65:             (mL->power) -= 1;
  3128  01D2AC  C019  FFD9         	movff	stop@mL,fsr2l
  3129  01D2B0  C01A  FFDA         	movff	stop@mL+1,fsr2h
  3130  01D2B4  06DF               	decf	indf2,f,c
  3131  01D2B6                     l2760:
  3132                           
  3133                           ;dc_motor.c: 67:         if ((mR->power) > 0){
  3134  01D2B6  C01B  FFD9         	movff	stop@mR,fsr2l
  3135  01D2BA  C01C  FFDA         	movff	stop@mR+1,fsr2h
  3136  01D2BE  50DF               	movf	indf2,w,c
  3137  01D2C0  B4D8               	btfsc	status,2,c
  3138  01D2C2  EF65  F0E9         	goto	u2191
  3139  01D2C6  EF67  F0E9         	goto	u2190
  3140  01D2CA                     u2191:
  3141  01D2CA  EF6C  F0E9         	goto	l2764
  3142  01D2CE                     u2190:
  3143  01D2CE                     
  3144                           ;dc_motor.c: 68:             (mR->power) -= 1;
  3145  01D2CE  C01B  FFD9         	movff	stop@mR,fsr2l
  3146  01D2D2  C01C  FFDA         	movff	stop@mR+1,fsr2h
  3147  01D2D6  06DF               	decf	indf2,f,c
  3148  01D2D8                     l2764:
  3149                           
  3150                           ;dc_motor.c: 70:         setMotorPWM(mL);
  3151  01D2D8  C019  F00E         	movff	stop@mL,setMotorPWM@m
  3152  01D2DC  C01A  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  3153  01D2E0  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3154  01D2E4                     
  3155                           ;dc_motor.c: 71:         setMotorPWM(mR);
  3156  01D2E4  C01B  F00E         	movff	stop@mR,setMotorPWM@m
  3157  01D2E8  C01C  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  3158  01D2EC  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3159  01D2F0                     
  3160                           ;dc_motor.c: 72:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  3161  01D2F0  0E35               	movlw	53
  3162  01D2F2                     u4617:
  3163  01D2F2  2EE8               	decfsz	wreg,f,c
  3164  01D2F4  D7FE               	bra	u4617
  3165  01D2F6  F000               	nop	
  3166  01D2F8                     l2770:
  3167                           
  3168                           ;dc_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  3169  01D2F8  C019  FFD9         	movff	stop@mL,fsr2l
  3170  01D2FC  C01A  FFDA         	movff	stop@mL+1,fsr2h
  3171  01D300  50DF               	movf	indf2,w,c
  3172  01D302  B4D8               	btfsc	status,2,c
  3173  01D304  EF86  F0E9         	goto	u2201
  3174  01D308  EF88  F0E9         	goto	u2200
  3175  01D30C                     u2201:
  3176  01D30C  EF94  F0E9         	goto	l232
  3177  01D310                     u2200:
  3178  01D310  C01B  FFD9         	movff	stop@mR,fsr2l
  3179  01D314  C01C  FFDA         	movff	stop@mR+1,fsr2h
  3180  01D318  50DF               	movf	indf2,w,c
  3181  01D31A  A4D8               	btfss	status,2,c
  3182  01D31C  EF92  F0E9         	goto	u2211
  3183  01D320  EF94  F0E9         	goto	u2210
  3184  01D324                     u2211:
  3185  01D324  EF4A  F0E9         	goto	l2756
  3186  01D328                     u2210:
  3187  01D328                     l232:
  3188  01D328  0012               	return		;funcret
  3189  01D32A                     __end_of_stop:
  3190                           	callstack 0
  3191                           
  3192 ;; *************** function _reverse *****************
  3193 ;; Defined at:
  3194 ;;		line 76 in file "dc_motor.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3197 ;;		 -> main@motorL(9), 
  3198 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3199 ;;		 -> main@motorR(9), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;Total ram usage:        4 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 2
  3218 ;; This function calls:
  3219 ;;		_setMotorPWM
  3220 ;; This function is called by:
  3221 ;;		_turnLeft90
  3222 ;;		_turnLeft135
  3223 ;;		_turnRight90
  3224 ;;		_turnRight135
  3225 ;;		_turnRight180
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text9
  3230  01D0EE                     __ptext9:
  3231                           	callstack 0
  3232  01D0EE                     _reverse:
  3233                           	callstack 27
  3234  01D0EE                     
  3235                           ;dc_motor.c: 76: void reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: 
      +                          {;dc_motor.c: 78:     (*mL).direction = 0;
  3236  01D0EE  EE20 F001          	lfsr	2,1
  3237  01D0F2  5019               	movf	reverse@mL^0,w,c
  3238  01D0F4  26D9               	addwf	fsr2l,f,c
  3239  01D0F6  501A               	movf	(reverse@mL+1)^0,w,c
  3240  01D0F8  22DA               	addwfc	fsr2h,f,c
  3241  01D0FA  0E00               	movlw	0
  3242  01D0FC  6EDF               	movwf	indf2,c
  3243                           
  3244                           ;dc_motor.c: 79:     (*mR).direction = 0;
  3245  01D0FE  EE20 F001          	lfsr	2,1
  3246  01D102  501B               	movf	reverse@mR^0,w,c
  3247  01D104  26D9               	addwf	fsr2l,f,c
  3248  01D106  501C               	movf	(reverse@mR+1)^0,w,c
  3249  01D108  22DA               	addwfc	fsr2h,f,c
  3250  01D10A  0E00               	movlw	0
  3251  01D10C  6EDF               	movwf	indf2,c
  3252  01D10E                     
  3253                           ;dc_motor.c: 80:     (*mL).power = 50;
  3254  01D10E  C019  FFD9         	movff	reverse@mL,fsr2l
  3255  01D112  C01A  FFDA         	movff	reverse@mL+1,fsr2h
  3256  01D116  0E32               	movlw	50
  3257  01D118  6EDF               	movwf	indf2,c
  3258  01D11A                     
  3259                           ;dc_motor.c: 81:     (*mR).power = 50;
  3260  01D11A  C01B  FFD9         	movff	reverse@mR,fsr2l
  3261  01D11E  C01C  FFDA         	movff	reverse@mR+1,fsr2h
  3262  01D122  0E32               	movlw	50
  3263  01D124  6EDF               	movwf	indf2,c
  3264  01D126                     
  3265                           ;dc_motor.c: 82:     setMotorPWM(mL);
  3266  01D126  C019  F00E         	movff	reverse@mL,setMotorPWM@m
  3267  01D12A  C01A  F00F         	movff	reverse@mL+1,setMotorPWM@m+1
  3268  01D12E  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3269  01D132                     
  3270                           ;dc_motor.c: 83:     setMotorPWM(mR);
  3271  01D132  C01B  F00E         	movff	reverse@mR,setMotorPWM@m
  3272  01D136  C01C  F00F         	movff	reverse@mR+1,setMotorPWM@m+1
  3273  01D13A  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3274  01D13E  0012               	return		;funcret
  3275  01D140                     __end_of_reverse:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _read_colours *****************
  3279 ;; Defined at:
  3280 ;;		line 95 in file "color.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  m               2   11[COMRAM] PTR struct RGB_val
  3283 ;;		 -> main@test(20), 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;Total ram usage:        2 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 3
  3302 ;; This function calls:
  3303 ;;		_color_read_Blue
  3304 ;;		_color_read_Clear
  3305 ;;		_color_read_Green
  3306 ;;		_color_read_Red
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text10
  3313  01D140                     __ptext10:
  3314                           	callstack 0
  3315  01D140                     _read_colours:
  3316                           	callstack 27
  3317  01D140                     
  3318                           ;color.c: 96:     (m->C) = color_read_Clear();
  3319  01D140  EC26  F0E8         	call	_color_read_Clear	;wreg free
  3320  01D144  EE20 F00C          	lfsr	2,12
  3321  01D148  500C               	movf	read_colours@m^0,w,c
  3322  01D14A  26D9               	addwf	fsr2l,f,c
  3323  01D14C  500D               	movf	(read_colours@m+1)^0,w,c
  3324  01D14E  22DA               	addwfc	fsr2h,f,c
  3325  01D150  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3326  01D154  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3327                           
  3328                           ;color.c: 97:     (m->R) = color_read_Red();
  3329  01D158  ECFE  F0E7         	call	_color_read_Red	;wreg free
  3330  01D15C  EE20 F00E          	lfsr	2,14
  3331  01D160  500C               	movf	read_colours@m^0,w,c
  3332  01D162  26D9               	addwf	fsr2l,f,c
  3333  01D164  500D               	movf	(read_colours@m+1)^0,w,c
  3334  01D166  22DA               	addwfc	fsr2h,f,c
  3335  01D168  C005  FFDE         	movff	?_color_read_Red,postinc2
  3336  01D16C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3337                           
  3338                           ;color.c: 98:     (m->G) = color_read_Green();
  3339  01D170  ECD6  F0E7         	call	_color_read_Green	;wreg free
  3340  01D174  EE20 F010          	lfsr	2,16
  3341  01D178  500C               	movf	read_colours@m^0,w,c
  3342  01D17A  26D9               	addwf	fsr2l,f,c
  3343  01D17C  500D               	movf	(read_colours@m+1)^0,w,c
  3344  01D17E  22DA               	addwfc	fsr2h,f,c
  3345  01D180  C005  FFDE         	movff	?_color_read_Green,postinc2
  3346  01D184  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3347                           
  3348                           ;color.c: 99:     (m->B) = color_read_Blue();
  3349  01D188  ECAE  F0E7         	call	_color_read_Blue	;wreg free
  3350  01D18C  EE20 F012          	lfsr	2,18
  3351  01D190  500C               	movf	read_colours@m^0,w,c
  3352  01D192  26D9               	addwf	fsr2l,f,c
  3353  01D194  500D               	movf	(read_colours@m+1)^0,w,c
  3354  01D196  22DA               	addwfc	fsr2h,f,c
  3355  01D198  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3356  01D19C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3357  01D1A0  0012               	return		;funcret
  3358  01D1A2                     __end_of_read_colours:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _color_read_Clear *****************
  3362 ;; Defined at:
  3363 ;;		line 41 in file "color.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  tmp             2    9[COMRAM] unsigned int 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  2    4[COMRAM] unsigned int 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:        7 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 2
  3384 ;; This function calls:
  3385 ;;		_I2C_2_Master_Read
  3386 ;;		_I2C_2_Master_RepStart
  3387 ;;		_I2C_2_Master_Start
  3388 ;;		_I2C_2_Master_Stop
  3389 ;;		_I2C_2_Master_Write
  3390 ;; This function is called by:
  3391 ;;		_read_colours
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text11
  3396  01D04C                     __ptext11:
  3397                           	callstack 0
  3398  01D04C                     _color_read_Clear:
  3399                           	callstack 27
  3400  01D04C                     
  3401                           ;color.c: 43:  unsigned int tmp;;color.c: 44:     I2C_2_Master_Start();
  3402  01D04C  EC7A  F0E6         	call	_I2C_2_Master_Start	;wreg free
  3403                           
  3404                           ;color.c: 45:     I2C_2_Master_Write(0x52 | 0x00);
  3405  01D050  0E52               	movlw	82
  3406  01D052  EC8A  F0E6         	call	_I2C_2_Master_Write
  3407                           
  3408                           ;color.c: 46:  I2C_2_Master_Write(0xA0 | 0x14);
  3409  01D056  0EB4               	movlw	180
  3410  01D058  EC8A  F0E6         	call	_I2C_2_Master_Write
  3411                           
  3412                           ;color.c: 47:  I2C_2_Master_RepStart();
  3413  01D05C  EC75  F0E6         	call	_I2C_2_Master_RepStart	;wreg free
  3414                           
  3415                           ;color.c: 48:  I2C_2_Master_Write(0x52 | 0x01);
  3416  01D060  0E53               	movlw	83
  3417  01D062  EC8A  F0E6         	call	_I2C_2_Master_Write
  3418                           
  3419                           ;color.c: 49:  tmp=I2C_2_Master_Read(1);
  3420  01D066  0E01               	movlw	1
  3421  01D068  EC24  F0E7         	call	_I2C_2_Master_Read
  3422  01D06C  6E07               	movwf	??_color_read_Clear^0,c
  3423  01D06E  5007               	movf	??_color_read_Clear^0,w,c
  3424  01D070  6E0A               	movwf	color_read_Clear@tmp^0,c
  3425  01D072  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3426                           
  3427                           ;color.c: 50:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3428  01D074  0E00               	movlw	0
  3429  01D076  EC24  F0E7         	call	_I2C_2_Master_Read
  3430  01D07A  6E07               	movwf	??_color_read_Clear^0,c
  3431  01D07C  5007               	movf	??_color_read_Clear^0,w,c
  3432  01D07E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3433  01D080  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3434  01D082  500A               	movf	color_read_Clear@tmp^0,w,c
  3435  01D084  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3436  01D086  6E0A               	movwf	color_read_Clear@tmp^0,c
  3437  01D088  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3438  01D08A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3439  01D08C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3440                           
  3441                           ;color.c: 51:     I2C_2_Master_Stop();
  3442  01D08E  EC7F  F0E6         	call	_I2C_2_Master_Stop	;wreg free
  3443  01D092                     
  3444                           ;color.c: 52:     return tmp;
  3445  01D092  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3446  01D096  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3447  01D09A  0012               	return		;funcret
  3448  01D09C                     __end_of_color_read_Clear:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _initUSART4 *****************
  3452 ;; Defined at:
  3453 ;;		line 4 in file "serial.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text12
  3481  01CD5C                     __ptext12:
  3482                           	callstack 0
  3483  01CD5C                     _initUSART4:
  3484                           	callstack 30
  3485  01CD5C                     
  3486                           ;serial.c: 8:     RC0PPS = 0x12;
  3487  01CD5C  0E12               	movlw	18
  3488  01CD5E  010E               	movlb	14	; () banked
  3489  01CD60  6F62               	movwf	98,b	;volatile
  3490                           
  3491                           ;serial.c: 9:     RX4PPS = 0x11;
  3492  01CD62  0E11               	movlw	17
  3493  01CD64  6F15               	movwf	21,b	;volatile
  3494  01CD66                     
  3495                           ; BSR set to: 14
  3496                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  3497  01CD66  8283               	bsf	131,1,c	;volatile
  3498  01CD68                     
  3499                           ; BSR set to: 14
  3500                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3501  01CD68  97E9               	bcf	233,3,b	;volatile
  3502  01CD6A                     
  3503                           ; BSR set to: 14
  3504                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3505  01CD6A  95E8               	bcf	232,2,b	;volatile
  3506                           
  3507                           ;serial.c: 14:     SP4BRGL = 51;
  3508  01CD6C  0E33               	movlw	51
  3509  01CD6E  6FE5               	movwf	229,b	;volatile
  3510                           
  3511                           ;serial.c: 15:     SP4BRGH = 0;
  3512  01CD70  0E00               	movlw	0
  3513  01CD72  6FE6               	movwf	230,b	;volatile
  3514  01CD74                     
  3515                           ; BSR set to: 14
  3516                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3517  01CD74  89E7               	bsf	231,4,b	;volatile
  3518  01CD76                     
  3519                           ; BSR set to: 14
  3520                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3521  01CD76  8BE8               	bsf	232,5,b	;volatile
  3522  01CD78                     
  3523                           ; BSR set to: 14
  3524                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3525  01CD78  8FE7               	bsf	231,7,b	;volatile
  3526  01CD7A                     
  3527                           ; BSR set to: 14
  3528  01CD7A  0012               	return		;funcret
  3529  01CD7C                     __end_of_initUSART4:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function _initDCmotorsPWM *****************
  3533 ;; Defined at:
  3534 ;;		line 5 in file "dc_motor.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  PWMperiod       2    0[COMRAM] int 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;Total ram usage:        2 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text13
  3562  01CE8A                     __ptext13:
  3563                           	callstack 0
  3564  01CE8A                     _initDCmotorsPWM:
  3565                           	callstack 30
  3566  01CE8A                     
  3567                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  3568  01CE8A  9485               	bcf	133,2,c	;volatile
  3569                           
  3570                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  3571  01CE8C  9E83               	bcf	131,7,c	;volatile
  3572                           
  3573                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3574  01CE8E  9885               	bcf	133,4,c	;volatile
  3575                           
  3576                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  3577  01CE90  9C87               	bcf	135,6,c	;volatile
  3578                           
  3579                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  3580  01CE92  947D               	bcf	125,2,c	;volatile
  3581                           
  3582                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  3583  01CE94  9E7B               	bcf	123,7,c	;volatile
  3584                           
  3585                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  3586  01CE96  987D               	bcf	125,4,c	;volatile
  3587                           
  3588                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
  3589  01CE98  9C7F               	bcf	127,6,c	;volatile
  3590  01CE9A                     
  3591                           ;dc_motor.c: 17:     T2CONbits.CKPS= 0b100;
  3592  01CE9A  50BD               	movf	189,w,c	;volatile
  3593  01CE9C  0B8F               	andlw	-113
  3594  01CE9E  0940               	iorlw	64
  3595  01CEA0  6EBD               	movwf	189,c	;volatile
  3596                           
  3597                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  3598  01CEA2  0EE0               	movlw	-32
  3599  01CEA4  16BE               	andwf	190,f,c	;volatile
  3600                           
  3601                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  3602  01CEA6  50BF               	movf	191,w,c	;volatile
  3603  01CEA8  0BF0               	andlw	-16
  3604  01CEAA  0901               	iorlw	1
  3605  01CEAC  6EBF               	movwf	191,c	;volatile
  3606                           
  3607                           ;dc_motor.c: 22:     T2PR= 99;
  3608  01CEAE  0E63               	movlw	99
  3609  01CEB0  6EBC               	movwf	188,c	;volatile
  3610  01CEB2                     
  3611                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  3612  01CEB2  8EBD               	bsf	189,7,c	;volatile
  3613                           
  3614                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  3615  01CEB4  0E0A               	movlw	10
  3616  01CEB6  010E               	movlb	14	; () banked
  3617  01CEB8  6F74               	movwf	116,b	;volatile
  3618                           
  3619                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  3620  01CEBA  0E0B               	movlw	11
  3621  01CEBC  6F69               	movwf	105,b	;volatile
  3622                           
  3623                           ;dc_motor.c: 28:     PWM6DCH=0;
  3624  01CEBE  0E00               	movlw	0
  3625  01CEC0  6EA3               	movwf	163,c	;volatile
  3626                           
  3627                           ;dc_motor.c: 29:     PWM7DCH=0;
  3628  01CEC2  0E00               	movlw	0
  3629  01CEC4  6EA0               	movwf	160,c	;volatile
  3630  01CEC6                     
  3631                           ; BSR set to: 14
  3632                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  3633  01CEC6  8EA4               	bsf	164,7,c	;volatile
  3634  01CEC8                     
  3635                           ; BSR set to: 14
  3636                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  3637  01CEC8  8EA1               	bsf	161,7,c	;volatile
  3638  01CECA                     
  3639                           ; BSR set to: 14
  3640  01CECA  0012               	return		;funcret
  3641  01CECC                     __end_of_initDCmotorsPWM:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _forward *****************
  3645 ;; Defined at:
  3646 ;;		line 207 in file "dc_motor.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3649 ;;		 -> main@motorL(9), 
  3650 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3651 ;;		 -> main@motorR(9), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;Total ram usage:        4 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: 2
  3670 ;; This function calls:
  3671 ;;		_setMotorPWM
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;;		_Black
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text14
  3679  01D09C                     __ptext14:
  3680                           	callstack 0
  3681  01D09C                     _forward:
  3682                           	callstack 28
  3683  01D09C                     
  3684                           ;dc_motor.c: 207: void forward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 208
      +                          : {;dc_motor.c: 209:     (*mL).direction = 1;
  3685  01D09C  EE20 F001          	lfsr	2,1
  3686  01D0A0  5019               	movf	forward@mL^0,w,c
  3687  01D0A2  26D9               	addwf	fsr2l,f,c
  3688  01D0A4  501A               	movf	(forward@mL+1)^0,w,c
  3689  01D0A6  22DA               	addwfc	fsr2h,f,c
  3690  01D0A8  0E01               	movlw	1
  3691  01D0AA  6EDF               	movwf	indf2,c
  3692                           
  3693                           ;dc_motor.c: 210:     (*mR).direction = 1;
  3694  01D0AC  EE20 F001          	lfsr	2,1
  3695  01D0B0  501B               	movf	forward@mR^0,w,c
  3696  01D0B2  26D9               	addwf	fsr2l,f,c
  3697  01D0B4  501C               	movf	(forward@mR+1)^0,w,c
  3698  01D0B6  22DA               	addwfc	fsr2h,f,c
  3699  01D0B8  0E01               	movlw	1
  3700  01D0BA  6EDF               	movwf	indf2,c
  3701  01D0BC                     
  3702                           ;dc_motor.c: 211:     (*mL).power = 13;
  3703  01D0BC  C019  FFD9         	movff	forward@mL,fsr2l
  3704  01D0C0  C01A  FFDA         	movff	forward@mL+1,fsr2h
  3705  01D0C4  0E0D               	movlw	13
  3706  01D0C6  6EDF               	movwf	indf2,c
  3707  01D0C8                     
  3708                           ;dc_motor.c: 212:     (*mR).power = 13;
  3709  01D0C8  C01B  FFD9         	movff	forward@mR,fsr2l
  3710  01D0CC  C01C  FFDA         	movff	forward@mR+1,fsr2h
  3711  01D0D0  0E0D               	movlw	13
  3712  01D0D2  6EDF               	movwf	indf2,c
  3713  01D0D4                     
  3714                           ;dc_motor.c: 213:     setMotorPWM(mL);
  3715  01D0D4  C019  F00E         	movff	forward@mL,setMotorPWM@m
  3716  01D0D8  C01A  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  3717  01D0DC  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3718  01D0E0                     
  3719                           ;dc_motor.c: 214:     setMotorPWM(mR);
  3720  01D0E0  C01B  F00E         	movff	forward@mR,setMotorPWM@m
  3721  01D0E4  C01C  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  3722  01D0E8  EC7B  F0EF         	call	_setMotorPWM	;wreg free
  3723  01D0EC  0012               	return		;funcret
  3724  01D0EE                     __end_of_forward:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _setMotorPWM *****************
  3728 ;; Defined at:
  3729 ;;		line 37 in file "dc_motor.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  m               2   13[COMRAM] PTR struct DC_motor
  3732 ;;		 -> main@motorR(9), main@motorL(9), 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  PWMduty         2   22[COMRAM] int 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;Total ram usage:       11 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 1
  3751 ;; This function calls:
  3752 ;;		___lwdiv
  3753 ;;		___wmul
  3754 ;; This function is called by:
  3755 ;;		_stop
  3756 ;;		_reverse
  3757 ;;		_turnLeft90
  3758 ;;		_turnLeft135
  3759 ;;		_turnRight90
  3760 ;;		_turnRight135
  3761 ;;		_turnRight180
  3762 ;;		_forward
  3763 ;;		_reverseTurnRight90
  3764 ;;		_reverseTurnLeft90
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text15
  3769  01DEF6                     __ptext15:
  3770                           	callstack 0
  3771  01DEF6                     _setMotorPWM:
  3772                           	callstack 27
  3773  01DEF6                     
  3774                           ;dc_motor.c: 37: void setMotorPWM(struct DC_motor *m);dc_motor.c: 38: {;dc_motor.c: 39: 
      +                           int PWMduty;;dc_motor.c: 41:  if (m->direction){
  3775  01DEF6  EE20 F001          	lfsr	2,1
  3776  01DEFA  500E               	movf	setMotorPWM@m^0,w,c
  3777  01DEFC  26D9               	addwf	fsr2l,f,c
  3778  01DEFE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3779  01DF00  22DA               	addwfc	fsr2h,f,c
  3780  01DF02  50DF               	movf	indf2,w,c
  3781  01DF04  B4D8               	btfsc	status,2,c
  3782  01DF06  EF87  F0EF         	goto	u2121
  3783  01DF0A  EF89  F0EF         	goto	u2120
  3784  01DF0E                     u2121:
  3785  01DF0E  EFBA  F0EF         	goto	l2714
  3786  01DF12                     u2120:
  3787  01DF12                     
  3788                           ;dc_motor.c: 43:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3789  01DF12  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  3790  01DF16  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3791  01DF1A  50DF               	movf	indf2,w,c
  3792  01DF1C  6E10               	movwf	??_setMotorPWM^0,c
  3793  01DF1E  5010               	movf	??_setMotorPWM^0,w,c
  3794  01DF20  6E01               	movwf	___wmul@multiplier^0,c
  3795  01DF22  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3796  01DF24  EE20 F007          	lfsr	2,7
  3797  01DF28  500E               	movf	setMotorPWM@m^0,w,c
  3798  01DF2A  26D9               	addwf	fsr2l,f,c
  3799  01DF2C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3800  01DF2E  22DA               	addwfc	fsr2h,f,c
  3801  01DF30  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3802  01DF34  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3803  01DF38  ECCE  F0E6         	call	___wmul	;wreg free
  3804  01DF3C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3805  01DF40  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3806  01DF44  0E00               	movlw	0
  3807  01DF46  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3808  01DF48  0E64               	movlw	100
  3809  01DF4A  6E09               	movwf	___lwdiv@divisor^0,c
  3810  01DF4C  ECD1  F0E8         	call	___lwdiv	;wreg free
  3811  01DF50  EE20 F007          	lfsr	2,7
  3812  01DF54  500E               	movf	setMotorPWM@m^0,w,c
  3813  01DF56  26D9               	addwf	fsr2l,f,c
  3814  01DF58  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3815  01DF5A  22DA               	addwfc	fsr2h,f,c
  3816  01DF5C  CFDE F011          	movff	postinc2,??_setMotorPWM+1
  3817  01DF60  CFDD F012          	movff	postdec2,??_setMotorPWM+2
  3818  01DF64  5007               	movf	?___lwdiv^0,w,c
  3819  01DF66  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  3820  01DF68  6E17               	movwf	setMotorPWM@PWMduty^0,c
  3821  01DF6A  5008               	movf	(?___lwdiv+1)^0,w,c
  3822  01DF6C  5812               	subwfb	(??_setMotorPWM+2)^0,w,c
  3823  01DF6E  6E18               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3824                           
  3825                           ;dc_motor.c: 44:  }
  3826  01DF70  EFDD  F0EF         	goto	l2716
  3827  01DF74                     l2714:
  3828                           
  3829                           ;dc_motor.c: 47:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3830  01DF74  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  3831  01DF78  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3832  01DF7C  50DF               	movf	indf2,w,c
  3833  01DF7E  6E10               	movwf	??_setMotorPWM^0,c
  3834  01DF80  5010               	movf	??_setMotorPWM^0,w,c
  3835  01DF82  6E01               	movwf	___wmul@multiplier^0,c
  3836  01DF84  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3837  01DF86  EE20 F007          	lfsr	2,7
  3838  01DF8A  500E               	movf	setMotorPWM@m^0,w,c
  3839  01DF8C  26D9               	addwf	fsr2l,f,c
  3840  01DF8E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3841  01DF90  22DA               	addwfc	fsr2h,f,c
  3842  01DF92  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3843  01DF96  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3844  01DF9A  ECCE  F0E6         	call	___wmul	;wreg free
  3845  01DF9E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3846  01DFA2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3847  01DFA6  0E00               	movlw	0
  3848  01DFA8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3849  01DFAA  0E64               	movlw	100
  3850  01DFAC  6E09               	movwf	___lwdiv@divisor^0,c
  3851  01DFAE  ECD1  F0E8         	call	___lwdiv	;wreg free
  3852  01DFB2  C007  F017         	movff	?___lwdiv,setMotorPWM@PWMduty
  3853  01DFB6  C008  F018         	movff	?___lwdiv+1,setMotorPWM@PWMduty+1
  3854  01DFBA                     l2716:
  3855                           
  3856                           ;dc_motor.c: 50:  *(m->dutyHighByte) = PWMduty;
  3857  01DFBA  EE20 F002          	lfsr	2,2
  3858  01DFBE  500E               	movf	setMotorPWM@m^0,w,c
  3859  01DFC0  26D9               	addwf	fsr2l,f,c
  3860  01DFC2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3861  01DFC4  22DA               	addwfc	fsr2h,f,c
  3862  01DFC6  CFDE F010          	movff	postinc2,??_setMotorPWM
  3863  01DFCA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3864  01DFCE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3865  01DFD2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3866  01DFD6  C017  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3867  01DFDA                     
  3868                           ;dc_motor.c: 52:  if (m->direction){
  3869  01DFDA  EE20 F001          	lfsr	2,1
  3870  01DFDE  500E               	movf	setMotorPWM@m^0,w,c
  3871  01DFE0  26D9               	addwf	fsr2l,f,c
  3872  01DFE2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3873  01DFE4  22DA               	addwfc	fsr2h,f,c
  3874  01DFE6  50DF               	movf	indf2,w,c
  3875  01DFE8  B4D8               	btfsc	status,2,c
  3876  01DFEA  EFF9  F0EF         	goto	u2131
  3877  01DFEE  EFFB  F0EF         	goto	u2130
  3878  01DFF2                     u2131:
  3879  01DFF2  EF30  F0F0         	goto	l2722
  3880  01DFF6                     u2130:
  3881  01DFF6                     
  3882                           ;dc_motor.c: 53:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  3883  01DFF6  EE20 F004          	lfsr	2,4
  3884  01DFFA  500E               	movf	setMotorPWM@m^0,w,c
  3885  01DFFC  26D9               	addwf	fsr2l,f,c
  3886  01DFFE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3887  01E000  22DA               	addwfc	fsr2h,f,c
  3888  01E002  CFDE F010          	movff	postinc2,??_setMotorPWM
  3889  01E006  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3890  01E00A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3891  01E00E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3892  01E012  EE10 F004          	lfsr	1,4
  3893  01E016  500E               	movf	setMotorPWM@m^0,w,c
  3894  01E018  26E1               	addwf	fsr1l,f,c
  3895  01E01A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3896  01E01C  22E2               	addwfc	fsr1h,f,c
  3897  01E01E  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  3898  01E022  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  3899  01E026  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3900  01E02A  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3901  01E02E  50E7               	movf	indf1,w,c
  3902  01E030  6E14               	movwf	(??_setMotorPWM+4)^0,c
  3903  01E032  EE10 F006          	lfsr	1,6
  3904  01E036  500E               	movf	setMotorPWM@m^0,w,c
  3905  01E038  26E1               	addwf	fsr1l,f,c
  3906  01E03A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3907  01E03C  22E2               	addwfc	fsr1h,f,c
  3908  01E03E  50E7               	movf	indf1,w,c
  3909  01E040  6E15               	movwf	(??_setMotorPWM+5)^0,c
  3910  01E042  0E01               	movlw	1
  3911  01E044  6E16               	movwf	(??_setMotorPWM+6)^0,c
  3912  01E046  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  3913  01E048  EF28  F0F0         	goto	u2144
  3914  01E04C                     u2145:
  3915  01E04C  90D8               	bcf	status,0,c
  3916  01E04E  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  3917  01E050                     u2144:
  3918  01E050  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  3919  01E052  EF26  F0F0         	goto	u2145
  3920  01E056  5016               	movf	(??_setMotorPWM+6)^0,w,c
  3921  01E058  1014               	iorwf	(??_setMotorPWM+4)^0,w,c
  3922  01E05A  6EDF               	movwf	indf2,c
  3923                           
  3924                           ;dc_motor.c: 54:  }
  3925  01E05C  EF64  F0F0         	goto	l222
  3926  01E060                     l2722:
  3927                           
  3928                           ;dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  3929  01E060  EE20 F004          	lfsr	2,4
  3930  01E064  500E               	movf	setMotorPWM@m^0,w,c
  3931  01E066  26D9               	addwf	fsr2l,f,c
  3932  01E068  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3933  01E06A  22DA               	addwfc	fsr2h,f,c
  3934  01E06C  CFDE F010          	movff	postinc2,??_setMotorPWM
  3935  01E070  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3936  01E074  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3937  01E078  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3938  01E07C  EE10 F004          	lfsr	1,4
  3939  01E080  500E               	movf	setMotorPWM@m^0,w,c
  3940  01E082  26E1               	addwf	fsr1l,f,c
  3941  01E084  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3942  01E086  22E2               	addwfc	fsr1h,f,c
  3943  01E088  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  3944  01E08C  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  3945  01E090  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3946  01E094  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3947  01E098  50E7               	movf	indf1,w,c
  3948  01E09A  6E14               	movwf	(??_setMotorPWM+4)^0,c
  3949  01E09C  EE10 F006          	lfsr	1,6
  3950  01E0A0  500E               	movf	setMotorPWM@m^0,w,c
  3951  01E0A2  26E1               	addwf	fsr1l,f,c
  3952  01E0A4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3953  01E0A6  22E2               	addwfc	fsr1h,f,c
  3954  01E0A8  50E7               	movf	indf1,w,c
  3955  01E0AA  6E15               	movwf	(??_setMotorPWM+5)^0,c
  3956  01E0AC  0E01               	movlw	1
  3957  01E0AE  6E16               	movwf	(??_setMotorPWM+6)^0,c
  3958  01E0B0  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  3959  01E0B2  EF5D  F0F0         	goto	u2154
  3960  01E0B6                     u2155:
  3961  01E0B6  90D8               	bcf	status,0,c
  3962  01E0B8  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  3963  01E0BA                     u2154:
  3964  01E0BA  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  3965  01E0BC  EF5B  F0F0         	goto	u2155
  3966  01E0C0  5016               	movf	(??_setMotorPWM+6)^0,w,c
  3967  01E0C2  0AFF               	xorlw	255
  3968  01E0C4  1414               	andwf	(??_setMotorPWM+4)^0,w,c
  3969  01E0C6  6EDF               	movwf	indf2,c
  3970  01E0C8                     l222:
  3971  01E0C8  0012               	return		;funcret
  3972  01E0CA                     __end_of_setMotorPWM:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function ___wmul *****************
  3976 ;; Defined at:
  3977 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  multiplier      2    0[COMRAM] unsigned int 
  3980 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  product         2    4[COMRAM] unsigned int 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2    0[COMRAM] unsigned int 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, prodl, prodh
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;Total ram usage:        6 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_setMotorPWM
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text16
  4006  01CD9C                     __ptext16:
  4007                           	callstack 0
  4008  01CD9C                     ___wmul:
  4009                           	callstack 27
  4010  01CD9C  5001               	movf	___wmul@multiplier^0,w,c
  4011  01CD9E  0203               	mulwf	___wmul@multiplicand^0,c
  4012  01CDA0  CFF3 F005          	movff	prodl,___wmul@product
  4013  01CDA4  CFF4 F006          	movff	prodh,___wmul@product+1
  4014  01CDA8  5001               	movf	___wmul@multiplier^0,w,c
  4015  01CDAA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4016  01CDAC  50F3               	movf	243,w,c
  4017  01CDAE  2606               	addwf	(___wmul@product+1)^0,f,c
  4018  01CDB0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4019  01CDB2  0203               	mulwf	___wmul@multiplicand^0,c
  4020  01CDB4  50F3               	movf	243,w,c
  4021  01CDB6  2606               	addwf	(___wmul@product+1)^0,f,c
  4022  01CDB8  C005  F001         	movff	___wmul@product,?___wmul
  4023  01CDBC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4024  01CDC0  0012               	return		;funcret
  4025  01CDC2                     __end_of___wmul:
  4026                           	callstack 0
  4027                           
  4028 ;; *************** function ___lwdiv *****************
  4029 ;; Defined at:
  4030 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  dividend        2    6[COMRAM] unsigned int 
  4033 ;;  divisor         2    8[COMRAM] unsigned int 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  quotient        2   10[COMRAM] unsigned int 
  4036 ;;  counter         1   12[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    6[COMRAM] unsigned int 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4047 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4049 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4050 ;;Total ram usage:        7 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_setMotorPWM
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text17
  4060  01D1A2                     __ptext17:
  4061                           	callstack 0
  4062  01D1A2                     ___lwdiv:
  4063                           	callstack 27
  4064  01D1A2  0E00               	movlw	0
  4065  01D1A4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  4066  01D1A6  0E00               	movlw	0
  4067  01D1A8  6E0B               	movwf	___lwdiv@quotient^0,c
  4068  01D1AA  5009               	movf	___lwdiv@divisor^0,w,c
  4069  01D1AC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4070  01D1AE  B4D8               	btfsc	status,2,c
  4071  01D1B0  EFDC  F0E8         	goto	u2071
  4072  01D1B4  EFDE  F0E8         	goto	u2070
  4073  01D1B8                     u2071:
  4074  01D1B8  EF06  F0E9         	goto	l1008
  4075  01D1BC                     u2070:
  4076  01D1BC  0E01               	movlw	1
  4077  01D1BE  6E0D               	movwf	___lwdiv@counter^0,c
  4078  01D1C0  EFE6  F0E8         	goto	l2692
  4079  01D1C4                     l2690:
  4080  01D1C4  90D8               	bcf	status,0,c
  4081  01D1C6  3609               	rlcf	___lwdiv@divisor^0,f,c
  4082  01D1C8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4083  01D1CA  2A0D               	incf	___lwdiv@counter^0,f,c
  4084  01D1CC                     l2692:
  4085  01D1CC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4086  01D1CE  EFEB  F0E8         	goto	u2081
  4087  01D1D2  EFED  F0E8         	goto	u2080
  4088  01D1D6                     u2081:
  4089  01D1D6  EFE2  F0E8         	goto	l2690
  4090  01D1DA                     u2080:
  4091  01D1DA                     l2694:
  4092  01D1DA  90D8               	bcf	status,0,c
  4093  01D1DC  360B               	rlcf	___lwdiv@quotient^0,f,c
  4094  01D1DE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4095  01D1E0  5009               	movf	___lwdiv@divisor^0,w,c
  4096  01D1E2  5C07               	subwf	___lwdiv@dividend^0,w,c
  4097  01D1E4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4098  01D1E6  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4099  01D1E8  A0D8               	btfss	status,0,c
  4100  01D1EA  EFF9  F0E8         	goto	u2091
  4101  01D1EE  EFFB  F0E8         	goto	u2090
  4102  01D1F2                     u2091:
  4103  01D1F2  EF00  F0E9         	goto	l2702
  4104  01D1F6                     u2090:
  4105  01D1F6  5009               	movf	___lwdiv@divisor^0,w,c
  4106  01D1F8  5E07               	subwf	___lwdiv@dividend^0,f,c
  4107  01D1FA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4108  01D1FC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4109  01D1FE  800B               	bsf	___lwdiv@quotient^0,0,c
  4110  01D200                     l2702:
  4111  01D200  90D8               	bcf	status,0,c
  4112  01D202  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4113  01D204  3209               	rrcf	___lwdiv@divisor^0,f,c
  4114  01D206  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4115  01D208  EFED  F0E8         	goto	l2694
  4116  01D20C                     l1008:
  4117  01D20C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4118  01D210  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4119  01D214  0012               	return		;funcret
  4120  01D216                     __end_of___lwdiv:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _determine_color_new *****************
  4124 ;; Defined at:
  4125 ;;		line 119 in file "color.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  m               2   90[COMRAM] PTR struct RGB_val
  4128 ;;		 -> main@test(20), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  RelB            4   30[BANK0 ] float 
  4131 ;;  RelG            4   26[BANK0 ] float 
  4132 ;;  RelR            4   22[BANK0 ] float 
  4133 ;;  lumin           2   20[BANK0 ] unsigned int 
  4134 ;;  out             2   18[BANK0 ] unsigned int 
  4135 ;;  BlueRatio       2   16[BANK0 ] unsigned int 
  4136 ;;  GreenRatio      2   14[BANK0 ] unsigned int 
  4137 ;;  RedRatio        2   12[BANK0 ] unsigned int 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  2   90[COMRAM] unsigned int 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;Total ram usage:       36 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 2
  4154 ;; This function calls:
  4155 ;;		___fladd
  4156 ;;		___fldiv
  4157 ;;		___flmul
  4158 ;;		___fltol
  4159 ;;		___xxtofl
  4160 ;;		_isbtw
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text18
  4167  01F2B4                     __ptext18:
  4168                           	callstack 0
  4169  01F2B4                     _determine_color_new:
  4170                           	callstack 28
  4171  01F2B4                     
  4172                           ;color.c: 120:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 121:     float
      +                           RelR, RelG, RelB;;color.c: 122:     unsigned int out = 9;
  4173  01F2B4  0E00               	movlw	0
  4174  01F2B6  0100               	movlb	0	; () banked
  4175  01F2B8  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4176  01F2BA  0E09               	movlw	9
  4177  01F2BC  6F72               	movwf	determine_color_new@out& (0+255),b
  4178  01F2BE                     
  4179                           ; BSR set to: 0
  4180                           ;color.c: 124:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  4181  01F2BE  0E59               	movlw	89
  4182  01F2C0  6E2C               	movwf	___flmul@a^0,c
  4183  01F2C2  0E17               	movlw	23
  4184  01F2C4  6E2D               	movwf	(___flmul@a+1)^0,c
  4185  01F2C6  0E37               	movlw	55
  4186  01F2C8  6E2E               	movwf	(___flmul@a+2)^0,c
  4187  01F2CA  0E3F               	movlw	63
  4188  01F2CC  6E2F               	movwf	(___flmul@a+3)^0,c
  4189  01F2CE  EE20 F010          	lfsr	2,16
  4190  01F2D2  505B               	movf	determine_color_new@m^0,w,c
  4191  01F2D4  26D9               	addwf	fsr2l,f,c
  4192  01F2D6  505C               	movf	(determine_color_new@m+1)^0,w,c
  4193  01F2D8  22DA               	addwfc	fsr2h,f,c
  4194  01F2DA  CFDE F060          	movff	postinc2,??_determine_color_new
  4195  01F2DE  CFDD F061          	movff	postdec2,??_determine_color_new+1
  4196  01F2E2  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  4197  01F2E6  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  4198  01F2EA  6A03               	clrf	(___xxtofl@val+2)^0,c
  4199  01F2EC  6A04               	clrf	(___xxtofl@val+3)^0,c
  4200  01F2EE  0E00               	movlw	0
  4201  01F2F0  ECA1  F0EE         	call	___xxtofl
  4202  01F2F4  C001  F028         	movff	?___xxtofl,___flmul@b
  4203  01F2F8  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  4204  01F2FC  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  4205  01F300  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  4206  01F304  EC32  F0F2         	call	___flmul	;wreg free
  4207  01F308  C028  F045         	movff	?___flmul,___fladd@a
  4208  01F30C  C029  F046         	movff	?___flmul+1,___fladd@a+1
  4209  01F310  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  4210  01F314  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  4211  01F318  0ED0               	movlw	208
  4212  01F31A  6E2C               	movwf	___flmul@a^0,c
  4213  01F31C  0EB3               	movlw	179
  4214  01F31E  6E2D               	movwf	(___flmul@a+1)^0,c
  4215  01F320  0E59               	movlw	89
  4216  01F322  6E2E               	movwf	(___flmul@a+2)^0,c
  4217  01F324  0E3E               	movlw	62
  4218  01F326  6E2F               	movwf	(___flmul@a+3)^0,c
  4219  01F328  EE20 F00E          	lfsr	2,14
  4220  01F32C  505B               	movf	determine_color_new@m^0,w,c
  4221  01F32E  26D9               	addwf	fsr2l,f,c
  4222  01F330  505C               	movf	(determine_color_new@m+1)^0,w,c
  4223  01F332  22DA               	addwfc	fsr2h,f,c
  4224  01F334  CFDE F062          	movff	postinc2,??_determine_color_new+2
  4225  01F338  CFDD F063          	movff	postdec2,??_determine_color_new+3
  4226  01F33C  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  4227  01F340  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  4228  01F344  6A03               	clrf	(___xxtofl@val+2)^0,c
  4229  01F346  6A04               	clrf	(___xxtofl@val+3)^0,c
  4230  01F348  0E00               	movlw	0
  4231  01F34A  ECA1  F0EE         	call	___xxtofl
  4232  01F34E  C001  F028         	movff	?___xxtofl,___flmul@b
  4233  01F352  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  4234  01F356  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  4235  01F35A  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  4236  01F35E  EC32  F0F2         	call	___flmul	;wreg free
  4237  01F362  C028  F041         	movff	?___flmul,___fladd@b
  4238  01F366  C029  F042         	movff	?___flmul+1,___fladd@b+1
  4239  01F36A  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  4240  01F36E  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  4241  01F372  EC47  F0F4         	call	___fladd	;wreg free
  4242  01F376  C041  F068         	movff	?___fladd,_determine_color_new$2590
  4243  01F37A  C042  F069         	movff	?___fladd+1,_determine_color_new$2590+1
  4244  01F37E  C043  F06A         	movff	?___fladd+2,_determine_color_new$2590+2
  4245  01F382  C044  F06B         	movff	?___fladd+3,_determine_color_new$2590+3
  4246  01F386                     
  4247                           ;color.c: 124:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  4248  01F386  0E98               	movlw	152
  4249  01F388  6E2C               	movwf	___flmul@a^0,c
  4250  01F38A  0EDD               	movlw	221
  4251  01F38C  6E2D               	movwf	(___flmul@a+1)^0,c
  4252  01F38E  0E93               	movlw	147
  4253  01F390  6E2E               	movwf	(___flmul@a+2)^0,c
  4254  01F392  0E3D               	movlw	61
  4255  01F394  6E2F               	movwf	(___flmul@a+3)^0,c
  4256  01F396  EE20 F012          	lfsr	2,18
  4257  01F39A  505B               	movf	determine_color_new@m^0,w,c
  4258  01F39C  26D9               	addwf	fsr2l,f,c
  4259  01F39E  505C               	movf	(determine_color_new@m+1)^0,w,c
  4260  01F3A0  22DA               	addwfc	fsr2h,f,c
  4261  01F3A2  CFDE F060          	movff	postinc2,??_determine_color_new
  4262  01F3A6  CFDD F061          	movff	postdec2,??_determine_color_new+1
  4263  01F3AA  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  4264  01F3AE  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  4265  01F3B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  4266  01F3B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  4267  01F3B6  0E00               	movlw	0
  4268  01F3B8  ECA1  F0EE         	call	___xxtofl
  4269  01F3BC  C001  F028         	movff	?___xxtofl,___flmul@b
  4270  01F3C0  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  4271  01F3C4  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  4272  01F3C8  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  4273  01F3CC  EC32  F0F2         	call	___flmul	;wreg free
  4274  01F3D0  C028  F045         	movff	?___flmul,___fladd@a
  4275  01F3D4  C029  F046         	movff	?___flmul+1,___fladd@a+1
  4276  01F3D8  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  4277  01F3DC  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  4278  01F3E0  C068  F041         	movff	_determine_color_new$2590,___fladd@b
  4279  01F3E4  C069  F042         	movff	_determine_color_new$2590+1,___fladd@b+1
  4280  01F3E8  C06A  F043         	movff	_determine_color_new$2590+2,___fladd@b+2
  4281  01F3EC  C06B  F044         	movff	_determine_color_new$2590+3,___fladd@b+3
  4282  01F3F0  EC47  F0F4         	call	___fladd	;wreg free
  4283  01F3F4  C041  F051         	movff	?___fladd,___fltol@f1
  4284  01F3F8  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  4285  01F3FC  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  4286  01F400  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  4287  01F404  EC03  F0EB         	call	___fltol	;wreg free
  4288  01F408  C051  F074         	movff	?___fltol,determine_color_new@lumin
  4289  01F40C  C052  F075         	movff	?___fltol+1,determine_color_new@lumin+1
  4290  01F410                     
  4291                           ;color.c: 127:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  4292  01F410  0E00               	movlw	0
  4293  01F412  6E2C               	movwf	___flmul@a^0,c
  4294  01F414  0E40               	movlw	64
  4295  01F416  6E2D               	movwf	(___flmul@a+1)^0,c
  4296  01F418  0E1C               	movlw	28
  4297  01F41A  6E2E               	movwf	(___flmul@a+2)^0,c
  4298  01F41C  0E46               	movlw	70
  4299  01F41E  6E2F               	movwf	(___flmul@a+3)^0,c
  4300  01F420  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  4301  01F424  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  4302  01F428  CFDE F060          	movff	postinc2,??_determine_color_new
  4303  01F42C  CFDD F061          	movff	postdec2,??_determine_color_new+1
  4304  01F430  EE20 F006          	lfsr	2,6
  4305  01F434  505B               	movf	determine_color_new@m^0,w,c
  4306  01F436  26D9               	addwf	fsr2l,f,c
  4307  01F438  505C               	movf	(determine_color_new@m+1)^0,w,c
  4308  01F43A  22DA               	addwfc	fsr2h,f,c
  4309  01F43C  CFDE F062          	movff	postinc2,??_determine_color_new+2
  4310  01F440  CFDD F063          	movff	postdec2,??_determine_color_new+3
  4311  01F444  0100               	movlb	0	; () banked
  4312  01F446  5160               	movf	??_determine_color_new& (0+255),w,b
  4313  01F448  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4314  01F44A  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  4315  01F44C  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4316  01F44E  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  4317  01F452  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  4318  01F456  6A03               	clrf	(___xxtofl@val+2)^0,c
  4319  01F458  6A04               	clrf	(___xxtofl@val+3)^0,c
  4320  01F45A  0E00               	movlw	0
  4321  01F45C  ECA1  F0EE         	call	___xxtofl
  4322  01F460  C001  F013         	movff	?___xxtofl,___fldiv@a
  4323  01F464  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4324  01F468  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4325  01F46C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4326  01F470  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  4327  01F474  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  4328  01F478  CFDE F064          	movff	postinc2,??_determine_color_new+4
  4329  01F47C  CFDD F065          	movff	postdec2,??_determine_color_new+5
  4330  01F480  EE20 F00E          	lfsr	2,14
  4331  01F484  505B               	movf	determine_color_new@m^0,w,c
  4332  01F486  26D9               	addwf	fsr2l,f,c
  4333  01F488  505C               	movf	(determine_color_new@m+1)^0,w,c
  4334  01F48A  22DA               	addwfc	fsr2h,f,c
  4335  01F48C  CFDE F066          	movff	postinc2,??_determine_color_new+6
  4336  01F490  CFDD F067          	movff	postdec2,??_determine_color_new+7
  4337  01F494  0100               	movlb	0	; () banked
  4338  01F496  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  4339  01F498  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4340  01F49A  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  4341  01F49C  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4342  01F49E  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  4343  01F4A2  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  4344  01F4A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  4345  01F4A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  4346  01F4AA  0E00               	movlw	0
  4347  01F4AC  ECA1  F0EE         	call	___xxtofl
  4348  01F4B0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4349  01F4B4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4350  01F4B8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4351  01F4BC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4352  01F4C0  EC65  F0F0         	call	___fldiv	;wreg free
  4353  01F4C4  C00F  F028         	movff	?___fldiv,___flmul@b
  4354  01F4C8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4355  01F4CC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4356  01F4D0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4357  01F4D4  EC32  F0F2         	call	___flmul	;wreg free
  4358  01F4D8  C028  F051         	movff	?___flmul,___fltol@f1
  4359  01F4DC  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  4360  01F4E0  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  4361  01F4E4  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  4362  01F4E8  EC03  F0EB         	call	___fltol	;wreg free
  4363  01F4EC  C051  F06C         	movff	?___fltol,determine_color_new@RedRatio
  4364  01F4F0  C052  F06D         	movff	?___fltol+1,determine_color_new@RedRatio+1
  4365  01F4F4                     
  4366                           ;color.c: 128:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  4367  01F4F4  0E00               	movlw	0
  4368  01F4F6  6E2C               	movwf	___flmul@a^0,c
  4369  01F4F8  0E40               	movlw	64
  4370  01F4FA  6E2D               	movwf	(___flmul@a+1)^0,c
  4371  01F4FC  0E1C               	movlw	28
  4372  01F4FE  6E2E               	movwf	(___flmul@a+2)^0,c
  4373  01F500  0E46               	movlw	70
  4374  01F502  6E2F               	movwf	(___flmul@a+3)^0,c
  4375  01F504  EE20 F002          	lfsr	2,2
  4376  01F508  505B               	movf	determine_color_new@m^0,w,c
  4377  01F50A  26D9               	addwf	fsr2l,f,c
  4378  01F50C  505C               	movf	(determine_color_new@m+1)^0,w,c
  4379  01F50E  22DA               	addwfc	fsr2h,f,c
  4380  01F510  CFDE F060          	movff	postinc2,??_determine_color_new
  4381  01F514  CFDD F061          	movff	postdec2,??_determine_color_new+1
  4382  01F518  EE20 F008          	lfsr	2,8
  4383  01F51C  505B               	movf	determine_color_new@m^0,w,c
  4384  01F51E  26D9               	addwf	fsr2l,f,c
  4385  01F520  505C               	movf	(determine_color_new@m+1)^0,w,c
  4386  01F522  22DA               	addwfc	fsr2h,f,c
  4387  01F524  CFDE F062          	movff	postinc2,??_determine_color_new+2
  4388  01F528  CFDD F063          	movff	postdec2,??_determine_color_new+3
  4389  01F52C  0100               	movlb	0	; () banked
  4390  01F52E  5160               	movf	??_determine_color_new& (0+255),w,b
  4391  01F530  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4392  01F532  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  4393  01F534  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4394  01F536  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  4395  01F53A  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  4396  01F53E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4397  01F540  6A04               	clrf	(___xxtofl@val+3)^0,c
  4398  01F542  0E00               	movlw	0
  4399  01F544  ECA1  F0EE         	call	___xxtofl
  4400  01F548  C001  F013         	movff	?___xxtofl,___fldiv@a
  4401  01F54C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4402  01F550  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4403  01F554  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4404  01F558  EE20 F002          	lfsr	2,2
  4405  01F55C  505B               	movf	determine_color_new@m^0,w,c
  4406  01F55E  26D9               	addwf	fsr2l,f,c
  4407  01F560  505C               	movf	(determine_color_new@m+1)^0,w,c
  4408  01F562  22DA               	addwfc	fsr2h,f,c
  4409  01F564  CFDE F064          	movff	postinc2,??_determine_color_new+4
  4410  01F568  CFDD F065          	movff	postdec2,??_determine_color_new+5
  4411  01F56C  EE20 F010          	lfsr	2,16
  4412  01F570  505B               	movf	determine_color_new@m^0,w,c
  4413  01F572  26D9               	addwf	fsr2l,f,c
  4414  01F574  505C               	movf	(determine_color_new@m+1)^0,w,c
  4415  01F576  22DA               	addwfc	fsr2h,f,c
  4416  01F578  CFDE F066          	movff	postinc2,??_determine_color_new+6
  4417  01F57C  CFDD F067          	movff	postdec2,??_determine_color_new+7
  4418  01F580  0100               	movlb	0	; () banked
  4419  01F582  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  4420  01F584  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4421  01F586  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  4422  01F588  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4423  01F58A  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  4424  01F58E  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  4425  01F592  6A03               	clrf	(___xxtofl@val+2)^0,c
  4426  01F594  6A04               	clrf	(___xxtofl@val+3)^0,c
  4427  01F596  0E00               	movlw	0
  4428  01F598  ECA1  F0EE         	call	___xxtofl
  4429  01F59C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4430  01F5A0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4431  01F5A4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4432  01F5A8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4433  01F5AC  EC65  F0F0         	call	___fldiv	;wreg free
  4434  01F5B0  C00F  F028         	movff	?___fldiv,___flmul@b
  4435  01F5B4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4436  01F5B8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4437  01F5BC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4438  01F5C0  EC32  F0F2         	call	___flmul	;wreg free
  4439  01F5C4  C028  F051         	movff	?___flmul,___fltol@f1
  4440  01F5C8  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  4441  01F5CC  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  4442  01F5D0  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  4443  01F5D4  EC03  F0EB         	call	___fltol	;wreg free
  4444  01F5D8  C051  F06E         	movff	?___fltol,determine_color_new@GreenRatio
  4445  01F5DC  C052  F06F         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  4446  01F5E0                     
  4447                           ;color.c: 129:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  4448  01F5E0  0E00               	movlw	0
  4449  01F5E2  6E2C               	movwf	___flmul@a^0,c
  4450  01F5E4  0E40               	movlw	64
  4451  01F5E6  6E2D               	movwf	(___flmul@a+1)^0,c
  4452  01F5E8  0E1C               	movlw	28
  4453  01F5EA  6E2E               	movwf	(___flmul@a+2)^0,c
  4454  01F5EC  0E46               	movlw	70
  4455  01F5EE  6E2F               	movwf	(___flmul@a+3)^0,c
  4456  01F5F0  EE20 F004          	lfsr	2,4
  4457  01F5F4  505B               	movf	determine_color_new@m^0,w,c
  4458  01F5F6  26D9               	addwf	fsr2l,f,c
  4459  01F5F8  505C               	movf	(determine_color_new@m+1)^0,w,c
  4460  01F5FA  22DA               	addwfc	fsr2h,f,c
  4461  01F5FC  CFDE F060          	movff	postinc2,??_determine_color_new
  4462  01F600  CFDD F061          	movff	postdec2,??_determine_color_new+1
  4463  01F604  EE20 F00A          	lfsr	2,10
  4464  01F608  505B               	movf	determine_color_new@m^0,w,c
  4465  01F60A  26D9               	addwf	fsr2l,f,c
  4466  01F60C  505C               	movf	(determine_color_new@m+1)^0,w,c
  4467  01F60E  22DA               	addwfc	fsr2h,f,c
  4468  01F610  CFDE F062          	movff	postinc2,??_determine_color_new+2
  4469  01F614  CFDD F063          	movff	postdec2,??_determine_color_new+3
  4470  01F618  0100               	movlb	0	; () banked
  4471  01F61A  5160               	movf	??_determine_color_new& (0+255),w,b
  4472  01F61C  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  4473  01F61E  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  4474  01F620  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  4475  01F622  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  4476  01F626  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  4477  01F62A  6A03               	clrf	(___xxtofl@val+2)^0,c
  4478  01F62C  6A04               	clrf	(___xxtofl@val+3)^0,c
  4479  01F62E  0E00               	movlw	0
  4480  01F630  ECA1  F0EE         	call	___xxtofl
  4481  01F634  C001  F013         	movff	?___xxtofl,___fldiv@a
  4482  01F638  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4483  01F63C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4484  01F640  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4485  01F644  EE20 F004          	lfsr	2,4
  4486  01F648  505B               	movf	determine_color_new@m^0,w,c
  4487  01F64A  26D9               	addwf	fsr2l,f,c
  4488  01F64C  505C               	movf	(determine_color_new@m+1)^0,w,c
  4489  01F64E  22DA               	addwfc	fsr2h,f,c
  4490  01F650  CFDE F064          	movff	postinc2,??_determine_color_new+4
  4491  01F654  CFDD F065          	movff	postdec2,??_determine_color_new+5
  4492  01F658  EE20 F012          	lfsr	2,18
  4493  01F65C  505B               	movf	determine_color_new@m^0,w,c
  4494  01F65E  26D9               	addwf	fsr2l,f,c
  4495  01F660  505C               	movf	(determine_color_new@m+1)^0,w,c
  4496  01F662  22DA               	addwfc	fsr2h,f,c
  4497  01F664  CFDE F066          	movff	postinc2,??_determine_color_new+6
  4498  01F668  CFDD F067          	movff	postdec2,??_determine_color_new+7
  4499  01F66C  0100               	movlb	0	; () banked
  4500  01F66E  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  4501  01F670  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  4502  01F672  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  4503  01F674  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  4504  01F676  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  4505  01F67A  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  4506  01F67E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4507  01F680  6A04               	clrf	(___xxtofl@val+3)^0,c
  4508  01F682  0E00               	movlw	0
  4509  01F684  ECA1  F0EE         	call	___xxtofl
  4510  01F688  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4511  01F68C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4512  01F690  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4513  01F694  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4514  01F698  EC65  F0F0         	call	___fldiv	;wreg free
  4515  01F69C  C00F  F028         	movff	?___fldiv,___flmul@b
  4516  01F6A0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4517  01F6A4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4518  01F6A8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4519  01F6AC  EC32  F0F2         	call	___flmul	;wreg free
  4520  01F6B0  C028  F051         	movff	?___flmul,___fltol@f1
  4521  01F6B4  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  4522  01F6B8  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  4523  01F6BC  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  4524  01F6C0  EC03  F0EB         	call	___fltol	;wreg free
  4525  01F6C4  C051  F070         	movff	?___fltol,determine_color_new@BlueRatio
  4526  01F6C8  C052  F071         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  4527  01F6CC                     
  4528                           ;color.c: 131:     RelR = (float)RedRatio / (float)GreenRatio;
  4529  01F6CC  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  4530  01F6D0  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4531  01F6D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  4532  01F6D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  4533  01F6D8  0E00               	movlw	0
  4534  01F6DA  ECA1  F0EE         	call	___xxtofl
  4535  01F6DE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4536  01F6E2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4537  01F6E6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4538  01F6EA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4539  01F6EE  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4540  01F6F2  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4541  01F6F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  4542  01F6F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  4543  01F6FA  0E00               	movlw	0
  4544  01F6FC  ECA1  F0EE         	call	___xxtofl
  4545  01F700  C001  F013         	movff	?___xxtofl,___fldiv@a
  4546  01F704  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4547  01F708  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4548  01F70C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4549  01F710  EC65  F0F0         	call	___fldiv	;wreg free
  4550  01F714  C00F  F076         	movff	?___fldiv,determine_color_new@RelR
  4551  01F718  C010  F077         	movff	?___fldiv+1,determine_color_new@RelR+1
  4552  01F71C  C011  F078         	movff	?___fldiv+2,determine_color_new@RelR+2
  4553  01F720  C012  F079         	movff	?___fldiv+3,determine_color_new@RelR+3
  4554  01F724                     
  4555                           ;color.c: 132:     RelG = (float)RedRatio / (float)BlueRatio;
  4556  01F724  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  4557  01F728  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  4558  01F72C  6A03               	clrf	(___xxtofl@val+2)^0,c
  4559  01F72E  6A04               	clrf	(___xxtofl@val+3)^0,c
  4560  01F730  0E00               	movlw	0
  4561  01F732  ECA1  F0EE         	call	___xxtofl
  4562  01F736  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4563  01F73A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4564  01F73E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4565  01F742  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4566  01F746  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4567  01F74A  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4568  01F74E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4569  01F750  6A04               	clrf	(___xxtofl@val+3)^0,c
  4570  01F752  0E00               	movlw	0
  4571  01F754  ECA1  F0EE         	call	___xxtofl
  4572  01F758  C001  F013         	movff	?___xxtofl,___fldiv@a
  4573  01F75C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4574  01F760  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4575  01F764  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4576  01F768  EC65  F0F0         	call	___fldiv	;wreg free
  4577  01F76C  C00F  F07A         	movff	?___fldiv,determine_color_new@RelG
  4578  01F770  C010  F07B         	movff	?___fldiv+1,determine_color_new@RelG+1
  4579  01F774  C011  F07C         	movff	?___fldiv+2,determine_color_new@RelG+2
  4580  01F778  C012  F07D         	movff	?___fldiv+3,determine_color_new@RelG+3
  4581  01F77C                     
  4582                           ;color.c: 133:     RelB = (float)BlueRatio / (float)GreenRatio;
  4583  01F77C  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  4584  01F780  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  4585  01F784  6A03               	clrf	(___xxtofl@val+2)^0,c
  4586  01F786  6A04               	clrf	(___xxtofl@val+3)^0,c
  4587  01F788  0E00               	movlw	0
  4588  01F78A  ECA1  F0EE         	call	___xxtofl
  4589  01F78E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4590  01F792  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4591  01F796  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4592  01F79A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4593  01F79E  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  4594  01F7A2  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  4595  01F7A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  4596  01F7A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  4597  01F7AA  0E00               	movlw	0
  4598  01F7AC  ECA1  F0EE         	call	___xxtofl
  4599  01F7B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  4600  01F7B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4601  01F7B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4602  01F7BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4603  01F7C0  EC65  F0F0         	call	___fldiv	;wreg free
  4604  01F7C4  C00F  F07E         	movff	?___fldiv,determine_color_new@RelB
  4605  01F7C8  C010  F07F         	movff	?___fldiv+1,determine_color_new@RelB+1
  4606  01F7CC  C011  F080         	movff	?___fldiv+2,determine_color_new@RelB+2
  4607  01F7D0  C012  F081         	movff	?___fldiv+3,determine_color_new@RelB+3
  4608  01F7D4                     
  4609                           ;color.c: 135:     if (RelR < 0) {RelR = 0;}
  4610  01F7D4  0100               	movlb	0	; () banked
  4611  01F7D6  BF79               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  4612  01F7D8  EFF2  F0FB         	goto	u3290
  4613  01F7DC  EFF0  F0FB         	goto	u3291
  4614  01F7E0                     u3291:
  4615  01F7E0  EFFA  F0FB         	goto	l3532
  4616  01F7E4                     u3290:
  4617  01F7E4                     
  4618                           ; BSR set to: 0
  4619  01F7E4  0E00               	movlw	0
  4620  01F7E6  6F76               	movwf	determine_color_new@RelR& (0+255),b
  4621  01F7E8  0E00               	movlw	0
  4622  01F7EA  6F77               	movwf	(determine_color_new@RelR+1)& (0+255),b
  4623  01F7EC  0E00               	movlw	0
  4624  01F7EE  6F78               	movwf	(determine_color_new@RelR+2)& (0+255),b
  4625  01F7F0  0E00               	movlw	0
  4626  01F7F2  6F79               	movwf	(determine_color_new@RelR+3)& (0+255),b
  4627  01F7F4                     l3532:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;color.c: 136:     if (RelG < 0) {RelG = 0;}
  4631  01F7F4  BF7D               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  4632  01F7F6  EF01  F0FC         	goto	u3300
  4633  01F7FA  EFFF  F0FB         	goto	u3301
  4634  01F7FE                     u3301:
  4635  01F7FE  EF09  F0FC         	goto	l3536
  4636  01F802                     u3300:
  4637  01F802                     
  4638                           ; BSR set to: 0
  4639  01F802  0E00               	movlw	0
  4640  01F804  6F7A               	movwf	determine_color_new@RelG& (0+255),b
  4641  01F806  0E00               	movlw	0
  4642  01F808  6F7B               	movwf	(determine_color_new@RelG+1)& (0+255),b
  4643  01F80A  0E00               	movlw	0
  4644  01F80C  6F7C               	movwf	(determine_color_new@RelG+2)& (0+255),b
  4645  01F80E  0E00               	movlw	0
  4646  01F810  6F7D               	movwf	(determine_color_new@RelG+3)& (0+255),b
  4647  01F812                     l3536:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;color.c: 137:     if (RelB < 0) {RelB = 0;}
  4651  01F812  BF81               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  4652  01F814  EF10  F0FC         	goto	u3310
  4653  01F818  EF0E  F0FC         	goto	u3311
  4654  01F81C                     u3311:
  4655  01F81C  EF18  F0FC         	goto	l3540
  4656  01F820                     u3310:
  4657  01F820                     
  4658                           ; BSR set to: 0
  4659  01F820  0E00               	movlw	0
  4660  01F822  6F7E               	movwf	determine_color_new@RelB& (0+255),b
  4661  01F824  0E00               	movlw	0
  4662  01F826  6F7F               	movwf	(determine_color_new@RelB+1)& (0+255),b
  4663  01F828  0E00               	movlw	0
  4664  01F82A  6F80               	movwf	(determine_color_new@RelB+2)& (0+255),b
  4665  01F82C  0E00               	movlw	0
  4666  01F82E  6F81               	movwf	(determine_color_new@RelB+3)& (0+255),b
  4667  01F830                     l3540:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;color.c: 140:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1 && lumin>800)
  4671  01F830  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4672  01F834  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4673  01F838  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4674  01F83C  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4675  01F840  0E33               	movlw	51
  4676  01F842  6E11               	movwf	isbtw@low^0,c
  4677  01F844  0E33               	movlw	51
  4678  01F846  6E12               	movwf	(isbtw@low+1)^0,c
  4679  01F848  0EA3               	movlw	163
  4680  01F84A  6E13               	movwf	(isbtw@low+2)^0,c
  4681  01F84C  0E40               	movlw	64
  4682  01F84E  6E14               	movwf	(isbtw@low+3)^0,c
  4683  01F850  0E00               	movlw	0
  4684  01F852  6E15               	movwf	isbtw@high^0,c
  4685  01F854  0E00               	movlw	0
  4686  01F856  6E16               	movwf	(isbtw@high+1)^0,c
  4687  01F858  0EA4               	movlw	164
  4688  01F85A  6E17               	movwf	(isbtw@high+2)^0,c
  4689  01F85C  0E41               	movlw	65
  4690  01F85E  6E18               	movwf	(isbtw@high+3)^0,c
  4691  01F860  EC0B  F0E9         	call	_isbtw	;wreg free
  4692  01F864  040D               	decf	?_isbtw^0,w,c
  4693  01F866  100E               	iorwf	(?_isbtw+1)^0,w,c
  4694  01F868  A4D8               	btfss	status,2,c
  4695  01F86A  EF39  F0FC         	goto	u3321
  4696  01F86E  EF3B  F0FC         	goto	u3320
  4697  01F872                     u3321:
  4698  01F872  EF91  F0FC         	goto	l3550
  4699  01F876                     u3320:
  4700  01F876  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4701  01F87A  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4702  01F87E  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4703  01F882  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4704  01F886  0ECD               	movlw	205
  4705  01F888  6E11               	movwf	isbtw@low^0,c
  4706  01F88A  0ECC               	movlw	204
  4707  01F88C  6E12               	movwf	(isbtw@low+1)^0,c
  4708  01F88E  0E0C               	movlw	12
  4709  01F890  6E13               	movwf	(isbtw@low+2)^0,c
  4710  01F892  0E40               	movlw	64
  4711  01F894  6E14               	movwf	(isbtw@low+3)^0,c
  4712  01F896  0E33               	movlw	51
  4713  01F898  6E15               	movwf	isbtw@high^0,c
  4714  01F89A  0E33               	movlw	51
  4715  01F89C  6E16               	movwf	(isbtw@high+1)^0,c
  4716  01F89E  0E73               	movlw	115
  4717  01F8A0  6E17               	movwf	(isbtw@high+2)^0,c
  4718  01F8A2  0E40               	movlw	64
  4719  01F8A4  6E18               	movwf	(isbtw@high+3)^0,c
  4720  01F8A6  EC0B  F0E9         	call	_isbtw	;wreg free
  4721  01F8AA  040D               	decf	?_isbtw^0,w,c
  4722  01F8AC  100E               	iorwf	(?_isbtw+1)^0,w,c
  4723  01F8AE  A4D8               	btfss	status,2,c
  4724  01F8B0  EF5C  F0FC         	goto	u3331
  4725  01F8B4  EF5E  F0FC         	goto	u3330
  4726  01F8B8                     u3331:
  4727  01F8B8  EF91  F0FC         	goto	l3550
  4728  01F8BC                     u3330:
  4729  01F8BC  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4730  01F8C0  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4731  01F8C4  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4732  01F8C8  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4733  01F8CC  0E66               	movlw	102
  4734  01F8CE  6E11               	movwf	isbtw@low^0,c
  4735  01F8D0  0E66               	movlw	102
  4736  01F8D2  6E12               	movwf	(isbtw@low+1)^0,c
  4737  01F8D4  0EE6               	movlw	230
  4738  01F8D6  6E13               	movwf	(isbtw@low+2)^0,c
  4739  01F8D8  0E3F               	movlw	63
  4740  01F8DA  6E14               	movwf	(isbtw@low+3)^0,c
  4741  01F8DC  0E00               	movlw	0
  4742  01F8DE  6E15               	movwf	isbtw@high^0,c
  4743  01F8E0  0E00               	movlw	0
  4744  01F8E2  6E16               	movwf	(isbtw@high+1)^0,c
  4745  01F8E4  0EB0               	movlw	176
  4746  01F8E6  6E17               	movwf	(isbtw@high+2)^0,c
  4747  01F8E8  0E40               	movlw	64
  4748  01F8EA  6E18               	movwf	(isbtw@high+3)^0,c
  4749  01F8EC  EC0B  F0E9         	call	_isbtw	;wreg free
  4750  01F8F0  040D               	decf	?_isbtw^0,w,c
  4751  01F8F2  100E               	iorwf	(?_isbtw+1)^0,w,c
  4752  01F8F4  A4D8               	btfss	status,2,c
  4753  01F8F6  EF7F  F0FC         	goto	u3341
  4754  01F8FA  EF81  F0FC         	goto	u3340
  4755  01F8FE                     u3341:
  4756  01F8FE  EF91  F0FC         	goto	l3550
  4757  01F902                     u3340:
  4758  01F902  0E21               	movlw	33
  4759  01F904  0100               	movlb	0	; () banked
  4760  01F906  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  4761  01F908  0E03               	movlw	3
  4762  01F90A  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  4763  01F90C  A0D8               	btfss	status,0,c
  4764  01F90E  EF8B  F0FC         	goto	u3351
  4765  01F912  EF8D  F0FC         	goto	u3350
  4766  01F916                     u3351:
  4767  01F916  EF91  F0FC         	goto	l3550
  4768  01F91A                     u3350:
  4769  01F91A                     
  4770                           ; BSR set to: 0
  4771                           ;color.c: 141:     {out = 0;}
  4772  01F91A  0E00               	movlw	0
  4773  01F91C  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4774  01F91E  0E00               	movlw	0
  4775  01F920  6F72               	movwf	determine_color_new@out& (0+255),b
  4776  01F922                     l3550:
  4777                           
  4778                           ;color.c: 144:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1 && lumin>835)
  4779  01F922  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4780  01F926  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4781  01F92A  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4782  01F92E  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4783  01F932  0ECD               	movlw	205
  4784  01F934  6E11               	movwf	isbtw@low^0,c
  4785  01F936  0ECC               	movlw	204
  4786  01F938  6E12               	movwf	(isbtw@low+1)^0,c
  4787  01F93A  0E4C               	movlw	76
  4788  01F93C  6E13               	movwf	(isbtw@low+2)^0,c
  4789  01F93E  0E3E               	movlw	62
  4790  01F940  6E14               	movwf	(isbtw@low+3)^0,c
  4791  01F942  0E48               	movlw	72
  4792  01F944  6E15               	movwf	isbtw@high^0,c
  4793  01F946  0EE1               	movlw	225
  4794  01F948  6E16               	movwf	(isbtw@high+1)^0,c
  4795  01F94A  0EFA               	movlw	250
  4796  01F94C  6E17               	movwf	(isbtw@high+2)^0,c
  4797  01F94E  0E3E               	movlw	62
  4798  01F950  6E18               	movwf	(isbtw@high+3)^0,c
  4799  01F952  EC0B  F0E9         	call	_isbtw	;wreg free
  4800  01F956  040D               	decf	?_isbtw^0,w,c
  4801  01F958  100E               	iorwf	(?_isbtw+1)^0,w,c
  4802  01F95A  A4D8               	btfss	status,2,c
  4803  01F95C  EFB2  F0FC         	goto	u3361
  4804  01F960  EFB4  F0FC         	goto	u3360
  4805  01F964                     u3361:
  4806  01F964  EF0A  F0FD         	goto	l3560
  4807  01F968                     u3360:
  4808  01F968  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4809  01F96C  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4810  01F970  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4811  01F974  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4812  01F978  0E29               	movlw	41
  4813  01F97A  6E11               	movwf	isbtw@low^0,c
  4814  01F97C  0E5C               	movlw	92
  4815  01F97E  6E12               	movwf	(isbtw@low+1)^0,c
  4816  01F980  0E8F               	movlw	143
  4817  01F982  6E13               	movwf	(isbtw@low+2)^0,c
  4818  01F984  0E3E               	movlw	62
  4819  01F986  6E14               	movwf	(isbtw@low+3)^0,c
  4820  01F988  0E3D               	movlw	61
  4821  01F98A  6E15               	movwf	isbtw@high^0,c
  4822  01F98C  0E0A               	movlw	10
  4823  01F98E  6E16               	movwf	(isbtw@high+1)^0,c
  4824  01F990  0E17               	movlw	23
  4825  01F992  6E17               	movwf	(isbtw@high+2)^0,c
  4826  01F994  0E3F               	movlw	63
  4827  01F996  6E18               	movwf	(isbtw@high+3)^0,c
  4828  01F998  EC0B  F0E9         	call	_isbtw	;wreg free
  4829  01F99C  040D               	decf	?_isbtw^0,w,c
  4830  01F99E  100E               	iorwf	(?_isbtw+1)^0,w,c
  4831  01F9A0  A4D8               	btfss	status,2,c
  4832  01F9A2  EFD5  F0FC         	goto	u3371
  4833  01F9A6  EFD7  F0FC         	goto	u3370
  4834  01F9AA                     u3371:
  4835  01F9AA  EF0A  F0FD         	goto	l3560
  4836  01F9AE                     u3370:
  4837  01F9AE  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4838  01F9B2  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4839  01F9B6  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4840  01F9BA  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4841  01F9BE  0E33               	movlw	51
  4842  01F9C0  6E11               	movwf	isbtw@low^0,c
  4843  01F9C2  0E33               	movlw	51
  4844  01F9C4  6E12               	movwf	(isbtw@low+1)^0,c
  4845  01F9C6  0E33               	movlw	51
  4846  01F9C8  6E13               	movwf	(isbtw@low+2)^0,c
  4847  01F9CA  0E3F               	movlw	63
  4848  01F9CC  6E14               	movwf	(isbtw@low+3)^0,c
  4849  01F9CE  0E66               	movlw	102
  4850  01F9D0  6E15               	movwf	isbtw@high^0,c
  4851  01F9D2  0E66               	movlw	102
  4852  01F9D4  6E16               	movwf	(isbtw@high+1)^0,c
  4853  01F9D6  0E66               	movlw	102
  4854  01F9D8  6E17               	movwf	(isbtw@high+2)^0,c
  4855  01F9DA  0E3F               	movlw	63
  4856  01F9DC  6E18               	movwf	(isbtw@high+3)^0,c
  4857  01F9DE  EC0B  F0E9         	call	_isbtw	;wreg free
  4858  01F9E2  040D               	decf	?_isbtw^0,w,c
  4859  01F9E4  100E               	iorwf	(?_isbtw+1)^0,w,c
  4860  01F9E6  A4D8               	btfss	status,2,c
  4861  01F9E8  EFF8  F0FC         	goto	u3381
  4862  01F9EC  EFFA  F0FC         	goto	u3380
  4863  01F9F0                     u3381:
  4864  01F9F0  EF0A  F0FD         	goto	l3560
  4865  01F9F4                     u3380:
  4866  01F9F4  0E44               	movlw	68
  4867  01F9F6  0100               	movlb	0	; () banked
  4868  01F9F8  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  4869  01F9FA  0E03               	movlw	3
  4870  01F9FC  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  4871  01F9FE  A0D8               	btfss	status,0,c
  4872  01FA00  EF04  F0FD         	goto	u3391
  4873  01FA04  EF06  F0FD         	goto	u3390
  4874  01FA08                     u3391:
  4875  01FA08  EF0A  F0FD         	goto	l3560
  4876  01FA0C                     u3390:
  4877  01FA0C                     
  4878                           ; BSR set to: 0
  4879                           ;color.c: 145:     {out = 1;}
  4880  01FA0C  0E00               	movlw	0
  4881  01FA0E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4882  01FA10  0E01               	movlw	1
  4883  01FA12  6F72               	movwf	determine_color_new@out& (0+255),b
  4884  01FA14                     l3560:
  4885                           
  4886                           ;color.c: 148:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1)
  4887  01FA14  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4888  01FA18  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4889  01FA1C  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4890  01FA20  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4891  01FA24  0ECD               	movlw	205
  4892  01FA26  6E11               	movwf	isbtw@low^0,c
  4893  01FA28  0ECC               	movlw	204
  4894  01FA2A  6E12               	movwf	(isbtw@low+1)^0,c
  4895  01FA2C  0ECC               	movlw	204
  4896  01FA2E  6E13               	movwf	(isbtw@low+2)^0,c
  4897  01FA30  0E3D               	movlw	61
  4898  01FA32  6E14               	movwf	(isbtw@low+3)^0,c
  4899  01FA34  0ECD               	movlw	205
  4900  01FA36  6E15               	movwf	isbtw@high^0,c
  4901  01FA38  0ECC               	movlw	204
  4902  01FA3A  6E16               	movwf	(isbtw@high+1)^0,c
  4903  01FA3C  0E0C               	movlw	12
  4904  01FA3E  6E17               	movwf	(isbtw@high+2)^0,c
  4905  01FA40  0E3F               	movlw	63
  4906  01FA42  6E18               	movwf	(isbtw@high+3)^0,c
  4907  01FA44  EC0B  F0E9         	call	_isbtw	;wreg free
  4908  01FA48  040D               	decf	?_isbtw^0,w,c
  4909  01FA4A  100E               	iorwf	(?_isbtw+1)^0,w,c
  4910  01FA4C  A4D8               	btfss	status,2,c
  4911  01FA4E  EF2B  F0FD         	goto	u3401
  4912  01FA52  EF2D  F0FD         	goto	u3400
  4913  01FA56                     u3401:
  4914  01FA56  EF78  F0FD         	goto	l3568
  4915  01FA5A                     u3400:
  4916  01FA5A  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  4917  01FA5E  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  4918  01FA62  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  4919  01FA66  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  4920  01FA6A  0ECD               	movlw	205
  4921  01FA6C  6E11               	movwf	isbtw@low^0,c
  4922  01FA6E  0ECC               	movlw	204
  4923  01FA70  6E12               	movwf	(isbtw@low+1)^0,c
  4924  01FA72  0ECC               	movlw	204
  4925  01FA74  6E13               	movwf	(isbtw@low+2)^0,c
  4926  01FA76  0E3D               	movlw	61
  4927  01FA78  6E14               	movwf	(isbtw@low+3)^0,c
  4928  01FA7A  0E14               	movlw	20
  4929  01FA7C  6E15               	movwf	isbtw@high^0,c
  4930  01FA7E  0EAE               	movlw	174
  4931  01FA80  6E16               	movwf	(isbtw@high+1)^0,c
  4932  01FA82  0EC7               	movlw	199
  4933  01FA84  6E17               	movwf	(isbtw@high+2)^0,c
  4934  01FA86  0E3E               	movlw	62
  4935  01FA88  6E18               	movwf	(isbtw@high+3)^0,c
  4936  01FA8A  EC0B  F0E9         	call	_isbtw	;wreg free
  4937  01FA8E  040D               	decf	?_isbtw^0,w,c
  4938  01FA90  100E               	iorwf	(?_isbtw+1)^0,w,c
  4939  01FA92  A4D8               	btfss	status,2,c
  4940  01FA94  EF4E  F0FD         	goto	u3411
  4941  01FA98  EF50  F0FD         	goto	u3410
  4942  01FA9C                     u3411:
  4943  01FA9C  EF78  F0FD         	goto	l3568
  4944  01FAA0                     u3410:
  4945  01FAA0  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  4946  01FAA4  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  4947  01FAA8  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  4948  01FAAC  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  4949  01FAB0  0E00               	movlw	0
  4950  01FAB2  6E11               	movwf	isbtw@low^0,c
  4951  01FAB4  0E00               	movlw	0
  4952  01FAB6  6E12               	movwf	(isbtw@low+1)^0,c
  4953  01FAB8  0E80               	movlw	128
  4954  01FABA  6E13               	movwf	(isbtw@low+2)^0,c
  4955  01FABC  0E3F               	movlw	63
  4956  01FABE  6E14               	movwf	(isbtw@low+3)^0,c
  4957  01FAC0  0E9A               	movlw	154
  4958  01FAC2  6E15               	movwf	isbtw@high^0,c
  4959  01FAC4  0E99               	movlw	153
  4960  01FAC6  6E16               	movwf	(isbtw@high+1)^0,c
  4961  01FAC8  0E99               	movlw	153
  4962  01FACA  6E17               	movwf	(isbtw@high+2)^0,c
  4963  01FACC  0E3F               	movlw	63
  4964  01FACE  6E18               	movwf	(isbtw@high+3)^0,c
  4965  01FAD0  EC0B  F0E9         	call	_isbtw	;wreg free
  4966  01FAD4  040D               	decf	?_isbtw^0,w,c
  4967  01FAD6  100E               	iorwf	(?_isbtw+1)^0,w,c
  4968  01FAD8  A4D8               	btfss	status,2,c
  4969  01FADA  EF71  F0FD         	goto	u3421
  4970  01FADE  EF73  F0FD         	goto	u3420
  4971  01FAE2                     u3421:
  4972  01FAE2  EF78  F0FD         	goto	l3568
  4973  01FAE6                     u3420:
  4974  01FAE6                     
  4975                           ;color.c: 149:     {out = 2;}
  4976  01FAE6  0E00               	movlw	0
  4977  01FAE8  0100               	movlb	0	; () banked
  4978  01FAEA  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4979  01FAEC  0E02               	movlw	2
  4980  01FAEE  6F72               	movwf	determine_color_new@out& (0+255),b
  4981  01FAF0                     l3568:
  4982                           
  4983                           ;color.c: 152:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1 && lumin>850)
  4984  01FAF0  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  4985  01FAF4  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  4986  01FAF8  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  4987  01FAFC  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  4988  01FB00  0E9A               	movlw	154
  4989  01FB02  6E11               	movwf	isbtw@low^0,c
  4990  01FB04  0E99               	movlw	153
  4991  01FB06  6E12               	movwf	(isbtw@low+1)^0,c
  4992  01FB08  0E99               	movlw	153
  4993  01FB0A  6E13               	movwf	(isbtw@low+2)^0,c
  4994  01FB0C  0E3F               	movlw	63
  4995  01FB0E  6E14               	movwf	(isbtw@low+3)^0,c
  4996  01FB10  0E33               	movlw	51
  4997  01FB12  6E15               	movwf	isbtw@high^0,c
  4998  01FB14  0E33               	movlw	51
  4999  01FB16  6E16               	movwf	(isbtw@high+1)^0,c
  5000  01FB18  0EB3               	movlw	179
  5001  01FB1A  6E17               	movwf	(isbtw@high+2)^0,c
  5002  01FB1C  0E3F               	movlw	63
  5003  01FB1E  6E18               	movwf	(isbtw@high+3)^0,c
  5004  01FB20  EC0B  F0E9         	call	_isbtw	;wreg free
  5005  01FB24  040D               	decf	?_isbtw^0,w,c
  5006  01FB26  100E               	iorwf	(?_isbtw+1)^0,w,c
  5007  01FB28  A4D8               	btfss	status,2,c
  5008  01FB2A  EF99  F0FD         	goto	u3431
  5009  01FB2E  EF9B  F0FD         	goto	u3430
  5010  01FB32                     u3431:
  5011  01FB32  EFF1  F0FD         	goto	l3578
  5012  01FB36                     u3430:
  5013  01FB36  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  5014  01FB3A  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  5015  01FB3E  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  5016  01FB42  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  5017  01FB46  0E00               	movlw	0
  5018  01FB48  6E11               	movwf	isbtw@low^0,c
  5019  01FB4A  0E00               	movlw	0
  5020  01FB4C  6E12               	movwf	(isbtw@low+1)^0,c
  5021  01FB4E  0EC0               	movlw	192
  5022  01FB50  6E13               	movwf	(isbtw@low+2)^0,c
  5023  01FB52  0E3F               	movlw	63
  5024  01FB54  6E14               	movwf	(isbtw@low+3)^0,c
  5025  01FB56  0EEC               	movlw	236
  5026  01FB58  6E15               	movwf	isbtw@high^0,c
  5027  01FB5A  0E51               	movlw	81
  5028  01FB5C  6E16               	movwf	(isbtw@high+1)^0,c
  5029  01FB5E  0ED8               	movlw	216
  5030  01FB60  6E17               	movwf	(isbtw@high+2)^0,c
  5031  01FB62  0E3F               	movlw	63
  5032  01FB64  6E18               	movwf	(isbtw@high+3)^0,c
  5033  01FB66  EC0B  F0E9         	call	_isbtw	;wreg free
  5034  01FB6A  040D               	decf	?_isbtw^0,w,c
  5035  01FB6C  100E               	iorwf	(?_isbtw+1)^0,w,c
  5036  01FB6E  A4D8               	btfss	status,2,c
  5037  01FB70  EFBC  F0FD         	goto	u3441
  5038  01FB74  EFBE  F0FD         	goto	u3440
  5039  01FB78                     u3441:
  5040  01FB78  EFF1  F0FD         	goto	l3578
  5041  01FB7C                     u3440:
  5042  01FB7C  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  5043  01FB80  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  5044  01FB84  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  5045  01FB88  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  5046  01FB8C  0ECD               	movlw	205
  5047  01FB8E  6E11               	movwf	isbtw@low^0,c
  5048  01FB90  0ECC               	movlw	204
  5049  01FB92  6E12               	movwf	(isbtw@low+1)^0,c
  5050  01FB94  0E4C               	movlw	76
  5051  01FB96  6E13               	movwf	(isbtw@low+2)^0,c
  5052  01FB98  0E3F               	movlw	63
  5053  01FB9A  6E14               	movwf	(isbtw@low+3)^0,c
  5054  01FB9C  0E66               	movlw	102
  5055  01FB9E  6E15               	movwf	isbtw@high^0,c
  5056  01FBA0  0E66               	movlw	102
  5057  01FBA2  6E16               	movwf	(isbtw@high+1)^0,c
  5058  01FBA4  0E66               	movlw	102
  5059  01FBA6  6E17               	movwf	(isbtw@high+2)^0,c
  5060  01FBA8  0E3F               	movlw	63
  5061  01FBAA  6E18               	movwf	(isbtw@high+3)^0,c
  5062  01FBAC  EC0B  F0E9         	call	_isbtw	;wreg free
  5063  01FBB0  040D               	decf	?_isbtw^0,w,c
  5064  01FBB2  100E               	iorwf	(?_isbtw+1)^0,w,c
  5065  01FBB4  A4D8               	btfss	status,2,c
  5066  01FBB6  EFDF  F0FD         	goto	u3451
  5067  01FBBA  EFE1  F0FD         	goto	u3450
  5068  01FBBE                     u3451:
  5069  01FBBE  EFF1  F0FD         	goto	l3578
  5070  01FBC2                     u3450:
  5071  01FBC2  0E53               	movlw	83
  5072  01FBC4  0100               	movlb	0	; () banked
  5073  01FBC6  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  5074  01FBC8  0E03               	movlw	3
  5075  01FBCA  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  5076  01FBCC  A0D8               	btfss	status,0,c
  5077  01FBCE  EFEB  F0FD         	goto	u3461
  5078  01FBD2  EFED  F0FD         	goto	u3460
  5079  01FBD6                     u3461:
  5080  01FBD6  EFF1  F0FD         	goto	l3578
  5081  01FBDA                     u3460:
  5082  01FBDA                     
  5083                           ; BSR set to: 0
  5084                           ;color.c: 153:     {out = 3;}
  5085  01FBDA  0E00               	movlw	0
  5086  01FBDC  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  5087  01FBDE  0E03               	movlw	3
  5088  01FBE0  6F72               	movwf	determine_color_new@out& (0+255),b
  5089  01FBE2                     l3578:
  5090                           
  5091                           ;color.c: 156:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1 && lumin>830)
  5092  01FBE2  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  5093  01FBE6  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  5094  01FBEA  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  5095  01FBEE  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  5096  01FBF2  0E14               	movlw	20
  5097  01FBF4  6E11               	movwf	isbtw@low^0,c
  5098  01FBF6  0EAE               	movlw	174
  5099  01FBF8  6E12               	movwf	(isbtw@low+1)^0,c
  5100  01FBFA  0EC7               	movlw	199
  5101  01FBFC  6E13               	movwf	(isbtw@low+2)^0,c
  5102  01FBFE  0E3F               	movlw	63
  5103  01FC00  6E14               	movwf	(isbtw@low+3)^0,c
  5104  01FC02  0E71               	movlw	113
  5105  01FC04  6E15               	movwf	isbtw@high^0,c
  5106  01FC06  0E3D               	movlw	61
  5107  01FC08  6E16               	movwf	(isbtw@high+1)^0,c
  5108  01FC0A  0EEA               	movlw	234
  5109  01FC0C  6E17               	movwf	(isbtw@high+2)^0,c
  5110  01FC0E  0E3F               	movlw	63
  5111  01FC10  6E18               	movwf	(isbtw@high+3)^0,c
  5112  01FC12  EC0B  F0E9         	call	_isbtw	;wreg free
  5113  01FC16  040D               	decf	?_isbtw^0,w,c
  5114  01FC18  100E               	iorwf	(?_isbtw+1)^0,w,c
  5115  01FC1A  A4D8               	btfss	status,2,c
  5116  01FC1C  EF12  F0FE         	goto	u3471
  5117  01FC20  EF14  F0FE         	goto	u3470
  5118  01FC24                     u3471:
  5119  01FC24  EF6A  F0FE         	goto	l3588
  5120  01FC28                     u3470:
  5121  01FC28  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  5122  01FC2C  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  5123  01FC30  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  5124  01FC34  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  5125  01FC38  0EA4               	movlw	164
  5126  01FC3A  6E11               	movwf	isbtw@low^0,c
  5127  01FC3C  0E70               	movlw	112
  5128  01FC3E  6E12               	movwf	(isbtw@low+1)^0,c
  5129  01FC40  0E9D               	movlw	157
  5130  01FC42  6E13               	movwf	(isbtw@low+2)^0,c
  5131  01FC44  0E3F               	movlw	63
  5132  01FC46  6E14               	movwf	(isbtw@low+3)^0,c
  5133  01FC48  0E00               	movlw	0
  5134  01FC4A  6E15               	movwf	isbtw@high^0,c
  5135  01FC4C  0E00               	movlw	0
  5136  01FC4E  6E16               	movwf	(isbtw@high+1)^0,c
  5137  01FC50  0EC0               	movlw	192
  5138  01FC52  6E17               	movwf	(isbtw@high+2)^0,c
  5139  01FC54  0E3F               	movlw	63
  5140  01FC56  6E18               	movwf	(isbtw@high+3)^0,c
  5141  01FC58  EC0B  F0E9         	call	_isbtw	;wreg free
  5142  01FC5C  040D               	decf	?_isbtw^0,w,c
  5143  01FC5E  100E               	iorwf	(?_isbtw+1)^0,w,c
  5144  01FC60  A4D8               	btfss	status,2,c
  5145  01FC62  EF35  F0FE         	goto	u3481
  5146  01FC66  EF37  F0FE         	goto	u3480
  5147  01FC6A                     u3481:
  5148  01FC6A  EF6A  F0FE         	goto	l3588
  5149  01FC6E                     u3480:
  5150  01FC6E  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  5151  01FC72  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  5152  01FC76  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  5153  01FC7A  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  5154  01FC7E  0E33               	movlw	51
  5155  01FC80  6E11               	movwf	isbtw@low^0,c
  5156  01FC82  0E33               	movlw	51
  5157  01FC84  6E12               	movwf	(isbtw@low+1)^0,c
  5158  01FC86  0E93               	movlw	147
  5159  01FC88  6E13               	movwf	(isbtw@low+2)^0,c
  5160  01FC8A  0E3F               	movlw	63
  5161  01FC8C  6E14               	movwf	(isbtw@low+3)^0,c
  5162  01FC8E  0E66               	movlw	102
  5163  01FC90  6E15               	movwf	isbtw@high^0,c
  5164  01FC92  0E66               	movlw	102
  5165  01FC94  6E16               	movwf	(isbtw@high+1)^0,c
  5166  01FC96  0EA6               	movlw	166
  5167  01FC98  6E17               	movwf	(isbtw@high+2)^0,c
  5168  01FC9A  0E3F               	movlw	63
  5169  01FC9C  6E18               	movwf	(isbtw@high+3)^0,c
  5170  01FC9E  EC0B  F0E9         	call	_isbtw	;wreg free
  5171  01FCA2  040D               	decf	?_isbtw^0,w,c
  5172  01FCA4  100E               	iorwf	(?_isbtw+1)^0,w,c
  5173  01FCA6  A4D8               	btfss	status,2,c
  5174  01FCA8  EF58  F0FE         	goto	u3491
  5175  01FCAC  EF5A  F0FE         	goto	u3490
  5176  01FCB0                     u3491:
  5177  01FCB0  EF6A  F0FE         	goto	l3588
  5178  01FCB4                     u3490:
  5179  01FCB4  0E3F               	movlw	63
  5180  01FCB6  0100               	movlb	0	; () banked
  5181  01FCB8  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  5182  01FCBA  0E03               	movlw	3
  5183  01FCBC  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  5184  01FCBE  A0D8               	btfss	status,0,c
  5185  01FCC0  EF64  F0FE         	goto	u3501
  5186  01FCC4  EF66  F0FE         	goto	u3500
  5187  01FCC8                     u3501:
  5188  01FCC8  EF6A  F0FE         	goto	l3588
  5189  01FCCC                     u3500:
  5190  01FCCC                     
  5191                           ; BSR set to: 0
  5192                           ;color.c: 157:     {out = 4;}
  5193  01FCCC  0E00               	movlw	0
  5194  01FCCE  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  5195  01FCD0  0E04               	movlw	4
  5196  01FCD2  6F72               	movwf	determine_color_new@out& (0+255),b
  5197  01FCD4                     l3588:
  5198                           
  5199                           ;color.c: 160:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1 && lumin>800)
  5200  01FCD4  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  5201  01FCD8  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  5202  01FCDC  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  5203  01FCE0  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  5204  01FCE4  0E66               	movlw	102
  5205  01FCE6  6E11               	movwf	isbtw@low^0,c
  5206  01FCE8  0E66               	movlw	102
  5207  01FCEA  6E12               	movwf	(isbtw@low+1)^0,c
  5208  01FCEC  0E46               	movlw	70
  5209  01FCEE  6E13               	movwf	(isbtw@low+2)^0,c
  5210  01FCF0  0E40               	movlw	64
  5211  01FCF2  6E14               	movwf	(isbtw@low+3)^0,c
  5212  01FCF4  0E33               	movlw	51
  5213  01FCF6  6E15               	movwf	isbtw@high^0,c
  5214  01FCF8  0E33               	movlw	51
  5215  01FCFA  6E16               	movwf	(isbtw@high+1)^0,c
  5216  01FCFC  0E9B               	movlw	155
  5217  01FCFE  6E17               	movwf	(isbtw@high+2)^0,c
  5218  01FD00  0E40               	movlw	64
  5219  01FD02  6E18               	movwf	(isbtw@high+3)^0,c
  5220  01FD04  EC0B  F0E9         	call	_isbtw	;wreg free
  5221  01FD08  040D               	decf	?_isbtw^0,w,c
  5222  01FD0A  100E               	iorwf	(?_isbtw+1)^0,w,c
  5223  01FD0C  A4D8               	btfss	status,2,c
  5224  01FD0E  EF8B  F0FE         	goto	u3511
  5225  01FD12  EF8D  F0FE         	goto	u3510
  5226  01FD16                     u3511:
  5227  01FD16  EFE3  F0FE         	goto	l3598
  5228  01FD1A                     u3510:
  5229  01FD1A  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  5230  01FD1E  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  5231  01FD22  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  5232  01FD26  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  5233  01FD2A  0ECD               	movlw	205
  5234  01FD2C  6E11               	movwf	isbtw@low^0,c
  5235  01FD2E  0ECC               	movlw	204
  5236  01FD30  6E12               	movwf	(isbtw@low+1)^0,c
  5237  01FD32  0E0C               	movlw	12
  5238  01FD34  6E13               	movwf	(isbtw@low+2)^0,c
  5239  01FD36  0E40               	movlw	64
  5240  01FD38  6E14               	movwf	(isbtw@low+3)^0,c
  5241  01FD3A  0EB8               	movlw	184
  5242  01FD3C  6E15               	movwf	isbtw@high^0,c
  5243  01FD3E  0E1E               	movlw	30
  5244  01FD40  6E16               	movwf	(isbtw@high+1)^0,c
  5245  01FD42  0E35               	movlw	53
  5246  01FD44  6E17               	movwf	(isbtw@high+2)^0,c
  5247  01FD46  0E40               	movlw	64
  5248  01FD48  6E18               	movwf	(isbtw@high+3)^0,c
  5249  01FD4A  EC0B  F0E9         	call	_isbtw	;wreg free
  5250  01FD4E  040D               	decf	?_isbtw^0,w,c
  5251  01FD50  100E               	iorwf	(?_isbtw+1)^0,w,c
  5252  01FD52  A4D8               	btfss	status,2,c
  5253  01FD54  EFAE  F0FE         	goto	u3521
  5254  01FD58  EFB0  F0FE         	goto	u3520
  5255  01FD5C                     u3521:
  5256  01FD5C  EFE3  F0FE         	goto	l3598
  5257  01FD60                     u3520:
  5258  01FD60  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  5259  01FD64  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  5260  01FD68  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  5261  01FD6C  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  5262  01FD70  0E5C               	movlw	92
  5263  01FD72  6E11               	movwf	isbtw@low^0,c
  5264  01FD74  0E8F               	movlw	143
  5265  01FD76  6E12               	movwf	(isbtw@low+1)^0,c
  5266  01FD78  0EA2               	movlw	162
  5267  01FD7A  6E13               	movwf	(isbtw@low+2)^0,c
  5268  01FD7C  0E3F               	movlw	63
  5269  01FD7E  6E14               	movwf	(isbtw@low+3)^0,c
  5270  01FD80  0E66               	movlw	102
  5271  01FD82  6E15               	movwf	isbtw@high^0,c
  5272  01FD84  0E66               	movlw	102
  5273  01FD86  6E16               	movwf	(isbtw@high+1)^0,c
  5274  01FD88  0EE6               	movlw	230
  5275  01FD8A  6E17               	movwf	(isbtw@high+2)^0,c
  5276  01FD8C  0E3F               	movlw	63
  5277  01FD8E  6E18               	movwf	(isbtw@high+3)^0,c
  5278  01FD90  EC0B  F0E9         	call	_isbtw	;wreg free
  5279  01FD94  040D               	decf	?_isbtw^0,w,c
  5280  01FD96  100E               	iorwf	(?_isbtw+1)^0,w,c
  5281  01FD98  A4D8               	btfss	status,2,c
  5282  01FD9A  EFD1  F0FE         	goto	u3531
  5283  01FD9E  EFD3  F0FE         	goto	u3530
  5284  01FDA2                     u3531:
  5285  01FDA2  EFE3  F0FE         	goto	l3598
  5286  01FDA6                     u3530:
  5287  01FDA6  0E21               	movlw	33
  5288  01FDA8  0100               	movlb	0	; () banked
  5289  01FDAA  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  5290  01FDAC  0E03               	movlw	3
  5291  01FDAE  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  5292  01FDB0  A0D8               	btfss	status,0,c
  5293  01FDB2  EFDD  F0FE         	goto	u3541
  5294  01FDB6  EFDF  F0FE         	goto	u3540
  5295  01FDBA                     u3541:
  5296  01FDBA  EFE3  F0FE         	goto	l3598
  5297  01FDBE                     u3540:
  5298  01FDBE                     
  5299                           ; BSR set to: 0
  5300                           ;color.c: 161:     {;color.c: 162:         out = 5;}
  5301  01FDBE  0E00               	movlw	0
  5302  01FDC0  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  5303  01FDC2  0E05               	movlw	5
  5304  01FDC4  6F72               	movwf	determine_color_new@out& (0+255),b
  5305  01FDC6                     l3598:
  5306                           
  5307                           ;color.c: 165:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1 && lumin>820)
  5308  01FDC6  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  5309  01FDCA  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  5310  01FDCE  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  5311  01FDD2  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  5312  01FDD6  0E9A               	movlw	154
  5313  01FDD8  6E11               	movwf	isbtw@low^0,c
  5314  01FDDA  0E99               	movlw	153
  5315  01FDDC  6E12               	movwf	(isbtw@low+1)^0,c
  5316  01FDDE  0E19               	movlw	25
  5317  01FDE0  6E13               	movwf	(isbtw@low+2)^0,c
  5318  01FDE2  0E3F               	movlw	63
  5319  01FDE4  6E14               	movwf	(isbtw@low+3)^0,c
  5320  01FDE6  0EF6               	movlw	246
  5321  01FDE8  6E15               	movwf	isbtw@high^0,c
  5322  01FDEA  0E28               	movlw	40
  5323  01FDEC  6E16               	movwf	(isbtw@high+1)^0,c
  5324  01FDEE  0E5C               	movlw	92
  5325  01FDF0  6E17               	movwf	(isbtw@high+2)^0,c
  5326  01FDF2  0E3F               	movlw	63
  5327  01FDF4  6E18               	movwf	(isbtw@high+3)^0,c
  5328  01FDF6  EC0B  F0E9         	call	_isbtw	;wreg free
  5329  01FDFA  040D               	decf	?_isbtw^0,w,c
  5330  01FDFC  100E               	iorwf	(?_isbtw+1)^0,w,c
  5331  01FDFE  A4D8               	btfss	status,2,c
  5332  01FE00  EF04  F0FF         	goto	u3551
  5333  01FE04  EF06  F0FF         	goto	u3550
  5334  01FE08                     u3551:
  5335  01FE08  EF5C  F0FF         	goto	l3608
  5336  01FE0C                     u3550:
  5337  01FE0C  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  5338  01FE10  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  5339  01FE14  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  5340  01FE18  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  5341  01FE1C  0E9A               	movlw	154
  5342  01FE1E  6E11               	movwf	isbtw@low^0,c
  5343  01FE20  0E99               	movlw	153
  5344  01FE22  6E12               	movwf	(isbtw@low+1)^0,c
  5345  01FE24  0E19               	movlw	25
  5346  01FE26  6E13               	movwf	(isbtw@low+2)^0,c
  5347  01FE28  0E3F               	movlw	63
  5348  01FE2A  6E14               	movwf	(isbtw@low+3)^0,c
  5349  01FE2C  0E9A               	movlw	154
  5350  01FE2E  6E15               	movwf	isbtw@high^0,c
  5351  01FE30  0E99               	movlw	153
  5352  01FE32  6E16               	movwf	(isbtw@high+1)^0,c
  5353  01FE34  0E59               	movlw	89
  5354  01FE36  6E17               	movwf	(isbtw@high+2)^0,c
  5355  01FE38  0E3F               	movlw	63
  5356  01FE3A  6E18               	movwf	(isbtw@high+3)^0,c
  5357  01FE3C  EC0B  F0E9         	call	_isbtw	;wreg free
  5358  01FE40  040D               	decf	?_isbtw^0,w,c
  5359  01FE42  100E               	iorwf	(?_isbtw+1)^0,w,c
  5360  01FE44  A4D8               	btfss	status,2,c
  5361  01FE46  EF27  F0FF         	goto	u3561
  5362  01FE4A  EF29  F0FF         	goto	u3560
  5363  01FE4E                     u3561:
  5364  01FE4E  EF5C  F0FF         	goto	l3608
  5365  01FE52                     u3560:
  5366  01FE52  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  5367  01FE56  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  5368  01FE5A  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  5369  01FE5E  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  5370  01FE62  0E33               	movlw	51
  5371  01FE64  6E11               	movwf	isbtw@low^0,c
  5372  01FE66  0E33               	movlw	51
  5373  01FE68  6E12               	movwf	(isbtw@low+1)^0,c
  5374  01FE6A  0E73               	movlw	115
  5375  01FE6C  6E13               	movwf	(isbtw@low+2)^0,c
  5376  01FE6E  0E3F               	movlw	63
  5377  01FE70  6E14               	movwf	(isbtw@low+3)^0,c
  5378  01FE72  0E29               	movlw	41
  5379  01FE74  6E15               	movwf	isbtw@high^0,c
  5380  01FE76  0E5C               	movlw	92
  5381  01FE78  6E16               	movwf	(isbtw@high+1)^0,c
  5382  01FE7A  0E8F               	movlw	143
  5383  01FE7C  6E17               	movwf	(isbtw@high+2)^0,c
  5384  01FE7E  0E3F               	movlw	63
  5385  01FE80  6E18               	movwf	(isbtw@high+3)^0,c
  5386  01FE82  EC0B  F0E9         	call	_isbtw	;wreg free
  5387  01FE86  040D               	decf	?_isbtw^0,w,c
  5388  01FE88  100E               	iorwf	(?_isbtw+1)^0,w,c
  5389  01FE8A  A4D8               	btfss	status,2,c
  5390  01FE8C  EF4A  F0FF         	goto	u3571
  5391  01FE90  EF4C  F0FF         	goto	u3570
  5392  01FE94                     u3571:
  5393  01FE94  EF5C  F0FF         	goto	l3608
  5394  01FE98                     u3570:
  5395  01FE98  0E35               	movlw	53
  5396  01FE9A  0100               	movlb	0	; () banked
  5397  01FE9C  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  5398  01FE9E  0E03               	movlw	3
  5399  01FEA0  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  5400  01FEA2  A0D8               	btfss	status,0,c
  5401  01FEA4  EF56  F0FF         	goto	u3581
  5402  01FEA8  EF58  F0FF         	goto	u3580
  5403  01FEAC                     u3581:
  5404  01FEAC  EF5C  F0FF         	goto	l3608
  5405  01FEB0                     u3580:
  5406  01FEB0                     
  5407                           ; BSR set to: 0
  5408                           ;color.c: 166:     {out = 6;}
  5409  01FEB0  0E00               	movlw	0
  5410  01FEB2  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  5411  01FEB4  0E06               	movlw	6
  5412  01FEB6  6F72               	movwf	determine_color_new@out& (0+255),b
  5413  01FEB8                     l3608:
  5414                           
  5415                           ;color.c: 169:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>890)
  5416  01FEB8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  5417  01FEBC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  5418  01FEC0  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  5419  01FEC4  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  5420  01FEC8  0E66               	movlw	102
  5421  01FECA  6E11               	movwf	isbtw@low^0,c
  5422  01FECC  0E66               	movlw	102
  5423  01FECE  6E12               	movwf	(isbtw@low+1)^0,c
  5424  01FED0  0E66               	movlw	102
  5425  01FED2  6E13               	movwf	(isbtw@low+2)^0,c
  5426  01FED4  0E3F               	movlw	63
  5427  01FED6  6E14               	movwf	(isbtw@low+3)^0,c
  5428  01FED8  0ECD               	movlw	205
  5429  01FEDA  6E15               	movwf	isbtw@high^0,c
  5430  01FEDC  0ECC               	movlw	204
  5431  01FEDE  6E16               	movwf	(isbtw@high+1)^0,c
  5432  01FEE0  0E8C               	movlw	140
  5433  01FEE2  6E17               	movwf	(isbtw@high+2)^0,c
  5434  01FEE4  0E3F               	movlw	63
  5435  01FEE6  6E18               	movwf	(isbtw@high+3)^0,c
  5436  01FEE8  EC0B  F0E9         	call	_isbtw	;wreg free
  5437  01FEEC  040D               	decf	?_isbtw^0,w,c
  5438  01FEEE  100E               	iorwf	(?_isbtw+1)^0,w,c
  5439  01FEF0  A4D8               	btfss	status,2,c
  5440  01FEF2  EF7D  F0FF         	goto	u3591
  5441  01FEF6  EF7F  F0FF         	goto	u3590
  5442  01FEFA                     u3591:
  5443  01FEFA  EFD5  F0FF         	goto	l3618
  5444  01FEFE                     u3590:
  5445  01FEFE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  5446  01FF02  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  5447  01FF06  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  5448  01FF0A  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  5449  01FF0E  0ECD               	movlw	205
  5450  01FF10  6E11               	movwf	isbtw@low^0,c
  5451  01FF12  0ECC               	movlw	204
  5452  01FF14  6E12               	movwf	(isbtw@low+1)^0,c
  5453  01FF16  0E4C               	movlw	76
  5454  01FF18  6E13               	movwf	(isbtw@low+2)^0,c
  5455  01FF1A  0E3F               	movlw	63
  5456  01FF1C  6E14               	movwf	(isbtw@low+3)^0,c
  5457  01FF1E  0E00               	movlw	0
  5458  01FF20  6E15               	movwf	isbtw@high^0,c
  5459  01FF22  0E00               	movlw	0
  5460  01FF24  6E16               	movwf	(isbtw@high+1)^0,c
  5461  01FF26  0E80               	movlw	128
  5462  01FF28  6E17               	movwf	(isbtw@high+2)^0,c
  5463  01FF2A  0E3F               	movlw	63
  5464  01FF2C  6E18               	movwf	(isbtw@high+3)^0,c
  5465  01FF2E  EC0B  F0E9         	call	_isbtw	;wreg free
  5466  01FF32  040D               	decf	?_isbtw^0,w,c
  5467  01FF34  100E               	iorwf	(?_isbtw+1)^0,w,c
  5468  01FF36  A4D8               	btfss	status,2,c
  5469  01FF38  EFA0  F0FF         	goto	u3601
  5470  01FF3C  EFA2  F0FF         	goto	u3600
  5471  01FF40                     u3601:
  5472  01FF40  EFD5  F0FF         	goto	l3618
  5473  01FF44                     u3600:
  5474  01FF44  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  5475  01FF48  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  5476  01FF4C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  5477  01FF50  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  5478  01FF54  0E33               	movlw	51
  5479  01FF56  6E11               	movwf	isbtw@low^0,c
  5480  01FF58  0E33               	movlw	51
  5481  01FF5A  6E12               	movwf	(isbtw@low+1)^0,c
  5482  01FF5C  0E73               	movlw	115
  5483  01FF5E  6E13               	movwf	(isbtw@low+2)^0,c
  5484  01FF60  0E3F               	movlw	63
  5485  01FF62  6E14               	movwf	(isbtw@low+3)^0,c
  5486  01FF64  0ECD               	movlw	205
  5487  01FF66  6E15               	movwf	isbtw@high^0,c
  5488  01FF68  0ECC               	movlw	204
  5489  01FF6A  6E16               	movwf	(isbtw@high+1)^0,c
  5490  01FF6C  0E8C               	movlw	140
  5491  01FF6E  6E17               	movwf	(isbtw@high+2)^0,c
  5492  01FF70  0E3F               	movlw	63
  5493  01FF72  6E18               	movwf	(isbtw@high+3)^0,c
  5494  01FF74  EC0B  F0E9         	call	_isbtw	;wreg free
  5495  01FF78  040D               	decf	?_isbtw^0,w,c
  5496  01FF7A  100E               	iorwf	(?_isbtw+1)^0,w,c
  5497  01FF7C  A4D8               	btfss	status,2,c
  5498  01FF7E  EFC3  F0FF         	goto	u3611
  5499  01FF82  EFC5  F0FF         	goto	u3610
  5500  01FF86                     u3611:
  5501  01FF86  EFD5  F0FF         	goto	l3618
  5502  01FF8A                     u3610:
  5503  01FF8A  0E7B               	movlw	123
  5504  01FF8C  0100               	movlb	0	; () banked
  5505  01FF8E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  5506  01FF90  0E03               	movlw	3
  5507  01FF92  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  5508  01FF94  A0D8               	btfss	status,0,c
  5509  01FF96  EFCF  F0FF         	goto	u3621
  5510  01FF9A  EFD1  F0FF         	goto	u3620
  5511  01FF9E                     u3621:
  5512  01FF9E  EFD5  F0FF         	goto	l3618
  5513  01FFA2                     u3620:
  5514  01FFA2                     
  5515                           ; BSR set to: 0
  5516                           ;color.c: 170:     {out = 7;}
  5517  01FFA2  0E00               	movlw	0
  5518  01FFA4  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  5519  01FFA6  0E07               	movlw	7
  5520  01FFA8  6F72               	movwf	determine_color_new@out& (0+255),b
  5521  01FFAA                     l3618:
  5522                           
  5523                           ;color.c: 173:     if (RedRatio < 50 && GreenRatio < 50 && BlueRatio < 50) {out = 8;}
  5524  01FFAA  0100               	movlb	0	; () banked
  5525  01FFAC  516D               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  5526  01FFAE  E107               	bnz	u3631
  5527  01FFB0  0E32               	movlw	50
  5528  01FFB2  5D6C               	subwf	determine_color_new@RedRatio& (0+255),w,b
  5529  01FFB4  B0D8               	btfsc	status,0,c
  5530  01FFB6  EFDF  F0FF         	goto	u3631
  5531  01FFBA  EFE1  F0FF         	goto	u3630
  5532  01FFBE                     u3631:
  5533  01FFBE  EFFB  F0FF         	goto	l3626
  5534  01FFC2                     u3630:
  5535  01FFC2                     
  5536                           ; BSR set to: 0
  5537  01FFC2  516F               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  5538  01FFC4  E107               	bnz	u3641
  5539  01FFC6  0E32               	movlw	50
  5540  01FFC8  5D6E               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  5541  01FFCA  B0D8               	btfsc	status,0,c
  5542  01FFCC  EFEA  F0FF         	goto	u3641
  5543  01FFD0  EFEC  F0FF         	goto	u3640
  5544  01FFD4                     u3641:
  5545  01FFD4  EFFB  F0FF         	goto	l3626
  5546  01FFD8                     u3640:
  5547  01FFD8                     
  5548                           ; BSR set to: 0
  5549  01FFD8  5171               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  5550  01FFDA  E107               	bnz	u3651
  5551  01FFDC  0E32               	movlw	50
  5552  01FFDE  5D70               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  5553  01FFE0  B0D8               	btfsc	status,0,c
  5554  01FFE2  EFF5  F0FF         	goto	u3651
  5555  01FFE6  EFF7  F0FF         	goto	u3650
  5556  01FFEA                     u3651:
  5557  01FFEA  EFFB  F0FF         	goto	l3626
  5558  01FFEE                     u3650:
  5559  01FFEE                     
  5560                           ; BSR set to: 0
  5561  01FFEE  0E00               	movlw	0
  5562  01FFF0  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  5563  01FFF2  0E08               	movlw	8
  5564  01FFF4  6F72               	movwf	determine_color_new@out& (0+255),b
  5565  01FFF6                     l3626:
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;color.c: 175:     return out;
  5569  01FFF6  C072  F05B         	movff	determine_color_new@out,?_determine_color_new
  5570  01FFFA  C073  F05C         	movff	determine_color_new@out+1,?_determine_color_new+1
  5571  01FFFE                     
  5572                           ; BSR set to: 0
  5573  01FFFE  0012               	return		;funcret
  5574  020000                     __end_of_determine_color_new:
  5575                           	callstack 0
  5576                           
  5577 ;; *************** function _isbtw *****************
  5578 ;; Defined at:
  5579 ;;		line 102 in file "color.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  num             4   12[COMRAM] float 
  5582 ;;  low             4   16[COMRAM] float 
  5583 ;;  high            4   20[COMRAM] float 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  2   12[COMRAM] unsigned int 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5595 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;Total ram usage:       12 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 1
  5602 ;; This function calls:
  5603 ;;		___flge
  5604 ;; This function is called by:
  5605 ;;		_determine_color_new
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text19
  5610  01D216                     __ptext19:
  5611                           	callstack 0
  5612  01D216                     _isbtw:
  5613                           	callstack 28
  5614  01D216                     
  5615                           ;color.c: 103:     if (num>=low && num<=high){return 1;}
  5616  01D216  C00D  F001         	movff	isbtw@num,___flge@ff1
  5617  01D21A  C00E  F002         	movff	isbtw@num+1,___flge@ff1+1
  5618  01D21E  C00F  F003         	movff	isbtw@num+2,___flge@ff1+2
  5619  01D222  C010  F004         	movff	isbtw@num+3,___flge@ff1+3
  5620  01D226  C011  F005         	movff	isbtw@low,___flge@ff2
  5621  01D22A  C012  F006         	movff	isbtw@low+1,___flge@ff2+1
  5622  01D22E  C013  F007         	movff	isbtw@low+2,___flge@ff2+2
  5623  01D232  C014  F008         	movff	isbtw@low+3,___flge@ff2+3
  5624  01D236  EC81  F0EA         	call	___flge	;wreg free
  5625  01D23A  A0D8               	btfss	status,0,c
  5626  01D23C  EF22  F0E9         	goto	u2271
  5627  01D240  EF24  F0E9         	goto	u2270
  5628  01D244                     u2271:
  5629  01D244  EF43  F0E9         	goto	l2854
  5630  01D248                     u2270:
  5631  01D248  C015  F001         	movff	isbtw@high,___flge@ff1
  5632  01D24C  C016  F002         	movff	isbtw@high+1,___flge@ff1+1
  5633  01D250  C017  F003         	movff	isbtw@high+2,___flge@ff1+2
  5634  01D254  C018  F004         	movff	isbtw@high+3,___flge@ff1+3
  5635  01D258  C00D  F005         	movff	isbtw@num,___flge@ff2
  5636  01D25C  C00E  F006         	movff	isbtw@num+1,___flge@ff2+1
  5637  01D260  C00F  F007         	movff	isbtw@num+2,___flge@ff2+2
  5638  01D264  C010  F008         	movff	isbtw@num+3,___flge@ff2+3
  5639  01D268  EC81  F0EA         	call	___flge	;wreg free
  5640  01D26C  A0D8               	btfss	status,0,c
  5641  01D26E  EF3B  F0E9         	goto	u2281
  5642  01D272  EF3D  F0E9         	goto	u2280
  5643  01D276                     u2281:
  5644  01D276  EF43  F0E9         	goto	l2854
  5645  01D27A                     u2280:
  5646  01D27A  0E00               	movlw	0
  5647  01D27C  6E0E               	movwf	(?_isbtw+1)^0,c
  5648  01D27E  0E01               	movlw	1
  5649  01D280  6E0D               	movwf	?_isbtw^0,c
  5650  01D282  EF47  F0E9         	goto	l81
  5651  01D286                     l2854:
  5652  01D286  0E00               	movlw	0
  5653  01D288  6E0E               	movwf	(?_isbtw+1)^0,c
  5654  01D28A  0E00               	movlw	0
  5655  01D28C  6E0D               	movwf	?_isbtw^0,c
  5656  01D28E                     l81:
  5657  01D28E  0012               	return		;funcret
  5658  01D290                     __end_of_isbtw:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function ___flge *****************
  5662 ;; Defined at:
  5663 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  ff1             4    0[COMRAM] unsigned int 
  5666 ;;  ff2             4    4[COMRAM] unsigned int 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;		None               void
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5678 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5681 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;Total ram usage:       12 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_isbtw
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text20
  5692  01D502                     __ptext20:
  5693                           	callstack 0
  5694  01D502                     ___flge:
  5695                           	callstack 28
  5696  01D502  0E00               	movlw	0
  5697  01D504  1401               	andwf	___flge@ff1^0,w,c
  5698  01D506  6E09               	movwf	??___flge^0,c
  5699  01D508  0E00               	movlw	0
  5700  01D50A  1402               	andwf	(___flge@ff1+1)^0,w,c
  5701  01D50C  6E0A               	movwf	(??___flge+1)^0,c
  5702  01D50E  0E80               	movlw	128
  5703  01D510  1403               	andwf	(___flge@ff1+2)^0,w,c
  5704  01D512  6E0B               	movwf	(??___flge+2)^0,c
  5705  01D514  0E7F               	movlw	127
  5706  01D516  1404               	andwf	(___flge@ff1+3)^0,w,c
  5707  01D518  6E0C               	movwf	(??___flge+3)^0,c
  5708  01D51A  5009               	movf	??___flge^0,w,c
  5709  01D51C  100A               	iorwf	(??___flge+1)^0,w,c
  5710  01D51E  100B               	iorwf	(??___flge+2)^0,w,c
  5711  01D520  100C               	iorwf	(??___flge+3)^0,w,c
  5712  01D522  A4D8               	btfss	status,2,c
  5713  01D524  EF96  F0EA         	goto	u2221
  5714  01D528  EF98  F0EA         	goto	u2220
  5715  01D52C                     u2221:
  5716  01D52C  EFA0  F0EA         	goto	l2788
  5717  01D530                     u2220:
  5718  01D530  0E00               	movlw	0
  5719  01D532  6E01               	movwf	___flge@ff1^0,c
  5720  01D534  0E00               	movlw	0
  5721  01D536  6E02               	movwf	(___flge@ff1+1)^0,c
  5722  01D538  0E00               	movlw	0
  5723  01D53A  6E03               	movwf	(___flge@ff1+2)^0,c
  5724  01D53C  0E00               	movlw	0
  5725  01D53E  6E04               	movwf	(___flge@ff1+3)^0,c
  5726  01D540                     l2788:
  5727  01D540  0E00               	movlw	0
  5728  01D542  1405               	andwf	___flge@ff2^0,w,c
  5729  01D544  6E09               	movwf	??___flge^0,c
  5730  01D546  0E00               	movlw	0
  5731  01D548  1406               	andwf	(___flge@ff2+1)^0,w,c
  5732  01D54A  6E0A               	movwf	(??___flge+1)^0,c
  5733  01D54C  0E80               	movlw	128
  5734  01D54E  1407               	andwf	(___flge@ff2+2)^0,w,c
  5735  01D550  6E0B               	movwf	(??___flge+2)^0,c
  5736  01D552  0E7F               	movlw	127
  5737  01D554  1408               	andwf	(___flge@ff2+3)^0,w,c
  5738  01D556  6E0C               	movwf	(??___flge+3)^0,c
  5739  01D558  5009               	movf	??___flge^0,w,c
  5740  01D55A  100A               	iorwf	(??___flge+1)^0,w,c
  5741  01D55C  100B               	iorwf	(??___flge+2)^0,w,c
  5742  01D55E  100C               	iorwf	(??___flge+3)^0,w,c
  5743  01D560  A4D8               	btfss	status,2,c
  5744  01D562  EFB5  F0EA         	goto	u2231
  5745  01D566  EFB7  F0EA         	goto	u2230
  5746  01D56A                     u2231:
  5747  01D56A  EFBF  F0EA         	goto	l2792
  5748  01D56E                     u2230:
  5749  01D56E  0E00               	movlw	0
  5750  01D570  6E05               	movwf	___flge@ff2^0,c
  5751  01D572  0E00               	movlw	0
  5752  01D574  6E06               	movwf	(___flge@ff2+1)^0,c
  5753  01D576  0E00               	movlw	0
  5754  01D578  6E07               	movwf	(___flge@ff2+2)^0,c
  5755  01D57A  0E00               	movlw	0
  5756  01D57C  6E08               	movwf	(___flge@ff2+3)^0,c
  5757  01D57E                     l2792:
  5758  01D57E  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5759  01D580  EFC4  F0EA         	goto	u2241
  5760  01D584  EFC6  F0EA         	goto	u2240
  5761  01D588                     u2241:
  5762  01D588  EFCF  F0EA         	goto	l2796
  5763  01D58C                     u2240:
  5764  01D58C  6C01               	negf	___flge@ff1^0,c
  5765  01D58E  1E02               	comf	(___flge@ff1+1)^0,f,c
  5766  01D590  B0D8               	btfsc	status,0,c
  5767  01D592  2A02               	incf	(___flge@ff1+1)^0,f,c
  5768  01D594  1E03               	comf	(___flge@ff1+2)^0,f,c
  5769  01D596  B0D8               	btfsc	status,0,c
  5770  01D598  2A03               	incf	(___flge@ff1+2)^0,f,c
  5771  01D59A  0E80               	movlw	128
  5772  01D59C  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5773  01D59E                     l2796:
  5774  01D59E  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5775  01D5A0  EFD4  F0EA         	goto	u2251
  5776  01D5A4  EFD6  F0EA         	goto	u2250
  5777  01D5A8                     u2251:
  5778  01D5A8  EFDF  F0EA         	goto	l782
  5779  01D5AC                     u2250:
  5780  01D5AC  6C05               	negf	___flge@ff2^0,c
  5781  01D5AE  1E06               	comf	(___flge@ff2+1)^0,f,c
  5782  01D5B0  B0D8               	btfsc	status,0,c
  5783  01D5B2  2A06               	incf	(___flge@ff2+1)^0,f,c
  5784  01D5B4  1E07               	comf	(___flge@ff2+2)^0,f,c
  5785  01D5B6  B0D8               	btfsc	status,0,c
  5786  01D5B8  2A07               	incf	(___flge@ff2+2)^0,f,c
  5787  01D5BA  0E80               	movlw	128
  5788  01D5BC  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5789  01D5BE                     l782:
  5790  01D5BE  0E00               	movlw	0
  5791  01D5C0  1A01               	xorwf	___flge@ff1^0,f,c
  5792  01D5C2  0E00               	movlw	0
  5793  01D5C4  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5794  01D5C6  0E00               	movlw	0
  5795  01D5C8  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5796  01D5CA  0E80               	movlw	128
  5797  01D5CC  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5798  01D5CE  0E00               	movlw	0
  5799  01D5D0  1A05               	xorwf	___flge@ff2^0,f,c
  5800  01D5D2  0E00               	movlw	0
  5801  01D5D4  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5802  01D5D6  0E00               	movlw	0
  5803  01D5D8  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5804  01D5DA  0E80               	movlw	128
  5805  01D5DC  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5806  01D5DE  5005               	movf	___flge@ff2^0,w,c
  5807  01D5E0  5C01               	subwf	___flge@ff1^0,w,c
  5808  01D5E2  5006               	movf	(___flge@ff2+1)^0,w,c
  5809  01D5E4  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5810  01D5E6  5007               	movf	(___flge@ff2+2)^0,w,c
  5811  01D5E8  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5812  01D5EA  5008               	movf	(___flge@ff2+3)^0,w,c
  5813  01D5EC  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5814  01D5EE  B0D8               	btfsc	status,0,c
  5815  01D5F0  EFFC  F0EA         	goto	u2261
  5816  01D5F4  EFFE  F0EA         	goto	u2260
  5817  01D5F8                     u2261:
  5818  01D5F8  EF01  F0EB         	goto	l2802
  5819  01D5FC                     u2260:
  5820  01D5FC  90D8               	bcf	status,0,c
  5821  01D5FE  EF02  F0EB         	goto	l787
  5822  01D602                     l2802:
  5823  01D602  80D8               	bsf	status,0,c
  5824  01D604                     l787:
  5825  01D604  0012               	return		;funcret
  5826  01D606                     __end_of___flge:
  5827                           	callstack 0
  5828                           
  5829 ;; *************** function ___xxtofl *****************
  5830 ;; Defined at:
  5831 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  sign            1    wreg     unsigned char 
  5834 ;;  val             4    0[COMRAM] long 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  sign            1    8[COMRAM] unsigned char 
  5837 ;;  arg             4   10[COMRAM] unsigned long 
  5838 ;;  exp             1    9[COMRAM] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  4    0[COMRAM] unsigned char 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;Total ram usage:       14 bytes
  5853 ;; Hardware stack levels used: 1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_determine_color_new
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text21
  5862  01DD42                     __ptext21:
  5863                           	callstack 0
  5864  01DD42                     ___xxtofl:
  5865                           	callstack 29
  5866                           
  5867                           ;incstack = 0
  5868                           ;___xxtofl@sign stored from wreg
  5869  01DD42  6E09               	movwf	___xxtofl@sign^0,c
  5870  01DD44  5009               	movf	___xxtofl@sign^0,w,c
  5871  01DD46  B4D8               	btfsc	status,2,c
  5872  01DD48  EFA8  F0EE         	goto	u3191
  5873  01DD4C  EFAA  F0EE         	goto	u3190
  5874  01DD50                     u3191:
  5875  01DD50  EFCC  F0EE         	goto	l1172
  5876  01DD54                     u3190:
  5877  01DD54  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5878  01DD56  EFB1  F0EE         	goto	u3200
  5879  01DD5A  EFAF  F0EE         	goto	u3201
  5880  01DD5E                     u3201:
  5881  01DD5E  EFCC  F0EE         	goto	l1172
  5882  01DD62                     u3200:
  5883  01DD62  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5884  01DD66  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5885  01DD6A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5886  01DD6E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5887  01DD72  1E05               	comf	??___xxtofl^0,f,c
  5888  01DD74  1E06               	comf	(??___xxtofl+1)^0,f,c
  5889  01DD76  1E07               	comf	(??___xxtofl+2)^0,f,c
  5890  01DD78  1E08               	comf	(??___xxtofl+3)^0,f,c
  5891  01DD7A  2A05               	incf	??___xxtofl^0,f,c
  5892  01DD7C  0E00               	movlw	0
  5893  01DD7E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5894  01DD80  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5895  01DD82  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5896  01DD84  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5897  01DD88  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5898  01DD8C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5899  01DD90  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5900  01DD94  EFD4  F0EE         	goto	l3454
  5901  01DD98                     l1172:
  5902  01DD98  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5903  01DD9C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5904  01DDA0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5905  01DDA4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5906  01DDA8                     l3454:
  5907  01DDA8  5001               	movf	___xxtofl@val^0,w,c
  5908  01DDAA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5909  01DDAC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5910  01DDAE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5911  01DDB0  A4D8               	btfss	status,2,c
  5912  01DDB2  EFDD  F0EE         	goto	u3211
  5913  01DDB6  EFDF  F0EE         	goto	u3210
  5914  01DDBA                     u3211:
  5915  01DDBA  EFE9  F0EE         	goto	l3460
  5916  01DDBE                     u3210:
  5917  01DDBE  0E00               	movlw	0
  5918  01DDC0  6E01               	movwf	?___xxtofl^0,c
  5919  01DDC2  0E00               	movlw	0
  5920  01DDC4  6E02               	movwf	(?___xxtofl+1)^0,c
  5921  01DDC6  0E00               	movlw	0
  5922  01DDC8  6E03               	movwf	(?___xxtofl+2)^0,c
  5923  01DDCA  0E00               	movlw	0
  5924  01DDCC  6E04               	movwf	(?___xxtofl+3)^0,c
  5925  01DDCE  EF7A  F0EF         	goto	l1175
  5926  01DDD2                     l3460:
  5927  01DDD2  0E96               	movlw	150
  5928  01DDD4  6E0A               	movwf	___xxtofl@exp^0,c
  5929  01DDD6  EFF3  F0EE         	goto	l3464
  5930  01DDDA                     l3462:
  5931  01DDDA  2A0A               	incf	___xxtofl@exp^0,f,c
  5932  01DDDC  90D8               	bcf	status,0,c
  5933  01DDDE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5934  01DDE0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5935  01DDE2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5936  01DDE4  320B               	rrcf	___xxtofl@arg^0,f,c
  5937  01DDE6                     l3464:
  5938  01DDE6  0E00               	movlw	0
  5939  01DDE8  140B               	andwf	___xxtofl@arg^0,w,c
  5940  01DDEA  6E05               	movwf	??___xxtofl^0,c
  5941  01DDEC  0E00               	movlw	0
  5942  01DDEE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5943  01DDF0  6E06               	movwf	(??___xxtofl+1)^0,c
  5944  01DDF2  0E00               	movlw	0
  5945  01DDF4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5946  01DDF6  6E07               	movwf	(??___xxtofl+2)^0,c
  5947  01DDF8  0EFE               	movlw	254
  5948  01DDFA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5949  01DDFC  6E08               	movwf	(??___xxtofl+3)^0,c
  5950  01DDFE  5005               	movf	??___xxtofl^0,w,c
  5951  01DE00  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5952  01DE02  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5953  01DE04  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5954  01DE06  A4D8               	btfss	status,2,c
  5955  01DE08  EF08  F0EF         	goto	u3221
  5956  01DE0C  EF0A  F0EF         	goto	u3220
  5957  01DE10                     u3221:
  5958  01DE10  EFED  F0EE         	goto	l3462
  5959  01DE14                     u3220:
  5960  01DE14  EF18  F0EF         	goto	l1179
  5961  01DE18                     l3466:
  5962  01DE18  2A0A               	incf	___xxtofl@exp^0,f,c
  5963  01DE1A  0E01               	movlw	1
  5964  01DE1C  260B               	addwf	___xxtofl@arg^0,f,c
  5965  01DE1E  0E00               	movlw	0
  5966  01DE20  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5967  01DE22  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5968  01DE24  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5969  01DE26  90D8               	bcf	status,0,c
  5970  01DE28  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5971  01DE2A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5972  01DE2C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5973  01DE2E  320B               	rrcf	___xxtofl@arg^0,f,c
  5974  01DE30                     l1179:
  5975  01DE30  0E00               	movlw	0
  5976  01DE32  140B               	andwf	___xxtofl@arg^0,w,c
  5977  01DE34  6E05               	movwf	??___xxtofl^0,c
  5978  01DE36  0E00               	movlw	0
  5979  01DE38  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5980  01DE3A  6E06               	movwf	(??___xxtofl+1)^0,c
  5981  01DE3C  0E00               	movlw	0
  5982  01DE3E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5983  01DE40  6E07               	movwf	(??___xxtofl+2)^0,c
  5984  01DE42  0EFF               	movlw	255
  5985  01DE44  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5986  01DE46  6E08               	movwf	(??___xxtofl+3)^0,c
  5987  01DE48  5005               	movf	??___xxtofl^0,w,c
  5988  01DE4A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5989  01DE4C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5990  01DE4E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5991  01DE50  A4D8               	btfss	status,2,c
  5992  01DE52  EF2D  F0EF         	goto	u3231
  5993  01DE56  EF2F  F0EF         	goto	u3230
  5994  01DE5A                     u3231:
  5995  01DE5A  EF0C  F0EF         	goto	l3466
  5996  01DE5E                     u3230:
  5997  01DE5E  EF37  F0EF         	goto	l3474
  5998  01DE62                     l3472:
  5999  01DE62  060A               	decf	___xxtofl@exp^0,f,c
  6000  01DE64  90D8               	bcf	status,0,c
  6001  01DE66  360B               	rlcf	___xxtofl@arg^0,f,c
  6002  01DE68  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6003  01DE6A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6004  01DE6C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6005  01DE6E                     l3474:
  6006  01DE6E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6007  01DE70  EF3C  F0EF         	goto	u3241
  6008  01DE74  EF3E  F0EF         	goto	u3240
  6009  01DE78                     u3241:
  6010  01DE78  EF46  F0EF         	goto	l1186
  6011  01DE7C                     u3240:
  6012  01DE7C  0E02               	movlw	2
  6013  01DE7E  600A               	cpfslt	___xxtofl@exp^0,c
  6014  01DE80  EF44  F0EF         	goto	u3251
  6015  01DE84  EF46  F0EF         	goto	u3250
  6016  01DE88                     u3251:
  6017  01DE88  EF31  F0EF         	goto	l3472
  6018  01DE8C                     u3250:
  6019  01DE8C                     l1186:
  6020  01DE8C  B00A               	btfsc	___xxtofl@exp^0,0,c
  6021  01DE8E  EF4B  F0EF         	goto	u3261
  6022  01DE92  EF4D  F0EF         	goto	u3260
  6023  01DE96                     u3261:
  6024  01DE96  EF4E  F0EF         	goto	l3480
  6025  01DE9A                     u3260:
  6026  01DE9A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6027  01DE9C                     l3480:
  6028  01DE9C  90D8               	bcf	status,0,c
  6029  01DE9E  320A               	rrcf	___xxtofl@exp^0,f,c
  6030  01DEA0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6031  01DEA4  6A06               	clrf	(??___xxtofl+1)^0,c
  6032  01DEA6  6A07               	clrf	(??___xxtofl+2)^0,c
  6033  01DEA8  6A08               	clrf	(??___xxtofl+3)^0,c
  6034  01DEAA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6035  01DEAE  6A07               	clrf	(??___xxtofl+2)^0,c
  6036  01DEB0  6A06               	clrf	(??___xxtofl+1)^0,c
  6037  01DEB2  6A05               	clrf	??___xxtofl^0,c
  6038  01DEB4  5005               	movf	??___xxtofl^0,w,c
  6039  01DEB6  120B               	iorwf	___xxtofl@arg^0,f,c
  6040  01DEB8  5006               	movf	(??___xxtofl+1)^0,w,c
  6041  01DEBA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6042  01DEBC  5007               	movf	(??___xxtofl+2)^0,w,c
  6043  01DEBE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6044  01DEC0  5008               	movf	(??___xxtofl+3)^0,w,c
  6045  01DEC2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6046  01DEC4  5009               	movf	___xxtofl@sign^0,w,c
  6047  01DEC6  B4D8               	btfsc	status,2,c
  6048  01DEC8  EF68  F0EF         	goto	u3271
  6049  01DECC  EF6A  F0EF         	goto	u3270
  6050  01DED0                     u3271:
  6051  01DED0  EF72  F0EF         	goto	l3490
  6052  01DED4                     u3270:
  6053  01DED4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6054  01DED6  EF71  F0EF         	goto	u3280
  6055  01DEDA  EF6F  F0EF         	goto	u3281
  6056  01DEDE                     u3281:
  6057  01DEDE  EF72  F0EF         	goto	l3490
  6058  01DEE2                     u3280:
  6059  01DEE2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6060  01DEE4                     l3490:
  6061  01DEE4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6062  01DEE8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6063  01DEEC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6064  01DEF0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6065  01DEF4                     l1175:
  6066  01DEF4  0012               	return		;funcret
  6067  01DEF6                     __end_of___xxtofl:
  6068                           	callstack 0
  6069                           
  6070 ;; *************** function ___fltol *****************
  6071 ;; Defined at:
  6072 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  f1              4   80[COMRAM] unsigned char 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  exp1            1   89[COMRAM] unsigned char 
  6077 ;;  sign1           1   88[COMRAM] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  4   80[COMRAM] long 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;Total ram usage:       10 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_determine_color_new
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text22
  6101  01D606                     __ptext22:
  6102                           	callstack 0
  6103  01D606                     ___fltol:
  6104                           	callstack 29
  6105  01D606  3453               	rlcf	(___fltol@f1+2)^0,w,c
  6106  01D608  3454               	rlcf	(___fltol@f1+3)^0,w,c
  6107  01D60A  6E5A               	movwf	___fltol@exp1^0,c
  6108  01D60C  505A               	movf	___fltol@exp1^0,w,c
  6109  01D60E  A4D8               	btfss	status,2,c
  6110  01D610  EF0C  F0EB         	goto	u3121
  6111  01D614  EF0E  F0EB         	goto	u3120
  6112  01D618                     u3121:
  6113  01D618  EF18  F0EB         	goto	l3410
  6114  01D61C                     u3120:
  6115  01D61C                     l3406:
  6116  01D61C  0E00               	movlw	0
  6117  01D61E  6E51               	movwf	?___fltol^0,c
  6118  01D620  0E00               	movlw	0
  6119  01D622  6E52               	movwf	(?___fltol+1)^0,c
  6120  01D624  0E00               	movlw	0
  6121  01D626  6E53               	movwf	(?___fltol+2)^0,c
  6122  01D628  0E00               	movlw	0
  6123  01D62A  6E54               	movwf	(?___fltol+3)^0,c
  6124  01D62C  EF85  F0EB         	goto	l814
  6125  01D630                     l3410:
  6126  01D630  C051  F055         	movff	___fltol@f1,??___fltol
  6127  01D634  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  6128  01D638  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  6129  01D63C  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  6130  01D640  0E20               	movlw	32
  6131  01D642  EF28  F0EB         	goto	u3130
  6132  01D646                     u3135:
  6133  01D646  90D8               	bcf	status,0,c
  6134  01D648  3258               	rrcf	(??___fltol+3)^0,f,c
  6135  01D64A  3257               	rrcf	(??___fltol+2)^0,f,c
  6136  01D64C  3256               	rrcf	(??___fltol+1)^0,f,c
  6137  01D64E  3255               	rrcf	??___fltol^0,f,c
  6138  01D650                     u3130:
  6139  01D650  2EE8               	decfsz	wreg,f,c
  6140  01D652  EF23  F0EB         	goto	u3135
  6141  01D656  5055               	movf	??___fltol^0,w,c
  6142  01D658  6E59               	movwf	___fltol@sign1^0,c
  6143  01D65A  8E53               	bsf	(___fltol@f1+2)^0,7,c
  6144  01D65C  0EFF               	movlw	255
  6145  01D65E  1651               	andwf	___fltol@f1^0,f,c
  6146  01D660  0EFF               	movlw	255
  6147  01D662  1652               	andwf	(___fltol@f1+1)^0,f,c
  6148  01D664  0EFF               	movlw	255
  6149  01D666  1653               	andwf	(___fltol@f1+2)^0,f,c
  6150  01D668  0E00               	movlw	0
  6151  01D66A  1654               	andwf	(___fltol@f1+3)^0,f,c
  6152  01D66C  0E96               	movlw	150
  6153  01D66E  5E5A               	subwf	___fltol@exp1^0,f,c
  6154  01D670  BE5A               	btfsc	___fltol@exp1^0,7,c
  6155  01D672  EF3F  F0EB         	goto	u3140
  6156  01D676  EF3D  F0EB         	goto	u3141
  6157  01D67A                     u3141:
  6158  01D67A  EF55  F0EB         	goto	l3430
  6159  01D67E                     u3140:
  6160  01D67E  505A               	movf	___fltol@exp1^0,w,c
  6161  01D680  0A80               	xorlw	128
  6162  01D682  0F97               	addlw	151
  6163  01D684  B0D8               	btfsc	status,0,c
  6164  01D686  EF47  F0EB         	goto	u3151
  6165  01D68A  EF49  F0EB         	goto	u3150
  6166  01D68E                     u3151:
  6167  01D68E  EF4B  F0EB         	goto	l3426
  6168  01D692                     u3150:
  6169  01D692  EF0E  F0EB         	goto	l3406
  6170  01D696                     l3426:
  6171  01D696  90D8               	bcf	status,0,c
  6172  01D698  3254               	rrcf	(___fltol@f1+3)^0,f,c
  6173  01D69A  3253               	rrcf	(___fltol@f1+2)^0,f,c
  6174  01D69C  3252               	rrcf	(___fltol@f1+1)^0,f,c
  6175  01D69E  3251               	rrcf	___fltol@f1^0,f,c
  6176  01D6A0  3E5A               	incfsz	___fltol@exp1^0,f,c
  6177  01D6A2  EF4B  F0EB         	goto	l3426
  6178  01D6A6  EF6D  F0EB         	goto	l3440
  6179  01D6AA                     l3430:
  6180  01D6AA  0E1F               	movlw	31
  6181  01D6AC  645A               	cpfsgt	___fltol@exp1^0,c
  6182  01D6AE  EF5B  F0EB         	goto	u3161
  6183  01D6B2  EF5D  F0EB         	goto	u3160
  6184  01D6B6                     u3161:
  6185  01D6B6  EF65  F0EB         	goto	l3438
  6186  01D6BA                     u3160:
  6187  01D6BA  EF0E  F0EB         	goto	l3406
  6188  01D6BE                     l3436:
  6189  01D6BE  90D8               	bcf	status,0,c
  6190  01D6C0  3651               	rlcf	___fltol@f1^0,f,c
  6191  01D6C2  3652               	rlcf	(___fltol@f1+1)^0,f,c
  6192  01D6C4  3653               	rlcf	(___fltol@f1+2)^0,f,c
  6193  01D6C6  3654               	rlcf	(___fltol@f1+3)^0,f,c
  6194  01D6C8  065A               	decf	___fltol@exp1^0,f,c
  6195  01D6CA                     l3438:
  6196  01D6CA  505A               	movf	___fltol@exp1^0,w,c
  6197  01D6CC  A4D8               	btfss	status,2,c
  6198  01D6CE  EF6B  F0EB         	goto	u3171
  6199  01D6D2  EF6D  F0EB         	goto	u3170
  6200  01D6D6                     u3171:
  6201  01D6D6  EF5F  F0EB         	goto	l3436
  6202  01D6DA                     u3170:
  6203  01D6DA                     l3440:
  6204  01D6DA  5059               	movf	___fltol@sign1^0,w,c
  6205  01D6DC  B4D8               	btfsc	status,2,c
  6206  01D6DE  EF73  F0EB         	goto	u3181
  6207  01D6E2  EF75  F0EB         	goto	u3180
  6208  01D6E6                     u3181:
  6209  01D6E6  EF7D  F0EB         	goto	l3444
  6210  01D6EA                     u3180:
  6211  01D6EA  1E54               	comf	(___fltol@f1+3)^0,f,c
  6212  01D6EC  1E53               	comf	(___fltol@f1+2)^0,f,c
  6213  01D6EE  1E52               	comf	(___fltol@f1+1)^0,f,c
  6214  01D6F0  6C51               	negf	___fltol@f1^0,c
  6215  01D6F2  0E00               	movlw	0
  6216  01D6F4  2252               	addwfc	(___fltol@f1+1)^0,f,c
  6217  01D6F6  2253               	addwfc	(___fltol@f1+2)^0,f,c
  6218  01D6F8  2254               	addwfc	(___fltol@f1+3)^0,f,c
  6219  01D6FA                     l3444:
  6220  01D6FA  C051  F051         	movff	___fltol@f1,?___fltol
  6221  01D6FE  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  6222  01D702  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  6223  01D706  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  6224  01D70A                     l814:
  6225  01D70A  0012               	return		;funcret
  6226  01D70C                     __end_of___fltol:
  6227                           	callstack 0
  6228                           
  6229 ;; *************** function ___flmul *****************
  6230 ;; Defined at:
  6231 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  b               4   39[COMRAM] long 
  6234 ;;  a               4   43[COMRAM] long 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  prod            4   58[COMRAM] struct .
  6237 ;;  grs             4   52[COMRAM] unsigned long 
  6238 ;;  temp            2   62[COMRAM] struct .
  6239 ;;  bexp            1   57[COMRAM] unsigned char 
  6240 ;;  aexp            1   56[COMRAM] unsigned char 
  6241 ;;  sign            1   51[COMRAM] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  4   39[COMRAM] unsigned char 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, prodl, prodh
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;Total ram usage:       25 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_determine_color_new
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text23
  6265  01E464                     __ptext23:
  6266                           	callstack 0
  6267  01E464                     ___flmul:
  6268                           	callstack 29
  6269  01E464  502B               	movf	(___flmul@b+3)^0,w,c
  6270  01E466  0B80               	andlw	128
  6271  01E468  6E34               	movwf	___flmul@sign^0,c
  6272  01E46A  502B               	movf	(___flmul@b+3)^0,w,c
  6273  01E46C  242B               	addwf	(___flmul@b+3)^0,w,c
  6274  01E46E  6E3A               	movwf	___flmul@bexp^0,c
  6275  01E470  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6276  01E472  EF3D  F0F2         	goto	u2931
  6277  01E476  EF3F  F0F2         	goto	u2930
  6278  01E47A                     u2931:
  6279  01E47A  EF40  F0F2         	goto	l3280
  6280  01E47E                     u2930:
  6281  01E47E  803A               	bsf	___flmul@bexp^0,0,c
  6282  01E480                     l3280:
  6283  01E480  503A               	movf	___flmul@bexp^0,w,c
  6284  01E482  B4D8               	btfsc	status,2,c
  6285  01E484  EF46  F0F2         	goto	u2941
  6286  01E488  EF48  F0F2         	goto	u2940
  6287  01E48C                     u2941:
  6288  01E48C  EF5B  F0F2         	goto	l3288
  6289  01E490                     u2940:
  6290  01E490  283A               	incf	___flmul@bexp^0,w,c
  6291  01E492  A4D8               	btfss	status,2,c
  6292  01E494  EF4E  F0F2         	goto	u2951
  6293  01E498  EF50  F0F2         	goto	u2950
  6294  01E49C                     u2951:
  6295  01E49C  EF58  F0F2         	goto	l3286
  6296  01E4A0                     u2950:
  6297  01E4A0  0E00               	movlw	0
  6298  01E4A2  6E28               	movwf	___flmul@b^0,c
  6299  01E4A4  0E00               	movlw	0
  6300  01E4A6  6E29               	movwf	(___flmul@b+1)^0,c
  6301  01E4A8  0E00               	movlw	0
  6302  01E4AA  6E2A               	movwf	(___flmul@b+2)^0,c
  6303  01E4AC  0E00               	movlw	0
  6304  01E4AE  6E2B               	movwf	(___flmul@b+3)^0,c
  6305  01E4B0                     l3286:
  6306  01E4B0  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6307  01E4B2  EF63  F0F2         	goto	l3290
  6308  01E4B6                     l3288:
  6309  01E4B6  0E00               	movlw	0
  6310  01E4B8  6E28               	movwf	___flmul@b^0,c
  6311  01E4BA  0E00               	movlw	0
  6312  01E4BC  6E29               	movwf	(___flmul@b+1)^0,c
  6313  01E4BE  0E00               	movlw	0
  6314  01E4C0  6E2A               	movwf	(___flmul@b+2)^0,c
  6315  01E4C2  0E00               	movlw	0
  6316  01E4C4  6E2B               	movwf	(___flmul@b+3)^0,c
  6317  01E4C6                     l3290:
  6318  01E4C6  502F               	movf	(___flmul@a+3)^0,w,c
  6319  01E4C8  0B80               	andlw	128
  6320  01E4CA  1A34               	xorwf	___flmul@sign^0,f,c
  6321  01E4CC  502F               	movf	(___flmul@a+3)^0,w,c
  6322  01E4CE  242F               	addwf	(___flmul@a+3)^0,w,c
  6323  01E4D0  6E39               	movwf	___flmul@aexp^0,c
  6324  01E4D2  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6325  01E4D4  EF6E  F0F2         	goto	u2961
  6326  01E4D8  EF70  F0F2         	goto	u2960
  6327  01E4DC                     u2961:
  6328  01E4DC  EF71  F0F2         	goto	l3298
  6329  01E4E0                     u2960:
  6330  01E4E0  8039               	bsf	___flmul@aexp^0,0,c
  6331  01E4E2                     l3298:
  6332  01E4E2  5039               	movf	___flmul@aexp^0,w,c
  6333  01E4E4  B4D8               	btfsc	status,2,c
  6334  01E4E6  EF77  F0F2         	goto	u2971
  6335  01E4EA  EF79  F0F2         	goto	u2970
  6336  01E4EE                     u2971:
  6337  01E4EE  EF8C  F0F2         	goto	l3306
  6338  01E4F2                     u2970:
  6339  01E4F2  2839               	incf	___flmul@aexp^0,w,c
  6340  01E4F4  A4D8               	btfss	status,2,c
  6341  01E4F6  EF7F  F0F2         	goto	u2981
  6342  01E4FA  EF81  F0F2         	goto	u2980
  6343  01E4FE                     u2981:
  6344  01E4FE  EF89  F0F2         	goto	l3304
  6345  01E502                     u2980:
  6346  01E502  0E00               	movlw	0
  6347  01E504  6E2C               	movwf	___flmul@a^0,c
  6348  01E506  0E00               	movlw	0
  6349  01E508  6E2D               	movwf	(___flmul@a+1)^0,c
  6350  01E50A  0E00               	movlw	0
  6351  01E50C  6E2E               	movwf	(___flmul@a+2)^0,c
  6352  01E50E  0E00               	movlw	0
  6353  01E510  6E2F               	movwf	(___flmul@a+3)^0,c
  6354  01E512                     l3304:
  6355  01E512  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6356  01E514  EF94  F0F2         	goto	l1131
  6357  01E518                     l3306:
  6358  01E518  0E00               	movlw	0
  6359  01E51A  6E2C               	movwf	___flmul@a^0,c
  6360  01E51C  0E00               	movlw	0
  6361  01E51E  6E2D               	movwf	(___flmul@a+1)^0,c
  6362  01E520  0E00               	movlw	0
  6363  01E522  6E2E               	movwf	(___flmul@a+2)^0,c
  6364  01E524  0E00               	movlw	0
  6365  01E526  6E2F               	movwf	(___flmul@a+3)^0,c
  6366  01E528                     l1131:
  6367  01E528  5039               	movf	___flmul@aexp^0,w,c
  6368  01E52A  B4D8               	btfsc	status,2,c
  6369  01E52C  EF9A  F0F2         	goto	u2991
  6370  01E530  EF9C  F0F2         	goto	u2990
  6371  01E534                     u2991:
  6372  01E534  EFA4  F0F2         	goto	l3310
  6373  01E538                     u2990:
  6374  01E538  503A               	movf	___flmul@bexp^0,w,c
  6375  01E53A  A4D8               	btfss	status,2,c
  6376  01E53C  EFA2  F0F2         	goto	u3001
  6377  01E540  EFA4  F0F2         	goto	u3000
  6378  01E544                     u3001:
  6379  01E544  EFAE  F0F2         	goto	l3314
  6380  01E548                     u3000:
  6381  01E548                     l3310:
  6382  01E548  0E00               	movlw	0
  6383  01E54A  6E28               	movwf	?___flmul^0,c
  6384  01E54C  0E00               	movlw	0
  6385  01E54E  6E29               	movwf	(?___flmul+1)^0,c
  6386  01E550  0E00               	movlw	0
  6387  01E552  6E2A               	movwf	(?___flmul+2)^0,c
  6388  01E554  0E00               	movlw	0
  6389  01E556  6E2B               	movwf	(?___flmul+3)^0,c
  6390  01E558  EF46  F0F4         	goto	l1135
  6391  01E55C                     l3314:
  6392  01E55C  502E               	movf	(___flmul@a+2)^0,w,c
  6393  01E55E  0228               	mulwf	___flmul@b^0,c
  6394  01E560  CFF3 F03F          	movff	prodl,___flmul@temp
  6395  01E564  CFF4 F040          	movff	prodh,___flmul@temp+1
  6396  01E568  503F               	movf	___flmul@temp^0,w,c
  6397  01E56A  6E35               	movwf	___flmul@grs^0,c
  6398  01E56C  6A36               	clrf	(___flmul@grs+1)^0,c
  6399  01E56E  6A37               	clrf	(___flmul@grs+2)^0,c
  6400  01E570  6A38               	clrf	(___flmul@grs+3)^0,c
  6401  01E572  5040               	movf	(___flmul@temp+1)^0,w,c
  6402  01E574  6E3B               	movwf	___flmul@prod^0,c
  6403  01E576  6A3C               	clrf	(___flmul@prod+1)^0,c
  6404  01E578  6A3D               	clrf	(___flmul@prod+2)^0,c
  6405  01E57A  6A3E               	clrf	(___flmul@prod+3)^0,c
  6406  01E57C  502D               	movf	(___flmul@a+1)^0,w,c
  6407  01E57E  0229               	mulwf	(___flmul@b+1)^0,c
  6408  01E580  CFF3 F03F          	movff	prodl,___flmul@temp
  6409  01E584  CFF4 F040          	movff	prodh,___flmul@temp+1
  6410  01E588  503F               	movf	___flmul@temp^0,w,c
  6411  01E58A  2635               	addwf	___flmul@grs^0,f,c
  6412  01E58C  0E00               	movlw	0
  6413  01E58E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6414  01E590  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6415  01E592  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6416  01E594  5040               	movf	(___flmul@temp+1)^0,w,c
  6417  01E596  263B               	addwf	___flmul@prod^0,f,c
  6418  01E598  0E00               	movlw	0
  6419  01E59A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6420  01E59C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6421  01E59E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6422  01E5A0  502C               	movf	___flmul@a^0,w,c
  6423  01E5A2  022A               	mulwf	(___flmul@b+2)^0,c
  6424  01E5A4  CFF3 F03F          	movff	prodl,___flmul@temp
  6425  01E5A8  CFF4 F040          	movff	prodh,___flmul@temp+1
  6426  01E5AC  503F               	movf	___flmul@temp^0,w,c
  6427  01E5AE  2635               	addwf	___flmul@grs^0,f,c
  6428  01E5B0  0E00               	movlw	0
  6429  01E5B2  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6430  01E5B4  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6431  01E5B6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6432  01E5B8  5040               	movf	(___flmul@temp+1)^0,w,c
  6433  01E5BA  263B               	addwf	___flmul@prod^0,f,c
  6434  01E5BC  0E00               	movlw	0
  6435  01E5BE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6436  01E5C0  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6437  01E5C2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6438  01E5C4  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6439  01E5C8  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6440  01E5CC  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6441  01E5D0  6A35               	clrf	___flmul@grs^0,c
  6442  01E5D2  502C               	movf	___flmul@a^0,w,c
  6443  01E5D4  0229               	mulwf	(___flmul@b+1)^0,c
  6444  01E5D6  CFF3 F03F          	movff	prodl,___flmul@temp
  6445  01E5DA  CFF4 F040          	movff	prodh,___flmul@temp+1
  6446  01E5DE  503F               	movf	___flmul@temp^0,w,c
  6447  01E5E0  2635               	addwf	___flmul@grs^0,f,c
  6448  01E5E2  5040               	movf	(___flmul@temp+1)^0,w,c
  6449  01E5E4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6450  01E5E6  0E00               	movlw	0
  6451  01E5E8  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6452  01E5EA  0E00               	movlw	0
  6453  01E5EC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6454  01E5EE  502D               	movf	(___flmul@a+1)^0,w,c
  6455  01E5F0  0228               	mulwf	___flmul@b^0,c
  6456  01E5F2  CFF3 F03F          	movff	prodl,___flmul@temp
  6457  01E5F6  CFF4 F040          	movff	prodh,___flmul@temp+1
  6458  01E5FA  503F               	movf	___flmul@temp^0,w,c
  6459  01E5FC  2635               	addwf	___flmul@grs^0,f,c
  6460  01E5FE  5040               	movf	(___flmul@temp+1)^0,w,c
  6461  01E600  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6462  01E602  0E00               	movlw	0
  6463  01E604  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6464  01E606  0E00               	movlw	0
  6465  01E608  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6466  01E60A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6467  01E60E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6468  01E612  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6469  01E616  6A35               	clrf	___flmul@grs^0,c
  6470  01E618  502C               	movf	___flmul@a^0,w,c
  6471  01E61A  0228               	mulwf	___flmul@b^0,c
  6472  01E61C  CFF3 F03F          	movff	prodl,___flmul@temp
  6473  01E620  CFF4 F040          	movff	prodh,___flmul@temp+1
  6474  01E624  503F               	movf	___flmul@temp^0,w,c
  6475  01E626  2635               	addwf	___flmul@grs^0,f,c
  6476  01E628  5040               	movf	(___flmul@temp+1)^0,w,c
  6477  01E62A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6478  01E62C  0E00               	movlw	0
  6479  01E62E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6480  01E630  0E00               	movlw	0
  6481  01E632  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6482  01E634  502E               	movf	(___flmul@a+2)^0,w,c
  6483  01E636  0229               	mulwf	(___flmul@b+1)^0,c
  6484  01E638  CFF3 F03F          	movff	prodl,___flmul@temp
  6485  01E63C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6486  01E640  503F               	movf	___flmul@temp^0,w,c
  6487  01E642  263B               	addwf	___flmul@prod^0,f,c
  6488  01E644  5040               	movf	(___flmul@temp+1)^0,w,c
  6489  01E646  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6490  01E648  0E00               	movlw	0
  6491  01E64A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6492  01E64C  0E00               	movlw	0
  6493  01E64E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6494  01E650  502D               	movf	(___flmul@a+1)^0,w,c
  6495  01E652  022A               	mulwf	(___flmul@b+2)^0,c
  6496  01E654  CFF3 F03F          	movff	prodl,___flmul@temp
  6497  01E658  CFF4 F040          	movff	prodh,___flmul@temp+1
  6498  01E65C  503F               	movf	___flmul@temp^0,w,c
  6499  01E65E  263B               	addwf	___flmul@prod^0,f,c
  6500  01E660  5040               	movf	(___flmul@temp+1)^0,w,c
  6501  01E662  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6502  01E664  0E00               	movlw	0
  6503  01E666  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6504  01E668  0E00               	movlw	0
  6505  01E66A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6506  01E66C  502E               	movf	(___flmul@a+2)^0,w,c
  6507  01E66E  022A               	mulwf	(___flmul@b+2)^0,c
  6508  01E670  CFF3 F03F          	movff	prodl,___flmul@temp
  6509  01E674  CFF4 F040          	movff	prodh,___flmul@temp+1
  6510  01E678  503F               	movf	___flmul@temp^0,w,c
  6511  01E67A  6E30               	movwf	??___flmul^0,c
  6512  01E67C  5040               	movf	(___flmul@temp+1)^0,w,c
  6513  01E67E  6E31               	movwf	(??___flmul+1)^0,c
  6514  01E680  6A32               	clrf	(??___flmul+2)^0,c
  6515  01E682  6A33               	clrf	(??___flmul+3)^0,c
  6516  01E684  C032  F033         	movff	??___flmul+2,??___flmul+3
  6517  01E688  C031  F032         	movff	??___flmul+1,??___flmul+2
  6518  01E68C  C030  F031         	movff	??___flmul,??___flmul+1
  6519  01E690  6A30               	clrf	??___flmul^0,c
  6520  01E692  5030               	movf	??___flmul^0,w,c
  6521  01E694  263B               	addwf	___flmul@prod^0,f,c
  6522  01E696  5031               	movf	(??___flmul+1)^0,w,c
  6523  01E698  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6524  01E69A  5032               	movf	(??___flmul+2)^0,w,c
  6525  01E69C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6526  01E69E  5033               	movf	(??___flmul+3)^0,w,c
  6527  01E6A0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6528  01E6A2  C035  F030         	movff	___flmul@grs,??___flmul
  6529  01E6A6  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6530  01E6AA  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6531  01E6AE  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6532  01E6B2  0E19               	movlw	25
  6533  01E6B4  EF61  F0F3         	goto	u3010
  6534  01E6B8                     u3015:
  6535  01E6B8  90D8               	bcf	status,0,c
  6536  01E6BA  3233               	rrcf	(??___flmul+3)^0,f,c
  6537  01E6BC  3232               	rrcf	(??___flmul+2)^0,f,c
  6538  01E6BE  3231               	rrcf	(??___flmul+1)^0,f,c
  6539  01E6C0  3230               	rrcf	??___flmul^0,f,c
  6540  01E6C2                     u3010:
  6541  01E6C2  2EE8               	decfsz	wreg,f,c
  6542  01E6C4  EF5C  F0F3         	goto	u3015
  6543  01E6C8  5030               	movf	??___flmul^0,w,c
  6544  01E6CA  263B               	addwf	___flmul@prod^0,f,c
  6545  01E6CC  5031               	movf	(??___flmul+1)^0,w,c
  6546  01E6CE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6547  01E6D0  5032               	movf	(??___flmul+2)^0,w,c
  6548  01E6D2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6549  01E6D4  5033               	movf	(??___flmul+3)^0,w,c
  6550  01E6D6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6551  01E6D8  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6552  01E6DC  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6553  01E6E0  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6554  01E6E4  6A35               	clrf	___flmul@grs^0,c
  6555  01E6E6  5039               	movf	___flmul@aexp^0,w,c
  6556  01E6E8  C03A  F030         	movff	___flmul@bexp,??___flmul
  6557  01E6EC  6A31               	clrf	(??___flmul+1)^0,c
  6558  01E6EE  2630               	addwf	??___flmul^0,f,c
  6559  01E6F0  0E00               	movlw	0
  6560  01E6F2  2231               	addwfc	(??___flmul+1)^0,f,c
  6561  01E6F4  0E82               	movlw	130
  6562  01E6F6  2430               	addwf	??___flmul^0,w,c
  6563  01E6F8  6E3F               	movwf	___flmul@temp^0,c
  6564  01E6FA  0EFF               	movlw	255
  6565  01E6FC  2031               	addwfc	(??___flmul+1)^0,w,c
  6566  01E6FE  6E40               	movwf	(___flmul@temp+1)^0,c
  6567  01E700  EF97  F0F3         	goto	l3362
  6568  01E704                     l3356:
  6569  01E704  90D8               	bcf	status,0,c
  6570  01E706  363B               	rlcf	___flmul@prod^0,f,c
  6571  01E708  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6572  01E70A  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6573  01E70C  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6574  01E70E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6575  01E710  EF8C  F0F3         	goto	u3021
  6576  01E714  EF8E  F0F3         	goto	u3020
  6577  01E718                     u3021:
  6578  01E718  EF8F  F0F3         	goto	l1138
  6579  01E71C                     u3020:
  6580  01E71C  803B               	bsf	___flmul@prod^0,0,c
  6581  01E71E                     l1138:
  6582  01E71E  90D8               	bcf	status,0,c
  6583  01E720  3635               	rlcf	___flmul@grs^0,f,c
  6584  01E722  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6585  01E724  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6586  01E726  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6587  01E728  063F               	decf	___flmul@temp^0,f,c
  6588  01E72A  A0D8               	btfss	status,0,c
  6589  01E72C  0640               	decf	(___flmul@temp+1)^0,f,c
  6590  01E72E                     l3362:
  6591  01E72E  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6592  01E730  EF9C  F0F3         	goto	u3031
  6593  01E734  EF9E  F0F3         	goto	u3030
  6594  01E738                     u3031:
  6595  01E738  EF82  F0F3         	goto	l3356
  6596  01E73C                     u3030:
  6597  01E73C  0E00               	movlw	0
  6598  01E73E  6E39               	movwf	___flmul@aexp^0,c
  6599  01E740  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6600  01E742  EFA5  F0F3         	goto	u3041
  6601  01E746  EFA7  F0F3         	goto	u3040
  6602  01E74A                     u3041:
  6603  01E74A  EFCB  F0F3         	goto	l1140
  6604  01E74E                     u3040:
  6605  01E74E  0EFF               	movlw	255
  6606  01E750  1435               	andwf	___flmul@grs^0,w,c
  6607  01E752  6E30               	movwf	??___flmul^0,c
  6608  01E754  0EFF               	movlw	255
  6609  01E756  1436               	andwf	(___flmul@grs+1)^0,w,c
  6610  01E758  6E31               	movwf	(??___flmul+1)^0,c
  6611  01E75A  0EFF               	movlw	255
  6612  01E75C  1437               	andwf	(___flmul@grs+2)^0,w,c
  6613  01E75E  6E32               	movwf	(??___flmul+2)^0,c
  6614  01E760  0E7F               	movlw	127
  6615  01E762  1438               	andwf	(___flmul@grs+3)^0,w,c
  6616  01E764  6E33               	movwf	(??___flmul+3)^0,c
  6617  01E766  5030               	movf	??___flmul^0,w,c
  6618  01E768  1031               	iorwf	(??___flmul+1)^0,w,c
  6619  01E76A  1032               	iorwf	(??___flmul+2)^0,w,c
  6620  01E76C  1033               	iorwf	(??___flmul+3)^0,w,c
  6621  01E76E  B4D8               	btfsc	status,2,c
  6622  01E770  EFBC  F0F3         	goto	u3051
  6623  01E774  EFBE  F0F3         	goto	u3050
  6624  01E778                     u3051:
  6625  01E778  EFC2  F0F3         	goto	l1141
  6626  01E77C                     u3050:
  6627  01E77C                     l3370:
  6628  01E77C  0E01               	movlw	1
  6629  01E77E  6E39               	movwf	___flmul@aexp^0,c
  6630  01E780  EFCB  F0F3         	goto	l1140
  6631  01E784                     l1141:
  6632  01E784  A03B               	btfss	___flmul@prod^0,0,c
  6633  01E786  EFC7  F0F3         	goto	u3061
  6634  01E78A  EFC9  F0F3         	goto	u3060
  6635  01E78E                     u3061:
  6636  01E78E  EFCB  F0F3         	goto	l1140
  6637  01E792                     u3060:
  6638  01E792  EFBE  F0F3         	goto	l3370
  6639  01E796                     l1140:
  6640  01E796  5039               	movf	___flmul@aexp^0,w,c
  6641  01E798  B4D8               	btfsc	status,2,c
  6642  01E79A  EFD1  F0F3         	goto	u3071
  6643  01E79E  EFD3  F0F3         	goto	u3070
  6644  01E7A2                     u3071:
  6645  01E7A2  EFF7  F0F3         	goto	l3382
  6646  01E7A6                     u3070:
  6647  01E7A6  0E01               	movlw	1
  6648  01E7A8  263B               	addwf	___flmul@prod^0,f,c
  6649  01E7AA  0E00               	movlw	0
  6650  01E7AC  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6651  01E7AE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6652  01E7B0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6653  01E7B2  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6654  01E7B4  EFDE  F0F3         	goto	u3081
  6655  01E7B8  EFE0  F0F3         	goto	u3080
  6656  01E7BC                     u3081:
  6657  01E7BC  EFF7  F0F3         	goto	l3382
  6658  01E7C0                     u3080:
  6659  01E7C0  C03B  F030         	movff	___flmul@prod,??___flmul
  6660  01E7C4  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6661  01E7C8  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6662  01E7CC  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6663  01E7D0  3433               	rlcf	(??___flmul+3)^0,w,c
  6664  01E7D2  3233               	rrcf	(??___flmul+3)^0,f,c
  6665  01E7D4  3232               	rrcf	(??___flmul+2)^0,f,c
  6666  01E7D6  3231               	rrcf	(??___flmul+1)^0,f,c
  6667  01E7D8  3230               	rrcf	??___flmul^0,f,c
  6668  01E7DA  C030  F03B         	movff	??___flmul,___flmul@prod
  6669  01E7DE  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6670  01E7E2  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6671  01E7E6  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6672  01E7EA  4A3F               	infsnz	___flmul@temp^0,f,c
  6673  01E7EC  2A40               	incf	(___flmul@temp+1)^0,f,c
  6674  01E7EE                     l3382:
  6675  01E7EE  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6676  01E7F0  EF02  F0F4         	goto	u3091
  6677  01E7F4  5040               	movf	(___flmul@temp+1)^0,w,c
  6678  01E7F6  E108               	bnz	u3090
  6679  01E7F8  283F               	incf	___flmul@temp^0,w,c
  6680  01E7FA  A0D8               	btfss	status,0,c
  6681  01E7FC  EF02  F0F4         	goto	u3091
  6682  01E800  EF04  F0F4         	goto	u3090
  6683  01E804                     u3091:
  6684  01E804  EF0E  F0F4         	goto	l3386
  6685  01E808                     u3090:
  6686  01E808  0E00               	movlw	0
  6687  01E80A  6E3B               	movwf	___flmul@prod^0,c
  6688  01E80C  0E00               	movlw	0
  6689  01E80E  6E3C               	movwf	(___flmul@prod+1)^0,c
  6690  01E810  0E80               	movlw	128
  6691  01E812  6E3D               	movwf	(___flmul@prod+2)^0,c
  6692  01E814  0E7F               	movlw	127
  6693  01E816  6E3E               	movwf	(___flmul@prod+3)^0,c
  6694  01E818  EF3C  F0F4         	goto	l3398
  6695  01E81C                     l3386:
  6696  01E81C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6697  01E81E  EF1B  F0F4         	goto	u3100
  6698  01E822  5040               	movf	(___flmul@temp+1)^0,w,c
  6699  01E824  E106               	bnz	u3101
  6700  01E826  043F               	decf	___flmul@temp^0,w,c
  6701  01E828  B0D8               	btfsc	status,0,c
  6702  01E82A  EF19  F0F4         	goto	u3101
  6703  01E82E  EF1B  F0F4         	goto	u3100
  6704  01E832                     u3101:
  6705  01E832  EF27  F0F4         	goto	l1148
  6706  01E836                     u3100:
  6707  01E836  0E00               	movlw	0
  6708  01E838  6E3B               	movwf	___flmul@prod^0,c
  6709  01E83A  0E00               	movlw	0
  6710  01E83C  6E3C               	movwf	(___flmul@prod+1)^0,c
  6711  01E83E  0E00               	movlw	0
  6712  01E840  6E3D               	movwf	(___flmul@prod+2)^0,c
  6713  01E842  0E00               	movlw	0
  6714  01E844  6E3E               	movwf	(___flmul@prod+3)^0,c
  6715  01E846  0E00               	movlw	0
  6716  01E848  6E34               	movwf	___flmul@sign^0,c
  6717  01E84A  EF3C  F0F4         	goto	l3398
  6718  01E84E                     l1148:
  6719  01E84E  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6720  01E852  0EFF               	movlw	255
  6721  01E854  163B               	andwf	___flmul@prod^0,f,c
  6722  01E856  0EFF               	movlw	255
  6723  01E858  163C               	andwf	(___flmul@prod+1)^0,f,c
  6724  01E85A  0E7F               	movlw	127
  6725  01E85C  163D               	andwf	(___flmul@prod+2)^0,f,c
  6726  01E85E  0E00               	movlw	0
  6727  01E860  163E               	andwf	(___flmul@prod+3)^0,f,c
  6728  01E862  A03A               	btfss	___flmul@bexp^0,0,c
  6729  01E864  EF36  F0F4         	goto	u3111
  6730  01E868  EF38  F0F4         	goto	u3110
  6731  01E86C                     u3111:
  6732  01E86C  EF39  F0F4         	goto	l3396
  6733  01E870                     u3110:
  6734  01E870  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6735  01E872                     l3396:
  6736  01E872  90D8               	bcf	status,0,c
  6737  01E874  303A               	rrcf	___flmul@bexp^0,w,c
  6738  01E876  6E3E               	movwf	(___flmul@prod+3)^0,c
  6739  01E878                     l3398:
  6740  01E878  5034               	movf	___flmul@sign^0,w,c
  6741  01E87A  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6742  01E87C  C03B  F028         	movff	___flmul@prod,?___flmul
  6743  01E880  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6744  01E884  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6745  01E888  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6746  01E88C                     l1135:
  6747  01E88C  0012               	return		;funcret
  6748  01E88E                     __end_of___flmul:
  6749                           	callstack 0
  6750                           
  6751 ;; *************** function ___fldiv *****************
  6752 ;; Defined at:
  6753 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  b               4   14[COMRAM] unsigned char 
  6756 ;;  a               4   18[COMRAM] unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  grs             4   33[COMRAM] unsigned long 
  6759 ;;  rem             4   26[COMRAM] unsigned long 
  6760 ;;  new_exp         2   31[COMRAM] short 
  6761 ;;  aexp            1   38[COMRAM] unsigned char 
  6762 ;;  bexp            1   37[COMRAM] unsigned char 
  6763 ;;  sign            1   30[COMRAM] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  4   14[COMRAM] unsigned char 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6773 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6774 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;Total ram usage:       25 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_determine_color_new
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text24
  6787  01E0CA                     __ptext24:
  6788                           	callstack 0
  6789  01E0CA                     ___fldiv:
  6790                           	callstack 29
  6791  01E0CA  5012               	movf	(___fldiv@b+3)^0,w,c
  6792  01E0CC  0B80               	andlw	128
  6793  01E0CE  6E1F               	movwf	___fldiv@sign^0,c
  6794  01E0D0  5012               	movf	(___fldiv@b+3)^0,w,c
  6795  01E0D2  2412               	addwf	(___fldiv@b+3)^0,w,c
  6796  01E0D4  6E26               	movwf	___fldiv@bexp^0,c
  6797  01E0D6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6798  01E0D8  EF70  F0F0         	goto	u2701
  6799  01E0DC  EF72  F0F0         	goto	u2700
  6800  01E0E0                     u2701:
  6801  01E0E0  EF73  F0F0         	goto	l3142
  6802  01E0E4                     u2700:
  6803  01E0E4  8026               	bsf	___fldiv@bexp^0,0,c
  6804  01E0E6                     l3142:
  6805  01E0E6  5026               	movf	___fldiv@bexp^0,w,c
  6806  01E0E8  B4D8               	btfsc	status,2,c
  6807  01E0EA  EF79  F0F0         	goto	u2711
  6808  01E0EE  EF7B  F0F0         	goto	u2710
  6809  01E0F2                     u2711:
  6810  01E0F2  EF90  F0F0         	goto	l3152
  6811  01E0F6                     u2710:
  6812  01E0F6  2826               	incf	___fldiv@bexp^0,w,c
  6813  01E0F8  A4D8               	btfss	status,2,c
  6814  01E0FA  EF81  F0F0         	goto	u2721
  6815  01E0FE  EF83  F0F0         	goto	u2720
  6816  01E102                     u2721:
  6817  01E102  EF8B  F0F0         	goto	l3148
  6818  01E106                     u2720:
  6819  01E106  0E00               	movlw	0
  6820  01E108  6E0F               	movwf	___fldiv@b^0,c
  6821  01E10A  0E00               	movlw	0
  6822  01E10C  6E10               	movwf	(___fldiv@b+1)^0,c
  6823  01E10E  0E00               	movlw	0
  6824  01E110  6E11               	movwf	(___fldiv@b+2)^0,c
  6825  01E112  0E00               	movlw	0
  6826  01E114  6E12               	movwf	(___fldiv@b+3)^0,c
  6827  01E116                     l3148:
  6828  01E116  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6829  01E118  0E00               	movlw	0
  6830  01E11A  6E12               	movwf	(___fldiv@b+3)^0,c
  6831  01E11C  EF98  F0F0         	goto	l3154
  6832  01E120                     l3152:
  6833  01E120  0E00               	movlw	0
  6834  01E122  6E0F               	movwf	___fldiv@b^0,c
  6835  01E124  0E00               	movlw	0
  6836  01E126  6E10               	movwf	(___fldiv@b+1)^0,c
  6837  01E128  0E00               	movlw	0
  6838  01E12A  6E11               	movwf	(___fldiv@b+2)^0,c
  6839  01E12C  0E00               	movlw	0
  6840  01E12E  6E12               	movwf	(___fldiv@b+3)^0,c
  6841  01E130                     l3154:
  6842  01E130  5016               	movf	(___fldiv@a+3)^0,w,c
  6843  01E132  0B80               	andlw	128
  6844  01E134  1A1F               	xorwf	___fldiv@sign^0,f,c
  6845  01E136  5016               	movf	(___fldiv@a+3)^0,w,c
  6846  01E138  2416               	addwf	(___fldiv@a+3)^0,w,c
  6847  01E13A  6E27               	movwf	___fldiv@aexp^0,c
  6848  01E13C  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6849  01E13E  EFA3  F0F0         	goto	u2731
  6850  01E142  EFA5  F0F0         	goto	u2730
  6851  01E146                     u2731:
  6852  01E146  EFA6  F0F0         	goto	l3162
  6853  01E14A                     u2730:
  6854  01E14A  8027               	bsf	___fldiv@aexp^0,0,c
  6855  01E14C                     l3162:
  6856  01E14C  5027               	movf	___fldiv@aexp^0,w,c
  6857  01E14E  B4D8               	btfsc	status,2,c
  6858  01E150  EFAC  F0F0         	goto	u2741
  6859  01E154  EFAE  F0F0         	goto	u2740
  6860  01E158                     u2741:
  6861  01E158  EFC3  F0F0         	goto	l3172
  6862  01E15C                     u2740:
  6863  01E15C  2827               	incf	___fldiv@aexp^0,w,c
  6864  01E15E  A4D8               	btfss	status,2,c
  6865  01E160  EFB4  F0F0         	goto	u2751
  6866  01E164  EFB6  F0F0         	goto	u2750
  6867  01E168                     u2751:
  6868  01E168  EFBE  F0F0         	goto	l3168
  6869  01E16C                     u2750:
  6870  01E16C  0E00               	movlw	0
  6871  01E16E  6E13               	movwf	___fldiv@a^0,c
  6872  01E170  0E00               	movlw	0
  6873  01E172  6E14               	movwf	(___fldiv@a+1)^0,c
  6874  01E174  0E00               	movlw	0
  6875  01E176  6E15               	movwf	(___fldiv@a+2)^0,c
  6876  01E178  0E00               	movlw	0
  6877  01E17A  6E16               	movwf	(___fldiv@a+3)^0,c
  6878  01E17C                     l3168:
  6879  01E17C  8E15               	bsf	(___fldiv@a+2)^0,7,c
  6880  01E17E  0E00               	movlw	0
  6881  01E180  6E16               	movwf	(___fldiv@a+3)^0,c
  6882  01E182  EFCB  F0F0         	goto	l3174
  6883  01E186                     l3172:
  6884  01E186  0E00               	movlw	0
  6885  01E188  6E13               	movwf	___fldiv@a^0,c
  6886  01E18A  0E00               	movlw	0
  6887  01E18C  6E14               	movwf	(___fldiv@a+1)^0,c
  6888  01E18E  0E00               	movlw	0
  6889  01E190  6E15               	movwf	(___fldiv@a+2)^0,c
  6890  01E192  0E00               	movlw	0
  6891  01E194  6E16               	movwf	(___fldiv@a+3)^0,c
  6892  01E196                     l3174:
  6893  01E196  5013               	movf	___fldiv@a^0,w,c
  6894  01E198  1014               	iorwf	(___fldiv@a+1)^0,w,c
  6895  01E19A  1015               	iorwf	(___fldiv@a+2)^0,w,c
  6896  01E19C  1016               	iorwf	(___fldiv@a+3)^0,w,c
  6897  01E19E  A4D8               	btfss	status,2,c
  6898  01E1A0  EFD4  F0F0         	goto	u2761
  6899  01E1A4  EFD6  F0F0         	goto	u2760
  6900  01E1A8                     u2761:
  6901  01E1A8  EFEE  F0F0         	goto	l3186
  6902  01E1AC                     u2760:
  6903  01E1AC  0E00               	movlw	0
  6904  01E1AE  6E0F               	movwf	___fldiv@b^0,c
  6905  01E1B0  0E00               	movlw	0
  6906  01E1B2  6E10               	movwf	(___fldiv@b+1)^0,c
  6907  01E1B4  0E00               	movlw	0
  6908  01E1B6  6E11               	movwf	(___fldiv@b+2)^0,c
  6909  01E1B8  0E00               	movlw	0
  6910  01E1BA  6E12               	movwf	(___fldiv@b+3)^0,c
  6911  01E1BC  0E80               	movlw	128
  6912  01E1BE  1211               	iorwf	(___fldiv@b+2)^0,f,c
  6913  01E1C0  0E7F               	movlw	127
  6914  01E1C2  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6915  01E1C4                     l3180:
  6916  01E1C4  501F               	movf	___fldiv@sign^0,w,c
  6917  01E1C6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6918  01E1C8  C00F  F00F         	movff	___fldiv@b,?___fldiv
  6919  01E1CC  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  6920  01E1D0  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  6921  01E1D4  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  6922  01E1D8  EF31  F0F2         	goto	l1099
  6923  01E1DC                     l3186:
  6924  01E1DC  5026               	movf	___fldiv@bexp^0,w,c
  6925  01E1DE  A4D8               	btfss	status,2,c
  6926  01E1E0  EFF4  F0F0         	goto	u2771
  6927  01E1E4  EFF6  F0F0         	goto	u2770
  6928  01E1E8                     u2771:
  6929  01E1E8  EF00  F0F1         	goto	l3194
  6930  01E1EC                     u2770:
  6931  01E1EC  0E00               	movlw	0
  6932  01E1EE  6E0F               	movwf	?___fldiv^0,c
  6933  01E1F0  0E00               	movlw	0
  6934  01E1F2  6E10               	movwf	(?___fldiv+1)^0,c
  6935  01E1F4  0E00               	movlw	0
  6936  01E1F6  6E11               	movwf	(?___fldiv+2)^0,c
  6937  01E1F8  0E00               	movlw	0
  6938  01E1FA  6E12               	movwf	(?___fldiv+3)^0,c
  6939  01E1FC  EF31  F0F2         	goto	l1099
  6940  01E200                     l3194:
  6941  01E200  5027               	movf	___fldiv@aexp^0,w,c
  6942  01E202  C026  F017         	movff	___fldiv@bexp,??___fldiv
  6943  01E206  6A18               	clrf	(??___fldiv+1)^0,c
  6944  01E208  5E17               	subwf	??___fldiv^0,f,c
  6945  01E20A  0E00               	movlw	0
  6946  01E20C  5A18               	subwfb	(??___fldiv+1)^0,f,c
  6947  01E20E  0E7F               	movlw	127
  6948  01E210  2417               	addwf	??___fldiv^0,w,c
  6949  01E212  6E20               	movwf	___fldiv@new_exp^0,c
  6950  01E214  0E00               	movlw	0
  6951  01E216  2018               	addwfc	(??___fldiv+1)^0,w,c
  6952  01E218  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6953  01E21A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  6954  01E21E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  6955  01E222  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  6956  01E226  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  6957  01E22A  0E00               	movlw	0
  6958  01E22C  6E0F               	movwf	___fldiv@b^0,c
  6959  01E22E  0E00               	movlw	0
  6960  01E230  6E10               	movwf	(___fldiv@b+1)^0,c
  6961  01E232  0E00               	movlw	0
  6962  01E234  6E11               	movwf	(___fldiv@b+2)^0,c
  6963  01E236  0E00               	movlw	0
  6964  01E238  6E12               	movwf	(___fldiv@b+3)^0,c
  6965  01E23A  0E00               	movlw	0
  6966  01E23C  6E22               	movwf	___fldiv@grs^0,c
  6967  01E23E  0E00               	movlw	0
  6968  01E240  6E23               	movwf	(___fldiv@grs+1)^0,c
  6969  01E242  0E00               	movlw	0
  6970  01E244  6E24               	movwf	(___fldiv@grs+2)^0,c
  6971  01E246  0E00               	movlw	0
  6972  01E248  6E25               	movwf	(___fldiv@grs+3)^0,c
  6973  01E24A  0E00               	movlw	0
  6974  01E24C  6E27               	movwf	___fldiv@aexp^0,c
  6975  01E24E  EF61  F0F1         	goto	l1101
  6976  01E252                     l3204:
  6977  01E252  5027               	movf	___fldiv@aexp^0,w,c
  6978  01E254  B4D8               	btfsc	status,2,c
  6979  01E256  EF2F  F0F1         	goto	u2781
  6980  01E25A  EF31  F0F1         	goto	u2780
  6981  01E25E                     u2781:
  6982  01E25E  EF48  F0F1         	goto	l3212
  6983  01E262                     u2780:
  6984  01E262  90D8               	bcf	status,0,c
  6985  01E264  361B               	rlcf	___fldiv@rem^0,f,c
  6986  01E266  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  6987  01E268  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  6988  01E26A  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  6989  01E26C  90D8               	bcf	status,0,c
  6990  01E26E  360F               	rlcf	___fldiv@b^0,f,c
  6991  01E270  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6992  01E272  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6993  01E274  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6994  01E276  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6995  01E278  EF40  F0F1         	goto	u2791
  6996  01E27C  EF42  F0F1         	goto	u2790
  6997  01E280                     u2791:
  6998  01E280  EF43  F0F1         	goto	l1104
  6999  01E284                     u2790:
  7000  01E284  800F               	bsf	___fldiv@b^0,0,c
  7001  01E286                     l1104:
  7002  01E286  90D8               	bcf	status,0,c
  7003  01E288  3622               	rlcf	___fldiv@grs^0,f,c
  7004  01E28A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7005  01E28C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7006  01E28E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7007  01E290                     l3212:
  7008  01E290  5013               	movf	___fldiv@a^0,w,c
  7009  01E292  5C1B               	subwf	___fldiv@rem^0,w,c
  7010  01E294  5014               	movf	(___fldiv@a+1)^0,w,c
  7011  01E296  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7012  01E298  5015               	movf	(___fldiv@a+2)^0,w,c
  7013  01E29A  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7014  01E29C  5016               	movf	(___fldiv@a+3)^0,w,c
  7015  01E29E  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7016  01E2A0  A0D8               	btfss	status,0,c
  7017  01E2A2  EF55  F0F1         	goto	u2801
  7018  01E2A6  EF57  F0F1         	goto	u2800
  7019  01E2AA                     u2801:
  7020  01E2AA  EF60  F0F1         	goto	l3218
  7021  01E2AE                     u2800:
  7022  01E2AE  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7023  01E2B0  5013               	movf	___fldiv@a^0,w,c
  7024  01E2B2  5E1B               	subwf	___fldiv@rem^0,f,c
  7025  01E2B4  5014               	movf	(___fldiv@a+1)^0,w,c
  7026  01E2B6  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7027  01E2B8  5015               	movf	(___fldiv@a+2)^0,w,c
  7028  01E2BA  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7029  01E2BC  5016               	movf	(___fldiv@a+3)^0,w,c
  7030  01E2BE  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7031  01E2C0                     l3218:
  7032  01E2C0  2A27               	incf	___fldiv@aexp^0,f,c
  7033  01E2C2                     l1101:
  7034  01E2C2  0E19               	movlw	25
  7035  01E2C4  6427               	cpfsgt	___fldiv@aexp^0,c
  7036  01E2C6  EF67  F0F1         	goto	u2811
  7037  01E2CA  EF69  F0F1         	goto	u2810
  7038  01E2CE                     u2811:
  7039  01E2CE  EF29  F0F1         	goto	l3204
  7040  01E2D2                     u2810:
  7041  01E2D2  501B               	movf	___fldiv@rem^0,w,c
  7042  01E2D4  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7043  01E2D6  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7044  01E2D8  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7045  01E2DA  B4D8               	btfsc	status,2,c
  7046  01E2DC  EF72  F0F1         	goto	u2821
  7047  01E2E0  EF74  F0F1         	goto	u2820
  7048  01E2E4                     u2821:
  7049  01E2E4  EF8C  F0F1         	goto	l3230
  7050  01E2E8                     u2820:
  7051  01E2E8  8022               	bsf	___fldiv@grs^0,0,c
  7052  01E2EA  EF8C  F0F1         	goto	l3230
  7053  01E2EE                     l3224:
  7054  01E2EE  90D8               	bcf	status,0,c
  7055  01E2F0  360F               	rlcf	___fldiv@b^0,f,c
  7056  01E2F2  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7057  01E2F4  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7058  01E2F6  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7059  01E2F8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7060  01E2FA  EF81  F0F1         	goto	u2831
  7061  01E2FE  EF83  F0F1         	goto	u2830
  7062  01E302                     u2831:
  7063  01E302  EF84  F0F1         	goto	l1110
  7064  01E306                     u2830:
  7065  01E306  800F               	bsf	___fldiv@b^0,0,c
  7066  01E308                     l1110:
  7067  01E308  90D8               	bcf	status,0,c
  7068  01E30A  3622               	rlcf	___fldiv@grs^0,f,c
  7069  01E30C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7070  01E30E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7071  01E310  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7072  01E312  0620               	decf	___fldiv@new_exp^0,f,c
  7073  01E314  A0D8               	btfss	status,0,c
  7074  01E316  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7075  01E318                     l3230:
  7076  01E318  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7077  01E31A  EF91  F0F1         	goto	u2841
  7078  01E31E  EF93  F0F1         	goto	u2840
  7079  01E322                     u2841:
  7080  01E322  EF77  F0F1         	goto	l3224
  7081  01E326                     u2840:
  7082  01E326  0E00               	movlw	0
  7083  01E328  6E27               	movwf	___fldiv@aexp^0,c
  7084  01E32A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7085  01E32C  EF9A  F0F1         	goto	u2851
  7086  01E330  EF9C  F0F1         	goto	u2850
  7087  01E334                     u2851:
  7088  01E334  EFC0  F0F1         	goto	l1112
  7089  01E338                     u2850:
  7090  01E338  0EFF               	movlw	255
  7091  01E33A  1422               	andwf	___fldiv@grs^0,w,c
  7092  01E33C  6E17               	movwf	??___fldiv^0,c
  7093  01E33E  0EFF               	movlw	255
  7094  01E340  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7095  01E342  6E18               	movwf	(??___fldiv+1)^0,c
  7096  01E344  0EFF               	movlw	255
  7097  01E346  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7098  01E348  6E19               	movwf	(??___fldiv+2)^0,c
  7099  01E34A  0E7F               	movlw	127
  7100  01E34C  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7101  01E34E  6E1A               	movwf	(??___fldiv+3)^0,c
  7102  01E350  5017               	movf	??___fldiv^0,w,c
  7103  01E352  1018               	iorwf	(??___fldiv+1)^0,w,c
  7104  01E354  1019               	iorwf	(??___fldiv+2)^0,w,c
  7105  01E356  101A               	iorwf	(??___fldiv+3)^0,w,c
  7106  01E358  B4D8               	btfsc	status,2,c
  7107  01E35A  EFB1  F0F1         	goto	u2861
  7108  01E35E  EFB3  F0F1         	goto	u2860
  7109  01E362                     u2861:
  7110  01E362  EFB7  F0F1         	goto	l1113
  7111  01E366                     u2860:
  7112  01E366                     l3238:
  7113  01E366  0E01               	movlw	1
  7114  01E368  6E27               	movwf	___fldiv@aexp^0,c
  7115  01E36A  EFC0  F0F1         	goto	l1112
  7116  01E36E                     l1113:
  7117  01E36E  A00F               	btfss	___fldiv@b^0,0,c
  7118  01E370  EFBC  F0F1         	goto	u2871
  7119  01E374  EFBE  F0F1         	goto	u2870
  7120  01E378                     u2871:
  7121  01E378  EFC0  F0F1         	goto	l1112
  7122  01E37C                     u2870:
  7123  01E37C  EFB3  F0F1         	goto	l3238
  7124  01E380                     l1112:
  7125  01E380  5027               	movf	___fldiv@aexp^0,w,c
  7126  01E382  B4D8               	btfsc	status,2,c
  7127  01E384  EFC6  F0F1         	goto	u2881
  7128  01E388  EFC8  F0F1         	goto	u2880
  7129  01E38C                     u2881:
  7130  01E38C  EFEC  F0F1         	goto	l3250
  7131  01E390                     u2880:
  7132  01E390  0E01               	movlw	1
  7133  01E392  260F               	addwf	___fldiv@b^0,f,c
  7134  01E394  0E00               	movlw	0
  7135  01E396  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7136  01E398  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7137  01E39A  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7138  01E39C  A012               	btfss	(___fldiv@b+3)^0,0,c
  7139  01E39E  EFD3  F0F1         	goto	u2891
  7140  01E3A2  EFD5  F0F1         	goto	u2890
  7141  01E3A6                     u2891:
  7142  01E3A6  EFEC  F0F1         	goto	l3250
  7143  01E3AA                     u2890:
  7144  01E3AA  C00F  F017         	movff	___fldiv@b,??___fldiv
  7145  01E3AE  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7146  01E3B2  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7147  01E3B6  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7148  01E3BA  341A               	rlcf	(??___fldiv+3)^0,w,c
  7149  01E3BC  321A               	rrcf	(??___fldiv+3)^0,f,c
  7150  01E3BE  3219               	rrcf	(??___fldiv+2)^0,f,c
  7151  01E3C0  3218               	rrcf	(??___fldiv+1)^0,f,c
  7152  01E3C2  3217               	rrcf	??___fldiv^0,f,c
  7153  01E3C4  C017  F00F         	movff	??___fldiv,___fldiv@b
  7154  01E3C8  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7155  01E3CC  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7156  01E3D0  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7157  01E3D4  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7158  01E3D6  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7159  01E3D8                     l3250:
  7160  01E3D8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7161  01E3DA  EFF7  F0F1         	goto	u2901
  7162  01E3DE  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7163  01E3E0  E108               	bnz	u2900
  7164  01E3E2  2820               	incf	___fldiv@new_exp^0,w,c
  7165  01E3E4  A0D8               	btfss	status,0,c
  7166  01E3E6  EFF7  F0F1         	goto	u2901
  7167  01E3EA  EFF9  F0F1         	goto	u2900
  7168  01E3EE                     u2901:
  7169  01E3EE  EF04  F0F2         	goto	l3254
  7170  01E3F2                     u2900:
  7171  01E3F2  0E00               	movlw	0
  7172  01E3F4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7173  01E3F6  6820               	setf	___fldiv@new_exp^0,c
  7174  01E3F8  0E00               	movlw	0
  7175  01E3FA  6E0F               	movwf	___fldiv@b^0,c
  7176  01E3FC  0E00               	movlw	0
  7177  01E3FE  6E10               	movwf	(___fldiv@b+1)^0,c
  7178  01E400  0E00               	movlw	0
  7179  01E402  6E11               	movwf	(___fldiv@b+2)^0,c
  7180  01E404  0E00               	movlw	0
  7181  01E406  6E12               	movwf	(___fldiv@b+3)^0,c
  7182  01E408                     l3254:
  7183  01E408  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7184  01E40A  EF11  F0F2         	goto	u2910
  7185  01E40E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7186  01E410  E106               	bnz	u2911
  7187  01E412  0420               	decf	___fldiv@new_exp^0,w,c
  7188  01E414  B0D8               	btfsc	status,0,c
  7189  01E416  EF0F  F0F2         	goto	u2911
  7190  01E41A  EF11  F0F2         	goto	u2910
  7191  01E41E                     u2911:
  7192  01E41E  EF1F  F0F2         	goto	l3258
  7193  01E422                     u2910:
  7194  01E422  0E00               	movlw	0
  7195  01E424  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7196  01E426  0E00               	movlw	0
  7197  01E428  6E20               	movwf	___fldiv@new_exp^0,c
  7198  01E42A  0E00               	movlw	0
  7199  01E42C  6E0F               	movwf	___fldiv@b^0,c
  7200  01E42E  0E00               	movlw	0
  7201  01E430  6E10               	movwf	(___fldiv@b+1)^0,c
  7202  01E432  0E00               	movlw	0
  7203  01E434  6E11               	movwf	(___fldiv@b+2)^0,c
  7204  01E436  0E00               	movlw	0
  7205  01E438  6E12               	movwf	(___fldiv@b+3)^0,c
  7206  01E43A  0E00               	movlw	0
  7207  01E43C  6E1F               	movwf	___fldiv@sign^0,c
  7208  01E43E                     l3258:
  7209  01E43E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7210  01E442  A026               	btfss	___fldiv@bexp^0,0,c
  7211  01E444  EF26  F0F2         	goto	u2921
  7212  01E448  EF28  F0F2         	goto	u2920
  7213  01E44C                     u2921:
  7214  01E44C  EF2B  F0F2         	goto	l3264
  7215  01E450                     u2920:
  7216  01E450  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7217  01E452  EF2C  F0F2         	goto	l3266
  7218  01E456                     l3264:
  7219  01E456  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7220  01E458                     l3266:
  7221  01E458  90D8               	bcf	status,0,c
  7222  01E45A  3026               	rrcf	___fldiv@bexp^0,w,c
  7223  01E45C  6E12               	movwf	(___fldiv@b+3)^0,c
  7224  01E45E  EFE2  F0F0         	goto	l3180
  7225  01E462                     l1099:
  7226  01E462  0012               	return		;funcret
  7227  01E464                     __end_of___fldiv:
  7228                           	callstack 0
  7229                           
  7230 ;; *************** function ___fladd *****************
  7231 ;; Defined at:
  7232 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;  b               4   64[COMRAM] unsigned char 
  7235 ;;  a               4   68[COMRAM] unsigned char 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  grs             1   79[COMRAM] unsigned char 
  7238 ;;  bexp            1   78[COMRAM] unsigned char 
  7239 ;;  aexp            1   77[COMRAM] unsigned char 
  7240 ;;  signs           1   76[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  4   64[COMRAM] unsigned char 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7250 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;Total ram usage:       16 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_determine_color_new
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text25
  7264  01E88E                     __ptext25:
  7265                           	callstack 0
  7266  01E88E                     ___fladd:
  7267                           	callstack 29
  7268  01E88E  5044               	movf	(___fladd@b+3)^0,w,c
  7269  01E890  0B80               	andlw	128
  7270  01E892  6E4D               	movwf	___fladd@signs^0,c
  7271  01E894  5044               	movf	(___fladd@b+3)^0,w,c
  7272  01E896  2444               	addwf	(___fladd@b+3)^0,w,c
  7273  01E898  6E4F               	movwf	___fladd@bexp^0,c
  7274  01E89A  AE43               	btfss	(___fladd@b+2)^0,7,c
  7275  01E89C  EF52  F0F4         	goto	u2311
  7276  01E8A0  EF54  F0F4         	goto	u2310
  7277  01E8A4                     u2311:
  7278  01E8A4  EF55  F0F4         	goto	l2940
  7279  01E8A8                     u2310:
  7280  01E8A8  804F               	bsf	___fladd@bexp^0,0,c
  7281  01E8AA                     l2940:
  7282  01E8AA  504F               	movf	___fladd@bexp^0,w,c
  7283  01E8AC  B4D8               	btfsc	status,2,c
  7284  01E8AE  EF5B  F0F4         	goto	u2321
  7285  01E8B2  EF5D  F0F4         	goto	u2320
  7286  01E8B6                     u2321:
  7287  01E8B6  EF72  F0F4         	goto	l2950
  7288  01E8BA                     u2320:
  7289  01E8BA  284F               	incf	___fladd@bexp^0,w,c
  7290  01E8BC  A4D8               	btfss	status,2,c
  7291  01E8BE  EF63  F0F4         	goto	u2331
  7292  01E8C2  EF65  F0F4         	goto	u2330
  7293  01E8C6                     u2331:
  7294  01E8C6  EF6D  F0F4         	goto	l2946
  7295  01E8CA                     u2330:
  7296  01E8CA  0E00               	movlw	0
  7297  01E8CC  6E41               	movwf	___fladd@b^0,c
  7298  01E8CE  0E00               	movlw	0
  7299  01E8D0  6E42               	movwf	(___fladd@b+1)^0,c
  7300  01E8D2  0E00               	movlw	0
  7301  01E8D4  6E43               	movwf	(___fladd@b+2)^0,c
  7302  01E8D6  0E00               	movlw	0
  7303  01E8D8  6E44               	movwf	(___fladd@b+3)^0,c
  7304  01E8DA                     l2946:
  7305  01E8DA  8E43               	bsf	(___fladd@b+2)^0,7,c
  7306  01E8DC  0E00               	movlw	0
  7307  01E8DE  6E44               	movwf	(___fladd@b+3)^0,c
  7308  01E8E0  EF7A  F0F4         	goto	l2952
  7309  01E8E4                     l2950:
  7310  01E8E4  0E00               	movlw	0
  7311  01E8E6  6E41               	movwf	___fladd@b^0,c
  7312  01E8E8  0E00               	movlw	0
  7313  01E8EA  6E42               	movwf	(___fladd@b+1)^0,c
  7314  01E8EC  0E00               	movlw	0
  7315  01E8EE  6E43               	movwf	(___fladd@b+2)^0,c
  7316  01E8F0  0E00               	movlw	0
  7317  01E8F2  6E44               	movwf	(___fladd@b+3)^0,c
  7318  01E8F4                     l2952:
  7319  01E8F4  5048               	movf	(___fladd@a+3)^0,w,c
  7320  01E8F6  0B80               	andlw	128
  7321  01E8F8  6E4E               	movwf	___fladd@aexp^0,c
  7322  01E8FA  504D               	movf	___fladd@signs^0,w,c
  7323  01E8FC  184E               	xorwf	___fladd@aexp^0,w,c
  7324  01E8FE  B4D8               	btfsc	status,2,c
  7325  01E900  EF84  F0F4         	goto	u2341
  7326  01E904  EF86  F0F4         	goto	u2340
  7327  01E908                     u2341:
  7328  01E908  EF87  F0F4         	goto	l2958
  7329  01E90C                     u2340:
  7330  01E90C  8C4D               	bsf	___fladd@signs^0,6,c
  7331  01E90E                     l2958:
  7332  01E90E  5048               	movf	(___fladd@a+3)^0,w,c
  7333  01E910  2448               	addwf	(___fladd@a+3)^0,w,c
  7334  01E912  6E4E               	movwf	___fladd@aexp^0,c
  7335  01E914  AE47               	btfss	(___fladd@a+2)^0,7,c
  7336  01E916  EF8F  F0F4         	goto	u2351
  7337  01E91A  EF91  F0F4         	goto	u2350
  7338  01E91E                     u2351:
  7339  01E91E  EF92  F0F4         	goto	l2964
  7340  01E922                     u2350:
  7341  01E922  804E               	bsf	___fladd@aexp^0,0,c
  7342  01E924                     l2964:
  7343  01E924  504E               	movf	___fladd@aexp^0,w,c
  7344  01E926  B4D8               	btfsc	status,2,c
  7345  01E928  EF98  F0F4         	goto	u2361
  7346  01E92C  EF9A  F0F4         	goto	u2360
  7347  01E930                     u2361:
  7348  01E930  EFAF  F0F4         	goto	l2974
  7349  01E934                     u2360:
  7350  01E934  284E               	incf	___fladd@aexp^0,w,c
  7351  01E936  A4D8               	btfss	status,2,c
  7352  01E938  EFA0  F0F4         	goto	u2371
  7353  01E93C  EFA2  F0F4         	goto	u2370
  7354  01E940                     u2371:
  7355  01E940  EFAA  F0F4         	goto	l2970
  7356  01E944                     u2370:
  7357  01E944  0E00               	movlw	0
  7358  01E946  6E45               	movwf	___fladd@a^0,c
  7359  01E948  0E00               	movlw	0
  7360  01E94A  6E46               	movwf	(___fladd@a+1)^0,c
  7361  01E94C  0E00               	movlw	0
  7362  01E94E  6E47               	movwf	(___fladd@a+2)^0,c
  7363  01E950  0E00               	movlw	0
  7364  01E952  6E48               	movwf	(___fladd@a+3)^0,c
  7365  01E954                     l2970:
  7366  01E954  8E47               	bsf	(___fladd@a+2)^0,7,c
  7367  01E956  0E00               	movlw	0
  7368  01E958  6E48               	movwf	(___fladd@a+3)^0,c
  7369  01E95A  EFB7  F0F4         	goto	l2976
  7370  01E95E                     l2974:
  7371  01E95E  0E00               	movlw	0
  7372  01E960  6E45               	movwf	___fladd@a^0,c
  7373  01E962  0E00               	movlw	0
  7374  01E964  6E46               	movwf	(___fladd@a+1)^0,c
  7375  01E966  0E00               	movlw	0
  7376  01E968  6E47               	movwf	(___fladd@a+2)^0,c
  7377  01E96A  0E00               	movlw	0
  7378  01E96C  6E48               	movwf	(___fladd@a+3)^0,c
  7379  01E96E                     l2976:
  7380  01E96E  504F               	movf	___fladd@bexp^0,w,c
  7381  01E970  5C4E               	subwf	___fladd@aexp^0,w,c
  7382  01E972  B0D8               	btfsc	status,0,c
  7383  01E974  EFBE  F0F4         	goto	u2381
  7384  01E978  EFC0  F0F4         	goto	u2380
  7385  01E97C                     u2381:
  7386  01E97C  EFE7  F0F4         	goto	l3012
  7387  01E980                     u2380:
  7388  01E980  AC4D               	btfss	___fladd@signs^0,6,c
  7389  01E982  EFC5  F0F4         	goto	u2391
  7390  01E986  EFC7  F0F4         	goto	u2390
  7391  01E98A                     u2391:
  7392  01E98A  EFC9  F0F4         	goto	l2982
  7393  01E98E                     u2390:
  7394  01E98E  0E80               	movlw	128
  7395  01E990  1A4D               	xorwf	___fladd@signs^0,f,c
  7396  01E992                     l2982:
  7397  01E992  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  7398  01E996  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  7399  01E99A  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  7400  01E99E  C041  F050         	movff	___fladd@b,___fladd@grs
  7401  01E9A2  C045  F041         	movff	___fladd@a,___fladd@b
  7402  01E9A6  C050  F045         	movff	___fladd@grs,___fladd@a
  7403  01E9AA  C042  F050         	movff	___fladd@b+1,___fladd@grs
  7404  01E9AE  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  7405  01E9B2  C050  F046         	movff	___fladd@grs,___fladd@a+1
  7406  01E9B6  C043  F050         	movff	___fladd@b+2,___fladd@grs
  7407  01E9BA  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  7408  01E9BE  C050  F047         	movff	___fladd@grs,___fladd@a+2
  7409  01E9C2  C044  F050         	movff	___fladd@b+3,___fladd@grs
  7410  01E9C6  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  7411  01E9CA  C050  F048         	movff	___fladd@grs,___fladd@a+3
  7412  01E9CE                     l3012:
  7413  01E9CE  0E00               	movlw	0
  7414  01E9D0  6E50               	movwf	___fladd@grs^0,c
  7415  01E9D2  504F               	movf	___fladd@bexp^0,w,c
  7416  01E9D4  C04E  F049         	movff	___fladd@aexp,??___fladd
  7417  01E9D8  6A4A               	clrf	(??___fladd+1)^0,c
  7418  01E9DA  5E49               	subwf	??___fladd^0,f,c
  7419  01E9DC  0E00               	movlw	0
  7420  01E9DE  5A4A               	subwfb	(??___fladd+1)^0,f,c
  7421  01E9E0  BE4A               	btfsc	(??___fladd+1)^0,7,c
  7422  01E9E2  EFFC  F0F4         	goto	u2401
  7423  01E9E6  504A               	movf	(??___fladd+1)^0,w,c
  7424  01E9E8  E109               	bnz	u2400
  7425  01E9EA  0E1A               	movlw	26
  7426  01E9EC  5C49               	subwf	??___fladd^0,w,c
  7427  01E9EE  A0D8               	btfss	status,0,c
  7428  01E9F0  EFFC  F0F4         	goto	u2401
  7429  01E9F4  EFFE  F0F4         	goto	u2400
  7430  01E9F8                     u2401:
  7431  01E9F8  EF35  F0F5         	goto	l1046
  7432  01E9FC                     u2400:
  7433  01E9FC  5041               	movf	___fladd@b^0,w,c
  7434  01E9FE  1042               	iorwf	(___fladd@b+1)^0,w,c
  7435  01EA00  1043               	iorwf	(___fladd@b+2)^0,w,c
  7436  01EA02  1044               	iorwf	(___fladd@b+3)^0,w,c
  7437  01EA04  A4D8               	btfss	status,2,c
  7438  01EA06  EF07  F0F5         	goto	u2411
  7439  01EA0A  EF0A  F0F5         	goto	u2410
  7440  01EA0E                     u2411:
  7441  01EA0E  0E01               	movlw	1
  7442  01EA10  EF0B  F0F5         	goto	u2420
  7443  01EA14                     u2410:
  7444  01EA14  0E00               	movlw	0
  7445  01EA16                     u2420:
  7446  01EA16  6E50               	movwf	___fladd@grs^0,c
  7447  01EA18  0E00               	movlw	0
  7448  01EA1A  6E41               	movwf	___fladd@b^0,c
  7449  01EA1C  0E00               	movlw	0
  7450  01EA1E  6E42               	movwf	(___fladd@b+1)^0,c
  7451  01EA20  0E00               	movlw	0
  7452  01EA22  6E43               	movwf	(___fladd@b+2)^0,c
  7453  01EA24  0E00               	movlw	0
  7454  01EA26  6E44               	movwf	(___fladd@b+3)^0,c
  7455  01EA28  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  7456  01EA2C  EF3E  F0F5         	goto	l1045
  7457  01EA30                     l1047:
  7458  01EA30  A050               	btfss	___fladd@grs^0,0,c
  7459  01EA32  EF1D  F0F5         	goto	u2431
  7460  01EA36  EF1F  F0F5         	goto	u2430
  7461  01EA3A                     u2431:
  7462  01EA3A  EF25  F0F5         	goto	l3024
  7463  01EA3E                     u2430:
  7464  01EA3E  90D8               	bcf	status,0,c
  7465  01EA40  3050               	rrcf	___fladd@grs^0,w,c
  7466  01EA42  0901               	iorlw	1
  7467  01EA44  6E50               	movwf	___fladd@grs^0,c
  7468  01EA46  EF27  F0F5         	goto	l3026
  7469  01EA4A                     l3024:
  7470  01EA4A  90D8               	bcf	status,0,c
  7471  01EA4C  3250               	rrcf	___fladd@grs^0,f,c
  7472  01EA4E                     l3026:
  7473  01EA4E  A041               	btfss	___fladd@b^0,0,c
  7474  01EA50  EF2C  F0F5         	goto	u2441
  7475  01EA54  EF2E  F0F5         	goto	u2440
  7476  01EA58                     u2441:
  7477  01EA58  EF2F  F0F5         	goto	l3030
  7478  01EA5C                     u2440:
  7479  01EA5C  8E50               	bsf	___fladd@grs^0,7,c
  7480  01EA5E                     l3030:
  7481  01EA5E  3444               	rlcf	(___fladd@b+3)^0,w,c
  7482  01EA60  3244               	rrcf	(___fladd@b+3)^0,f,c
  7483  01EA62  3243               	rrcf	(___fladd@b+2)^0,f,c
  7484  01EA64  3242               	rrcf	(___fladd@b+1)^0,f,c
  7485  01EA66  3241               	rrcf	___fladd@b^0,f,c
  7486  01EA68  2A4F               	incf	___fladd@bexp^0,f,c
  7487  01EA6A                     l1046:
  7488  01EA6A  504E               	movf	___fladd@aexp^0,w,c
  7489  01EA6C  5C4F               	subwf	___fladd@bexp^0,w,c
  7490  01EA6E  A0D8               	btfss	status,0,c
  7491  01EA70  EF3C  F0F5         	goto	u2451
  7492  01EA74  EF3E  F0F5         	goto	u2450
  7493  01EA78                     u2451:
  7494  01EA78  EF18  F0F5         	goto	l1047
  7495  01EA7C                     u2450:
  7496  01EA7C                     l1045:
  7497  01EA7C  BC4D               	btfsc	___fladd@signs^0,6,c
  7498  01EA7E  EF43  F0F5         	goto	u2461
  7499  01EA82  EF45  F0F5         	goto	u2460
  7500  01EA86                     u2461:
  7501  01EA86  EF85  F0F5         	goto	l3058
  7502  01EA8A                     u2460:
  7503  01EA8A  504F               	movf	___fladd@bexp^0,w,c
  7504  01EA8C  A4D8               	btfss	status,2,c
  7505  01EA8E  EF4B  F0F5         	goto	u2471
  7506  01EA92  EF4D  F0F5         	goto	u2470
  7507  01EA96                     u2471:
  7508  01EA96  EF57  F0F5         	goto	l3040
  7509  01EA9A                     u2470:
  7510  01EA9A  0E00               	movlw	0
  7511  01EA9C  6E41               	movwf	?___fladd^0,c
  7512  01EA9E  0E00               	movlw	0
  7513  01EAA0  6E42               	movwf	(?___fladd+1)^0,c
  7514  01EAA2  0E00               	movlw	0
  7515  01EAA4  6E43               	movwf	(?___fladd+2)^0,c
  7516  01EAA6  0E00               	movlw	0
  7517  01EAA8  6E44               	movwf	(?___fladd+3)^0,c
  7518  01EAAA  EFA6  F0F6         	goto	l1054
  7519  01EAAE                     l3040:
  7520  01EAAE  5045               	movf	___fladd@a^0,w,c
  7521  01EAB0  2641               	addwf	___fladd@b^0,f,c
  7522  01EAB2  5046               	movf	(___fladd@a+1)^0,w,c
  7523  01EAB4  2242               	addwfc	(___fladd@b+1)^0,f,c
  7524  01EAB6  5047               	movf	(___fladd@a+2)^0,w,c
  7525  01EAB8  2243               	addwfc	(___fladd@b+2)^0,f,c
  7526  01EABA  5048               	movf	(___fladd@a+3)^0,w,c
  7527  01EABC  2244               	addwfc	(___fladd@b+3)^0,f,c
  7528  01EABE  A044               	btfss	(___fladd@b+3)^0,0,c
  7529  01EAC0  EF64  F0F5         	goto	u2481
  7530  01EAC4  EF66  F0F5         	goto	u2480
  7531  01EAC8                     u2481:
  7532  01EAC8  EF12  F0F6         	goto	l3094
  7533  01EACC                     u2480:
  7534  01EACC  A050               	btfss	___fladd@grs^0,0,c
  7535  01EACE  EF6B  F0F5         	goto	u2491
  7536  01EAD2  EF6D  F0F5         	goto	u2490
  7537  01EAD6                     u2491:
  7538  01EAD6  EF73  F0F5         	goto	l3048
  7539  01EADA                     u2490:
  7540  01EADA  90D8               	bcf	status,0,c
  7541  01EADC  3050               	rrcf	___fladd@grs^0,w,c
  7542  01EADE  0901               	iorlw	1
  7543  01EAE0  6E50               	movwf	___fladd@grs^0,c
  7544  01EAE2  EF75  F0F5         	goto	l3050
  7545  01EAE6                     l3048:
  7546  01EAE6  90D8               	bcf	status,0,c
  7547  01EAE8  3250               	rrcf	___fladd@grs^0,f,c
  7548  01EAEA                     l3050:
  7549  01EAEA  A041               	btfss	___fladd@b^0,0,c
  7550  01EAEC  EF7A  F0F5         	goto	u2501
  7551  01EAF0  EF7C  F0F5         	goto	u2500
  7552  01EAF4                     u2501:
  7553  01EAF4  EF7D  F0F5         	goto	l3054
  7554  01EAF8                     u2500:
  7555  01EAF8  8E50               	bsf	___fladd@grs^0,7,c
  7556  01EAFA                     l3054:
  7557  01EAFA  3444               	rlcf	(___fladd@b+3)^0,w,c
  7558  01EAFC  3244               	rrcf	(___fladd@b+3)^0,f,c
  7559  01EAFE  3243               	rrcf	(___fladd@b+2)^0,f,c
  7560  01EB00  3242               	rrcf	(___fladd@b+1)^0,f,c
  7561  01EB02  3241               	rrcf	___fladd@b^0,f,c
  7562  01EB04  2A4F               	incf	___fladd@bexp^0,f,c
  7563  01EB06  EF12  F0F6         	goto	l3094
  7564  01EB0A                     l3058:
  7565  01EB0A  5045               	movf	___fladd@a^0,w,c
  7566  01EB0C  5C41               	subwf	___fladd@b^0,w,c
  7567  01EB0E  5046               	movf	(___fladd@a+1)^0,w,c
  7568  01EB10  5842               	subwfb	(___fladd@b+1)^0,w,c
  7569  01EB12  5047               	movf	(___fladd@a+2)^0,w,c
  7570  01EB14  5843               	subwfb	(___fladd@b+2)^0,w,c
  7571  01EB16  5044               	movf	(___fladd@b+3)^0,w,c
  7572  01EB18  0A80               	xorlw	128
  7573  01EB1A  6E49               	movwf	??___fladd^0,c
  7574  01EB1C  5048               	movf	(___fladd@a+3)^0,w,c
  7575  01EB1E  0A80               	xorlw	128
  7576  01EB20  5849               	subwfb	??___fladd^0,w,c
  7577  01EB22  B0D8               	btfsc	status,0,c
  7578  01EB24  EF96  F0F5         	goto	u2511
  7579  01EB28  EF98  F0F5         	goto	u2510
  7580  01EB2C                     u2511:
  7581  01EB2C  EFC3  F0F5         	goto	l3068
  7582  01EB30                     u2510:
  7583  01EB30  5041               	movf	___fladd@b^0,w,c
  7584  01EB32  5C45               	subwf	___fladd@a^0,w,c
  7585  01EB34  6E49               	movwf	??___fladd^0,c
  7586  01EB36  5042               	movf	(___fladd@b+1)^0,w,c
  7587  01EB38  5846               	subwfb	(___fladd@a+1)^0,w,c
  7588  01EB3A  6E4A               	movwf	(??___fladd+1)^0,c
  7589  01EB3C  5043               	movf	(___fladd@b+2)^0,w,c
  7590  01EB3E  5847               	subwfb	(___fladd@a+2)^0,w,c
  7591  01EB40  6E4B               	movwf	(??___fladd+2)^0,c
  7592  01EB42  5044               	movf	(___fladd@b+3)^0,w,c
  7593  01EB44  5848               	subwfb	(___fladd@a+3)^0,w,c
  7594  01EB46  6E4C               	movwf	(??___fladd+3)^0,c
  7595  01EB48  0EFF               	movlw	255
  7596  01EB4A  2449               	addwf	??___fladd^0,w,c
  7597  01EB4C  6E41               	movwf	___fladd@b^0,c
  7598  01EB4E  0EFF               	movlw	255
  7599  01EB50  204A               	addwfc	(??___fladd+1)^0,w,c
  7600  01EB52  6E42               	movwf	(___fladd@b+1)^0,c
  7601  01EB54  0EFF               	movlw	255
  7602  01EB56  204B               	addwfc	(??___fladd+2)^0,w,c
  7603  01EB58  6E43               	movwf	(___fladd@b+2)^0,c
  7604  01EB5A  0EFF               	movlw	255
  7605  01EB5C  204C               	addwfc	(??___fladd+3)^0,w,c
  7606  01EB5E  6E44               	movwf	(___fladd@b+3)^0,c
  7607  01EB60  0E80               	movlw	128
  7608  01EB62  1A4D               	xorwf	___fladd@signs^0,f,c
  7609  01EB64  6C50               	negf	___fladd@grs^0,c
  7610  01EB66  5050               	movf	___fladd@grs^0,w,c
  7611  01EB68  A4D8               	btfss	status,2,c
  7612  01EB6A  EFB9  F0F5         	goto	u2521
  7613  01EB6E  EFBB  F0F5         	goto	u2520
  7614  01EB72                     u2521:
  7615  01EB72  EFCB  F0F5         	goto	l1062
  7616  01EB76                     u2520:
  7617  01EB76  0E01               	movlw	1
  7618  01EB78  2641               	addwf	___fladd@b^0,f,c
  7619  01EB7A  0E00               	movlw	0
  7620  01EB7C  2242               	addwfc	(___fladd@b+1)^0,f,c
  7621  01EB7E  2243               	addwfc	(___fladd@b+2)^0,f,c
  7622  01EB80  2244               	addwfc	(___fladd@b+3)^0,f,c
  7623  01EB82  EFCB  F0F5         	goto	l1062
  7624  01EB86                     l3068:
  7625  01EB86  5045               	movf	___fladd@a^0,w,c
  7626  01EB88  5E41               	subwf	___fladd@b^0,f,c
  7627  01EB8A  5046               	movf	(___fladd@a+1)^0,w,c
  7628  01EB8C  5A42               	subwfb	(___fladd@b+1)^0,f,c
  7629  01EB8E  5047               	movf	(___fladd@a+2)^0,w,c
  7630  01EB90  5A43               	subwfb	(___fladd@b+2)^0,f,c
  7631  01EB92  5048               	movf	(___fladd@a+3)^0,w,c
  7632  01EB94  5A44               	subwfb	(___fladd@b+3)^0,f,c
  7633  01EB96                     l1062:
  7634  01EB96  5041               	movf	___fladd@b^0,w,c
  7635  01EB98  1042               	iorwf	(___fladd@b+1)^0,w,c
  7636  01EB9A  1043               	iorwf	(___fladd@b+2)^0,w,c
  7637  01EB9C  1044               	iorwf	(___fladd@b+3)^0,w,c
  7638  01EB9E  A4D8               	btfss	status,2,c
  7639  01EBA0  EFD4  F0F5         	goto	u2531
  7640  01EBA4  EFD6  F0F5         	goto	u2530
  7641  01EBA8                     u2531:
  7642  01EBA8  EF0B  F0F6         	goto	l3092
  7643  01EBAC                     u2530:
  7644  01EBAC  5050               	movf	___fladd@grs^0,w,c
  7645  01EBAE  A4D8               	btfss	status,2,c
  7646  01EBB0  EFDC  F0F5         	goto	u2541
  7647  01EBB4  EFDE  F0F5         	goto	u2540
  7648  01EBB8                     u2541:
  7649  01EBB8  EF0B  F0F6         	goto	l3092
  7650  01EBBC                     u2540:
  7651  01EBBC  0E00               	movlw	0
  7652  01EBBE  6E41               	movwf	?___fladd^0,c
  7653  01EBC0  0E00               	movlw	0
  7654  01EBC2  6E42               	movwf	(?___fladd+1)^0,c
  7655  01EBC4  0E00               	movlw	0
  7656  01EBC6  6E43               	movwf	(?___fladd+2)^0,c
  7657  01EBC8  0E00               	movlw	0
  7658  01EBCA  6E44               	movwf	(?___fladd+3)^0,c
  7659  01EBCC  EFA6  F0F6         	goto	l1054
  7660  01EBD0                     l3076:
  7661  01EBD0  90D8               	bcf	status,0,c
  7662  01EBD2  3641               	rlcf	___fladd@b^0,f,c
  7663  01EBD4  3642               	rlcf	(___fladd@b+1)^0,f,c
  7664  01EBD6  3643               	rlcf	(___fladd@b+2)^0,f,c
  7665  01EBD8  3644               	rlcf	(___fladd@b+3)^0,f,c
  7666  01EBDA  AE50               	btfss	___fladd@grs^0,7,c
  7667  01EBDC  EFF2  F0F5         	goto	u2551
  7668  01EBE0  EFF4  F0F5         	goto	u2550
  7669  01EBE4                     u2551:
  7670  01EBE4  EFF5  F0F5         	goto	l3082
  7671  01EBE8                     u2550:
  7672  01EBE8  8041               	bsf	___fladd@b^0,0,c
  7673  01EBEA                     l3082:
  7674  01EBEA  A050               	btfss	___fladd@grs^0,0,c
  7675  01EBEC  EFFA  F0F5         	goto	u2561
  7676  01EBF0  EFFC  F0F5         	goto	u2560
  7677  01EBF4                     u2561:
  7678  01EBF4  EF00  F0F6         	goto	l3086
  7679  01EBF8                     u2560:
  7680  01EBF8  80D8               	bsf	status,0,c
  7681  01EBFA  3650               	rlcf	___fladd@grs^0,f,c
  7682  01EBFC  EF02  F0F6         	goto	l3088
  7683  01EC00                     l3086:
  7684  01EC00  90D8               	bcf	status,0,c
  7685  01EC02  3650               	rlcf	___fladd@grs^0,f,c
  7686  01EC04                     l3088:
  7687  01EC04  504F               	movf	___fladd@bexp^0,w,c
  7688  01EC06  B4D8               	btfsc	status,2,c
  7689  01EC08  EF08  F0F6         	goto	u2571
  7690  01EC0C  EF0A  F0F6         	goto	u2570
  7691  01EC10                     u2571:
  7692  01EC10  EF0B  F0F6         	goto	l3092
  7693  01EC14                     u2570:
  7694  01EC14  064F               	decf	___fladd@bexp^0,f,c
  7695  01EC16                     l3092:
  7696  01EC16  AE43               	btfss	(___fladd@b+2)^0,7,c
  7697  01EC18  EF10  F0F6         	goto	u2581
  7698  01EC1C  EF12  F0F6         	goto	u2580
  7699  01EC20                     u2581:
  7700  01EC20  EFE8  F0F5         	goto	l3076
  7701  01EC24                     u2580:
  7702  01EC24                     l3094:
  7703  01EC24  0E00               	movlw	0
  7704  01EC26  6E4E               	movwf	___fladd@aexp^0,c
  7705  01EC28  AE50               	btfss	___fladd@grs^0,7,c
  7706  01EC2A  EF19  F0F6         	goto	u2591
  7707  01EC2E  EF1B  F0F6         	goto	u2590
  7708  01EC32                     u2591:
  7709  01EC32  EF33  F0F6         	goto	l1071
  7710  01EC36                     u2590:
  7711  01EC36  C050  F049         	movff	___fladd@grs,??___fladd
  7712  01EC3A  0E7F               	movlw	127
  7713  01EC3C  1649               	andwf	??___fladd^0,f,c
  7714  01EC3E  B4D8               	btfsc	status,2,c
  7715  01EC40  EF24  F0F6         	goto	u2601
  7716  01EC44  EF26  F0F6         	goto	u2600
  7717  01EC48                     u2601:
  7718  01EC48  EF2A  F0F6         	goto	l1072
  7719  01EC4C                     u2600:
  7720  01EC4C                     l3100:
  7721  01EC4C  0E01               	movlw	1
  7722  01EC4E  6E4E               	movwf	___fladd@aexp^0,c
  7723  01EC50  EF33  F0F6         	goto	l1071
  7724  01EC54                     l1072:
  7725  01EC54  A041               	btfss	___fladd@b^0,0,c
  7726  01EC56  EF2F  F0F6         	goto	u2611
  7727  01EC5A  EF31  F0F6         	goto	u2610
  7728  01EC5E                     u2611:
  7729  01EC5E  EF33  F0F6         	goto	l1071
  7730  01EC62                     u2610:
  7731  01EC62  EF26  F0F6         	goto	l3100
  7732  01EC66                     l1071:
  7733  01EC66  504E               	movf	___fladd@aexp^0,w,c
  7734  01EC68  B4D8               	btfsc	status,2,c
  7735  01EC6A  EF39  F0F6         	goto	u2621
  7736  01EC6E  EF3B  F0F6         	goto	u2620
  7737  01EC72                     u2621:
  7738  01EC72  EF66  F0F6         	goto	l3112
  7739  01EC76                     u2620:
  7740  01EC76  0E01               	movlw	1
  7741  01EC78  2641               	addwf	___fladd@b^0,f,c
  7742  01EC7A  0E00               	movlw	0
  7743  01EC7C  2242               	addwfc	(___fladd@b+1)^0,f,c
  7744  01EC7E  2243               	addwfc	(___fladd@b+2)^0,f,c
  7745  01EC80  2244               	addwfc	(___fladd@b+3)^0,f,c
  7746  01EC82  A044               	btfss	(___fladd@b+3)^0,0,c
  7747  01EC84  EF46  F0F6         	goto	u2631
  7748  01EC88  EF48  F0F6         	goto	u2630
  7749  01EC8C                     u2631:
  7750  01EC8C  EF66  F0F6         	goto	l3112
  7751  01EC90                     u2630:
  7752  01EC90  C041  F049         	movff	___fladd@b,??___fladd
  7753  01EC94  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  7754  01EC98  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  7755  01EC9C  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  7756  01ECA0  344C               	rlcf	(??___fladd+3)^0,w,c
  7757  01ECA2  324C               	rrcf	(??___fladd+3)^0,f,c
  7758  01ECA4  324B               	rrcf	(??___fladd+2)^0,f,c
  7759  01ECA6  324A               	rrcf	(??___fladd+1)^0,f,c
  7760  01ECA8  3249               	rrcf	??___fladd^0,f,c
  7761  01ECAA  C049  F041         	movff	??___fladd,___fladd@b
  7762  01ECAE  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  7763  01ECB2  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  7764  01ECB6  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  7765  01ECBA  284F               	incf	___fladd@bexp^0,w,c
  7766  01ECBC  B4D8               	btfsc	status,2,c
  7767  01ECBE  EF63  F0F6         	goto	u2641
  7768  01ECC2  EF65  F0F6         	goto	u2640
  7769  01ECC6                     u2641:
  7770  01ECC6  EF66  F0F6         	goto	l3112
  7771  01ECCA                     u2640:
  7772  01ECCA  2A4F               	incf	___fladd@bexp^0,f,c
  7773  01ECCC                     l3112:
  7774  01ECCC  284F               	incf	___fladd@bexp^0,w,c
  7775  01ECCE  B4D8               	btfsc	status,2,c
  7776  01ECD0  EF6C  F0F6         	goto	u2651
  7777  01ECD4  EF6E  F0F6         	goto	u2650
  7778  01ECD8                     u2651:
  7779  01ECD8  EF76  F0F6         	goto	l3116
  7780  01ECDC                     u2650:
  7781  01ECDC  504F               	movf	___fladd@bexp^0,w,c
  7782  01ECDE  A4D8               	btfss	status,2,c
  7783  01ECE0  EF74  F0F6         	goto	u2661
  7784  01ECE4  EF76  F0F6         	goto	u2660
  7785  01ECE8                     u2661:
  7786  01ECE8  EF88  F0F6         	goto	l3120
  7787  01ECEC                     u2660:
  7788  01ECEC                     l3116:
  7789  01ECEC  0E00               	movlw	0
  7790  01ECEE  6E41               	movwf	___fladd@b^0,c
  7791  01ECF0  0E00               	movlw	0
  7792  01ECF2  6E42               	movwf	(___fladd@b+1)^0,c
  7793  01ECF4  0E00               	movlw	0
  7794  01ECF6  6E43               	movwf	(___fladd@b+2)^0,c
  7795  01ECF8  0E00               	movlw	0
  7796  01ECFA  6E44               	movwf	(___fladd@b+3)^0,c
  7797  01ECFC  504F               	movf	___fladd@bexp^0,w,c
  7798  01ECFE  A4D8               	btfss	status,2,c
  7799  01ED00  EF84  F0F6         	goto	u2671
  7800  01ED04  EF86  F0F6         	goto	u2670
  7801  01ED08                     u2671:
  7802  01ED08  EF88  F0F6         	goto	l3120
  7803  01ED0C                     u2670:
  7804  01ED0C  0E00               	movlw	0
  7805  01ED0E  6E4D               	movwf	___fladd@signs^0,c
  7806  01ED10                     l3120:
  7807  01ED10  A04F               	btfss	___fladd@bexp^0,0,c
  7808  01ED12  EF8D  F0F6         	goto	u2681
  7809  01ED16  EF8F  F0F6         	goto	u2680
  7810  01ED1A                     u2681:
  7811  01ED1A  EF92  F0F6         	goto	l3124
  7812  01ED1E                     u2680:
  7813  01ED1E  8E43               	bsf	(___fladd@b+2)^0,7,c
  7814  01ED20  EF93  F0F6         	goto	l3126
  7815  01ED24                     l3124:
  7816  01ED24  9E43               	bcf	(___fladd@b+2)^0,7,c
  7817  01ED26                     l3126:
  7818  01ED26  90D8               	bcf	status,0,c
  7819  01ED28  304F               	rrcf	___fladd@bexp^0,w,c
  7820  01ED2A  6E44               	movwf	(___fladd@b+3)^0,c
  7821  01ED2C  AE4D               	btfss	___fladd@signs^0,7,c
  7822  01ED2E  EF9B  F0F6         	goto	u2691
  7823  01ED32  EF9D  F0F6         	goto	u2690
  7824  01ED36                     u2691:
  7825  01ED36  EF9E  F0F6         	goto	l3132
  7826  01ED3A                     u2690:
  7827  01ED3A  8E44               	bsf	(___fladd@b+3)^0,7,c
  7828  01ED3C                     l3132:
  7829  01ED3C  C041  F041         	movff	___fladd@b,?___fladd
  7830  01ED40  C042  F042         	movff	___fladd@b+1,?___fladd+1
  7831  01ED44  C043  F043         	movff	___fladd@b+2,?___fladd+2
  7832  01ED48  C044  F044         	movff	___fladd@b+3,?___fladd+3
  7833  01ED4C                     l1054:
  7834  01ED4C  0012               	return		;funcret
  7835  01ED4E                     __end_of___fladd:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function _color_click_init *****************
  7839 ;; Defined at:
  7840 ;;		line 17 in file "color.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;		None
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2, status,0, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;Total ram usage:        1 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 3
  7861 ;; This function calls:
  7862 ;;		_I2C_2_Master_Init
  7863 ;;		_color_writetoaddr
  7864 ;; This function is called by:
  7865 ;;		_main
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text26
  7870  01CE14                     __ptext26:
  7871                           	callstack 0
  7872  01CE14                     _color_click_init:
  7873                           	callstack 27
  7874  01CE14                     
  7875                           ;color.c: 20:     I2C_2_Master_Init();
  7876  01CE14  ECF5  F0E6         	call	_I2C_2_Master_Init	;wreg free
  7877  01CE18                     
  7878                           ;color.c: 23:   color_writetoaddr(0x00, 0x01);
  7879  01CE18  0E01               	movlw	1
  7880  01CE1A  6E03               	movwf	color_writetoaddr@value^0,c
  7881  01CE1C  0E00               	movlw	0
  7882  01CE1E  EC9E  F0E6         	call	_color_writetoaddr
  7883  01CE22                     
  7884                           ;color.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7885  01CE22  0E3F               	movlw	63
  7886  01CE24  6E05               	movwf	??_color_click_init^0,c
  7887  01CE26  0E55               	movlw	85
  7888  01CE28                     u4627:
  7889  01CE28  2EE8               	decfsz	wreg,f,c
  7890  01CE2A  D7FE               	bra	u4627
  7891  01CE2C  2E05               	decfsz	??_color_click_init^0,f,c
  7892  01CE2E  D7FC               	bra	u4627
  7893  01CE30  F000               	nop	
  7894  01CE32                     
  7895                           ;color.c: 27:  color_writetoaddr(0x00, 0x03);
  7896  01CE32  0E03               	movlw	3
  7897  01CE34  6E03               	movwf	color_writetoaddr@value^0,c
  7898  01CE36  0E00               	movlw	0
  7899  01CE38  EC9E  F0E6         	call	_color_writetoaddr
  7900  01CE3C                     
  7901                           ;color.c: 30:  color_writetoaddr(0x01, 0xD5);
  7902  01CE3C  0ED5               	movlw	213
  7903  01CE3E  6E03               	movwf	color_writetoaddr@value^0,c
  7904  01CE40  0E01               	movlw	1
  7905  01CE42  EC9E  F0E6         	call	_color_writetoaddr
  7906  01CE46  0012               	return		;funcret
  7907  01CE48                     __end_of_color_click_init:
  7908                           	callstack 0
  7909                           
  7910 ;; *************** function _color_writetoaddr *****************
  7911 ;; Defined at:
  7912 ;;		line 33 in file "color.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  address         1    wreg     unsigned char 
  7915 ;;  value           1    2[COMRAM] unsigned char 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  address         1    3[COMRAM] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7927 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;Total ram usage:        2 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; Hardware stack levels required when called: 2
  7934 ;; This function calls:
  7935 ;;		_I2C_2_Master_Start
  7936 ;;		_I2C_2_Master_Stop
  7937 ;;		_I2C_2_Master_Write
  7938 ;; This function is called by:
  7939 ;;		_color_click_init
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text27
  7944  01CD3C                     __ptext27:
  7945                           	callstack 0
  7946  01CD3C                     _color_writetoaddr:
  7947                           	callstack 27
  7948                           
  7949                           ;incstack = 0
  7950                           ;color_writetoaddr@address stored from wreg
  7951  01CD3C  6E04               	movwf	color_writetoaddr@address^0,c
  7952  01CD3E                     
  7953                           ;color.c: 34:     I2C_2_Master_Start();
  7954  01CD3E  EC7A  F0E6         	call	_I2C_2_Master_Start	;wreg free
  7955                           
  7956                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  7957  01CD42  0E52               	movlw	82
  7958  01CD44  EC8A  F0E6         	call	_I2C_2_Master_Write
  7959                           
  7960                           ;color.c: 36:     I2C_2_Master_Write(0x80 | address);
  7961  01CD48  5004               	movf	color_writetoaddr@address^0,w,c
  7962  01CD4A  0980               	iorlw	128
  7963  01CD4C  EC8A  F0E6         	call	_I2C_2_Master_Write
  7964                           
  7965                           ;color.c: 37:     I2C_2_Master_Write(value);
  7966  01CD50  5003               	movf	color_writetoaddr@value^0,w,c
  7967  01CD52  EC8A  F0E6         	call	_I2C_2_Master_Write
  7968                           
  7969                           ;color.c: 38:     I2C_2_Master_Stop();
  7970  01CD56  EC7F  F0E6         	call	_I2C_2_Master_Stop	;wreg free
  7971  01CD5A  0012               	return		;funcret
  7972  01CD5C                     __end_of_color_writetoaddr:
  7973                           	callstack 0
  7974                           
  7975 ;; *************** function _I2C_2_Master_Init *****************
  7976 ;; Defined at:
  7977 ;;		line 4 in file "i2c.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;Total ram usage:        0 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; This function calls:
  7998 ;;		Nothing
  7999 ;; This function is called by:
  8000 ;;		_color_click_init
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text28
  8005  01CDEA                     __ptext28:
  8006                           	callstack 0
  8007  01CDEA                     _I2C_2_Master_Init:
  8008                           	callstack 29
  8009  01CDEA                     
  8010                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8011  01CDEA  010E               	movlb	14	; () banked
  8012  01CDEC  51D9               	movf	217,w,b	;volatile
  8013  01CDEE  0BF0               	andlw	-16
  8014  01CDF0  0908               	iorlw	8
  8015  01CDF2  6FD9               	movwf	217,b	;volatile
  8016  01CDF4                     
  8017                           ; BSR set to: 14
  8018                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8019  01CDF4  8BD9               	bsf	217,5,b	;volatile
  8020                           
  8021                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8022  01CDF6  0E9F               	movlw	159
  8023  01CDF8  6FD6               	movwf	214,b	;volatile
  8024  01CDFA                     
  8025                           ; BSR set to: 14
  8026                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8027  01CDFA  8A84               	bsf	132,5,c	;volatile
  8028  01CDFC                     
  8029                           ; BSR set to: 14
  8030                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8031  01CDFC  8C84               	bsf	132,6,c	;volatile
  8032  01CDFE                     
  8033                           ; BSR set to: 14
  8034                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8035  01CDFE  9BA7               	bcf	167,5,b	;volatile
  8036  01CE00                     
  8037                           ; BSR set to: 14
  8038                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8039  01CE00  9DA7               	bcf	167,6,b	;volatile
  8040                           
  8041                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8042  01CE02  0E1D               	movlw	29
  8043  01CE04  6F1D               	movwf	29,b	;volatile
  8044                           
  8045                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8046  01CE06  0E1E               	movlw	30
  8047  01CE08  6F1C               	movwf	28,b	;volatile
  8048                           
  8049                           ;i2c.c: 18:   RD5PPS=0x1C;
  8050  01CE0A  0E1C               	movlw	28
  8051  01CE0C  6F6F               	movwf	111,b	;volatile
  8052                           
  8053                           ;i2c.c: 19:   RD6PPS=0x1B;
  8054  01CE0E  0E1B               	movlw	27
  8055  01CE10  6F70               	movwf	112,b	;volatile
  8056  01CE12                     
  8057                           ; BSR set to: 14
  8058  01CE12  0012               	return		;funcret
  8059  01CE14                     __end_of_I2C_2_Master_Init:
  8060                           	callstack 0
  8061                           
  8062 ;; *************** function _calibrateW *****************
  8063 ;; Defined at:
  8064 ;;		line 107 in file "color.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  m               2   11[COMRAM] PTR struct RGB_val
  8067 ;;		 -> main@test(20), 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;Total ram usage:        2 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; Hardware stack levels required when called: 3
  8086 ;; This function calls:
  8087 ;;		_color_read_Blue
  8088 ;;		_color_read_Green
  8089 ;;		_color_read_Red
  8090 ;; This function is called by:
  8091 ;;		_main
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text29
  8096  01CF12                     __ptext29:
  8097                           	callstack 0
  8098  01CF12                     _calibrateW:
  8099                           	callstack 27
  8100  01CF12                     
  8101                           ;color.c: 108:     (m->whiteR) = color_read_Red();
  8102  01CF12  ECFE  F0E7         	call	_color_read_Red	;wreg free
  8103  01CF16  EE20 F006          	lfsr	2,6
  8104  01CF1A  500C               	movf	calibrateW@m^0,w,c
  8105  01CF1C  26D9               	addwf	fsr2l,f,c
  8106  01CF1E  500D               	movf	(calibrateW@m+1)^0,w,c
  8107  01CF20  22DA               	addwfc	fsr2h,f,c
  8108  01CF22  C005  FFDE         	movff	?_color_read_Red,postinc2
  8109  01CF26  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8110                           
  8111                           ;color.c: 109:     (m->whiteG) = color_read_Green();
  8112  01CF2A  ECD6  F0E7         	call	_color_read_Green	;wreg free
  8113  01CF2E  EE20 F008          	lfsr	2,8
  8114  01CF32  500C               	movf	calibrateW@m^0,w,c
  8115  01CF34  26D9               	addwf	fsr2l,f,c
  8116  01CF36  500D               	movf	(calibrateW@m+1)^0,w,c
  8117  01CF38  22DA               	addwfc	fsr2h,f,c
  8118  01CF3A  C005  FFDE         	movff	?_color_read_Green,postinc2
  8119  01CF3E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8120                           
  8121                           ;color.c: 110:     (m->whiteB) = color_read_Blue();
  8122  01CF42  ECAE  F0E7         	call	_color_read_Blue	;wreg free
  8123  01CF46  EE20 F00A          	lfsr	2,10
  8124  01CF4A  500C               	movf	calibrateW@m^0,w,c
  8125  01CF4C  26D9               	addwf	fsr2l,f,c
  8126  01CF4E  500D               	movf	(calibrateW@m+1)^0,w,c
  8127  01CF50  22DA               	addwfc	fsr2h,f,c
  8128  01CF52  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8129  01CF56  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8130  01CF5A  0012               	return		;funcret
  8131  01CF5C                     __end_of_calibrateW:
  8132                           	callstack 0
  8133                           
  8134 ;; *************** function _calibrateB *****************
  8135 ;; Defined at:
  8136 ;;		line 113 in file "color.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  m               2   11[COMRAM] PTR struct RGB_val
  8139 ;;		 -> main@test(20), 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;Total ram usage:        2 bytes
  8156 ;; Hardware stack levels used: 1
  8157 ;; Hardware stack levels required when called: 3
  8158 ;; This function calls:
  8159 ;;		_color_read_Blue
  8160 ;;		_color_read_Green
  8161 ;;		_color_read_Red
  8162 ;; This function is called by:
  8163 ;;		_main
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text30
  8168  01CECC                     __ptext30:
  8169                           	callstack 0
  8170  01CECC                     _calibrateB:
  8171                           	callstack 27
  8172  01CECC                     
  8173                           ;color.c: 114:     (m->blackR) = color_read_Red();
  8174  01CECC  ECFE  F0E7         	call	_color_read_Red	;wreg free
  8175  01CED0  C00C  FFD9         	movff	calibrateB@m,fsr2l
  8176  01CED4  C00D  FFDA         	movff	calibrateB@m+1,fsr2h
  8177  01CED8  C005  FFDE         	movff	?_color_read_Red,postinc2
  8178  01CEDC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8179                           
  8180                           ;color.c: 115:     (m->blackG) = color_read_Green();
  8181  01CEE0  ECD6  F0E7         	call	_color_read_Green	;wreg free
  8182  01CEE4  EE20 F002          	lfsr	2,2
  8183  01CEE8  500C               	movf	calibrateB@m^0,w,c
  8184  01CEEA  26D9               	addwf	fsr2l,f,c
  8185  01CEEC  500D               	movf	(calibrateB@m+1)^0,w,c
  8186  01CEEE  22DA               	addwfc	fsr2h,f,c
  8187  01CEF0  C005  FFDE         	movff	?_color_read_Green,postinc2
  8188  01CEF4  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8189                           
  8190                           ;color.c: 116:     (m->blackB) = color_read_Blue();
  8191  01CEF8  ECAE  F0E7         	call	_color_read_Blue	;wreg free
  8192  01CEFC  EE20 F004          	lfsr	2,4
  8193  01CF00  500C               	movf	calibrateB@m^0,w,c
  8194  01CF02  26D9               	addwf	fsr2l,f,c
  8195  01CF04  500D               	movf	(calibrateB@m+1)^0,w,c
  8196  01CF06  22DA               	addwfc	fsr2h,f,c
  8197  01CF08  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8198  01CF0C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8199  01CF10  0012               	return		;funcret
  8200  01CF12                     __end_of_calibrateB:
  8201                           	callstack 0
  8202                           
  8203 ;; *************** function _color_read_Red *****************
  8204 ;; Defined at:
  8205 ;;		line 55 in file "color.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;  tmp             2    9[COMRAM] unsigned int 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  2    4[COMRAM] unsigned int 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;Total ram usage:        7 bytes
  8224 ;; Hardware stack levels used: 1
  8225 ;; Hardware stack levels required when called: 2
  8226 ;; This function calls:
  8227 ;;		_I2C_2_Master_Read
  8228 ;;		_I2C_2_Master_RepStart
  8229 ;;		_I2C_2_Master_Start
  8230 ;;		_I2C_2_Master_Stop
  8231 ;;		_I2C_2_Master_Write
  8232 ;; This function is called by:
  8233 ;;		_read_colours
  8234 ;;		_calibrateW
  8235 ;;		_calibrateB
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text31
  8240  01CFFC                     __ptext31:
  8241                           	callstack 0
  8242  01CFFC                     _color_read_Red:
  8243                           	callstack 27
  8244  01CFFC                     
  8245                           ;color.c: 57:  unsigned int tmp;;color.c: 58:  I2C_2_Master_Start();
  8246  01CFFC  EC7A  F0E6         	call	_I2C_2_Master_Start	;wreg free
  8247                           
  8248                           ;color.c: 59:  I2C_2_Master_Write(0x52 | 0x00);
  8249  01D000  0E52               	movlw	82
  8250  01D002  EC8A  F0E6         	call	_I2C_2_Master_Write
  8251                           
  8252                           ;color.c: 60:  I2C_2_Master_Write(0xA0 | 0x16);
  8253  01D006  0EB6               	movlw	182
  8254  01D008  EC8A  F0E6         	call	_I2C_2_Master_Write
  8255                           
  8256                           ;color.c: 61:  I2C_2_Master_RepStart();
  8257  01D00C  EC75  F0E6         	call	_I2C_2_Master_RepStart	;wreg free
  8258                           
  8259                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x01);
  8260  01D010  0E53               	movlw	83
  8261  01D012  EC8A  F0E6         	call	_I2C_2_Master_Write
  8262                           
  8263                           ;color.c: 63:  tmp=I2C_2_Master_Read(1);
  8264  01D016  0E01               	movlw	1
  8265  01D018  EC24  F0E7         	call	_I2C_2_Master_Read
  8266  01D01C  6E07               	movwf	??_color_read_Red^0,c
  8267  01D01E  5007               	movf	??_color_read_Red^0,w,c
  8268  01D020  6E0A               	movwf	color_read_Red@tmp^0,c
  8269  01D022  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8270                           
  8271                           ;color.c: 64:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8272  01D024  0E00               	movlw	0
  8273  01D026  EC24  F0E7         	call	_I2C_2_Master_Read
  8274  01D02A  6E07               	movwf	??_color_read_Red^0,c
  8275  01D02C  5007               	movf	??_color_read_Red^0,w,c
  8276  01D02E  6E09               	movwf	(??_color_read_Red+2)^0,c
  8277  01D030  6A08               	clrf	(??_color_read_Red+1)^0,c
  8278  01D032  500A               	movf	color_read_Red@tmp^0,w,c
  8279  01D034  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8280  01D036  6E0A               	movwf	color_read_Red@tmp^0,c
  8281  01D038  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8282  01D03A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8283  01D03C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8284                           
  8285                           ;color.c: 65:  I2C_2_Master_Stop();
  8286  01D03E  EC7F  F0E6         	call	_I2C_2_Master_Stop	;wreg free
  8287  01D042                     
  8288                           ;color.c: 66:  return tmp;
  8289  01D042  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8290  01D046  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8291  01D04A  0012               	return		;funcret
  8292  01D04C                     __end_of_color_read_Red:
  8293                           	callstack 0
  8294                           
  8295 ;; *************** function _color_read_Green *****************
  8296 ;; Defined at:
  8297 ;;		line 69 in file "color.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  tmp             2    9[COMRAM] unsigned int 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  2    4[COMRAM] unsigned int 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2, status,0, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;Total ram usage:        7 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; Hardware stack levels required when called: 2
  8318 ;; This function calls:
  8319 ;;		_I2C_2_Master_Read
  8320 ;;		_I2C_2_Master_RepStart
  8321 ;;		_I2C_2_Master_Start
  8322 ;;		_I2C_2_Master_Stop
  8323 ;;		_I2C_2_Master_Write
  8324 ;; This function is called by:
  8325 ;;		_read_colours
  8326 ;;		_calibrateW
  8327 ;;		_calibrateB
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text32
  8332  01CFAC                     __ptext32:
  8333                           	callstack 0
  8334  01CFAC                     _color_read_Green:
  8335                           	callstack 27
  8336  01CFAC                     
  8337                           ;color.c: 70:     unsigned int tmp;;color.c: 71:     I2C_2_Master_Start();
  8338  01CFAC  EC7A  F0E6         	call	_I2C_2_Master_Start	;wreg free
  8339                           
  8340                           ;color.c: 72:     I2C_2_Master_Write(0x52 | 0x00);
  8341  01CFB0  0E52               	movlw	82
  8342  01CFB2  EC8A  F0E6         	call	_I2C_2_Master_Write
  8343                           
  8344                           ;color.c: 73:  I2C_2_Master_Write(0xA0 | 0x18);
  8345  01CFB6  0EB8               	movlw	184
  8346  01CFB8  EC8A  F0E6         	call	_I2C_2_Master_Write
  8347                           
  8348                           ;color.c: 74:  I2C_2_Master_RepStart();
  8349  01CFBC  EC75  F0E6         	call	_I2C_2_Master_RepStart	;wreg free
  8350                           
  8351                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  8352  01CFC0  0E53               	movlw	83
  8353  01CFC2  EC8A  F0E6         	call	_I2C_2_Master_Write
  8354                           
  8355                           ;color.c: 76:  tmp=I2C_2_Master_Read(1);
  8356  01CFC6  0E01               	movlw	1
  8357  01CFC8  EC24  F0E7         	call	_I2C_2_Master_Read
  8358  01CFCC  6E07               	movwf	??_color_read_Green^0,c
  8359  01CFCE  5007               	movf	??_color_read_Green^0,w,c
  8360  01CFD0  6E0A               	movwf	color_read_Green@tmp^0,c
  8361  01CFD2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8362                           
  8363                           ;color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8364  01CFD4  0E00               	movlw	0
  8365  01CFD6  EC24  F0E7         	call	_I2C_2_Master_Read
  8366  01CFDA  6E07               	movwf	??_color_read_Green^0,c
  8367  01CFDC  5007               	movf	??_color_read_Green^0,w,c
  8368  01CFDE  6E09               	movwf	(??_color_read_Green+2)^0,c
  8369  01CFE0  6A08               	clrf	(??_color_read_Green+1)^0,c
  8370  01CFE2  500A               	movf	color_read_Green@tmp^0,w,c
  8371  01CFE4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  8372  01CFE6  6E0A               	movwf	color_read_Green@tmp^0,c
  8373  01CFE8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  8374  01CFEA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  8375  01CFEC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  8376                           
  8377                           ;color.c: 78:     I2C_2_Master_Stop();
  8378  01CFEE  EC7F  F0E6         	call	_I2C_2_Master_Stop	;wreg free
  8379  01CFF2                     
  8380                           ;color.c: 79:     return tmp;
  8381  01CFF2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  8382  01CFF6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8383  01CFFA  0012               	return		;funcret
  8384  01CFFC                     __end_of_color_read_Green:
  8385                           	callstack 0
  8386                           
  8387 ;; *************** function _color_read_Blue *****************
  8388 ;; Defined at:
  8389 ;;		line 82 in file "color.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  tmp             2    9[COMRAM] unsigned int 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  2    4[COMRAM] unsigned int 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;Total ram usage:        7 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 2
  8410 ;; This function calls:
  8411 ;;		_I2C_2_Master_Read
  8412 ;;		_I2C_2_Master_RepStart
  8413 ;;		_I2C_2_Master_Start
  8414 ;;		_I2C_2_Master_Stop
  8415 ;;		_I2C_2_Master_Write
  8416 ;; This function is called by:
  8417 ;;		_read_colours
  8418 ;;		_calibrateW
  8419 ;;		_calibrateB
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           	psect	text33
  8424  01CF5C                     __ptext33:
  8425                           	callstack 0
  8426  01CF5C                     _color_read_Blue:
  8427                           	callstack 27
  8428  01CF5C                     
  8429                           ;color.c: 83:     unsigned int tmp;;color.c: 84:     I2C_2_Master_Start();
  8430  01CF5C  EC7A  F0E6         	call	_I2C_2_Master_Start	;wreg free
  8431                           
  8432                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8433  01CF60  0E52               	movlw	82
  8434  01CF62  EC8A  F0E6         	call	_I2C_2_Master_Write
  8435                           
  8436                           ;color.c: 86:  I2C_2_Master_Write(0xA0 | 0x1A);
  8437  01CF66  0EBA               	movlw	186
  8438  01CF68  EC8A  F0E6         	call	_I2C_2_Master_Write
  8439                           
  8440                           ;color.c: 87:  I2C_2_Master_RepStart();
  8441  01CF6C  EC75  F0E6         	call	_I2C_2_Master_RepStart	;wreg free
  8442                           
  8443                           ;color.c: 88:  I2C_2_Master_Write(0x52 | 0x01);
  8444  01CF70  0E53               	movlw	83
  8445  01CF72  EC8A  F0E6         	call	_I2C_2_Master_Write
  8446                           
  8447                           ;color.c: 89:  tmp=I2C_2_Master_Read(1);
  8448  01CF76  0E01               	movlw	1
  8449  01CF78  EC24  F0E7         	call	_I2C_2_Master_Read
  8450  01CF7C  6E07               	movwf	??_color_read_Blue^0,c
  8451  01CF7E  5007               	movf	??_color_read_Blue^0,w,c
  8452  01CF80  6E0A               	movwf	color_read_Blue@tmp^0,c
  8453  01CF82  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  8454                           
  8455                           ;color.c: 90:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8456  01CF84  0E00               	movlw	0
  8457  01CF86  EC24  F0E7         	call	_I2C_2_Master_Read
  8458  01CF8A  6E07               	movwf	??_color_read_Blue^0,c
  8459  01CF8C  5007               	movf	??_color_read_Blue^0,w,c
  8460  01CF8E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  8461  01CF90  6A08               	clrf	(??_color_read_Blue+1)^0,c
  8462  01CF92  500A               	movf	color_read_Blue@tmp^0,w,c
  8463  01CF94  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  8464  01CF96  6E0A               	movwf	color_read_Blue@tmp^0,c
  8465  01CF98  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  8466  01CF9A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  8467  01CF9C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  8468                           
  8469                           ;color.c: 91:     I2C_2_Master_Stop();
  8470  01CF9E  EC7F  F0E6         	call	_I2C_2_Master_Stop	;wreg free
  8471  01CFA2                     
  8472                           ;color.c: 92:     return tmp;
  8473  01CFA2  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  8474  01CFA6  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  8475  01CFAA  0012               	return		;funcret
  8476  01CFAC                     __end_of_color_read_Blue:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function _I2C_2_Master_Write *****************
  8480 ;; Defined at:
  8481 ;;		line 45 in file "i2c.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  data_byte       1    wreg     unsigned char 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  data_byte       1    1[COMRAM] unsigned char 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;Total ram usage:        1 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 1
  8502 ;; This function calls:
  8503 ;;		_I2C_2_Master_Idle
  8504 ;; This function is called by:
  8505 ;;		_color_writetoaddr
  8506 ;;		_color_read_Clear
  8507 ;;		_color_read_Red
  8508 ;;		_color_read_Green
  8509 ;;		_color_read_Blue
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text34
  8514  01CD14                     __ptext34:
  8515                           	callstack 0
  8516  01CD14                     _I2C_2_Master_Write:
  8517                           	callstack 27
  8518                           
  8519                           ;incstack = 0
  8520                           ;I2C_2_Master_Write@data_byte stored from wreg
  8521  01CD14  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8522  01CD16                     
  8523                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8524  01CD16  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8525  01CD1A                     
  8526                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8527  01CD1A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8528  01CD1E  0012               	return		;funcret
  8529  01CD20                     __end_of_I2C_2_Master_Write:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _I2C_2_Master_Stop *****************
  8533 ;; Defined at:
  8534 ;;		line 39 in file "i2c.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; Hardware stack levels required when called: 1
  8555 ;; This function calls:
  8556 ;;		_I2C_2_Master_Idle
  8557 ;; This function is called by:
  8558 ;;		_color_writetoaddr
  8559 ;;		_color_read_Clear
  8560 ;;		_color_read_Red
  8561 ;;		_color_read_Green
  8562 ;;		_color_read_Blue
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text35
  8567  01CCFE                     __ptext35:
  8568                           	callstack 0
  8569  01CCFE                     _I2C_2_Master_Stop:
  8570                           	callstack 27
  8571  01CCFE                     
  8572                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8573  01CCFE  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8574  01CD02                     
  8575                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8576  01CD02  010E               	movlb	14	; () banked
  8577  01CD04  85DA               	bsf	218,2,b	;volatile
  8578  01CD06                     
  8579                           ; BSR set to: 14
  8580  01CD06  0012               	return		;funcret
  8581  01CD08                     __end_of_I2C_2_Master_Stop:
  8582                           	callstack 0
  8583                           
  8584 ;; *************** function _I2C_2_Master_Start *****************
  8585 ;; Defined at:
  8586 ;;		line 27 in file "i2c.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;		None
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;		None
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0, cstack
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;Total ram usage:        0 bytes
  8605 ;; Hardware stack levels used: 1
  8606 ;; Hardware stack levels required when called: 1
  8607 ;; This function calls:
  8608 ;;		_I2C_2_Master_Idle
  8609 ;; This function is called by:
  8610 ;;		_color_writetoaddr
  8611 ;;		_color_read_Clear
  8612 ;;		_color_read_Red
  8613 ;;		_color_read_Green
  8614 ;;		_color_read_Blue
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text36
  8619  01CCF4                     __ptext36:
  8620                           	callstack 0
  8621  01CCF4                     _I2C_2_Master_Start:
  8622                           	callstack 27
  8623  01CCF4                     
  8624                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8625  01CCF4  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8626  01CCF8                     
  8627                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8628  01CCF8  010E               	movlb	14	; () banked
  8629  01CCFA  81DA               	bsf	218,0,b	;volatile
  8630  01CCFC                     
  8631                           ; BSR set to: 14
  8632  01CCFC  0012               	return		;funcret
  8633  01CCFE                     __end_of_I2C_2_Master_Start:
  8634                           	callstack 0
  8635                           
  8636 ;; *************** function _I2C_2_Master_RepStart *****************
  8637 ;; Defined at:
  8638 ;;		line 33 in file "i2c.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 1
  8659 ;; This function calls:
  8660 ;;		_I2C_2_Master_Idle
  8661 ;; This function is called by:
  8662 ;;		_color_read_Clear
  8663 ;;		_color_read_Red
  8664 ;;		_color_read_Green
  8665 ;;		_color_read_Blue
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text37
  8670  01CCEA                     __ptext37:
  8671                           	callstack 0
  8672  01CCEA                     _I2C_2_Master_RepStart:
  8673                           	callstack 27
  8674  01CCEA                     
  8675                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8676  01CCEA  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8677  01CCEE                     
  8678                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8679  01CCEE  010E               	movlb	14	; () banked
  8680  01CCF0  83DA               	bsf	218,1,b	;volatile
  8681  01CCF2                     
  8682                           ; BSR set to: 14
  8683  01CCF2  0012               	return		;funcret
  8684  01CCF4                     __end_of_I2C_2_Master_RepStart:
  8685                           	callstack 0
  8686                           
  8687 ;; *************** function _I2C_2_Master_Read *****************
  8688 ;; Defined at:
  8689 ;;		line 51 in file "i2c.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  ack             1    wreg     unsigned char 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  ack             1    2[COMRAM] unsigned char 
  8694 ;;  tmp             1    3[COMRAM] unsigned char 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      unsigned char 
  8697 ;; Registers used:
  8698 ;;		wreg, status,2, status,0, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;Total ram usage:        3 bytes
  8709 ;; Hardware stack levels used: 1
  8710 ;; Hardware stack levels required when called: 1
  8711 ;; This function calls:
  8712 ;;		_I2C_2_Master_Idle
  8713 ;; This function is called by:
  8714 ;;		_color_read_Clear
  8715 ;;		_color_read_Red
  8716 ;;		_color_read_Green
  8717 ;;		_color_read_Blue
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text38
  8722  01CE48                     __ptext38:
  8723                           	callstack 0
  8724  01CE48                     _I2C_2_Master_Read:
  8725                           	callstack 27
  8726                           
  8727                           ; BSR set to: 14
  8728                           ;incstack = 0
  8729                           ;I2C_2_Master_Read@ack stored from wreg
  8730  01CE48  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  8731  01CE4A                     
  8732                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8733  01CE4A  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8734  01CE4E                     
  8735                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8736  01CE4E  010E               	movlb	14	; () banked
  8737  01CE50  87DA               	bsf	218,3,b	;volatile
  8738                           
  8739                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8740  01CE52  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8741  01CE56                     
  8742                           ;i2c.c: 57:   tmp = SSP2BUF;
  8743  01CE56  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8744                           
  8745                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8746  01CE5A  ECE1  F0E6         	call	_I2C_2_Master_Idle	;wreg free
  8747  01CE5E                     
  8748                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8749  01CE5E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  8750  01CE60  B4D8               	btfsc	status,2,c
  8751  01CE62  EF35  F0E7         	goto	u2161
  8752  01CE66  EF39  F0E7         	goto	u2160
  8753  01CE6A                     u2161:
  8754  01CE6A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8755  01CE6C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  8756  01CE6E  EF3A  F0E7         	goto	u2178
  8757  01CE72                     u2160:
  8758  01CE72  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8759  01CE74                     u2178:
  8760  01CE74  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  8761  01CE76  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  8762  01CE78  010E               	movlb	14	; () banked
  8763  01CE7A  51DA               	movf	218,w,b	;volatile
  8764  01CE7C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8765  01CE7E  0BDF               	andlw	-33
  8766  01CE80  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8767  01CE82  6FDA               	movwf	218,b	;volatile
  8768  01CE84                     
  8769                           ; BSR set to: 14
  8770                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8771  01CE84  89DA               	bsf	218,4,b	;volatile
  8772  01CE86                     
  8773                           ; BSR set to: 14
  8774                           ;i2c.c: 61:   return tmp;
  8775  01CE86  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8776  01CE88                     
  8777                           ; BSR set to: 14
  8778  01CE88  0012               	return		;funcret
  8779  01CE8A                     __end_of_I2C_2_Master_Read:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _I2C_2_Master_Idle *****************
  8783 ;; Defined at:
  8784 ;;		line 22 in file "i2c.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;Total ram usage:        1 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; This function calls:
  8805 ;;		Nothing
  8806 ;; This function is called by:
  8807 ;;		_I2C_2_Master_Start
  8808 ;;		_I2C_2_Master_RepStart
  8809 ;;		_I2C_2_Master_Stop
  8810 ;;		_I2C_2_Master_Write
  8811 ;;		_I2C_2_Master_Read
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text39
  8816  01CDC2                     __ptext39:
  8817                           	callstack 0
  8818  01CDC2                     _I2C_2_Master_Idle:
  8819                           	callstack 27
  8820  01CDC2                     l160:
  8821  01CDC2  010E               	movlb	14	; () banked
  8822  01CDC4  B5D8               	btfsc	216,2,b	;volatile
  8823  01CDC6  EFE7  F0E6         	goto	u2101
  8824  01CDCA  EFE9  F0E6         	goto	u2100
  8825  01CDCE                     u2101:
  8826  01CDCE  EFE1  F0E6         	goto	l160
  8827  01CDD2                     u2100:
  8828  01CDD2                     
  8829                           ; BSR set to: 14
  8830  01CDD2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8831  01CDD6  0E1F               	movlw	31
  8832  01CDD8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8833  01CDDA  A4D8               	btfss	status,2,c
  8834  01CDDC  EFF2  F0E6         	goto	u2111
  8835  01CDE0  EFF4  F0E6         	goto	u2110
  8836  01CDE4                     u2111:
  8837  01CDE4  EFE1  F0E6         	goto	l160
  8838  01CDE8                     u2110:
  8839  01CDE8                     
  8840                           ; BSR set to: 14
  8841  01CDE8  0012               	return		;funcret
  8842  01CDEA                     __end_of_I2C_2_Master_Idle:
  8843                           	callstack 0
  8844                           
  8845 ;; *************** function _Timer0_init *****************
  8846 ;; Defined at:
  8847 ;;		line 8 in file "timers.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;Total ram usage:        0 bytes
  8866 ;; Hardware stack levels used: 1
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_main
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text40
  8875  01CD20                     __ptext40:
  8876                           	callstack 0
  8877  01CD20                     _Timer0_init:
  8878                           	callstack 30
  8879  01CD20                     
  8880                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  8881  01CD20  50D6               	movf	214,w,c	;volatile
  8882  01CD22  0B1F               	andlw	-225
  8883  01CD24  0940               	iorlw	64
  8884  01CD26  6ED6               	movwf	214,c	;volatile
  8885  01CD28                     
  8886                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  8887  01CD28  88D6               	bsf	214,4,c	;volatile
  8888                           
  8889                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1111;
  8890  01CD2A  0E0F               	movlw	15
  8891  01CD2C  12D6               	iorwf	214,f,c	;volatile
  8892  01CD2E                     
  8893                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  8894  01CD2E  88D5               	bsf	213,4,c	;volatile
  8895                           
  8896                           ;timers.c: 16:     TMR0H=0;
  8897  01CD30  0E00               	movlw	0
  8898  01CD32  6ED4               	movwf	212,c	;volatile
  8899                           
  8900                           ;timers.c: 17:     TMR0L=0;
  8901  01CD34  0E00               	movlw	0
  8902  01CD36  6ED3               	movwf	211,c	;volatile
  8903  01CD38                     
  8904                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  8905  01CD38  8ED5               	bsf	213,7,c	;volatile
  8906  01CD3A  0012               	return		;funcret
  8907  01CD3C                     __end_of_Timer0_init:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function _Interrupts_init *****************
  8911 ;; Defined at:
  8912 ;;		line 9 in file "interrupts.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		None
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8930 ;;Total ram usage:        0 bytes
  8931 ;; Hardware stack levels used: 1
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_main
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text41
  8940  01CD08                     __ptext41:
  8941                           	callstack 0
  8942  01CD08                     _Interrupts_init:
  8943                           	callstack 30
  8944  01CD08                     
  8945                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  8946  01CD08  010E               	movlb	14	; () banked
  8947  01CD0A  812B               	bsf	43,0,b	;volatile
  8948                           
  8949                           ;interrupts.c: 14:     PIE0bits.TMR0IE = 1;
  8950  01CD0C  8B29               	bsf	41,5,b	;volatile
  8951                           
  8952                           ;interrupts.c: 15:     INTCONbits.GIEL = 1;
  8953  01CD0E  8CF2               	bsf	242,6,c	;volatile
  8954                           
  8955                           ;interrupts.c: 16:     INTCONbits.GIE = 1;
  8956  01CD10  8EF2               	bsf	242,7,c	;volatile
  8957  01CD12                     
  8958                           ; BSR set to: 14
  8959  01CD12  0012               	return		;funcret
  8960  01CD14                     __end_of_Interrupts_init:
  8961                           	callstack 0
  8962  0000                     
  8963                           	psect	rparam
  8964  0000                     
  8965                           	psect	idloc
  8966                           
  8967                           ;Config register IDLOC0 @ 0x200000
  8968                           ;	unspecified, using default values
  8969  200000                     	org	2097152
  8970  200000  0FFF               	dw	4095
  8971                           
  8972                           ;Config register IDLOC1 @ 0x200002
  8973                           ;	unspecified, using default values
  8974  200002                     	org	2097154
  8975  200002  0FFF               	dw	4095
  8976                           
  8977                           ;Config register IDLOC2 @ 0x200004
  8978                           ;	unspecified, using default values
  8979  200004                     	org	2097156
  8980  200004  0FFF               	dw	4095
  8981                           
  8982                           ;Config register IDLOC3 @ 0x200006
  8983                           ;	unspecified, using default values
  8984  200006                     	org	2097158
  8985  200006  0FFF               	dw	4095
  8986                           
  8987                           ;Config register IDLOC4 @ 0x200008
  8988                           ;	unspecified, using default values
  8989  200008                     	org	2097160
  8990  200008  0FFF               	dw	4095
  8991                           
  8992                           ;Config register IDLOC5 @ 0x20000A
  8993                           ;	unspecified, using default values
  8994  20000A                     	org	2097162
  8995  20000A  0FFF               	dw	4095
  8996                           
  8997                           ;Config register IDLOC6 @ 0x20000C
  8998                           ;	unspecified, using default values
  8999  20000C                     	org	2097164
  9000  20000C  0FFF               	dw	4095
  9001                           
  9002                           ;Config register IDLOC7 @ 0x20000E
  9003                           ;	unspecified, using default values
  9004  20000E                     	org	2097166
  9005  20000E  0FFF               	dw	4095
  9006                           
  9007                           	psect	config
  9008                           
  9009                           ;Config register CONFIG1L @ 0x300000
  9010                           ;	External Oscillator mode Selection bits
  9011                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9012                           ;	Power-up default value for COSC bits
  9013                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9014  300000                     	org	3145728
  9015  300000  AA                 	db	170
  9016                           
  9017                           ;Config register CONFIG1H @ 0x300001
  9018                           ;	unspecified, using default values
  9019                           ;	Clock Out Enable bit
  9020                           ;	CLKOUTEN = 0x1, unprogrammed default
  9021                           ;	Clock Switch Enable bit
  9022                           ;	CSWEN = 0x1, unprogrammed default
  9023                           ;	Fail-Safe Clock Monitor Enable bit
  9024                           ;	FCMEN = 0x1, unprogrammed default
  9025  300001                     	org	3145729
  9026  300001  FF                 	db	255
  9027                           
  9028                           ;Config register CONFIG2L @ 0x300002
  9029                           ;	unspecified, using default values
  9030                           ;	Master Clear Enable bit
  9031                           ;	MCLRE = 0x1, unprogrammed default
  9032                           ;	Power-up Timer Enable bit
  9033                           ;	PWRTE = 0x1, unprogrammed default
  9034                           ;	Low-power BOR enable bit
  9035                           ;	LPBOREN = 0x1, unprogrammed default
  9036                           ;	Brown-out Reset Enable bits
  9037                           ;	BOREN = 0x3, unprogrammed default
  9038  300002                     	org	3145730
  9039  300002  FF                 	db	255
  9040                           
  9041                           ;Config register CONFIG2H @ 0x300003
  9042                           ;	unspecified, using default values
  9043                           ;	Brown Out Reset Voltage selection bits
  9044                           ;	BORV = 0x3, unprogrammed default
  9045                           ;	ZCD Disable bit
  9046                           ;	ZCD = 0x1, unprogrammed default
  9047                           ;	PPSLOCK bit One-Way Set Enable bit
  9048                           ;	PPS1WAY = 0x1, unprogrammed default
  9049                           ;	Stack Full/Underflow Reset Enable bit
  9050                           ;	STVREN = 0x1, unprogrammed default
  9051                           ;	Debugger Enable bit
  9052                           ;	DEBUG = 0x1, unprogrammed default
  9053                           ;	Extended Instruction Set Enable bit
  9054                           ;	XINST = 0x1, unprogrammed default
  9055  300003                     	org	3145731
  9056  300003  FF                 	db	255
  9057                           
  9058                           ;Config register CONFIG3L @ 0x300004
  9059                           ;	WDT Period Select bits
  9060                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9061                           ;	WDT operating mode
  9062                           ;	WDTE = OFF, WDT Disabled
  9063  300004                     	org	3145732
  9064  300004  9F                 	db	159
  9065                           
  9066                           ;Config register CONFIG3H @ 0x300005
  9067                           ;	unspecified, using default values
  9068                           ;	WDT Window Select bits
  9069                           ;	WDTCWS = 0x7, unprogrammed default
  9070                           ;	WDT input clock selector
  9071                           ;	WDTCCS = 0x7, unprogrammed default
  9072  300005                     	org	3145733
  9073  300005  FF                 	db	255
  9074                           
  9075                           ;Config register CONFIG4L @ 0x300006
  9076                           ;	unspecified, using default values
  9077                           ;	Write Protection Block 0
  9078                           ;	WRT0 = 0x1, unprogrammed default
  9079                           ;	Write Protection Block 1
  9080                           ;	WRT1 = 0x1, unprogrammed default
  9081                           ;	Write Protection Block 2
  9082                           ;	WRT2 = 0x1, unprogrammed default
  9083                           ;	Write Protection Block 3
  9084                           ;	WRT3 = 0x1, unprogrammed default
  9085                           ;	Write Protection Block 3
  9086                           ;	WRT4 = 0x1, unprogrammed default
  9087                           ;	Write Protection Block 3
  9088                           ;	WRT5 = 0x1, unprogrammed default
  9089                           ;	Write Protection Block 3
  9090                           ;	WRT6 = 0x1, unprogrammed default
  9091                           ;	Write Protection Block 3
  9092                           ;	WRT7 = 0x1, unprogrammed default
  9093  300006                     	org	3145734
  9094  300006  FF                 	db	255
  9095                           
  9096                           ;Config register CONFIG4H @ 0x300007
  9097                           ;	unspecified, using default values
  9098                           ;	Configuration Register Write Protection bit
  9099                           ;	WRTC = 0x1, unprogrammed default
  9100                           ;	Boot Block Write Protection bit
  9101                           ;	WRTB = 0x1, unprogrammed default
  9102                           ;	Data EEPROM Write Protection bit
  9103                           ;	WRTD = 0x1, unprogrammed default
  9104                           ;	Scanner Enable bit
  9105                           ;	SCANE = 0x1, unprogrammed default
  9106                           ;	Low Voltage Programming Enable bit
  9107                           ;	LVP = 0x1, unprogrammed default
  9108  300007                     	org	3145735
  9109  300007  FF                 	db	255
  9110                           
  9111                           ;Config register CONFIG5L @ 0x300008
  9112                           ;	unspecified, using default values
  9113                           ;	UserNVM Program Memory Code Protection bit
  9114                           ;	CP = 0x1, unprogrammed default
  9115                           ;	DataNVM Memory Code Protection bit
  9116                           ;	CPD = 0x1, unprogrammed default
  9117  300008                     	org	3145736
  9118  300008  FF                 	db	255
  9119                           
  9120                           ;Config register CONFIG5H @ 0x300009
  9121                           ;	unspecified, using default values
  9122  300009                     	org	3145737
  9123  300009  FF                 	db	255
  9124                           
  9125                           ;Config register CONFIG6L @ 0x30000A
  9126                           ;	unspecified, using default values
  9127                           ;	Table Read Protection Block 0
  9128                           ;	EBTR0 = 0x1, unprogrammed default
  9129                           ;	Table Read Protection Block 1
  9130                           ;	EBTR1 = 0x1, unprogrammed default
  9131                           ;	Table Read Protection Block 2
  9132                           ;	EBTR2 = 0x1, unprogrammed default
  9133                           ;	Table Read Protection Block 3
  9134                           ;	EBTR3 = 0x1, unprogrammed default
  9135                           ;	Table Read Protection Block 4
  9136                           ;	EBTR4 = 0x1, unprogrammed default
  9137                           ;	Table Read Protection Block 5
  9138                           ;	EBTR5 = 0x1, unprogrammed default
  9139                           ;	Table Read Protection Block 6
  9140                           ;	EBTR6 = 0x1, unprogrammed default
  9141                           ;	Table Read Protection Block 7
  9142                           ;	EBTR7 = 0x1, unprogrammed default
  9143  30000A                     	org	3145738
  9144  30000A  FF                 	db	255
  9145                           
  9146                           ;Config register CONFIG6H @ 0x30000B
  9147                           ;	unspecified, using default values
  9148                           ;	Boot Block Table Read Protection bit
  9149                           ;	EBTRB = 0x1, unprogrammed default
  9150  30000B                     	org	3145739
  9151  30000B  FF                 	db	255
  9152                           tosu	equ	0xFFF
  9153                           tosh	equ	0xFFE
  9154                           tosl	equ	0xFFD
  9155                           stkptr	equ	0xFFC
  9156                           pclatu	equ	0xFFB
  9157                           pclath	equ	0xFFA
  9158                           pcl	equ	0xFF9
  9159                           tblptru	equ	0xFF8
  9160                           tblptrh	equ	0xFF7
  9161                           tblptrl	equ	0xFF6
  9162                           tablat	equ	0xFF5
  9163                           prodh	equ	0xFF4
  9164                           prodl	equ	0xFF3
  9165                           indf0	equ	0xFEF
  9166                           postinc0	equ	0xFEE
  9167                           postdec0	equ	0xFED
  9168                           preinc0	equ	0xFEC
  9169                           plusw0	equ	0xFEB
  9170                           fsr0h	equ	0xFEA
  9171                           fsr0l	equ	0xFE9
  9172                           wreg	equ	0xFE8
  9173                           indf1	equ	0xFE7
  9174                           postinc1	equ	0xFE6
  9175                           postdec1	equ	0xFE5
  9176                           preinc1	equ	0xFE4
  9177                           plusw1	equ	0xFE3
  9178                           fsr1h	equ	0xFE2
  9179                           fsr1l	equ	0xFE1
  9180                           bsr	equ	0xFE0
  9181                           indf2	equ	0xFDF
  9182                           postinc2	equ	0xFDE
  9183                           postdec2	equ	0xFDD
  9184                           preinc2	equ	0xFDC
  9185                           plusw2	equ	0xFDB
  9186                           fsr2h	equ	0xFDA
  9187                           fsr2l	equ	0xFD9
  9188                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         208
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     86     113
    BANK1           256      0     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseTurnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S73DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S73DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_determine_color_new
    _turnRight180->_reverse
    _turnRight180->_stop
    _turnRight135->_reverse
    _turnRight135->_stop
    _turnLeft135->_reverse
    _turnLeft135->_stop
    _reverseTurnRight90->_turnRight90
    _turnRight90->_reverse
    _turnRight90->_stop
    _reverseTurnLeft90->_turnLeft90
    _turnLeft90->_reverse
    _turnLeft90->_stop
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_determine_color_new

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0  137455
                                             92 COMRAM     2     2      0
                                             34 BANK0     52    52      0
                    _Interrupts_init
                        _Timer0_init
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                  _reverseTurnLeft90
                 _reverseTurnRight90
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight180                                         8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight135                                         8     4      4   12765
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft135                                          8     4      4   12765
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnRight90                                   6     2      4   22287
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight90                                          8     4      4   13069
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnLeft90                                    6     2      4   22135
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _turnLeft90                                           8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    6085
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              4     0      4    3457
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                              4     0      4    3001
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2565
                                             13 COMRAM    11     9      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   15944
                                             90 COMRAM     2     0      2
                                              0 BANK0     34    34      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             12 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1219
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     425
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2432
                                             64 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _isbtw
       ___flge
   _forward
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _reverseTurnLeft90
     _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft90
       _reverse
         _setMotorPWM
       _setMotorPWM
       _stop
   _reverseTurnRight90
     _setMotorPWM
     _stop
     _turnRight90
       _reverse
       _setMotorPWM
       _stop
   _stop
   _turnLeft135
     _reverse
     _setMotorPWM
     _stop
   _turnLeft90
   _turnRight135
     _reverse
     _setMotorPWM
     _stop
   _turnRight180
     _reverse
     _setMotorPWM
     _stop
   _turnRight90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B4       7       70.3%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      71       5       70.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     184       8        0.0%
DATA                 0      0     184       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 21:50:48 2021

                _color_read_Red CFFC                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue CF5C                              l62 CD5A  
                            l71 CFFA                              l81 D28E                              l65 D09A  
                            l74 CFAA                              l59 CE46                              l68 D04A  
                            l85 CF5A                              l77 D1A0                              l88 CF10  
           ___wmul@multiplicand 0003                _color_read_Clear D04C                _color_read_Green CFAC  
             ??_Interrupts_init 0001                             l103 FFFE                             l222 E0C8  
                           l215 CECA                             l160 CDC2                             l232 D328  
                           l240 DD40                             l250 D984                             l163 CDE8  
                           l235 D13E                             l500 CD12                             l172 CD06  
                           l260 DC00                             l157 CE12                             l245 D846  
                           l166 CCFC                             l511 CD3A                             l175 CD1E  
                           l263 D0EC                             l255 DAC2                             l169 CCF2  
                           l178 CE88                             l266 D500                             l370 EE6C  
                           l435 CD7A                             l363 EE1A                             l372 EEA0  
                           l364 EE1C                             l517 CDC0                             l269 D414  
                           l374 EEAE                             l366 EE2A                             l368 EE5E  
                           l814 D70A                             l782 D5BE                             l787 D604  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
                  ___fltol@exp1 005A                            l1101 E2C2                            l1110 E308  
                          l1015 D214                            l1112 E380                            l1104 E286  
                          l1008 D20C                            l1113 E36E                            l1131 E528  
                          l1140 E796                            l1045 EA7C                            l1141 E784  
                          l1062 EB96                            l1054 ED4C                            l1046 EA6A  
                          l1071 EC66                            l1047 EA30                            l1135 E88C  
                          l1072 EC54                            l3000 E9B6                            l3010 E9CA  
                          l3002 E9BA                            l1138 E71E                            l3100 EC4C  
                          l3020 EA28                            l3004 E9BE                            l3012 E9CE  
                          l1148 E84E                            l1172 DD98                            l3110 ECCA  
                          l3030 EA5E                            l3022 EA3E                            l3014 E9D2  
                          l3006 E9C2                            l1175 DEF4                            l3120 ED10  
                          l3104 EC76                            l3112 ECCC                            l3040 EAAE  
                          l3032 EA68                            l3024 EA4A                            l3016 E9FC  
                          l3008 E9C6                            l3200 E23A                            l4000 EE5C  
                          l3130 ED3A                            l3122 ED1E                            l3114 ECDC  
                          l3106 EC82                            l3050 EAEA                            l3042 EABE  
                          l3034 EA8A                            l3026 EA4E                            l3018 EA18  
                          l3210 E284                            l3202 E24A                            l1186 DE8C  
                          l4010 EEBC                            l4002 EE7A                            l1099 E462  
                          l1179 DE30                            l3132 ED3C                            l3124 ED24  
                          l3116 ECEC                            l3108 EC90                            l3060 EB30  
                          l3052 EAF8                            l3044 EACC                            l3036 EA9A  
                          l3028 EA5C                            l3220 E2D2                            l3212 E290  
                          l3204 E252                            l3140 E0E4                            l3300 E4F2  
                          l4100 F256                            l4020 EF10                            l4012 EEBE  
                          l4004 EE7C                            l3126 ED26                            l3118 ED0C  
                          l3070 EBAC                            l3062 EB64                            l3054 EAFA  
                          l3046 EADA                            l3222 E2E8                            l3230 E318  
                          l3214 E2AE                            l3206 E262                            l3150 E118  
                          l3142 E0E6                            l3310 E548                            l3302 E502  
                          l4102 F26A                            l4030 EF76                            l4022 EF24  
                          l4006 EE88                            l4014 EEC8                            l3128 ED2C  
                          l3080 EBE8                            l3072 EBBC                            l3064 EB66  
                          l3056 EB04                            l3048 EAE6                            l3232 E326  
                          l3224 E2EE                            l3216 E2B0                            l3208 E276  
                          l3160 E14A                            l3144 E0F6                            l3152 E120  
                          l3136 E0CA                            l3400 E87C                            l3320 E588  
                          l3304 E512                            l4104 F282                            l4040 EFC6  
                          l4032 EF8A                            l4024 EF38                            l4016 EEDC  
                          l4008 EE9E                            l3090 EC14                            l3082 EBEA  
                          l3066 EB76                            l3058 EB0A                            l3242 E390  
                          l3250 E3D8                            l3234 E32A                            l3226 E2F8  
                          l3218 E2C0                            l3170 E17E                            l3162 E14C  
                          l3154 E130                            l3146 E106                            l3138 E0D6  
                          l3330 E5D2                            l3322 E594                            l3314 E55C  
                          l3306 E518                            l3410 D630                            l4106 F298  
                          l4042 EFDE                            l4050 F036                            l4034 EFA0  
                          l4026 EF4C                            l4018 EF04                            l3500 CE32  
                          l3084 EBF8                            l3076 EBD0                            l3092 EC16  
                          l3068 EB86                            l3260 E442                            l3252 E3F2  
                          l3244 E39C                            l3236 E338                            l3228 E306  
                          l3180 E1C4                            l3164 E15C                            l3172 E186  
                          l3156 E136                            l3148 E116                            l3340 E624  
                          l3332 E5DE                            l3324 E5AC                            l3316 E568  
                          l3308 E538                            l3420 D67E                            l3412 D65A  
                          l3404 D606                            l2700 D1FE                            l4060 F09C  
                          l4052 F048                            l4044 EFF6                            l4036 EFB4  
                          l4028 EF60                            l3502 CE3C                            l3086 EC00  
                          l3078 EBDA                            l3094 EC24                            l3262 E450  
                          l3254 E408                            l3246 E3AA                            l3238 E366  
                          l3190 E1EC                            l3182 E1C8                            l3174 E196  
                          l3166 E16C                            l3158 E13C                            l3350 E6A2  
                          l3342 E634                            l3334 E5EE                            l3326 E5B8  
                          l3318 E572                            l3430 D6AA                            l3414 D65C  
                          l3406 D61C                            l3510 F2B4                            l2702 D200  
                          l2710 DEF6                            l4070 F10C                            l4062 F0B4  
                          l4054 F05C                            l4046 F00E                            l4038 EFC2  
                          l3096 EC28                            l3088 EC04                            l3264 E456  
                          l3256 E422                            l3248 E3D4                            l3176 E1AC  
                          l3168 E17C                            l3360 E71C                            l3352 E6D8  
                          l3344 E650                            l3336 E5FA                            l3328 E5C4  
                          l3280 E480                            l3440 D6DA                            l3416 D66C  
                          l2800 D5FC                            l3600 FE0C                            l3520 F5E0  
                          l3512 F2BE                            l2704 D206                            l2720 DFF6  
                          l2712 DF12                            l3504 D140                            l4080 F17A  
                          l4072 F120                            l4064 F0CA                            l4056 F074  
                          l4048 F016                            l2706 CDC2                            l2730 CD1A  
                          l3506 CF12                            l2810 CDFA                            l3098 EC36  
                          l3266 E458                            l3258 E43E                            l3194 E200  
                          l3178 E1BC                            l3186 E1DC                            l3370 E77C  
                          l3362 E72E                            l3354 E6E6                            l3346 E65C  
                          l3338 E60A                            l3290 E4C6                            l3282 E490  
                          l3274 E464                            l3442 D6EA                            l3426 D696  
                          l3418 D670                            l3450 DD54                            l2802 D602  
                          l3610 FEFE                            l3602 FE52                            l3530 F7E4  
                          l3522 F6CC                            l3514 F386                            l2722 E060  
                          l2714 DF74                            l4090 F1E6                            l4082 F190  
                          l4074 F138                            l4066 F0DE                            l4058 F088  
                          l2708 CDD2                            l2740 CE4A                            l2724 CCF4  
                          l2732 CCFE                            l3508 CECC                            l2812 CDFC  
                          l3196 E21A                            l3188 E1EC                            l3380 E7EA  
                          l3364 E73C                            l3356 E704                            l3348 E678  
                          l3292 E4CC                            l3284 E4A0                            l3276 E470  
                          l3444 D6FA                            l3436 D6BE                            l3428 D6A0  
                          l3460 DDD2                            l3452 DD62                            l3620 FFC2  
                          l3612 FF44                            l3604 FE98                            l3540 F830  
                          l3532 F7F4                            l3524 F724                            l3516 F410  
                          l2716 DFBA                            l2820 D04C                            l2900 D874  
                          l3700 D46E                            l4092 F1FE                            l4084 F1A4  
                          l4076 F14E                            l4068 F0F6                            l2750 CE86  
                          l2742 CE4E                            l2726 CCF8                            l2734 CD02  
                          l2814 CDFE                            l2806 CDEA                            l3198 E22A  
                          l3390 E852                            l3374 E7A6                            l3382 E7EE  
                          l3366 E740                            l3358 E70E                            l3294 E4D2  
                          l3286 E4B0                            l3278 E47E                            l3438 D6CA  
                          l3470 DE26                            l3462 DDDA                            l3454 DDA8  
                          l3622 FFD8                            l3614 FF8A                            l3606 FEB0  
                          l3542 F876                            l3550 F922                            l3534 F802  
                          l3526 F77C                            l3518 F4F4                            l2718 DFDA  
                          l2822 D092                            l2910 D8EA                            l2902 D8A0  
                          l3710 D4D4                            l3702 D47A                            l3630 DAC4  
                          l4094 F214                            l4086 F1BC                            l4078 F162  
                          l2744 CE56                            l2736 CCEA                            l2728 CD16  
                          l2840 CFA2                            l2832 CFAC                            l2816 CE00  
                          l2808 CDF4                            l3392 E862                            l3384 E808  
                          l3376 E7B2                            l3368 E74E                            l3296 E4E0  
                          l3288 E4B6                            l3480 DE9C                            l3472 DE62  
                          l3464 DDE6                            l3456 DDBE                            l3448 DD44  
                          l3624 FFEE                            l3616 FFA2                            l3608 FEB8  
                          l3552 F968                            l3560 FA14                            l3544 F8BC  
                          l3536 F812                            l3528 F7D4                            l2680 CDB8  
                          l3800 CE9A                            l2760 D2B6                            l2920 D912  
                          l2904 D8B4                            l3704 D486                            l3720 D778  
                          l3712 D70C                            l3640 DB46                            l3632 DAD8  
                          l4096 F228                            l4088 F1D2                            l2746 CE5E  
                          l2738 CCEE                            l2834 CFF2                            l2826 CFFC  
                          l2818 CD3E                            l3394 E870                            l3386 E81C  
                          l3378 E7C0                            l3298 E4E2                            l3490 DEE4  
                          l3482 DEA0                            l3474 DE6E                            l3466 DE18  
                          l3626 FFF6                            l3618 FFAA                            l3570 FB36  
                          l3562 FA5A                            l3554 F9AE                            l3546 F902  
                          l3538 F820                            l2690 D1C4                            l3802 CEB2  
                          l3810 CD66                            l2762 D2CE                            l2770 D2F8  
                          l2754 D290                            l2930 D958                            l2922 D91E  
                          l2906 D8CA                            l3706 D492                            l3722 D78E  
                          l3714 D720                            l3650 DB6E                            l3642 DB56  
                          l3634 DAF0                            l4098 F240                            l2748 CE84  
                          l2828 D042                            l2940 E8AA                            l3396 E872  
                          l3388 E836                            l3484 DEC4                            l3476 DE7C  
                          l3468 DE1A                            l2844 D216                            l3580 FC28  
                          l3572 FB7C                            l3564 FAA0                            l3556 F9F4  
                          l3548 F91A                            l2692 D1CC                            l2684 D1A2  
                          l3804 CEC6                            l3820 CD78                            l3812 CD68  
                          l2780 D126                            l2772 D310                            l2764 D2D8  
                          l2756 D294                            l2860 DC16                            l2932 D96C  
                          l2924 D926                            l2916 D8F2                            l2908 D8DA  
                          l3708 D4BE                            l3740 D7EA                            l3732 D7B6  
                          l3724 D79E                            l3716 D738                            l3660 DBA6  
                          l3652 DB82                            l3644 DB66                            l3636 DB1C  
                          l3830 CD08                            l3822 CD20                            l2838 CF5C  
                          l3494 CE14                            l2942 E8BA                            l2950 E8E4  
                          l2934 E88E                            l3398 E878                            l3486 DED4  
                          l3478 DE9A                            l2790 D56E                            l2846 D248  
                          l2854 D286                            l3590 FD1A                            l3582 FC6E  
                          l3574 FBC2                            l3566 FAE6                            l3558 FA0C  
                          l2694 D1DA                            l2686 D1AA                            l2678 CD9C  
                          l3806 CEC8                            l3814 CD6A                            l2782 D132  
                          l2774 D0EE                            l2766 D2E4                            l2758 D2AC  
                          l2870 DC94                            l2862 DC2E                            l3670 D33E  
                          l2926 D92A                            l2918 D906                            l3742 D7EE  
                          l3734 D7CA                            l3726 D7AE                            l3718 D764  
                          l3750 D986                            l3662 DBBC                            l3654 DB8E  
                          l3638 DB30                            l3824 CD28                            l3496 CE18  
                          l2960 E914                            l2952 E8F4                            l2944 E8CA  
                          l2936 E89A                            l3488 DEE2                            l2792 D57E  
                          l2784 D502                            l2848 D27A                            l3592 FD60  
                          l3584 FCB4                            l3576 FBDA                            l3568 FAF0  
                          l2696 D1E0                            l2688 D1BC                            l3816 CD74  
                          l3808 CD5C                            l2776 D10E                            l2768 D2F0  
                          l2880 DCC0                            l2872 DCA4                            l2864 DC5A  
                          l3680 D38E                            l3672 D356                            l2928 D940  
                          l3744 D804                            l3736 D7D6                            l3760 DA08  
                          l3752 D99A                            l3664 DBD4                            l3656 DB9A  
                          l3920 ED66                            l3912 ED4E                            l3826 CD2E  
                          l3498 CE22                            l2970 E954                            l2962 E922  
                          l2954 E8FA                            l2946 E8DA                            l2938 E8A8  
                          l2794 D58C                            l2786 D530                            l3594 FDA6  
                          l3586 FCCC                            l3578 FBE2                            l2698 D1F6  
                          l3818 CD76                            l2778 D11A                            l2890 DCFA  
                          l2882 DCCC                            l2866 DC6E                            l2858 DC02  
                          l3682 D39A                            l3674 D366                            l3690 D416  
                          l3746 D81A                            l3738 D7E2                            l3770 DA30  
                          l3762 DA18                            l3754 D9B2                            l3666 DBE8  
                          l3658 DBA2                            l3930 ED88                            l3922 ED7C  
                          l3914 ED5A                            l3828 CD38                            l2980 E98E  
                          l2972 E956                            l2964 E924                            l2956 E90C  
                          l2948 E8DC                            l2796 D59E                            l2788 D540  
                          l3596 FDBE                            l3588 FCD4                            l2892 DD14  
                          l2884 DCD8                            l2868 DC84                            l3684 D3A6  
                          l3676 D376                            l3668 D32A                            l3692 D42A  
                          l3748 D82E                            l3780 DA68                            l3772 DA44  
                          l3764 DA28                            l3756 D9DE                            l3940 ED9C  
                          l3932 ED8A                            l3924 ED80                            l3916 ED5E  
                          l2990 E9A2                            l2982 E992                            l2966 E934  
                          l2974 E95E                            l2958 E90E                            l2798 D5AC  
                          l3598 FDC6                            l3790 D0BC                            l2894 DD28  
                          l2886 DCE0                            l2878 DCAC                            l3686 D3D2  
                          l3678 D382                            l3694 D442                            l3782 DA7E  
                          l3774 DA50                            l3758 D9F2                            l3950 EDB8  
                          l3942 EDA4                            l3934 ED8A                            l3926 ED82  
                          l3918 ED62                            l2992 E9A6                            l2984 E996  
                          l2976 E96E                            l2968 E944                            l3792 D0C8  
                          l2888 DCE4                            l3688 D3E8                            l2896 D848  
                          l3696 D452                            l3784 DA96                            l3776 DA5C  
                          l3960 EDDC                            l3952 EDC0                            l3944 EDA8  
                          l3936 ED90                            l3928 ED86                            l2994 E9AA  
                          l2986 E99A                            l2978 E980                            l3794 D0D4  
                          l2898 D85C                            l3698 D462                            l3786 DAAA  
                          l3778 DA64                            l3970 EDF8                            l3962 EDE4  
                          l3954 EDC8                            l3946 EDB0                            l3938 ED94  
                          l2996 E9AE                            l2988 E99E                            l3796 D0E0  
                          l3788 D09C                            l3980 EE02                            l3972 EDFA  
                          l3964 EDEC                            l3956 EDCC                            l3948 EDB4  
                          l2998 E9B2                            l3798 CE8A                            l3990 EE0C  
                          l3982 EE04                            l3974 EDFC                            l3966 EDF4  
                          l3958 EDD4                            l3992 EE0E                            l3984 EE06  
                          l3976 EDFE                            l3968 EDF6                            l3994 EE38  
                          l3986 EE08                            l3978 EE00                            l3996 EE3A  
                          l3988 EE0A                            l3998 EE46                            u2100 CDD2  
                          u2101 CDCE                            u2110 CDE8                            u2111 CDE4  
                          u3000 E548                            u2120 DF12                            u2200 D310  
                          u3001 E544                            u2121 DF0E                            u2201 D30C  
                          u3010 E6C2                            u2130 DFF6                            u2210 D328  
                          u2131 DFF2                            u2211 D324                            u3100 E836  
                          u3020 E71C                            u2220 D530                            u2300 D940  
                          u3101 E832                            u3021 E718                            u2221 D52C  
                          u2301 D93C                            u2310 E8A8                            u3110 E870  
                          u3030 E73C                            u2230 D56E                            u2070 D1BC  
                          u2311 E8A4                            u3111 E86C                            u3031 E738  
                          u3015 E6B8                            u2231 D56A                            u2071 D1B8  
                          u2160 CE72                            u2400 E9FC                            u2320 E8BA  
                          u3040 E74E                            u3120 D61C                            u3200 DD62  
                          u2240 D58C                            u2080 D1DA                            u2144 E050  
                          u4000 F14E                    _BAUD4CONbits 000EE9                            u2161 CE6A  
                          u2401 E9F8                            u2321 E8B6                            u3041 E74A  
                          u3121 D618                            u3201 DD5E                            u2241 D588  
                          u2081 D1D6                            u2145 E04C                            u4001 F14A  
                          _LATE 000F7D                            u2410 EA14                            u2330 E8CA  
                          u3050 E77C                            u3130 D650                            u3210 DDBE  
                          u2250 D5AC                            u2090 D1F6                            u2154 E0BA  
                          u4010 F190                            u2411 EA0E                            u2331 E8C6  
                          u3051 E778                            u3211 DDBA                            u2251 D5A8  
                          u2091 D1F2                            u2155 E0B6                            u4011 F18C  
                          _LATG 000F7F                            u2500 EAF8                            u2420 EA16  
                          u2340 E90C                            u3060 E792                            u3140 D67E  
                          u3220 DE14                            u2260 D5FC                            u3300 F802  
                          u2180 D2AC                            u4020 F1D2                            u2501 EAF4  
                          u2341 E908                            u3061 E78E                            u3141 D67A  
                          u3221 DE10                            u2261 D5F8                            u3301 F7FE  
                          u2181 D2A8                            u4021 F1CE                            u2510 EB30  
                          u2430 EA3E                            u2350 E922                            u3070 E7A6  
                          u3150 D692                            u3230 DE5E                            u2270 D248  
                          u3310 F820                            u2190 D2CE                            u4030 F214  
                          u2511 EB2C                            u2431 EA3A                            u2351 E91E  
                          u3071 E7A2                            u3151 D68E                            u3135 D646  
                          u3231 DE5A                            u2271 D244                            u3311 F81C  
                          u2191 D2CA                            u4031 F210                            u2600 EC4C  
                          u2520 EB76                            u2440 EA5C                            u2360 E934  
                          u3080 E7C0                            u3160 D6BA                            u3240 DE7C  
                          u2280 D27A                            u3400 FA5A                            u3320 F876  
                          u4040 F256                            u2601 EC48                            u2521 EB72  
                          u2441 EA58                            u2361 E930                            u3081 E7BC  
                          u3161 D6B6                            u3241 DE78                            u2281 D276  
                          u3401 FA56                            u3321 F872                            u4041 F252  
                          u2178 CE74                            u2610 EC62                            u2530 EBAC  
                          u2450 EA7C                            u2370 E944                            u3090 E808  
                          u3170 D6DA                            u3250 DE8C                            u3410 FAA0  
                          u3330 F8BC                            u2290 DCFA                            u4050 F298  
                          _T2PR 000FBC                            u2611 EC5E                            u2531 EBA8  
                          u2451 EA78                            u2371 E940                            u3091 E804  
                          u3171 D6D6                            u3251 DE88                            u3411 FA9C  
                          u3331 F8B8                            u2291 DCF6                            u4051 F294  
                          u2620 EC76                            u2540 EBBC                            u2460 EA8A  
                          u2380 E980                            u2700 E0E4                            u3180 D6EA  
                          u3260 DE9A                            u3500 FCCC                            u3420 FAE6  
                          u3340 F902                            u2621 EC72                            u2541 EBB8  
                          u2461 EA86                            u2381 E97C                            u2701 E0E0  
                          u3181 D6E6                            u3261 DE96                            u3501 FCC8  
                          u3421 FAE2                            u3341 F8FE                            u4117 ED70  
                          u2630 EC90                            u2550 EBE8                            u2470 EA9A  
                          u2390 E98E                            u2710 E0F6                            u3270 DED4  
                          u3190 DD54                            u3510 FD1A                            u3430 FB36  
                          u3350 F91A                            u2631 EC8C                            u2551 EBE4  
                          u2471 EA96                            u2391 E98A                            u2711 E0F2  
                          u3271 DED0                            u3191 DD50                            u3511 FD16  
                          u3431 FB32                            u3351 F916                            u4207 F1F0  
                          u4127 EE50                            u2640 ECCA                            u2560 EBF8  
                          u2480 EACC                            u2800 E2AE                            u2720 E106  
                          u3280 DEE2                            u3600 FF44                            u3520 FD60  
                          u3440 FB7C                            u3360 F968                            u2641 ECC6  
                          u2561 EBF4                            u2481 EAC8                            u2801 E2AA  
                          u2721 E102                            u3281 DEDE                            u3601 FF40  
                          u3521 FD5C                            u3441 FB78                            u3361 F964  
                          u4217 F232                            u4137 EE92                            u2650 ECDC  
                          u2570 EC14                            u2490 EADA                            u2810 E2D2  
                          u2730 E14A                            u3610 FF8A                            u3530 FDA6  
                          u3450 FBC2                            u3370 F9AE                            u3290 F7E4  
                          u2651 ECD8                            u2571 EC10                            u2491 EAD6  
                          u2811 E2CE                            u2731 E146                            u3611 FF86  
                          u3531 FDA2                            u3451 FBBE                            u3371 F9AA  
                          u3291 F7E0                            u4307 D9D0                            u4227 F274  
                          u4147 F066                            u2660 ECEC                            u2580 EC24  
                          u2900 E3F2                            u2820 E2E8                            u2740 E15C  
                          u3620 FFA2                            u3540 FDBE                            u3460 FBDA  
                          u3380 F9F4                            u2661 ECE8                            u2581 EC20  
                          u2901 E3EE                            u2821 E2E4                            u2741 E158  
                          u3621 FF9E                            u3541 FDBA                            u3461 FBD6  
                          u3381 F9F0                            u4317 D9FC                            u4237 DAE2  
                          u4157 F0A6                            u2670 ED0C                            u2590 EC36  
                          u2910 E422                            u2830 E306                            u2750 E16C  
                          u3630 FFC2                            u3550 FE0C                            u3470 FC28  
                          u3390 FA0C                            u2671 ED08                            u2591 EC32  
                          u2911 E41E                            u2831 E302                            u2751 E168  
                          u3631 FFBE                            u3551 FE08                            u3471 FC24  
                          u3391 FA08                            u4407 D838                            u4327 DA5E  
                          u4247 DB0E                            u4167 F0E8                            u2680 ED1E  
                          u2920 E450                            u2840 E326                            u2760 E1AC  
                          u3640 FFD8                            u3560 FE52                            u3480 FC6E  
                          u2681 ED1A                            u2921 E44C                            u2841 E322  
                          u2761 E1A8                            u3641 FFD4                            u3561 FE4E  
                          u3481 FC6A                            u4417 D434                            u4337 DA88  
                          u4257 DB3A                            u4177 F12A                            u2690 ED3A  
                          u2850 E338                            u2770 E1EC                            u2930 E47E  
                          u3650 FFEE                            u3570 FE98                            u3490 FCB4  
                          u2691 ED36                            u2851 E334                            u2771 E1E8  
                          u2931 E47A                            u3651 FFEA                            u3571 FE94  
                          u3491 FCB0                            u4507 D976                            u4427 D49C  
                          u4347 DAB4                            u4267 DB9C                            u4187 F16C  
                          u2860 E366                            u2780 E262                            u2940 E490  
                          u3580 FEB0                            u3660 DBBC                            u3900 EF4C  
                          u3820 EE2A                            u2861 E362                            u2781 E25E  
                          u2941 E48C                            u3581 FEAC                            u4517 D348  
                          u4437 D4C8                            u4357 D72A                            u4277 DBC6  
                          u3661 DBB8                            u4197 F1AE                            u3901 EF48  
                          u3821 EE26                            u2870 E37C                            u2790 E284  
                          u2950 E4A0                            u3590 FEFE                            u3670 D804  
                          u3910 EF76                            u3830 EE38                            u2871 E378  
                          u2791 E280                            u2951 E49C                            u3591 FEFA  
                          u4607 DD32                            u4527 D3B0                            u4447 D4F2  
                          u3671 D800                            u4367 D756                            u4287 DBF2  
                          u3911 EF72                            u3831 EE34                            u2880 E390  
                          u2960 E4E0                            u3680 DA7E                            u3920 EFA0  
                          u3840 EE6C                            u2881 E38C                            u2961 E4DC  
                          u4617 D2F2                            u4537 D3DC                            u4457 D866  
                          u4377 D782                            u3681 DA7A                            u4297 D9A4  
                          u3921 EF9C                            u3841 EE68                            u2890 E3AA  
                          u2970 E4F2                            u3930 EFDE                            u3850 EE7A  
                          u4627 CE28                            u2891 E3A6                            u2971 E4EE  
                          u4547 D406                            u4467 D892                            u4387 D7E4  
                          u3931 EFDA                            u3851 EE76                            u2980 E502  
                          u3940 EFF6                            u3860 EEAE                            u2981 E4FE  
                          u4557 DC20                            u4477 D8BE                            u4397 D80E  
                          u3941 EFF2                            u3861 EEAA                            u2990 E538  
                          u3950 F00E                            u3870 EEBC                            u2991 E534  
                          u4567 DC4C                            u4487 D920                            u3951 F00A  
                          u3871 EEB8                            u3960 F048                            u3880 EEDC  
                          u4577 DC78                            u4497 D94A                            u3961 F044  
                          u3881 EED8                            u3970 F088                            u3890 EF24  
                          u4587 DCDA                            u3971 F084                            u3891 EF20  
                          u3980 F0CA                            u4597 DD04                            u3981 F0C6  
                          u3990 F10C                            u3991 F108                            _main ED4E  
    __end_of_reverseTurnRight90 D502                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            _stop D290                            prodh 000FF4  
                          prodl 000FF3                            start 0000                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red D04C                    ___param_bank 000000                     _turnLeft135 D70C  
                   _turnRight90 D848                   ___fltol@sign1 0059                 __end_of___fladd ED4E  
                         ?_main 0001                 __end_of___fldiv E464                 __end_of___flmul E88E  
               __end_of___fltol D70C                           ?_stop 0019        __size_of_initDCmotorsPWM 0042  
               __end_of___lwdiv D216                           _TMR0H 000FD4                           _TMR0L 000FD3  
    __end_of_I2C_2_Master_Start CCFE      __end_of_I2C_2_Master_Write CD20                 __end_of_forward D0EE  
                         _isbtw D216           __size_of_turnRight135 013E           __size_of_turnRight180 013E  
               __end_of_reverse D140                           status 000FD8         __end_of_color_read_Blue CFAC  
         _I2C_2_Master_RepStart CCEA                 ?_color_read_Red 0005                 __initialization CD7C  
                  __end_of_main F2B4                    __end_of_stop D32A                          ??_main 005D  
                        ??_stop 001D                   __activetblptr 000000                    _turnRight135 D986  
                  _turnRight180 DAC4                    ?_setMotorPWM 000E                          ?_isbtw 000D  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
      __end_of_color_click_init CE48                          _RX4PPS 000E15                          _TX4REG 000EE4  
              __end_of___xxtofl DEF6                   ??_Timer0_init 0001                   ?_read_colours 000C  
                        ___flge D502     __end_of_determine_color_new 0000                       ??___fladd 0049  
                        ___wmul CD9C                       ??___fldiv 0017                       ??___flmul 0030  
                     ??___fltol 0055                       ??___lwdiv 000B                          clear_0 CD82  
                        clear_1 CD8E                          isa$std 000001                       ??_forward 001D  
                     ??_reverse 001D                          stop@mL 0019                          stop@mR 001B  
             ??_initDCmotorsPWM 0003                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0060         __end_of__initialization CD96        __end_of_color_read_Clear D09C  
      __end_of_color_read_Green CFFC          ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001  
                    ___fltol@f1 0051                ?_color_read_Blue 0005                  ??_read_colours 000E  
               _Interrupts_init CD08                  __pcstackCOMRAM 0001                   __end_of_isbtw D290  
           __end_of_Timer0_init CD3C        _determine_color_new$2590 0068                      _calibrateB CECC  
                    _calibrateW CF12                         ??_isbtw 0019                      __pbssBANK0 00B6  
                    __pbssBANK1 0100               _color_writetoaddr CD3C                    _T2CLKCONbits 000FBF  
                  ?_turnLeft135 001D            reverseTurnRight90@mL 0025            reverseTurnRight90@mR 0027  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
            _reverseTurnRight90 D416                    ?_turnRight90 001D             ??_color_writetoaddr 0004  
                     ?___xxtofl 0001             ?_reverseTurnRight90 0025                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5            _movements@main$F1441 00CA                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
          __size_of_setMotorPWM 01D4         __end_of_Interrupts_init CD14          color_writetoaddr@value 0003  
              ??_color_read_Red 0007       __end_of_color_writetoaddr CD5C              _I2C_2_Master_Start CCF4  
                    _initUSART4 CD5C            ??_reverseTurnRight90 0029              _I2C_2_Master_Write CD14  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init CD20                 __size_of___flge 0104                         ___fladd E88E  
                       ___fldiv E0CA                         ___flmul E464                         ___fltol D606  
               __size_of___wmul 0026             ?_I2C_2_Master_Start 0001                    turnLeft135@i 0023  
                       ___lwdiv D1A2             ?_I2C_2_Master_Write 0001                    turnLeft90@mL 001D  
                  turnLeft90@mR 001F                         __pcinit CD7C                         __ramtop 0E00  
                       __ptext0 ED4E                         __ptext1 DAC4                         __ptext2 D986  
                       __ptext3 D70C                         __ptext4 D416                         __ptext5 D848  
                       __ptext6 D32A                         __ptext7 DC02                         __ptext8 D290  
                       __ptext9 D0EE                       _T2CONbits 000FBD                         _forward D09C  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE            __end_of_read_colours D1A2  
                       _reverse D0EE                   _RxBufWriteCnt 00D0                     ?_calibrateB 000C  
                   ?_calibrateW 000C                         main@cal 0082            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization CD96              setMotorPWM@PWMduty 0017  
             ?_color_click_init 0001                    turnRight90@i 0023              ??_color_click_init 0005  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      _timerArray 013C  
               _initDCmotorsPWM CE8A                       _PORTFbits 000F8E                     ___fladd@grs 0050  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
   determine_color_new@RedRatio 006C                      main@check1 0086                      main@check2 0088  
                    main@check3 008A                      main@check4 0084                ?_Interrupts_init 0001  
                   ___flmul@grs 0035               ?_color_read_Clear 0005      __size_of_color_writetoaddr 0020  
                  _EUSART4RXbuf 00B6                    _EUSART4TXbuf 0178               ?_color_read_Green 0005  
                   ?_initUSART4 0001                      main@motorL 00A4                      main@motorR 00AD  
            ??_color_read_Clear 0007              ??_color_read_Green 0007                      _turnLeft90 DC02  
           __size_of_calibrateB 0046             __size_of_calibrateW 004A                  __end_of___flge D606  
          __size_of_turnLeft135 013C                  __end_of___wmul CDC2            __size_of_turnRight90 013E  
  __size_of_determine_color_new 0D4C             color_read_Clear@tmp 000A             start_initialization CD7C  
                 _TxBufWriteCnt 005F             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM CECC  
                      ??___flge 0009                        ??___wmul 0005        __size_of_color_read_Blue 0050  
         __size_of_read_colours 0062                       ___fladd@a 0045                       ___fladd@b 0041  
           reverseTurnLeft90@mL 0025             reverseTurnLeft90@mR 0027                       ___fldiv@a 0013  
                     ___fldiv@b 000F   determine_color_new@GreenRatio 006E                       ___flmul@a 002C  
                     ___flmul@b 0028                     __pbssCOMRAM 005F             __size_of_initUSART4 0020  
                 __pcstackBANK0 0060               __size_of___xxtofl 01B4                ___lwdiv@dividend 0007  
                  ?_Timer0_init 0001               _reverseTurnLeft90 D32A                     ?_turnLeft90 001D  
                  _read_colours D140                        ?___fladd 0041                        ?___fldiv 000F  
                      ?___flmul 0028                        ?___fltol 0051              ?_reverseTurnLeft90 0025  
                      ?___lwdiv 0007            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                 ?_turnRight135 001D                   ?_turnRight180 001D             ??_reverseTurnLeft90 0029  
                      ?_forward 0019               _I2C_2_Master_Idle CDC2               _I2C_2_Master_Init CDEA  
             _I2C_2_Master_Read CE48               _I2C_2_Master_Stop CCFE                    _RxBufReadCnt 00CF  
                      ?_reverse 0019              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0010                    ??_calibrateB 000E  
                  ??_calibrateW 000E              ?_I2C_2_Master_Stop 0001                ___lwdiv@quotient 000B  
                   turnLeft90@i 0023        initDCmotorsPWM@PWMperiod 0001                  __size_of_isbtw 007A  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
                      _PIE0bits 000E29                        _PIE2bits 000E2B                        _PIE4bits 000E2D  
     __end_of_reverseTurnLeft90 D416     __size_of_reverseTurnRight90 00EC                        _PIR4bits 000E37  
          determine_color_new@m 005B                       _movements 00CC                ?_initDCmotorsPWM 0001  
                      _SSP2CON2 000EDA                        _SSP2STAT 000ED8              __end_of_calibrateB CF12  
            __end_of_calibrateW CF5C       __size_of_color_click_init 0034       __end_of_I2C_2_Master_Idle CDEA  
     __end_of_I2C_2_Master_Init CE14       __end_of_I2C_2_Master_Read CE8A               ___wmul@multiplier 0001  
                ??_turnRight135 0021                  ??_turnRight180 0021                   _movementArray 0100  
     __end_of_I2C_2_Master_Stop CD08        determine_color_new@lumin 0074                    setMotorPWM@m 000E  
   I2C_2_Master_Write@data_byte 0002                       main@count 008C               ??_color_read_Blue 0007  
                  _TxBufReadCnt 00CE             __size_of_turnLeft90 0140     __size_of_I2C_2_Master_Start 000A  
   __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A   __end_of_I2C_2_Master_RepStart CCF4  
            color_read_Blue@tmp 000A                     calibrateB@m 000C                     calibrateW@m 000C  
           __end_of_setMotorPWM E0CA             _determine_color_new F2B4                    ??_initUSART4 0001  
                      __Hrparam 0000                        __Lrparam 0000                       forward@mL 0019  
                     forward@mR 001B         __size_of_color_read_Red 0050                __size_of___fladd 04C0  
              __size_of___fldiv 039A                __size_of___flmul 042A                __size_of___fltol 0106  
                     isbtw@high 0015                __size_of___lwdiv 0074                  turnRight135@mL 001D  
                turnRight135@mR 001F                  turnRight180@mL 001D                  turnRight180@mR 001F  
     __size_of_color_read_Clear 0050                   turnLeft135@mL 001D                   turnLeft135@mR 001F  
     __size_of_color_read_Green 0050                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
          ?_determine_color_new 005B                        ___xxtofl DD42                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6                __size_of_forward 0052                 ___lwdiv@divisor 0009  
            __end_of_initUSART4 CD7C                 ___lwdiv@counter 000D                        __ptext10 D140  
                      __ptext11 D04C                        __ptext20 D502                        __ptext12 CD5C  
                      __ptext21 DD42                        __ptext13 CE8A                        __ptext30 CECC  
                      __ptext22 D606                        __ptext14 D09C                        __ptext31 CFFC  
                      __ptext23 E464                        __ptext15 DEF6                        __ptext40 CD20  
                      __ptext32 CFAC                        __ptext24 E0CA                        __ptext16 CD9C  
                      __ptext41 CD08                        __ptext33 CF5C                        __ptext25 E88E  
                      __ptext17 D1A2                        __ptext34 CD14                        __ptext26 CE14  
                      __ptext18 F2B4                        __ptext35 CCFE                        __ptext27 CD3C  
                      __ptext19 D216                        __ptext36 CCF4                        __ptext28 CDEA  
                      __ptext37 CCEA                        __ptext29 CF12                        __ptext38 CE48  
                      __ptext39 CDC2                __size_of_reverse 0052                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                   __size_of_main 0566                   __size_of_stop 009A  
    __size_of_reverseTurnLeft90 00EC                       reverse@mL 0019                       reverse@mR 001B  
                 ??_turnLeft135 0021                        isa$xinst 000000        __size_of_Interrupts_init 000C  
                    _RC4STAbits 000EE7         determine_color_new@RelB 007E         determine_color_new@RelG 007A  
       determine_color_new@RelR 0076            __size_of_Timer0_init 001C                   ??_turnRight90 0021  
                      main@test 0090      __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A  
    __size_of_I2C_2_Master_Read 0042           ??_determine_color_new 0060      __size_of_I2C_2_Master_Stop 000A  
                    _INTCONbits 000FF2                     _setMotorPWM DEF6                        isbtw@low 0011  
                      isbtw@num 000D                     _PWM6CONbits 000FA4                   turnRight135@i 0023  
                 turnRight180@i 0023                     _PWM7CONbits 000FA1                   turnRight90@mL 001D  
                 turnRight90@mR 001F            __end_of_turnRight135 DAC4            __end_of_turnRight180 DC02  
           main@detected_colour 008E                    ??_turnLeft90 0021          determine_color_new@out 0072  
                 read_colours@m 000C                _color_click_init CE14             __end_of_turnLeft135 D848  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C             __end_of_turnRight90 D986  
                 ___fladd@signs 004D              __end_of_turnLeft90 DD42                      _TX4STAbits 000EE8  
                  ___fladd@aexp 004E                    ___fladd@bexp 004F    determine_color_new@BlueRatio 0070  
