

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 18:10:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 05/05/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PIR0bits	set	3635
    96  0000                     _PIE0bits	set	3625
    97  0000                     _PIE2bits	set	3627
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _RC7PPS	set	3689
   111  0000                     _RE2PPS	set	3700
   112  0000                     _SSP2BUF	set	3797
   113  0000                     _SSP2CON2bits	set	3802
   114  0000                     _SSP2CON2	set	3802
   115  0000                     _SSP2STAT	set	3800
   116  0000                     _RD6PPS	set	3696
   117  0000                     _RD5PPS	set	3695
   118  0000                     _SSP2CLKPPS	set	3612
   119  0000                     _SSP2DATPPS	set	3613
   120  0000                     _ANSELDbits	set	3751
   121  0000                     _SSP2ADD	set	3798
   122  0000                     _SSP2CON1bits	set	3801
   123  0000                     _T0CON0bits	set	4053
   124  0000                     _T0CON1bits	set	4054
   125  0000                     _INTCONbits	set	4082
   126  0000                     _PORTFbits	set	3982
   127  0000                     _LATHbits	set	3968
   128  0000                     _TRISHbits	set	3976
   129  0000                     _LATDbits	set	3964
   130  0000                     _LATFbits	set	3966
   131  0000                     _TRISAbits	set	3969
   132  0000                     _LATAbits	set	3961
   133  0000                     _TRISFbits	set	3974
   134  0000                     _PWM7CONbits	set	4001
   135  0000                     _PWM6CONbits	set	4004
   136  0000                     _T2PR	set	4028
   137  0000                     _T2CLKCONbits	set	4031
   138  0000                     _T2HLTbits	set	4030
   139  0000                     _T2CONbits	set	4029
   140  0000                     _LATGbits	set	3967
   141  0000                     _LATCbits	set	3963
   142  0000                     _LATEbits	set	3965
   143  0000                     _TRISGbits	set	3975
   144  0000                     _TRISCbits	set	3971
   145  0000                     _TRISEbits	set	3973
   146  0000                     _TRISDbits	set	3972
   147  0000                     _TMR0L	set	4051
   148  0000                     _TMR0H	set	4052
   149  0000                     _LATG	set	3967
   150  0000                     _LATE	set	3965
   151  0000                     _PWM7DCH	set	4000
   152  0000                     _PWM6DCH	set	4003
   153                           
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  003732                     __pcinit:
   158                           	callstack 0
   159  003732                     start_initialization:
   160                           	callstack 0
   161  003732                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (60 bytes)
   165  003732  EE01  F000         	lfsr	0,__pbssBANK1
   166  003736  0E3C               	movlw	60
   167  003738                     clear_0:
   168  003738  6AEE               	clrf	postinc0,c
   169  00373A  06E8               	decf	wreg,f,c
   170  00373C  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (66 bytes)
   173  00373E  EE00  F0B8         	lfsr	0,__pbssBANK0
   174  003742  0E42               	movlw	66
   175  003744                     clear_1:
   176  003744  6AEE               	clrf	postinc0,c
   177  003746  06E8               	decf	wreg,f,c
   178  003748  E1FD               	bnz	clear_1
   179  00374A                     end_of_initialization:
   180                           	callstack 0
   181  00374A                     __end_of__initialization:
   182                           	callstack 0
   183  00374A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  00374C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  00374E  0100               	movlb	0
   186  003750  EFC7  F006         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  0000B8                     __pbssBANK0:
   190                           	callstack 0
   191  0000B8                     _EUSART4RXbuf:
   192                           	callstack 0
   193  0000B8                     	ds	20
   194  0000CC                     _movements:
   195                           	callstack 0
   196  0000CC                     	ds	2
   197  0000CE                     _TxBufReadCnt:
   198                           	callstack 0
   199  0000CE                     	ds	1
   200  0000CF                     _TxBufWriteCnt:
   201                           	callstack 0
   202  0000CF                     	ds	1
   203  0000D0                     _RxBufReadCnt:
   204                           	callstack 0
   205  0000D0                     	ds	1
   206  0000D1                     _RxBufWriteCnt:
   207                           	callstack 0
   208  0000D1                     	ds	1
   209  0000D2                     _movementArray:
   210                           	callstack 0
   211  0000D2                     	ds	20
   212  0000E6                     _timerArray:
   213                           	callstack 0
   214  0000E6                     	ds	20
   215                           
   216                           	psect	bssBANK1
   217  000100                     __pbssBANK1:
   218                           	callstack 0
   219  000100                     _EUSART4TXbuf:
   220                           	callstack 0
   221  000100                     	ds	60
   222                           
   223                           	psect	cstackBANK0
   224  000060                     __pcstackBANK0:
   225                           	callstack 0
   226  000060                     ??_determine_color_new:
   227                           
   228                           ; 1 bytes @ 0x0
   229  000060                     	ds	8
   230  000068                     _determine_color_new$2627:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x8
   234  000068                     	ds	4
   235  00006C                     determine_color_new@RedRatio:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0xC
   239  00006C                     	ds	2
   240  00006E                     determine_color_new@GreenRatio:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xE
   244  00006E                     	ds	2
   245  000070                     determine_color_new@BlueRatio:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000070                     	ds	2
   250  000072                     determine_color_new@out:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x12
   254  000072                     	ds	2
   255  000074                     determine_color_new@lumin:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000074                     	ds	2
   260  000076                     determine_color_new@RelR:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x16
   264  000076                     	ds	4
   265  00007A                     determine_color_new@RelG:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x1A
   269  00007A                     	ds	4
   270  00007E                     determine_color_new@RelB:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x1E
   274  00007E                     	ds	4
   275  000082                     main@cal:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279  000082                     	ds	2
   280  000084                     main@check4:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284  000084                     	ds	2
   285  000086                     main@reset_timer:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x26
   289  000086                     	ds	2
   290  000088                     main@check1:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x28
   294  000088                     	ds	2
   295  00008A                     main@check2:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2A
   299  00008A                     	ds	2
   300  00008C                     main@check3:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x2C
   304  00008C                     	ds	2
   305  00008E                     main@count:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2E
   309  00008E                     	ds	2
   310  000090                     main@detected_colour:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x30
   314  000090                     	ds	2
   315  000092                     main@test:
   316                           	callstack 0
   317                           
   318                           ; 20 bytes @ 0x32
   319  000092                     	ds	20
   320  0000A6                     main@motorL:
   321                           	callstack 0
   322                           
   323                           ; 9 bytes @ 0x46
   324  0000A6                     	ds	9
   325  0000AF                     main@motorR:
   326                           	callstack 0
   327                           
   328                           ; 9 bytes @ 0x4F
   329  0000AF                     	ds	9
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	callstack 0
   334  000001                     ??_I2C_2_Master_Idle:
   335  000001                     ?___wmul:
   336                           	callstack 0
   337  000001                     ?___xxtofl:
   338                           	callstack 0
   339  000001                     updateMovementCount@movementCode:
   340                           	callstack 0
   341  000001                     initDCmotorsPWM@PWMperiod:
   342                           	callstack 0
   343  000001                     ___wmul@multiplier:
   344                           	callstack 0
   345  000001                     ___flge@ff1:
   346                           	callstack 0
   347  000001                     ___xxtofl@val:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     ??_I2C_2_Master_Read:
   353  000002                     I2C_2_Master_Write@data_byte:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     color_writetoaddr@value:
   359                           	callstack 0
   360  000003                     I2C_2_Master_Read@ack:
   361                           	callstack 0
   362  000003                     updateMovementCount@movementArray:
   363                           	callstack 0
   364  000003                     ___wmul@multiplicand:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     color_writetoaddr@address:
   370                           	callstack 0
   371  000004                     I2C_2_Master_Read@tmp:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x3
   375  000004                     	ds	1
   376  000005                     ??_color_click_init:
   377  000005                     ??___xxtofl:
   378  000005                     ?_color_read_Clear:
   379                           	callstack 0
   380  000005                     ?_color_read_Red:
   381                           	callstack 0
   382  000005                     ?_color_read_Green:
   383                           	callstack 0
   384  000005                     ?_color_read_Blue:
   385                           	callstack 0
   386  000005                     updateMovementCount@movements:
   387                           	callstack 0
   388  000005                     ___wmul@product:
   389                           	callstack 0
   390  000005                     ___flge@ff2:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x4
   394  000005                     	ds	2
   395  000007                     ??_color_read_Clear:
   396  000007                     ??_color_read_Red:
   397  000007                     ??_color_read_Green:
   398  000007                     ??_color_read_Blue:
   399  000007                     ?___lwdiv:
   400                           	callstack 0
   401  000007                     updateMovementCount@timerArray:
   402                           	callstack 0
   403  000007                     ___lwdiv@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	2
   408  000009                     ??_updateMovementCount:
   409  000009                     ??___flge:
   410  000009                     ___xxtofl@sign:
   411                           	callstack 0
   412  000009                     ___lwdiv@divisor:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x8
   416  000009                     	ds	1
   417  00000A                     ___xxtofl@exp:
   418                           	callstack 0
   419  00000A                     color_read_Clear@tmp:
   420                           	callstack 0
   421  00000A                     color_read_Red@tmp:
   422                           	callstack 0
   423  00000A                     color_read_Green@tmp:
   424                           	callstack 0
   425  00000A                     color_read_Blue@tmp:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x9
   429  00000A                     	ds	1
   430  00000B                     updateMovementCount@tempTimerVal:
   431                           	callstack 0
   432  00000B                     ___lwdiv@quotient:
   433                           	callstack 0
   434  00000B                     ___xxtofl@arg:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0xA
   438  00000B                     	ds	1
   439  00000C                     read_colours@m:
   440                           	callstack 0
   441  00000C                     calibrateW@m:
   442                           	callstack 0
   443  00000C                     calibrateB@m:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     ?_isbtw:
   449                           	callstack 0
   450  00000D                     ___lwdiv@counter:
   451                           	callstack 0
   452  00000D                     isbtw@num:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xC
   456  00000D                     	ds	1
   457  00000E                     setMotorPWM@m:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xD
   461  00000E                     	ds	1
   462  00000F                     ?___fldiv:
   463                           	callstack 0
   464  00000F                     ___fldiv@b:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     ??_setMotorPWM:
   470                           
   471                           ; 1 bytes @ 0xF
   472  000010                     	ds	1
   473  000011                     isbtw@low:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x10
   477  000011                     	ds	2
   478  000013                     ___fldiv@a:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x12
   482  000013                     	ds	2
   483  000015                     isbtw@high:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x14
   487  000015                     	ds	2
   488  000017                     ??___fldiv:
   489  000017                     setMotorPWM@PWMduty:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x16
   493  000017                     	ds	2
   494  000019                     stop@mL:
   495                           	callstack 0
   496  000019                     reverse@mL:
   497                           	callstack 0
   498  000019                     forward@mL:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x18
   502  000019                     	ds	2
   503  00001B                     stop@mR:
   504                           	callstack 0
   505  00001B                     reverse@mR:
   506                           	callstack 0
   507  00001B                     forward@mR:
   508                           	callstack 0
   509  00001B                     ___fldiv@rem:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x1A
   513  00001B                     	ds	2
   514  00001D                     turnLeft90@mL:
   515                           	callstack 0
   516  00001D                     turnLeft135@mL:
   517                           	callstack 0
   518  00001D                     turnRight90@mL:
   519                           	callstack 0
   520  00001D                     turnRight135@mL:
   521                           	callstack 0
   522  00001D                     turnRight180@mL:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  00001D                     	ds	2
   527  00001F                     ___fldiv@sign:
   528                           	callstack 0
   529  00001F                     turnLeft90@mR:
   530                           	callstack 0
   531  00001F                     turnLeft135@mR:
   532                           	callstack 0
   533  00001F                     turnRight90@mR:
   534                           	callstack 0
   535  00001F                     turnRight135@mR:
   536                           	callstack 0
   537  00001F                     turnRight180@mR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1E
   541  00001F                     	ds	1
   542  000020                     ___fldiv@new_exp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1F
   546  000020                     	ds	1
   547  000021                     ??_turnRight180:
   548  000021                     ??_turnLeft90:
   549  000021                     ??_turnRight90:
   550  000021                     ??_turnLeft135:
   551  000021                     ??_turnRight135:
   552                           
   553                           ; 1 bytes @ 0x20
   554  000021                     	ds	1
   555  000022                     ___fldiv@grs:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x21
   559  000022                     	ds	1
   560  000023                     turnLeft90@i:
   561                           	callstack 0
   562  000023                     turnLeft135@i:
   563                           	callstack 0
   564  000023                     turnRight90@i:
   565                           	callstack 0
   566  000023                     turnRight135@i:
   567                           	callstack 0
   568  000023                     turnRight180@i:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572  000023                     	ds	2
   573  000025                     reverseTurnRight90@mL:
   574                           	callstack 0
   575  000025                     reverseTurnLeft90@mL:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x24
   579  000025                     	ds	1
   580  000026                     ___fldiv@bexp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x25
   584  000026                     	ds	1
   585  000027                     ___fldiv@aexp:
   586                           	callstack 0
   587  000027                     reverseTurnRight90@mR:
   588                           	callstack 0
   589  000027                     reverseTurnLeft90@mR:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x26
   593  000027                     	ds	1
   594  000028                     ?___flmul:
   595                           	callstack 0
   596  000028                     ___flmul@b:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x27
   600  000028                     	ds	1
   601  000029                     ??_reverseTurnLeft90:
   602  000029                     ??_reverseTurnRight90:
   603                           
   604                           ; 1 bytes @ 0x28
   605  000029                     	ds	2
   606  00002B                     White@mL:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x2A
   610  00002B                     	ds	1
   611  00002C                     ___flmul@a:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x2B
   615  00002C                     	ds	1
   616  00002D                     White@mR:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x2C
   620  00002D                     	ds	2
   621  00002F                     White@movementArray:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x2E
   625  00002F                     	ds	1
   626  000030                     ??___flmul:
   627                           
   628                           ; 1 bytes @ 0x2F
   629  000030                     	ds	1
   630  000031                     White@movements:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x30
   634  000031                     	ds	2
   635  000033                     White@timerArray:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x32
   639  000033                     	ds	1
   640  000034                     ___flmul@sign:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x33
   644  000034                     	ds	1
   645  000035                     ??_White:
   646  000035                     ___flmul@grs:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x34
   650  000035                     	ds	4
   651  000039                     ___flmul@aexp:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x38
   655  000039                     	ds	1
   656  00003A                     ___flmul@bexp:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x39
   660  00003A                     	ds	1
   661  00003B                     White@tempTimerVal:
   662                           	callstack 0
   663  00003B                     ___flmul@prod:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x3A
   667  00003B                     	ds	2
   668  00003D                     White@i:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x3C
   672  00003D                     	ds	2
   673  00003F                     ___flmul@temp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x3E
   677  00003F                     	ds	2
   678  000041                     ?___fladd:
   679                           	callstack 0
   680  000041                     ___fladd@b:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x40
   684  000041                     	ds	4
   685  000045                     ___fladd@a:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x44
   689  000045                     	ds	4
   690  000049                     ??___fladd:
   691                           
   692                           ; 1 bytes @ 0x48
   693  000049                     	ds	4
   694  00004D                     ___fladd@signs:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x4C
   698  00004D                     	ds	1
   699  00004E                     ___fladd@aexp:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x4D
   703  00004E                     	ds	1
   704  00004F                     ___fladd@bexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x4E
   708  00004F                     	ds	1
   709  000050                     ___fladd@grs:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x4F
   713  000050                     	ds	1
   714  000051                     ?___fltol:
   715                           	callstack 0
   716  000051                     ___fltol@f1:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x50
   720  000051                     	ds	4
   721  000055                     ??___fltol:
   722                           
   723                           ; 1 bytes @ 0x54
   724  000055                     	ds	4
   725  000059                     ___fltol@sign1:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x58
   729  000059                     	ds	1
   730  00005A                     ___fltol@exp1:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x59
   734  00005A                     	ds	1
   735  00005B                     ?_determine_color_new:
   736                           	callstack 0
   737  00005B                     determine_color_new@m:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x5A
   741  00005B                     	ds	2
   742  00005D                     ??_main:
   743                           
   744                           ; 1 bytes @ 0x5C
   745  00005D                     	ds	2
   746                           
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 24 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  detected_col    2   48[BANK0 ] unsigned int 
   757 ;;  test           20   50[BANK0 ] struct RGB_val
   758 ;;  motorR          9   79[BANK0 ] struct DC_motor
   759 ;;  motorL          9   70[BANK0 ] struct DC_motor
   760 ;;  count           2   46[BANK0 ] unsigned int 
   761 ;;  check3          2   44[BANK0 ] unsigned int 
   762 ;;  check2          2   42[BANK0 ] unsigned int 
   763 ;;  check1          2   40[BANK0 ] unsigned int 
   764 ;;  PWMcycle        2    0        unsigned int 
   765 ;;  reset_timer     2   38[BANK0 ] unsigned int 
   766 ;;  check4          2   36[BANK0 ] unsigned int 
   767 ;;  cal             2   34[BANK0 ] unsigned int 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   780 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   781 ;;Total ram usage:       56 bytes
   782 ;; Hardware stack levels required when called: 7
   783 ;; This function calls:
   784 ;;		_Interrupts_init
   785 ;;		_Timer0_init
   786 ;;		_White
   787 ;;		_calibrateB
   788 ;;		_calibrateW
   789 ;;		_color_click_init
   790 ;;		_determine_color_new
   791 ;;		_forward
   792 ;;		_initDCmotorsPWM
   793 ;;		_initUSART4
   794 ;;		_read_colours
   795 ;;		_reverseTurnLeft90
   796 ;;		_reverseTurnRight90
   797 ;;		_turnLeft135
   798 ;;		_turnLeft90
   799 ;;		_turnRight135
   800 ;;		_turnRight180
   801 ;;		_turnRight90
   802 ;;		_updateMovementCount
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  000D8E                     __ptext0:
   810                           	callstack 0
   811  000D8E                     _main:
   812                           	callstack 24
   813  000D8E                     
   814                           ;main.c: 26:     initDCmotorsPWM(99);
   815  000D8E  0E00               	movlw	0
   816  000D90  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   817  000D92  0E63               	movlw	99
   818  000D94  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   819  000D96  EC01  F01B         	call	_initDCmotorsPWM	;wreg free
   820  000D9A                     
   821                           ;main.c: 27:     color_click_init();
   822  000D9A  EC43  F01B         	call	_color_click_init	;wreg free
   823  000D9E                     
   824                           ;main.c: 28:     initUSART4();
   825  000D9E  ECAA  F01B         	call	_initUSART4	;wreg free
   826  000DA2                     
   827                           ;main.c: 29:     Timer0_init();
   828  000DA2  ECCA  F01B         	call	_Timer0_init	;wreg free
   829  000DA6                     
   830                           ;main.c: 30:     Interrupts_init();
   831  000DA6  ECDE  F01B         	call	_Interrupts_init	;wreg free
   832  000DAA                     
   833                           ;main.c: 35:     motorL.power=0;
   834  000DAA  0E00               	movlw	0
   835  000DAC  0100               	movlb	0	; () banked
   836  000DAE  6FA6               	movwf	main@motorL& (0+255),b
   837  000DB0                     
   838                           ; BSR set to: 0
   839                           ;main.c: 36:     motorL.direction=1;
   840  000DB0  0E01               	movlw	1
   841  000DB2  6FA7               	movwf	(main@motorL+1)& (0+255),b
   842  000DB4                     
   843                           ; BSR set to: 0
   844                           ;main.c: 37:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   845  000DB4  0EA3               	movlw	163
   846  000DB6  6FA8               	movwf	(main@motorL+2)& (0+255),b
   847  000DB8  0E0F               	movlw	15
   848  000DBA  6FA9               	movwf	(main@motorL+3)& (0+255),b
   849  000DBC                     
   850                           ; BSR set to: 0
   851                           ;main.c: 38:     motorL.dir_LAT=(unsigned char *)(&LATE);
   852  000DBC  0E7D               	movlw	125
   853  000DBE  6FAA               	movwf	(main@motorL+4)& (0+255),b
   854  000DC0  0E0F               	movlw	15
   855  000DC2  6FAB               	movwf	(main@motorL+5)& (0+255),b
   856  000DC4                     
   857                           ; BSR set to: 0
   858                           ;main.c: 39:     motorL.dir_pin=4;
   859  000DC4  0E04               	movlw	4
   860  000DC6  6FAC               	movwf	(main@motorL+6)& (0+255),b
   861  000DC8                     
   862                           ; BSR set to: 0
   863                           ;main.c: 40:     motorL.PWMperiod=PWMcycle;
   864  000DC8  0E00               	movlw	0
   865  000DCA  6FAE               	movwf	(main@motorL+8)& (0+255),b
   866  000DCC  0E63               	movlw	99
   867  000DCE  6FAD               	movwf	(main@motorL+7)& (0+255),b
   868  000DD0                     
   869                           ; BSR set to: 0
   870                           ;main.c: 42:     motorR.power=0;
   871  000DD0  0E00               	movlw	0
   872  000DD2  6FAF               	movwf	main@motorR& (0+255),b
   873  000DD4                     
   874                           ; BSR set to: 0
   875                           ;main.c: 43:     motorR.direction=1;
   876  000DD4  0E01               	movlw	1
   877  000DD6  6FB0               	movwf	(main@motorR+1)& (0+255),b
   878  000DD8                     
   879                           ; BSR set to: 0
   880                           ;main.c: 44:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   881  000DD8  0EA0               	movlw	160
   882  000DDA  6FB1               	movwf	(main@motorR+2)& (0+255),b
   883  000DDC  0E0F               	movlw	15
   884  000DDE  6FB2               	movwf	(main@motorR+3)& (0+255),b
   885  000DE0                     
   886                           ; BSR set to: 0
   887                           ;main.c: 45:     motorR.dir_LAT=(unsigned char *)(&LATG);
   888  000DE0  0E7F               	movlw	127
   889  000DE2  6FB3               	movwf	(main@motorR+4)& (0+255),b
   890  000DE4  0E0F               	movlw	15
   891  000DE6  6FB4               	movwf	(main@motorR+5)& (0+255),b
   892  000DE8                     
   893                           ; BSR set to: 0
   894                           ;main.c: 46:     motorR.dir_pin=6;
   895  000DE8  0E06               	movlw	6
   896  000DEA  6FB5               	movwf	(main@motorR+6)& (0+255),b
   897  000DEC                     
   898                           ; BSR set to: 0
   899                           ;main.c: 47:     motorR.PWMperiod=PWMcycle;
   900  000DEC  0E00               	movlw	0
   901  000DEE  6FB7               	movwf	(main@motorR+8)& (0+255),b
   902  000DF0  0E63               	movlw	99
   903  000DF2  6FB6               	movwf	(main@motorR+7)& (0+255),b
   904  000DF4                     
   905                           ; BSR set to: 0
   906                           ;main.c: 50:     struct RGB_val test;;main.c: 51:     test.C = 0;
   907  000DF4  0E00               	movlw	0
   908  000DF6  6F9F               	movwf	(main@test+13)& (0+255),b
   909  000DF8  0E00               	movlw	0
   910  000DFA  6F9E               	movwf	(main@test+12)& (0+255),b
   911  000DFC                     
   912                           ; BSR set to: 0
   913                           ;main.c: 52:     test.R = 0;
   914  000DFC  0E00               	movlw	0
   915  000DFE  6FA1               	movwf	(main@test+15)& (0+255),b
   916  000E00  0E00               	movlw	0
   917  000E02  6FA0               	movwf	(main@test+14)& (0+255),b
   918  000E04                     
   919                           ; BSR set to: 0
   920                           ;main.c: 53:     test.G = 0;
   921  000E04  0E00               	movlw	0
   922  000E06  6FA3               	movwf	(main@test+17)& (0+255),b
   923  000E08  0E00               	movlw	0
   924  000E0A  6FA2               	movwf	(main@test+16)& (0+255),b
   925  000E0C                     
   926                           ; BSR set to: 0
   927                           ;main.c: 54:     test.B = 0;
   928  000E0C  0E00               	movlw	0
   929  000E0E  6FA5               	movwf	(main@test+19)& (0+255),b
   930  000E10  0E00               	movlw	0
   931  000E12  6FA4               	movwf	(main@test+18)& (0+255),b
   932  000E14                     
   933                           ; BSR set to: 0
   934                           ;main.c: 57:     TRISFbits.TRISF2=1;
   935  000E14  8486               	bsf	134,2,c	;volatile
   936  000E16                     
   937                           ; BSR set to: 0
   938                           ;main.c: 58:     ANSELFbits.ANSELF2=0;
   939  000E16  010E               	movlb	14	; () banked
   940  000E18  95B4               	bcf	180,2,b	;volatile
   941  000E1A                     
   942                           ; BSR set to: 14
   943                           ;main.c: 59:     TRISFbits.TRISF3=1;
   944  000E1A  8686               	bsf	134,3,c	;volatile
   945  000E1C                     
   946                           ; BSR set to: 14
   947                           ;main.c: 60:     ANSELFbits.ANSELF3=0;
   948  000E1C  97B4               	bcf	180,3,b	;volatile
   949  000E1E                     
   950                           ; BSR set to: 14
   951                           ;main.c: 63:     LATGbits.LATG1=1;
   952  000E1E  827F               	bsf	127,1,c	;volatile
   953  000E20                     
   954                           ; BSR set to: 14
   955                           ;main.c: 64:     TRISGbits.TRISG1=0;
   956  000E20  9287               	bcf	135,1,c	;volatile
   957  000E22                     
   958                           ; BSR set to: 14
   959                           ;main.c: 65:     LATAbits.LATA4=1;
   960  000E22  8879               	bsf	121,4,c	;volatile
   961  000E24                     
   962                           ; BSR set to: 14
   963                           ;main.c: 66:     TRISAbits.TRISA4=0;
   964  000E24  9881               	bcf	129,4,c	;volatile
   965  000E26                     
   966                           ; BSR set to: 14
   967                           ;main.c: 67:     LATFbits.LATF7=1;
   968  000E26  8E7E               	bsf	126,7,c	;volatile
   969  000E28                     
   970                           ; BSR set to: 14
   971                           ;main.c: 68:     TRISFbits.TRISF7=0;
   972  000E28  9E86               	bcf	134,7,c	;volatile
   973  000E2A                     
   974                           ; BSR set to: 14
   975                           ;main.c: 71:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
   976  000E2A  9E84               	bcf	132,7,c	;volatile
   977  000E2C                     
   978                           ; BSR set to: 14
   979  000E2C  9E7C               	bcf	124,7,c	;volatile
   980  000E2E                     
   981                           ; BSR set to: 14
   982                           ;main.c: 72:     TRISHbits.TRISH3 = 0; LATHbits.LATH3 = 0;
   983  000E2E  9688               	bcf	136,3,c	;volatile
   984  000E30                     
   985                           ; BSR set to: 14
   986  000E30  9680               	bcf	128,3,c	;volatile
   987  000E32                     
   988                           ; BSR set to: 14
   989                           ;main.c: 75:     unsigned int cal = 0;
   990  000E32  0E00               	movlw	0
   991  000E34  0100               	movlb	0	; () banked
   992  000E36  6F83               	movwf	(main@cal+1)& (0+255),b
   993  000E38  0E00               	movlw	0
   994  000E3A  6F82               	movwf	main@cal& (0+255),b
   995                           
   996                           ;main.c: 76:     while(cal==0){
   997  000E3C  EF7B  F007         	goto	l4031
   998  000E40                     l363:
   999                           
  1000                           ; BSR set to: 0
  1001                           ;main.c: 77:         LATDbits.LATD7 = 1;
  1002  000E40  8E7C               	bsf	124,7,c	;volatile
  1003  000E42                     l364:
  1004  000E42  B48E               	btfsc	142,2,c	;volatile
  1005  000E44  EF26  F007         	goto	u3891
  1006  000E48  EF28  F007         	goto	u3890
  1007  000E4C                     u3891:
  1008  000E4C  EF21  F007         	goto	l364
  1009  000E50                     u3890:
  1010  000E50                     
  1011                           ;main.c: 79:         if (!PORTFbits.RF2){
  1012  000E50  B48E               	btfsc	142,2,c	;volatile
  1013  000E52  EF2D  F007         	goto	u3901
  1014  000E56  EF2F  F007         	goto	u3900
  1015  000E5A                     u3901:
  1016  000E5A  EF41  F007         	goto	l4017
  1017  000E5E                     u3900:
  1018  000E5E                     
  1019                           ;main.c: 80:             LATDbits.LATD7 = 0;
  1020  000E5E  9E7C               	bcf	124,7,c	;volatile
  1021  000E60                     
  1022                           ;main.c: 81:             calibrateW(&test);
  1023  000E60  0E92               	movlw	low main@test
  1024  000E62  6E0C               	movwf	calibrateW@m^0,c
  1025  000E64  0E00               	movlw	high main@test
  1026  000E66  6E0D               	movwf	(calibrateW@m+1)^0,c
  1027  000E68  ECB9  F01A         	call	_calibrateW	;wreg free
  1028  000E6C                     
  1029                           ;main.c: 82:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1030  000E6C  0E19               	movlw	25
  1031  000E6E  6E5E               	movwf	(??_main+1)^0,c
  1032  000E70  0E5A               	movlw	90
  1033  000E72  6E5D               	movwf	??_main^0,c
  1034  000E74  0EB2               	movlw	178
  1035  000E76                     u4227:
  1036  000E76  2EE8               	decfsz	wreg,f,c
  1037  000E78  D7FE               	bra	u4227
  1038  000E7A  2E5D               	decfsz	??_main^0,f,c
  1039  000E7C  D7FC               	bra	u4227
  1040  000E7E  2E5E               	decfsz	(??_main+1)^0,f,c
  1041  000E80  D7FA               	bra	u4227
  1042  000E82                     l4017:
  1043                           
  1044                           ;main.c: 85:         LATDbits.LATD7 = 1;
  1045  000E82  8E7C               	bsf	124,7,c	;volatile
  1046  000E84                     l368:
  1047  000E84  B48E               	btfsc	142,2,c	;volatile
  1048  000E86  EF47  F007         	goto	u3911
  1049  000E8A  EF49  F007         	goto	u3910
  1050  000E8E                     u3911:
  1051  000E8E  EF42  F007         	goto	l368
  1052  000E92                     u3910:
  1053  000E92                     
  1054                           ;main.c: 87:         if (!PORTFbits.RF2){
  1055  000E92  B48E               	btfsc	142,2,c	;volatile
  1056  000E94  EF4E  F007         	goto	u3921
  1057  000E98  EF50  F007         	goto	u3920
  1058  000E9C                     u3921:
  1059  000E9C  EF62  F007         	goto	l4025
  1060  000EA0                     u3920:
  1061  000EA0                     
  1062                           ;main.c: 88:             LATDbits.LATD7 = 0;
  1063  000EA0  9E7C               	bcf	124,7,c	;volatile
  1064  000EA2                     
  1065                           ;main.c: 89:             calibrateB(&test);
  1066  000EA2  0E92               	movlw	low main@test
  1067  000EA4  6E0C               	movwf	calibrateB@m^0,c
  1068  000EA6  0E00               	movlw	high main@test
  1069  000EA8  6E0D               	movwf	(calibrateB@m+1)^0,c
  1070  000EAA  ECDE  F01A         	call	_calibrateB	;wreg free
  1071  000EAE                     
  1072                           ;main.c: 90:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1073  000EAE  0E19               	movlw	25
  1074  000EB0  6E5E               	movwf	(??_main+1)^0,c
  1075  000EB2  0E5A               	movlw	90
  1076  000EB4  6E5D               	movwf	??_main^0,c
  1077  000EB6  0EB2               	movlw	178
  1078  000EB8                     u4237:
  1079  000EB8  2EE8               	decfsz	wreg,f,c
  1080  000EBA  D7FE               	bra	u4237
  1081  000EBC  2E5D               	decfsz	??_main^0,f,c
  1082  000EBE  D7FC               	bra	u4237
  1083  000EC0  2E5E               	decfsz	(??_main+1)^0,f,c
  1084  000EC2  D7FA               	bra	u4237
  1085  000EC4                     l4025:
  1086                           
  1087                           ;main.c: 93:         LATHbits.LATH3 = 1;
  1088  000EC4  8680               	bsf	128,3,c	;volatile
  1089  000EC6                     l372:
  1090  000EC6  B68E               	btfsc	142,3,c	;volatile
  1091  000EC8  EF68  F007         	goto	u3931
  1092  000ECC  EF6A  F007         	goto	u3930
  1093  000ED0                     u3931:
  1094  000ED0  EF63  F007         	goto	l372
  1095  000ED4                     u3930:
  1096  000ED4                     
  1097                           ;main.c: 95:         if (!PORTFbits.RF3){
  1098  000ED4  B68E               	btfsc	142,3,c	;volatile
  1099  000ED6  EF6F  F007         	goto	u3941
  1100  000EDA  EF71  F007         	goto	u3940
  1101  000EDE                     u3941:
  1102  000EDE  EF7B  F007         	goto	l4031
  1103  000EE2                     u3940:
  1104  000EE2                     
  1105                           ;main.c: 96:             LATHbits.LATH3 = 0;
  1106  000EE2  9680               	bcf	128,3,c	;volatile
  1107  000EE4                     
  1108                           ;main.c: 97:             TMR0H = 0;
  1109  000EE4  0E00               	movlw	0
  1110  000EE6  6ED4               	movwf	212,c	;volatile
  1111                           
  1112                           ;main.c: 98:             TMR0L = 0;
  1113  000EE8  0E00               	movlw	0
  1114  000EEA  6ED3               	movwf	211,c	;volatile
  1115                           
  1116                           ;main.c: 99:             cal = 1;
  1117  000EEC  0E00               	movlw	0
  1118  000EEE  0100               	movlb	0	; () banked
  1119  000EF0  6F83               	movwf	(main@cal+1)& (0+255),b
  1120  000EF2  0E01               	movlw	1
  1121  000EF4  6F82               	movwf	main@cal& (0+255),b
  1122  000EF6                     l4031:
  1123                           
  1124                           ;main.c: 76:     while(cal==0){
  1125  000EF6  0100               	movlb	0	; () banked
  1126  000EF8  5182               	movf	main@cal& (0+255),w,b
  1127  000EFA  1183               	iorwf	(main@cal+1)& (0+255),w,b
  1128  000EFC  B4D8               	btfsc	status,2,c
  1129  000EFE  EF83  F007         	goto	u3951
  1130  000F02  EF85  F007         	goto	u3950
  1131  000F06                     u3951:
  1132  000F06  EF20  F007         	goto	l363
  1133  000F0A                     u3950:
  1134  000F0A                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 104:     unsigned int check1 = 9; unsigned int check2 = 9;
  1137  000F0A  0E00               	movlw	0
  1138  000F0C  6F89               	movwf	(main@check1+1)& (0+255),b
  1139  000F0E  0E09               	movlw	9
  1140  000F10  6F88               	movwf	main@check1& (0+255),b
  1141  000F12  0E00               	movlw	0
  1142  000F14  6F8B               	movwf	(main@check2+1)& (0+255),b
  1143  000F16  0E09               	movlw	9
  1144  000F18  6F8A               	movwf	main@check2& (0+255),b
  1145                           
  1146                           ;main.c: 105:     unsigned int check3 = 9; unsigned int check4 = 9;
  1147  000F1A  0E00               	movlw	0
  1148  000F1C  6F8D               	movwf	(main@check3+1)& (0+255),b
  1149  000F1E  0E09               	movlw	9
  1150  000F20  6F8C               	movwf	main@check3& (0+255),b
  1151  000F22  0E00               	movlw	0
  1152  000F24  6F85               	movwf	(main@check4+1)& (0+255),b
  1153  000F26  0E09               	movlw	9
  1154  000F28  6F84               	movwf	main@check4& (0+255),b
  1155                           
  1156                           ;main.c: 106:     unsigned int count = 0;
  1157  000F2A  0E00               	movlw	0
  1158  000F2C  6F8F               	movwf	(main@count+1)& (0+255),b
  1159  000F2E  0E00               	movlw	0
  1160  000F30  6F8E               	movwf	main@count& (0+255),b
  1161                           
  1162                           ;main.c: 107:     unsigned int reset_timer = 1;
  1163  000F32  0E00               	movlw	0
  1164  000F34  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1165  000F36  0E01               	movlw	1
  1166  000F38  6F86               	movwf	main@reset_timer& (0+255),b
  1167  000F3A                     l4035:
  1168                           
  1169                           ;main.c: 111:         unsigned int detected_colour;;main.c: 112:         read_colours(&t
      +                          est);
  1170  000F3A  0E92               	movlw	low main@test
  1171  000F3C  6E0C               	movwf	read_colours@m^0,c
  1172  000F3E  0E00               	movlw	high main@test
  1173  000F40  6E0D               	movwf	(read_colours@m+1)^0,c
  1174  000F42  EC6D  F019         	call	_read_colours	;wreg free
  1175  000F46                     
  1176                           ;main.c: 113:         if (count==0) {check1 = determine_color_new(&test);}
  1177  000F46  0100               	movlb	0	; () banked
  1178  000F48  518E               	movf	main@count& (0+255),w,b
  1179  000F4A  118F               	iorwf	(main@count+1)& (0+255),w,b
  1180  000F4C  A4D8               	btfss	status,2,c
  1181  000F4E  EFAB  F007         	goto	u3961
  1182  000F52  EFAD  F007         	goto	u3960
  1183  000F56                     u3961:
  1184  000F56  EFB7  F007         	goto	l4041
  1185  000F5A                     u3960:
  1186  000F5A                     
  1187                           ; BSR set to: 0
  1188  000F5A  0E92               	movlw	low main@test
  1189  000F5C  6E5B               	movwf	determine_color_new@m^0,c
  1190  000F5E  0E00               	movlw	high main@test
  1191  000F60  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1192  000F62  EC16  F000         	call	_determine_color_new	;wreg free
  1193  000F66  C05B  F088         	movff	?_determine_color_new,main@check1
  1194  000F6A  C05C  F089         	movff	?_determine_color_new+1,main@check1+1
  1195  000F6E                     l4041:
  1196                           
  1197                           ;main.c: 114:         if (count==1) {check2 = determine_color_new(&test);}
  1198  000F6E  0100               	movlb	0	; () banked
  1199  000F70  058E               	decf	main@count& (0+255),w,b
  1200  000F72  118F               	iorwf	(main@count+1)& (0+255),w,b
  1201  000F74  A4D8               	btfss	status,2,c
  1202  000F76  EFBF  F007         	goto	u3971
  1203  000F7A  EFC1  F007         	goto	u3970
  1204  000F7E                     u3971:
  1205  000F7E  EFCB  F007         	goto	l4045
  1206  000F82                     u3970:
  1207  000F82                     
  1208                           ; BSR set to: 0
  1209  000F82  0E92               	movlw	low main@test
  1210  000F84  6E5B               	movwf	determine_color_new@m^0,c
  1211  000F86  0E00               	movlw	high main@test
  1212  000F88  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1213  000F8A  EC16  F000         	call	_determine_color_new	;wreg free
  1214  000F8E  C05B  F08A         	movff	?_determine_color_new,main@check2
  1215  000F92  C05C  F08B         	movff	?_determine_color_new+1,main@check2+1
  1216  000F96                     l4045:
  1217                           
  1218                           ;main.c: 115:         if (count==2) {check3 = determine_color_new(&test);}
  1219  000F96  0E02               	movlw	2
  1220  000F98  0100               	movlb	0	; () banked
  1221  000F9A  198E               	xorwf	main@count& (0+255),w,b
  1222  000F9C  118F               	iorwf	(main@count+1)& (0+255),w,b
  1223  000F9E  A4D8               	btfss	status,2,c
  1224  000FA0  EFD4  F007         	goto	u3981
  1225  000FA4  EFD6  F007         	goto	u3980
  1226  000FA8                     u3981:
  1227  000FA8  EFE0  F007         	goto	l4049
  1228  000FAC                     u3980:
  1229  000FAC                     
  1230                           ; BSR set to: 0
  1231  000FAC  0E92               	movlw	low main@test
  1232  000FAE  6E5B               	movwf	determine_color_new@m^0,c
  1233  000FB0  0E00               	movlw	high main@test
  1234  000FB2  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1235  000FB4  EC16  F000         	call	_determine_color_new	;wreg free
  1236  000FB8  C05B  F08C         	movff	?_determine_color_new,main@check3
  1237  000FBC  C05C  F08D         	movff	?_determine_color_new+1,main@check3+1
  1238  000FC0                     l4049:
  1239                           
  1240                           ;main.c: 116:         if (count==3) {check4 = determine_color_new(&test);count=0;}
  1241  000FC0  0E03               	movlw	3
  1242  000FC2  0100               	movlb	0	; () banked
  1243  000FC4  198E               	xorwf	main@count& (0+255),w,b
  1244  000FC6  118F               	iorwf	(main@count+1)& (0+255),w,b
  1245  000FC8  A4D8               	btfss	status,2,c
  1246  000FCA  EFE9  F007         	goto	u3991
  1247  000FCE  EFEB  F007         	goto	u3990
  1248  000FD2                     u3991:
  1249  000FD2  EFFC  F007         	goto	l4055
  1250  000FD6                     u3990:
  1251  000FD6                     
  1252                           ; BSR set to: 0
  1253  000FD6  0E92               	movlw	low main@test
  1254  000FD8  6E5B               	movwf	determine_color_new@m^0,c
  1255  000FDA  0E00               	movlw	high main@test
  1256  000FDC  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1257  000FDE  EC16  F000         	call	_determine_color_new	;wreg free
  1258  000FE2  C05B  F084         	movff	?_determine_color_new,main@check4
  1259  000FE6  C05C  F085         	movff	?_determine_color_new+1,main@check4+1
  1260  000FEA  0E00               	movlw	0
  1261  000FEC  0100               	movlb	0	; () banked
  1262  000FEE  6F8F               	movwf	(main@count+1)& (0+255),b
  1263  000FF0  0E00               	movlw	0
  1264  000FF2  6F8E               	movwf	main@count& (0+255),b
  1265  000FF4  EFFE  F007         	goto	l4057
  1266  000FF8                     l4055:
  1267                           
  1268                           ; BSR set to: 0
  1269  000FF8  4B8E               	infsnz	main@count& (0+255),f,b
  1270  000FFA  2B8F               	incf	(main@count+1)& (0+255),f,b
  1271  000FFC                     l4057:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;main.c: 120:         if (check1==check2 && check2==check3 && check3==check4){
  1275  000FFC  518A               	movf	main@check2& (0+255),w,b
  1276  000FFE  1988               	xorwf	main@check1& (0+255),w,b
  1277  001000  E107               	bnz	u4001
  1278  001002  518B               	movf	(main@check2+1)& (0+255),w,b
  1279  001004  1989               	xorwf	(main@check1+1)& (0+255),w,b
  1280  001006  A4D8               	btfss	status,2,c
  1281  001008  EF08  F008         	goto	u4001
  1282  00100C  EF0A  F008         	goto	u4000
  1283  001010                     u4001:
  1284  001010  EF77  F008         	goto	l4079
  1285  001014                     u4000:
  1286  001014                     
  1287                           ; BSR set to: 0
  1288  001014  518C               	movf	main@check3& (0+255),w,b
  1289  001016  198A               	xorwf	main@check2& (0+255),w,b
  1290  001018  E107               	bnz	u4011
  1291  00101A  518D               	movf	(main@check3+1)& (0+255),w,b
  1292  00101C  198B               	xorwf	(main@check2+1)& (0+255),w,b
  1293  00101E  A4D8               	btfss	status,2,c
  1294  001020  EF14  F008         	goto	u4011
  1295  001024  EF16  F008         	goto	u4010
  1296  001028                     u4011:
  1297  001028  EF77  F008         	goto	l4079
  1298  00102C                     u4010:
  1299  00102C                     
  1300                           ; BSR set to: 0
  1301  00102C  5184               	movf	main@check4& (0+255),w,b
  1302  00102E  198C               	xorwf	main@check3& (0+255),w,b
  1303  001030  E107               	bnz	u4021
  1304  001032  5185               	movf	(main@check4+1)& (0+255),w,b
  1305  001034  198D               	xorwf	(main@check3+1)& (0+255),w,b
  1306  001036  A4D8               	btfss	status,2,c
  1307  001038  EF20  F008         	goto	u4021
  1308  00103C  EF22  F008         	goto	u4020
  1309  001040                     u4021:
  1310  001040  EF77  F008         	goto	l4079
  1311  001044                     u4020:
  1312  001044                     
  1313                           ; BSR set to: 0
  1314                           ;main.c: 121:             detected_colour = check1;
  1315  001044  C088  F090         	movff	main@check1,main@detected_colour
  1316  001048  C089  F091         	movff	main@check1+1,main@detected_colour+1
  1317  00104C                     
  1318                           ; BSR set to: 0
  1319                           ;main.c: 122:             if (detected_colour >= 0 && detected_colour <= 7){
  1320  00104C  5191               	movf	(main@detected_colour+1)& (0+255),w,b
  1321  00104E  E107               	bnz	u4031
  1322  001050  0E08               	movlw	8
  1323  001052  5D90               	subwf	main@detected_colour& (0+255),w,b
  1324  001054  B0D8               	btfsc	status,0,c
  1325  001056  EF2F  F008         	goto	u4031
  1326  00105A  EF31  F008         	goto	u4030
  1327  00105E                     u4031:
  1328  00105E  EF4C  F008         	goto	l4073
  1329  001062                     u4030:
  1330  001062                     
  1331                           ; BSR set to: 0
  1332                           ;main.c: 123:                 updateMovementCount(detected_colour, movementArray, moveme
      +                          nts, timerArray);
  1333  001062  C090  F001         	movff	main@detected_colour,updateMovementCount@movementCode
  1334  001066  C091  F002         	movff	main@detected_colour+1,updateMovementCount@movementCode+1
  1335  00106A  0ED2               	movlw	low _movementArray
  1336  00106C  6E03               	movwf	updateMovementCount@movementArray^0,c
  1337  00106E  0E00               	movlw	high _movementArray
  1338  001070  6E04               	movwf	(updateMovementCount@movementArray+1)^0,c
  1339  001072  C0CC  F005         	movff	_movements,updateMovementCount@movements
  1340  001076  C0CD  F006         	movff	_movements+1,updateMovementCount@movements+1
  1341  00107A  0EE6               	movlw	low _timerArray
  1342  00107C  6E07               	movwf	updateMovementCount@timerArray^0,c
  1343  00107E  0E00               	movlw	high _timerArray
  1344  001080  6E08               	movwf	(updateMovementCount@timerArray+1)^0,c
  1345  001082  EC9E  F019         	call	_updateMovementCount	;wreg free
  1346  001086                     
  1347                           ;main.c: 124:                 movements++;
  1348  001086  0100               	movlb	0	; () banked
  1349  001088  4BCC               	infsnz	_movements& (0+255),f,b
  1350  00108A  2BCD               	incf	(_movements+1)& (0+255),f,b
  1351  00108C                     
  1352                           ; BSR set to: 0
  1353                           ;main.c: 125:                 reset_timer = 1;
  1354  00108C  0E00               	movlw	0
  1355  00108E  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1356  001090  0E01               	movlw	1
  1357  001092  6F86               	movwf	main@reset_timer& (0+255),b
  1358                           
  1359                           ;main.c: 126:             }
  1360  001094  EF67  F008         	goto	l385
  1361  001098                     l4073:
  1362                           
  1363                           ; BSR set to: 0
  1364  001098  0E09               	movlw	9
  1365  00109A  1990               	xorwf	main@detected_colour& (0+255),w,b
  1366  00109C  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1367  00109E  A4D8               	btfss	status,2,c
  1368  0010A0  EF54  F008         	goto	u4041
  1369  0010A4  EF56  F008         	goto	u4040
  1370  0010A8                     u4041:
  1371  0010A8  EF67  F008         	goto	l385
  1372  0010AC                     u4040:
  1373  0010AC                     
  1374                           ; BSR set to: 0
  1375  0010AC  0586               	decf	main@reset_timer& (0+255),w,b
  1376  0010AE  1187               	iorwf	(main@reset_timer+1)& (0+255),w,b
  1377  0010B0  A4D8               	btfss	status,2,c
  1378  0010B2  EF5D  F008         	goto	u4051
  1379  0010B6  EF5F  F008         	goto	u4050
  1380  0010BA                     u4051:
  1381  0010BA  EF67  F008         	goto	l385
  1382  0010BE                     u4050:
  1383  0010BE                     
  1384                           ; BSR set to: 0
  1385                           ;main.c: 129:                 TMR0H = 0;
  1386  0010BE  0E00               	movlw	0
  1387  0010C0  6ED4               	movwf	212,c	;volatile
  1388                           
  1389                           ;main.c: 130:                 TMR0L = 0;
  1390  0010C2  0E00               	movlw	0
  1391  0010C4  6ED3               	movwf	211,c	;volatile
  1392                           
  1393                           ;main.c: 131:                 reset_timer = 0;
  1394  0010C6  0E00               	movlw	0
  1395  0010C8  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1396  0010CA  0E00               	movlw	0
  1397  0010CC  6F86               	movwf	main@reset_timer& (0+255),b
  1398  0010CE                     l385:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;main.c: 133:             check1=9;check2=9;check3=9;check4=9;
  1402  0010CE  0E00               	movlw	0
  1403  0010D0  6F89               	movwf	(main@check1+1)& (0+255),b
  1404  0010D2  0E09               	movlw	9
  1405  0010D4  6F88               	movwf	main@check1& (0+255),b
  1406  0010D6  0E00               	movlw	0
  1407  0010D8  6F8B               	movwf	(main@check2+1)& (0+255),b
  1408  0010DA  0E09               	movlw	9
  1409  0010DC  6F8A               	movwf	main@check2& (0+255),b
  1410  0010DE  0E00               	movlw	0
  1411  0010E0  6F8D               	movwf	(main@check3+1)& (0+255),b
  1412  0010E2  0E09               	movlw	9
  1413  0010E4  6F8C               	movwf	main@check3& (0+255),b
  1414  0010E6  0E00               	movlw	0
  1415  0010E8  6F85               	movwf	(main@check4+1)& (0+255),b
  1416  0010EA  0E09               	movlw	9
  1417  0010EC  6F84               	movwf	main@check4& (0+255),b
  1418  0010EE                     l4079:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;main.c: 136:         if (detected_colour == 0){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1422  0010EE  5190               	movf	main@detected_colour& (0+255),w,b
  1423  0010F0  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1424  0010F2  A4D8               	btfss	status,2,c
  1425  0010F4  EF7E  F008         	goto	u4061
  1426  0010F8  EF80  F008         	goto	u4060
  1427  0010FC                     u4061:
  1428  0010FC  EF96  F008         	goto	l4085
  1429  001100                     u4060:
  1430  001100                     
  1431                           ; BSR set to: 0
  1432  001100  0EA6               	movlw	low main@motorL
  1433  001102  6E1D               	movwf	turnRight90@mL^0,c
  1434  001104  0E00               	movlw	high main@motorL
  1435  001106  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1436  001108  0EAF               	movlw	low main@motorR
  1437  00110A  6E1F               	movwf	turnRight90@mR^0,c
  1438  00110C  0E00               	movlw	high main@motorR
  1439  00110E  6E20               	movwf	(turnRight90@mR+1)^0,c
  1440  001110  ECDD  F014         	call	_turnRight90	;wreg free
  1441  001114  0E09               	movlw	9
  1442  001116  6E5E               	movwf	(??_main+1)^0,c
  1443  001118  0E1E               	movlw	30
  1444  00111A  6E5D               	movwf	??_main^0,c
  1445  00111C  0EE4               	movlw	228
  1446  00111E                     u4247:
  1447  00111E  2EE8               	decfsz	wreg,f,c
  1448  001120  D7FE               	bra	u4247
  1449  001122  2E5D               	decfsz	??_main^0,f,c
  1450  001124  D7FC               	bra	u4247
  1451  001126  2E5E               	decfsz	(??_main+1)^0,f,c
  1452  001128  D7FA               	bra	u4247
  1453  00112A  D000               	nop2	
  1454  00112C                     l4085:
  1455                           
  1456                           ;main.c: 137:         if (detected_colour == 1){ turnLeft90(&motorL,&motorR);_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  1457  00112C  0100               	movlb	0	; () banked
  1458  00112E  0590               	decf	main@detected_colour& (0+255),w,b
  1459  001130  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1460  001132  A4D8               	btfss	status,2,c
  1461  001134  EF9E  F008         	goto	u4071
  1462  001138  EFA0  F008         	goto	u4070
  1463  00113C                     u4071:
  1464  00113C  EFB6  F008         	goto	l4091
  1465  001140                     u4070:
  1466  001140                     
  1467                           ; BSR set to: 0
  1468  001140  0EA6               	movlw	low main@motorL
  1469  001142  6E1D               	movwf	turnLeft90@mL^0,c
  1470  001144  0E00               	movlw	high main@motorL
  1471  001146  6E1E               	movwf	(turnLeft90@mL+1)^0,c
  1472  001148  0EAF               	movlw	low main@motorR
  1473  00114A  6E1F               	movwf	turnLeft90@mR^0,c
  1474  00114C  0E00               	movlw	high main@motorR
  1475  00114E  6E20               	movwf	(turnLeft90@mR+1)^0,c
  1476  001150  EC9E  F013         	call	_turnLeft90	;wreg free
  1477  001154  0E09               	movlw	9
  1478  001156  6E5E               	movwf	(??_main+1)^0,c
  1479  001158  0E1E               	movlw	30
  1480  00115A  6E5D               	movwf	??_main^0,c
  1481  00115C  0EE4               	movlw	228
  1482  00115E                     u4257:
  1483  00115E  2EE8               	decfsz	wreg,f,c
  1484  001160  D7FE               	bra	u4257
  1485  001162  2E5D               	decfsz	??_main^0,f,c
  1486  001164  D7FC               	bra	u4257
  1487  001166  2E5E               	decfsz	(??_main+1)^0,f,c
  1488  001168  D7FA               	bra	u4257
  1489  00116A  D000               	nop2	
  1490  00116C                     l4091:
  1491                           
  1492                           ;main.c: 138:         if (detected_colour == 2){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1493  00116C  0E02               	movlw	2
  1494  00116E  0100               	movlb	0	; () banked
  1495  001170  1990               	xorwf	main@detected_colour& (0+255),w,b
  1496  001172  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1497  001174  A4D8               	btfss	status,2,c
  1498  001176  EFBF  F008         	goto	u4081
  1499  00117A  EFC1  F008         	goto	u4080
  1500  00117E                     u4081:
  1501  00117E  EFD7  F008         	goto	l4097
  1502  001182                     u4080:
  1503  001182                     
  1504                           ; BSR set to: 0
  1505  001182  0EA6               	movlw	low main@motorL
  1506  001184  6E1D               	movwf	turnRight180@mL^0,c
  1507  001186  0E00               	movlw	high main@motorL
  1508  001188  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1509  00118A  0EAF               	movlw	low main@motorR
  1510  00118C  6E1F               	movwf	turnRight180@mR^0,c
  1511  00118E  0E00               	movlw	high main@motorR
  1512  001190  6E20               	movwf	(turnRight180@mR+1)^0,c
  1513  001192  EC3E  F014         	call	_turnRight180	;wreg free
  1514  001196  0E09               	movlw	9
  1515  001198  6E5E               	movwf	(??_main+1)^0,c
  1516  00119A  0E1E               	movlw	30
  1517  00119C  6E5D               	movwf	??_main^0,c
  1518  00119E  0EE4               	movlw	228
  1519  0011A0                     u4267:
  1520  0011A0  2EE8               	decfsz	wreg,f,c
  1521  0011A2  D7FE               	bra	u4267
  1522  0011A4  2E5D               	decfsz	??_main^0,f,c
  1523  0011A6  D7FC               	bra	u4267
  1524  0011A8  2E5E               	decfsz	(??_main+1)^0,f,c
  1525  0011AA  D7FA               	bra	u4267
  1526  0011AC  D000               	nop2	
  1527  0011AE                     l4097:
  1528                           
  1529                           ;main.c: 139:         if (detected_colour == 3){ reverseTurnRight90(&motorL,&motorR);_de
      +                          lay((unsigned long)((100)*(64000000/4000.0)));}
  1530  0011AE  0E03               	movlw	3
  1531  0011B0  0100               	movlb	0	; () banked
  1532  0011B2  1990               	xorwf	main@detected_colour& (0+255),w,b
  1533  0011B4  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1534  0011B6  A4D8               	btfss	status,2,c
  1535  0011B8  EFE0  F008         	goto	u4091
  1536  0011BC  EFE2  F008         	goto	u4090
  1537  0011C0                     u4091:
  1538  0011C0  EFF8  F008         	goto	l4103
  1539  0011C4                     u4090:
  1540  0011C4                     
  1541                           ; BSR set to: 0
  1542  0011C4  0EA6               	movlw	low main@motorL
  1543  0011C6  6E25               	movwf	reverseTurnRight90@mL^0,c
  1544  0011C8  0E00               	movlw	high main@motorL
  1545  0011CA  6E26               	movwf	(reverseTurnRight90@mL+1)^0,c
  1546  0011CC  0EAF               	movlw	low main@motorR
  1547  0011CE  6E27               	movwf	reverseTurnRight90@mR^0,c
  1548  0011D0  0E00               	movlw	high main@motorR
  1549  0011D2  6E28               	movwf	(reverseTurnRight90@mR+1)^0,c
  1550  0011D4  ECBD  F017         	call	_reverseTurnRight90	;wreg free
  1551  0011D8  0E09               	movlw	9
  1552  0011DA  6E5E               	movwf	(??_main+1)^0,c
  1553  0011DC  0E1E               	movlw	30
  1554  0011DE  6E5D               	movwf	??_main^0,c
  1555  0011E0  0EE4               	movlw	228
  1556  0011E2                     u4277:
  1557  0011E2  2EE8               	decfsz	wreg,f,c
  1558  0011E4  D7FE               	bra	u4277
  1559  0011E6  2E5D               	decfsz	??_main^0,f,c
  1560  0011E8  D7FC               	bra	u4277
  1561  0011EA  2E5E               	decfsz	(??_main+1)^0,f,c
  1562  0011EC  D7FA               	bra	u4277
  1563  0011EE  D000               	nop2	
  1564  0011F0                     l4103:
  1565                           
  1566                           ;main.c: 140:         if (detected_colour == 4){ reverseTurnLeft90(&motorL,&motorR);_del
      +                          ay((unsigned long)((100)*(64000000/4000.0)));}
  1567  0011F0  0E04               	movlw	4
  1568  0011F2  0100               	movlb	0	; () banked
  1569  0011F4  1990               	xorwf	main@detected_colour& (0+255),w,b
  1570  0011F6  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1571  0011F8  A4D8               	btfss	status,2,c
  1572  0011FA  EF01  F009         	goto	u4101
  1573  0011FE  EF03  F009         	goto	u4100
  1574  001202                     u4101:
  1575  001202  EF19  F009         	goto	l4109
  1576  001206                     u4100:
  1577  001206                     
  1578                           ; BSR set to: 0
  1579  001206  0EA6               	movlw	low main@motorL
  1580  001208  6E25               	movwf	reverseTurnLeft90@mL^0,c
  1581  00120A  0E00               	movlw	high main@motorL
  1582  00120C  6E26               	movwf	(reverseTurnLeft90@mL+1)^0,c
  1583  00120E  0EAF               	movlw	low main@motorR
  1584  001210  6E27               	movwf	reverseTurnLeft90@mR^0,c
  1585  001212  0E00               	movlw	high main@motorR
  1586  001214  6E28               	movwf	(reverseTurnLeft90@mR+1)^0,c
  1587  001216  EC33  F018         	call	_reverseTurnLeft90	;wreg free
  1588  00121A  0E09               	movlw	9
  1589  00121C  6E5E               	movwf	(??_main+1)^0,c
  1590  00121E  0E1E               	movlw	30
  1591  001220  6E5D               	movwf	??_main^0,c
  1592  001222  0EE4               	movlw	228
  1593  001224                     u4287:
  1594  001224  2EE8               	decfsz	wreg,f,c
  1595  001226  D7FE               	bra	u4287
  1596  001228  2E5D               	decfsz	??_main^0,f,c
  1597  00122A  D7FC               	bra	u4287
  1598  00122C  2E5E               	decfsz	(??_main+1)^0,f,c
  1599  00122E  D7FA               	bra	u4287
  1600  001230  D000               	nop2	
  1601  001232                     l4109:
  1602                           
  1603                           ;main.c: 141:         if (detected_colour == 5){ turnRight135(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1604  001232  0E05               	movlw	5
  1605  001234  0100               	movlb	0	; () banked
  1606  001236  1990               	xorwf	main@detected_colour& (0+255),w,b
  1607  001238  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1608  00123A  A4D8               	btfss	status,2,c
  1609  00123C  EF22  F009         	goto	u4111
  1610  001240  EF24  F009         	goto	u4110
  1611  001244                     u4111:
  1612  001244  EF3A  F009         	goto	l4115
  1613  001248                     u4110:
  1614  001248                     
  1615                           ; BSR set to: 0
  1616  001248  0EA6               	movlw	low main@motorL
  1617  00124A  6E1D               	movwf	turnRight135@mL^0,c
  1618  00124C  0E00               	movlw	high main@motorL
  1619  00124E  6E1E               	movwf	(turnRight135@mL+1)^0,c
  1620  001250  0EAF               	movlw	low main@motorR
  1621  001252  6E1F               	movwf	turnRight135@mR^0,c
  1622  001254  0E00               	movlw	high main@motorR
  1623  001256  6E20               	movwf	(turnRight135@mR+1)^0,c
  1624  001258  EC7C  F015         	call	_turnRight135	;wreg free
  1625  00125C  0E09               	movlw	9
  1626  00125E  6E5E               	movwf	(??_main+1)^0,c
  1627  001260  0E1E               	movlw	30
  1628  001262  6E5D               	movwf	??_main^0,c
  1629  001264  0EE4               	movlw	228
  1630  001266                     u4297:
  1631  001266  2EE8               	decfsz	wreg,f,c
  1632  001268  D7FE               	bra	u4297
  1633  00126A  2E5D               	decfsz	??_main^0,f,c
  1634  00126C  D7FC               	bra	u4297
  1635  00126E  2E5E               	decfsz	(??_main+1)^0,f,c
  1636  001270  D7FA               	bra	u4297
  1637  001272  D000               	nop2	
  1638  001274                     l4115:
  1639                           
  1640                           ;main.c: 142:         if (detected_colour == 6){ turnLeft135(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1641  001274  0E06               	movlw	6
  1642  001276  0100               	movlb	0	; () banked
  1643  001278  1990               	xorwf	main@detected_colour& (0+255),w,b
  1644  00127A  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1645  00127C  A4D8               	btfss	status,2,c
  1646  00127E  EF43  F009         	goto	u4121
  1647  001282  EF45  F009         	goto	u4120
  1648  001286                     u4121:
  1649  001286  EF5B  F009         	goto	l4121
  1650  00128A                     u4120:
  1651  00128A                     
  1652                           ; BSR set to: 0
  1653  00128A  0EA6               	movlw	low main@motorL
  1654  00128C  6E1D               	movwf	turnLeft135@mL^0,c
  1655  00128E  0E00               	movlw	high main@motorL
  1656  001290  6E1E               	movwf	(turnLeft135@mL+1)^0,c
  1657  001292  0EAF               	movlw	low main@motorR
  1658  001294  6E1F               	movwf	turnLeft135@mR^0,c
  1659  001296  0E00               	movlw	high main@motorR
  1660  001298  6E20               	movwf	(turnLeft135@mR+1)^0,c
  1661  00129A  EC1A  F016         	call	_turnLeft135	;wreg free
  1662  00129E  0E09               	movlw	9
  1663  0012A0  6E5E               	movwf	(??_main+1)^0,c
  1664  0012A2  0E1E               	movlw	30
  1665  0012A4  6E5D               	movwf	??_main^0,c
  1666  0012A6  0EE4               	movlw	228
  1667  0012A8                     u4307:
  1668  0012A8  2EE8               	decfsz	wreg,f,c
  1669  0012AA  D7FE               	bra	u4307
  1670  0012AC  2E5D               	decfsz	??_main^0,f,c
  1671  0012AE  D7FC               	bra	u4307
  1672  0012B0  2E5E               	decfsz	(??_main+1)^0,f,c
  1673  0012B2  D7FA               	bra	u4307
  1674  0012B4  D000               	nop2	
  1675  0012B6                     l4121:
  1676                           
  1677                           ;main.c: 145:         if (detected_colour == 7 || detected_colour == 8){ White(&motorL,&
      +                          motorR,movementArray, movements, timerArray);
  1678  0012B6  0E07               	movlw	7
  1679  0012B8  0100               	movlb	0	; () banked
  1680  0012BA  1990               	xorwf	main@detected_colour& (0+255),w,b
  1681  0012BC  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1682  0012BE  B4D8               	btfsc	status,2,c
  1683  0012C0  EF64  F009         	goto	u4131
  1684  0012C4  EF66  F009         	goto	u4130
  1685  0012C8                     u4131:
  1686  0012C8  EF70  F009         	goto	l4125
  1687  0012CC                     u4130:
  1688  0012CC                     
  1689                           ; BSR set to: 0
  1690  0012CC  0E08               	movlw	8
  1691  0012CE  1990               	xorwf	main@detected_colour& (0+255),w,b
  1692  0012D0  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1693  0012D2  A4D8               	btfss	status,2,c
  1694  0012D4  EF6E  F009         	goto	u4141
  1695  0012D8  EF70  F009         	goto	u4140
  1696  0012DC                     u4141:
  1697  0012DC  EF9B  F009         	goto	l4133
  1698  0012E0                     u4140:
  1699  0012E0                     l4125:
  1700                           
  1701                           ; BSR set to: 0
  1702  0012E0  0EA6               	movlw	low main@motorL
  1703  0012E2  6E2B               	movwf	White@mL^0,c
  1704  0012E4  0E00               	movlw	high main@motorL
  1705  0012E6  6E2C               	movwf	(White@mL+1)^0,c
  1706  0012E8  0EAF               	movlw	low main@motorR
  1707  0012EA  6E2D               	movwf	White@mR^0,c
  1708  0012EC  0E00               	movlw	high main@motorR
  1709  0012EE  6E2E               	movwf	(White@mR+1)^0,c
  1710  0012F0  0ED2               	movlw	low _movementArray
  1711  0012F2  6E2F               	movwf	White@movementArray^0,c
  1712  0012F4  0E00               	movlw	high _movementArray
  1713  0012F6  6E30               	movwf	(White@movementArray+1)^0,c
  1714  0012F8  C0CC  F031         	movff	_movements,White@movements
  1715  0012FC  C0CD  F032         	movff	_movements+1,White@movements+1
  1716  001300  0EE6               	movlw	low _timerArray
  1717  001302  6E33               	movwf	White@timerArray^0,c
  1718  001304  0E00               	movlw	high _timerArray
  1719  001306  6E34               	movwf	(White@timerArray+1)^0,c
  1720  001308  EC29  F00E         	call	_White	;wreg free
  1721  00130C                     
  1722                           ;main.c: 146:             _delay((unsigned long)((100)*(64000000/4000.0)));LATDbits.LATD
      +                          7 = 1;LATHbits.LATH3 = 1;
  1723  00130C  0E09               	movlw	9
  1724  00130E  6E5E               	movwf	(??_main+1)^0,c
  1725  001310  0E1E               	movlw	30
  1726  001312  6E5D               	movwf	??_main^0,c
  1727  001314  0EE4               	movlw	228
  1728  001316                     u4317:
  1729  001316  2EE8               	decfsz	wreg,f,c
  1730  001318  D7FE               	bra	u4317
  1731  00131A  2E5D               	decfsz	??_main^0,f,c
  1732  00131C  D7FC               	bra	u4317
  1733  00131E  2E5E               	decfsz	(??_main+1)^0,f,c
  1734  001320  D7FA               	bra	u4317
  1735  001322  D000               	nop2	
  1736  001324  8E7C               	bsf	124,7,c	;volatile
  1737  001326  8680               	bsf	128,3,c	;volatile
  1738  001328                     l397:
  1739  001328  B68E               	btfsc	142,3,c	;volatile
  1740  00132A  EF99  F009         	goto	u4151
  1741  00132E  EF9B  F009         	goto	u4150
  1742  001332                     u4151:
  1743  001332  EF94  F009         	goto	l397
  1744  001336                     u4150:
  1745  001336                     l4133:
  1746                           
  1747                           ;main.c: 148:         if (detected_colour == 9){ forward(&motorL,&motorR);}
  1748  001336  0E09               	movlw	9
  1749  001338  0100               	movlb	0	; () banked
  1750  00133A  1990               	xorwf	main@detected_colour& (0+255),w,b
  1751  00133C  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1752  00133E  A4D8               	btfss	status,2,c
  1753  001340  EFA4  F009         	goto	u4161
  1754  001344  EFA6  F009         	goto	u4160
  1755  001348                     u4161:
  1756  001348  EF9D  F007         	goto	l4035
  1757  00134C                     u4160:
  1758  00134C                     
  1759                           ; BSR set to: 0
  1760  00134C  0EA6               	movlw	low main@motorL
  1761  00134E  6E19               	movwf	forward@mL^0,c
  1762  001350  0E00               	movlw	high main@motorL
  1763  001352  6E1A               	movwf	(forward@mL+1)^0,c
  1764  001354  0EAF               	movlw	low main@motorR
  1765  001356  6E1B               	movwf	forward@mR^0,c
  1766  001358  0E00               	movlw	high main@motorR
  1767  00135A  6E1C               	movwf	(forward@mR+1)^0,c
  1768  00135C  ECF0  F019         	call	_forward	;wreg free
  1769  001360  EF9D  F007         	goto	l4035
  1770  001364  EF14  F000         	goto	start
  1771  001368                     __end_of_main:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _updateMovementCount *****************
  1775 ;; Defined at:
  1776 ;;		line 203 in file "color.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  movementCode    2    0[COMRAM] unsigned int 
  1779 ;;  movementArra    2    2[COMRAM] PTR unsigned int 
  1780 ;;		 -> movementArray(20), 
  1781 ;;  movements       2    4[COMRAM] unsigned int 
  1782 ;;  timerArray      2    6[COMRAM] PTR unsigned int 
  1783 ;;		 -> timerArray(20), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  tempTimerVal    2   10[COMRAM] unsigned int 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1795 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;Total ram usage:       12 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text1
  1810  00333C                     __ptext1:
  1811                           	callstack 0
  1812  00333C                     _updateMovementCount:
  1813                           	callstack 29
  1814  00333C                     
  1815                           ;color.c: 203: void updateMovementCount(unsigned int movementCode,unsigned int movementA
      +                          rray[], unsigned int movements,unsigned int timerArray[]);color.c: 204: {;color.c: 205: 
      +                              unsigned int tempTimerVal = TMR0L;
  1816  00333C  CFD3 F00B          	movff	4051,updateMovementCount@tempTimerVal	;volatile
  1817  003340  6A0C               	clrf	(updateMovementCount@tempTimerVal+1)^0,c
  1818  003342                     
  1819                           ;color.c: 206:     tempTimerVal |= (TMR0H << 8);
  1820  003342  50D4               	movf	212,w,c	;volatile
  1821  003344  6E0A               	movwf	(??_updateMovementCount+1)^0,c
  1822  003346  6A09               	clrf	??_updateMovementCount^0,c
  1823  003348  5009               	movf	??_updateMovementCount^0,w,c
  1824  00334A  120B               	iorwf	updateMovementCount@tempTimerVal^0,f,c
  1825  00334C  500A               	movf	(??_updateMovementCount+1)^0,w,c
  1826  00334E  120C               	iorwf	(updateMovementCount@tempTimerVal+1)^0,f,c
  1827  003350                     
  1828                           ;color.c: 207:     timerArray[movements] = tempTimerVal;
  1829  003350  90D8               	bcf	status,0,c
  1830  003352  3405               	rlcf	updateMovementCount@movements^0,w,c
  1831  003354  6ED9               	movwf	fsr2l,c
  1832  003356  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1833  003358  6EDA               	movwf	fsr2h,c
  1834  00335A  5007               	movf	updateMovementCount@timerArray^0,w,c
  1835  00335C  26D9               	addwf	fsr2l,f,c
  1836  00335E  5008               	movf	(updateMovementCount@timerArray+1)^0,w,c
  1837  003360  22DA               	addwfc	fsr2h,f,c
  1838  003362  C00B  FFDE         	movff	updateMovementCount@tempTimerVal,postinc2
  1839  003366  C00C  FFDD         	movff	updateMovementCount@tempTimerVal+1,postdec2
  1840  00336A                     
  1841                           ;color.c: 208:     movementArray[movements] = movementCode;
  1842  00336A  90D8               	bcf	status,0,c
  1843  00336C  3405               	rlcf	updateMovementCount@movements^0,w,c
  1844  00336E  6ED9               	movwf	fsr2l,c
  1845  003370  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1846  003372  6EDA               	movwf	fsr2h,c
  1847  003374  5003               	movf	updateMovementCount@movementArray^0,w,c
  1848  003376  26D9               	addwf	fsr2l,f,c
  1849  003378  5004               	movf	(updateMovementCount@movementArray+1)^0,w,c
  1850  00337A  22DA               	addwfc	fsr2h,f,c
  1851  00337C  C001  FFDE         	movff	updateMovementCount@movementCode,postinc2
  1852  003380  C002  FFDD         	movff	updateMovementCount@movementCode+1,postdec2
  1853  003384                     
  1854                           ;color.c: 209:     TMR0H = 0;
  1855  003384  0E00               	movlw	0
  1856  003386  6ED4               	movwf	212,c	;volatile
  1857  003388                     
  1858                           ;color.c: 210:     TMR0L = 0;
  1859  003388  0E00               	movlw	0
  1860  00338A  6ED3               	movwf	211,c	;volatile
  1861  00338C  0012               	return		;funcret
  1862  00338E                     __end_of_updateMovementCount:
  1863                           	callstack 0
  1864                           
  1865 ;; *************** function _read_colours *****************
  1866 ;; Defined at:
  1867 ;;		line 88 in file "color.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  m               2   11[COMRAM] PTR struct RGB_val
  1870 ;;		 -> main@test(20), 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 4
  1889 ;; This function calls:
  1890 ;;		_color_read_Blue
  1891 ;;		_color_read_Clear
  1892 ;;		_color_read_Green
  1893 ;;		_color_read_Red
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text2
  1900  0032DA                     __ptext2:
  1901                           	callstack 0
  1902  0032DA                     _read_colours:
  1903                           	callstack 26
  1904  0032DA                     
  1905                           ;color.c: 89:     (m->C) = color_read_Clear();
  1906  0032DA  EC19  F01A         	call	_color_read_Clear	;wreg free
  1907  0032DE  EE20 F00C          	lfsr	2,12
  1908  0032E2  500C               	movf	read_colours@m^0,w,c
  1909  0032E4  26D9               	addwf	fsr2l,f,c
  1910  0032E6  500D               	movf	(read_colours@m+1)^0,w,c
  1911  0032E8  22DA               	addwfc	fsr2h,f,c
  1912  0032EA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1913  0032EE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1914                           
  1915                           ;color.c: 90:     (m->R) = color_read_Red();
  1916  0032F2  EC41  F01A         	call	_color_read_Red	;wreg free
  1917  0032F6  EE20 F00E          	lfsr	2,14
  1918  0032FA  500C               	movf	read_colours@m^0,w,c
  1919  0032FC  26D9               	addwf	fsr2l,f,c
  1920  0032FE  500D               	movf	(read_colours@m+1)^0,w,c
  1921  003300  22DA               	addwfc	fsr2h,f,c
  1922  003302  C005  FFDE         	movff	?_color_read_Red,postinc2
  1923  003306  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1924                           
  1925                           ;color.c: 91:     (m->G) = color_read_Green();
  1926  00330A  EC69  F01A         	call	_color_read_Green	;wreg free
  1927  00330E  EE20 F010          	lfsr	2,16
  1928  003312  500C               	movf	read_colours@m^0,w,c
  1929  003314  26D9               	addwf	fsr2l,f,c
  1930  003316  500D               	movf	(read_colours@m+1)^0,w,c
  1931  003318  22DA               	addwfc	fsr2h,f,c
  1932  00331A  C005  FFDE         	movff	?_color_read_Green,postinc2
  1933  00331E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1934                           
  1935                           ;color.c: 92:     (m->B) = color_read_Blue();
  1936  003322  EC91  F01A         	call	_color_read_Blue	;wreg free
  1937  003326  EE20 F012          	lfsr	2,18
  1938  00332A  500C               	movf	read_colours@m^0,w,c
  1939  00332C  26D9               	addwf	fsr2l,f,c
  1940  00332E  500D               	movf	(read_colours@m+1)^0,w,c
  1941  003330  22DA               	addwfc	fsr2h,f,c
  1942  003332  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1943  003336  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1944  00333A  0012               	return		;funcret
  1945  00333C                     __end_of_read_colours:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _color_read_Clear *****************
  1949 ;; Defined at:
  1950 ;;		line 34 in file "color.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  tmp             2    9[COMRAM] unsigned int 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2    4[COMRAM] unsigned int 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:        7 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 3
  1971 ;; This function calls:
  1972 ;;		_I2C_2_Master_Read
  1973 ;;		_I2C_2_Master_RepStart
  1974 ;;		_I2C_2_Master_Start
  1975 ;;		_I2C_2_Master_Stop
  1976 ;;		_I2C_2_Master_Write
  1977 ;; This function is called by:
  1978 ;;		_read_colours
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text3
  1983  003432                     __ptext3:
  1984                           	callstack 0
  1985  003432                     _color_read_Clear:
  1986                           	callstack 26
  1987  003432                     
  1988                           ;color.c: 36:  unsigned int tmp;;color.c: 37:     I2C_2_Master_Start();
  1989  003432  ECE9  F01B         	call	_I2C_2_Master_Start	;wreg free
  1990                           
  1991                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x00);
  1992  003436  0E52               	movlw	82
  1993  003438  ECD8  F01B         	call	_I2C_2_Master_Write
  1994                           
  1995                           ;color.c: 39:  I2C_2_Master_Write(0xA0 | 0x14);
  1996  00343C  0EB4               	movlw	180
  1997  00343E  ECD8  F01B         	call	_I2C_2_Master_Write
  1998                           
  1999                           ;color.c: 40:  I2C_2_Master_RepStart();
  2000  003442  ECEE  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2001                           
  2002                           ;color.c: 41:  I2C_2_Master_Write(0x52 | 0x01);
  2003  003446  0E53               	movlw	83
  2004  003448  ECD8  F01B         	call	_I2C_2_Master_Write
  2005                           
  2006                           ;color.c: 42:  tmp=I2C_2_Master_Read(1);
  2007  00344C  0E01               	movlw	1
  2008  00344E  EC22  F01B         	call	_I2C_2_Master_Read
  2009  003452  6E07               	movwf	??_color_read_Clear^0,c
  2010  003454  5007               	movf	??_color_read_Clear^0,w,c
  2011  003456  6E0A               	movwf	color_read_Clear@tmp^0,c
  2012  003458  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2013                           
  2014                           ;color.c: 43:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2015  00345A  0E00               	movlw	0
  2016  00345C  EC22  F01B         	call	_I2C_2_Master_Read
  2017  003460  6E07               	movwf	??_color_read_Clear^0,c
  2018  003462  5007               	movf	??_color_read_Clear^0,w,c
  2019  003464  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2020  003466  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2021  003468  500A               	movf	color_read_Clear@tmp^0,w,c
  2022  00346A  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2023  00346C  6E0A               	movwf	color_read_Clear@tmp^0,c
  2024  00346E  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2025  003470  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2026  003472  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2027                           
  2028                           ;color.c: 44:     I2C_2_Master_Stop();
  2029  003474  ECE4  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2030  003478                     
  2031                           ;color.c: 45:     return tmp;
  2032  003478  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2033  00347C  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2034  003480  0012               	return		;funcret
  2035  003482                     __end_of_color_read_Clear:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _initUSART4 *****************
  2039 ;; Defined at:
  2040 ;;		line 4 in file "serial.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text4
  2069  003754                     __ptext4:
  2070                           	callstack 0
  2071  003754                     _initUSART4:
  2072                           	callstack 29
  2073  003754                     
  2074                           ;serial.c: 8:     RC0PPS = 0x12;
  2075  003754  0E12               	movlw	18
  2076  003756  010E               	movlb	14	; () banked
  2077  003758  6F62               	movwf	98,b	;volatile
  2078                           
  2079                           ;serial.c: 9:     RX4PPS = 0x11;
  2080  00375A  0E11               	movlw	17
  2081  00375C  6F15               	movwf	21,b	;volatile
  2082  00375E                     
  2083                           ; BSR set to: 14
  2084                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  2085  00375E  8283               	bsf	131,1,c	;volatile
  2086  003760                     
  2087                           ; BSR set to: 14
  2088                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2089  003760  97E9               	bcf	233,3,b	;volatile
  2090  003762                     
  2091                           ; BSR set to: 14
  2092                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2093  003762  95E8               	bcf	232,2,b	;volatile
  2094                           
  2095                           ;serial.c: 14:     SP4BRGL = 51;
  2096  003764  0E33               	movlw	51
  2097  003766  6FE5               	movwf	229,b	;volatile
  2098                           
  2099                           ;serial.c: 15:     SP4BRGH = 0;
  2100  003768  0E00               	movlw	0
  2101  00376A  6FE6               	movwf	230,b	;volatile
  2102  00376C                     
  2103                           ; BSR set to: 14
  2104                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2105  00376C  89E7               	bsf	231,4,b	;volatile
  2106  00376E                     
  2107                           ; BSR set to: 14
  2108                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2109  00376E  8BE8               	bsf	232,5,b	;volatile
  2110  003770                     
  2111                           ; BSR set to: 14
  2112                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2113  003770  8FE7               	bsf	231,7,b	;volatile
  2114  003772                     
  2115                           ; BSR set to: 14
  2116  003772  0012               	return		;funcret
  2117  003774                     __end_of_initUSART4:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _initDCmotorsPWM *****************
  2121 ;; Defined at:
  2122 ;;		line 5 in file "dc_motor.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  PWMperiod       2    0[COMRAM] int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;Total ram usage:        2 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151  003602                     __ptext5:
  2152                           	callstack 0
  2153  003602                     _initDCmotorsPWM:
  2154                           	callstack 29
  2155  003602                     
  2156                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  2157  003602  9485               	bcf	133,2,c	;volatile
  2158                           
  2159                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  2160  003604  9E83               	bcf	131,7,c	;volatile
  2161                           
  2162                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  2163  003606  9885               	bcf	133,4,c	;volatile
  2164                           
  2165                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  2166  003608  9C87               	bcf	135,6,c	;volatile
  2167                           
  2168                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  2169  00360A  947D               	bcf	125,2,c	;volatile
  2170                           
  2171                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  2172  00360C  9E7B               	bcf	123,7,c	;volatile
  2173                           
  2174                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  2175  00360E  987D               	bcf	125,4,c	;volatile
  2176                           
  2177                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
  2178  003610  9C7F               	bcf	127,6,c	;volatile
  2179  003612                     
  2180                           ;dc_motor.c: 17:     T2CONbits.CKPS= 0b100;
  2181  003612  50BD               	movf	189,w,c	;volatile
  2182  003614  0B8F               	andlw	-113
  2183  003616  0940               	iorlw	64
  2184  003618  6EBD               	movwf	189,c	;volatile
  2185                           
  2186                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2187  00361A  0EE0               	movlw	-32
  2188  00361C  16BE               	andwf	190,f,c	;volatile
  2189                           
  2190                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2191  00361E  50BF               	movf	191,w,c	;volatile
  2192  003620  0BF0               	andlw	-16
  2193  003622  0901               	iorlw	1
  2194  003624  6EBF               	movwf	191,c	;volatile
  2195                           
  2196                           ;dc_motor.c: 22:     T2PR= 99;
  2197  003626  0E63               	movlw	99
  2198  003628  6EBC               	movwf	188,c	;volatile
  2199  00362A                     
  2200                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  2201  00362A  8EBD               	bsf	189,7,c	;volatile
  2202                           
  2203                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  2204  00362C  0E0A               	movlw	10
  2205  00362E  010E               	movlb	14	; () banked
  2206  003630  6F74               	movwf	116,b	;volatile
  2207                           
  2208                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  2209  003632  0E0B               	movlw	11
  2210  003634  6F69               	movwf	105,b	;volatile
  2211                           
  2212                           ;dc_motor.c: 28:     PWM6DCH=0;
  2213  003636  0E00               	movlw	0
  2214  003638  6EA3               	movwf	163,c	;volatile
  2215                           
  2216                           ;dc_motor.c: 29:     PWM7DCH=0;
  2217  00363A  0E00               	movlw	0
  2218  00363C  6EA0               	movwf	160,c	;volatile
  2219  00363E                     
  2220                           ; BSR set to: 14
  2221                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  2222  00363E  8EA4               	bsf	164,7,c	;volatile
  2223  003640                     
  2224                           ; BSR set to: 14
  2225                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  2226  003640  8EA1               	bsf	161,7,c	;volatile
  2227  003642                     
  2228                           ; BSR set to: 14
  2229  003642  0012               	return		;funcret
  2230  003644                     __end_of_initDCmotorsPWM:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _determine_color_new *****************
  2234 ;; Defined at:
  2235 ;;		line 112 in file "color.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  m               2   90[COMRAM] PTR struct RGB_val
  2238 ;;		 -> main@test(20), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  RelB            4   30[BANK0 ] float 
  2241 ;;  RelG            4   26[BANK0 ] float 
  2242 ;;  RelR            4   22[BANK0 ] float 
  2243 ;;  lumin           2   20[BANK0 ] unsigned int 
  2244 ;;  out             2   18[BANK0 ] unsigned int 
  2245 ;;  BlueRatio       2   16[BANK0 ] unsigned int 
  2246 ;;  GreenRatio      2   14[BANK0 ] unsigned int 
  2247 ;;  RedRatio        2   12[BANK0 ] unsigned int 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   90[COMRAM] unsigned int 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;Total ram usage:       36 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 3
  2264 ;; This function calls:
  2265 ;;		___fladd
  2266 ;;		___fldiv
  2267 ;;		___flmul
  2268 ;;		___fltol
  2269 ;;		___xxtofl
  2270 ;;		_isbtw
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text6
  2277  00002C                     __ptext6:
  2278                           	callstack 0
  2279  00002C                     _determine_color_new:
  2280                           	callstack 27
  2281  00002C                     
  2282                           ;color.c: 113:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 114:     float
      +                           RelR, RelG, RelB;;color.c: 115:     unsigned int out = 9;
  2283  00002C  0E00               	movlw	0
  2284  00002E  0100               	movlb	0	; () banked
  2285  000030  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2286  000032  0E09               	movlw	9
  2287  000034  6F72               	movwf	determine_color_new@out& (0+255),b
  2288  000036                     
  2289                           ; BSR set to: 0
  2290                           ;color.c: 119:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2291  000036  0E59               	movlw	89
  2292  000038  6E2C               	movwf	___flmul@a^0,c
  2293  00003A  0E17               	movlw	23
  2294  00003C  6E2D               	movwf	(___flmul@a+1)^0,c
  2295  00003E  0E37               	movlw	55
  2296  000040  6E2E               	movwf	(___flmul@a+2)^0,c
  2297  000042  0E3F               	movlw	63
  2298  000044  6E2F               	movwf	(___flmul@a+3)^0,c
  2299  000046  EE20 F010          	lfsr	2,16
  2300  00004A  505B               	movf	determine_color_new@m^0,w,c
  2301  00004C  26D9               	addwf	fsr2l,f,c
  2302  00004E  505C               	movf	(determine_color_new@m+1)^0,w,c
  2303  000050  22DA               	addwfc	fsr2h,f,c
  2304  000052  CFDE F060          	movff	postinc2,??_determine_color_new
  2305  000056  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2306  00005A  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2307  00005E  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2308  000062  6A03               	clrf	(___xxtofl@val+2)^0,c
  2309  000064  6A04               	clrf	(___xxtofl@val+3)^0,c
  2310  000066  0E00               	movlw	0
  2311  000068  ECC4  F012         	call	___xxtofl
  2312  00006C  C001  F028         	movff	?___xxtofl,___flmul@b
  2313  000070  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2314  000074  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2315  000078  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2316  00007C  EC14  F00C         	call	___flmul	;wreg free
  2317  000080  C028  F045         	movff	?___flmul,___fladd@a
  2318  000084  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2319  000088  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2320  00008C  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2321  000090  0ED0               	movlw	208
  2322  000092  6E2C               	movwf	___flmul@a^0,c
  2323  000094  0EB3               	movlw	179
  2324  000096  6E2D               	movwf	(___flmul@a+1)^0,c
  2325  000098  0E59               	movlw	89
  2326  00009A  6E2E               	movwf	(___flmul@a+2)^0,c
  2327  00009C  0E3E               	movlw	62
  2328  00009E  6E2F               	movwf	(___flmul@a+3)^0,c
  2329  0000A0  EE20 F00E          	lfsr	2,14
  2330  0000A4  505B               	movf	determine_color_new@m^0,w,c
  2331  0000A6  26D9               	addwf	fsr2l,f,c
  2332  0000A8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2333  0000AA  22DA               	addwfc	fsr2h,f,c
  2334  0000AC  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2335  0000B0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2336  0000B4  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2337  0000B8  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2338  0000BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2339  0000BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2340  0000C0  0E00               	movlw	0
  2341  0000C2  ECC4  F012         	call	___xxtofl
  2342  0000C6  C001  F028         	movff	?___xxtofl,___flmul@b
  2343  0000CA  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2344  0000CE  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2345  0000D2  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2346  0000D6  EC14  F00C         	call	___flmul	;wreg free
  2347  0000DA  C028  F041         	movff	?___flmul,___fladd@b
  2348  0000DE  C029  F042         	movff	?___flmul+1,___fladd@b+1
  2349  0000E2  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  2350  0000E6  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  2351  0000EA  ECB4  F009         	call	___fladd	;wreg free
  2352  0000EE  C041  F068         	movff	?___fladd,_determine_color_new$2627
  2353  0000F2  C042  F069         	movff	?___fladd+1,_determine_color_new$2627+1
  2354  0000F6  C043  F06A         	movff	?___fladd+2,_determine_color_new$2627+2
  2355  0000FA  C044  F06B         	movff	?___fladd+3,_determine_color_new$2627+3
  2356  0000FE                     
  2357                           ;color.c: 119:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2358  0000FE  0E98               	movlw	152
  2359  000100  6E2C               	movwf	___flmul@a^0,c
  2360  000102  0EDD               	movlw	221
  2361  000104  6E2D               	movwf	(___flmul@a+1)^0,c
  2362  000106  0E93               	movlw	147
  2363  000108  6E2E               	movwf	(___flmul@a+2)^0,c
  2364  00010A  0E3D               	movlw	61
  2365  00010C  6E2F               	movwf	(___flmul@a+3)^0,c
  2366  00010E  EE20 F012          	lfsr	2,18
  2367  000112  505B               	movf	determine_color_new@m^0,w,c
  2368  000114  26D9               	addwf	fsr2l,f,c
  2369  000116  505C               	movf	(determine_color_new@m+1)^0,w,c
  2370  000118  22DA               	addwfc	fsr2h,f,c
  2371  00011A  CFDE F060          	movff	postinc2,??_determine_color_new
  2372  00011E  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2373  000122  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2374  000126  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2375  00012A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2376  00012C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2377  00012E  0E00               	movlw	0
  2378  000130  ECC4  F012         	call	___xxtofl
  2379  000134  C001  F028         	movff	?___xxtofl,___flmul@b
  2380  000138  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2381  00013C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2382  000140  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2383  000144  EC14  F00C         	call	___flmul	;wreg free
  2384  000148  C028  F045         	movff	?___flmul,___fladd@a
  2385  00014C  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2386  000150  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2387  000154  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2388  000158  C068  F041         	movff	_determine_color_new$2627,___fladd@b
  2389  00015C  C069  F042         	movff	_determine_color_new$2627+1,___fladd@b+1
  2390  000160  C06A  F043         	movff	_determine_color_new$2627+2,___fladd@b+2
  2391  000164  C06B  F044         	movff	_determine_color_new$2627+3,___fladd@b+3
  2392  000168  ECB4  F009         	call	___fladd	;wreg free
  2393  00016C  C041  F051         	movff	?___fladd,___fltol@f1
  2394  000170  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2395  000174  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2396  000178  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2397  00017C  ECB8  F016         	call	___fltol	;wreg free
  2398  000180  C051  F074         	movff	?___fltol,determine_color_new@lumin
  2399  000184  C052  F075         	movff	?___fltol+1,determine_color_new@lumin+1
  2400  000188                     
  2401                           ;color.c: 122:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  2402  000188  0E00               	movlw	0
  2403  00018A  6E2C               	movwf	___flmul@a^0,c
  2404  00018C  0E40               	movlw	64
  2405  00018E  6E2D               	movwf	(___flmul@a+1)^0,c
  2406  000190  0E1C               	movlw	28
  2407  000192  6E2E               	movwf	(___flmul@a+2)^0,c
  2408  000194  0E46               	movlw	70
  2409  000196  6E2F               	movwf	(___flmul@a+3)^0,c
  2410  000198  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2411  00019C  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2412  0001A0  CFDE F060          	movff	postinc2,??_determine_color_new
  2413  0001A4  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2414  0001A8  EE20 F006          	lfsr	2,6
  2415  0001AC  505B               	movf	determine_color_new@m^0,w,c
  2416  0001AE  26D9               	addwf	fsr2l,f,c
  2417  0001B0  505C               	movf	(determine_color_new@m+1)^0,w,c
  2418  0001B2  22DA               	addwfc	fsr2h,f,c
  2419  0001B4  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2420  0001B8  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2421  0001BC  0100               	movlb	0	; () banked
  2422  0001BE  5160               	movf	??_determine_color_new& (0+255),w,b
  2423  0001C0  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2424  0001C2  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2425  0001C4  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2426  0001C6  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2427  0001CA  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2428  0001CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2429  0001D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2430  0001D2  0E00               	movlw	0
  2431  0001D4  ECC4  F012         	call	___xxtofl
  2432  0001D8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2433  0001DC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2434  0001E0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2435  0001E4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2436  0001E8  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2437  0001EC  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2438  0001F0  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2439  0001F4  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2440  0001F8  EE20 F00E          	lfsr	2,14
  2441  0001FC  505B               	movf	determine_color_new@m^0,w,c
  2442  0001FE  26D9               	addwf	fsr2l,f,c
  2443  000200  505C               	movf	(determine_color_new@m+1)^0,w,c
  2444  000202  22DA               	addwfc	fsr2h,f,c
  2445  000204  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2446  000208  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2447  00020C  0100               	movlb	0	; () banked
  2448  00020E  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2449  000210  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2450  000212  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2451  000214  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2452  000216  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2453  00021A  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2454  00021E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2455  000220  6A04               	clrf	(___xxtofl@val+3)^0,c
  2456  000222  0E00               	movlw	0
  2457  000224  ECC4  F012         	call	___xxtofl
  2458  000228  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2459  00022C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2460  000230  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2461  000234  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2462  000238  EC0D  F010         	call	___fldiv	;wreg free
  2463  00023C  C00F  F028         	movff	?___fldiv,___flmul@b
  2464  000240  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2465  000244  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2466  000248  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2467  00024C  EC14  F00C         	call	___flmul	;wreg free
  2468  000250  C028  F051         	movff	?___flmul,___fltol@f1
  2469  000254  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2470  000258  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2471  00025C  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2472  000260  ECB8  F016         	call	___fltol	;wreg free
  2473  000264  C051  F06C         	movff	?___fltol,determine_color_new@RedRatio
  2474  000268  C052  F06D         	movff	?___fltol+1,determine_color_new@RedRatio+1
  2475  00026C                     
  2476                           ;color.c: 123:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  2477  00026C  0E00               	movlw	0
  2478  00026E  6E2C               	movwf	___flmul@a^0,c
  2479  000270  0E40               	movlw	64
  2480  000272  6E2D               	movwf	(___flmul@a+1)^0,c
  2481  000274  0E1C               	movlw	28
  2482  000276  6E2E               	movwf	(___flmul@a+2)^0,c
  2483  000278  0E46               	movlw	70
  2484  00027A  6E2F               	movwf	(___flmul@a+3)^0,c
  2485  00027C  EE20 F002          	lfsr	2,2
  2486  000280  505B               	movf	determine_color_new@m^0,w,c
  2487  000282  26D9               	addwf	fsr2l,f,c
  2488  000284  505C               	movf	(determine_color_new@m+1)^0,w,c
  2489  000286  22DA               	addwfc	fsr2h,f,c
  2490  000288  CFDE F060          	movff	postinc2,??_determine_color_new
  2491  00028C  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2492  000290  EE20 F008          	lfsr	2,8
  2493  000294  505B               	movf	determine_color_new@m^0,w,c
  2494  000296  26D9               	addwf	fsr2l,f,c
  2495  000298  505C               	movf	(determine_color_new@m+1)^0,w,c
  2496  00029A  22DA               	addwfc	fsr2h,f,c
  2497  00029C  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2498  0002A0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2499  0002A4  0100               	movlb	0	; () banked
  2500  0002A6  5160               	movf	??_determine_color_new& (0+255),w,b
  2501  0002A8  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2502  0002AA  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2503  0002AC  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2504  0002AE  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2505  0002B2  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2506  0002B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2507  0002B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2508  0002BA  0E00               	movlw	0
  2509  0002BC  ECC4  F012         	call	___xxtofl
  2510  0002C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2511  0002C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2512  0002C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2513  0002CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2514  0002D0  EE20 F002          	lfsr	2,2
  2515  0002D4  505B               	movf	determine_color_new@m^0,w,c
  2516  0002D6  26D9               	addwf	fsr2l,f,c
  2517  0002D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2518  0002DA  22DA               	addwfc	fsr2h,f,c
  2519  0002DC  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2520  0002E0  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2521  0002E4  EE20 F010          	lfsr	2,16
  2522  0002E8  505B               	movf	determine_color_new@m^0,w,c
  2523  0002EA  26D9               	addwf	fsr2l,f,c
  2524  0002EC  505C               	movf	(determine_color_new@m+1)^0,w,c
  2525  0002EE  22DA               	addwfc	fsr2h,f,c
  2526  0002F0  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2527  0002F4  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2528  0002F8  0100               	movlb	0	; () banked
  2529  0002FA  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2530  0002FC  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2531  0002FE  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2532  000300  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2533  000302  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2534  000306  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2535  00030A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2536  00030C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2537  00030E  0E00               	movlw	0
  2538  000310  ECC4  F012         	call	___xxtofl
  2539  000314  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2540  000318  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2541  00031C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2542  000320  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2543  000324  EC0D  F010         	call	___fldiv	;wreg free
  2544  000328  C00F  F028         	movff	?___fldiv,___flmul@b
  2545  00032C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2546  000330  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2547  000334  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2548  000338  EC14  F00C         	call	___flmul	;wreg free
  2549  00033C  C028  F051         	movff	?___flmul,___fltol@f1
  2550  000340  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2551  000344  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2552  000348  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2553  00034C  ECB8  F016         	call	___fltol	;wreg free
  2554  000350  C051  F06E         	movff	?___fltol,determine_color_new@GreenRatio
  2555  000354  C052  F06F         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  2556  000358                     
  2557                           ;color.c: 124:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  2558  000358  0E00               	movlw	0
  2559  00035A  6E2C               	movwf	___flmul@a^0,c
  2560  00035C  0E40               	movlw	64
  2561  00035E  6E2D               	movwf	(___flmul@a+1)^0,c
  2562  000360  0E1C               	movlw	28
  2563  000362  6E2E               	movwf	(___flmul@a+2)^0,c
  2564  000364  0E46               	movlw	70
  2565  000366  6E2F               	movwf	(___flmul@a+3)^0,c
  2566  000368  EE20 F004          	lfsr	2,4
  2567  00036C  505B               	movf	determine_color_new@m^0,w,c
  2568  00036E  26D9               	addwf	fsr2l,f,c
  2569  000370  505C               	movf	(determine_color_new@m+1)^0,w,c
  2570  000372  22DA               	addwfc	fsr2h,f,c
  2571  000374  CFDE F060          	movff	postinc2,??_determine_color_new
  2572  000378  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2573  00037C  EE20 F00A          	lfsr	2,10
  2574  000380  505B               	movf	determine_color_new@m^0,w,c
  2575  000382  26D9               	addwf	fsr2l,f,c
  2576  000384  505C               	movf	(determine_color_new@m+1)^0,w,c
  2577  000386  22DA               	addwfc	fsr2h,f,c
  2578  000388  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2579  00038C  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2580  000390  0100               	movlb	0	; () banked
  2581  000392  5160               	movf	??_determine_color_new& (0+255),w,b
  2582  000394  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2583  000396  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2584  000398  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2585  00039A  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2586  00039E  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2587  0003A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2588  0003A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2589  0003A6  0E00               	movlw	0
  2590  0003A8  ECC4  F012         	call	___xxtofl
  2591  0003AC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2592  0003B0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2593  0003B4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2594  0003B8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2595  0003BC  EE20 F004          	lfsr	2,4
  2596  0003C0  505B               	movf	determine_color_new@m^0,w,c
  2597  0003C2  26D9               	addwf	fsr2l,f,c
  2598  0003C4  505C               	movf	(determine_color_new@m+1)^0,w,c
  2599  0003C6  22DA               	addwfc	fsr2h,f,c
  2600  0003C8  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2601  0003CC  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2602  0003D0  EE20 F012          	lfsr	2,18
  2603  0003D4  505B               	movf	determine_color_new@m^0,w,c
  2604  0003D6  26D9               	addwf	fsr2l,f,c
  2605  0003D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2606  0003DA  22DA               	addwfc	fsr2h,f,c
  2607  0003DC  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2608  0003E0  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2609  0003E4  0100               	movlb	0	; () banked
  2610  0003E6  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2611  0003E8  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2612  0003EA  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2613  0003EC  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2614  0003EE  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2615  0003F2  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2616  0003F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2617  0003F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2618  0003FA  0E00               	movlw	0
  2619  0003FC  ECC4  F012         	call	___xxtofl
  2620  000400  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2621  000404  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2622  000408  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2623  00040C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2624  000410  EC0D  F010         	call	___fldiv	;wreg free
  2625  000414  C00F  F028         	movff	?___fldiv,___flmul@b
  2626  000418  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2627  00041C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2628  000420  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2629  000424  EC14  F00C         	call	___flmul	;wreg free
  2630  000428  C028  F051         	movff	?___flmul,___fltol@f1
  2631  00042C  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2632  000430  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2633  000434  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2634  000438  ECB8  F016         	call	___fltol	;wreg free
  2635  00043C  C051  F070         	movff	?___fltol,determine_color_new@BlueRatio
  2636  000440  C052  F071         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  2637  000444                     
  2638                           ;color.c: 127:     RelR = (float)RedRatio / (float)GreenRatio;
  2639  000444  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  2640  000448  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  2641  00044C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2642  00044E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2643  000450  0E00               	movlw	0
  2644  000452  ECC4  F012         	call	___xxtofl
  2645  000456  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2646  00045A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2647  00045E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2648  000462  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2649  000466  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  2650  00046A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  2651  00046E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2652  000470  6A04               	clrf	(___xxtofl@val+3)^0,c
  2653  000472  0E00               	movlw	0
  2654  000474  ECC4  F012         	call	___xxtofl
  2655  000478  C001  F013         	movff	?___xxtofl,___fldiv@a
  2656  00047C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2657  000480  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2658  000484  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2659  000488  EC0D  F010         	call	___fldiv	;wreg free
  2660  00048C  C00F  F076         	movff	?___fldiv,determine_color_new@RelR
  2661  000490  C010  F077         	movff	?___fldiv+1,determine_color_new@RelR+1
  2662  000494  C011  F078         	movff	?___fldiv+2,determine_color_new@RelR+2
  2663  000498  C012  F079         	movff	?___fldiv+3,determine_color_new@RelR+3
  2664  00049C                     
  2665                           ;color.c: 128:     RelG = (float)RedRatio / (float)BlueRatio;
  2666  00049C  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  2667  0004A0  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  2668  0004A4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2669  0004A6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2670  0004A8  0E00               	movlw	0
  2671  0004AA  ECC4  F012         	call	___xxtofl
  2672  0004AE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2673  0004B2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2674  0004B6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2675  0004BA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2676  0004BE  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  2677  0004C2  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  2678  0004C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2679  0004C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2680  0004CA  0E00               	movlw	0
  2681  0004CC  ECC4  F012         	call	___xxtofl
  2682  0004D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2683  0004D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2684  0004D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2685  0004DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2686  0004E0  EC0D  F010         	call	___fldiv	;wreg free
  2687  0004E4  C00F  F07A         	movff	?___fldiv,determine_color_new@RelG
  2688  0004E8  C010  F07B         	movff	?___fldiv+1,determine_color_new@RelG+1
  2689  0004EC  C011  F07C         	movff	?___fldiv+2,determine_color_new@RelG+2
  2690  0004F0  C012  F07D         	movff	?___fldiv+3,determine_color_new@RelG+3
  2691  0004F4                     
  2692                           ;color.c: 129:     RelB = (float)BlueRatio / (float)GreenRatio;
  2693  0004F4  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  2694  0004F8  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  2695  0004FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2696  0004FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2697  000500  0E00               	movlw	0
  2698  000502  ECC4  F012         	call	___xxtofl
  2699  000506  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2700  00050A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2701  00050E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2702  000512  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2703  000516  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  2704  00051A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  2705  00051E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2706  000520  6A04               	clrf	(___xxtofl@val+3)^0,c
  2707  000522  0E00               	movlw	0
  2708  000524  ECC4  F012         	call	___xxtofl
  2709  000528  C001  F013         	movff	?___xxtofl,___fldiv@a
  2710  00052C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2711  000530  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2712  000534  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2713  000538  EC0D  F010         	call	___fldiv	;wreg free
  2714  00053C  C00F  F07E         	movff	?___fldiv,determine_color_new@RelB
  2715  000540  C010  F07F         	movff	?___fldiv+1,determine_color_new@RelB+1
  2716  000544  C011  F080         	movff	?___fldiv+2,determine_color_new@RelB+2
  2717  000548  C012  F081         	movff	?___fldiv+3,determine_color_new@RelB+3
  2718  00054C                     
  2719                           ;color.c: 132:     if (RelR < 0) {RelR = 0;}
  2720  00054C  0100               	movlb	0	; () banked
  2721  00054E  BF79               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  2722  000550  EFAE  F002         	goto	u3380
  2723  000554  EFAC  F002         	goto	u3381
  2724  000558                     u3381:
  2725  000558  EFB6  F002         	goto	l3727
  2726  00055C                     u3380:
  2727  00055C                     
  2728                           ; BSR set to: 0
  2729  00055C  0E00               	movlw	0
  2730  00055E  6F76               	movwf	determine_color_new@RelR& (0+255),b
  2731  000560  0E00               	movlw	0
  2732  000562  6F77               	movwf	(determine_color_new@RelR+1)& (0+255),b
  2733  000564  0E00               	movlw	0
  2734  000566  6F78               	movwf	(determine_color_new@RelR+2)& (0+255),b
  2735  000568  0E00               	movlw	0
  2736  00056A  6F79               	movwf	(determine_color_new@RelR+3)& (0+255),b
  2737  00056C                     l3727:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;color.c: 133:     if (RelG < 0) {RelG = 0;}
  2741  00056C  BF7D               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  2742  00056E  EFBD  F002         	goto	u3390
  2743  000572  EFBB  F002         	goto	u3391
  2744  000576                     u3391:
  2745  000576  EFC5  F002         	goto	l3731
  2746  00057A                     u3390:
  2747  00057A                     
  2748                           ; BSR set to: 0
  2749  00057A  0E00               	movlw	0
  2750  00057C  6F7A               	movwf	determine_color_new@RelG& (0+255),b
  2751  00057E  0E00               	movlw	0
  2752  000580  6F7B               	movwf	(determine_color_new@RelG+1)& (0+255),b
  2753  000582  0E00               	movlw	0
  2754  000584  6F7C               	movwf	(determine_color_new@RelG+2)& (0+255),b
  2755  000586  0E00               	movlw	0
  2756  000588  6F7D               	movwf	(determine_color_new@RelG+3)& (0+255),b
  2757  00058A                     l3731:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;color.c: 134:     if (RelB < 0) {RelB = 0;}
  2761  00058A  BF81               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  2762  00058C  EFCC  F002         	goto	u3400
  2763  000590  EFCA  F002         	goto	u3401
  2764  000594                     u3401:
  2765  000594  EFD4  F002         	goto	l3735
  2766  000598                     u3400:
  2767  000598                     
  2768                           ; BSR set to: 0
  2769  000598  0E00               	movlw	0
  2770  00059A  6F7E               	movwf	determine_color_new@RelB& (0+255),b
  2771  00059C  0E00               	movlw	0
  2772  00059E  6F7F               	movwf	(determine_color_new@RelB+1)& (0+255),b
  2773  0005A0  0E00               	movlw	0
  2774  0005A2  6F80               	movwf	(determine_color_new@RelB+2)& (0+255),b
  2775  0005A4  0E00               	movlw	0
  2776  0005A6  6F81               	movwf	(determine_color_new@RelB+3)& (0+255),b
  2777  0005A8                     l3735:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;color.c: 139:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1 && lumin>800)
  2781  0005A8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2782  0005AC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2783  0005B0  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  2784  0005B4  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  2785  0005B8  0E33               	movlw	51
  2786  0005BA  6E11               	movwf	isbtw@low^0,c
  2787  0005BC  0E33               	movlw	51
  2788  0005BE  6E12               	movwf	(isbtw@low+1)^0,c
  2789  0005C0  0EA3               	movlw	163
  2790  0005C2  6E13               	movwf	(isbtw@low+2)^0,c
  2791  0005C4  0E40               	movlw	64
  2792  0005C6  6E14               	movwf	(isbtw@low+3)^0,c
  2793  0005C8  0E00               	movlw	0
  2794  0005CA  6E15               	movwf	isbtw@high^0,c
  2795  0005CC  0E00               	movlw	0
  2796  0005CE  6E16               	movwf	(isbtw@high+1)^0,c
  2797  0005D0  0EA4               	movlw	164
  2798  0005D2  6E17               	movwf	(isbtw@high+2)^0,c
  2799  0005D4  0E41               	movlw	65
  2800  0005D6  6E18               	movwf	(isbtw@high+3)^0,c
  2801  0005D8  ECF6  F018         	call	_isbtw	;wreg free
  2802  0005DC  040D               	decf	?_isbtw^0,w,c
  2803  0005DE  100E               	iorwf	(?_isbtw+1)^0,w,c
  2804  0005E0  A4D8               	btfss	status,2,c
  2805  0005E2  EFF5  F002         	goto	u3411
  2806  0005E6  EFF7  F002         	goto	u3410
  2807  0005EA                     u3411:
  2808  0005EA  EF4D  F003         	goto	l3745
  2809  0005EE                     u3410:
  2810  0005EE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  2811  0005F2  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  2812  0005F6  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  2813  0005FA  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  2814  0005FE  0ECD               	movlw	205
  2815  000600  6E11               	movwf	isbtw@low^0,c
  2816  000602  0ECC               	movlw	204
  2817  000604  6E12               	movwf	(isbtw@low+1)^0,c
  2818  000606  0E0C               	movlw	12
  2819  000608  6E13               	movwf	(isbtw@low+2)^0,c
  2820  00060A  0E40               	movlw	64
  2821  00060C  6E14               	movwf	(isbtw@low+3)^0,c
  2822  00060E  0E33               	movlw	51
  2823  000610  6E15               	movwf	isbtw@high^0,c
  2824  000612  0E33               	movlw	51
  2825  000614  6E16               	movwf	(isbtw@high+1)^0,c
  2826  000616  0E73               	movlw	115
  2827  000618  6E17               	movwf	(isbtw@high+2)^0,c
  2828  00061A  0E40               	movlw	64
  2829  00061C  6E18               	movwf	(isbtw@high+3)^0,c
  2830  00061E  ECF6  F018         	call	_isbtw	;wreg free
  2831  000622  040D               	decf	?_isbtw^0,w,c
  2832  000624  100E               	iorwf	(?_isbtw+1)^0,w,c
  2833  000626  A4D8               	btfss	status,2,c
  2834  000628  EF18  F003         	goto	u3421
  2835  00062C  EF1A  F003         	goto	u3420
  2836  000630                     u3421:
  2837  000630  EF4D  F003         	goto	l3745
  2838  000634                     u3420:
  2839  000634  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  2840  000638  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  2841  00063C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  2842  000640  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  2843  000644  0E66               	movlw	102
  2844  000646  6E11               	movwf	isbtw@low^0,c
  2845  000648  0E66               	movlw	102
  2846  00064A  6E12               	movwf	(isbtw@low+1)^0,c
  2847  00064C  0EE6               	movlw	230
  2848  00064E  6E13               	movwf	(isbtw@low+2)^0,c
  2849  000650  0E3F               	movlw	63
  2850  000652  6E14               	movwf	(isbtw@low+3)^0,c
  2851  000654  0E00               	movlw	0
  2852  000656  6E15               	movwf	isbtw@high^0,c
  2853  000658  0E00               	movlw	0
  2854  00065A  6E16               	movwf	(isbtw@high+1)^0,c
  2855  00065C  0EB0               	movlw	176
  2856  00065E  6E17               	movwf	(isbtw@high+2)^0,c
  2857  000660  0E40               	movlw	64
  2858  000662  6E18               	movwf	(isbtw@high+3)^0,c
  2859  000664  ECF6  F018         	call	_isbtw	;wreg free
  2860  000668  040D               	decf	?_isbtw^0,w,c
  2861  00066A  100E               	iorwf	(?_isbtw+1)^0,w,c
  2862  00066C  A4D8               	btfss	status,2,c
  2863  00066E  EF3B  F003         	goto	u3431
  2864  000672  EF3D  F003         	goto	u3430
  2865  000676                     u3431:
  2866  000676  EF4D  F003         	goto	l3745
  2867  00067A                     u3430:
  2868  00067A  0E21               	movlw	33
  2869  00067C  0100               	movlb	0	; () banked
  2870  00067E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  2871  000680  0E03               	movlw	3
  2872  000682  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  2873  000684  A0D8               	btfss	status,0,c
  2874  000686  EF47  F003         	goto	u3441
  2875  00068A  EF49  F003         	goto	u3440
  2876  00068E                     u3441:
  2877  00068E  EF4D  F003         	goto	l3745
  2878  000692                     u3440:
  2879  000692                     
  2880                           ; BSR set to: 0
  2881                           ;color.c: 140:     {out = 0;}
  2882  000692  0E00               	movlw	0
  2883  000694  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2884  000696  0E00               	movlw	0
  2885  000698  6F72               	movwf	determine_color_new@out& (0+255),b
  2886  00069A                     l3745:
  2887                           
  2888                           ;color.c: 143:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1 && lumin>835)
  2889  00069A  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2890  00069E  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2891  0006A2  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  2892  0006A6  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  2893  0006AA  0ECD               	movlw	205
  2894  0006AC  6E11               	movwf	isbtw@low^0,c
  2895  0006AE  0ECC               	movlw	204
  2896  0006B0  6E12               	movwf	(isbtw@low+1)^0,c
  2897  0006B2  0E4C               	movlw	76
  2898  0006B4  6E13               	movwf	(isbtw@low+2)^0,c
  2899  0006B6  0E3E               	movlw	62
  2900  0006B8  6E14               	movwf	(isbtw@low+3)^0,c
  2901  0006BA  0E48               	movlw	72
  2902  0006BC  6E15               	movwf	isbtw@high^0,c
  2903  0006BE  0EE1               	movlw	225
  2904  0006C0  6E16               	movwf	(isbtw@high+1)^0,c
  2905  0006C2  0EFA               	movlw	250
  2906  0006C4  6E17               	movwf	(isbtw@high+2)^0,c
  2907  0006C6  0E3E               	movlw	62
  2908  0006C8  6E18               	movwf	(isbtw@high+3)^0,c
  2909  0006CA  ECF6  F018         	call	_isbtw	;wreg free
  2910  0006CE  040D               	decf	?_isbtw^0,w,c
  2911  0006D0  100E               	iorwf	(?_isbtw+1)^0,w,c
  2912  0006D2  A4D8               	btfss	status,2,c
  2913  0006D4  EF6E  F003         	goto	u3451
  2914  0006D8  EF70  F003         	goto	u3450
  2915  0006DC                     u3451:
  2916  0006DC  EFC6  F003         	goto	l3755
  2917  0006E0                     u3450:
  2918  0006E0  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  2919  0006E4  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  2920  0006E8  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  2921  0006EC  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  2922  0006F0  0E29               	movlw	41
  2923  0006F2  6E11               	movwf	isbtw@low^0,c
  2924  0006F4  0E5C               	movlw	92
  2925  0006F6  6E12               	movwf	(isbtw@low+1)^0,c
  2926  0006F8  0E8F               	movlw	143
  2927  0006FA  6E13               	movwf	(isbtw@low+2)^0,c
  2928  0006FC  0E3E               	movlw	62
  2929  0006FE  6E14               	movwf	(isbtw@low+3)^0,c
  2930  000700  0E3D               	movlw	61
  2931  000702  6E15               	movwf	isbtw@high^0,c
  2932  000704  0E0A               	movlw	10
  2933  000706  6E16               	movwf	(isbtw@high+1)^0,c
  2934  000708  0E17               	movlw	23
  2935  00070A  6E17               	movwf	(isbtw@high+2)^0,c
  2936  00070C  0E3F               	movlw	63
  2937  00070E  6E18               	movwf	(isbtw@high+3)^0,c
  2938  000710  ECF6  F018         	call	_isbtw	;wreg free
  2939  000714  040D               	decf	?_isbtw^0,w,c
  2940  000716  100E               	iorwf	(?_isbtw+1)^0,w,c
  2941  000718  A4D8               	btfss	status,2,c
  2942  00071A  EF91  F003         	goto	u3461
  2943  00071E  EF93  F003         	goto	u3460
  2944  000722                     u3461:
  2945  000722  EFC6  F003         	goto	l3755
  2946  000726                     u3460:
  2947  000726  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  2948  00072A  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  2949  00072E  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  2950  000732  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  2951  000736  0E33               	movlw	51
  2952  000738  6E11               	movwf	isbtw@low^0,c
  2953  00073A  0E33               	movlw	51
  2954  00073C  6E12               	movwf	(isbtw@low+1)^0,c
  2955  00073E  0E33               	movlw	51
  2956  000740  6E13               	movwf	(isbtw@low+2)^0,c
  2957  000742  0E3F               	movlw	63
  2958  000744  6E14               	movwf	(isbtw@low+3)^0,c
  2959  000746  0E66               	movlw	102
  2960  000748  6E15               	movwf	isbtw@high^0,c
  2961  00074A  0E66               	movlw	102
  2962  00074C  6E16               	movwf	(isbtw@high+1)^0,c
  2963  00074E  0E66               	movlw	102
  2964  000750  6E17               	movwf	(isbtw@high+2)^0,c
  2965  000752  0E3F               	movlw	63
  2966  000754  6E18               	movwf	(isbtw@high+3)^0,c
  2967  000756  ECF6  F018         	call	_isbtw	;wreg free
  2968  00075A  040D               	decf	?_isbtw^0,w,c
  2969  00075C  100E               	iorwf	(?_isbtw+1)^0,w,c
  2970  00075E  A4D8               	btfss	status,2,c
  2971  000760  EFB4  F003         	goto	u3471
  2972  000764  EFB6  F003         	goto	u3470
  2973  000768                     u3471:
  2974  000768  EFC6  F003         	goto	l3755
  2975  00076C                     u3470:
  2976  00076C  0E44               	movlw	68
  2977  00076E  0100               	movlb	0	; () banked
  2978  000770  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  2979  000772  0E03               	movlw	3
  2980  000774  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  2981  000776  A0D8               	btfss	status,0,c
  2982  000778  EFC0  F003         	goto	u3481
  2983  00077C  EFC2  F003         	goto	u3480
  2984  000780                     u3481:
  2985  000780  EFC6  F003         	goto	l3755
  2986  000784                     u3480:
  2987  000784                     
  2988                           ; BSR set to: 0
  2989                           ;color.c: 144:     {out = 1;}
  2990  000784  0E00               	movlw	0
  2991  000786  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2992  000788  0E01               	movlw	1
  2993  00078A  6F72               	movwf	determine_color_new@out& (0+255),b
  2994  00078C                     l3755:
  2995                           
  2996                           ;color.c: 147:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1 && lumin>800)
  2997  00078C  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  2998  000790  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  2999  000794  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3000  000798  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3001  00079C  0ECD               	movlw	205
  3002  00079E  6E11               	movwf	isbtw@low^0,c
  3003  0007A0  0ECC               	movlw	204
  3004  0007A2  6E12               	movwf	(isbtw@low+1)^0,c
  3005  0007A4  0ECC               	movlw	204
  3006  0007A6  6E13               	movwf	(isbtw@low+2)^0,c
  3007  0007A8  0E3D               	movlw	61
  3008  0007AA  6E14               	movwf	(isbtw@low+3)^0,c
  3009  0007AC  0ECD               	movlw	205
  3010  0007AE  6E15               	movwf	isbtw@high^0,c
  3011  0007B0  0ECC               	movlw	204
  3012  0007B2  6E16               	movwf	(isbtw@high+1)^0,c
  3013  0007B4  0E0C               	movlw	12
  3014  0007B6  6E17               	movwf	(isbtw@high+2)^0,c
  3015  0007B8  0E3F               	movlw	63
  3016  0007BA  6E18               	movwf	(isbtw@high+3)^0,c
  3017  0007BC  ECF6  F018         	call	_isbtw	;wreg free
  3018  0007C0  040D               	decf	?_isbtw^0,w,c
  3019  0007C2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3020  0007C4  A4D8               	btfss	status,2,c
  3021  0007C6  EFE7  F003         	goto	u3491
  3022  0007CA  EFE9  F003         	goto	u3490
  3023  0007CE                     u3491:
  3024  0007CE  EF3F  F004         	goto	l3765
  3025  0007D2                     u3490:
  3026  0007D2  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3027  0007D6  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3028  0007DA  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3029  0007DE  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3030  0007E2  0ECD               	movlw	205
  3031  0007E4  6E11               	movwf	isbtw@low^0,c
  3032  0007E6  0ECC               	movlw	204
  3033  0007E8  6E12               	movwf	(isbtw@low+1)^0,c
  3034  0007EA  0ECC               	movlw	204
  3035  0007EC  6E13               	movwf	(isbtw@low+2)^0,c
  3036  0007EE  0E3D               	movlw	61
  3037  0007F0  6E14               	movwf	(isbtw@low+3)^0,c
  3038  0007F2  0E14               	movlw	20
  3039  0007F4  6E15               	movwf	isbtw@high^0,c
  3040  0007F6  0EAE               	movlw	174
  3041  0007F8  6E16               	movwf	(isbtw@high+1)^0,c
  3042  0007FA  0EC7               	movlw	199
  3043  0007FC  6E17               	movwf	(isbtw@high+2)^0,c
  3044  0007FE  0E3E               	movlw	62
  3045  000800  6E18               	movwf	(isbtw@high+3)^0,c
  3046  000802  ECF6  F018         	call	_isbtw	;wreg free
  3047  000806  040D               	decf	?_isbtw^0,w,c
  3048  000808  100E               	iorwf	(?_isbtw+1)^0,w,c
  3049  00080A  A4D8               	btfss	status,2,c
  3050  00080C  EF0A  F004         	goto	u3501
  3051  000810  EF0C  F004         	goto	u3500
  3052  000814                     u3501:
  3053  000814  EF3F  F004         	goto	l3765
  3054  000818                     u3500:
  3055  000818  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3056  00081C  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3057  000820  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3058  000824  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3059  000828  0E00               	movlw	0
  3060  00082A  6E11               	movwf	isbtw@low^0,c
  3061  00082C  0E00               	movlw	0
  3062  00082E  6E12               	movwf	(isbtw@low+1)^0,c
  3063  000830  0E80               	movlw	128
  3064  000832  6E13               	movwf	(isbtw@low+2)^0,c
  3065  000834  0E3F               	movlw	63
  3066  000836  6E14               	movwf	(isbtw@low+3)^0,c
  3067  000838  0E9A               	movlw	154
  3068  00083A  6E15               	movwf	isbtw@high^0,c
  3069  00083C  0E99               	movlw	153
  3070  00083E  6E16               	movwf	(isbtw@high+1)^0,c
  3071  000840  0E99               	movlw	153
  3072  000842  6E17               	movwf	(isbtw@high+2)^0,c
  3073  000844  0E3F               	movlw	63
  3074  000846  6E18               	movwf	(isbtw@high+3)^0,c
  3075  000848  ECF6  F018         	call	_isbtw	;wreg free
  3076  00084C  040D               	decf	?_isbtw^0,w,c
  3077  00084E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3078  000850  A4D8               	btfss	status,2,c
  3079  000852  EF2D  F004         	goto	u3511
  3080  000856  EF2F  F004         	goto	u3510
  3081  00085A                     u3511:
  3082  00085A  EF3F  F004         	goto	l3765
  3083  00085E                     u3510:
  3084  00085E  0E21               	movlw	33
  3085  000860  0100               	movlb	0	; () banked
  3086  000862  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3087  000864  0E03               	movlw	3
  3088  000866  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3089  000868  A0D8               	btfss	status,0,c
  3090  00086A  EF39  F004         	goto	u3521
  3091  00086E  EF3B  F004         	goto	u3520
  3092  000872                     u3521:
  3093  000872  EF3F  F004         	goto	l3765
  3094  000876                     u3520:
  3095  000876                     
  3096                           ; BSR set to: 0
  3097                           ;color.c: 148:     {out = 2;}
  3098  000876  0E00               	movlw	0
  3099  000878  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3100  00087A  0E02               	movlw	2
  3101  00087C  6F72               	movwf	determine_color_new@out& (0+255),b
  3102  00087E                     l3765:
  3103                           
  3104                           ;color.c: 151:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1 && lumin>850)
  3105  00087E  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3106  000882  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3107  000886  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3108  00088A  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3109  00088E  0E9A               	movlw	154
  3110  000890  6E11               	movwf	isbtw@low^0,c
  3111  000892  0E99               	movlw	153
  3112  000894  6E12               	movwf	(isbtw@low+1)^0,c
  3113  000896  0E99               	movlw	153
  3114  000898  6E13               	movwf	(isbtw@low+2)^0,c
  3115  00089A  0E3F               	movlw	63
  3116  00089C  6E14               	movwf	(isbtw@low+3)^0,c
  3117  00089E  0E33               	movlw	51
  3118  0008A0  6E15               	movwf	isbtw@high^0,c
  3119  0008A2  0E33               	movlw	51
  3120  0008A4  6E16               	movwf	(isbtw@high+1)^0,c
  3121  0008A6  0EB3               	movlw	179
  3122  0008A8  6E17               	movwf	(isbtw@high+2)^0,c
  3123  0008AA  0E3F               	movlw	63
  3124  0008AC  6E18               	movwf	(isbtw@high+3)^0,c
  3125  0008AE  ECF6  F018         	call	_isbtw	;wreg free
  3126  0008B2  040D               	decf	?_isbtw^0,w,c
  3127  0008B4  100E               	iorwf	(?_isbtw+1)^0,w,c
  3128  0008B6  A4D8               	btfss	status,2,c
  3129  0008B8  EF60  F004         	goto	u3531
  3130  0008BC  EF62  F004         	goto	u3530
  3131  0008C0                     u3531:
  3132  0008C0  EFB8  F004         	goto	l3775
  3133  0008C4                     u3530:
  3134  0008C4  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3135  0008C8  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3136  0008CC  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3137  0008D0  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3138  0008D4  0E00               	movlw	0
  3139  0008D6  6E11               	movwf	isbtw@low^0,c
  3140  0008D8  0E00               	movlw	0
  3141  0008DA  6E12               	movwf	(isbtw@low+1)^0,c
  3142  0008DC  0EC0               	movlw	192
  3143  0008DE  6E13               	movwf	(isbtw@low+2)^0,c
  3144  0008E0  0E3F               	movlw	63
  3145  0008E2  6E14               	movwf	(isbtw@low+3)^0,c
  3146  0008E4  0EEC               	movlw	236
  3147  0008E6  6E15               	movwf	isbtw@high^0,c
  3148  0008E8  0E51               	movlw	81
  3149  0008EA  6E16               	movwf	(isbtw@high+1)^0,c
  3150  0008EC  0ED8               	movlw	216
  3151  0008EE  6E17               	movwf	(isbtw@high+2)^0,c
  3152  0008F0  0E3F               	movlw	63
  3153  0008F2  6E18               	movwf	(isbtw@high+3)^0,c
  3154  0008F4  ECF6  F018         	call	_isbtw	;wreg free
  3155  0008F8  040D               	decf	?_isbtw^0,w,c
  3156  0008FA  100E               	iorwf	(?_isbtw+1)^0,w,c
  3157  0008FC  A4D8               	btfss	status,2,c
  3158  0008FE  EF83  F004         	goto	u3541
  3159  000902  EF85  F004         	goto	u3540
  3160  000906                     u3541:
  3161  000906  EFB8  F004         	goto	l3775
  3162  00090A                     u3540:
  3163  00090A  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3164  00090E  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3165  000912  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3166  000916  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3167  00091A  0ECD               	movlw	205
  3168  00091C  6E11               	movwf	isbtw@low^0,c
  3169  00091E  0ECC               	movlw	204
  3170  000920  6E12               	movwf	(isbtw@low+1)^0,c
  3171  000922  0E4C               	movlw	76
  3172  000924  6E13               	movwf	(isbtw@low+2)^0,c
  3173  000926  0E3F               	movlw	63
  3174  000928  6E14               	movwf	(isbtw@low+3)^0,c
  3175  00092A  0E66               	movlw	102
  3176  00092C  6E15               	movwf	isbtw@high^0,c
  3177  00092E  0E66               	movlw	102
  3178  000930  6E16               	movwf	(isbtw@high+1)^0,c
  3179  000932  0E66               	movlw	102
  3180  000934  6E17               	movwf	(isbtw@high+2)^0,c
  3181  000936  0E3F               	movlw	63
  3182  000938  6E18               	movwf	(isbtw@high+3)^0,c
  3183  00093A  ECF6  F018         	call	_isbtw	;wreg free
  3184  00093E  040D               	decf	?_isbtw^0,w,c
  3185  000940  100E               	iorwf	(?_isbtw+1)^0,w,c
  3186  000942  A4D8               	btfss	status,2,c
  3187  000944  EFA6  F004         	goto	u3551
  3188  000948  EFA8  F004         	goto	u3550
  3189  00094C                     u3551:
  3190  00094C  EFB8  F004         	goto	l3775
  3191  000950                     u3550:
  3192  000950  0E53               	movlw	83
  3193  000952  0100               	movlb	0	; () banked
  3194  000954  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3195  000956  0E03               	movlw	3
  3196  000958  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3197  00095A  A0D8               	btfss	status,0,c
  3198  00095C  EFB2  F004         	goto	u3561
  3199  000960  EFB4  F004         	goto	u3560
  3200  000964                     u3561:
  3201  000964  EFB8  F004         	goto	l3775
  3202  000968                     u3560:
  3203  000968                     
  3204                           ; BSR set to: 0
  3205                           ;color.c: 152:     {out = 3;}
  3206  000968  0E00               	movlw	0
  3207  00096A  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3208  00096C  0E03               	movlw	3
  3209  00096E  6F72               	movwf	determine_color_new@out& (0+255),b
  3210  000970                     l3775:
  3211                           
  3212                           ;color.c: 155:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1 && lumin>830)
  3213  000970  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3214  000974  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3215  000978  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3216  00097C  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3217  000980  0E14               	movlw	20
  3218  000982  6E11               	movwf	isbtw@low^0,c
  3219  000984  0EAE               	movlw	174
  3220  000986  6E12               	movwf	(isbtw@low+1)^0,c
  3221  000988  0EC7               	movlw	199
  3222  00098A  6E13               	movwf	(isbtw@low+2)^0,c
  3223  00098C  0E3F               	movlw	63
  3224  00098E  6E14               	movwf	(isbtw@low+3)^0,c
  3225  000990  0E71               	movlw	113
  3226  000992  6E15               	movwf	isbtw@high^0,c
  3227  000994  0E3D               	movlw	61
  3228  000996  6E16               	movwf	(isbtw@high+1)^0,c
  3229  000998  0EEA               	movlw	234
  3230  00099A  6E17               	movwf	(isbtw@high+2)^0,c
  3231  00099C  0E3F               	movlw	63
  3232  00099E  6E18               	movwf	(isbtw@high+3)^0,c
  3233  0009A0  ECF6  F018         	call	_isbtw	;wreg free
  3234  0009A4  040D               	decf	?_isbtw^0,w,c
  3235  0009A6  100E               	iorwf	(?_isbtw+1)^0,w,c
  3236  0009A8  A4D8               	btfss	status,2,c
  3237  0009AA  EFD9  F004         	goto	u3571
  3238  0009AE  EFDB  F004         	goto	u3570
  3239  0009B2                     u3571:
  3240  0009B2  EF31  F005         	goto	l3785
  3241  0009B6                     u3570:
  3242  0009B6  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3243  0009BA  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3244  0009BE  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3245  0009C2  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3246  0009C6  0EA4               	movlw	164
  3247  0009C8  6E11               	movwf	isbtw@low^0,c
  3248  0009CA  0E70               	movlw	112
  3249  0009CC  6E12               	movwf	(isbtw@low+1)^0,c
  3250  0009CE  0E9D               	movlw	157
  3251  0009D0  6E13               	movwf	(isbtw@low+2)^0,c
  3252  0009D2  0E3F               	movlw	63
  3253  0009D4  6E14               	movwf	(isbtw@low+3)^0,c
  3254  0009D6  0E00               	movlw	0
  3255  0009D8  6E15               	movwf	isbtw@high^0,c
  3256  0009DA  0E00               	movlw	0
  3257  0009DC  6E16               	movwf	(isbtw@high+1)^0,c
  3258  0009DE  0EC0               	movlw	192
  3259  0009E0  6E17               	movwf	(isbtw@high+2)^0,c
  3260  0009E2  0E3F               	movlw	63
  3261  0009E4  6E18               	movwf	(isbtw@high+3)^0,c
  3262  0009E6  ECF6  F018         	call	_isbtw	;wreg free
  3263  0009EA  040D               	decf	?_isbtw^0,w,c
  3264  0009EC  100E               	iorwf	(?_isbtw+1)^0,w,c
  3265  0009EE  A4D8               	btfss	status,2,c
  3266  0009F0  EFFC  F004         	goto	u3581
  3267  0009F4  EFFE  F004         	goto	u3580
  3268  0009F8                     u3581:
  3269  0009F8  EF31  F005         	goto	l3785
  3270  0009FC                     u3580:
  3271  0009FC  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3272  000A00  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3273  000A04  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3274  000A08  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3275  000A0C  0E33               	movlw	51
  3276  000A0E  6E11               	movwf	isbtw@low^0,c
  3277  000A10  0E33               	movlw	51
  3278  000A12  6E12               	movwf	(isbtw@low+1)^0,c
  3279  000A14  0E93               	movlw	147
  3280  000A16  6E13               	movwf	(isbtw@low+2)^0,c
  3281  000A18  0E3F               	movlw	63
  3282  000A1A  6E14               	movwf	(isbtw@low+3)^0,c
  3283  000A1C  0E66               	movlw	102
  3284  000A1E  6E15               	movwf	isbtw@high^0,c
  3285  000A20  0E66               	movlw	102
  3286  000A22  6E16               	movwf	(isbtw@high+1)^0,c
  3287  000A24  0EA6               	movlw	166
  3288  000A26  6E17               	movwf	(isbtw@high+2)^0,c
  3289  000A28  0E3F               	movlw	63
  3290  000A2A  6E18               	movwf	(isbtw@high+3)^0,c
  3291  000A2C  ECF6  F018         	call	_isbtw	;wreg free
  3292  000A30  040D               	decf	?_isbtw^0,w,c
  3293  000A32  100E               	iorwf	(?_isbtw+1)^0,w,c
  3294  000A34  A4D8               	btfss	status,2,c
  3295  000A36  EF1F  F005         	goto	u3591
  3296  000A3A  EF21  F005         	goto	u3590
  3297  000A3E                     u3591:
  3298  000A3E  EF31  F005         	goto	l3785
  3299  000A42                     u3590:
  3300  000A42  0E3F               	movlw	63
  3301  000A44  0100               	movlb	0	; () banked
  3302  000A46  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3303  000A48  0E03               	movlw	3
  3304  000A4A  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3305  000A4C  A0D8               	btfss	status,0,c
  3306  000A4E  EF2B  F005         	goto	u3601
  3307  000A52  EF2D  F005         	goto	u3600
  3308  000A56                     u3601:
  3309  000A56  EF31  F005         	goto	l3785
  3310  000A5A                     u3600:
  3311  000A5A                     
  3312                           ; BSR set to: 0
  3313                           ;color.c: 156:     {out = 4;}
  3314  000A5A  0E00               	movlw	0
  3315  000A5C  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3316  000A5E  0E04               	movlw	4
  3317  000A60  6F72               	movwf	determine_color_new@out& (0+255),b
  3318  000A62                     l3785:
  3319                           
  3320                           ;color.c: 159:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1 && lumin>820)
  3321  000A62  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3322  000A66  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3323  000A6A  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3324  000A6E  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3325  000A72  0E66               	movlw	102
  3326  000A74  6E11               	movwf	isbtw@low^0,c
  3327  000A76  0E66               	movlw	102
  3328  000A78  6E12               	movwf	(isbtw@low+1)^0,c
  3329  000A7A  0E46               	movlw	70
  3330  000A7C  6E13               	movwf	(isbtw@low+2)^0,c
  3331  000A7E  0E40               	movlw	64
  3332  000A80  6E14               	movwf	(isbtw@low+3)^0,c
  3333  000A82  0E33               	movlw	51
  3334  000A84  6E15               	movwf	isbtw@high^0,c
  3335  000A86  0E33               	movlw	51
  3336  000A88  6E16               	movwf	(isbtw@high+1)^0,c
  3337  000A8A  0E9B               	movlw	155
  3338  000A8C  6E17               	movwf	(isbtw@high+2)^0,c
  3339  000A8E  0E40               	movlw	64
  3340  000A90  6E18               	movwf	(isbtw@high+3)^0,c
  3341  000A92  ECF6  F018         	call	_isbtw	;wreg free
  3342  000A96  040D               	decf	?_isbtw^0,w,c
  3343  000A98  100E               	iorwf	(?_isbtw+1)^0,w,c
  3344  000A9A  A4D8               	btfss	status,2,c
  3345  000A9C  EF52  F005         	goto	u3611
  3346  000AA0  EF54  F005         	goto	u3610
  3347  000AA4                     u3611:
  3348  000AA4  EFAA  F005         	goto	l3795
  3349  000AA8                     u3610:
  3350  000AA8  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3351  000AAC  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3352  000AB0  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3353  000AB4  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3354  000AB8  0ECD               	movlw	205
  3355  000ABA  6E11               	movwf	isbtw@low^0,c
  3356  000ABC  0ECC               	movlw	204
  3357  000ABE  6E12               	movwf	(isbtw@low+1)^0,c
  3358  000AC0  0E0C               	movlw	12
  3359  000AC2  6E13               	movwf	(isbtw@low+2)^0,c
  3360  000AC4  0E40               	movlw	64
  3361  000AC6  6E14               	movwf	(isbtw@low+3)^0,c
  3362  000AC8  0EB8               	movlw	184
  3363  000ACA  6E15               	movwf	isbtw@high^0,c
  3364  000ACC  0E1E               	movlw	30
  3365  000ACE  6E16               	movwf	(isbtw@high+1)^0,c
  3366  000AD0  0E35               	movlw	53
  3367  000AD2  6E17               	movwf	(isbtw@high+2)^0,c
  3368  000AD4  0E40               	movlw	64
  3369  000AD6  6E18               	movwf	(isbtw@high+3)^0,c
  3370  000AD8  ECF6  F018         	call	_isbtw	;wreg free
  3371  000ADC  040D               	decf	?_isbtw^0,w,c
  3372  000ADE  100E               	iorwf	(?_isbtw+1)^0,w,c
  3373  000AE0  A4D8               	btfss	status,2,c
  3374  000AE2  EF75  F005         	goto	u3621
  3375  000AE6  EF77  F005         	goto	u3620
  3376  000AEA                     u3621:
  3377  000AEA  EFAA  F005         	goto	l3795
  3378  000AEE                     u3620:
  3379  000AEE  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3380  000AF2  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3381  000AF6  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3382  000AFA  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3383  000AFE  0E5C               	movlw	92
  3384  000B00  6E11               	movwf	isbtw@low^0,c
  3385  000B02  0E8F               	movlw	143
  3386  000B04  6E12               	movwf	(isbtw@low+1)^0,c
  3387  000B06  0EA2               	movlw	162
  3388  000B08  6E13               	movwf	(isbtw@low+2)^0,c
  3389  000B0A  0E3F               	movlw	63
  3390  000B0C  6E14               	movwf	(isbtw@low+3)^0,c
  3391  000B0E  0E66               	movlw	102
  3392  000B10  6E15               	movwf	isbtw@high^0,c
  3393  000B12  0E66               	movlw	102
  3394  000B14  6E16               	movwf	(isbtw@high+1)^0,c
  3395  000B16  0EE6               	movlw	230
  3396  000B18  6E17               	movwf	(isbtw@high+2)^0,c
  3397  000B1A  0E3F               	movlw	63
  3398  000B1C  6E18               	movwf	(isbtw@high+3)^0,c
  3399  000B1E  ECF6  F018         	call	_isbtw	;wreg free
  3400  000B22  040D               	decf	?_isbtw^0,w,c
  3401  000B24  100E               	iorwf	(?_isbtw+1)^0,w,c
  3402  000B26  A4D8               	btfss	status,2,c
  3403  000B28  EF98  F005         	goto	u3631
  3404  000B2C  EF9A  F005         	goto	u3630
  3405  000B30                     u3631:
  3406  000B30  EFAA  F005         	goto	l3795
  3407  000B34                     u3630:
  3408  000B34  0E35               	movlw	53
  3409  000B36  0100               	movlb	0	; () banked
  3410  000B38  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3411  000B3A  0E03               	movlw	3
  3412  000B3C  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3413  000B3E  A0D8               	btfss	status,0,c
  3414  000B40  EFA4  F005         	goto	u3641
  3415  000B44  EFA6  F005         	goto	u3640
  3416  000B48                     u3641:
  3417  000B48  EFAA  F005         	goto	l3795
  3418  000B4C                     u3640:
  3419  000B4C                     
  3420                           ; BSR set to: 0
  3421                           ;color.c: 160:     {out = 5;}
  3422  000B4C  0E00               	movlw	0
  3423  000B4E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3424  000B50  0E05               	movlw	5
  3425  000B52  6F72               	movwf	determine_color_new@out& (0+255),b
  3426  000B54                     l3795:
  3427                           
  3428                           ;color.c: 163:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1 && lumin>820)
  3429  000B54  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3430  000B58  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3431  000B5C  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3432  000B60  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3433  000B64  0E9A               	movlw	154
  3434  000B66  6E11               	movwf	isbtw@low^0,c
  3435  000B68  0E99               	movlw	153
  3436  000B6A  6E12               	movwf	(isbtw@low+1)^0,c
  3437  000B6C  0E19               	movlw	25
  3438  000B6E  6E13               	movwf	(isbtw@low+2)^0,c
  3439  000B70  0E3F               	movlw	63
  3440  000B72  6E14               	movwf	(isbtw@low+3)^0,c
  3441  000B74  0EF6               	movlw	246
  3442  000B76  6E15               	movwf	isbtw@high^0,c
  3443  000B78  0E28               	movlw	40
  3444  000B7A  6E16               	movwf	(isbtw@high+1)^0,c
  3445  000B7C  0E5C               	movlw	92
  3446  000B7E  6E17               	movwf	(isbtw@high+2)^0,c
  3447  000B80  0E3F               	movlw	63
  3448  000B82  6E18               	movwf	(isbtw@high+3)^0,c
  3449  000B84  ECF6  F018         	call	_isbtw	;wreg free
  3450  000B88  040D               	decf	?_isbtw^0,w,c
  3451  000B8A  100E               	iorwf	(?_isbtw+1)^0,w,c
  3452  000B8C  A4D8               	btfss	status,2,c
  3453  000B8E  EFCB  F005         	goto	u3651
  3454  000B92  EFCD  F005         	goto	u3650
  3455  000B96                     u3651:
  3456  000B96  EF23  F006         	goto	l3805
  3457  000B9A                     u3650:
  3458  000B9A  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3459  000B9E  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3460  000BA2  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3461  000BA6  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3462  000BAA  0E9A               	movlw	154
  3463  000BAC  6E11               	movwf	isbtw@low^0,c
  3464  000BAE  0E99               	movlw	153
  3465  000BB0  6E12               	movwf	(isbtw@low+1)^0,c
  3466  000BB2  0E19               	movlw	25
  3467  000BB4  6E13               	movwf	(isbtw@low+2)^0,c
  3468  000BB6  0E3F               	movlw	63
  3469  000BB8  6E14               	movwf	(isbtw@low+3)^0,c
  3470  000BBA  0E9A               	movlw	154
  3471  000BBC  6E15               	movwf	isbtw@high^0,c
  3472  000BBE  0E99               	movlw	153
  3473  000BC0  6E16               	movwf	(isbtw@high+1)^0,c
  3474  000BC2  0E59               	movlw	89
  3475  000BC4  6E17               	movwf	(isbtw@high+2)^0,c
  3476  000BC6  0E3F               	movlw	63
  3477  000BC8  6E18               	movwf	(isbtw@high+3)^0,c
  3478  000BCA  ECF6  F018         	call	_isbtw	;wreg free
  3479  000BCE  040D               	decf	?_isbtw^0,w,c
  3480  000BD0  100E               	iorwf	(?_isbtw+1)^0,w,c
  3481  000BD2  A4D8               	btfss	status,2,c
  3482  000BD4  EFEE  F005         	goto	u3661
  3483  000BD8  EFF0  F005         	goto	u3660
  3484  000BDC                     u3661:
  3485  000BDC  EF23  F006         	goto	l3805
  3486  000BE0                     u3660:
  3487  000BE0  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3488  000BE4  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3489  000BE8  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3490  000BEC  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3491  000BF0  0E33               	movlw	51
  3492  000BF2  6E11               	movwf	isbtw@low^0,c
  3493  000BF4  0E33               	movlw	51
  3494  000BF6  6E12               	movwf	(isbtw@low+1)^0,c
  3495  000BF8  0E73               	movlw	115
  3496  000BFA  6E13               	movwf	(isbtw@low+2)^0,c
  3497  000BFC  0E3F               	movlw	63
  3498  000BFE  6E14               	movwf	(isbtw@low+3)^0,c
  3499  000C00  0E29               	movlw	41
  3500  000C02  6E15               	movwf	isbtw@high^0,c
  3501  000C04  0E5C               	movlw	92
  3502  000C06  6E16               	movwf	(isbtw@high+1)^0,c
  3503  000C08  0E8F               	movlw	143
  3504  000C0A  6E17               	movwf	(isbtw@high+2)^0,c
  3505  000C0C  0E3F               	movlw	63
  3506  000C0E  6E18               	movwf	(isbtw@high+3)^0,c
  3507  000C10  ECF6  F018         	call	_isbtw	;wreg free
  3508  000C14  040D               	decf	?_isbtw^0,w,c
  3509  000C16  100E               	iorwf	(?_isbtw+1)^0,w,c
  3510  000C18  A4D8               	btfss	status,2,c
  3511  000C1A  EF11  F006         	goto	u3671
  3512  000C1E  EF13  F006         	goto	u3670
  3513  000C22                     u3671:
  3514  000C22  EF23  F006         	goto	l3805
  3515  000C26                     u3670:
  3516  000C26  0E35               	movlw	53
  3517  000C28  0100               	movlb	0	; () banked
  3518  000C2A  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3519  000C2C  0E03               	movlw	3
  3520  000C2E  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3521  000C30  A0D8               	btfss	status,0,c
  3522  000C32  EF1D  F006         	goto	u3681
  3523  000C36  EF1F  F006         	goto	u3680
  3524  000C3A                     u3681:
  3525  000C3A  EF23  F006         	goto	l3805
  3526  000C3E                     u3680:
  3527  000C3E                     
  3528                           ; BSR set to: 0
  3529                           ;color.c: 164:     {out = 6;}
  3530  000C3E  0E00               	movlw	0
  3531  000C40  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3532  000C42  0E06               	movlw	6
  3533  000C44  6F72               	movwf	determine_color_new@out& (0+255),b
  3534  000C46                     l3805:
  3535                           
  3536                           ;color.c: 167:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>890)
  3537  000C46  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3538  000C4A  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3539  000C4E  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3540  000C52  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3541  000C56  0E66               	movlw	102
  3542  000C58  6E11               	movwf	isbtw@low^0,c
  3543  000C5A  0E66               	movlw	102
  3544  000C5C  6E12               	movwf	(isbtw@low+1)^0,c
  3545  000C5E  0E66               	movlw	102
  3546  000C60  6E13               	movwf	(isbtw@low+2)^0,c
  3547  000C62  0E3F               	movlw	63
  3548  000C64  6E14               	movwf	(isbtw@low+3)^0,c
  3549  000C66  0ECD               	movlw	205
  3550  000C68  6E15               	movwf	isbtw@high^0,c
  3551  000C6A  0ECC               	movlw	204
  3552  000C6C  6E16               	movwf	(isbtw@high+1)^0,c
  3553  000C6E  0E8C               	movlw	140
  3554  000C70  6E17               	movwf	(isbtw@high+2)^0,c
  3555  000C72  0E3F               	movlw	63
  3556  000C74  6E18               	movwf	(isbtw@high+3)^0,c
  3557  000C76  ECF6  F018         	call	_isbtw	;wreg free
  3558  000C7A  040D               	decf	?_isbtw^0,w,c
  3559  000C7C  100E               	iorwf	(?_isbtw+1)^0,w,c
  3560  000C7E  A4D8               	btfss	status,2,c
  3561  000C80  EF44  F006         	goto	u3691
  3562  000C84  EF46  F006         	goto	u3690
  3563  000C88                     u3691:
  3564  000C88  EF9C  F006         	goto	l3815
  3565  000C8C                     u3690:
  3566  000C8C  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3567  000C90  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3568  000C94  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3569  000C98  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3570  000C9C  0ECD               	movlw	205
  3571  000C9E  6E11               	movwf	isbtw@low^0,c
  3572  000CA0  0ECC               	movlw	204
  3573  000CA2  6E12               	movwf	(isbtw@low+1)^0,c
  3574  000CA4  0E4C               	movlw	76
  3575  000CA6  6E13               	movwf	(isbtw@low+2)^0,c
  3576  000CA8  0E3F               	movlw	63
  3577  000CAA  6E14               	movwf	(isbtw@low+3)^0,c
  3578  000CAC  0E00               	movlw	0
  3579  000CAE  6E15               	movwf	isbtw@high^0,c
  3580  000CB0  0E00               	movlw	0
  3581  000CB2  6E16               	movwf	(isbtw@high+1)^0,c
  3582  000CB4  0E80               	movlw	128
  3583  000CB6  6E17               	movwf	(isbtw@high+2)^0,c
  3584  000CB8  0E3F               	movlw	63
  3585  000CBA  6E18               	movwf	(isbtw@high+3)^0,c
  3586  000CBC  ECF6  F018         	call	_isbtw	;wreg free
  3587  000CC0  040D               	decf	?_isbtw^0,w,c
  3588  000CC2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3589  000CC4  A4D8               	btfss	status,2,c
  3590  000CC6  EF67  F006         	goto	u3701
  3591  000CCA  EF69  F006         	goto	u3700
  3592  000CCE                     u3701:
  3593  000CCE  EF9C  F006         	goto	l3815
  3594  000CD2                     u3700:
  3595  000CD2  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3596  000CD6  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3597  000CDA  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3598  000CDE  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3599  000CE2  0E33               	movlw	51
  3600  000CE4  6E11               	movwf	isbtw@low^0,c
  3601  000CE6  0E33               	movlw	51
  3602  000CE8  6E12               	movwf	(isbtw@low+1)^0,c
  3603  000CEA  0E73               	movlw	115
  3604  000CEC  6E13               	movwf	(isbtw@low+2)^0,c
  3605  000CEE  0E3F               	movlw	63
  3606  000CF0  6E14               	movwf	(isbtw@low+3)^0,c
  3607  000CF2  0ECD               	movlw	205
  3608  000CF4  6E15               	movwf	isbtw@high^0,c
  3609  000CF6  0ECC               	movlw	204
  3610  000CF8  6E16               	movwf	(isbtw@high+1)^0,c
  3611  000CFA  0E8C               	movlw	140
  3612  000CFC  6E17               	movwf	(isbtw@high+2)^0,c
  3613  000CFE  0E3F               	movlw	63
  3614  000D00  6E18               	movwf	(isbtw@high+3)^0,c
  3615  000D02  ECF6  F018         	call	_isbtw	;wreg free
  3616  000D06  040D               	decf	?_isbtw^0,w,c
  3617  000D08  100E               	iorwf	(?_isbtw+1)^0,w,c
  3618  000D0A  A4D8               	btfss	status,2,c
  3619  000D0C  EF8A  F006         	goto	u3711
  3620  000D10  EF8C  F006         	goto	u3710
  3621  000D14                     u3711:
  3622  000D14  EF9C  F006         	goto	l3815
  3623  000D18                     u3710:
  3624  000D18  0E7B               	movlw	123
  3625  000D1A  0100               	movlb	0	; () banked
  3626  000D1C  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3627  000D1E  0E03               	movlw	3
  3628  000D20  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3629  000D22  A0D8               	btfss	status,0,c
  3630  000D24  EF96  F006         	goto	u3721
  3631  000D28  EF98  F006         	goto	u3720
  3632  000D2C                     u3721:
  3633  000D2C  EF9C  F006         	goto	l3815
  3634  000D30                     u3720:
  3635  000D30                     
  3636                           ; BSR set to: 0
  3637                           ;color.c: 168:     {out = 7;}
  3638  000D30  0E00               	movlw	0
  3639  000D32  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3640  000D34  0E07               	movlw	7
  3641  000D36  6F72               	movwf	determine_color_new@out& (0+255),b
  3642  000D38                     l3815:
  3643                           
  3644                           ;color.c: 171:     if (RedRatio < 50 && GreenRatio < 50 && BlueRatio < 50) {out = 8;}
  3645  000D38  0100               	movlb	0	; () banked
  3646  000D3A  516D               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  3647  000D3C  E107               	bnz	u3731
  3648  000D3E  0E32               	movlw	50
  3649  000D40  5D6C               	subwf	determine_color_new@RedRatio& (0+255),w,b
  3650  000D42  B0D8               	btfsc	status,0,c
  3651  000D44  EFA6  F006         	goto	u3731
  3652  000D48  EFA8  F006         	goto	u3730
  3653  000D4C                     u3731:
  3654  000D4C  EFC2  F006         	goto	l3823
  3655  000D50                     u3730:
  3656  000D50                     
  3657                           ; BSR set to: 0
  3658  000D50  516F               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  3659  000D52  E107               	bnz	u3741
  3660  000D54  0E32               	movlw	50
  3661  000D56  5D6E               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  3662  000D58  B0D8               	btfsc	status,0,c
  3663  000D5A  EFB1  F006         	goto	u3741
  3664  000D5E  EFB3  F006         	goto	u3740
  3665  000D62                     u3741:
  3666  000D62  EFC2  F006         	goto	l3823
  3667  000D66                     u3740:
  3668  000D66                     
  3669                           ; BSR set to: 0
  3670  000D66  5171               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  3671  000D68  E107               	bnz	u3751
  3672  000D6A  0E32               	movlw	50
  3673  000D6C  5D70               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  3674  000D6E  B0D8               	btfsc	status,0,c
  3675  000D70  EFBC  F006         	goto	u3751
  3676  000D74  EFBE  F006         	goto	u3750
  3677  000D78                     u3751:
  3678  000D78  EFC2  F006         	goto	l3823
  3679  000D7C                     u3750:
  3680  000D7C                     
  3681                           ; BSR set to: 0
  3682  000D7C  0E00               	movlw	0
  3683  000D7E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3684  000D80  0E08               	movlw	8
  3685  000D82  6F72               	movwf	determine_color_new@out& (0+255),b
  3686  000D84                     l3823:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;color.c: 173:     return out;
  3690  000D84  C072  F05B         	movff	determine_color_new@out,?_determine_color_new
  3691  000D88  C073  F05C         	movff	determine_color_new@out+1,?_determine_color_new+1
  3692  000D8C                     
  3693                           ; BSR set to: 0
  3694  000D8C  0012               	return		;funcret
  3695  000D8E                     __end_of_determine_color_new:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _isbtw *****************
  3699 ;; Defined at:
  3700 ;;		line 95 in file "color.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  num             4   12[COMRAM] float 
  3703 ;;  low             4   16[COMRAM] float 
  3704 ;;  high            4   20[COMRAM] float 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  2   12[COMRAM] unsigned int 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3716 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;Total ram usage:       12 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 2
  3723 ;; This function calls:
  3724 ;;		___flge
  3725 ;; This function is called by:
  3726 ;;		_determine_color_new
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text7
  3731  0031EC                     __ptext7:
  3732                           	callstack 0
  3733  0031EC                     _isbtw:
  3734                           	callstack 27
  3735  0031EC                     
  3736                           ;color.c: 96:     if (num>=low && num<=high){return 1;}
  3737  0031EC  C00D  F001         	movff	isbtw@num,___flge@ff1
  3738  0031F0  C00E  F002         	movff	isbtw@num+1,___flge@ff1+1
  3739  0031F4  C00F  F003         	movff	isbtw@num+2,___flge@ff1+2
  3740  0031F8  C010  F004         	movff	isbtw@num+3,___flge@ff1+3
  3741  0031FC  C011  F005         	movff	isbtw@low,___flge@ff2
  3742  003200  C012  F006         	movff	isbtw@low+1,___flge@ff2+1
  3743  003204  C013  F007         	movff	isbtw@low+2,___flge@ff2+2
  3744  003208  C014  F008         	movff	isbtw@low+3,___flge@ff2+3
  3745  00320C  EC3B  F017         	call	___flge	;wreg free
  3746  003210  A0D8               	btfss	status,0,c
  3747  003212  EF0D  F019         	goto	u2351
  3748  003216  EF0F  F019         	goto	u2350
  3749  00321A                     u2351:
  3750  00321A  EF2E  F019         	goto	l2957
  3751  00321E                     u2350:
  3752  00321E  C015  F001         	movff	isbtw@high,___flge@ff1
  3753  003222  C016  F002         	movff	isbtw@high+1,___flge@ff1+1
  3754  003226  C017  F003         	movff	isbtw@high+2,___flge@ff1+2
  3755  00322A  C018  F004         	movff	isbtw@high+3,___flge@ff1+3
  3756  00322E  C00D  F005         	movff	isbtw@num,___flge@ff2
  3757  003232  C00E  F006         	movff	isbtw@num+1,___flge@ff2+1
  3758  003236  C00F  F007         	movff	isbtw@num+2,___flge@ff2+2
  3759  00323A  C010  F008         	movff	isbtw@num+3,___flge@ff2+3
  3760  00323E  EC3B  F017         	call	___flge	;wreg free
  3761  003242  A0D8               	btfss	status,0,c
  3762  003244  EF26  F019         	goto	u2361
  3763  003248  EF28  F019         	goto	u2360
  3764  00324C                     u2361:
  3765  00324C  EF2E  F019         	goto	l2957
  3766  003250                     u2360:
  3767  003250  0E00               	movlw	0
  3768  003252  6E0E               	movwf	(?_isbtw+1)^0,c
  3769  003254  0E01               	movlw	1
  3770  003256  6E0D               	movwf	?_isbtw^0,c
  3771  003258  EF32  F019         	goto	l75
  3772  00325C                     l2957:
  3773  00325C  0E00               	movlw	0
  3774  00325E  6E0E               	movwf	(?_isbtw+1)^0,c
  3775  003260  0E00               	movlw	0
  3776  003262  6E0D               	movwf	?_isbtw^0,c
  3777  003264                     l75:
  3778  003264  0012               	return		;funcret
  3779  003266                     __end_of_isbtw:
  3780                           	callstack 0
  3781                           
  3782 ;; *************** function ___flge *****************
  3783 ;; Defined at:
  3784 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  ff1             4    0[COMRAM] unsigned int 
  3787 ;;  ff2             4    4[COMRAM] unsigned int 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;		None               void
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3799 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;Total ram usage:       12 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_isbtw
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text8
  3814  002E76                     __ptext8:
  3815                           	callstack 0
  3816  002E76                     ___flge:
  3817                           	callstack 27
  3818  002E76  0E00               	movlw	0
  3819  002E78  1401               	andwf	___flge@ff1^0,w,c
  3820  002E7A  6E09               	movwf	??___flge^0,c
  3821  002E7C  0E00               	movlw	0
  3822  002E7E  1402               	andwf	(___flge@ff1+1)^0,w,c
  3823  002E80  6E0A               	movwf	(??___flge+1)^0,c
  3824  002E82  0E80               	movlw	128
  3825  002E84  1403               	andwf	(___flge@ff1+2)^0,w,c
  3826  002E86  6E0B               	movwf	(??___flge+2)^0,c
  3827  002E88  0E7F               	movlw	127
  3828  002E8A  1404               	andwf	(___flge@ff1+3)^0,w,c
  3829  002E8C  6E0C               	movwf	(??___flge+3)^0,c
  3830  002E8E  5009               	movf	??___flge^0,w,c
  3831  002E90  100A               	iorwf	(??___flge+1)^0,w,c
  3832  002E92  100B               	iorwf	(??___flge+2)^0,w,c
  3833  002E94  100C               	iorwf	(??___flge+3)^0,w,c
  3834  002E96  A4D8               	btfss	status,2,c
  3835  002E98  EF50  F017         	goto	u2301
  3836  002E9C  EF52  F017         	goto	u2300
  3837  002EA0                     u2301:
  3838  002EA0  EF5A  F017         	goto	l2891
  3839  002EA4                     u2300:
  3840  002EA4  0E00               	movlw	0
  3841  002EA6  6E01               	movwf	___flge@ff1^0,c
  3842  002EA8  0E00               	movlw	0
  3843  002EAA  6E02               	movwf	(___flge@ff1+1)^0,c
  3844  002EAC  0E00               	movlw	0
  3845  002EAE  6E03               	movwf	(___flge@ff1+2)^0,c
  3846  002EB0  0E00               	movlw	0
  3847  002EB2  6E04               	movwf	(___flge@ff1+3)^0,c
  3848  002EB4                     l2891:
  3849  002EB4  0E00               	movlw	0
  3850  002EB6  1405               	andwf	___flge@ff2^0,w,c
  3851  002EB8  6E09               	movwf	??___flge^0,c
  3852  002EBA  0E00               	movlw	0
  3853  002EBC  1406               	andwf	(___flge@ff2+1)^0,w,c
  3854  002EBE  6E0A               	movwf	(??___flge+1)^0,c
  3855  002EC0  0E80               	movlw	128
  3856  002EC2  1407               	andwf	(___flge@ff2+2)^0,w,c
  3857  002EC4  6E0B               	movwf	(??___flge+2)^0,c
  3858  002EC6  0E7F               	movlw	127
  3859  002EC8  1408               	andwf	(___flge@ff2+3)^0,w,c
  3860  002ECA  6E0C               	movwf	(??___flge+3)^0,c
  3861  002ECC  5009               	movf	??___flge^0,w,c
  3862  002ECE  100A               	iorwf	(??___flge+1)^0,w,c
  3863  002ED0  100B               	iorwf	(??___flge+2)^0,w,c
  3864  002ED2  100C               	iorwf	(??___flge+3)^0,w,c
  3865  002ED4  A4D8               	btfss	status,2,c
  3866  002ED6  EF6F  F017         	goto	u2311
  3867  002EDA  EF71  F017         	goto	u2310
  3868  002EDE                     u2311:
  3869  002EDE  EF79  F017         	goto	l2895
  3870  002EE2                     u2310:
  3871  002EE2  0E00               	movlw	0
  3872  002EE4  6E05               	movwf	___flge@ff2^0,c
  3873  002EE6  0E00               	movlw	0
  3874  002EE8  6E06               	movwf	(___flge@ff2+1)^0,c
  3875  002EEA  0E00               	movlw	0
  3876  002EEC  6E07               	movwf	(___flge@ff2+2)^0,c
  3877  002EEE  0E00               	movlw	0
  3878  002EF0  6E08               	movwf	(___flge@ff2+3)^0,c
  3879  002EF2                     l2895:
  3880  002EF2  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3881  002EF4  EF7E  F017         	goto	u2321
  3882  002EF8  EF80  F017         	goto	u2320
  3883  002EFC                     u2321:
  3884  002EFC  EF89  F017         	goto	l2899
  3885  002F00                     u2320:
  3886  002F00  6C01               	negf	___flge@ff1^0,c
  3887  002F02  1E02               	comf	(___flge@ff1+1)^0,f,c
  3888  002F04  B0D8               	btfsc	status,0,c
  3889  002F06  2A02               	incf	(___flge@ff1+1)^0,f,c
  3890  002F08  1E03               	comf	(___flge@ff1+2)^0,f,c
  3891  002F0A  B0D8               	btfsc	status,0,c
  3892  002F0C  2A03               	incf	(___flge@ff1+2)^0,f,c
  3893  002F0E  0E80               	movlw	128
  3894  002F10  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3895  002F12                     l2899:
  3896  002F12  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3897  002F14  EF8E  F017         	goto	u2331
  3898  002F18  EF90  F017         	goto	u2330
  3899  002F1C                     u2331:
  3900  002F1C  EF99  F017         	goto	l801
  3901  002F20                     u2330:
  3902  002F20  6C05               	negf	___flge@ff2^0,c
  3903  002F22  1E06               	comf	(___flge@ff2+1)^0,f,c
  3904  002F24  B0D8               	btfsc	status,0,c
  3905  002F26  2A06               	incf	(___flge@ff2+1)^0,f,c
  3906  002F28  1E07               	comf	(___flge@ff2+2)^0,f,c
  3907  002F2A  B0D8               	btfsc	status,0,c
  3908  002F2C  2A07               	incf	(___flge@ff2+2)^0,f,c
  3909  002F2E  0E80               	movlw	128
  3910  002F30  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3911  002F32                     l801:
  3912  002F32  0E00               	movlw	0
  3913  002F34  1A01               	xorwf	___flge@ff1^0,f,c
  3914  002F36  0E00               	movlw	0
  3915  002F38  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3916  002F3A  0E00               	movlw	0
  3917  002F3C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3918  002F3E  0E80               	movlw	128
  3919  002F40  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3920  002F42  0E00               	movlw	0
  3921  002F44  1A05               	xorwf	___flge@ff2^0,f,c
  3922  002F46  0E00               	movlw	0
  3923  002F48  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3924  002F4A  0E00               	movlw	0
  3925  002F4C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3926  002F4E  0E80               	movlw	128
  3927  002F50  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3928  002F52  5005               	movf	___flge@ff2^0,w,c
  3929  002F54  5C01               	subwf	___flge@ff1^0,w,c
  3930  002F56  5006               	movf	(___flge@ff2+1)^0,w,c
  3931  002F58  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3932  002F5A  5007               	movf	(___flge@ff2+2)^0,w,c
  3933  002F5C  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3934  002F5E  5008               	movf	(___flge@ff2+3)^0,w,c
  3935  002F60  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3936  002F62  B0D8               	btfsc	status,0,c
  3937  002F64  EFB6  F017         	goto	u2341
  3938  002F68  EFB8  F017         	goto	u2340
  3939  002F6C                     u2341:
  3940  002F6C  EFBB  F017         	goto	l2905
  3941  002F70                     u2340:
  3942  002F70  90D8               	bcf	status,0,c
  3943  002F72  EFBC  F017         	goto	l806
  3944  002F76                     l2905:
  3945  002F76  80D8               	bsf	status,0,c
  3946  002F78                     l806:
  3947  002F78  0012               	return		;funcret
  3948  002F7A                     __end_of___flge:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function ___xxtofl *****************
  3952 ;; Defined at:
  3953 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  sign            1    wreg     unsigned char 
  3956 ;;  val             4    0[COMRAM] long 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  sign            1    8[COMRAM] unsigned char 
  3959 ;;  arg             4   10[COMRAM] unsigned long 
  3960 ;;  exp             1    9[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  4    0[COMRAM] unsigned char 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;Total ram usage:       14 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_determine_color_new
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text9
  3985  002588                     __ptext9:
  3986                           	callstack 0
  3987  002588                     ___xxtofl:
  3988                           	callstack 28
  3989                           
  3990                           ;incstack = 0
  3991                           ;___xxtofl@sign stored from wreg
  3992  002588  6E09               	movwf	___xxtofl@sign^0,c
  3993  00258A  5009               	movf	___xxtofl@sign^0,w,c
  3994  00258C  B4D8               	btfsc	status,2,c
  3995  00258E  EFCB  F012         	goto	u3281
  3996  002592  EFCD  F012         	goto	u3280
  3997  002596                     u3281:
  3998  002596  EFEF  F012         	goto	l1191
  3999  00259A                     u3280:
  4000  00259A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4001  00259C  EFD4  F012         	goto	u3290
  4002  0025A0  EFD2  F012         	goto	u3291
  4003  0025A4                     u3291:
  4004  0025A4  EFEF  F012         	goto	l1191
  4005  0025A8                     u3290:
  4006  0025A8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4007  0025AC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4008  0025B0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4009  0025B4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4010  0025B8  1E05               	comf	??___xxtofl^0,f,c
  4011  0025BA  1E06               	comf	(??___xxtofl+1)^0,f,c
  4012  0025BC  1E07               	comf	(??___xxtofl+2)^0,f,c
  4013  0025BE  1E08               	comf	(??___xxtofl+3)^0,f,c
  4014  0025C0  2A05               	incf	??___xxtofl^0,f,c
  4015  0025C2  0E00               	movlw	0
  4016  0025C4  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4017  0025C6  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4018  0025C8  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4019  0025CA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4020  0025CE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4021  0025D2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4022  0025D6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4023  0025DA  EFF7  F012         	goto	l3649
  4024  0025DE                     l1191:
  4025  0025DE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4026  0025E2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4027  0025E6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4028  0025EA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4029  0025EE                     l3649:
  4030  0025EE  5001               	movf	___xxtofl@val^0,w,c
  4031  0025F0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4032  0025F2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4033  0025F4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4034  0025F6  A4D8               	btfss	status,2,c
  4035  0025F8  EF00  F013         	goto	u3301
  4036  0025FC  EF02  F013         	goto	u3300
  4037  002600                     u3301:
  4038  002600  EF0C  F013         	goto	l3655
  4039  002604                     u3300:
  4040  002604  0E00               	movlw	0
  4041  002606  6E01               	movwf	?___xxtofl^0,c
  4042  002608  0E00               	movlw	0
  4043  00260A  6E02               	movwf	(?___xxtofl+1)^0,c
  4044  00260C  0E00               	movlw	0
  4045  00260E  6E03               	movwf	(?___xxtofl+2)^0,c
  4046  002610  0E00               	movlw	0
  4047  002612  6E04               	movwf	(?___xxtofl+3)^0,c
  4048  002614  EF9D  F013         	goto	l1194
  4049  002618                     l3655:
  4050  002618  0E96               	movlw	150
  4051  00261A  6E0A               	movwf	___xxtofl@exp^0,c
  4052  00261C  EF16  F013         	goto	l3659
  4053  002620                     l3657:
  4054  002620  2A0A               	incf	___xxtofl@exp^0,f,c
  4055  002622  90D8               	bcf	status,0,c
  4056  002624  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4057  002626  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4058  002628  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4059  00262A  320B               	rrcf	___xxtofl@arg^0,f,c
  4060  00262C                     l3659:
  4061  00262C  0E00               	movlw	0
  4062  00262E  140B               	andwf	___xxtofl@arg^0,w,c
  4063  002630  6E05               	movwf	??___xxtofl^0,c
  4064  002632  0E00               	movlw	0
  4065  002634  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4066  002636  6E06               	movwf	(??___xxtofl+1)^0,c
  4067  002638  0E00               	movlw	0
  4068  00263A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4069  00263C  6E07               	movwf	(??___xxtofl+2)^0,c
  4070  00263E  0EFE               	movlw	254
  4071  002640  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4072  002642  6E08               	movwf	(??___xxtofl+3)^0,c
  4073  002644  5005               	movf	??___xxtofl^0,w,c
  4074  002646  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4075  002648  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4076  00264A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4077  00264C  A4D8               	btfss	status,2,c
  4078  00264E  EF2B  F013         	goto	u3311
  4079  002652  EF2D  F013         	goto	u3310
  4080  002656                     u3311:
  4081  002656  EF10  F013         	goto	l3657
  4082  00265A                     u3310:
  4083  00265A  EF3B  F013         	goto	l1198
  4084  00265E                     l3661:
  4085  00265E  2A0A               	incf	___xxtofl@exp^0,f,c
  4086  002660  0E01               	movlw	1
  4087  002662  260B               	addwf	___xxtofl@arg^0,f,c
  4088  002664  0E00               	movlw	0
  4089  002666  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4090  002668  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4091  00266A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4092  00266C  90D8               	bcf	status,0,c
  4093  00266E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4094  002670  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4095  002672  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4096  002674  320B               	rrcf	___xxtofl@arg^0,f,c
  4097  002676                     l1198:
  4098  002676  0E00               	movlw	0
  4099  002678  140B               	andwf	___xxtofl@arg^0,w,c
  4100  00267A  6E05               	movwf	??___xxtofl^0,c
  4101  00267C  0E00               	movlw	0
  4102  00267E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4103  002680  6E06               	movwf	(??___xxtofl+1)^0,c
  4104  002682  0E00               	movlw	0
  4105  002684  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4106  002686  6E07               	movwf	(??___xxtofl+2)^0,c
  4107  002688  0EFF               	movlw	255
  4108  00268A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4109  00268C  6E08               	movwf	(??___xxtofl+3)^0,c
  4110  00268E  5005               	movf	??___xxtofl^0,w,c
  4111  002690  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4112  002692  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4113  002694  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4114  002696  A4D8               	btfss	status,2,c
  4115  002698  EF50  F013         	goto	u3321
  4116  00269C  EF52  F013         	goto	u3320
  4117  0026A0                     u3321:
  4118  0026A0  EF2F  F013         	goto	l3661
  4119  0026A4                     u3320:
  4120  0026A4  EF5A  F013         	goto	l3669
  4121  0026A8                     l3667:
  4122  0026A8  060A               	decf	___xxtofl@exp^0,f,c
  4123  0026AA  90D8               	bcf	status,0,c
  4124  0026AC  360B               	rlcf	___xxtofl@arg^0,f,c
  4125  0026AE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4126  0026B0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4127  0026B2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4128  0026B4                     l3669:
  4129  0026B4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4130  0026B6  EF5F  F013         	goto	u3331
  4131  0026BA  EF61  F013         	goto	u3330
  4132  0026BE                     u3331:
  4133  0026BE  EF69  F013         	goto	l1205
  4134  0026C2                     u3330:
  4135  0026C2  0E02               	movlw	2
  4136  0026C4  600A               	cpfslt	___xxtofl@exp^0,c
  4137  0026C6  EF67  F013         	goto	u3341
  4138  0026CA  EF69  F013         	goto	u3340
  4139  0026CE                     u3341:
  4140  0026CE  EF54  F013         	goto	l3667
  4141  0026D2                     u3340:
  4142  0026D2                     l1205:
  4143  0026D2  B00A               	btfsc	___xxtofl@exp^0,0,c
  4144  0026D4  EF6E  F013         	goto	u3351
  4145  0026D8  EF70  F013         	goto	u3350
  4146  0026DC                     u3351:
  4147  0026DC  EF71  F013         	goto	l3675
  4148  0026E0                     u3350:
  4149  0026E0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4150  0026E2                     l3675:
  4151  0026E2  90D8               	bcf	status,0,c
  4152  0026E4  320A               	rrcf	___xxtofl@exp^0,f,c
  4153  0026E6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4154  0026EA  6A06               	clrf	(??___xxtofl+1)^0,c
  4155  0026EC  6A07               	clrf	(??___xxtofl+2)^0,c
  4156  0026EE  6A08               	clrf	(??___xxtofl+3)^0,c
  4157  0026F0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4158  0026F4  6A07               	clrf	(??___xxtofl+2)^0,c
  4159  0026F6  6A06               	clrf	(??___xxtofl+1)^0,c
  4160  0026F8  6A05               	clrf	??___xxtofl^0,c
  4161  0026FA  5005               	movf	??___xxtofl^0,w,c
  4162  0026FC  120B               	iorwf	___xxtofl@arg^0,f,c
  4163  0026FE  5006               	movf	(??___xxtofl+1)^0,w,c
  4164  002700  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4165  002702  5007               	movf	(??___xxtofl+2)^0,w,c
  4166  002704  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4167  002706  5008               	movf	(??___xxtofl+3)^0,w,c
  4168  002708  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4169  00270A  5009               	movf	___xxtofl@sign^0,w,c
  4170  00270C  B4D8               	btfsc	status,2,c
  4171  00270E  EF8B  F013         	goto	u3361
  4172  002712  EF8D  F013         	goto	u3360
  4173  002716                     u3361:
  4174  002716  EF95  F013         	goto	l3685
  4175  00271A                     u3360:
  4176  00271A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4177  00271C  EF94  F013         	goto	u3370
  4178  002720  EF92  F013         	goto	u3371
  4179  002724                     u3371:
  4180  002724  EF95  F013         	goto	l3685
  4181  002728                     u3370:
  4182  002728  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4183  00272A                     l3685:
  4184  00272A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4185  00272E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4186  002732  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4187  002736  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4188  00273A                     l1194:
  4189  00273A  0012               	return		;funcret
  4190  00273C                     __end_of___xxtofl:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function ___fltol *****************
  4194 ;; Defined at:
  4195 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  f1              4   80[COMRAM] unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  exp1            1   89[COMRAM] unsigned char 
  4200 ;;  sign1           1   88[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  4   80[COMRAM] long 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;Total ram usage:       10 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_determine_color_new
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text10
  4225  002D70                     __ptext10:
  4226                           	callstack 0
  4227  002D70                     ___fltol:
  4228                           	callstack 28
  4229  002D70  3453               	rlcf	(___fltol@f1+2)^0,w,c
  4230  002D72  3454               	rlcf	(___fltol@f1+3)^0,w,c
  4231  002D74  6E5A               	movwf	___fltol@exp1^0,c
  4232  002D76  505A               	movf	___fltol@exp1^0,w,c
  4233  002D78  A4D8               	btfss	status,2,c
  4234  002D7A  EFC1  F016         	goto	u3211
  4235  002D7E  EFC3  F016         	goto	u3210
  4236  002D82                     u3211:
  4237  002D82  EFCD  F016         	goto	l3605
  4238  002D86                     u3210:
  4239  002D86                     l3601:
  4240  002D86  0E00               	movlw	0
  4241  002D88  6E51               	movwf	?___fltol^0,c
  4242  002D8A  0E00               	movlw	0
  4243  002D8C  6E52               	movwf	(?___fltol+1)^0,c
  4244  002D8E  0E00               	movlw	0
  4245  002D90  6E53               	movwf	(?___fltol+2)^0,c
  4246  002D92  0E00               	movlw	0
  4247  002D94  6E54               	movwf	(?___fltol+3)^0,c
  4248  002D96  EF3A  F017         	goto	l833
  4249  002D9A                     l3605:
  4250  002D9A  C051  F055         	movff	___fltol@f1,??___fltol
  4251  002D9E  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  4252  002DA2  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  4253  002DA6  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  4254  002DAA  0E20               	movlw	32
  4255  002DAC  EFDD  F016         	goto	u3220
  4256  002DB0                     u3225:
  4257  002DB0  90D8               	bcf	status,0,c
  4258  002DB2  3258               	rrcf	(??___fltol+3)^0,f,c
  4259  002DB4  3257               	rrcf	(??___fltol+2)^0,f,c
  4260  002DB6  3256               	rrcf	(??___fltol+1)^0,f,c
  4261  002DB8  3255               	rrcf	??___fltol^0,f,c
  4262  002DBA                     u3220:
  4263  002DBA  2EE8               	decfsz	wreg,f,c
  4264  002DBC  EFD8  F016         	goto	u3225
  4265  002DC0  5055               	movf	??___fltol^0,w,c
  4266  002DC2  6E59               	movwf	___fltol@sign1^0,c
  4267  002DC4  8E53               	bsf	(___fltol@f1+2)^0,7,c
  4268  002DC6  0EFF               	movlw	255
  4269  002DC8  1651               	andwf	___fltol@f1^0,f,c
  4270  002DCA  0EFF               	movlw	255
  4271  002DCC  1652               	andwf	(___fltol@f1+1)^0,f,c
  4272  002DCE  0EFF               	movlw	255
  4273  002DD0  1653               	andwf	(___fltol@f1+2)^0,f,c
  4274  002DD2  0E00               	movlw	0
  4275  002DD4  1654               	andwf	(___fltol@f1+3)^0,f,c
  4276  002DD6  0E96               	movlw	150
  4277  002DD8  5E5A               	subwf	___fltol@exp1^0,f,c
  4278  002DDA  BE5A               	btfsc	___fltol@exp1^0,7,c
  4279  002DDC  EFF4  F016         	goto	u3230
  4280  002DE0  EFF2  F016         	goto	u3231
  4281  002DE4                     u3231:
  4282  002DE4  EF0A  F017         	goto	l3625
  4283  002DE8                     u3230:
  4284  002DE8  505A               	movf	___fltol@exp1^0,w,c
  4285  002DEA  0A80               	xorlw	128
  4286  002DEC  0F97               	addlw	151
  4287  002DEE  B0D8               	btfsc	status,0,c
  4288  002DF0  EFFC  F016         	goto	u3241
  4289  002DF4  EFFE  F016         	goto	u3240
  4290  002DF8                     u3241:
  4291  002DF8  EF00  F017         	goto	l3621
  4292  002DFC                     u3240:
  4293  002DFC  EFC3  F016         	goto	l3601
  4294  002E00                     l3621:
  4295  002E00  90D8               	bcf	status,0,c
  4296  002E02  3254               	rrcf	(___fltol@f1+3)^0,f,c
  4297  002E04  3253               	rrcf	(___fltol@f1+2)^0,f,c
  4298  002E06  3252               	rrcf	(___fltol@f1+1)^0,f,c
  4299  002E08  3251               	rrcf	___fltol@f1^0,f,c
  4300  002E0A  3E5A               	incfsz	___fltol@exp1^0,f,c
  4301  002E0C  EF00  F017         	goto	l3621
  4302  002E10  EF22  F017         	goto	l3635
  4303  002E14                     l3625:
  4304  002E14  0E1F               	movlw	31
  4305  002E16  645A               	cpfsgt	___fltol@exp1^0,c
  4306  002E18  EF10  F017         	goto	u3251
  4307  002E1C  EF12  F017         	goto	u3250
  4308  002E20                     u3251:
  4309  002E20  EF1A  F017         	goto	l3633
  4310  002E24                     u3250:
  4311  002E24  EFC3  F016         	goto	l3601
  4312  002E28                     l3631:
  4313  002E28  90D8               	bcf	status,0,c
  4314  002E2A  3651               	rlcf	___fltol@f1^0,f,c
  4315  002E2C  3652               	rlcf	(___fltol@f1+1)^0,f,c
  4316  002E2E  3653               	rlcf	(___fltol@f1+2)^0,f,c
  4317  002E30  3654               	rlcf	(___fltol@f1+3)^0,f,c
  4318  002E32  065A               	decf	___fltol@exp1^0,f,c
  4319  002E34                     l3633:
  4320  002E34  505A               	movf	___fltol@exp1^0,w,c
  4321  002E36  A4D8               	btfss	status,2,c
  4322  002E38  EF20  F017         	goto	u3261
  4323  002E3C  EF22  F017         	goto	u3260
  4324  002E40                     u3261:
  4325  002E40  EF14  F017         	goto	l3631
  4326  002E44                     u3260:
  4327  002E44                     l3635:
  4328  002E44  5059               	movf	___fltol@sign1^0,w,c
  4329  002E46  B4D8               	btfsc	status,2,c
  4330  002E48  EF28  F017         	goto	u3271
  4331  002E4C  EF2A  F017         	goto	u3270
  4332  002E50                     u3271:
  4333  002E50  EF32  F017         	goto	l3639
  4334  002E54                     u3270:
  4335  002E54  1E54               	comf	(___fltol@f1+3)^0,f,c
  4336  002E56  1E53               	comf	(___fltol@f1+2)^0,f,c
  4337  002E58  1E52               	comf	(___fltol@f1+1)^0,f,c
  4338  002E5A  6C51               	negf	___fltol@f1^0,c
  4339  002E5C  0E00               	movlw	0
  4340  002E5E  2252               	addwfc	(___fltol@f1+1)^0,f,c
  4341  002E60  2253               	addwfc	(___fltol@f1+2)^0,f,c
  4342  002E62  2254               	addwfc	(___fltol@f1+3)^0,f,c
  4343  002E64                     l3639:
  4344  002E64  C051  F051         	movff	___fltol@f1,?___fltol
  4345  002E68  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  4346  002E6C  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  4347  002E70  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  4348  002E74                     l833:
  4349  002E74  0012               	return		;funcret
  4350  002E76                     __end_of___fltol:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function ___flmul *****************
  4354 ;; Defined at:
  4355 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  b               4   39[COMRAM] long 
  4358 ;;  a               4   43[COMRAM] long 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  prod            4   58[COMRAM] struct .
  4361 ;;  grs             4   52[COMRAM] unsigned long 
  4362 ;;  temp            2   62[COMRAM] struct .
  4363 ;;  bexp            1   57[COMRAM] unsigned char 
  4364 ;;  aexp            1   56[COMRAM] unsigned char 
  4365 ;;  sign            1   51[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  4   39[COMRAM] unsigned char 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, prodl, prodh
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4375 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4377 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4378 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;Total ram usage:       25 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_determine_color_new
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text11
  4390  001828                     __ptext11:
  4391                           	callstack 0
  4392  001828                     ___flmul:
  4393                           	callstack 28
  4394  001828  502B               	movf	(___flmul@b+3)^0,w,c
  4395  00182A  0B80               	andlw	128
  4396  00182C  6E34               	movwf	___flmul@sign^0,c
  4397  00182E  502B               	movf	(___flmul@b+3)^0,w,c
  4398  001830  242B               	addwf	(___flmul@b+3)^0,w,c
  4399  001832  6E3A               	movwf	___flmul@bexp^0,c
  4400  001834  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4401  001836  EF1F  F00C         	goto	u3021
  4402  00183A  EF21  F00C         	goto	u3020
  4403  00183E                     u3021:
  4404  00183E  EF22  F00C         	goto	l3475
  4405  001842                     u3020:
  4406  001842  803A               	bsf	___flmul@bexp^0,0,c
  4407  001844                     l3475:
  4408  001844  503A               	movf	___flmul@bexp^0,w,c
  4409  001846  B4D8               	btfsc	status,2,c
  4410  001848  EF28  F00C         	goto	u3031
  4411  00184C  EF2A  F00C         	goto	u3030
  4412  001850                     u3031:
  4413  001850  EF3D  F00C         	goto	l3483
  4414  001854                     u3030:
  4415  001854  283A               	incf	___flmul@bexp^0,w,c
  4416  001856  A4D8               	btfss	status,2,c
  4417  001858  EF30  F00C         	goto	u3041
  4418  00185C  EF32  F00C         	goto	u3040
  4419  001860                     u3041:
  4420  001860  EF3A  F00C         	goto	l3481
  4421  001864                     u3040:
  4422  001864  0E00               	movlw	0
  4423  001866  6E28               	movwf	___flmul@b^0,c
  4424  001868  0E00               	movlw	0
  4425  00186A  6E29               	movwf	(___flmul@b+1)^0,c
  4426  00186C  0E00               	movlw	0
  4427  00186E  6E2A               	movwf	(___flmul@b+2)^0,c
  4428  001870  0E00               	movlw	0
  4429  001872  6E2B               	movwf	(___flmul@b+3)^0,c
  4430  001874                     l3481:
  4431  001874  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4432  001876  EF45  F00C         	goto	l3485
  4433  00187A                     l3483:
  4434  00187A  0E00               	movlw	0
  4435  00187C  6E28               	movwf	___flmul@b^0,c
  4436  00187E  0E00               	movlw	0
  4437  001880  6E29               	movwf	(___flmul@b+1)^0,c
  4438  001882  0E00               	movlw	0
  4439  001884  6E2A               	movwf	(___flmul@b+2)^0,c
  4440  001886  0E00               	movlw	0
  4441  001888  6E2B               	movwf	(___flmul@b+3)^0,c
  4442  00188A                     l3485:
  4443  00188A  502F               	movf	(___flmul@a+3)^0,w,c
  4444  00188C  0B80               	andlw	128
  4445  00188E  1A34               	xorwf	___flmul@sign^0,f,c
  4446  001890  502F               	movf	(___flmul@a+3)^0,w,c
  4447  001892  242F               	addwf	(___flmul@a+3)^0,w,c
  4448  001894  6E39               	movwf	___flmul@aexp^0,c
  4449  001896  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4450  001898  EF50  F00C         	goto	u3051
  4451  00189C  EF52  F00C         	goto	u3050
  4452  0018A0                     u3051:
  4453  0018A0  EF53  F00C         	goto	l3493
  4454  0018A4                     u3050:
  4455  0018A4  8039               	bsf	___flmul@aexp^0,0,c
  4456  0018A6                     l3493:
  4457  0018A6  5039               	movf	___flmul@aexp^0,w,c
  4458  0018A8  B4D8               	btfsc	status,2,c
  4459  0018AA  EF59  F00C         	goto	u3061
  4460  0018AE  EF5B  F00C         	goto	u3060
  4461  0018B2                     u3061:
  4462  0018B2  EF6E  F00C         	goto	l3501
  4463  0018B6                     u3060:
  4464  0018B6  2839               	incf	___flmul@aexp^0,w,c
  4465  0018B8  A4D8               	btfss	status,2,c
  4466  0018BA  EF61  F00C         	goto	u3071
  4467  0018BE  EF63  F00C         	goto	u3070
  4468  0018C2                     u3071:
  4469  0018C2  EF6B  F00C         	goto	l3499
  4470  0018C6                     u3070:
  4471  0018C6  0E00               	movlw	0
  4472  0018C8  6E2C               	movwf	___flmul@a^0,c
  4473  0018CA  0E00               	movlw	0
  4474  0018CC  6E2D               	movwf	(___flmul@a+1)^0,c
  4475  0018CE  0E00               	movlw	0
  4476  0018D0  6E2E               	movwf	(___flmul@a+2)^0,c
  4477  0018D2  0E00               	movlw	0
  4478  0018D4  6E2F               	movwf	(___flmul@a+3)^0,c
  4479  0018D6                     l3499:
  4480  0018D6  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4481  0018D8  EF76  F00C         	goto	l1150
  4482  0018DC                     l3501:
  4483  0018DC  0E00               	movlw	0
  4484  0018DE  6E2C               	movwf	___flmul@a^0,c
  4485  0018E0  0E00               	movlw	0
  4486  0018E2  6E2D               	movwf	(___flmul@a+1)^0,c
  4487  0018E4  0E00               	movlw	0
  4488  0018E6  6E2E               	movwf	(___flmul@a+2)^0,c
  4489  0018E8  0E00               	movlw	0
  4490  0018EA  6E2F               	movwf	(___flmul@a+3)^0,c
  4491  0018EC                     l1150:
  4492  0018EC  5039               	movf	___flmul@aexp^0,w,c
  4493  0018EE  B4D8               	btfsc	status,2,c
  4494  0018F0  EF7C  F00C         	goto	u3081
  4495  0018F4  EF7E  F00C         	goto	u3080
  4496  0018F8                     u3081:
  4497  0018F8  EF86  F00C         	goto	l3505
  4498  0018FC                     u3080:
  4499  0018FC  503A               	movf	___flmul@bexp^0,w,c
  4500  0018FE  A4D8               	btfss	status,2,c
  4501  001900  EF84  F00C         	goto	u3091
  4502  001904  EF86  F00C         	goto	u3090
  4503  001908                     u3091:
  4504  001908  EF90  F00C         	goto	l3509
  4505  00190C                     u3090:
  4506  00190C                     l3505:
  4507  00190C  0E00               	movlw	0
  4508  00190E  6E28               	movwf	?___flmul^0,c
  4509  001910  0E00               	movlw	0
  4510  001912  6E29               	movwf	(?___flmul+1)^0,c
  4511  001914  0E00               	movlw	0
  4512  001916  6E2A               	movwf	(?___flmul+2)^0,c
  4513  001918  0E00               	movlw	0
  4514  00191A  6E2B               	movwf	(?___flmul+3)^0,c
  4515  00191C  EF28  F00E         	goto	l1154
  4516  001920                     l3509:
  4517  001920  502E               	movf	(___flmul@a+2)^0,w,c
  4518  001922  0228               	mulwf	___flmul@b^0,c
  4519  001924  CFF3 F03F          	movff	prodl,___flmul@temp
  4520  001928  CFF4 F040          	movff	prodh,___flmul@temp+1
  4521  00192C  503F               	movf	___flmul@temp^0,w,c
  4522  00192E  6E35               	movwf	___flmul@grs^0,c
  4523  001930  6A36               	clrf	(___flmul@grs+1)^0,c
  4524  001932  6A37               	clrf	(___flmul@grs+2)^0,c
  4525  001934  6A38               	clrf	(___flmul@grs+3)^0,c
  4526  001936  5040               	movf	(___flmul@temp+1)^0,w,c
  4527  001938  6E3B               	movwf	___flmul@prod^0,c
  4528  00193A  6A3C               	clrf	(___flmul@prod+1)^0,c
  4529  00193C  6A3D               	clrf	(___flmul@prod+2)^0,c
  4530  00193E  6A3E               	clrf	(___flmul@prod+3)^0,c
  4531  001940  502D               	movf	(___flmul@a+1)^0,w,c
  4532  001942  0229               	mulwf	(___flmul@b+1)^0,c
  4533  001944  CFF3 F03F          	movff	prodl,___flmul@temp
  4534  001948  CFF4 F040          	movff	prodh,___flmul@temp+1
  4535  00194C  503F               	movf	___flmul@temp^0,w,c
  4536  00194E  2635               	addwf	___flmul@grs^0,f,c
  4537  001950  0E00               	movlw	0
  4538  001952  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4539  001954  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4540  001956  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4541  001958  5040               	movf	(___flmul@temp+1)^0,w,c
  4542  00195A  263B               	addwf	___flmul@prod^0,f,c
  4543  00195C  0E00               	movlw	0
  4544  00195E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4545  001960  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4546  001962  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4547  001964  502C               	movf	___flmul@a^0,w,c
  4548  001966  022A               	mulwf	(___flmul@b+2)^0,c
  4549  001968  CFF3 F03F          	movff	prodl,___flmul@temp
  4550  00196C  CFF4 F040          	movff	prodh,___flmul@temp+1
  4551  001970  503F               	movf	___flmul@temp^0,w,c
  4552  001972  2635               	addwf	___flmul@grs^0,f,c
  4553  001974  0E00               	movlw	0
  4554  001976  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4555  001978  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4556  00197A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4557  00197C  5040               	movf	(___flmul@temp+1)^0,w,c
  4558  00197E  263B               	addwf	___flmul@prod^0,f,c
  4559  001980  0E00               	movlw	0
  4560  001982  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4561  001984  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4562  001986  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4563  001988  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4564  00198C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4565  001990  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4566  001994  6A35               	clrf	___flmul@grs^0,c
  4567  001996  502C               	movf	___flmul@a^0,w,c
  4568  001998  0229               	mulwf	(___flmul@b+1)^0,c
  4569  00199A  CFF3 F03F          	movff	prodl,___flmul@temp
  4570  00199E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4571  0019A2  503F               	movf	___flmul@temp^0,w,c
  4572  0019A4  2635               	addwf	___flmul@grs^0,f,c
  4573  0019A6  5040               	movf	(___flmul@temp+1)^0,w,c
  4574  0019A8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4575  0019AA  0E00               	movlw	0
  4576  0019AC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4577  0019AE  0E00               	movlw	0
  4578  0019B0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4579  0019B2  502D               	movf	(___flmul@a+1)^0,w,c
  4580  0019B4  0228               	mulwf	___flmul@b^0,c
  4581  0019B6  CFF3 F03F          	movff	prodl,___flmul@temp
  4582  0019BA  CFF4 F040          	movff	prodh,___flmul@temp+1
  4583  0019BE  503F               	movf	___flmul@temp^0,w,c
  4584  0019C0  2635               	addwf	___flmul@grs^0,f,c
  4585  0019C2  5040               	movf	(___flmul@temp+1)^0,w,c
  4586  0019C4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4587  0019C6  0E00               	movlw	0
  4588  0019C8  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4589  0019CA  0E00               	movlw	0
  4590  0019CC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4591  0019CE  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4592  0019D2  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4593  0019D6  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4594  0019DA  6A35               	clrf	___flmul@grs^0,c
  4595  0019DC  502C               	movf	___flmul@a^0,w,c
  4596  0019DE  0228               	mulwf	___flmul@b^0,c
  4597  0019E0  CFF3 F03F          	movff	prodl,___flmul@temp
  4598  0019E4  CFF4 F040          	movff	prodh,___flmul@temp+1
  4599  0019E8  503F               	movf	___flmul@temp^0,w,c
  4600  0019EA  2635               	addwf	___flmul@grs^0,f,c
  4601  0019EC  5040               	movf	(___flmul@temp+1)^0,w,c
  4602  0019EE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4603  0019F0  0E00               	movlw	0
  4604  0019F2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4605  0019F4  0E00               	movlw	0
  4606  0019F6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4607  0019F8  502E               	movf	(___flmul@a+2)^0,w,c
  4608  0019FA  0229               	mulwf	(___flmul@b+1)^0,c
  4609  0019FC  CFF3 F03F          	movff	prodl,___flmul@temp
  4610  001A00  CFF4 F040          	movff	prodh,___flmul@temp+1
  4611  001A04  503F               	movf	___flmul@temp^0,w,c
  4612  001A06  263B               	addwf	___flmul@prod^0,f,c
  4613  001A08  5040               	movf	(___flmul@temp+1)^0,w,c
  4614  001A0A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4615  001A0C  0E00               	movlw	0
  4616  001A0E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4617  001A10  0E00               	movlw	0
  4618  001A12  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4619  001A14  502D               	movf	(___flmul@a+1)^0,w,c
  4620  001A16  022A               	mulwf	(___flmul@b+2)^0,c
  4621  001A18  CFF3 F03F          	movff	prodl,___flmul@temp
  4622  001A1C  CFF4 F040          	movff	prodh,___flmul@temp+1
  4623  001A20  503F               	movf	___flmul@temp^0,w,c
  4624  001A22  263B               	addwf	___flmul@prod^0,f,c
  4625  001A24  5040               	movf	(___flmul@temp+1)^0,w,c
  4626  001A26  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4627  001A28  0E00               	movlw	0
  4628  001A2A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4629  001A2C  0E00               	movlw	0
  4630  001A2E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4631  001A30  502E               	movf	(___flmul@a+2)^0,w,c
  4632  001A32  022A               	mulwf	(___flmul@b+2)^0,c
  4633  001A34  CFF3 F03F          	movff	prodl,___flmul@temp
  4634  001A38  CFF4 F040          	movff	prodh,___flmul@temp+1
  4635  001A3C  503F               	movf	___flmul@temp^0,w,c
  4636  001A3E  6E30               	movwf	??___flmul^0,c
  4637  001A40  5040               	movf	(___flmul@temp+1)^0,w,c
  4638  001A42  6E31               	movwf	(??___flmul+1)^0,c
  4639  001A44  6A32               	clrf	(??___flmul+2)^0,c
  4640  001A46  6A33               	clrf	(??___flmul+3)^0,c
  4641  001A48  C032  F033         	movff	??___flmul+2,??___flmul+3
  4642  001A4C  C031  F032         	movff	??___flmul+1,??___flmul+2
  4643  001A50  C030  F031         	movff	??___flmul,??___flmul+1
  4644  001A54  6A30               	clrf	??___flmul^0,c
  4645  001A56  5030               	movf	??___flmul^0,w,c
  4646  001A58  263B               	addwf	___flmul@prod^0,f,c
  4647  001A5A  5031               	movf	(??___flmul+1)^0,w,c
  4648  001A5C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4649  001A5E  5032               	movf	(??___flmul+2)^0,w,c
  4650  001A60  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4651  001A62  5033               	movf	(??___flmul+3)^0,w,c
  4652  001A64  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4653  001A66  C035  F030         	movff	___flmul@grs,??___flmul
  4654  001A6A  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4655  001A6E  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4656  001A72  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4657  001A76  0E19               	movlw	25
  4658  001A78  EF43  F00D         	goto	u3100
  4659  001A7C                     u3105:
  4660  001A7C  90D8               	bcf	status,0,c
  4661  001A7E  3233               	rrcf	(??___flmul+3)^0,f,c
  4662  001A80  3232               	rrcf	(??___flmul+2)^0,f,c
  4663  001A82  3231               	rrcf	(??___flmul+1)^0,f,c
  4664  001A84  3230               	rrcf	??___flmul^0,f,c
  4665  001A86                     u3100:
  4666  001A86  2EE8               	decfsz	wreg,f,c
  4667  001A88  EF3E  F00D         	goto	u3105
  4668  001A8C  5030               	movf	??___flmul^0,w,c
  4669  001A8E  263B               	addwf	___flmul@prod^0,f,c
  4670  001A90  5031               	movf	(??___flmul+1)^0,w,c
  4671  001A92  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4672  001A94  5032               	movf	(??___flmul+2)^0,w,c
  4673  001A96  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4674  001A98  5033               	movf	(??___flmul+3)^0,w,c
  4675  001A9A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4676  001A9C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4677  001AA0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4678  001AA4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4679  001AA8  6A35               	clrf	___flmul@grs^0,c
  4680  001AAA  5039               	movf	___flmul@aexp^0,w,c
  4681  001AAC  C03A  F030         	movff	___flmul@bexp,??___flmul
  4682  001AB0  6A31               	clrf	(??___flmul+1)^0,c
  4683  001AB2  2630               	addwf	??___flmul^0,f,c
  4684  001AB4  0E00               	movlw	0
  4685  001AB6  2231               	addwfc	(??___flmul+1)^0,f,c
  4686  001AB8  0E82               	movlw	130
  4687  001ABA  2430               	addwf	??___flmul^0,w,c
  4688  001ABC  6E3F               	movwf	___flmul@temp^0,c
  4689  001ABE  0EFF               	movlw	255
  4690  001AC0  2031               	addwfc	(??___flmul+1)^0,w,c
  4691  001AC2  6E40               	movwf	(___flmul@temp+1)^0,c
  4692  001AC4  EF79  F00D         	goto	l3557
  4693  001AC8                     l3551:
  4694  001AC8  90D8               	bcf	status,0,c
  4695  001ACA  363B               	rlcf	___flmul@prod^0,f,c
  4696  001ACC  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4697  001ACE  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4698  001AD0  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4699  001AD2  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4700  001AD4  EF6E  F00D         	goto	u3111
  4701  001AD8  EF70  F00D         	goto	u3110
  4702  001ADC                     u3111:
  4703  001ADC  EF71  F00D         	goto	l1157
  4704  001AE0                     u3110:
  4705  001AE0  803B               	bsf	___flmul@prod^0,0,c
  4706  001AE2                     l1157:
  4707  001AE2  90D8               	bcf	status,0,c
  4708  001AE4  3635               	rlcf	___flmul@grs^0,f,c
  4709  001AE6  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4710  001AE8  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4711  001AEA  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4712  001AEC  063F               	decf	___flmul@temp^0,f,c
  4713  001AEE  A0D8               	btfss	status,0,c
  4714  001AF0  0640               	decf	(___flmul@temp+1)^0,f,c
  4715  001AF2                     l3557:
  4716  001AF2  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4717  001AF4  EF7E  F00D         	goto	u3121
  4718  001AF8  EF80  F00D         	goto	u3120
  4719  001AFC                     u3121:
  4720  001AFC  EF64  F00D         	goto	l3551
  4721  001B00                     u3120:
  4722  001B00  0E00               	movlw	0
  4723  001B02  6E39               	movwf	___flmul@aexp^0,c
  4724  001B04  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4725  001B06  EF87  F00D         	goto	u3131
  4726  001B0A  EF89  F00D         	goto	u3130
  4727  001B0E                     u3131:
  4728  001B0E  EFAD  F00D         	goto	l1159
  4729  001B12                     u3130:
  4730  001B12  0EFF               	movlw	255
  4731  001B14  1435               	andwf	___flmul@grs^0,w,c
  4732  001B16  6E30               	movwf	??___flmul^0,c
  4733  001B18  0EFF               	movlw	255
  4734  001B1A  1436               	andwf	(___flmul@grs+1)^0,w,c
  4735  001B1C  6E31               	movwf	(??___flmul+1)^0,c
  4736  001B1E  0EFF               	movlw	255
  4737  001B20  1437               	andwf	(___flmul@grs+2)^0,w,c
  4738  001B22  6E32               	movwf	(??___flmul+2)^0,c
  4739  001B24  0E7F               	movlw	127
  4740  001B26  1438               	andwf	(___flmul@grs+3)^0,w,c
  4741  001B28  6E33               	movwf	(??___flmul+3)^0,c
  4742  001B2A  5030               	movf	??___flmul^0,w,c
  4743  001B2C  1031               	iorwf	(??___flmul+1)^0,w,c
  4744  001B2E  1032               	iorwf	(??___flmul+2)^0,w,c
  4745  001B30  1033               	iorwf	(??___flmul+3)^0,w,c
  4746  001B32  B4D8               	btfsc	status,2,c
  4747  001B34  EF9E  F00D         	goto	u3141
  4748  001B38  EFA0  F00D         	goto	u3140
  4749  001B3C                     u3141:
  4750  001B3C  EFA4  F00D         	goto	l1160
  4751  001B40                     u3140:
  4752  001B40                     l3565:
  4753  001B40  0E01               	movlw	1
  4754  001B42  6E39               	movwf	___flmul@aexp^0,c
  4755  001B44  EFAD  F00D         	goto	l1159
  4756  001B48                     l1160:
  4757  001B48  A03B               	btfss	___flmul@prod^0,0,c
  4758  001B4A  EFA9  F00D         	goto	u3151
  4759  001B4E  EFAB  F00D         	goto	u3150
  4760  001B52                     u3151:
  4761  001B52  EFAD  F00D         	goto	l1159
  4762  001B56                     u3150:
  4763  001B56  EFA0  F00D         	goto	l3565
  4764  001B5A                     l1159:
  4765  001B5A  5039               	movf	___flmul@aexp^0,w,c
  4766  001B5C  B4D8               	btfsc	status,2,c
  4767  001B5E  EFB3  F00D         	goto	u3161
  4768  001B62  EFB5  F00D         	goto	u3160
  4769  001B66                     u3161:
  4770  001B66  EFD9  F00D         	goto	l3577
  4771  001B6A                     u3160:
  4772  001B6A  0E01               	movlw	1
  4773  001B6C  263B               	addwf	___flmul@prod^0,f,c
  4774  001B6E  0E00               	movlw	0
  4775  001B70  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4776  001B72  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4777  001B74  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4778  001B76  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4779  001B78  EFC0  F00D         	goto	u3171
  4780  001B7C  EFC2  F00D         	goto	u3170
  4781  001B80                     u3171:
  4782  001B80  EFD9  F00D         	goto	l3577
  4783  001B84                     u3170:
  4784  001B84  C03B  F030         	movff	___flmul@prod,??___flmul
  4785  001B88  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4786  001B8C  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4787  001B90  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4788  001B94  3433               	rlcf	(??___flmul+3)^0,w,c
  4789  001B96  3233               	rrcf	(??___flmul+3)^0,f,c
  4790  001B98  3232               	rrcf	(??___flmul+2)^0,f,c
  4791  001B9A  3231               	rrcf	(??___flmul+1)^0,f,c
  4792  001B9C  3230               	rrcf	??___flmul^0,f,c
  4793  001B9E  C030  F03B         	movff	??___flmul,___flmul@prod
  4794  001BA2  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4795  001BA6  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4796  001BAA  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4797  001BAE  4A3F               	infsnz	___flmul@temp^0,f,c
  4798  001BB0  2A40               	incf	(___flmul@temp+1)^0,f,c
  4799  001BB2                     l3577:
  4800  001BB2  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4801  001BB4  EFE4  F00D         	goto	u3181
  4802  001BB8  5040               	movf	(___flmul@temp+1)^0,w,c
  4803  001BBA  E108               	bnz	u3180
  4804  001BBC  283F               	incf	___flmul@temp^0,w,c
  4805  001BBE  A0D8               	btfss	status,0,c
  4806  001BC0  EFE4  F00D         	goto	u3181
  4807  001BC4  EFE6  F00D         	goto	u3180
  4808  001BC8                     u3181:
  4809  001BC8  EFF0  F00D         	goto	l3581
  4810  001BCC                     u3180:
  4811  001BCC  0E00               	movlw	0
  4812  001BCE  6E3B               	movwf	___flmul@prod^0,c
  4813  001BD0  0E00               	movlw	0
  4814  001BD2  6E3C               	movwf	(___flmul@prod+1)^0,c
  4815  001BD4  0E80               	movlw	128
  4816  001BD6  6E3D               	movwf	(___flmul@prod+2)^0,c
  4817  001BD8  0E7F               	movlw	127
  4818  001BDA  6E3E               	movwf	(___flmul@prod+3)^0,c
  4819  001BDC  EF1E  F00E         	goto	l3593
  4820  001BE0                     l3581:
  4821  001BE0  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4822  001BE2  EFFD  F00D         	goto	u3190
  4823  001BE6  5040               	movf	(___flmul@temp+1)^0,w,c
  4824  001BE8  E106               	bnz	u3191
  4825  001BEA  043F               	decf	___flmul@temp^0,w,c
  4826  001BEC  B0D8               	btfsc	status,0,c
  4827  001BEE  EFFB  F00D         	goto	u3191
  4828  001BF2  EFFD  F00D         	goto	u3190
  4829  001BF6                     u3191:
  4830  001BF6  EF09  F00E         	goto	l1167
  4831  001BFA                     u3190:
  4832  001BFA  0E00               	movlw	0
  4833  001BFC  6E3B               	movwf	___flmul@prod^0,c
  4834  001BFE  0E00               	movlw	0
  4835  001C00  6E3C               	movwf	(___flmul@prod+1)^0,c
  4836  001C02  0E00               	movlw	0
  4837  001C04  6E3D               	movwf	(___flmul@prod+2)^0,c
  4838  001C06  0E00               	movlw	0
  4839  001C08  6E3E               	movwf	(___flmul@prod+3)^0,c
  4840  001C0A  0E00               	movlw	0
  4841  001C0C  6E34               	movwf	___flmul@sign^0,c
  4842  001C0E  EF1E  F00E         	goto	l3593
  4843  001C12                     l1167:
  4844  001C12  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4845  001C16  0EFF               	movlw	255
  4846  001C18  163B               	andwf	___flmul@prod^0,f,c
  4847  001C1A  0EFF               	movlw	255
  4848  001C1C  163C               	andwf	(___flmul@prod+1)^0,f,c
  4849  001C1E  0E7F               	movlw	127
  4850  001C20  163D               	andwf	(___flmul@prod+2)^0,f,c
  4851  001C22  0E00               	movlw	0
  4852  001C24  163E               	andwf	(___flmul@prod+3)^0,f,c
  4853  001C26  A03A               	btfss	___flmul@bexp^0,0,c
  4854  001C28  EF18  F00E         	goto	u3201
  4855  001C2C  EF1A  F00E         	goto	u3200
  4856  001C30                     u3201:
  4857  001C30  EF1B  F00E         	goto	l3591
  4858  001C34                     u3200:
  4859  001C34  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4860  001C36                     l3591:
  4861  001C36  90D8               	bcf	status,0,c
  4862  001C38  303A               	rrcf	___flmul@bexp^0,w,c
  4863  001C3A  6E3E               	movwf	(___flmul@prod+3)^0,c
  4864  001C3C                     l3593:
  4865  001C3C  5034               	movf	___flmul@sign^0,w,c
  4866  001C3E  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4867  001C40  C03B  F028         	movff	___flmul@prod,?___flmul
  4868  001C44  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4869  001C48  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4870  001C4C  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4871  001C50                     l1154:
  4872  001C50  0012               	return		;funcret
  4873  001C52                     __end_of___flmul:
  4874                           	callstack 0
  4875                           
  4876 ;; *************** function ___fldiv *****************
  4877 ;; Defined at:
  4878 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  b               4   14[COMRAM] unsigned char 
  4881 ;;  a               4   18[COMRAM] unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  grs             4   33[COMRAM] unsigned long 
  4884 ;;  rem             4   26[COMRAM] unsigned long 
  4885 ;;  new_exp         2   31[COMRAM] short 
  4886 ;;  aexp            1   38[COMRAM] unsigned char 
  4887 ;;  bexp            1   37[COMRAM] unsigned char 
  4888 ;;  sign            1   30[COMRAM] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  4   14[COMRAM] unsigned char 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4898 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;Total ram usage:       25 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 1
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_determine_color_new
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text12
  4913  00201A                     __ptext12:
  4914                           	callstack 0
  4915  00201A                     ___fldiv:
  4916                           	callstack 28
  4917  00201A  5012               	movf	(___fldiv@b+3)^0,w,c
  4918  00201C  0B80               	andlw	128
  4919  00201E  6E1F               	movwf	___fldiv@sign^0,c
  4920  002020  5012               	movf	(___fldiv@b+3)^0,w,c
  4921  002022  2412               	addwf	(___fldiv@b+3)^0,w,c
  4922  002024  6E26               	movwf	___fldiv@bexp^0,c
  4923  002026  AE11               	btfss	(___fldiv@b+2)^0,7,c
  4924  002028  EF18  F010         	goto	u2791
  4925  00202C  EF1A  F010         	goto	u2790
  4926  002030                     u2791:
  4927  002030  EF1B  F010         	goto	l3337
  4928  002034                     u2790:
  4929  002034  8026               	bsf	___fldiv@bexp^0,0,c
  4930  002036                     l3337:
  4931  002036  5026               	movf	___fldiv@bexp^0,w,c
  4932  002038  B4D8               	btfsc	status,2,c
  4933  00203A  EF21  F010         	goto	u2801
  4934  00203E  EF23  F010         	goto	u2800
  4935  002042                     u2801:
  4936  002042  EF38  F010         	goto	l3347
  4937  002046                     u2800:
  4938  002046  2826               	incf	___fldiv@bexp^0,w,c
  4939  002048  A4D8               	btfss	status,2,c
  4940  00204A  EF29  F010         	goto	u2811
  4941  00204E  EF2B  F010         	goto	u2810
  4942  002052                     u2811:
  4943  002052  EF33  F010         	goto	l3343
  4944  002056                     u2810:
  4945  002056  0E00               	movlw	0
  4946  002058  6E0F               	movwf	___fldiv@b^0,c
  4947  00205A  0E00               	movlw	0
  4948  00205C  6E10               	movwf	(___fldiv@b+1)^0,c
  4949  00205E  0E00               	movlw	0
  4950  002060  6E11               	movwf	(___fldiv@b+2)^0,c
  4951  002062  0E00               	movlw	0
  4952  002064  6E12               	movwf	(___fldiv@b+3)^0,c
  4953  002066                     l3343:
  4954  002066  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4955  002068  0E00               	movlw	0
  4956  00206A  6E12               	movwf	(___fldiv@b+3)^0,c
  4957  00206C  EF40  F010         	goto	l3349
  4958  002070                     l3347:
  4959  002070  0E00               	movlw	0
  4960  002072  6E0F               	movwf	___fldiv@b^0,c
  4961  002074  0E00               	movlw	0
  4962  002076  6E10               	movwf	(___fldiv@b+1)^0,c
  4963  002078  0E00               	movlw	0
  4964  00207A  6E11               	movwf	(___fldiv@b+2)^0,c
  4965  00207C  0E00               	movlw	0
  4966  00207E  6E12               	movwf	(___fldiv@b+3)^0,c
  4967  002080                     l3349:
  4968  002080  5016               	movf	(___fldiv@a+3)^0,w,c
  4969  002082  0B80               	andlw	128
  4970  002084  1A1F               	xorwf	___fldiv@sign^0,f,c
  4971  002086  5016               	movf	(___fldiv@a+3)^0,w,c
  4972  002088  2416               	addwf	(___fldiv@a+3)^0,w,c
  4973  00208A  6E27               	movwf	___fldiv@aexp^0,c
  4974  00208C  AE15               	btfss	(___fldiv@a+2)^0,7,c
  4975  00208E  EF4B  F010         	goto	u2821
  4976  002092  EF4D  F010         	goto	u2820
  4977  002096                     u2821:
  4978  002096  EF4E  F010         	goto	l3357
  4979  00209A                     u2820:
  4980  00209A  8027               	bsf	___fldiv@aexp^0,0,c
  4981  00209C                     l3357:
  4982  00209C  5027               	movf	___fldiv@aexp^0,w,c
  4983  00209E  B4D8               	btfsc	status,2,c
  4984  0020A0  EF54  F010         	goto	u2831
  4985  0020A4  EF56  F010         	goto	u2830
  4986  0020A8                     u2831:
  4987  0020A8  EF6B  F010         	goto	l3367
  4988  0020AC                     u2830:
  4989  0020AC  2827               	incf	___fldiv@aexp^0,w,c
  4990  0020AE  A4D8               	btfss	status,2,c
  4991  0020B0  EF5C  F010         	goto	u2841
  4992  0020B4  EF5E  F010         	goto	u2840
  4993  0020B8                     u2841:
  4994  0020B8  EF66  F010         	goto	l3363
  4995  0020BC                     u2840:
  4996  0020BC  0E00               	movlw	0
  4997  0020BE  6E13               	movwf	___fldiv@a^0,c
  4998  0020C0  0E00               	movlw	0
  4999  0020C2  6E14               	movwf	(___fldiv@a+1)^0,c
  5000  0020C4  0E00               	movlw	0
  5001  0020C6  6E15               	movwf	(___fldiv@a+2)^0,c
  5002  0020C8  0E00               	movlw	0
  5003  0020CA  6E16               	movwf	(___fldiv@a+3)^0,c
  5004  0020CC                     l3363:
  5005  0020CC  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5006  0020CE  0E00               	movlw	0
  5007  0020D0  6E16               	movwf	(___fldiv@a+3)^0,c
  5008  0020D2  EF73  F010         	goto	l3369
  5009  0020D6                     l3367:
  5010  0020D6  0E00               	movlw	0
  5011  0020D8  6E13               	movwf	___fldiv@a^0,c
  5012  0020DA  0E00               	movlw	0
  5013  0020DC  6E14               	movwf	(___fldiv@a+1)^0,c
  5014  0020DE  0E00               	movlw	0
  5015  0020E0  6E15               	movwf	(___fldiv@a+2)^0,c
  5016  0020E2  0E00               	movlw	0
  5017  0020E4  6E16               	movwf	(___fldiv@a+3)^0,c
  5018  0020E6                     l3369:
  5019  0020E6  5013               	movf	___fldiv@a^0,w,c
  5020  0020E8  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5021  0020EA  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5022  0020EC  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5023  0020EE  A4D8               	btfss	status,2,c
  5024  0020F0  EF7C  F010         	goto	u2851
  5025  0020F4  EF7E  F010         	goto	u2850
  5026  0020F8                     u2851:
  5027  0020F8  EF96  F010         	goto	l3381
  5028  0020FC                     u2850:
  5029  0020FC  0E00               	movlw	0
  5030  0020FE  6E0F               	movwf	___fldiv@b^0,c
  5031  002100  0E00               	movlw	0
  5032  002102  6E10               	movwf	(___fldiv@b+1)^0,c
  5033  002104  0E00               	movlw	0
  5034  002106  6E11               	movwf	(___fldiv@b+2)^0,c
  5035  002108  0E00               	movlw	0
  5036  00210A  6E12               	movwf	(___fldiv@b+3)^0,c
  5037  00210C  0E80               	movlw	128
  5038  00210E  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5039  002110  0E7F               	movlw	127
  5040  002112  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5041  002114                     l3375:
  5042  002114  501F               	movf	___fldiv@sign^0,w,c
  5043  002116  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5044  002118  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5045  00211C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5046  002120  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5047  002124  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5048  002128  EFD9  F011         	goto	l1118
  5049  00212C                     l3381:
  5050  00212C  5026               	movf	___fldiv@bexp^0,w,c
  5051  00212E  A4D8               	btfss	status,2,c
  5052  002130  EF9C  F010         	goto	u2861
  5053  002134  EF9E  F010         	goto	u2860
  5054  002138                     u2861:
  5055  002138  EFA8  F010         	goto	l3389
  5056  00213C                     u2860:
  5057  00213C  0E00               	movlw	0
  5058  00213E  6E0F               	movwf	?___fldiv^0,c
  5059  002140  0E00               	movlw	0
  5060  002142  6E10               	movwf	(?___fldiv+1)^0,c
  5061  002144  0E00               	movlw	0
  5062  002146  6E11               	movwf	(?___fldiv+2)^0,c
  5063  002148  0E00               	movlw	0
  5064  00214A  6E12               	movwf	(?___fldiv+3)^0,c
  5065  00214C  EFD9  F011         	goto	l1118
  5066  002150                     l3389:
  5067  002150  5027               	movf	___fldiv@aexp^0,w,c
  5068  002152  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5069  002156  6A18               	clrf	(??___fldiv+1)^0,c
  5070  002158  5E17               	subwf	??___fldiv^0,f,c
  5071  00215A  0E00               	movlw	0
  5072  00215C  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5073  00215E  0E7F               	movlw	127
  5074  002160  2417               	addwf	??___fldiv^0,w,c
  5075  002162  6E20               	movwf	___fldiv@new_exp^0,c
  5076  002164  0E00               	movlw	0
  5077  002166  2018               	addwfc	(??___fldiv+1)^0,w,c
  5078  002168  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5079  00216A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5080  00216E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5081  002172  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5082  002176  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5083  00217A  0E00               	movlw	0
  5084  00217C  6E0F               	movwf	___fldiv@b^0,c
  5085  00217E  0E00               	movlw	0
  5086  002180  6E10               	movwf	(___fldiv@b+1)^0,c
  5087  002182  0E00               	movlw	0
  5088  002184  6E11               	movwf	(___fldiv@b+2)^0,c
  5089  002186  0E00               	movlw	0
  5090  002188  6E12               	movwf	(___fldiv@b+3)^0,c
  5091  00218A  0E00               	movlw	0
  5092  00218C  6E22               	movwf	___fldiv@grs^0,c
  5093  00218E  0E00               	movlw	0
  5094  002190  6E23               	movwf	(___fldiv@grs+1)^0,c
  5095  002192  0E00               	movlw	0
  5096  002194  6E24               	movwf	(___fldiv@grs+2)^0,c
  5097  002196  0E00               	movlw	0
  5098  002198  6E25               	movwf	(___fldiv@grs+3)^0,c
  5099  00219A  0E00               	movlw	0
  5100  00219C  6E27               	movwf	___fldiv@aexp^0,c
  5101  00219E  EF09  F011         	goto	l1120
  5102  0021A2                     l3399:
  5103  0021A2  5027               	movf	___fldiv@aexp^0,w,c
  5104  0021A4  B4D8               	btfsc	status,2,c
  5105  0021A6  EFD7  F010         	goto	u2871
  5106  0021AA  EFD9  F010         	goto	u2870
  5107  0021AE                     u2871:
  5108  0021AE  EFF0  F010         	goto	l3407
  5109  0021B2                     u2870:
  5110  0021B2  90D8               	bcf	status,0,c
  5111  0021B4  361B               	rlcf	___fldiv@rem^0,f,c
  5112  0021B6  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5113  0021B8  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5114  0021BA  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5115  0021BC  90D8               	bcf	status,0,c
  5116  0021BE  360F               	rlcf	___fldiv@b^0,f,c
  5117  0021C0  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5118  0021C2  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5119  0021C4  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5120  0021C6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5121  0021C8  EFE8  F010         	goto	u2881
  5122  0021CC  EFEA  F010         	goto	u2880
  5123  0021D0                     u2881:
  5124  0021D0  EFEB  F010         	goto	l1123
  5125  0021D4                     u2880:
  5126  0021D4  800F               	bsf	___fldiv@b^0,0,c
  5127  0021D6                     l1123:
  5128  0021D6  90D8               	bcf	status,0,c
  5129  0021D8  3622               	rlcf	___fldiv@grs^0,f,c
  5130  0021DA  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5131  0021DC  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5132  0021DE  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5133  0021E0                     l3407:
  5134  0021E0  5013               	movf	___fldiv@a^0,w,c
  5135  0021E2  5C1B               	subwf	___fldiv@rem^0,w,c
  5136  0021E4  5014               	movf	(___fldiv@a+1)^0,w,c
  5137  0021E6  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5138  0021E8  5015               	movf	(___fldiv@a+2)^0,w,c
  5139  0021EA  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5140  0021EC  5016               	movf	(___fldiv@a+3)^0,w,c
  5141  0021EE  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5142  0021F0  A0D8               	btfss	status,0,c
  5143  0021F2  EFFD  F010         	goto	u2891
  5144  0021F6  EFFF  F010         	goto	u2890
  5145  0021FA                     u2891:
  5146  0021FA  EF08  F011         	goto	l3413
  5147  0021FE                     u2890:
  5148  0021FE  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5149  002200  5013               	movf	___fldiv@a^0,w,c
  5150  002202  5E1B               	subwf	___fldiv@rem^0,f,c
  5151  002204  5014               	movf	(___fldiv@a+1)^0,w,c
  5152  002206  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5153  002208  5015               	movf	(___fldiv@a+2)^0,w,c
  5154  00220A  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5155  00220C  5016               	movf	(___fldiv@a+3)^0,w,c
  5156  00220E  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5157  002210                     l3413:
  5158  002210  2A27               	incf	___fldiv@aexp^0,f,c
  5159  002212                     l1120:
  5160  002212  0E19               	movlw	25
  5161  002214  6427               	cpfsgt	___fldiv@aexp^0,c
  5162  002216  EF0F  F011         	goto	u2901
  5163  00221A  EF11  F011         	goto	u2900
  5164  00221E                     u2901:
  5165  00221E  EFD1  F010         	goto	l3399
  5166  002222                     u2900:
  5167  002222  501B               	movf	___fldiv@rem^0,w,c
  5168  002224  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5169  002226  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5170  002228  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5171  00222A  B4D8               	btfsc	status,2,c
  5172  00222C  EF1A  F011         	goto	u2911
  5173  002230  EF1C  F011         	goto	u2910
  5174  002234                     u2911:
  5175  002234  EF34  F011         	goto	l3425
  5176  002238                     u2910:
  5177  002238  8022               	bsf	___fldiv@grs^0,0,c
  5178  00223A  EF34  F011         	goto	l3425
  5179  00223E                     l3419:
  5180  00223E  90D8               	bcf	status,0,c
  5181  002240  360F               	rlcf	___fldiv@b^0,f,c
  5182  002242  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5183  002244  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5184  002246  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5185  002248  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5186  00224A  EF29  F011         	goto	u2921
  5187  00224E  EF2B  F011         	goto	u2920
  5188  002252                     u2921:
  5189  002252  EF2C  F011         	goto	l1129
  5190  002256                     u2920:
  5191  002256  800F               	bsf	___fldiv@b^0,0,c
  5192  002258                     l1129:
  5193  002258  90D8               	bcf	status,0,c
  5194  00225A  3622               	rlcf	___fldiv@grs^0,f,c
  5195  00225C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5196  00225E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5197  002260  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5198  002262  0620               	decf	___fldiv@new_exp^0,f,c
  5199  002264  A0D8               	btfss	status,0,c
  5200  002266  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5201  002268                     l3425:
  5202  002268  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5203  00226A  EF39  F011         	goto	u2931
  5204  00226E  EF3B  F011         	goto	u2930
  5205  002272                     u2931:
  5206  002272  EF1F  F011         	goto	l3419
  5207  002276                     u2930:
  5208  002276  0E00               	movlw	0
  5209  002278  6E27               	movwf	___fldiv@aexp^0,c
  5210  00227A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5211  00227C  EF42  F011         	goto	u2941
  5212  002280  EF44  F011         	goto	u2940
  5213  002284                     u2941:
  5214  002284  EF68  F011         	goto	l1131
  5215  002288                     u2940:
  5216  002288  0EFF               	movlw	255
  5217  00228A  1422               	andwf	___fldiv@grs^0,w,c
  5218  00228C  6E17               	movwf	??___fldiv^0,c
  5219  00228E  0EFF               	movlw	255
  5220  002290  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5221  002292  6E18               	movwf	(??___fldiv+1)^0,c
  5222  002294  0EFF               	movlw	255
  5223  002296  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5224  002298  6E19               	movwf	(??___fldiv+2)^0,c
  5225  00229A  0E7F               	movlw	127
  5226  00229C  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5227  00229E  6E1A               	movwf	(??___fldiv+3)^0,c
  5228  0022A0  5017               	movf	??___fldiv^0,w,c
  5229  0022A2  1018               	iorwf	(??___fldiv+1)^0,w,c
  5230  0022A4  1019               	iorwf	(??___fldiv+2)^0,w,c
  5231  0022A6  101A               	iorwf	(??___fldiv+3)^0,w,c
  5232  0022A8  B4D8               	btfsc	status,2,c
  5233  0022AA  EF59  F011         	goto	u2951
  5234  0022AE  EF5B  F011         	goto	u2950
  5235  0022B2                     u2951:
  5236  0022B2  EF5F  F011         	goto	l1132
  5237  0022B6                     u2950:
  5238  0022B6                     l3433:
  5239  0022B6  0E01               	movlw	1
  5240  0022B8  6E27               	movwf	___fldiv@aexp^0,c
  5241  0022BA  EF68  F011         	goto	l1131
  5242  0022BE                     l1132:
  5243  0022BE  A00F               	btfss	___fldiv@b^0,0,c
  5244  0022C0  EF64  F011         	goto	u2961
  5245  0022C4  EF66  F011         	goto	u2960
  5246  0022C8                     u2961:
  5247  0022C8  EF68  F011         	goto	l1131
  5248  0022CC                     u2960:
  5249  0022CC  EF5B  F011         	goto	l3433
  5250  0022D0                     l1131:
  5251  0022D0  5027               	movf	___fldiv@aexp^0,w,c
  5252  0022D2  B4D8               	btfsc	status,2,c
  5253  0022D4  EF6E  F011         	goto	u2971
  5254  0022D8  EF70  F011         	goto	u2970
  5255  0022DC                     u2971:
  5256  0022DC  EF94  F011         	goto	l3445
  5257  0022E0                     u2970:
  5258  0022E0  0E01               	movlw	1
  5259  0022E2  260F               	addwf	___fldiv@b^0,f,c
  5260  0022E4  0E00               	movlw	0
  5261  0022E6  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5262  0022E8  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5263  0022EA  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5264  0022EC  A012               	btfss	(___fldiv@b+3)^0,0,c
  5265  0022EE  EF7B  F011         	goto	u2981
  5266  0022F2  EF7D  F011         	goto	u2980
  5267  0022F6                     u2981:
  5268  0022F6  EF94  F011         	goto	l3445
  5269  0022FA                     u2980:
  5270  0022FA  C00F  F017         	movff	___fldiv@b,??___fldiv
  5271  0022FE  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5272  002302  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5273  002306  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5274  00230A  341A               	rlcf	(??___fldiv+3)^0,w,c
  5275  00230C  321A               	rrcf	(??___fldiv+3)^0,f,c
  5276  00230E  3219               	rrcf	(??___fldiv+2)^0,f,c
  5277  002310  3218               	rrcf	(??___fldiv+1)^0,f,c
  5278  002312  3217               	rrcf	??___fldiv^0,f,c
  5279  002314  C017  F00F         	movff	??___fldiv,___fldiv@b
  5280  002318  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5281  00231C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5282  002320  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5283  002324  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5284  002326  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5285  002328                     l3445:
  5286  002328  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5287  00232A  EF9F  F011         	goto	u2991
  5288  00232E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5289  002330  E108               	bnz	u2990
  5290  002332  2820               	incf	___fldiv@new_exp^0,w,c
  5291  002334  A0D8               	btfss	status,0,c
  5292  002336  EF9F  F011         	goto	u2991
  5293  00233A  EFA1  F011         	goto	u2990
  5294  00233E                     u2991:
  5295  00233E  EFAC  F011         	goto	l3449
  5296  002342                     u2990:
  5297  002342  0E00               	movlw	0
  5298  002344  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5299  002346  6820               	setf	___fldiv@new_exp^0,c
  5300  002348  0E00               	movlw	0
  5301  00234A  6E0F               	movwf	___fldiv@b^0,c
  5302  00234C  0E00               	movlw	0
  5303  00234E  6E10               	movwf	(___fldiv@b+1)^0,c
  5304  002350  0E00               	movlw	0
  5305  002352  6E11               	movwf	(___fldiv@b+2)^0,c
  5306  002354  0E00               	movlw	0
  5307  002356  6E12               	movwf	(___fldiv@b+3)^0,c
  5308  002358                     l3449:
  5309  002358  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5310  00235A  EFB9  F011         	goto	u3000
  5311  00235E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5312  002360  E106               	bnz	u3001
  5313  002362  0420               	decf	___fldiv@new_exp^0,w,c
  5314  002364  B0D8               	btfsc	status,0,c
  5315  002366  EFB7  F011         	goto	u3001
  5316  00236A  EFB9  F011         	goto	u3000
  5317  00236E                     u3001:
  5318  00236E  EFC7  F011         	goto	l3453
  5319  002372                     u3000:
  5320  002372  0E00               	movlw	0
  5321  002374  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5322  002376  0E00               	movlw	0
  5323  002378  6E20               	movwf	___fldiv@new_exp^0,c
  5324  00237A  0E00               	movlw	0
  5325  00237C  6E0F               	movwf	___fldiv@b^0,c
  5326  00237E  0E00               	movlw	0
  5327  002380  6E10               	movwf	(___fldiv@b+1)^0,c
  5328  002382  0E00               	movlw	0
  5329  002384  6E11               	movwf	(___fldiv@b+2)^0,c
  5330  002386  0E00               	movlw	0
  5331  002388  6E12               	movwf	(___fldiv@b+3)^0,c
  5332  00238A  0E00               	movlw	0
  5333  00238C  6E1F               	movwf	___fldiv@sign^0,c
  5334  00238E                     l3453:
  5335  00238E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5336  002392  A026               	btfss	___fldiv@bexp^0,0,c
  5337  002394  EFCE  F011         	goto	u3011
  5338  002398  EFD0  F011         	goto	u3010
  5339  00239C                     u3011:
  5340  00239C  EFD3  F011         	goto	l3459
  5341  0023A0                     u3010:
  5342  0023A0  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5343  0023A2  EFD4  F011         	goto	l3461
  5344  0023A6                     l3459:
  5345  0023A6  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5346  0023A8                     l3461:
  5347  0023A8  90D8               	bcf	status,0,c
  5348  0023AA  3026               	rrcf	___fldiv@bexp^0,w,c
  5349  0023AC  6E12               	movwf	(___fldiv@b+3)^0,c
  5350  0023AE  EF8A  F010         	goto	l3375
  5351  0023B2                     l1118:
  5352  0023B2  0012               	return		;funcret
  5353  0023B4                     __end_of___fldiv:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function ___fladd *****************
  5357 ;; Defined at:
  5358 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  b               4   64[COMRAM] unsigned char 
  5361 ;;  a               4   68[COMRAM] unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  grs             1   79[COMRAM] unsigned char 
  5364 ;;  bexp            1   78[COMRAM] unsigned char 
  5365 ;;  aexp            1   77[COMRAM] unsigned char 
  5366 ;;  signs           1   76[COMRAM] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  4   64[COMRAM] unsigned char 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5376 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;Total ram usage:       16 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_determine_color_new
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text13
  5391  001368                     __ptext13:
  5392                           	callstack 0
  5393  001368                     ___fladd:
  5394                           	callstack 28
  5395  001368  5044               	movf	(___fladd@b+3)^0,w,c
  5396  00136A  0B80               	andlw	128
  5397  00136C  6E4D               	movwf	___fladd@signs^0,c
  5398  00136E  5044               	movf	(___fladd@b+3)^0,w,c
  5399  001370  2444               	addwf	(___fladd@b+3)^0,w,c
  5400  001372  6E4F               	movwf	___fladd@bexp^0,c
  5401  001374  AE43               	btfss	(___fladd@b+2)^0,7,c
  5402  001376  EFBF  F009         	goto	u2401
  5403  00137A  EFC1  F009         	goto	u2400
  5404  00137E                     u2401:
  5405  00137E  EFC2  F009         	goto	l3135
  5406  001382                     u2400:
  5407  001382  804F               	bsf	___fladd@bexp^0,0,c
  5408  001384                     l3135:
  5409  001384  504F               	movf	___fladd@bexp^0,w,c
  5410  001386  B4D8               	btfsc	status,2,c
  5411  001388  EFC8  F009         	goto	u2411
  5412  00138C  EFCA  F009         	goto	u2410
  5413  001390                     u2411:
  5414  001390  EFDF  F009         	goto	l3145
  5415  001394                     u2410:
  5416  001394  284F               	incf	___fladd@bexp^0,w,c
  5417  001396  A4D8               	btfss	status,2,c
  5418  001398  EFD0  F009         	goto	u2421
  5419  00139C  EFD2  F009         	goto	u2420
  5420  0013A0                     u2421:
  5421  0013A0  EFDA  F009         	goto	l3141
  5422  0013A4                     u2420:
  5423  0013A4  0E00               	movlw	0
  5424  0013A6  6E41               	movwf	___fladd@b^0,c
  5425  0013A8  0E00               	movlw	0
  5426  0013AA  6E42               	movwf	(___fladd@b+1)^0,c
  5427  0013AC  0E00               	movlw	0
  5428  0013AE  6E43               	movwf	(___fladd@b+2)^0,c
  5429  0013B0  0E00               	movlw	0
  5430  0013B2  6E44               	movwf	(___fladd@b+3)^0,c
  5431  0013B4                     l3141:
  5432  0013B4  8E43               	bsf	(___fladd@b+2)^0,7,c
  5433  0013B6  0E00               	movlw	0
  5434  0013B8  6E44               	movwf	(___fladd@b+3)^0,c
  5435  0013BA  EFE7  F009         	goto	l3147
  5436  0013BE                     l3145:
  5437  0013BE  0E00               	movlw	0
  5438  0013C0  6E41               	movwf	___fladd@b^0,c
  5439  0013C2  0E00               	movlw	0
  5440  0013C4  6E42               	movwf	(___fladd@b+1)^0,c
  5441  0013C6  0E00               	movlw	0
  5442  0013C8  6E43               	movwf	(___fladd@b+2)^0,c
  5443  0013CA  0E00               	movlw	0
  5444  0013CC  6E44               	movwf	(___fladd@b+3)^0,c
  5445  0013CE                     l3147:
  5446  0013CE  5048               	movf	(___fladd@a+3)^0,w,c
  5447  0013D0  0B80               	andlw	128
  5448  0013D2  6E4E               	movwf	___fladd@aexp^0,c
  5449  0013D4  504D               	movf	___fladd@signs^0,w,c
  5450  0013D6  184E               	xorwf	___fladd@aexp^0,w,c
  5451  0013D8  B4D8               	btfsc	status,2,c
  5452  0013DA  EFF1  F009         	goto	u2431
  5453  0013DE  EFF3  F009         	goto	u2430
  5454  0013E2                     u2431:
  5455  0013E2  EFF4  F009         	goto	l3153
  5456  0013E6                     u2430:
  5457  0013E6  8C4D               	bsf	___fladd@signs^0,6,c
  5458  0013E8                     l3153:
  5459  0013E8  5048               	movf	(___fladd@a+3)^0,w,c
  5460  0013EA  2448               	addwf	(___fladd@a+3)^0,w,c
  5461  0013EC  6E4E               	movwf	___fladd@aexp^0,c
  5462  0013EE  AE47               	btfss	(___fladd@a+2)^0,7,c
  5463  0013F0  EFFC  F009         	goto	u2441
  5464  0013F4  EFFE  F009         	goto	u2440
  5465  0013F8                     u2441:
  5466  0013F8  EFFF  F009         	goto	l3159
  5467  0013FC                     u2440:
  5468  0013FC  804E               	bsf	___fladd@aexp^0,0,c
  5469  0013FE                     l3159:
  5470  0013FE  504E               	movf	___fladd@aexp^0,w,c
  5471  001400  B4D8               	btfsc	status,2,c
  5472  001402  EF05  F00A         	goto	u2451
  5473  001406  EF07  F00A         	goto	u2450
  5474  00140A                     u2451:
  5475  00140A  EF1C  F00A         	goto	l3169
  5476  00140E                     u2450:
  5477  00140E  284E               	incf	___fladd@aexp^0,w,c
  5478  001410  A4D8               	btfss	status,2,c
  5479  001412  EF0D  F00A         	goto	u2461
  5480  001416  EF0F  F00A         	goto	u2460
  5481  00141A                     u2461:
  5482  00141A  EF17  F00A         	goto	l3165
  5483  00141E                     u2460:
  5484  00141E  0E00               	movlw	0
  5485  001420  6E45               	movwf	___fladd@a^0,c
  5486  001422  0E00               	movlw	0
  5487  001424  6E46               	movwf	(___fladd@a+1)^0,c
  5488  001426  0E00               	movlw	0
  5489  001428  6E47               	movwf	(___fladd@a+2)^0,c
  5490  00142A  0E00               	movlw	0
  5491  00142C  6E48               	movwf	(___fladd@a+3)^0,c
  5492  00142E                     l3165:
  5493  00142E  8E47               	bsf	(___fladd@a+2)^0,7,c
  5494  001430  0E00               	movlw	0
  5495  001432  6E48               	movwf	(___fladd@a+3)^0,c
  5496  001434  EF24  F00A         	goto	l3171
  5497  001438                     l3169:
  5498  001438  0E00               	movlw	0
  5499  00143A  6E45               	movwf	___fladd@a^0,c
  5500  00143C  0E00               	movlw	0
  5501  00143E  6E46               	movwf	(___fladd@a+1)^0,c
  5502  001440  0E00               	movlw	0
  5503  001442  6E47               	movwf	(___fladd@a+2)^0,c
  5504  001444  0E00               	movlw	0
  5505  001446  6E48               	movwf	(___fladd@a+3)^0,c
  5506  001448                     l3171:
  5507  001448  504F               	movf	___fladd@bexp^0,w,c
  5508  00144A  5C4E               	subwf	___fladd@aexp^0,w,c
  5509  00144C  B0D8               	btfsc	status,0,c
  5510  00144E  EF2B  F00A         	goto	u2471
  5511  001452  EF2D  F00A         	goto	u2470
  5512  001456                     u2471:
  5513  001456  EF54  F00A         	goto	l3207
  5514  00145A                     u2470:
  5515  00145A  AC4D               	btfss	___fladd@signs^0,6,c
  5516  00145C  EF32  F00A         	goto	u2481
  5517  001460  EF34  F00A         	goto	u2480
  5518  001464                     u2481:
  5519  001464  EF36  F00A         	goto	l3177
  5520  001468                     u2480:
  5521  001468  0E80               	movlw	128
  5522  00146A  1A4D               	xorwf	___fladd@signs^0,f,c
  5523  00146C                     l3177:
  5524  00146C  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5525  001470  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5526  001474  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5527  001478  C041  F050         	movff	___fladd@b,___fladd@grs
  5528  00147C  C045  F041         	movff	___fladd@a,___fladd@b
  5529  001480  C050  F045         	movff	___fladd@grs,___fladd@a
  5530  001484  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5531  001488  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5532  00148C  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5533  001490  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5534  001494  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5535  001498  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5536  00149C  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5537  0014A0  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5538  0014A4  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5539  0014A8                     l3207:
  5540  0014A8  0E00               	movlw	0
  5541  0014AA  6E50               	movwf	___fladd@grs^0,c
  5542  0014AC  504F               	movf	___fladd@bexp^0,w,c
  5543  0014AE  C04E  F049         	movff	___fladd@aexp,??___fladd
  5544  0014B2  6A4A               	clrf	(??___fladd+1)^0,c
  5545  0014B4  5E49               	subwf	??___fladd^0,f,c
  5546  0014B6  0E00               	movlw	0
  5547  0014B8  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5548  0014BA  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5549  0014BC  EF69  F00A         	goto	u2491
  5550  0014C0  504A               	movf	(??___fladd+1)^0,w,c
  5551  0014C2  E109               	bnz	u2490
  5552  0014C4  0E1A               	movlw	26
  5553  0014C6  5C49               	subwf	??___fladd^0,w,c
  5554  0014C8  A0D8               	btfss	status,0,c
  5555  0014CA  EF69  F00A         	goto	u2491
  5556  0014CE  EF6B  F00A         	goto	u2490
  5557  0014D2                     u2491:
  5558  0014D2  EFA2  F00A         	goto	l1065
  5559  0014D6                     u2490:
  5560  0014D6  5041               	movf	___fladd@b^0,w,c
  5561  0014D8  1042               	iorwf	(___fladd@b+1)^0,w,c
  5562  0014DA  1043               	iorwf	(___fladd@b+2)^0,w,c
  5563  0014DC  1044               	iorwf	(___fladd@b+3)^0,w,c
  5564  0014DE  A4D8               	btfss	status,2,c
  5565  0014E0  EF74  F00A         	goto	u2501
  5566  0014E4  EF77  F00A         	goto	u2500
  5567  0014E8                     u2501:
  5568  0014E8  0E01               	movlw	1
  5569  0014EA  EF78  F00A         	goto	u2510
  5570  0014EE                     u2500:
  5571  0014EE  0E00               	movlw	0
  5572  0014F0                     u2510:
  5573  0014F0  6E50               	movwf	___fladd@grs^0,c
  5574  0014F2  0E00               	movlw	0
  5575  0014F4  6E41               	movwf	___fladd@b^0,c
  5576  0014F6  0E00               	movlw	0
  5577  0014F8  6E42               	movwf	(___fladd@b+1)^0,c
  5578  0014FA  0E00               	movlw	0
  5579  0014FC  6E43               	movwf	(___fladd@b+2)^0,c
  5580  0014FE  0E00               	movlw	0
  5581  001500  6E44               	movwf	(___fladd@b+3)^0,c
  5582  001502  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5583  001506  EFAB  F00A         	goto	l1064
  5584  00150A                     l1066:
  5585  00150A  A050               	btfss	___fladd@grs^0,0,c
  5586  00150C  EF8A  F00A         	goto	u2521
  5587  001510  EF8C  F00A         	goto	u2520
  5588  001514                     u2521:
  5589  001514  EF92  F00A         	goto	l3219
  5590  001518                     u2520:
  5591  001518  90D8               	bcf	status,0,c
  5592  00151A  3050               	rrcf	___fladd@grs^0,w,c
  5593  00151C  0901               	iorlw	1
  5594  00151E  6E50               	movwf	___fladd@grs^0,c
  5595  001520  EF94  F00A         	goto	l3221
  5596  001524                     l3219:
  5597  001524  90D8               	bcf	status,0,c
  5598  001526  3250               	rrcf	___fladd@grs^0,f,c
  5599  001528                     l3221:
  5600  001528  A041               	btfss	___fladd@b^0,0,c
  5601  00152A  EF99  F00A         	goto	u2531
  5602  00152E  EF9B  F00A         	goto	u2530
  5603  001532                     u2531:
  5604  001532  EF9C  F00A         	goto	l3225
  5605  001536                     u2530:
  5606  001536  8E50               	bsf	___fladd@grs^0,7,c
  5607  001538                     l3225:
  5608  001538  3444               	rlcf	(___fladd@b+3)^0,w,c
  5609  00153A  3244               	rrcf	(___fladd@b+3)^0,f,c
  5610  00153C  3243               	rrcf	(___fladd@b+2)^0,f,c
  5611  00153E  3242               	rrcf	(___fladd@b+1)^0,f,c
  5612  001540  3241               	rrcf	___fladd@b^0,f,c
  5613  001542  2A4F               	incf	___fladd@bexp^0,f,c
  5614  001544                     l1065:
  5615  001544  504E               	movf	___fladd@aexp^0,w,c
  5616  001546  5C4F               	subwf	___fladd@bexp^0,w,c
  5617  001548  A0D8               	btfss	status,0,c
  5618  00154A  EFA9  F00A         	goto	u2541
  5619  00154E  EFAB  F00A         	goto	u2540
  5620  001552                     u2541:
  5621  001552  EF85  F00A         	goto	l1066
  5622  001556                     u2540:
  5623  001556                     l1064:
  5624  001556  BC4D               	btfsc	___fladd@signs^0,6,c
  5625  001558  EFB0  F00A         	goto	u2551
  5626  00155C  EFB2  F00A         	goto	u2550
  5627  001560                     u2551:
  5628  001560  EFF2  F00A         	goto	l3253
  5629  001564                     u2550:
  5630  001564  504F               	movf	___fladd@bexp^0,w,c
  5631  001566  A4D8               	btfss	status,2,c
  5632  001568  EFB8  F00A         	goto	u2561
  5633  00156C  EFBA  F00A         	goto	u2560
  5634  001570                     u2561:
  5635  001570  EFC4  F00A         	goto	l3235
  5636  001574                     u2560:
  5637  001574  0E00               	movlw	0
  5638  001576  6E41               	movwf	?___fladd^0,c
  5639  001578  0E00               	movlw	0
  5640  00157A  6E42               	movwf	(?___fladd+1)^0,c
  5641  00157C  0E00               	movlw	0
  5642  00157E  6E43               	movwf	(?___fladd+2)^0,c
  5643  001580  0E00               	movlw	0
  5644  001582  6E44               	movwf	(?___fladd+3)^0,c
  5645  001584  EF13  F00C         	goto	l1073
  5646  001588                     l3235:
  5647  001588  5045               	movf	___fladd@a^0,w,c
  5648  00158A  2641               	addwf	___fladd@b^0,f,c
  5649  00158C  5046               	movf	(___fladd@a+1)^0,w,c
  5650  00158E  2242               	addwfc	(___fladd@b+1)^0,f,c
  5651  001590  5047               	movf	(___fladd@a+2)^0,w,c
  5652  001592  2243               	addwfc	(___fladd@b+2)^0,f,c
  5653  001594  5048               	movf	(___fladd@a+3)^0,w,c
  5654  001596  2244               	addwfc	(___fladd@b+3)^0,f,c
  5655  001598  A044               	btfss	(___fladd@b+3)^0,0,c
  5656  00159A  EFD1  F00A         	goto	u2571
  5657  00159E  EFD3  F00A         	goto	u2570
  5658  0015A2                     u2571:
  5659  0015A2  EF7F  F00B         	goto	l3289
  5660  0015A6                     u2570:
  5661  0015A6  A050               	btfss	___fladd@grs^0,0,c
  5662  0015A8  EFD8  F00A         	goto	u2581
  5663  0015AC  EFDA  F00A         	goto	u2580
  5664  0015B0                     u2581:
  5665  0015B0  EFE0  F00A         	goto	l3243
  5666  0015B4                     u2580:
  5667  0015B4  90D8               	bcf	status,0,c
  5668  0015B6  3050               	rrcf	___fladd@grs^0,w,c
  5669  0015B8  0901               	iorlw	1
  5670  0015BA  6E50               	movwf	___fladd@grs^0,c
  5671  0015BC  EFE2  F00A         	goto	l3245
  5672  0015C0                     l3243:
  5673  0015C0  90D8               	bcf	status,0,c
  5674  0015C2  3250               	rrcf	___fladd@grs^0,f,c
  5675  0015C4                     l3245:
  5676  0015C4  A041               	btfss	___fladd@b^0,0,c
  5677  0015C6  EFE7  F00A         	goto	u2591
  5678  0015CA  EFE9  F00A         	goto	u2590
  5679  0015CE                     u2591:
  5680  0015CE  EFEA  F00A         	goto	l3249
  5681  0015D2                     u2590:
  5682  0015D2  8E50               	bsf	___fladd@grs^0,7,c
  5683  0015D4                     l3249:
  5684  0015D4  3444               	rlcf	(___fladd@b+3)^0,w,c
  5685  0015D6  3244               	rrcf	(___fladd@b+3)^0,f,c
  5686  0015D8  3243               	rrcf	(___fladd@b+2)^0,f,c
  5687  0015DA  3242               	rrcf	(___fladd@b+1)^0,f,c
  5688  0015DC  3241               	rrcf	___fladd@b^0,f,c
  5689  0015DE  2A4F               	incf	___fladd@bexp^0,f,c
  5690  0015E0  EF7F  F00B         	goto	l3289
  5691  0015E4                     l3253:
  5692  0015E4  5045               	movf	___fladd@a^0,w,c
  5693  0015E6  5C41               	subwf	___fladd@b^0,w,c
  5694  0015E8  5046               	movf	(___fladd@a+1)^0,w,c
  5695  0015EA  5842               	subwfb	(___fladd@b+1)^0,w,c
  5696  0015EC  5047               	movf	(___fladd@a+2)^0,w,c
  5697  0015EE  5843               	subwfb	(___fladd@b+2)^0,w,c
  5698  0015F0  5044               	movf	(___fladd@b+3)^0,w,c
  5699  0015F2  0A80               	xorlw	128
  5700  0015F4  6E49               	movwf	??___fladd^0,c
  5701  0015F6  5048               	movf	(___fladd@a+3)^0,w,c
  5702  0015F8  0A80               	xorlw	128
  5703  0015FA  5849               	subwfb	??___fladd^0,w,c
  5704  0015FC  B0D8               	btfsc	status,0,c
  5705  0015FE  EF03  F00B         	goto	u2601
  5706  001602  EF05  F00B         	goto	u2600
  5707  001606                     u2601:
  5708  001606  EF30  F00B         	goto	l3263
  5709  00160A                     u2600:
  5710  00160A  5041               	movf	___fladd@b^0,w,c
  5711  00160C  5C45               	subwf	___fladd@a^0,w,c
  5712  00160E  6E49               	movwf	??___fladd^0,c
  5713  001610  5042               	movf	(___fladd@b+1)^0,w,c
  5714  001612  5846               	subwfb	(___fladd@a+1)^0,w,c
  5715  001614  6E4A               	movwf	(??___fladd+1)^0,c
  5716  001616  5043               	movf	(___fladd@b+2)^0,w,c
  5717  001618  5847               	subwfb	(___fladd@a+2)^0,w,c
  5718  00161A  6E4B               	movwf	(??___fladd+2)^0,c
  5719  00161C  5044               	movf	(___fladd@b+3)^0,w,c
  5720  00161E  5848               	subwfb	(___fladd@a+3)^0,w,c
  5721  001620  6E4C               	movwf	(??___fladd+3)^0,c
  5722  001622  0EFF               	movlw	255
  5723  001624  2449               	addwf	??___fladd^0,w,c
  5724  001626  6E41               	movwf	___fladd@b^0,c
  5725  001628  0EFF               	movlw	255
  5726  00162A  204A               	addwfc	(??___fladd+1)^0,w,c
  5727  00162C  6E42               	movwf	(___fladd@b+1)^0,c
  5728  00162E  0EFF               	movlw	255
  5729  001630  204B               	addwfc	(??___fladd+2)^0,w,c
  5730  001632  6E43               	movwf	(___fladd@b+2)^0,c
  5731  001634  0EFF               	movlw	255
  5732  001636  204C               	addwfc	(??___fladd+3)^0,w,c
  5733  001638  6E44               	movwf	(___fladd@b+3)^0,c
  5734  00163A  0E80               	movlw	128
  5735  00163C  1A4D               	xorwf	___fladd@signs^0,f,c
  5736  00163E  6C50               	negf	___fladd@grs^0,c
  5737  001640  5050               	movf	___fladd@grs^0,w,c
  5738  001642  A4D8               	btfss	status,2,c
  5739  001644  EF26  F00B         	goto	u2611
  5740  001648  EF28  F00B         	goto	u2610
  5741  00164C                     u2611:
  5742  00164C  EF38  F00B         	goto	l1081
  5743  001650                     u2610:
  5744  001650  0E01               	movlw	1
  5745  001652  2641               	addwf	___fladd@b^0,f,c
  5746  001654  0E00               	movlw	0
  5747  001656  2242               	addwfc	(___fladd@b+1)^0,f,c
  5748  001658  2243               	addwfc	(___fladd@b+2)^0,f,c
  5749  00165A  2244               	addwfc	(___fladd@b+3)^0,f,c
  5750  00165C  EF38  F00B         	goto	l1081
  5751  001660                     l3263:
  5752  001660  5045               	movf	___fladd@a^0,w,c
  5753  001662  5E41               	subwf	___fladd@b^0,f,c
  5754  001664  5046               	movf	(___fladd@a+1)^0,w,c
  5755  001666  5A42               	subwfb	(___fladd@b+1)^0,f,c
  5756  001668  5047               	movf	(___fladd@a+2)^0,w,c
  5757  00166A  5A43               	subwfb	(___fladd@b+2)^0,f,c
  5758  00166C  5048               	movf	(___fladd@a+3)^0,w,c
  5759  00166E  5A44               	subwfb	(___fladd@b+3)^0,f,c
  5760  001670                     l1081:
  5761  001670  5041               	movf	___fladd@b^0,w,c
  5762  001672  1042               	iorwf	(___fladd@b+1)^0,w,c
  5763  001674  1043               	iorwf	(___fladd@b+2)^0,w,c
  5764  001676  1044               	iorwf	(___fladd@b+3)^0,w,c
  5765  001678  A4D8               	btfss	status,2,c
  5766  00167A  EF41  F00B         	goto	u2621
  5767  00167E  EF43  F00B         	goto	u2620
  5768  001682                     u2621:
  5769  001682  EF78  F00B         	goto	l3287
  5770  001686                     u2620:
  5771  001686  5050               	movf	___fladd@grs^0,w,c
  5772  001688  A4D8               	btfss	status,2,c
  5773  00168A  EF49  F00B         	goto	u2631
  5774  00168E  EF4B  F00B         	goto	u2630
  5775  001692                     u2631:
  5776  001692  EF78  F00B         	goto	l3287
  5777  001696                     u2630:
  5778  001696  0E00               	movlw	0
  5779  001698  6E41               	movwf	?___fladd^0,c
  5780  00169A  0E00               	movlw	0
  5781  00169C  6E42               	movwf	(?___fladd+1)^0,c
  5782  00169E  0E00               	movlw	0
  5783  0016A0  6E43               	movwf	(?___fladd+2)^0,c
  5784  0016A2  0E00               	movlw	0
  5785  0016A4  6E44               	movwf	(?___fladd+3)^0,c
  5786  0016A6  EF13  F00C         	goto	l1073
  5787  0016AA                     l3271:
  5788  0016AA  90D8               	bcf	status,0,c
  5789  0016AC  3641               	rlcf	___fladd@b^0,f,c
  5790  0016AE  3642               	rlcf	(___fladd@b+1)^0,f,c
  5791  0016B0  3643               	rlcf	(___fladd@b+2)^0,f,c
  5792  0016B2  3644               	rlcf	(___fladd@b+3)^0,f,c
  5793  0016B4  AE50               	btfss	___fladd@grs^0,7,c
  5794  0016B6  EF5F  F00B         	goto	u2641
  5795  0016BA  EF61  F00B         	goto	u2640
  5796  0016BE                     u2641:
  5797  0016BE  EF62  F00B         	goto	l3277
  5798  0016C2                     u2640:
  5799  0016C2  8041               	bsf	___fladd@b^0,0,c
  5800  0016C4                     l3277:
  5801  0016C4  A050               	btfss	___fladd@grs^0,0,c
  5802  0016C6  EF67  F00B         	goto	u2651
  5803  0016CA  EF69  F00B         	goto	u2650
  5804  0016CE                     u2651:
  5805  0016CE  EF6D  F00B         	goto	l3281
  5806  0016D2                     u2650:
  5807  0016D2  80D8               	bsf	status,0,c
  5808  0016D4  3650               	rlcf	___fladd@grs^0,f,c
  5809  0016D6  EF6F  F00B         	goto	l3283
  5810  0016DA                     l3281:
  5811  0016DA  90D8               	bcf	status,0,c
  5812  0016DC  3650               	rlcf	___fladd@grs^0,f,c
  5813  0016DE                     l3283:
  5814  0016DE  504F               	movf	___fladd@bexp^0,w,c
  5815  0016E0  B4D8               	btfsc	status,2,c
  5816  0016E2  EF75  F00B         	goto	u2661
  5817  0016E6  EF77  F00B         	goto	u2660
  5818  0016EA                     u2661:
  5819  0016EA  EF78  F00B         	goto	l3287
  5820  0016EE                     u2660:
  5821  0016EE  064F               	decf	___fladd@bexp^0,f,c
  5822  0016F0                     l3287:
  5823  0016F0  AE43               	btfss	(___fladd@b+2)^0,7,c
  5824  0016F2  EF7D  F00B         	goto	u2671
  5825  0016F6  EF7F  F00B         	goto	u2670
  5826  0016FA                     u2671:
  5827  0016FA  EF55  F00B         	goto	l3271
  5828  0016FE                     u2670:
  5829  0016FE                     l3289:
  5830  0016FE  0E00               	movlw	0
  5831  001700  6E4E               	movwf	___fladd@aexp^0,c
  5832  001702  AE50               	btfss	___fladd@grs^0,7,c
  5833  001704  EF86  F00B         	goto	u2681
  5834  001708  EF88  F00B         	goto	u2680
  5835  00170C                     u2681:
  5836  00170C  EFA0  F00B         	goto	l1090
  5837  001710                     u2680:
  5838  001710  C050  F049         	movff	___fladd@grs,??___fladd
  5839  001714  0E7F               	movlw	127
  5840  001716  1649               	andwf	??___fladd^0,f,c
  5841  001718  B4D8               	btfsc	status,2,c
  5842  00171A  EF91  F00B         	goto	u2691
  5843  00171E  EF93  F00B         	goto	u2690
  5844  001722                     u2691:
  5845  001722  EF97  F00B         	goto	l1091
  5846  001726                     u2690:
  5847  001726                     l3295:
  5848  001726  0E01               	movlw	1
  5849  001728  6E4E               	movwf	___fladd@aexp^0,c
  5850  00172A  EFA0  F00B         	goto	l1090
  5851  00172E                     l1091:
  5852  00172E  A041               	btfss	___fladd@b^0,0,c
  5853  001730  EF9C  F00B         	goto	u2701
  5854  001734  EF9E  F00B         	goto	u2700
  5855  001738                     u2701:
  5856  001738  EFA0  F00B         	goto	l1090
  5857  00173C                     u2700:
  5858  00173C  EF93  F00B         	goto	l3295
  5859  001740                     l1090:
  5860  001740  504E               	movf	___fladd@aexp^0,w,c
  5861  001742  B4D8               	btfsc	status,2,c
  5862  001744  EFA6  F00B         	goto	u2711
  5863  001748  EFA8  F00B         	goto	u2710
  5864  00174C                     u2711:
  5865  00174C  EFD3  F00B         	goto	l3307
  5866  001750                     u2710:
  5867  001750  0E01               	movlw	1
  5868  001752  2641               	addwf	___fladd@b^0,f,c
  5869  001754  0E00               	movlw	0
  5870  001756  2242               	addwfc	(___fladd@b+1)^0,f,c
  5871  001758  2243               	addwfc	(___fladd@b+2)^0,f,c
  5872  00175A  2244               	addwfc	(___fladd@b+3)^0,f,c
  5873  00175C  A044               	btfss	(___fladd@b+3)^0,0,c
  5874  00175E  EFB3  F00B         	goto	u2721
  5875  001762  EFB5  F00B         	goto	u2720
  5876  001766                     u2721:
  5877  001766  EFD3  F00B         	goto	l3307
  5878  00176A                     u2720:
  5879  00176A  C041  F049         	movff	___fladd@b,??___fladd
  5880  00176E  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  5881  001772  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  5882  001776  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  5883  00177A  344C               	rlcf	(??___fladd+3)^0,w,c
  5884  00177C  324C               	rrcf	(??___fladd+3)^0,f,c
  5885  00177E  324B               	rrcf	(??___fladd+2)^0,f,c
  5886  001780  324A               	rrcf	(??___fladd+1)^0,f,c
  5887  001782  3249               	rrcf	??___fladd^0,f,c
  5888  001784  C049  F041         	movff	??___fladd,___fladd@b
  5889  001788  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  5890  00178C  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  5891  001790  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  5892  001794  284F               	incf	___fladd@bexp^0,w,c
  5893  001796  B4D8               	btfsc	status,2,c
  5894  001798  EFD0  F00B         	goto	u2731
  5895  00179C  EFD2  F00B         	goto	u2730
  5896  0017A0                     u2731:
  5897  0017A0  EFD3  F00B         	goto	l3307
  5898  0017A4                     u2730:
  5899  0017A4  2A4F               	incf	___fladd@bexp^0,f,c
  5900  0017A6                     l3307:
  5901  0017A6  284F               	incf	___fladd@bexp^0,w,c
  5902  0017A8  B4D8               	btfsc	status,2,c
  5903  0017AA  EFD9  F00B         	goto	u2741
  5904  0017AE  EFDB  F00B         	goto	u2740
  5905  0017B2                     u2741:
  5906  0017B2  EFE3  F00B         	goto	l3311
  5907  0017B6                     u2740:
  5908  0017B6  504F               	movf	___fladd@bexp^0,w,c
  5909  0017B8  A4D8               	btfss	status,2,c
  5910  0017BA  EFE1  F00B         	goto	u2751
  5911  0017BE  EFE3  F00B         	goto	u2750
  5912  0017C2                     u2751:
  5913  0017C2  EFF5  F00B         	goto	l3315
  5914  0017C6                     u2750:
  5915  0017C6                     l3311:
  5916  0017C6  0E00               	movlw	0
  5917  0017C8  6E41               	movwf	___fladd@b^0,c
  5918  0017CA  0E00               	movlw	0
  5919  0017CC  6E42               	movwf	(___fladd@b+1)^0,c
  5920  0017CE  0E00               	movlw	0
  5921  0017D0  6E43               	movwf	(___fladd@b+2)^0,c
  5922  0017D2  0E00               	movlw	0
  5923  0017D4  6E44               	movwf	(___fladd@b+3)^0,c
  5924  0017D6  504F               	movf	___fladd@bexp^0,w,c
  5925  0017D8  A4D8               	btfss	status,2,c
  5926  0017DA  EFF1  F00B         	goto	u2761
  5927  0017DE  EFF3  F00B         	goto	u2760
  5928  0017E2                     u2761:
  5929  0017E2  EFF5  F00B         	goto	l3315
  5930  0017E6                     u2760:
  5931  0017E6  0E00               	movlw	0
  5932  0017E8  6E4D               	movwf	___fladd@signs^0,c
  5933  0017EA                     l3315:
  5934  0017EA  A04F               	btfss	___fladd@bexp^0,0,c
  5935  0017EC  EFFA  F00B         	goto	u2771
  5936  0017F0  EFFC  F00B         	goto	u2770
  5937  0017F4                     u2771:
  5938  0017F4  EFFF  F00B         	goto	l3319
  5939  0017F8                     u2770:
  5940  0017F8  8E43               	bsf	(___fladd@b+2)^0,7,c
  5941  0017FA  EF00  F00C         	goto	l3321
  5942  0017FE                     l3319:
  5943  0017FE  9E43               	bcf	(___fladd@b+2)^0,7,c
  5944  001800                     l3321:
  5945  001800  90D8               	bcf	status,0,c
  5946  001802  304F               	rrcf	___fladd@bexp^0,w,c
  5947  001804  6E44               	movwf	(___fladd@b+3)^0,c
  5948  001806  AE4D               	btfss	___fladd@signs^0,7,c
  5949  001808  EF08  F00C         	goto	u2781
  5950  00180C  EF0A  F00C         	goto	u2780
  5951  001810                     u2781:
  5952  001810  EF0B  F00C         	goto	l3327
  5953  001814                     u2780:
  5954  001814  8E44               	bsf	(___fladd@b+3)^0,7,c
  5955  001816                     l3327:
  5956  001816  C041  F041         	movff	___fladd@b,?___fladd
  5957  00181A  C042  F042         	movff	___fladd@b+1,?___fladd+1
  5958  00181E  C043  F043         	movff	___fladd@b+2,?___fladd+2
  5959  001822  C044  F044         	movff	___fladd@b+3,?___fladd+3
  5960  001826                     l1073:
  5961  001826  0012               	return		;funcret
  5962  001828                     __end_of___fladd:
  5963                           	callstack 0
  5964                           
  5965 ;; *************** function _color_click_init *****************
  5966 ;; Defined at:
  5967 ;;		line 10 in file "color.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;Total ram usage:        1 bytes
  5986 ;; Hardware stack levels used: 1
  5987 ;; Hardware stack levels required when called: 4
  5988 ;; This function calls:
  5989 ;;		_I2C_2_Master_Init
  5990 ;;		_color_writetoaddr
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text14
  5997  003686                     __ptext14:
  5998                           	callstack 0
  5999  003686                     _color_click_init:
  6000                           	callstack 26
  6001  003686                     
  6002                           ;color.c: 13:     I2C_2_Master_Init();
  6003  003686  EC5D  F01B         	call	_I2C_2_Master_Init	;wreg free
  6004  00368A                     
  6005                           ;color.c: 16:   color_writetoaddr(0x00, 0x01);
  6006  00368A  0E01               	movlw	1
  6007  00368C  6E03               	movwf	color_writetoaddr@value^0,c
  6008  00368E  0E00               	movlw	0
  6009  003690  ECBA  F01B         	call	_color_writetoaddr
  6010  003694                     
  6011                           ;color.c: 17:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6012  003694  0E3F               	movlw	63
  6013  003696  6E05               	movwf	??_color_click_init^0,c
  6014  003698  0E55               	movlw	85
  6015  00369A                     u4327:
  6016  00369A  2EE8               	decfsz	wreg,f,c
  6017  00369C  D7FE               	bra	u4327
  6018  00369E  2E05               	decfsz	??_color_click_init^0,f,c
  6019  0036A0  D7FC               	bra	u4327
  6020  0036A2  F000               	nop	
  6021  0036A4                     
  6022                           ;color.c: 20:  color_writetoaddr(0x00, 0x03);
  6023  0036A4  0E03               	movlw	3
  6024  0036A6  6E03               	movwf	color_writetoaddr@value^0,c
  6025  0036A8  0E00               	movlw	0
  6026  0036AA  ECBA  F01B         	call	_color_writetoaddr
  6027  0036AE                     
  6028                           ;color.c: 23:  color_writetoaddr(0x01, 0xD5);
  6029  0036AE  0ED5               	movlw	213
  6030  0036B0  6E03               	movwf	color_writetoaddr@value^0,c
  6031  0036B2  0E01               	movlw	1
  6032  0036B4  ECBA  F01B         	call	_color_writetoaddr
  6033  0036B8  0012               	return		;funcret
  6034  0036BA                     __end_of_color_click_init:
  6035                           	callstack 0
  6036                           
  6037 ;; *************** function _color_writetoaddr *****************
  6038 ;; Defined at:
  6039 ;;		line 26 in file "color.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  address         1    wreg     unsigned char 
  6042 ;;  value           1    2[COMRAM] unsigned char 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  address         1    3[COMRAM] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6054 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;Total ram usage:        2 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 3
  6061 ;; This function calls:
  6062 ;;		_I2C_2_Master_Start
  6063 ;;		_I2C_2_Master_Stop
  6064 ;;		_I2C_2_Master_Write
  6065 ;; This function is called by:
  6066 ;;		_color_click_init
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text15
  6071  003774                     __ptext15:
  6072                           	callstack 0
  6073  003774                     _color_writetoaddr:
  6074                           	callstack 26
  6075                           
  6076                           ;incstack = 0
  6077                           ;color_writetoaddr@address stored from wreg
  6078  003774  6E04               	movwf	color_writetoaddr@address^0,c
  6079  003776                     
  6080                           ;color.c: 27:     I2C_2_Master_Start();
  6081  003776  ECE9  F01B         	call	_I2C_2_Master_Start	;wreg free
  6082                           
  6083                           ;color.c: 28:     I2C_2_Master_Write(0x52 | 0x00);
  6084  00377A  0E52               	movlw	82
  6085  00377C  ECD8  F01B         	call	_I2C_2_Master_Write
  6086                           
  6087                           ;color.c: 29:     I2C_2_Master_Write(0x80 | address);
  6088  003780  5004               	movf	color_writetoaddr@address^0,w,c
  6089  003782  0980               	iorlw	128
  6090  003784  ECD8  F01B         	call	_I2C_2_Master_Write
  6091                           
  6092                           ;color.c: 30:     I2C_2_Master_Write(value);
  6093  003788  5003               	movf	color_writetoaddr@value^0,w,c
  6094  00378A  ECD8  F01B         	call	_I2C_2_Master_Write
  6095                           
  6096                           ;color.c: 31:     I2C_2_Master_Stop();
  6097  00378E  ECE4  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6098  003792  0012               	return		;funcret
  6099  003794                     __end_of_color_writetoaddr:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _I2C_2_Master_Init *****************
  6103 ;; Defined at:
  6104 ;;		line 4 in file "i2c.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_color_click_init
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text16
  6133  0036BA                     __ptext16:
  6134                           	callstack 0
  6135  0036BA                     _I2C_2_Master_Init:
  6136                           	callstack 28
  6137  0036BA                     
  6138                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6139  0036BA  010E               	movlb	14	; () banked
  6140  0036BC  51D9               	movf	217,w,b	;volatile
  6141  0036BE  0BF0               	andlw	-16
  6142  0036C0  0908               	iorlw	8
  6143  0036C2  6FD9               	movwf	217,b	;volatile
  6144  0036C4                     
  6145                           ; BSR set to: 14
  6146                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6147  0036C4  8BD9               	bsf	217,5,b	;volatile
  6148                           
  6149                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6150  0036C6  0E9F               	movlw	159
  6151  0036C8  6FD6               	movwf	214,b	;volatile
  6152  0036CA                     
  6153                           ; BSR set to: 14
  6154                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6155  0036CA  8A84               	bsf	132,5,c	;volatile
  6156  0036CC                     
  6157                           ; BSR set to: 14
  6158                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6159  0036CC  8C84               	bsf	132,6,c	;volatile
  6160  0036CE                     
  6161                           ; BSR set to: 14
  6162                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6163  0036CE  9BA7               	bcf	167,5,b	;volatile
  6164  0036D0                     
  6165                           ; BSR set to: 14
  6166                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6167  0036D0  9DA7               	bcf	167,6,b	;volatile
  6168                           
  6169                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6170  0036D2  0E1D               	movlw	29
  6171  0036D4  6F1D               	movwf	29,b	;volatile
  6172                           
  6173                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6174  0036D6  0E1E               	movlw	30
  6175  0036D8  6F1C               	movwf	28,b	;volatile
  6176                           
  6177                           ;i2c.c: 18:   RD5PPS=0x1C;
  6178  0036DA  0E1C               	movlw	28
  6179  0036DC  6F6F               	movwf	111,b	;volatile
  6180                           
  6181                           ;i2c.c: 19:   RD6PPS=0x1B;
  6182  0036DE  0E1B               	movlw	27
  6183  0036E0  6F70               	movwf	112,b	;volatile
  6184  0036E2                     
  6185                           ; BSR set to: 14
  6186  0036E2  0012               	return		;funcret
  6187  0036E4                     __end_of_I2C_2_Master_Init:
  6188                           	callstack 0
  6189                           
  6190 ;; *************** function _calibrateW *****************
  6191 ;; Defined at:
  6192 ;;		line 100 in file "color.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6195 ;;		 -> main@test(20), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6211 ;;Total ram usage:        2 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 4
  6214 ;; This function calls:
  6215 ;;		_color_read_Blue
  6216 ;;		_color_read_Green
  6217 ;;		_color_read_Red
  6218 ;; This function is called by:
  6219 ;;		_main
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text17
  6224  003572                     __ptext17:
  6225                           	callstack 0
  6226  003572                     _calibrateW:
  6227                           	callstack 26
  6228  003572                     
  6229                           ;color.c: 101:     (m->whiteR) = color_read_Red();
  6230  003572  EC41  F01A         	call	_color_read_Red	;wreg free
  6231  003576  EE20 F006          	lfsr	2,6
  6232  00357A  500C               	movf	calibrateW@m^0,w,c
  6233  00357C  26D9               	addwf	fsr2l,f,c
  6234  00357E  500D               	movf	(calibrateW@m+1)^0,w,c
  6235  003580  22DA               	addwfc	fsr2h,f,c
  6236  003582  C005  FFDE         	movff	?_color_read_Red,postinc2
  6237  003586  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6238                           
  6239                           ;color.c: 102:     (m->whiteG) = color_read_Green();
  6240  00358A  EC69  F01A         	call	_color_read_Green	;wreg free
  6241  00358E  EE20 F008          	lfsr	2,8
  6242  003592  500C               	movf	calibrateW@m^0,w,c
  6243  003594  26D9               	addwf	fsr2l,f,c
  6244  003596  500D               	movf	(calibrateW@m+1)^0,w,c
  6245  003598  22DA               	addwfc	fsr2h,f,c
  6246  00359A  C005  FFDE         	movff	?_color_read_Green,postinc2
  6247  00359E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6248                           
  6249                           ;color.c: 103:     (m->whiteB) = color_read_Blue();
  6250  0035A2  EC91  F01A         	call	_color_read_Blue	;wreg free
  6251  0035A6  EE20 F00A          	lfsr	2,10
  6252  0035AA  500C               	movf	calibrateW@m^0,w,c
  6253  0035AC  26D9               	addwf	fsr2l,f,c
  6254  0035AE  500D               	movf	(calibrateW@m+1)^0,w,c
  6255  0035B0  22DA               	addwfc	fsr2h,f,c
  6256  0035B2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6257  0035B6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6258  0035BA  0012               	return		;funcret
  6259  0035BC                     __end_of_calibrateW:
  6260                           	callstack 0
  6261                           
  6262 ;; *************** function _calibrateB *****************
  6263 ;; Defined at:
  6264 ;;		line 106 in file "color.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6267 ;;		 -> main@test(20), 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;Total ram usage:        2 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 4
  6286 ;; This function calls:
  6287 ;;		_color_read_Blue
  6288 ;;		_color_read_Green
  6289 ;;		_color_read_Red
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text18
  6296  0035BC                     __ptext18:
  6297                           	callstack 0
  6298  0035BC                     _calibrateB:
  6299                           	callstack 26
  6300  0035BC                     
  6301                           ;color.c: 107:     (m->blackR) = color_read_Red();
  6302  0035BC  EC41  F01A         	call	_color_read_Red	;wreg free
  6303  0035C0  C00C  FFD9         	movff	calibrateB@m,fsr2l
  6304  0035C4  C00D  FFDA         	movff	calibrateB@m+1,fsr2h
  6305  0035C8  C005  FFDE         	movff	?_color_read_Red,postinc2
  6306  0035CC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6307                           
  6308                           ;color.c: 108:     (m->blackG) = color_read_Green();
  6309  0035D0  EC69  F01A         	call	_color_read_Green	;wreg free
  6310  0035D4  EE20 F002          	lfsr	2,2
  6311  0035D8  500C               	movf	calibrateB@m^0,w,c
  6312  0035DA  26D9               	addwf	fsr2l,f,c
  6313  0035DC  500D               	movf	(calibrateB@m+1)^0,w,c
  6314  0035DE  22DA               	addwfc	fsr2h,f,c
  6315  0035E0  C005  FFDE         	movff	?_color_read_Green,postinc2
  6316  0035E4  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6317                           
  6318                           ;color.c: 109:     (m->blackB) = color_read_Blue();
  6319  0035E8  EC91  F01A         	call	_color_read_Blue	;wreg free
  6320  0035EC  EE20 F004          	lfsr	2,4
  6321  0035F0  500C               	movf	calibrateB@m^0,w,c
  6322  0035F2  26D9               	addwf	fsr2l,f,c
  6323  0035F4  500D               	movf	(calibrateB@m+1)^0,w,c
  6324  0035F6  22DA               	addwfc	fsr2h,f,c
  6325  0035F8  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6326  0035FC  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6327  003600  0012               	return		;funcret
  6328  003602                     __end_of_calibrateB:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function _color_read_Red *****************
  6332 ;; Defined at:
  6333 ;;		line 48 in file "color.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  tmp             2    9[COMRAM] unsigned int 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2    4[COMRAM] unsigned int 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;Total ram usage:        7 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 3
  6354 ;; This function calls:
  6355 ;;		_I2C_2_Master_Read
  6356 ;;		_I2C_2_Master_RepStart
  6357 ;;		_I2C_2_Master_Start
  6358 ;;		_I2C_2_Master_Stop
  6359 ;;		_I2C_2_Master_Write
  6360 ;; This function is called by:
  6361 ;;		_read_colours
  6362 ;;		_calibrateW
  6363 ;;		_calibrateB
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text19
  6368  003482                     __ptext19:
  6369                           	callstack 0
  6370  003482                     _color_read_Red:
  6371                           	callstack 26
  6372  003482                     
  6373                           ;color.c: 50:  unsigned int tmp;;color.c: 51:  I2C_2_Master_Start();
  6374  003482  ECE9  F01B         	call	_I2C_2_Master_Start	;wreg free
  6375                           
  6376                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x00);
  6377  003486  0E52               	movlw	82
  6378  003488  ECD8  F01B         	call	_I2C_2_Master_Write
  6379                           
  6380                           ;color.c: 53:  I2C_2_Master_Write(0xA0 | 0x16);
  6381  00348C  0EB6               	movlw	182
  6382  00348E  ECD8  F01B         	call	_I2C_2_Master_Write
  6383                           
  6384                           ;color.c: 54:  I2C_2_Master_RepStart();
  6385  003492  ECEE  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  6386                           
  6387                           ;color.c: 55:  I2C_2_Master_Write(0x52 | 0x01);
  6388  003496  0E53               	movlw	83
  6389  003498  ECD8  F01B         	call	_I2C_2_Master_Write
  6390                           
  6391                           ;color.c: 56:  tmp=I2C_2_Master_Read(1);
  6392  00349C  0E01               	movlw	1
  6393  00349E  EC22  F01B         	call	_I2C_2_Master_Read
  6394  0034A2  6E07               	movwf	??_color_read_Red^0,c
  6395  0034A4  5007               	movf	??_color_read_Red^0,w,c
  6396  0034A6  6E0A               	movwf	color_read_Red@tmp^0,c
  6397  0034A8  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6398                           
  6399                           ;color.c: 57:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6400  0034AA  0E00               	movlw	0
  6401  0034AC  EC22  F01B         	call	_I2C_2_Master_Read
  6402  0034B0  6E07               	movwf	??_color_read_Red^0,c
  6403  0034B2  5007               	movf	??_color_read_Red^0,w,c
  6404  0034B4  6E09               	movwf	(??_color_read_Red+2)^0,c
  6405  0034B6  6A08               	clrf	(??_color_read_Red+1)^0,c
  6406  0034B8  500A               	movf	color_read_Red@tmp^0,w,c
  6407  0034BA  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6408  0034BC  6E0A               	movwf	color_read_Red@tmp^0,c
  6409  0034BE  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6410  0034C0  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6411  0034C2  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6412                           
  6413                           ;color.c: 58:  I2C_2_Master_Stop();
  6414  0034C4  ECE4  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6415  0034C8                     
  6416                           ;color.c: 59:  return tmp;
  6417  0034C8  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6418  0034CC  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6419  0034D0  0012               	return		;funcret
  6420  0034D2                     __end_of_color_read_Red:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _color_read_Green *****************
  6424 ;; Defined at:
  6425 ;;		line 62 in file "color.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  tmp             2    9[COMRAM] unsigned int 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  2    4[COMRAM] unsigned int 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;Total ram usage:        7 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; Hardware stack levels required when called: 3
  6446 ;; This function calls:
  6447 ;;		_I2C_2_Master_Read
  6448 ;;		_I2C_2_Master_RepStart
  6449 ;;		_I2C_2_Master_Start
  6450 ;;		_I2C_2_Master_Stop
  6451 ;;		_I2C_2_Master_Write
  6452 ;; This function is called by:
  6453 ;;		_read_colours
  6454 ;;		_calibrateW
  6455 ;;		_calibrateB
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text20
  6460  0034D2                     __ptext20:
  6461                           	callstack 0
  6462  0034D2                     _color_read_Green:
  6463                           	callstack 26
  6464  0034D2                     
  6465                           ;color.c: 63:     unsigned int tmp;;color.c: 64:     I2C_2_Master_Start();
  6466  0034D2  ECE9  F01B         	call	_I2C_2_Master_Start	;wreg free
  6467                           
  6468                           ;color.c: 65:     I2C_2_Master_Write(0x52 | 0x00);
  6469  0034D6  0E52               	movlw	82
  6470  0034D8  ECD8  F01B         	call	_I2C_2_Master_Write
  6471                           
  6472                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  6473  0034DC  0EB8               	movlw	184
  6474  0034DE  ECD8  F01B         	call	_I2C_2_Master_Write
  6475                           
  6476                           ;color.c: 67:  I2C_2_Master_RepStart();
  6477  0034E2  ECEE  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  6478                           
  6479                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  6480  0034E6  0E53               	movlw	83
  6481  0034E8  ECD8  F01B         	call	_I2C_2_Master_Write
  6482                           
  6483                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  6484  0034EC  0E01               	movlw	1
  6485  0034EE  EC22  F01B         	call	_I2C_2_Master_Read
  6486  0034F2  6E07               	movwf	??_color_read_Green^0,c
  6487  0034F4  5007               	movf	??_color_read_Green^0,w,c
  6488  0034F6  6E0A               	movwf	color_read_Green@tmp^0,c
  6489  0034F8  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6490                           
  6491                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6492  0034FA  0E00               	movlw	0
  6493  0034FC  EC22  F01B         	call	_I2C_2_Master_Read
  6494  003500  6E07               	movwf	??_color_read_Green^0,c
  6495  003502  5007               	movf	??_color_read_Green^0,w,c
  6496  003504  6E09               	movwf	(??_color_read_Green+2)^0,c
  6497  003506  6A08               	clrf	(??_color_read_Green+1)^0,c
  6498  003508  500A               	movf	color_read_Green@tmp^0,w,c
  6499  00350A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6500  00350C  6E0A               	movwf	color_read_Green@tmp^0,c
  6501  00350E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6502  003510  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6503  003512  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6504                           
  6505                           ;color.c: 71:     I2C_2_Master_Stop();
  6506  003514  ECE4  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6507  003518                     
  6508                           ;color.c: 72:     return tmp;
  6509  003518  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6510  00351C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6511  003520  0012               	return		;funcret
  6512  003522                     __end_of_color_read_Green:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _color_read_Blue *****************
  6516 ;; Defined at:
  6517 ;;		line 75 in file "color.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  tmp             2    9[COMRAM] unsigned int 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  2    4[COMRAM] unsigned int 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;Total ram usage:        7 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 3
  6538 ;; This function calls:
  6539 ;;		_I2C_2_Master_Read
  6540 ;;		_I2C_2_Master_RepStart
  6541 ;;		_I2C_2_Master_Start
  6542 ;;		_I2C_2_Master_Stop
  6543 ;;		_I2C_2_Master_Write
  6544 ;; This function is called by:
  6545 ;;		_read_colours
  6546 ;;		_calibrateW
  6547 ;;		_calibrateB
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text21
  6552  003522                     __ptext21:
  6553                           	callstack 0
  6554  003522                     _color_read_Blue:
  6555                           	callstack 26
  6556  003522                     
  6557                           ;color.c: 76:     unsigned int tmp;;color.c: 77:     I2C_2_Master_Start();
  6558  003522  ECE9  F01B         	call	_I2C_2_Master_Start	;wreg free
  6559                           
  6560                           ;color.c: 78:     I2C_2_Master_Write(0x52 | 0x00);
  6561  003526  0E52               	movlw	82
  6562  003528  ECD8  F01B         	call	_I2C_2_Master_Write
  6563                           
  6564                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  6565  00352C  0EBA               	movlw	186
  6566  00352E  ECD8  F01B         	call	_I2C_2_Master_Write
  6567                           
  6568                           ;color.c: 80:  I2C_2_Master_RepStart();
  6569  003532  ECEE  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  6570                           
  6571                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  6572  003536  0E53               	movlw	83
  6573  003538  ECD8  F01B         	call	_I2C_2_Master_Write
  6574                           
  6575                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  6576  00353C  0E01               	movlw	1
  6577  00353E  EC22  F01B         	call	_I2C_2_Master_Read
  6578  003542  6E07               	movwf	??_color_read_Blue^0,c
  6579  003544  5007               	movf	??_color_read_Blue^0,w,c
  6580  003546  6E0A               	movwf	color_read_Blue@tmp^0,c
  6581  003548  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6582                           
  6583                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6584  00354A  0E00               	movlw	0
  6585  00354C  EC22  F01B         	call	_I2C_2_Master_Read
  6586  003550  6E07               	movwf	??_color_read_Blue^0,c
  6587  003552  5007               	movf	??_color_read_Blue^0,w,c
  6588  003554  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6589  003556  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6590  003558  500A               	movf	color_read_Blue@tmp^0,w,c
  6591  00355A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6592  00355C  6E0A               	movwf	color_read_Blue@tmp^0,c
  6593  00355E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6594  003560  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6595  003562  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6596                           
  6597                           ;color.c: 84:     I2C_2_Master_Stop();
  6598  003564  ECE4  F01B         	call	_I2C_2_Master_Stop	;wreg free
  6599  003568                     
  6600                           ;color.c: 85:     return tmp;
  6601  003568  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6602  00356C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6603  003570  0012               	return		;funcret
  6604  003572                     __end_of_color_read_Blue:
  6605                           	callstack 0
  6606                           
  6607 ;; *************** function _I2C_2_Master_Write *****************
  6608 ;; Defined at:
  6609 ;;		line 45 in file "i2c.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  data_byte       1    wreg     unsigned char 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  data_byte       1    1[COMRAM] unsigned char 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;Total ram usage:        1 bytes
  6628 ;; Hardware stack levels used: 1
  6629 ;; Hardware stack levels required when called: 2
  6630 ;; This function calls:
  6631 ;;		_I2C_2_Master_Idle
  6632 ;; This function is called by:
  6633 ;;		_color_writetoaddr
  6634 ;;		_color_read_Clear
  6635 ;;		_color_read_Red
  6636 ;;		_color_read_Green
  6637 ;;		_color_read_Blue
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text22
  6642  0037B0                     __ptext22:
  6643                           	callstack 0
  6644  0037B0                     _I2C_2_Master_Write:
  6645                           	callstack 26
  6646                           
  6647                           ;incstack = 0
  6648                           ;I2C_2_Master_Write@data_byte stored from wreg
  6649  0037B0  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6650  0037B2                     
  6651                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6652  0037B2  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6653  0037B6                     
  6654                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6655  0037B6  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6656  0037BA  0012               	return		;funcret
  6657  0037BC                     __end_of_I2C_2_Master_Write:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function _I2C_2_Master_Stop *****************
  6661 ;; Defined at:
  6662 ;;		line 39 in file "i2c.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;Total ram usage:        0 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 2
  6683 ;; This function calls:
  6684 ;;		_I2C_2_Master_Idle
  6685 ;; This function is called by:
  6686 ;;		_color_writetoaddr
  6687 ;;		_color_read_Clear
  6688 ;;		_color_read_Red
  6689 ;;		_color_read_Green
  6690 ;;		_color_read_Blue
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text23
  6695  0037C8                     __ptext23:
  6696                           	callstack 0
  6697  0037C8                     _I2C_2_Master_Stop:
  6698                           	callstack 26
  6699  0037C8                     
  6700                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6701  0037C8  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6702  0037CC                     
  6703                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6704  0037CC  010E               	movlb	14	; () banked
  6705  0037CE  85DA               	bsf	218,2,b	;volatile
  6706  0037D0                     
  6707                           ; BSR set to: 14
  6708  0037D0  0012               	return		;funcret
  6709  0037D2                     __end_of_I2C_2_Master_Stop:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _I2C_2_Master_Start *****************
  6713 ;; Defined at:
  6714 ;;		line 27 in file "i2c.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 2
  6735 ;; This function calls:
  6736 ;;		_I2C_2_Master_Idle
  6737 ;; This function is called by:
  6738 ;;		_color_writetoaddr
  6739 ;;		_color_read_Clear
  6740 ;;		_color_read_Red
  6741 ;;		_color_read_Green
  6742 ;;		_color_read_Blue
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text24
  6747  0037D2                     __ptext24:
  6748                           	callstack 0
  6749  0037D2                     _I2C_2_Master_Start:
  6750                           	callstack 26
  6751  0037D2                     
  6752                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6753  0037D2  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6754  0037D6                     
  6755                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6756  0037D6  010E               	movlb	14	; () banked
  6757  0037D8  81DA               	bsf	218,0,b	;volatile
  6758  0037DA                     
  6759                           ; BSR set to: 14
  6760  0037DA  0012               	return		;funcret
  6761  0037DC                     __end_of_I2C_2_Master_Start:
  6762                           	callstack 0
  6763                           
  6764 ;; *************** function _I2C_2_Master_RepStart *****************
  6765 ;; Defined at:
  6766 ;;		line 33 in file "i2c.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;		None
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;		None
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  1    wreg      void 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;Total ram usage:        0 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; Hardware stack levels required when called: 2
  6787 ;; This function calls:
  6788 ;;		_I2C_2_Master_Idle
  6789 ;; This function is called by:
  6790 ;;		_color_read_Clear
  6791 ;;		_color_read_Red
  6792 ;;		_color_read_Green
  6793 ;;		_color_read_Blue
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text25
  6798  0037DC                     __ptext25:
  6799                           	callstack 0
  6800  0037DC                     _I2C_2_Master_RepStart:
  6801                           	callstack 26
  6802  0037DC                     
  6803                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6804  0037DC  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6805  0037E0                     
  6806                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6807  0037E0  010E               	movlb	14	; () banked
  6808  0037E2  83DA               	bsf	218,1,b	;volatile
  6809  0037E4                     
  6810                           ; BSR set to: 14
  6811  0037E4  0012               	return		;funcret
  6812  0037E6                     __end_of_I2C_2_Master_RepStart:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _I2C_2_Master_Read *****************
  6816 ;; Defined at:
  6817 ;;		line 51 in file "i2c.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  ack             1    wreg     unsigned char 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  ack             1    2[COMRAM] unsigned char 
  6822 ;;  tmp             1    3[COMRAM] unsigned char 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      unsigned char 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6835 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;Total ram usage:        3 bytes
  6837 ;; Hardware stack levels used: 1
  6838 ;; Hardware stack levels required when called: 2
  6839 ;; This function calls:
  6840 ;;		_I2C_2_Master_Idle
  6841 ;; This function is called by:
  6842 ;;		_color_read_Clear
  6843 ;;		_color_read_Red
  6844 ;;		_color_read_Green
  6845 ;;		_color_read_Blue
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text26
  6850  003644                     __ptext26:
  6851                           	callstack 0
  6852  003644                     _I2C_2_Master_Read:
  6853                           	callstack 26
  6854                           
  6855                           ; BSR set to: 14
  6856                           ;incstack = 0
  6857                           ;I2C_2_Master_Read@ack stored from wreg
  6858  003644  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6859  003646                     
  6860                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6861  003646  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6862  00364A                     
  6863                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6864  00364A  010E               	movlb	14	; () banked
  6865  00364C  87DA               	bsf	218,3,b	;volatile
  6866                           
  6867                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6868  00364E  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6869  003652                     
  6870                           ;i2c.c: 57:   tmp = SSP2BUF;
  6871  003652  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6872                           
  6873                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6874  003656  EC72  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6875  00365A                     
  6876                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6877  00365A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6878  00365C  B4D8               	btfsc	status,2,c
  6879  00365E  EF33  F01B         	goto	u2261
  6880  003662  EF37  F01B         	goto	u2260
  6881  003666                     u2261:
  6882  003666  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6883  003668  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6884  00366A  EF38  F01B         	goto	u2278
  6885  00366E                     u2260:
  6886  00366E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6887  003670                     u2278:
  6888  003670  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6889  003672  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6890  003674  010E               	movlb	14	; () banked
  6891  003676  51DA               	movf	218,w,b	;volatile
  6892  003678  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6893  00367A  0BDF               	andlw	-33
  6894  00367C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6895  00367E  6FDA               	movwf	218,b	;volatile
  6896  003680                     
  6897                           ; BSR set to: 14
  6898                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6899  003680  89DA               	bsf	218,4,b	;volatile
  6900  003682                     
  6901                           ; BSR set to: 14
  6902                           ;i2c.c: 61:   return tmp;
  6903  003682  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6904  003684                     
  6905                           ; BSR set to: 14
  6906  003684  0012               	return		;funcret
  6907  003686                     __end_of_I2C_2_Master_Read:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _I2C_2_Master_Idle *****************
  6911 ;; Defined at:
  6912 ;;		line 22 in file "i2c.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;Total ram usage:        1 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; Hardware stack levels required when called: 1
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_I2C_2_Master_Start
  6937 ;;		_I2C_2_Master_RepStart
  6938 ;;		_I2C_2_Master_Stop
  6939 ;;		_I2C_2_Master_Write
  6940 ;;		_I2C_2_Master_Read
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text27
  6945  0036E4                     __ptext27:
  6946                           	callstack 0
  6947  0036E4                     _I2C_2_Master_Idle:
  6948                           	callstack 26
  6949  0036E4                     l154:
  6950  0036E4  010E               	movlb	14	; () banked
  6951  0036E6  B5D8               	btfsc	216,2,b	;volatile
  6952  0036E8  EF78  F01B         	goto	u2241
  6953  0036EC  EF7A  F01B         	goto	u2240
  6954  0036F0                     u2241:
  6955  0036F0  EF72  F01B         	goto	l154
  6956  0036F4                     u2240:
  6957  0036F4                     
  6958                           ; BSR set to: 14
  6959  0036F4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6960  0036F8  0E1F               	movlw	31
  6961  0036FA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6962  0036FC  A4D8               	btfss	status,2,c
  6963  0036FE  EF83  F01B         	goto	u2251
  6964  003702  EF85  F01B         	goto	u2250
  6965  003706                     u2251:
  6966  003706  EF72  F01B         	goto	l154
  6967  00370A                     u2250:
  6968  00370A                     
  6969                           ; BSR set to: 14
  6970  00370A  0012               	return		;funcret
  6971  00370C                     __end_of_I2C_2_Master_Idle:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _White *****************
  6975 ;; Defined at:
  6976 ;;		line 176 in file "color.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  mL              2   42[COMRAM] PTR struct DC_motor
  6979 ;;		 -> main@motorL(9), 
  6980 ;;  mR              2   44[COMRAM] PTR struct DC_motor
  6981 ;;		 -> main@motorR(9), 
  6982 ;;  movementArra    2   46[COMRAM] PTR unsigned int 
  6983 ;;		 -> movementArray(20), 
  6984 ;;  movements       2   48[COMRAM] unsigned int 
  6985 ;;  timerArray      2   50[COMRAM] PTR unsigned int 
  6986 ;;		 -> timerArray(20), 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  tempTimerVal    2   58[COMRAM] unsigned int 
  6989 ;;  i               2   60[COMRAM] int 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6999 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;Total ram usage:       20 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; Hardware stack levels required when called: 6
  7006 ;; This function calls:
  7007 ;;		_forward
  7008 ;;		_reverseTurnLeft90
  7009 ;;		_reverseTurnRight90
  7010 ;;		_stop
  7011 ;;		_turnLeft135
  7012 ;;		_turnLeft90
  7013 ;;		_turnRight135
  7014 ;;		_turnRight180
  7015 ;;		_turnRight90
  7016 ;; This function is called by:
  7017 ;;		_main
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text28
  7022  001C52                     __ptext28:
  7023                           	callstack 0
  7024  001C52                     _White:
  7025                           	callstack 24
  7026  001C52                     
  7027                           ;color.c: 176: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movement
      +                          Array[], unsigned int movements,unsigned int timerArray[]);color.c: 177: {;color.c: 178:
      +                               stop(mL, mR);
  7028  001C52  C02B  F019         	movff	White@mL,stop@mL
  7029  001C56  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7030  001C5A  C02D  F01B         	movff	White@mR,stop@mR
  7031  001C5E  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7032  001C62  ECA9  F018         	call	_stop	;wreg free
  7033                           
  7034                           ;color.c: 179:     turnRight180(mL, mR);
  7035  001C66  C02B  F01D         	movff	White@mL,turnRight180@mL
  7036  001C6A  C02C  F01E         	movff	White@mL+1,turnRight180@mL+1
  7037  001C6E  C02D  F01F         	movff	White@mR,turnRight180@mR
  7038  001C72  C02E  F020         	movff	White@mR+1,turnRight180@mR+1
  7039  001C76  EC3E  F014         	call	_turnRight180	;wreg free
  7040  001C7A                     
  7041                           ;color.c: 180:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7042  001C7A  0E52               	movlw	82
  7043  001C7C  6E36               	movwf	(??_White+1)^0,c
  7044  001C7E  0E2B               	movlw	43
  7045  001C80  6E35               	movwf	??_White^0,c
  7046  001C82  0E00               	movlw	0
  7047  001C84                     u4337:
  7048  001C84  2EE8               	decfsz	wreg,f,c
  7049  001C86  D7FE               	bra	u4337
  7050  001C88  2E35               	decfsz	??_White^0,f,c
  7051  001C8A  D7FC               	bra	u4337
  7052  001C8C  2E36               	decfsz	(??_White+1)^0,f,c
  7053  001C8E  D7FA               	bra	u4337
  7054  001C90  D000               	nop2	
  7055  001C92                     
  7056                           ;color.c: 181:     for (int i=0; i<movements; i++){
  7057  001C92  0E00               	movlw	0
  7058  001C94  6E3E               	movwf	(White@i+1)^0,c
  7059  001C96  0E00               	movlw	0
  7060  001C98  6E3D               	movwf	White@i^0,c
  7061  001C9A  EFF7  F00F         	goto	l3875
  7062  001C9E                     l3833:
  7063                           
  7064                           ;color.c: 182:         if (movementArray[movements-i-1] == 0){turnLeft90(mL, mR);}
  7065  001C9E  503D               	movf	White@i^0,w,c
  7066  001CA0  5C31               	subwf	White@movements^0,w,c
  7067  001CA2  6E35               	movwf	??_White^0,c
  7068  001CA4  503E               	movf	(White@i+1)^0,w,c
  7069  001CA6  5832               	subwfb	(White@movements+1)^0,w,c
  7070  001CA8  6E36               	movwf	(??_White+1)^0,c
  7071  001CAA  90D8               	bcf	status,0,c
  7072  001CAC  3635               	rlcf	??_White^0,f,c
  7073  001CAE  3636               	rlcf	(??_White+1)^0,f,c
  7074  001CB0  C02F  F037         	movff	White@movementArray,??_White+2
  7075  001CB4  C030  F038         	movff	White@movementArray+1,??_White+3
  7076  001CB8  5035               	movf	??_White^0,w,c
  7077  001CBA  2637               	addwf	(??_White+2)^0,f,c
  7078  001CBC  5036               	movf	(??_White+1)^0,w,c
  7079  001CBE  2238               	addwfc	(??_White+3)^0,f,c
  7080  001CC0  0EFE               	movlw	254
  7081  001CC2  2437               	addwf	(??_White+2)^0,w,c
  7082  001CC4  6ED9               	movwf	fsr2l,c
  7083  001CC6  0EFF               	movlw	255
  7084  001CC8  2038               	addwfc	(??_White+3)^0,w,c
  7085  001CCA  6EDA               	movwf	fsr2h,c
  7086  001CCC  50DE               	movf	postinc2,w,c
  7087  001CCE  10DE               	iorwf	postinc2,w,c
  7088  001CD0  A4D8               	btfss	status,2,c
  7089  001CD2  EF6D  F00E         	goto	u3761
  7090  001CD6  EF6F  F00E         	goto	u3760
  7091  001CDA                     u3761:
  7092  001CDA  EF7B  F00E         	goto	l3837
  7093  001CDE                     u3760:
  7094  001CDE  C02B  F01D         	movff	White@mL,turnLeft90@mL
  7095  001CE2  C02C  F01E         	movff	White@mL+1,turnLeft90@mL+1
  7096  001CE6  C02D  F01F         	movff	White@mR,turnLeft90@mR
  7097  001CEA  C02E  F020         	movff	White@mR+1,turnLeft90@mR+1
  7098  001CEE  EC9E  F013         	call	_turnLeft90	;wreg free
  7099  001CF2  EFB5  F00F         	goto	l3865
  7100  001CF6                     l3837:
  7101  001CF6  503D               	movf	White@i^0,w,c
  7102  001CF8  5C31               	subwf	White@movements^0,w,c
  7103  001CFA  6E35               	movwf	??_White^0,c
  7104  001CFC  503E               	movf	(White@i+1)^0,w,c
  7105  001CFE  5832               	subwfb	(White@movements+1)^0,w,c
  7106  001D00  6E36               	movwf	(??_White+1)^0,c
  7107  001D02  90D8               	bcf	status,0,c
  7108  001D04  3635               	rlcf	??_White^0,f,c
  7109  001D06  3636               	rlcf	(??_White+1)^0,f,c
  7110  001D08  C02F  F037         	movff	White@movementArray,??_White+2
  7111  001D0C  C030  F038         	movff	White@movementArray+1,??_White+3
  7112  001D10  5035               	movf	??_White^0,w,c
  7113  001D12  2637               	addwf	(??_White+2)^0,f,c
  7114  001D14  5036               	movf	(??_White+1)^0,w,c
  7115  001D16  2238               	addwfc	(??_White+3)^0,f,c
  7116  001D18  0EFE               	movlw	254
  7117  001D1A  2437               	addwf	(??_White+2)^0,w,c
  7118  001D1C  6ED9               	movwf	fsr2l,c
  7119  001D1E  0EFF               	movlw	255
  7120  001D20  2038               	addwfc	(??_White+3)^0,w,c
  7121  001D22  6EDA               	movwf	fsr2h,c
  7122  001D24  04DE               	decf	postinc2,w,c
  7123  001D26  10DE               	iorwf	postinc2,w,c
  7124  001D28  A4D8               	btfss	status,2,c
  7125  001D2A  EF99  F00E         	goto	u3771
  7126  001D2E  EF9B  F00E         	goto	u3770
  7127  001D32                     u3771:
  7128  001D32  EFA7  F00E         	goto	l3841
  7129  001D36                     u3770:
  7130  001D36  C02B  F01D         	movff	White@mL,turnRight90@mL
  7131  001D3A  C02C  F01E         	movff	White@mL+1,turnRight90@mL+1
  7132  001D3E  C02D  F01F         	movff	White@mR,turnRight90@mR
  7133  001D42  C02E  F020         	movff	White@mR+1,turnRight90@mR+1
  7134  001D46  ECDD  F014         	call	_turnRight90	;wreg free
  7135  001D4A  EFB5  F00F         	goto	l3865
  7136  001D4E                     l3841:
  7137  001D4E  503D               	movf	White@i^0,w,c
  7138  001D50  5C31               	subwf	White@movements^0,w,c
  7139  001D52  6E35               	movwf	??_White^0,c
  7140  001D54  503E               	movf	(White@i+1)^0,w,c
  7141  001D56  5832               	subwfb	(White@movements+1)^0,w,c
  7142  001D58  6E36               	movwf	(??_White+1)^0,c
  7143  001D5A  90D8               	bcf	status,0,c
  7144  001D5C  3635               	rlcf	??_White^0,f,c
  7145  001D5E  3636               	rlcf	(??_White+1)^0,f,c
  7146  001D60  C02F  F037         	movff	White@movementArray,??_White+2
  7147  001D64  C030  F038         	movff	White@movementArray+1,??_White+3
  7148  001D68  5035               	movf	??_White^0,w,c
  7149  001D6A  2637               	addwf	(??_White+2)^0,f,c
  7150  001D6C  5036               	movf	(??_White+1)^0,w,c
  7151  001D6E  2238               	addwfc	(??_White+3)^0,f,c
  7152  001D70  0EFE               	movlw	254
  7153  001D72  2437               	addwf	(??_White+2)^0,w,c
  7154  001D74  6ED9               	movwf	fsr2l,c
  7155  001D76  0EFF               	movlw	255
  7156  001D78  2038               	addwfc	(??_White+3)^0,w,c
  7157  001D7A  6EDA               	movwf	fsr2h,c
  7158  001D7C  0E02               	movlw	2
  7159  001D7E  18DE               	xorwf	postinc2,w,c
  7160  001D80  10DE               	iorwf	postinc2,w,c
  7161  001D82  A4D8               	btfss	status,2,c
  7162  001D84  EFC6  F00E         	goto	u3781
  7163  001D88  EFC8  F00E         	goto	u3780
  7164  001D8C                     u3781:
  7165  001D8C  EFD4  F00E         	goto	l3845
  7166  001D90                     u3780:
  7167  001D90  C02B  F01D         	movff	White@mL,turnRight180@mL
  7168  001D94  C02C  F01E         	movff	White@mL+1,turnRight180@mL+1
  7169  001D98  C02D  F01F         	movff	White@mR,turnRight180@mR
  7170  001D9C  C02E  F020         	movff	White@mR+1,turnRight180@mR+1
  7171  001DA0  EC3E  F014         	call	_turnRight180	;wreg free
  7172  001DA4  EFB5  F00F         	goto	l3865
  7173  001DA8                     l3845:
  7174  001DA8  503D               	movf	White@i^0,w,c
  7175  001DAA  5C31               	subwf	White@movements^0,w,c
  7176  001DAC  6E35               	movwf	??_White^0,c
  7177  001DAE  503E               	movf	(White@i+1)^0,w,c
  7178  001DB0  5832               	subwfb	(White@movements+1)^0,w,c
  7179  001DB2  6E36               	movwf	(??_White+1)^0,c
  7180  001DB4  90D8               	bcf	status,0,c
  7181  001DB6  3635               	rlcf	??_White^0,f,c
  7182  001DB8  3636               	rlcf	(??_White+1)^0,f,c
  7183  001DBA  C02F  F037         	movff	White@movementArray,??_White+2
  7184  001DBE  C030  F038         	movff	White@movementArray+1,??_White+3
  7185  001DC2  5035               	movf	??_White^0,w,c
  7186  001DC4  2637               	addwf	(??_White+2)^0,f,c
  7187  001DC6  5036               	movf	(??_White+1)^0,w,c
  7188  001DC8  2238               	addwfc	(??_White+3)^0,f,c
  7189  001DCA  0EFE               	movlw	254
  7190  001DCC  2437               	addwf	(??_White+2)^0,w,c
  7191  001DCE  6ED9               	movwf	fsr2l,c
  7192  001DD0  0EFF               	movlw	255
  7193  001DD2  2038               	addwfc	(??_White+3)^0,w,c
  7194  001DD4  6EDA               	movwf	fsr2h,c
  7195  001DD6  0E03               	movlw	3
  7196  001DD8  18DE               	xorwf	postinc2,w,c
  7197  001DDA  10DE               	iorwf	postinc2,w,c
  7198  001DDC  A4D8               	btfss	status,2,c
  7199  001DDE  EFF3  F00E         	goto	u3791
  7200  001DE2  EFF5  F00E         	goto	u3790
  7201  001DE6                     u3791:
  7202  001DE6  EF01  F00F         	goto	l3849
  7203  001DEA                     u3790:
  7204  001DEA  C02B  F025         	movff	White@mL,reverseTurnLeft90@mL
  7205  001DEE  C02C  F026         	movff	White@mL+1,reverseTurnLeft90@mL+1
  7206  001DF2  C02D  F027         	movff	White@mR,reverseTurnLeft90@mR
  7207  001DF6  C02E  F028         	movff	White@mR+1,reverseTurnLeft90@mR+1
  7208  001DFA  EC33  F018         	call	_reverseTurnLeft90	;wreg free
  7209  001DFE  EFB5  F00F         	goto	l3865
  7210  001E02                     l3849:
  7211  001E02  503D               	movf	White@i^0,w,c
  7212  001E04  5C31               	subwf	White@movements^0,w,c
  7213  001E06  6E35               	movwf	??_White^0,c
  7214  001E08  503E               	movf	(White@i+1)^0,w,c
  7215  001E0A  5832               	subwfb	(White@movements+1)^0,w,c
  7216  001E0C  6E36               	movwf	(??_White+1)^0,c
  7217  001E0E  90D8               	bcf	status,0,c
  7218  001E10  3635               	rlcf	??_White^0,f,c
  7219  001E12  3636               	rlcf	(??_White+1)^0,f,c
  7220  001E14  C02F  F037         	movff	White@movementArray,??_White+2
  7221  001E18  C030  F038         	movff	White@movementArray+1,??_White+3
  7222  001E1C  5035               	movf	??_White^0,w,c
  7223  001E1E  2637               	addwf	(??_White+2)^0,f,c
  7224  001E20  5036               	movf	(??_White+1)^0,w,c
  7225  001E22  2238               	addwfc	(??_White+3)^0,f,c
  7226  001E24  0EFE               	movlw	254
  7227  001E26  2437               	addwf	(??_White+2)^0,w,c
  7228  001E28  6ED9               	movwf	fsr2l,c
  7229  001E2A  0EFF               	movlw	255
  7230  001E2C  2038               	addwfc	(??_White+3)^0,w,c
  7231  001E2E  6EDA               	movwf	fsr2h,c
  7232  001E30  0E04               	movlw	4
  7233  001E32  18DE               	xorwf	postinc2,w,c
  7234  001E34  10DE               	iorwf	postinc2,w,c
  7235  001E36  A4D8               	btfss	status,2,c
  7236  001E38  EF20  F00F         	goto	u3801
  7237  001E3C  EF22  F00F         	goto	u3800
  7238  001E40                     u3801:
  7239  001E40  EF2E  F00F         	goto	l3853
  7240  001E44                     u3800:
  7241  001E44  C02B  F025         	movff	White@mL,reverseTurnRight90@mL
  7242  001E48  C02C  F026         	movff	White@mL+1,reverseTurnRight90@mL+1
  7243  001E4C  C02D  F027         	movff	White@mR,reverseTurnRight90@mR
  7244  001E50  C02E  F028         	movff	White@mR+1,reverseTurnRight90@mR+1
  7245  001E54  ECBD  F017         	call	_reverseTurnRight90	;wreg free
  7246  001E58  EFB5  F00F         	goto	l3865
  7247  001E5C                     l3853:
  7248  001E5C  503D               	movf	White@i^0,w,c
  7249  001E5E  5C31               	subwf	White@movements^0,w,c
  7250  001E60  6E35               	movwf	??_White^0,c
  7251  001E62  503E               	movf	(White@i+1)^0,w,c
  7252  001E64  5832               	subwfb	(White@movements+1)^0,w,c
  7253  001E66  6E36               	movwf	(??_White+1)^0,c
  7254  001E68  90D8               	bcf	status,0,c
  7255  001E6A  3635               	rlcf	??_White^0,f,c
  7256  001E6C  3636               	rlcf	(??_White+1)^0,f,c
  7257  001E6E  C02F  F037         	movff	White@movementArray,??_White+2
  7258  001E72  C030  F038         	movff	White@movementArray+1,??_White+3
  7259  001E76  5035               	movf	??_White^0,w,c
  7260  001E78  2637               	addwf	(??_White+2)^0,f,c
  7261  001E7A  5036               	movf	(??_White+1)^0,w,c
  7262  001E7C  2238               	addwfc	(??_White+3)^0,f,c
  7263  001E7E  0EFE               	movlw	254
  7264  001E80  2437               	addwf	(??_White+2)^0,w,c
  7265  001E82  6ED9               	movwf	fsr2l,c
  7266  001E84  0EFF               	movlw	255
  7267  001E86  2038               	addwfc	(??_White+3)^0,w,c
  7268  001E88  6EDA               	movwf	fsr2h,c
  7269  001E8A  0E05               	movlw	5
  7270  001E8C  18DE               	xorwf	postinc2,w,c
  7271  001E8E  10DE               	iorwf	postinc2,w,c
  7272  001E90  A4D8               	btfss	status,2,c
  7273  001E92  EF4D  F00F         	goto	u3811
  7274  001E96  EF4F  F00F         	goto	u3810
  7275  001E9A                     u3811:
  7276  001E9A  EF5B  F00F         	goto	l3857
  7277  001E9E                     u3810:
  7278  001E9E  C02B  F01D         	movff	White@mL,turnLeft135@mL
  7279  001EA2  C02C  F01E         	movff	White@mL+1,turnLeft135@mL+1
  7280  001EA6  C02D  F01F         	movff	White@mR,turnLeft135@mR
  7281  001EAA  C02E  F020         	movff	White@mR+1,turnLeft135@mR+1
  7282  001EAE  EC1A  F016         	call	_turnLeft135	;wreg free
  7283  001EB2  EFB5  F00F         	goto	l3865
  7284  001EB6                     l3857:
  7285  001EB6  503D               	movf	White@i^0,w,c
  7286  001EB8  5C31               	subwf	White@movements^0,w,c
  7287  001EBA  6E35               	movwf	??_White^0,c
  7288  001EBC  503E               	movf	(White@i+1)^0,w,c
  7289  001EBE  5832               	subwfb	(White@movements+1)^0,w,c
  7290  001EC0  6E36               	movwf	(??_White+1)^0,c
  7291  001EC2  90D8               	bcf	status,0,c
  7292  001EC4  3635               	rlcf	??_White^0,f,c
  7293  001EC6  3636               	rlcf	(??_White+1)^0,f,c
  7294  001EC8  C02F  F037         	movff	White@movementArray,??_White+2
  7295  001ECC  C030  F038         	movff	White@movementArray+1,??_White+3
  7296  001ED0  5035               	movf	??_White^0,w,c
  7297  001ED2  2637               	addwf	(??_White+2)^0,f,c
  7298  001ED4  5036               	movf	(??_White+1)^0,w,c
  7299  001ED6  2238               	addwfc	(??_White+3)^0,f,c
  7300  001ED8  0EFE               	movlw	254
  7301  001EDA  2437               	addwf	(??_White+2)^0,w,c
  7302  001EDC  6ED9               	movwf	fsr2l,c
  7303  001EDE  0EFF               	movlw	255
  7304  001EE0  2038               	addwfc	(??_White+3)^0,w,c
  7305  001EE2  6EDA               	movwf	fsr2h,c
  7306  001EE4  0E06               	movlw	6
  7307  001EE6  18DE               	xorwf	postinc2,w,c
  7308  001EE8  10DE               	iorwf	postinc2,w,c
  7309  001EEA  A4D8               	btfss	status,2,c
  7310  001EEC  EF7A  F00F         	goto	u3821
  7311  001EF0  EF7C  F00F         	goto	u3820
  7312  001EF4                     u3821:
  7313  001EF4  EF88  F00F         	goto	l3861
  7314  001EF8                     u3820:
  7315  001EF8  C02B  F01D         	movff	White@mL,turnRight135@mL
  7316  001EFC  C02C  F01E         	movff	White@mL+1,turnRight135@mL+1
  7317  001F00  C02D  F01F         	movff	White@mR,turnRight135@mR
  7318  001F04  C02E  F020         	movff	White@mR+1,turnRight135@mR+1
  7319  001F08  EC7C  F015         	call	_turnRight135	;wreg free
  7320  001F0C  EFB5  F00F         	goto	l3865
  7321  001F10                     l3861:
  7322  001F10  503D               	movf	White@i^0,w,c
  7323  001F12  5C31               	subwf	White@movements^0,w,c
  7324  001F14  6E35               	movwf	??_White^0,c
  7325  001F16  503E               	movf	(White@i+1)^0,w,c
  7326  001F18  5832               	subwfb	(White@movements+1)^0,w,c
  7327  001F1A  6E36               	movwf	(??_White+1)^0,c
  7328  001F1C  90D8               	bcf	status,0,c
  7329  001F1E  3635               	rlcf	??_White^0,f,c
  7330  001F20  3636               	rlcf	(??_White+1)^0,f,c
  7331  001F22  C02F  F037         	movff	White@movementArray,??_White+2
  7332  001F26  C030  F038         	movff	White@movementArray+1,??_White+3
  7333  001F2A  5035               	movf	??_White^0,w,c
  7334  001F2C  2637               	addwf	(??_White+2)^0,f,c
  7335  001F2E  5036               	movf	(??_White+1)^0,w,c
  7336  001F30  2238               	addwfc	(??_White+3)^0,f,c
  7337  001F32  0EFE               	movlw	254
  7338  001F34  2437               	addwf	(??_White+2)^0,w,c
  7339  001F36  6ED9               	movwf	fsr2l,c
  7340  001F38  0EFF               	movlw	255
  7341  001F3A  2038               	addwfc	(??_White+3)^0,w,c
  7342  001F3C  6EDA               	movwf	fsr2h,c
  7343  001F3E  0E09               	movlw	9
  7344  001F40  18DE               	xorwf	postinc2,w,c
  7345  001F42  10DE               	iorwf	postinc2,w,c
  7346  001F44  A4D8               	btfss	status,2,c
  7347  001F46  EFA7  F00F         	goto	u3831
  7348  001F4A  EFA9  F00F         	goto	u3830
  7349  001F4E                     u3831:
  7350  001F4E  EFB5  F00F         	goto	l111
  7351  001F52                     u3830:
  7352  001F52  C02B  F019         	movff	White@mL,stop@mL
  7353  001F56  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7354  001F5A  C02D  F01B         	movff	White@mR,stop@mR
  7355  001F5E  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7356  001F62  ECA9  F018         	call	_stop	;wreg free
  7357  001F66  EFB5  F00F         	goto	l3865
  7358  001F6A                     l111:
  7359  001F6A                     l3865:
  7360                           
  7361                           ;color.c: 190:         unsigned int tempTimerVal = 0;
  7362  001F6A  0E00               	movlw	0
  7363  001F6C  6E3C               	movwf	(White@tempTimerVal+1)^0,c
  7364  001F6E  0E00               	movlw	0
  7365  001F70  6E3B               	movwf	White@tempTimerVal^0,c
  7366  001F72                     
  7367                           ;color.c: 191:         forward(mL, mR);
  7368  001F72  C02B  F019         	movff	White@mL,forward@mL
  7369  001F76  C02C  F01A         	movff	White@mL+1,forward@mL+1
  7370  001F7A  C02D  F01B         	movff	White@mR,forward@mR
  7371  001F7E  C02E  F01C         	movff	White@mR+1,forward@mR+1
  7372  001F82  ECF0  F019         	call	_forward	;wreg free
  7373                           
  7374                           ;color.c: 192:         TMR0H = 0;
  7375  001F86  0E00               	movlw	0
  7376  001F88  6ED4               	movwf	212,c	;volatile
  7377                           
  7378                           ;color.c: 193:         TMR0L = 0;
  7379  001F8A  0E00               	movlw	0
  7380  001F8C  6ED3               	movwf	211,c	;volatile
  7381                           
  7382                           ;color.c: 194:         while(tempTimerVal < timerArray[movements-i-1]){
  7383  001F8E  EFD3  F00F         	goto	l3871
  7384  001F92                     l118:
  7385                           
  7386                           ;color.c: 195:             tempTimerVal = TMR0L;
  7387  001F92  CFD3 F03B          	movff	4051,White@tempTimerVal	;volatile
  7388  001F96  6A3C               	clrf	(White@tempTimerVal+1)^0,c
  7389  001F98                     
  7390                           ;color.c: 196:             tempTimerVal |= (TMR0H << 8);
  7391  001F98  50D4               	movf	212,w,c	;volatile
  7392  001F9A  6E36               	movwf	(??_White+1)^0,c
  7393  001F9C  6A35               	clrf	??_White^0,c
  7394  001F9E  5035               	movf	??_White^0,w,c
  7395  001FA0  123B               	iorwf	White@tempTimerVal^0,f,c
  7396  001FA2  5036               	movf	(??_White+1)^0,w,c
  7397  001FA4  123C               	iorwf	(White@tempTimerVal+1)^0,f,c
  7398  001FA6                     l3871:
  7399                           
  7400                           ;color.c: 194:         while(tempTimerVal < timerArray[movements-i-1]){
  7401  001FA6  503D               	movf	White@i^0,w,c
  7402  001FA8  5C31               	subwf	White@movements^0,w,c
  7403  001FAA  6E35               	movwf	??_White^0,c
  7404  001FAC  503E               	movf	(White@i+1)^0,w,c
  7405  001FAE  5832               	subwfb	(White@movements+1)^0,w,c
  7406  001FB0  6E36               	movwf	(??_White+1)^0,c
  7407  001FB2  90D8               	bcf	status,0,c
  7408  001FB4  3635               	rlcf	??_White^0,f,c
  7409  001FB6  3636               	rlcf	(??_White+1)^0,f,c
  7410  001FB8  C033  F037         	movff	White@timerArray,??_White+2
  7411  001FBC  C034  F038         	movff	White@timerArray+1,??_White+3
  7412  001FC0  5035               	movf	??_White^0,w,c
  7413  001FC2  2637               	addwf	(??_White+2)^0,f,c
  7414  001FC4  5036               	movf	(??_White+1)^0,w,c
  7415  001FC6  2238               	addwfc	(??_White+3)^0,f,c
  7416  001FC8  0EFE               	movlw	254
  7417  001FCA  2437               	addwf	(??_White+2)^0,w,c
  7418  001FCC  6ED9               	movwf	fsr2l,c
  7419  001FCE  0EFF               	movlw	255
  7420  001FD0  2038               	addwfc	(??_White+3)^0,w,c
  7421  001FD2  6EDA               	movwf	fsr2h,c
  7422  001FD4  50DE               	movf	postinc2,w,c
  7423  001FD6  5C3B               	subwf	White@tempTimerVal^0,w,c
  7424  001FD8  50DE               	movf	postinc2,w,c
  7425  001FDA  583C               	subwfb	(White@tempTimerVal+1)^0,w,c
  7426  001FDC  A0D8               	btfss	status,0,c
  7427  001FDE  EFF3  F00F         	goto	u3841
  7428  001FE2  EFF5  F00F         	goto	u3840
  7429  001FE6                     u3841:
  7430  001FE6  EFC9  F00F         	goto	l118
  7431  001FEA                     u3840:
  7432  001FEA                     
  7433                           ;color.c: 198:     }
  7434  001FEA  4A3D               	infsnz	White@i^0,f,c
  7435  001FEC  2A3E               	incf	(White@i+1)^0,f,c
  7436  001FEE                     l3875:
  7437  001FEE  5031               	movf	White@movements^0,w,c
  7438  001FF0  5C3D               	subwf	White@i^0,w,c
  7439  001FF2  5032               	movf	(White@movements+1)^0,w,c
  7440  001FF4  583E               	subwfb	(White@i+1)^0,w,c
  7441  001FF6  A0D8               	btfss	status,0,c
  7442  001FF8  EF00  F010         	goto	u3851
  7443  001FFC  EF02  F010         	goto	u3850
  7444  002000                     u3851:
  7445  002000  EF4F  F00E         	goto	l3833
  7446  002004                     u3850:
  7447  002004                     
  7448                           ;color.c: 199:     stop(mL, mR);
  7449  002004  C02B  F019         	movff	White@mL,stop@mL
  7450  002008  C02C  F01A         	movff	White@mL+1,stop@mL+1
  7451  00200C  C02D  F01B         	movff	White@mR,stop@mR
  7452  002010  C02E  F01C         	movff	White@mR+1,stop@mR+1
  7453  002014  ECA9  F018         	call	_stop	;wreg free
  7454  002018  0012               	return		;funcret
  7455  00201A                     __end_of_White:
  7456                           	callstack 0
  7457                           
  7458 ;; *************** function _turnRight180 *****************
  7459 ;; Defined at:
  7460 ;;		line 183 in file "dc_motor.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7463 ;;		 -> main@motorL(9), 
  7464 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7465 ;;		 -> main@motorR(9), 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  i               2   34[COMRAM] unsigned int 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;Total ram usage:        8 bytes
  7482 ;; Hardware stack levels used: 1
  7483 ;; Hardware stack levels required when called: 4
  7484 ;; This function calls:
  7485 ;;		_reverse
  7486 ;;		_setMotorPWM
  7487 ;;		_stop
  7488 ;; This function is called by:
  7489 ;;		_White
  7490 ;;		_main
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text29
  7495  00287C                     __ptext29:
  7496                           	callstack 0
  7497  00287C                     _turnRight180:
  7498                           	callstack 26
  7499  00287C                     
  7500                           ;dc_motor.c: 183: void turnRight180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 184: {;dc_motor.c: 185:     stop(mL, mR);
  7501  00287C  C01D  F019         	movff	turnRight180@mL,stop@mL
  7502  002880  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7503  002884  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7504  002888  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7505  00288C  ECA9  F018         	call	_stop	;wreg free
  7506  002890                     
  7507                           ;dc_motor.c: 186:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7508  002890  0E05               	movlw	5
  7509  002892  6E22               	movwf	(??_turnRight180+1)^0,c
  7510  002894  0E0F               	movlw	15
  7511  002896  6E21               	movwf	??_turnRight180^0,c
  7512  002898  0EF1               	movlw	241
  7513  00289A                     u4347:
  7514  00289A  2EE8               	decfsz	wreg,f,c
  7515  00289C  D7FE               	bra	u4347
  7516  00289E  2E21               	decfsz	??_turnRight180^0,f,c
  7517  0028A0  D7FC               	bra	u4347
  7518  0028A2  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7519  0028A4  D7FA               	bra	u4347
  7520  0028A6  F000               	nop	
  7521  0028A8                     
  7522                           ;dc_motor.c: 187:     reverse(mL, mR);
  7523  0028A8  C01D  F019         	movff	turnRight180@mL,reverse@mL
  7524  0028AC  C01E  F01A         	movff	turnRight180@mL+1,reverse@mL+1
  7525  0028B0  C01F  F01B         	movff	turnRight180@mR,reverse@mR
  7526  0028B4  C020  F01C         	movff	turnRight180@mR+1,reverse@mR+1
  7527  0028B8  ECC7  F019         	call	_reverse	;wreg free
  7528                           
  7529                           ;dc_motor.c: 188:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7530  0028BC  0E21               	movlw	33
  7531  0028BE  6E22               	movwf	(??_turnRight180+1)^0,c
  7532  0028C0  0E78               	movlw	120
  7533  0028C2  6E21               	movwf	??_turnRight180^0,c
  7534  0028C4  0E98               	movlw	152
  7535  0028C6                     u4357:
  7536  0028C6  2EE8               	decfsz	wreg,f,c
  7537  0028C8  D7FE               	bra	u4357
  7538  0028CA  2E21               	decfsz	??_turnRight180^0,f,c
  7539  0028CC  D7FC               	bra	u4357
  7540  0028CE  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7541  0028D0  D7FA               	bra	u4357
  7542  0028D2  D000               	nop2	
  7543  0028D4                     
  7544                           ;dc_motor.c: 189:     stop(mL, mR);
  7545  0028D4  C01D  F019         	movff	turnRight180@mL,stop@mL
  7546  0028D8  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7547  0028DC  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7548  0028E0  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7549  0028E4  ECA9  F018         	call	_stop	;wreg free
  7550  0028E8                     
  7551                           ;dc_motor.c: 190:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7552  0028E8  0E0D               	movlw	13
  7553  0028EA  6E22               	movwf	(??_turnRight180+1)^0,c
  7554  0028EC  0E2D               	movlw	45
  7555  0028EE  6E21               	movwf	??_turnRight180^0,c
  7556  0028F0  0ED8               	movlw	216
  7557  0028F2                     u4367:
  7558  0028F2  2EE8               	decfsz	wreg,f,c
  7559  0028F4  D7FE               	bra	u4367
  7560  0028F6  2E21               	decfsz	??_turnRight180^0,f,c
  7561  0028F8  D7FC               	bra	u4367
  7562  0028FA  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7563  0028FC  D7FA               	bra	u4367
  7564  0028FE                     
  7565                           ;dc_motor.c: 192:     (*mL).direction = 1;
  7566  0028FE  EE20 F001          	lfsr	2,1
  7567  002902  501D               	movf	turnRight180@mL^0,w,c
  7568  002904  26D9               	addwf	fsr2l,f,c
  7569  002906  501E               	movf	(turnRight180@mL+1)^0,w,c
  7570  002908  22DA               	addwfc	fsr2h,f,c
  7571  00290A  0E01               	movlw	1
  7572  00290C  6EDF               	movwf	indf2,c
  7573  00290E                     
  7574                           ;dc_motor.c: 193:     (*mR).direction = 0;
  7575  00290E  EE20 F001          	lfsr	2,1
  7576  002912  501F               	movf	turnRight180@mR^0,w,c
  7577  002914  26D9               	addwf	fsr2l,f,c
  7578  002916  5020               	movf	(turnRight180@mR+1)^0,w,c
  7579  002918  22DA               	addwfc	fsr2h,f,c
  7580  00291A  0E00               	movlw	0
  7581  00291C  6EDF               	movwf	indf2,c
  7582  00291E                     
  7583                           ;dc_motor.c: 194:     for (unsigned int i = 0; i < 75; ++i){
  7584  00291E  0E00               	movlw	0
  7585  002920  6E24               	movwf	(turnRight180@i+1)^0,c
  7586  002922  0E00               	movlw	0
  7587  002924  6E23               	movwf	turnRight180@i^0,c
  7588  002926                     l2981:
  7589                           
  7590                           ;dc_motor.c: 195:         (mL->power) += 1;
  7591  002926  C01D  FFD9         	movff	turnRight180@mL,fsr2l
  7592  00292A  C01E  FFDA         	movff	turnRight180@mL+1,fsr2h
  7593  00292E  2ADF               	incf	indf2,f,c
  7594                           
  7595                           ;dc_motor.c: 196:         (mR->power) += 1;
  7596  002930  C01F  FFD9         	movff	turnRight180@mR,fsr2l
  7597  002934  C020  FFDA         	movff	turnRight180@mR+1,fsr2h
  7598  002938  2ADF               	incf	indf2,f,c
  7599  00293A                     
  7600                           ;dc_motor.c: 197:         setMotorPWM(mL);
  7601  00293A  C01D  F00E         	movff	turnRight180@mL,setMotorPWM@m
  7602  00293E  C01E  F00F         	movff	turnRight180@mL+1,setMotorPWM@m+1
  7603  002942  ECDA  F011         	call	_setMotorPWM	;wreg free
  7604  002946                     
  7605                           ;dc_motor.c: 198:         setMotorPWM(mR);
  7606  002946  C01F  F00E         	movff	turnRight180@mR,setMotorPWM@m
  7607  00294A  C020  F00F         	movff	turnRight180@mR+1,setMotorPWM@m+1
  7608  00294E  ECDA  F011         	call	_setMotorPWM	;wreg free
  7609  002952                     
  7610                           ;dc_motor.c: 199:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7611  002952  0EA0               	movlw	160
  7612  002954                     u4377:
  7613  002954  D000               	nop2	
  7614  002956  2EE8               	decfsz	wreg,f,c
  7615  002958  D7FD               	bra	u4377
  7616  00295A                     
  7617                           ;dc_motor.c: 200:     }
  7618  00295A  4A23               	infsnz	turnRight180@i^0,f,c
  7619  00295C  2A24               	incf	(turnRight180@i+1)^0,f,c
  7620  00295E  5024               	movf	(turnRight180@i+1)^0,w,c
  7621  002960  E109               	bnz	u2370
  7622  002962  0E4B               	movlw	75
  7623  002964  5C23               	subwf	turnRight180@i^0,w,c
  7624  002966  A0D8               	btfss	status,0,c
  7625  002968  EFB8  F014         	goto	u2371
  7626  00296C  EFBA  F014         	goto	u2370
  7627  002970                     u2371:
  7628  002970  EF93  F014         	goto	l2981
  7629  002974                     u2370:
  7630  002974                     
  7631                           ;dc_motor.c: 201:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7632  002974  0E21               	movlw	33
  7633  002976  6E22               	movwf	(??_turnRight180+1)^0,c
  7634  002978  0E78               	movlw	120
  7635  00297A  6E21               	movwf	??_turnRight180^0,c
  7636  00297C  0E98               	movlw	152
  7637  00297E                     u4387:
  7638  00297E  2EE8               	decfsz	wreg,f,c
  7639  002980  D7FE               	bra	u4387
  7640  002982  2E21               	decfsz	??_turnRight180^0,f,c
  7641  002984  D7FC               	bra	u4387
  7642  002986  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7643  002988  D7FA               	bra	u4387
  7644  00298A  D000               	nop2	
  7645  00298C                     
  7646                           ;dc_motor.c: 202:     stop(mL, mR);
  7647  00298C  C01D  F019         	movff	turnRight180@mL,stop@mL
  7648  002990  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  7649  002994  C01F  F01B         	movff	turnRight180@mR,stop@mR
  7650  002998  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  7651  00299C  ECA9  F018         	call	_stop	;wreg free
  7652  0029A0                     
  7653                           ;dc_motor.c: 203:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7654  0029A0  0E05               	movlw	5
  7655  0029A2  6E22               	movwf	(??_turnRight180+1)^0,c
  7656  0029A4  0E0F               	movlw	15
  7657  0029A6  6E21               	movwf	??_turnRight180^0,c
  7658  0029A8  0EF1               	movlw	241
  7659  0029AA                     u4397:
  7660  0029AA  2EE8               	decfsz	wreg,f,c
  7661  0029AC  D7FE               	bra	u4397
  7662  0029AE  2E21               	decfsz	??_turnRight180^0,f,c
  7663  0029B0  D7FC               	bra	u4397
  7664  0029B2  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  7665  0029B4  D7FA               	bra	u4397
  7666  0029B6  F000               	nop	
  7667  0029B8  0012               	return		;funcret
  7668  0029BA                     __end_of_turnRight180:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function _turnRight135 *****************
  7672 ;; Defined at:
  7673 ;;		line 159 in file "dc_motor.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7676 ;;		 -> main@motorL(9), 
  7677 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7678 ;;		 -> main@motorR(9), 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  i               2   34[COMRAM] unsigned int 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;Total ram usage:        8 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; Hardware stack levels required when called: 4
  7697 ;; This function calls:
  7698 ;;		_reverse
  7699 ;;		_setMotorPWM
  7700 ;;		_stop
  7701 ;; This function is called by:
  7702 ;;		_White
  7703 ;;		_main
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text30
  7708  002AF8                     __ptext30:
  7709                           	callstack 0
  7710  002AF8                     _turnRight135:
  7711                           	callstack 26
  7712  002AF8                     
  7713                           ;dc_motor.c: 159: void turnRight135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 160: {;dc_motor.c: 161:     stop(mL, mR);
  7714  002AF8  C01D  F019         	movff	turnRight135@mL,stop@mL
  7715  002AFC  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7716  002B00  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7717  002B04  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7718  002B08  ECA9  F018         	call	_stop	;wreg free
  7719  002B0C                     
  7720                           ;dc_motor.c: 162:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7721  002B0C  0E05               	movlw	5
  7722  002B0E  6E22               	movwf	(??_turnRight135+1)^0,c
  7723  002B10  0E0F               	movlw	15
  7724  002B12  6E21               	movwf	??_turnRight135^0,c
  7725  002B14  0EF1               	movlw	241
  7726  002B16                     u4407:
  7727  002B16  2EE8               	decfsz	wreg,f,c
  7728  002B18  D7FE               	bra	u4407
  7729  002B1A  2E21               	decfsz	??_turnRight135^0,f,c
  7730  002B1C  D7FC               	bra	u4407
  7731  002B1E  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7732  002B20  D7FA               	bra	u4407
  7733  002B22  F000               	nop	
  7734  002B24                     
  7735                           ;dc_motor.c: 163:     reverse(mL, mR);
  7736  002B24  C01D  F019         	movff	turnRight135@mL,reverse@mL
  7737  002B28  C01E  F01A         	movff	turnRight135@mL+1,reverse@mL+1
  7738  002B2C  C01F  F01B         	movff	turnRight135@mR,reverse@mR
  7739  002B30  C020  F01C         	movff	turnRight135@mR+1,reverse@mR+1
  7740  002B34  ECC7  F019         	call	_reverse	;wreg free
  7741                           
  7742                           ;dc_motor.c: 164:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7743  002B38  0E21               	movlw	33
  7744  002B3A  6E22               	movwf	(??_turnRight135+1)^0,c
  7745  002B3C  0E78               	movlw	120
  7746  002B3E  6E21               	movwf	??_turnRight135^0,c
  7747  002B40  0E98               	movlw	152
  7748  002B42                     u4417:
  7749  002B42  2EE8               	decfsz	wreg,f,c
  7750  002B44  D7FE               	bra	u4417
  7751  002B46  2E21               	decfsz	??_turnRight135^0,f,c
  7752  002B48  D7FC               	bra	u4417
  7753  002B4A  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7754  002B4C  D7FA               	bra	u4417
  7755  002B4E  D000               	nop2	
  7756  002B50                     
  7757                           ;dc_motor.c: 165:     stop(mL, mR);
  7758  002B50  C01D  F019         	movff	turnRight135@mL,stop@mL
  7759  002B54  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7760  002B58  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7761  002B5C  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7762  002B60  ECA9  F018         	call	_stop	;wreg free
  7763  002B64                     
  7764                           ;dc_motor.c: 166:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7765  002B64  0E0D               	movlw	13
  7766  002B66  6E22               	movwf	(??_turnRight135+1)^0,c
  7767  002B68  0E2D               	movlw	45
  7768  002B6A  6E21               	movwf	??_turnRight135^0,c
  7769  002B6C  0ED8               	movlw	216
  7770  002B6E                     u4427:
  7771  002B6E  2EE8               	decfsz	wreg,f,c
  7772  002B70  D7FE               	bra	u4427
  7773  002B72  2E21               	decfsz	??_turnRight135^0,f,c
  7774  002B74  D7FC               	bra	u4427
  7775  002B76  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7776  002B78  D7FA               	bra	u4427
  7777  002B7A                     
  7778                           ;dc_motor.c: 168:     (*mL).direction = 1;
  7779  002B7A  EE20 F001          	lfsr	2,1
  7780  002B7E  501D               	movf	turnRight135@mL^0,w,c
  7781  002B80  26D9               	addwf	fsr2l,f,c
  7782  002B82  501E               	movf	(turnRight135@mL+1)^0,w,c
  7783  002B84  22DA               	addwfc	fsr2h,f,c
  7784  002B86  0E01               	movlw	1
  7785  002B88  6EDF               	movwf	indf2,c
  7786  002B8A                     
  7787                           ;dc_motor.c: 169:     (*mR).direction = 0;
  7788  002B8A  EE20 F001          	lfsr	2,1
  7789  002B8E  501F               	movf	turnRight135@mR^0,w,c
  7790  002B90  26D9               	addwf	fsr2l,f,c
  7791  002B92  5020               	movf	(turnRight135@mR+1)^0,w,c
  7792  002B94  22DA               	addwfc	fsr2h,f,c
  7793  002B96  0E00               	movlw	0
  7794  002B98  6EDF               	movwf	indf2,c
  7795  002B9A                     
  7796                           ;dc_motor.c: 170:     for (unsigned int i = 0; i < 75; ++i){
  7797  002B9A  0E00               	movlw	0
  7798  002B9C  6E24               	movwf	(turnRight135@i+1)^0,c
  7799  002B9E  0E00               	movlw	0
  7800  002BA0  6E23               	movwf	turnRight135@i^0,c
  7801  002BA2                     l3101:
  7802                           
  7803                           ;dc_motor.c: 171:         (mL->power) += 1;
  7804  002BA2  C01D  FFD9         	movff	turnRight135@mL,fsr2l
  7805  002BA6  C01E  FFDA         	movff	turnRight135@mL+1,fsr2h
  7806  002BAA  2ADF               	incf	indf2,f,c
  7807                           
  7808                           ;dc_motor.c: 172:         (mR->power) += 1;
  7809  002BAC  C01F  FFD9         	movff	turnRight135@mR,fsr2l
  7810  002BB0  C020  FFDA         	movff	turnRight135@mR+1,fsr2h
  7811  002BB4  2ADF               	incf	indf2,f,c
  7812  002BB6                     
  7813                           ;dc_motor.c: 173:         setMotorPWM(mL);
  7814  002BB6  C01D  F00E         	movff	turnRight135@mL,setMotorPWM@m
  7815  002BBA  C01E  F00F         	movff	turnRight135@mL+1,setMotorPWM@m+1
  7816  002BBE  ECDA  F011         	call	_setMotorPWM	;wreg free
  7817  002BC2                     
  7818                           ;dc_motor.c: 174:         setMotorPWM(mR);
  7819  002BC2  C01F  F00E         	movff	turnRight135@mR,setMotorPWM@m
  7820  002BC6  C020  F00F         	movff	turnRight135@mR+1,setMotorPWM@m+1
  7821  002BCA  ECDA  F011         	call	_setMotorPWM	;wreg free
  7822  002BCE                     
  7823                           ;dc_motor.c: 175:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7824  002BCE  0EA0               	movlw	160
  7825  002BD0                     u4437:
  7826  002BD0  D000               	nop2	
  7827  002BD2  2EE8               	decfsz	wreg,f,c
  7828  002BD4  D7FD               	bra	u4437
  7829  002BD6                     
  7830                           ;dc_motor.c: 176:     }
  7831  002BD6  4A23               	infsnz	turnRight135@i^0,f,c
  7832  002BD8  2A24               	incf	(turnRight135@i+1)^0,f,c
  7833  002BDA  5024               	movf	(turnRight135@i+1)^0,w,c
  7834  002BDC  E109               	bnz	u2390
  7835  002BDE  0E4B               	movlw	75
  7836  002BE0  5C23               	subwf	turnRight135@i^0,w,c
  7837  002BE2  A0D8               	btfss	status,0,c
  7838  002BE4  EFF6  F015         	goto	u2391
  7839  002BE8  EFF8  F015         	goto	u2390
  7840  002BEC                     u2391:
  7841  002BEC  EFD1  F015         	goto	l3101
  7842  002BF0                     u2390:
  7843  002BF0                     
  7844                           ;dc_motor.c: 177:     _delay((unsigned long)((275)*(64000000/4000.0)));
  7845  002BF0  0E17               	movlw	23
  7846  002BF2  6E22               	movwf	(??_turnRight135+1)^0,c
  7847  002BF4  0E53               	movlw	83
  7848  002BF6  6E21               	movwf	??_turnRight135^0,c
  7849  002BF8  0E38               	movlw	56
  7850  002BFA                     u4447:
  7851  002BFA  2EE8               	decfsz	wreg,f,c
  7852  002BFC  D7FE               	bra	u4447
  7853  002BFE  2E21               	decfsz	??_turnRight135^0,f,c
  7854  002C00  D7FC               	bra	u4447
  7855  002C02  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7856  002C04  D7FA               	bra	u4447
  7857  002C06                     
  7858                           ;dc_motor.c: 178:     stop(mL, mR);
  7859  002C06  C01D  F019         	movff	turnRight135@mL,stop@mL
  7860  002C0A  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  7861  002C0E  C01F  F01B         	movff	turnRight135@mR,stop@mR
  7862  002C12  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  7863  002C16  ECA9  F018         	call	_stop	;wreg free
  7864  002C1A                     
  7865                           ;dc_motor.c: 179:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7866  002C1A  0E05               	movlw	5
  7867  002C1C  6E22               	movwf	(??_turnRight135+1)^0,c
  7868  002C1E  0E0F               	movlw	15
  7869  002C20  6E21               	movwf	??_turnRight135^0,c
  7870  002C22  0EF1               	movlw	241
  7871  002C24                     u4457:
  7872  002C24  2EE8               	decfsz	wreg,f,c
  7873  002C26  D7FE               	bra	u4457
  7874  002C28  2E21               	decfsz	??_turnRight135^0,f,c
  7875  002C2A  D7FC               	bra	u4457
  7876  002C2C  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  7877  002C2E  D7FA               	bra	u4457
  7878  002C30  F000               	nop	
  7879  002C32  0012               	return		;funcret
  7880  002C34                     __end_of_turnRight135:
  7881                           	callstack 0
  7882                           
  7883 ;; *************** function _turnLeft135 *****************
  7884 ;; Defined at:
  7885 ;;		line 111 in file "dc_motor.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7888 ;;		 -> main@motorL(9), 
  7889 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7890 ;;		 -> main@motorR(9), 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;  i               2   34[COMRAM] unsigned int 
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      void 
  7895 ;; Registers used:
  7896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;Total ram usage:        8 bytes
  7907 ;; Hardware stack levels used: 1
  7908 ;; Hardware stack levels required when called: 4
  7909 ;; This function calls:
  7910 ;;		_reverse
  7911 ;;		_setMotorPWM
  7912 ;;		_stop
  7913 ;; This function is called by:
  7914 ;;		_White
  7915 ;;		_main
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text31
  7920  002C34                     __ptext31:
  7921                           	callstack 0
  7922  002C34                     _turnLeft135:
  7923                           	callstack 26
  7924  002C34                     
  7925                           ;dc_motor.c: 111: void turnLeft135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           112: {;dc_motor.c: 113:     stop(mL, mR);
  7926  002C34  C01D  F019         	movff	turnLeft135@mL,stop@mL
  7927  002C38  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  7928  002C3C  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  7929  002C40  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  7930  002C44  ECA9  F018         	call	_stop	;wreg free
  7931  002C48                     
  7932                           ;dc_motor.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7933  002C48  0E05               	movlw	5
  7934  002C4A  6E22               	movwf	(??_turnLeft135+1)^0,c
  7935  002C4C  0E0F               	movlw	15
  7936  002C4E  6E21               	movwf	??_turnLeft135^0,c
  7937  002C50  0EF1               	movlw	241
  7938  002C52                     u4467:
  7939  002C52  2EE8               	decfsz	wreg,f,c
  7940  002C54  D7FE               	bra	u4467
  7941  002C56  2E21               	decfsz	??_turnLeft135^0,f,c
  7942  002C58  D7FC               	bra	u4467
  7943  002C5A  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7944  002C5C  D7FA               	bra	u4467
  7945  002C5E  F000               	nop	
  7946  002C60                     
  7947                           ;dc_motor.c: 115:     reverse(mL, mR);
  7948  002C60  C01D  F019         	movff	turnLeft135@mL,reverse@mL
  7949  002C64  C01E  F01A         	movff	turnLeft135@mL+1,reverse@mL+1
  7950  002C68  C01F  F01B         	movff	turnLeft135@mR,reverse@mR
  7951  002C6C  C020  F01C         	movff	turnLeft135@mR+1,reverse@mR+1
  7952  002C70  ECC7  F019         	call	_reverse	;wreg free
  7953                           
  7954                           ;dc_motor.c: 116:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7955  002C74  0E21               	movlw	33
  7956  002C76  6E22               	movwf	(??_turnLeft135+1)^0,c
  7957  002C78  0E78               	movlw	120
  7958  002C7A  6E21               	movwf	??_turnLeft135^0,c
  7959  002C7C  0E98               	movlw	152
  7960  002C7E                     u4477:
  7961  002C7E  2EE8               	decfsz	wreg,f,c
  7962  002C80  D7FE               	bra	u4477
  7963  002C82  2E21               	decfsz	??_turnLeft135^0,f,c
  7964  002C84  D7FC               	bra	u4477
  7965  002C86  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7966  002C88  D7FA               	bra	u4477
  7967  002C8A  D000               	nop2	
  7968  002C8C                     
  7969                           ;dc_motor.c: 117:     stop(mL, mR);
  7970  002C8C  C01D  F019         	movff	turnLeft135@mL,stop@mL
  7971  002C90  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  7972  002C94  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  7973  002C98  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  7974  002C9C  ECA9  F018         	call	_stop	;wreg free
  7975  002CA0                     
  7976                           ;dc_motor.c: 118:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7977  002CA0  0E0D               	movlw	13
  7978  002CA2  6E22               	movwf	(??_turnLeft135+1)^0,c
  7979  002CA4  0E2D               	movlw	45
  7980  002CA6  6E21               	movwf	??_turnLeft135^0,c
  7981  002CA8  0ED8               	movlw	216
  7982  002CAA                     u4487:
  7983  002CAA  2EE8               	decfsz	wreg,f,c
  7984  002CAC  D7FE               	bra	u4487
  7985  002CAE  2E21               	decfsz	??_turnLeft135^0,f,c
  7986  002CB0  D7FC               	bra	u4487
  7987  002CB2  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  7988  002CB4  D7FA               	bra	u4487
  7989  002CB6                     
  7990                           ;dc_motor.c: 120:     (*mL).direction = 0;
  7991  002CB6  EE20 F001          	lfsr	2,1
  7992  002CBA  501D               	movf	turnLeft135@mL^0,w,c
  7993  002CBC  26D9               	addwf	fsr2l,f,c
  7994  002CBE  501E               	movf	(turnLeft135@mL+1)^0,w,c
  7995  002CC0  22DA               	addwfc	fsr2h,f,c
  7996  002CC2  0E00               	movlw	0
  7997  002CC4  6EDF               	movwf	indf2,c
  7998  002CC6                     
  7999                           ;dc_motor.c: 121:     (*mR).direction = 1;
  8000  002CC6  EE20 F001          	lfsr	2,1
  8001  002CCA  501F               	movf	turnLeft135@mR^0,w,c
  8002  002CCC  26D9               	addwf	fsr2l,f,c
  8003  002CCE  5020               	movf	(turnLeft135@mR+1)^0,w,c
  8004  002CD0  22DA               	addwfc	fsr2h,f,c
  8005  002CD2  0E01               	movlw	1
  8006  002CD4  6EDF               	movwf	indf2,c
  8007  002CD6                     
  8008                           ;dc_motor.c: 122:     for (unsigned int i = 0; i < 75; ++i){
  8009  002CD6  0E00               	movlw	0
  8010  002CD8  6E24               	movwf	(turnLeft135@i+1)^0,c
  8011  002CDA  0E00               	movlw	0
  8012  002CDC  6E23               	movwf	turnLeft135@i^0,c
  8013  002CDE                     l3063:
  8014                           
  8015                           ;dc_motor.c: 123:         (mL->power) += 1;
  8016  002CDE  C01D  FFD9         	movff	turnLeft135@mL,fsr2l
  8017  002CE2  C01E  FFDA         	movff	turnLeft135@mL+1,fsr2h
  8018  002CE6  2ADF               	incf	indf2,f,c
  8019                           
  8020                           ;dc_motor.c: 124:         (mR->power) += 1;
  8021  002CE8  C01F  FFD9         	movff	turnLeft135@mR,fsr2l
  8022  002CEC  C020  FFDA         	movff	turnLeft135@mR+1,fsr2h
  8023  002CF0  2ADF               	incf	indf2,f,c
  8024  002CF2                     
  8025                           ;dc_motor.c: 125:         setMotorPWM(mL);
  8026  002CF2  C01D  F00E         	movff	turnLeft135@mL,setMotorPWM@m
  8027  002CF6  C01E  F00F         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  8028  002CFA  ECDA  F011         	call	_setMotorPWM	;wreg free
  8029  002CFE                     
  8030                           ;dc_motor.c: 126:         setMotorPWM(mR);
  8031  002CFE  C01F  F00E         	movff	turnLeft135@mR,setMotorPWM@m
  8032  002D02  C020  F00F         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  8033  002D06  ECDA  F011         	call	_setMotorPWM	;wreg free
  8034  002D0A                     
  8035                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8036  002D0A  0EA0               	movlw	160
  8037  002D0C                     u4497:
  8038  002D0C  D000               	nop2	
  8039  002D0E  2EE8               	decfsz	wreg,f,c
  8040  002D10  D7FD               	bra	u4497
  8041  002D12                     
  8042                           ;dc_motor.c: 128:     }
  8043  002D12  4A23               	infsnz	turnLeft135@i^0,f,c
  8044  002D14  2A24               	incf	(turnLeft135@i+1)^0,f,c
  8045  002D16  5024               	movf	(turnLeft135@i+1)^0,w,c
  8046  002D18  E109               	bnz	u2380
  8047  002D1A  0E4B               	movlw	75
  8048  002D1C  5C23               	subwf	turnLeft135@i^0,w,c
  8049  002D1E  A0D8               	btfss	status,0,c
  8050  002D20  EF94  F016         	goto	u2381
  8051  002D24  EF96  F016         	goto	u2380
  8052  002D28                     u2381:
  8053  002D28  EF6F  F016         	goto	l3063
  8054  002D2C                     u2380:
  8055  002D2C                     
  8056                           ;dc_motor.c: 129:     _delay((unsigned long)((255)*(64000000/4000.0)));
  8057  002D2C  0E15               	movlw	21
  8058  002D2E  6E22               	movwf	(??_turnLeft135+1)^0,c
  8059  002D30  0EB3               	movlw	179
  8060  002D32  6E21               	movwf	??_turnLeft135^0,c
  8061  002D34  0EA4               	movlw	164
  8062  002D36                     u4507:
  8063  002D36  2EE8               	decfsz	wreg,f,c
  8064  002D38  D7FE               	bra	u4507
  8065  002D3A  2E21               	decfsz	??_turnLeft135^0,f,c
  8066  002D3C  D7FC               	bra	u4507
  8067  002D3E  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8068  002D40  D7FA               	bra	u4507
  8069  002D42                     
  8070                           ;dc_motor.c: 130:     stop(mL, mR);
  8071  002D42  C01D  F019         	movff	turnLeft135@mL,stop@mL
  8072  002D46  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  8073  002D4A  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8074  002D4E  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8075  002D52  ECA9  F018         	call	_stop	;wreg free
  8076  002D56                     
  8077                           ;dc_motor.c: 131:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8078  002D56  0E05               	movlw	5
  8079  002D58  6E22               	movwf	(??_turnLeft135+1)^0,c
  8080  002D5A  0E0F               	movlw	15
  8081  002D5C  6E21               	movwf	??_turnLeft135^0,c
  8082  002D5E  0EF1               	movlw	241
  8083  002D60                     u4517:
  8084  002D60  2EE8               	decfsz	wreg,f,c
  8085  002D62  D7FE               	bra	u4517
  8086  002D64  2E21               	decfsz	??_turnLeft135^0,f,c
  8087  002D66  D7FC               	bra	u4517
  8088  002D68  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8089  002D6A  D7FA               	bra	u4517
  8090  002D6C  F000               	nop	
  8091  002D6E  0012               	return		;funcret
  8092  002D70                     __end_of_turnLeft135:
  8093                           	callstack 0
  8094                           
  8095 ;; *************** function _reverseTurnRight90 *****************
  8096 ;; Defined at:
  8097 ;;		line 218 in file "dc_motor.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  8100 ;;		 -> main@motorL(9), 
  8101 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  8102 ;;		 -> main@motorR(9), 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8118 ;;Total ram usage:        6 bytes
  8119 ;; Hardware stack levels used: 1
  8120 ;; Hardware stack levels required when called: 5
  8121 ;; This function calls:
  8122 ;;		_setMotorPWM
  8123 ;;		_stop
  8124 ;;		_turnRight90
  8125 ;; This function is called by:
  8126 ;;		_White
  8127 ;;		_main
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text32
  8132  002F7A                     __ptext32:
  8133                           	callstack 0
  8134  002F7A                     _reverseTurnRight90:
  8135                           	callstack 25
  8136  002F7A                     
  8137                           ;dc_motor.c: 218: void reverseTurnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_m
      +                          otor.c: 219: {;dc_motor.c: 220:     stop(mL, mR);
  8138  002F7A  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  8139  002F7E  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  8140  002F82  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  8141  002F86  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  8142  002F8A  ECA9  F018         	call	_stop	;wreg free
  8143  002F8E                     
  8144                           ;dc_motor.c: 221:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8145  002F8E  0E05               	movlw	5
  8146  002F90  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8147  002F92  0E0F               	movlw	15
  8148  002F94  6E29               	movwf	??_reverseTurnRight90^0,c
  8149  002F96  0EF1               	movlw	241
  8150  002F98                     u4527:
  8151  002F98  2EE8               	decfsz	wreg,f,c
  8152  002F9A  D7FE               	bra	u4527
  8153  002F9C  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8154  002F9E  D7FC               	bra	u4527
  8155  002FA0  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8156  002FA2  D7FA               	bra	u4527
  8157  002FA4  F000               	nop	
  8158  002FA6                     
  8159                           ;dc_motor.c: 222:     (*mL).direction = 0;
  8160  002FA6  EE20 F001          	lfsr	2,1
  8161  002FAA  5025               	movf	reverseTurnRight90@mL^0,w,c
  8162  002FAC  26D9               	addwf	fsr2l,f,c
  8163  002FAE  5026               	movf	(reverseTurnRight90@mL+1)^0,w,c
  8164  002FB0  22DA               	addwfc	fsr2h,f,c
  8165  002FB2  0E00               	movlw	0
  8166  002FB4  6EDF               	movwf	indf2,c
  8167  002FB6                     
  8168                           ;dc_motor.c: 223:     (*mR).direction = 0;
  8169  002FB6  EE20 F001          	lfsr	2,1
  8170  002FBA  5027               	movf	reverseTurnRight90@mR^0,w,c
  8171  002FBC  26D9               	addwf	fsr2l,f,c
  8172  002FBE  5028               	movf	(reverseTurnRight90@mR+1)^0,w,c
  8173  002FC0  22DA               	addwfc	fsr2h,f,c
  8174  002FC2  0E00               	movlw	0
  8175  002FC4  6EDF               	movwf	indf2,c
  8176  002FC6                     
  8177                           ;dc_motor.c: 224:     (*mL).power = 70;
  8178  002FC6  C025  FFD9         	movff	reverseTurnRight90@mL,fsr2l
  8179  002FCA  C026  FFDA         	movff	reverseTurnRight90@mL+1,fsr2h
  8180  002FCE  0E46               	movlw	70
  8181  002FD0  6EDF               	movwf	indf2,c
  8182  002FD2                     
  8183                           ;dc_motor.c: 225:     (*mR).power = 70;
  8184  002FD2  C027  FFD9         	movff	reverseTurnRight90@mR,fsr2l
  8185  002FD6  C028  FFDA         	movff	reverseTurnRight90@mR+1,fsr2h
  8186  002FDA  0E46               	movlw	70
  8187  002FDC  6EDF               	movwf	indf2,c
  8188  002FDE                     
  8189                           ;dc_motor.c: 226:     setMotorPWM(mL);
  8190  002FDE  C025  F00E         	movff	reverseTurnRight90@mL,setMotorPWM@m
  8191  002FE2  C026  F00F         	movff	reverseTurnRight90@mL+1,setMotorPWM@m+1
  8192  002FE6  ECDA  F011         	call	_setMotorPWM	;wreg free
  8193  002FEA                     
  8194                           ;dc_motor.c: 227:     setMotorPWM(mR);
  8195  002FEA  C027  F00E         	movff	reverseTurnRight90@mR,setMotorPWM@m
  8196  002FEE  C028  F00F         	movff	reverseTurnRight90@mR+1,setMotorPWM@m+1
  8197  002FF2  ECDA  F011         	call	_setMotorPWM	;wreg free
  8198  002FF6                     
  8199                           ;dc_motor.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8200  002FF6  0E29               	movlw	41
  8201  002FF8  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8202  002FFA  0E96               	movlw	150
  8203  002FFC  6E29               	movwf	??_reverseTurnRight90^0,c
  8204  002FFE  0E7F               	movlw	127
  8205  003000                     u4537:
  8206  003000  2EE8               	decfsz	wreg,f,c
  8207  003002  D7FE               	bra	u4537
  8208  003004  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8209  003006  D7FC               	bra	u4537
  8210  003008  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8211  00300A  D7FA               	bra	u4537
  8212  00300C  F000               	nop	
  8213                           
  8214                           ;dc_motor.c: 229:     stop(mL, mR);
  8215  00300E  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  8216  003012  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  8217  003016  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  8218  00301A  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  8219  00301E  ECA9  F018         	call	_stop	;wreg free
  8220  003022                     
  8221                           ;dc_motor.c: 230:     _delay((unsigned long)((600)*(64000000/4000.0)));
  8222  003022  0E31               	movlw	49
  8223  003024  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8224  003026  0EB4               	movlw	180
  8225  003028  6E29               	movwf	??_reverseTurnRight90^0,c
  8226  00302A  0E66               	movlw	102
  8227  00302C                     u4547:
  8228  00302C  2EE8               	decfsz	wreg,f,c
  8229  00302E  D7FE               	bra	u4547
  8230  003030  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8231  003032  D7FC               	bra	u4547
  8232  003034  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8233  003036  D7FA               	bra	u4547
  8234  003038                     
  8235                           ;dc_motor.c: 231:     turnRight90(mL, mR);
  8236  003038  C025  F01D         	movff	reverseTurnRight90@mL,turnRight90@mL
  8237  00303C  C026  F01E         	movff	reverseTurnRight90@mL+1,turnRight90@mL+1
  8238  003040  C027  F01F         	movff	reverseTurnRight90@mR,turnRight90@mR
  8239  003044  C028  F020         	movff	reverseTurnRight90@mR+1,turnRight90@mR+1
  8240  003048  ECDD  F014         	call	_turnRight90	;wreg free
  8241                           
  8242                           ;dc_motor.c: 232:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8243  00304C  0E09               	movlw	9
  8244  00304E  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  8245  003050  0E1E               	movlw	30
  8246  003052  6E29               	movwf	??_reverseTurnRight90^0,c
  8247  003054  0EE4               	movlw	228
  8248  003056                     u4557:
  8249  003056  2EE8               	decfsz	wreg,f,c
  8250  003058  D7FE               	bra	u4557
  8251  00305A  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  8252  00305C  D7FC               	bra	u4557
  8253  00305E  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  8254  003060  D7FA               	bra	u4557
  8255  003062  D000               	nop2	
  8256  003064  0012               	return		;funcret
  8257  003066                     __end_of_reverseTurnRight90:
  8258                           	callstack 0
  8259                           
  8260 ;; *************** function _turnRight90 *****************
  8261 ;; Defined at:
  8262 ;;		line 135 in file "dc_motor.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8265 ;;		 -> main@motorL(9), 
  8266 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8267 ;;		 -> main@motorR(9), 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  i               2   34[COMRAM] unsigned int 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;Total ram usage:        8 bytes
  8284 ;; Hardware stack levels used: 1
  8285 ;; Hardware stack levels required when called: 4
  8286 ;; This function calls:
  8287 ;;		_reverse
  8288 ;;		_setMotorPWM
  8289 ;;		_stop
  8290 ;; This function is called by:
  8291 ;;		_White
  8292 ;;		_reverseTurnRight90
  8293 ;;		_main
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text33
  8298  0029BA                     __ptext33:
  8299                           	callstack 0
  8300  0029BA                     _turnRight90:
  8301                           	callstack 26
  8302  0029BA                     
  8303                           ;dc_motor.c: 135: void turnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           136: {;dc_motor.c: 137:     stop(mL, mR);
  8304  0029BA  C01D  F019         	movff	turnRight90@mL,stop@mL
  8305  0029BE  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8306  0029C2  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8307  0029C6  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8308  0029CA  ECA9  F018         	call	_stop	;wreg free
  8309  0029CE                     
  8310                           ;dc_motor.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8311  0029CE  0E05               	movlw	5
  8312  0029D0  6E22               	movwf	(??_turnRight90+1)^0,c
  8313  0029D2  0E0F               	movlw	15
  8314  0029D4  6E21               	movwf	??_turnRight90^0,c
  8315  0029D6  0EF1               	movlw	241
  8316  0029D8                     u4567:
  8317  0029D8  2EE8               	decfsz	wreg,f,c
  8318  0029DA  D7FE               	bra	u4567
  8319  0029DC  2E21               	decfsz	??_turnRight90^0,f,c
  8320  0029DE  D7FC               	bra	u4567
  8321  0029E0  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8322  0029E2  D7FA               	bra	u4567
  8323  0029E4  F000               	nop	
  8324  0029E6                     
  8325                           ;dc_motor.c: 139:     reverse(mL, mR);
  8326  0029E6  C01D  F019         	movff	turnRight90@mL,reverse@mL
  8327  0029EA  C01E  F01A         	movff	turnRight90@mL+1,reverse@mL+1
  8328  0029EE  C01F  F01B         	movff	turnRight90@mR,reverse@mR
  8329  0029F2  C020  F01C         	movff	turnRight90@mR+1,reverse@mR+1
  8330  0029F6  ECC7  F019         	call	_reverse	;wreg free
  8331                           
  8332                           ;dc_motor.c: 140:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8333  0029FA  0E21               	movlw	33
  8334  0029FC  6E22               	movwf	(??_turnRight90+1)^0,c
  8335  0029FE  0E78               	movlw	120
  8336  002A00  6E21               	movwf	??_turnRight90^0,c
  8337  002A02  0E98               	movlw	152
  8338  002A04                     u4577:
  8339  002A04  2EE8               	decfsz	wreg,f,c
  8340  002A06  D7FE               	bra	u4577
  8341  002A08  2E21               	decfsz	??_turnRight90^0,f,c
  8342  002A0A  D7FC               	bra	u4577
  8343  002A0C  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8344  002A0E  D7FA               	bra	u4577
  8345  002A10  D000               	nop2	
  8346  002A12                     
  8347                           ;dc_motor.c: 141:     stop(mL, mR);
  8348  002A12  C01D  F019         	movff	turnRight90@mL,stop@mL
  8349  002A16  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8350  002A1A  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8351  002A1E  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8352  002A22  ECA9  F018         	call	_stop	;wreg free
  8353  002A26                     
  8354                           ;dc_motor.c: 142:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8355  002A26  0E0D               	movlw	13
  8356  002A28  6E22               	movwf	(??_turnRight90+1)^0,c
  8357  002A2A  0E2D               	movlw	45
  8358  002A2C  6E21               	movwf	??_turnRight90^0,c
  8359  002A2E  0ED8               	movlw	216
  8360  002A30                     u4587:
  8361  002A30  2EE8               	decfsz	wreg,f,c
  8362  002A32  D7FE               	bra	u4587
  8363  002A34  2E21               	decfsz	??_turnRight90^0,f,c
  8364  002A36  D7FC               	bra	u4587
  8365  002A38  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8366  002A3A  D7FA               	bra	u4587
  8367  002A3C                     
  8368                           ;dc_motor.c: 144:     (*mL).direction = 1;
  8369  002A3C  EE20 F001          	lfsr	2,1
  8370  002A40  501D               	movf	turnRight90@mL^0,w,c
  8371  002A42  26D9               	addwf	fsr2l,f,c
  8372  002A44  501E               	movf	(turnRight90@mL+1)^0,w,c
  8373  002A46  22DA               	addwfc	fsr2h,f,c
  8374  002A48  0E01               	movlw	1
  8375  002A4A  6EDF               	movwf	indf2,c
  8376  002A4C                     
  8377                           ;dc_motor.c: 145:     (*mR).direction = 0;
  8378  002A4C  EE20 F001          	lfsr	2,1
  8379  002A50  501F               	movf	turnRight90@mR^0,w,c
  8380  002A52  26D9               	addwf	fsr2l,f,c
  8381  002A54  5020               	movf	(turnRight90@mR+1)^0,w,c
  8382  002A56  22DA               	addwfc	fsr2h,f,c
  8383  002A58  0E00               	movlw	0
  8384  002A5A  6EDF               	movwf	indf2,c
  8385  002A5C                     
  8386                           ;dc_motor.c: 146:     for (unsigned int i = 0; i < 80; ++i){
  8387  002A5C  0E00               	movlw	0
  8388  002A5E  6E24               	movwf	(turnRight90@i+1)^0,c
  8389  002A60  0E00               	movlw	0
  8390  002A62  6E23               	movwf	turnRight90@i^0,c
  8391  002A64                     l2869:
  8392                           
  8393                           ;dc_motor.c: 147:         (mL->power) += 1;
  8394  002A64  C01D  FFD9         	movff	turnRight90@mL,fsr2l
  8395  002A68  C01E  FFDA         	movff	turnRight90@mL+1,fsr2h
  8396  002A6C  2ADF               	incf	indf2,f,c
  8397                           
  8398                           ;dc_motor.c: 148:         (mR->power) += 1;
  8399  002A6E  C01F  FFD9         	movff	turnRight90@mR,fsr2l
  8400  002A72  C020  FFDA         	movff	turnRight90@mR+1,fsr2h
  8401  002A76  2ADF               	incf	indf2,f,c
  8402  002A78                     
  8403                           ;dc_motor.c: 149:         setMotorPWM(mL);
  8404  002A78  C01D  F00E         	movff	turnRight90@mL,setMotorPWM@m
  8405  002A7C  C01E  F00F         	movff	turnRight90@mL+1,setMotorPWM@m+1
  8406  002A80  ECDA  F011         	call	_setMotorPWM	;wreg free
  8407  002A84                     
  8408                           ;dc_motor.c: 150:         setMotorPWM(mR);
  8409  002A84  C01F  F00E         	movff	turnRight90@mR,setMotorPWM@m
  8410  002A88  C020  F00F         	movff	turnRight90@mR+1,setMotorPWM@m+1
  8411  002A8C  ECDA  F011         	call	_setMotorPWM	;wreg free
  8412  002A90                     
  8413                           ;dc_motor.c: 151:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8414  002A90  0EA0               	movlw	160
  8415  002A92                     u4597:
  8416  002A92  D000               	nop2	
  8417  002A94  2EE8               	decfsz	wreg,f,c
  8418  002A96  D7FD               	bra	u4597
  8419  002A98                     
  8420                           ;dc_motor.c: 152:     }
  8421  002A98  4A23               	infsnz	turnRight90@i^0,f,c
  8422  002A9A  2A24               	incf	(turnRight90@i+1)^0,f,c
  8423  002A9C  5024               	movf	(turnRight90@i+1)^0,w,c
  8424  002A9E  E109               	bnz	u2290
  8425  002AA0  0E50               	movlw	80
  8426  002AA2  5C23               	subwf	turnRight90@i^0,w,c
  8427  002AA4  A0D8               	btfss	status,0,c
  8428  002AA6  EF57  F015         	goto	u2291
  8429  002AAA  EF59  F015         	goto	u2290
  8430  002AAE                     u2291:
  8431  002AAE  EF32  F015         	goto	l2869
  8432  002AB2                     u2290:
  8433  002AB2                     
  8434                           ;dc_motor.c: 153:     _delay((unsigned long)((205)*(64000000/4000.0)));
  8435  002AB2  0E11               	movlw	17
  8436  002AB4  6E22               	movwf	(??_turnRight90+1)^0,c
  8437  002AB6  0EA4               	movlw	164
  8438  002AB8  6E21               	movwf	??_turnRight90^0,c
  8439  002ABA  0EB0               	movlw	176
  8440  002ABC                     u4607:
  8441  002ABC  2EE8               	decfsz	wreg,f,c
  8442  002ABE  D7FE               	bra	u4607
  8443  002AC0  2E21               	decfsz	??_turnRight90^0,f,c
  8444  002AC2  D7FC               	bra	u4607
  8445  002AC4  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8446  002AC6  D7FA               	bra	u4607
  8447  002AC8  D000               	nop2	
  8448  002ACA                     
  8449                           ;dc_motor.c: 154:     stop(mL, mR);
  8450  002ACA  C01D  F019         	movff	turnRight90@mL,stop@mL
  8451  002ACE  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8452  002AD2  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8453  002AD6  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8454  002ADA  ECA9  F018         	call	_stop	;wreg free
  8455  002ADE                     
  8456                           ;dc_motor.c: 155:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8457  002ADE  0E05               	movlw	5
  8458  002AE0  6E22               	movwf	(??_turnRight90+1)^0,c
  8459  002AE2  0E0F               	movlw	15
  8460  002AE4  6E21               	movwf	??_turnRight90^0,c
  8461  002AE6  0EF1               	movlw	241
  8462  002AE8                     u4617:
  8463  002AE8  2EE8               	decfsz	wreg,f,c
  8464  002AEA  D7FE               	bra	u4617
  8465  002AEC  2E21               	decfsz	??_turnRight90^0,f,c
  8466  002AEE  D7FC               	bra	u4617
  8467  002AF0  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8468  002AF2  D7FA               	bra	u4617
  8469  002AF4  F000               	nop	
  8470  002AF6  0012               	return		;funcret
  8471  002AF8                     __end_of_turnRight90:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function _reverseTurnLeft90 *****************
  8475 ;; Defined at:
  8476 ;;		line 236 in file "dc_motor.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  8479 ;;		 -> main@motorL(9), 
  8480 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  8481 ;;		 -> main@motorR(9), 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;Total ram usage:        6 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 5
  8500 ;; This function calls:
  8501 ;;		_setMotorPWM
  8502 ;;		_stop
  8503 ;;		_turnLeft90
  8504 ;; This function is called by:
  8505 ;;		_White
  8506 ;;		_main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text34
  8511  003066                     __ptext34:
  8512                           	callstack 0
  8513  003066                     _reverseTurnLeft90:
  8514                           	callstack 25
  8515  003066                     
  8516                           ;dc_motor.c: 236: void reverseTurnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 237: {;dc_motor.c: 238:     stop(mL, mR);
  8517  003066  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  8518  00306A  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  8519  00306E  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  8520  003072  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  8521  003076  ECA9  F018         	call	_stop	;wreg free
  8522  00307A                     
  8523                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8524  00307A  0E05               	movlw	5
  8525  00307C  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8526  00307E  0E0F               	movlw	15
  8527  003080  6E29               	movwf	??_reverseTurnLeft90^0,c
  8528  003082  0EF1               	movlw	241
  8529  003084                     u4627:
  8530  003084  2EE8               	decfsz	wreg,f,c
  8531  003086  D7FE               	bra	u4627
  8532  003088  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8533  00308A  D7FC               	bra	u4627
  8534  00308C  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8535  00308E  D7FA               	bra	u4627
  8536  003090  F000               	nop	
  8537  003092                     
  8538                           ;dc_motor.c: 240:     (*mL).direction = 0;
  8539  003092  EE20 F001          	lfsr	2,1
  8540  003096  5025               	movf	reverseTurnLeft90@mL^0,w,c
  8541  003098  26D9               	addwf	fsr2l,f,c
  8542  00309A  5026               	movf	(reverseTurnLeft90@mL+1)^0,w,c
  8543  00309C  22DA               	addwfc	fsr2h,f,c
  8544  00309E  0E00               	movlw	0
  8545  0030A0  6EDF               	movwf	indf2,c
  8546  0030A2                     
  8547                           ;dc_motor.c: 241:     (*mR).direction = 0;
  8548  0030A2  EE20 F001          	lfsr	2,1
  8549  0030A6  5027               	movf	reverseTurnLeft90@mR^0,w,c
  8550  0030A8  26D9               	addwf	fsr2l,f,c
  8551  0030AA  5028               	movf	(reverseTurnLeft90@mR+1)^0,w,c
  8552  0030AC  22DA               	addwfc	fsr2h,f,c
  8553  0030AE  0E00               	movlw	0
  8554  0030B0  6EDF               	movwf	indf2,c
  8555  0030B2                     
  8556                           ;dc_motor.c: 242:     (*mL).power = 70;
  8557  0030B2  C025  FFD9         	movff	reverseTurnLeft90@mL,fsr2l
  8558  0030B6  C026  FFDA         	movff	reverseTurnLeft90@mL+1,fsr2h
  8559  0030BA  0E46               	movlw	70
  8560  0030BC  6EDF               	movwf	indf2,c
  8561  0030BE                     
  8562                           ;dc_motor.c: 243:     (*mR).power = 70;
  8563  0030BE  C027  FFD9         	movff	reverseTurnLeft90@mR,fsr2l
  8564  0030C2  C028  FFDA         	movff	reverseTurnLeft90@mR+1,fsr2h
  8565  0030C6  0E46               	movlw	70
  8566  0030C8  6EDF               	movwf	indf2,c
  8567  0030CA                     
  8568                           ;dc_motor.c: 244:     setMotorPWM(mL);
  8569  0030CA  C025  F00E         	movff	reverseTurnLeft90@mL,setMotorPWM@m
  8570  0030CE  C026  F00F         	movff	reverseTurnLeft90@mL+1,setMotorPWM@m+1
  8571  0030D2  ECDA  F011         	call	_setMotorPWM	;wreg free
  8572  0030D6                     
  8573                           ;dc_motor.c: 245:     setMotorPWM(mR);
  8574  0030D6  C027  F00E         	movff	reverseTurnLeft90@mR,setMotorPWM@m
  8575  0030DA  C028  F00F         	movff	reverseTurnLeft90@mR+1,setMotorPWM@m+1
  8576  0030DE  ECDA  F011         	call	_setMotorPWM	;wreg free
  8577  0030E2                     
  8578                           ;dc_motor.c: 246:     _delay((unsigned long)((550)*(64000000/4000.0)));
  8579  0030E2  0E2D               	movlw	45
  8580  0030E4  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8581  0030E6  0EA5               	movlw	165
  8582  0030E8  6E29               	movwf	??_reverseTurnLeft90^0,c
  8583  0030EA  0E72               	movlw	114
  8584  0030EC                     u4637:
  8585  0030EC  2EE8               	decfsz	wreg,f,c
  8586  0030EE  D7FE               	bra	u4637
  8587  0030F0  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8588  0030F2  D7FC               	bra	u4637
  8589  0030F4  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8590  0030F6  D7FA               	bra	u4637
  8591  0030F8  D000               	nop2	
  8592                           
  8593                           ;dc_motor.c: 247:     stop(mL, mR);
  8594  0030FA  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  8595  0030FE  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  8596  003102  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  8597  003106  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  8598  00310A  ECA9  F018         	call	_stop	;wreg free
  8599  00310E                     
  8600                           ;dc_motor.c: 248:     _delay((unsigned long)((300)*(64000000/4000.0)));
  8601  00310E  0E19               	movlw	25
  8602  003110  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8603  003112  0E5A               	movlw	90
  8604  003114  6E29               	movwf	??_reverseTurnLeft90^0,c
  8605  003116  0EB2               	movlw	178
  8606  003118                     u4647:
  8607  003118  2EE8               	decfsz	wreg,f,c
  8608  00311A  D7FE               	bra	u4647
  8609  00311C  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8610  00311E  D7FC               	bra	u4647
  8611  003120  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8612  003122  D7FA               	bra	u4647
  8613  003124                     
  8614                           ;dc_motor.c: 249:     turnLeft90(mL, mR);
  8615  003124  C025  F01D         	movff	reverseTurnLeft90@mL,turnLeft90@mL
  8616  003128  C026  F01E         	movff	reverseTurnLeft90@mL+1,turnLeft90@mL+1
  8617  00312C  C027  F01F         	movff	reverseTurnLeft90@mR,turnLeft90@mR
  8618  003130  C028  F020         	movff	reverseTurnLeft90@mR+1,turnLeft90@mR+1
  8619  003134  EC9E  F013         	call	_turnLeft90	;wreg free
  8620                           
  8621                           ;dc_motor.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8622  003138  0E09               	movlw	9
  8623  00313A  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  8624  00313C  0E1E               	movlw	30
  8625  00313E  6E29               	movwf	??_reverseTurnLeft90^0,c
  8626  003140  0EE4               	movlw	228
  8627  003142                     u4657:
  8628  003142  2EE8               	decfsz	wreg,f,c
  8629  003144  D7FE               	bra	u4657
  8630  003146  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  8631  003148  D7FC               	bra	u4657
  8632  00314A  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  8633  00314C  D7FA               	bra	u4657
  8634  00314E  D000               	nop2	
  8635  003150  0012               	return		;funcret
  8636  003152                     __end_of_reverseTurnLeft90:
  8637                           	callstack 0
  8638                           
  8639 ;; *************** function _turnLeft90 *****************
  8640 ;; Defined at:
  8641 ;;		line 87 in file "dc_motor.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8644 ;;		 -> main@motorL(9), 
  8645 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8646 ;;		 -> main@motorR(9), 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  i               2   34[COMRAM] unsigned int 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;Total ram usage:        8 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 4
  8665 ;; This function calls:
  8666 ;;		_reverse
  8667 ;;		_setMotorPWM
  8668 ;;		_stop
  8669 ;; This function is called by:
  8670 ;;		_White
  8671 ;;		_reverseTurnLeft90
  8672 ;;		_main
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text35
  8677  00273C                     __ptext35:
  8678                           	callstack 0
  8679  00273C                     _turnLeft90:
  8680                           	callstack 26
  8681  00273C                     
  8682                           ;dc_motor.c: 87: void turnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 8
      +                          8: {;dc_motor.c: 89:     stop(mL, mR);
  8683  00273C  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8684  002740  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8685  002744  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8686  002748  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8687  00274C  ECA9  F018         	call	_stop	;wreg free
  8688  002750                     
  8689                           ;dc_motor.c: 90:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8690  002750  0E05               	movlw	5
  8691  002752  6E22               	movwf	(??_turnLeft90+1)^0,c
  8692  002754  0E0F               	movlw	15
  8693  002756  6E21               	movwf	??_turnLeft90^0,c
  8694  002758  0EF1               	movlw	241
  8695  00275A                     u4667:
  8696  00275A  2EE8               	decfsz	wreg,f,c
  8697  00275C  D7FE               	bra	u4667
  8698  00275E  2E21               	decfsz	??_turnLeft90^0,f,c
  8699  002760  D7FC               	bra	u4667
  8700  002762  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8701  002764  D7FA               	bra	u4667
  8702  002766  F000               	nop	
  8703  002768                     
  8704                           ;dc_motor.c: 91:     reverse(mL, mR);
  8705  002768  C01D  F019         	movff	turnLeft90@mL,reverse@mL
  8706  00276C  C01E  F01A         	movff	turnLeft90@mL+1,reverse@mL+1
  8707  002770  C01F  F01B         	movff	turnLeft90@mR,reverse@mR
  8708  002774  C020  F01C         	movff	turnLeft90@mR+1,reverse@mR+1
  8709  002778  ECC7  F019         	call	_reverse	;wreg free
  8710                           
  8711                           ;dc_motor.c: 92:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8712  00277C  0E21               	movlw	33
  8713  00277E  6E22               	movwf	(??_turnLeft90+1)^0,c
  8714  002780  0E78               	movlw	120
  8715  002782  6E21               	movwf	??_turnLeft90^0,c
  8716  002784  0E98               	movlw	152
  8717  002786                     u4677:
  8718  002786  2EE8               	decfsz	wreg,f,c
  8719  002788  D7FE               	bra	u4677
  8720  00278A  2E21               	decfsz	??_turnLeft90^0,f,c
  8721  00278C  D7FC               	bra	u4677
  8722  00278E  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8723  002790  D7FA               	bra	u4677
  8724  002792  D000               	nop2	
  8725  002794                     
  8726                           ;dc_motor.c: 93:     stop(mL, mR);
  8727  002794  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8728  002798  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8729  00279C  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8730  0027A0  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8731  0027A4  ECA9  F018         	call	_stop	;wreg free
  8732  0027A8                     
  8733                           ;dc_motor.c: 94:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8734  0027A8  0E0D               	movlw	13
  8735  0027AA  6E22               	movwf	(??_turnLeft90+1)^0,c
  8736  0027AC  0E2D               	movlw	45
  8737  0027AE  6E21               	movwf	??_turnLeft90^0,c
  8738  0027B0  0ED8               	movlw	216
  8739  0027B2                     u4687:
  8740  0027B2  2EE8               	decfsz	wreg,f,c
  8741  0027B4  D7FE               	bra	u4687
  8742  0027B6  2E21               	decfsz	??_turnLeft90^0,f,c
  8743  0027B8  D7FC               	bra	u4687
  8744  0027BA  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8745  0027BC  D7FA               	bra	u4687
  8746  0027BE                     
  8747                           ;dc_motor.c: 96:     (*mL).direction = 0;
  8748  0027BE  EE20 F001          	lfsr	2,1
  8749  0027C2  501D               	movf	turnLeft90@mL^0,w,c
  8750  0027C4  26D9               	addwf	fsr2l,f,c
  8751  0027C6  501E               	movf	(turnLeft90@mL+1)^0,w,c
  8752  0027C8  22DA               	addwfc	fsr2h,f,c
  8753  0027CA  0E00               	movlw	0
  8754  0027CC  6EDF               	movwf	indf2,c
  8755  0027CE                     
  8756                           ;dc_motor.c: 97:     (*mR).direction = 1;
  8757  0027CE  EE20 F001          	lfsr	2,1
  8758  0027D2  501F               	movf	turnLeft90@mR^0,w,c
  8759  0027D4  26D9               	addwf	fsr2l,f,c
  8760  0027D6  5020               	movf	(turnLeft90@mR+1)^0,w,c
  8761  0027D8  22DA               	addwfc	fsr2h,f,c
  8762  0027DA  0E01               	movlw	1
  8763  0027DC  6EDF               	movwf	indf2,c
  8764  0027DE                     
  8765                           ;dc_motor.c: 98:     for (unsigned int i = 0; i < 80; ++i){
  8766  0027DE  0E00               	movlw	0
  8767  0027E0  6E24               	movwf	(turnLeft90@i+1)^0,c
  8768  0027E2  0E00               	movlw	0
  8769  0027E4  6E23               	movwf	turnLeft90@i^0,c
  8770  0027E6                     l2831:
  8771                           
  8772                           ;dc_motor.c: 99:         (mL->power) += 1;
  8773  0027E6  C01D  FFD9         	movff	turnLeft90@mL,fsr2l
  8774  0027EA  C01E  FFDA         	movff	turnLeft90@mL+1,fsr2h
  8775  0027EE  2ADF               	incf	indf2,f,c
  8776                           
  8777                           ;dc_motor.c: 100:         (mR->power) += 1;
  8778  0027F0  C01F  FFD9         	movff	turnLeft90@mR,fsr2l
  8779  0027F4  C020  FFDA         	movff	turnLeft90@mR+1,fsr2h
  8780  0027F8  2ADF               	incf	indf2,f,c
  8781  0027FA                     
  8782                           ;dc_motor.c: 101:         setMotorPWM(mL);
  8783  0027FA  C01D  F00E         	movff	turnLeft90@mL,setMotorPWM@m
  8784  0027FE  C01E  F00F         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  8785  002802  ECDA  F011         	call	_setMotorPWM	;wreg free
  8786  002806                     
  8787                           ;dc_motor.c: 102:         setMotorPWM(mR);
  8788  002806  C01F  F00E         	movff	turnLeft90@mR,setMotorPWM@m
  8789  00280A  C020  F00F         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  8790  00280E  ECDA  F011         	call	_setMotorPWM	;wreg free
  8791  002812                     
  8792                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8793  002812  0EA0               	movlw	160
  8794  002814                     u4697:
  8795  002814  D000               	nop2	
  8796  002816  2EE8               	decfsz	wreg,f,c
  8797  002818  D7FD               	bra	u4697
  8798  00281A                     
  8799                           ;dc_motor.c: 104:     }
  8800  00281A  4A23               	infsnz	turnLeft90@i^0,f,c
  8801  00281C  2A24               	incf	(turnLeft90@i+1)^0,f,c
  8802  00281E  5024               	movf	(turnLeft90@i+1)^0,w,c
  8803  002820  E109               	bnz	u2280
  8804  002822  0E50               	movlw	80
  8805  002824  5C23               	subwf	turnLeft90@i^0,w,c
  8806  002826  A0D8               	btfss	status,0,c
  8807  002828  EF18  F014         	goto	u2281
  8808  00282C  EF1A  F014         	goto	u2280
  8809  002830                     u2281:
  8810  002830  EFF3  F013         	goto	l2831
  8811  002834                     u2280:
  8812  002834                     
  8813                           ;dc_motor.c: 105:     _delay((unsigned long)((190)*(64000000/4000.0)));
  8814  002834  0E10               	movlw	16
  8815  002836  6E22               	movwf	(??_turnLeft90+1)^0,c
  8816  002838  0E6C               	movlw	108
  8817  00283A  6E21               	movwf	??_turnLeft90^0,c
  8818  00283C  0E00               	movlw	0
  8819  00283E                     u4707:
  8820  00283E  2EE8               	decfsz	wreg,f,c
  8821  002840  D7FE               	bra	u4707
  8822  002842  2E21               	decfsz	??_turnLeft90^0,f,c
  8823  002844  D7FC               	bra	u4707
  8824  002846  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8825  002848  D7FA               	bra	u4707
  8826  00284A  D000               	nop2	
  8827  00284C  D000               	nop2	
  8828  00284E                     
  8829                           ;dc_motor.c: 106:     stop(mL, mR);
  8830  00284E  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8831  002852  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8832  002856  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8833  00285A  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8834  00285E  ECA9  F018         	call	_stop	;wreg free
  8835  002862                     
  8836                           ;dc_motor.c: 107:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8837  002862  0E05               	movlw	5
  8838  002864  6E22               	movwf	(??_turnLeft90+1)^0,c
  8839  002866  0E0F               	movlw	15
  8840  002868  6E21               	movwf	??_turnLeft90^0,c
  8841  00286A  0EF1               	movlw	241
  8842  00286C                     u4717:
  8843  00286C  2EE8               	decfsz	wreg,f,c
  8844  00286E  D7FE               	bra	u4717
  8845  002870  2E21               	decfsz	??_turnLeft90^0,f,c
  8846  002872  D7FC               	bra	u4717
  8847  002874  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8848  002876  D7FA               	bra	u4717
  8849  002878  F000               	nop	
  8850  00287A  0012               	return		;funcret
  8851  00287C                     __end_of_turnLeft90:
  8852                           	callstack 0
  8853                           
  8854 ;; *************** function _stop *****************
  8855 ;; Defined at:
  8856 ;;		line 61 in file "dc_motor.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8859 ;;		 -> main@motorL(9), 
  8860 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8861 ;;		 -> main@motorR(9), 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;Total ram usage:        4 bytes
  8878 ;; Hardware stack levels used: 1
  8879 ;; Hardware stack levels required when called: 3
  8880 ;; This function calls:
  8881 ;;		_setMotorPWM
  8882 ;; This function is called by:
  8883 ;;		_White
  8884 ;;		_turnLeft90
  8885 ;;		_turnLeft135
  8886 ;;		_turnRight90
  8887 ;;		_turnRight135
  8888 ;;		_turnRight180
  8889 ;;		_reverseTurnRight90
  8890 ;;		_reverseTurnLeft90
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text36
  8895  003152                     __ptext36:
  8896                           	callstack 0
  8897  003152                     _stop:
  8898                           	callstack 26
  8899  003152                     
  8900                           ;dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 62: {;d
      +                          c_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8901  003152  EFDD  F018         	goto	l2763
  8902  003156                     l2749:
  8903                           
  8904                           ;dc_motor.c: 64:         if ((mL->power) > 0){
  8905  003156  C019  FFD9         	movff	stop@mL,fsr2l
  8906  00315A  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8907  00315E  50DF               	movf	indf2,w,c
  8908  003160  B4D8               	btfsc	status,2,c
  8909  003162  EFB5  F018         	goto	u2201
  8910  003166  EFB7  F018         	goto	u2200
  8911  00316A                     u2201:
  8912  00316A  EFBC  F018         	goto	l2753
  8913  00316E                     u2200:
  8914  00316E                     
  8915                           ;dc_motor.c: 65:             (mL->power) -= 1;
  8916  00316E  C019  FFD9         	movff	stop@mL,fsr2l
  8917  003172  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8918  003176  06DF               	decf	indf2,f,c
  8919  003178                     l2753:
  8920                           
  8921                           ;dc_motor.c: 67:         if ((mR->power) > 0){
  8922  003178  C01B  FFD9         	movff	stop@mR,fsr2l
  8923  00317C  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8924  003180  50DF               	movf	indf2,w,c
  8925  003182  B4D8               	btfsc	status,2,c
  8926  003184  EFC6  F018         	goto	u2211
  8927  003188  EFC8  F018         	goto	u2210
  8928  00318C                     u2211:
  8929  00318C  EFCD  F018         	goto	l2757
  8930  003190                     u2210:
  8931  003190                     
  8932                           ;dc_motor.c: 68:             (mR->power) -= 1;
  8933  003190  C01B  FFD9         	movff	stop@mR,fsr2l
  8934  003194  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8935  003198  06DF               	decf	indf2,f,c
  8936  00319A                     l2757:
  8937                           
  8938                           ;dc_motor.c: 70:         setMotorPWM(mL);
  8939  00319A  C019  F00E         	movff	stop@mL,setMotorPWM@m
  8940  00319E  C01A  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8941  0031A2  ECDA  F011         	call	_setMotorPWM	;wreg free
  8942  0031A6                     
  8943                           ;dc_motor.c: 71:         setMotorPWM(mR);
  8944  0031A6  C01B  F00E         	movff	stop@mR,setMotorPWM@m
  8945  0031AA  C01C  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8946  0031AE  ECDA  F011         	call	_setMotorPWM	;wreg free
  8947  0031B2                     
  8948                           ;dc_motor.c: 72:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  8949  0031B2  0E35               	movlw	53
  8950  0031B4                     u4727:
  8951  0031B4  2EE8               	decfsz	wreg,f,c
  8952  0031B6  D7FE               	bra	u4727
  8953  0031B8  F000               	nop	
  8954  0031BA                     l2763:
  8955                           
  8956                           ;dc_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8957  0031BA  C019  FFD9         	movff	stop@mL,fsr2l
  8958  0031BE  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8959  0031C2  50DF               	movf	indf2,w,c
  8960  0031C4  B4D8               	btfsc	status,2,c
  8961  0031C6  EFE7  F018         	goto	u2221
  8962  0031CA  EFE9  F018         	goto	u2220
  8963  0031CE                     u2221:
  8964  0031CE  EFF5  F018         	goto	l226
  8965  0031D2                     u2220:
  8966  0031D2  C01B  FFD9         	movff	stop@mR,fsr2l
  8967  0031D6  C01C  FFDA         	movff	stop@mR+1,fsr2h
  8968  0031DA  50DF               	movf	indf2,w,c
  8969  0031DC  A4D8               	btfss	status,2,c
  8970  0031DE  EFF3  F018         	goto	u2231
  8971  0031E2  EFF5  F018         	goto	u2230
  8972  0031E6                     u2231:
  8973  0031E6  EFAB  F018         	goto	l2749
  8974  0031EA                     u2230:
  8975  0031EA                     l226:
  8976  0031EA  0012               	return		;funcret
  8977  0031EC                     __end_of_stop:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function _reverse *****************
  8981 ;; Defined at:
  8982 ;;		line 76 in file "dc_motor.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8985 ;;		 -> main@motorL(9), 
  8986 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8987 ;;		 -> main@motorR(9), 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;Total ram usage:        4 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 3
  9006 ;; This function calls:
  9007 ;;		_setMotorPWM
  9008 ;; This function is called by:
  9009 ;;		_turnLeft90
  9010 ;;		_turnLeft135
  9011 ;;		_turnRight90
  9012 ;;		_turnRight135
  9013 ;;		_turnRight180
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text37
  9018  00338E                     __ptext37:
  9019                           	callstack 0
  9020  00338E                     _reverse:
  9021                           	callstack 26
  9022  00338E                     
  9023                           ;dc_motor.c: 76: void reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: 
      +                          {;dc_motor.c: 78:     (*mL).direction = 0;
  9024  00338E  EE20 F001          	lfsr	2,1
  9025  003392  5019               	movf	reverse@mL^0,w,c
  9026  003394  26D9               	addwf	fsr2l,f,c
  9027  003396  501A               	movf	(reverse@mL+1)^0,w,c
  9028  003398  22DA               	addwfc	fsr2h,f,c
  9029  00339A  0E00               	movlw	0
  9030  00339C  6EDF               	movwf	indf2,c
  9031                           
  9032                           ;dc_motor.c: 79:     (*mR).direction = 0;
  9033  00339E  EE20 F001          	lfsr	2,1
  9034  0033A2  501B               	movf	reverse@mR^0,w,c
  9035  0033A4  26D9               	addwf	fsr2l,f,c
  9036  0033A6  501C               	movf	(reverse@mR+1)^0,w,c
  9037  0033A8  22DA               	addwfc	fsr2h,f,c
  9038  0033AA  0E00               	movlw	0
  9039  0033AC  6EDF               	movwf	indf2,c
  9040  0033AE                     
  9041                           ;dc_motor.c: 80:     (*mL).power = 50;
  9042  0033AE  C019  FFD9         	movff	reverse@mL,fsr2l
  9043  0033B2  C01A  FFDA         	movff	reverse@mL+1,fsr2h
  9044  0033B6  0E32               	movlw	50
  9045  0033B8  6EDF               	movwf	indf2,c
  9046  0033BA                     
  9047                           ;dc_motor.c: 81:     (*mR).power = 50;
  9048  0033BA  C01B  FFD9         	movff	reverse@mR,fsr2l
  9049  0033BE  C01C  FFDA         	movff	reverse@mR+1,fsr2h
  9050  0033C2  0E32               	movlw	50
  9051  0033C4  6EDF               	movwf	indf2,c
  9052  0033C6                     
  9053                           ;dc_motor.c: 82:     setMotorPWM(mL);
  9054  0033C6  C019  F00E         	movff	reverse@mL,setMotorPWM@m
  9055  0033CA  C01A  F00F         	movff	reverse@mL+1,setMotorPWM@m+1
  9056  0033CE  ECDA  F011         	call	_setMotorPWM	;wreg free
  9057  0033D2                     
  9058                           ;dc_motor.c: 83:     setMotorPWM(mR);
  9059  0033D2  C01B  F00E         	movff	reverse@mR,setMotorPWM@m
  9060  0033D6  C01C  F00F         	movff	reverse@mR+1,setMotorPWM@m+1
  9061  0033DA  ECDA  F011         	call	_setMotorPWM	;wreg free
  9062  0033DE  0012               	return		;funcret
  9063  0033E0                     __end_of_reverse:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _forward *****************
  9067 ;; Defined at:
  9068 ;;		line 207 in file "dc_motor.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9071 ;;		 -> main@motorL(9), 
  9072 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9073 ;;		 -> main@motorR(9), 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;Total ram usage:        4 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 3
  9092 ;; This function calls:
  9093 ;;		_setMotorPWM
  9094 ;; This function is called by:
  9095 ;;		_White
  9096 ;;		_main
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text38
  9101  0033E0                     __ptext38:
  9102                           	callstack 0
  9103  0033E0                     _forward:
  9104                           	callstack 27
  9105  0033E0                     
  9106                           ;dc_motor.c: 207: void forward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 208
      +                          : {;dc_motor.c: 209:     (*mL).direction = 1;
  9107  0033E0  EE20 F001          	lfsr	2,1
  9108  0033E4  5019               	movf	forward@mL^0,w,c
  9109  0033E6  26D9               	addwf	fsr2l,f,c
  9110  0033E8  501A               	movf	(forward@mL+1)^0,w,c
  9111  0033EA  22DA               	addwfc	fsr2h,f,c
  9112  0033EC  0E01               	movlw	1
  9113  0033EE  6EDF               	movwf	indf2,c
  9114                           
  9115                           ;dc_motor.c: 210:     (*mR).direction = 1;
  9116  0033F0  EE20 F001          	lfsr	2,1
  9117  0033F4  501B               	movf	forward@mR^0,w,c
  9118  0033F6  26D9               	addwf	fsr2l,f,c
  9119  0033F8  501C               	movf	(forward@mR+1)^0,w,c
  9120  0033FA  22DA               	addwfc	fsr2h,f,c
  9121  0033FC  0E01               	movlw	1
  9122  0033FE  6EDF               	movwf	indf2,c
  9123  003400                     
  9124                           ;dc_motor.c: 211:     (*mL).power = 13;
  9125  003400  C019  FFD9         	movff	forward@mL,fsr2l
  9126  003404  C01A  FFDA         	movff	forward@mL+1,fsr2h
  9127  003408  0E0D               	movlw	13
  9128  00340A  6EDF               	movwf	indf2,c
  9129  00340C                     
  9130                           ;dc_motor.c: 212:     (*mR).power = 13;
  9131  00340C  C01B  FFD9         	movff	forward@mR,fsr2l
  9132  003410  C01C  FFDA         	movff	forward@mR+1,fsr2h
  9133  003414  0E0D               	movlw	13
  9134  003416  6EDF               	movwf	indf2,c
  9135  003418                     
  9136                           ;dc_motor.c: 213:     setMotorPWM(mL);
  9137  003418  C019  F00E         	movff	forward@mL,setMotorPWM@m
  9138  00341C  C01A  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  9139  003420  ECDA  F011         	call	_setMotorPWM	;wreg free
  9140  003424                     
  9141                           ;dc_motor.c: 214:     setMotorPWM(mR);
  9142  003424  C01B  F00E         	movff	forward@mR,setMotorPWM@m
  9143  003428  C01C  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  9144  00342C  ECDA  F011         	call	_setMotorPWM	;wreg free
  9145  003430  0012               	return		;funcret
  9146  003432                     __end_of_forward:
  9147                           	callstack 0
  9148                           
  9149 ;; *************** function _setMotorPWM *****************
  9150 ;; Defined at:
  9151 ;;		line 37 in file "dc_motor.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9154 ;;		 -> main@motorR(9), main@motorL(9), 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  PWMduty         2   22[COMRAM] int 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;Total ram usage:       11 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; Hardware stack levels required when called: 2
  9173 ;; This function calls:
  9174 ;;		___lwdiv
  9175 ;;		___wmul
  9176 ;; This function is called by:
  9177 ;;		_stop
  9178 ;;		_reverse
  9179 ;;		_turnLeft90
  9180 ;;		_turnLeft135
  9181 ;;		_turnRight90
  9182 ;;		_turnRight135
  9183 ;;		_turnRight180
  9184 ;;		_forward
  9185 ;;		_reverseTurnRight90
  9186 ;;		_reverseTurnLeft90
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text39
  9191  0023B4                     __ptext39:
  9192                           	callstack 0
  9193  0023B4                     _setMotorPWM:
  9194                           	callstack 26
  9195  0023B4                     
  9196                           ;dc_motor.c: 37: void setMotorPWM(struct DC_motor *m);dc_motor.c: 38: {;dc_motor.c: 39: 
      +                           int PWMduty;;dc_motor.c: 41:  if (m->direction){
  9197  0023B4  EE20 F001          	lfsr	2,1
  9198  0023B8  500E               	movf	setMotorPWM@m^0,w,c
  9199  0023BA  26D9               	addwf	fsr2l,f,c
  9200  0023BC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9201  0023BE  22DA               	addwfc	fsr2h,f,c
  9202  0023C0  50DF               	movf	indf2,w,c
  9203  0023C2  B4D8               	btfsc	status,2,c
  9204  0023C4  EFE6  F011         	goto	u2161
  9205  0023C8  EFE8  F011         	goto	u2160
  9206  0023CC                     u2161:
  9207  0023CC  EF19  F012         	goto	l2737
  9208  0023D0                     u2160:
  9209  0023D0                     
  9210                           ;dc_motor.c: 43:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  9211  0023D0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9212  0023D4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9213  0023D8  50DF               	movf	indf2,w,c
  9214  0023DA  6E10               	movwf	??_setMotorPWM^0,c
  9215  0023DC  5010               	movf	??_setMotorPWM^0,w,c
  9216  0023DE  6E01               	movwf	___wmul@multiplier^0,c
  9217  0023E0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9218  0023E2  EE20 F007          	lfsr	2,7
  9219  0023E6  500E               	movf	setMotorPWM@m^0,w,c
  9220  0023E8  26D9               	addwf	fsr2l,f,c
  9221  0023EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9222  0023EC  22DA               	addwfc	fsr2h,f,c
  9223  0023EE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9224  0023F2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9225  0023F6  EC86  F01B         	call	___wmul	;wreg free
  9226  0023FA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9227  0023FE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9228  002402  0E00               	movlw	0
  9229  002404  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9230  002406  0E64               	movlw	100
  9231  002408  6E09               	movwf	___lwdiv@divisor^0,c
  9232  00240A  EC33  F019         	call	___lwdiv	;wreg free
  9233  00240E  EE20 F007          	lfsr	2,7
  9234  002412  500E               	movf	setMotorPWM@m^0,w,c
  9235  002414  26D9               	addwf	fsr2l,f,c
  9236  002416  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9237  002418  22DA               	addwfc	fsr2h,f,c
  9238  00241A  CFDE F011          	movff	postinc2,??_setMotorPWM+1
  9239  00241E  CFDD F012          	movff	postdec2,??_setMotorPWM+2
  9240  002422  5007               	movf	?___lwdiv^0,w,c
  9241  002424  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9242  002426  6E17               	movwf	setMotorPWM@PWMduty^0,c
  9243  002428  5008               	movf	(?___lwdiv+1)^0,w,c
  9244  00242A  5812               	subwfb	(??_setMotorPWM+2)^0,w,c
  9245  00242C  6E18               	movwf	(setMotorPWM@PWMduty+1)^0,c
  9246                           
  9247                           ;dc_motor.c: 44:  }
  9248  00242E  EF3C  F012         	goto	l2739
  9249  002432                     l2737:
  9250                           
  9251                           ;dc_motor.c: 47:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  9252  002432  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9253  002436  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9254  00243A  50DF               	movf	indf2,w,c
  9255  00243C  6E10               	movwf	??_setMotorPWM^0,c
  9256  00243E  5010               	movf	??_setMotorPWM^0,w,c
  9257  002440  6E01               	movwf	___wmul@multiplier^0,c
  9258  002442  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9259  002444  EE20 F007          	lfsr	2,7
  9260  002448  500E               	movf	setMotorPWM@m^0,w,c
  9261  00244A  26D9               	addwf	fsr2l,f,c
  9262  00244C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9263  00244E  22DA               	addwfc	fsr2h,f,c
  9264  002450  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9265  002454  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9266  002458  EC86  F01B         	call	___wmul	;wreg free
  9267  00245C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9268  002460  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9269  002464  0E00               	movlw	0
  9270  002466  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9271  002468  0E64               	movlw	100
  9272  00246A  6E09               	movwf	___lwdiv@divisor^0,c
  9273  00246C  EC33  F019         	call	___lwdiv	;wreg free
  9274  002470  C007  F017         	movff	?___lwdiv,setMotorPWM@PWMduty
  9275  002474  C008  F018         	movff	?___lwdiv+1,setMotorPWM@PWMduty+1
  9276  002478                     l2739:
  9277                           
  9278                           ;dc_motor.c: 50:  *(m->dutyHighByte) = PWMduty;
  9279  002478  EE20 F002          	lfsr	2,2
  9280  00247C  500E               	movf	setMotorPWM@m^0,w,c
  9281  00247E  26D9               	addwf	fsr2l,f,c
  9282  002480  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9283  002482  22DA               	addwfc	fsr2h,f,c
  9284  002484  CFDE F010          	movff	postinc2,??_setMotorPWM
  9285  002488  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9286  00248C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9287  002490  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9288  002494  C017  FFDF         	movff	setMotorPWM@PWMduty,indf2
  9289  002498                     
  9290                           ;dc_motor.c: 52:  if (m->direction){
  9291  002498  EE20 F001          	lfsr	2,1
  9292  00249C  500E               	movf	setMotorPWM@m^0,w,c
  9293  00249E  26D9               	addwf	fsr2l,f,c
  9294  0024A0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9295  0024A2  22DA               	addwfc	fsr2h,f,c
  9296  0024A4  50DF               	movf	indf2,w,c
  9297  0024A6  B4D8               	btfsc	status,2,c
  9298  0024A8  EF58  F012         	goto	u2171
  9299  0024AC  EF5A  F012         	goto	u2170
  9300  0024B0                     u2171:
  9301  0024B0  EF8F  F012         	goto	l2745
  9302  0024B4                     u2170:
  9303  0024B4                     
  9304                           ;dc_motor.c: 53:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  9305  0024B4  EE20 F004          	lfsr	2,4
  9306  0024B8  500E               	movf	setMotorPWM@m^0,w,c
  9307  0024BA  26D9               	addwf	fsr2l,f,c
  9308  0024BC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9309  0024BE  22DA               	addwfc	fsr2h,f,c
  9310  0024C0  CFDE F010          	movff	postinc2,??_setMotorPWM
  9311  0024C4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9312  0024C8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9313  0024CC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9314  0024D0  EE10 F004          	lfsr	1,4
  9315  0024D4  500E               	movf	setMotorPWM@m^0,w,c
  9316  0024D6  26E1               	addwf	fsr1l,f,c
  9317  0024D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9318  0024DA  22E2               	addwfc	fsr1h,f,c
  9319  0024DC  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9320  0024E0  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9321  0024E4  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9322  0024E8  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9323  0024EC  50E7               	movf	indf1,w,c
  9324  0024EE  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9325  0024F0  EE10 F006          	lfsr	1,6
  9326  0024F4  500E               	movf	setMotorPWM@m^0,w,c
  9327  0024F6  26E1               	addwf	fsr1l,f,c
  9328  0024F8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9329  0024FA  22E2               	addwfc	fsr1h,f,c
  9330  0024FC  50E7               	movf	indf1,w,c
  9331  0024FE  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9332  002500  0E01               	movlw	1
  9333  002502  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9334  002504  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9335  002506  EF87  F012         	goto	u2184
  9336  00250A                     u2185:
  9337  00250A  90D8               	bcf	status,0,c
  9338  00250C  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9339  00250E                     u2184:
  9340  00250E  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9341  002510  EF85  F012         	goto	u2185
  9342  002514  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9343  002516  1014               	iorwf	(??_setMotorPWM+4)^0,w,c
  9344  002518  6EDF               	movwf	indf2,c
  9345                           
  9346                           ;dc_motor.c: 54:  }
  9347  00251A  EFC3  F012         	goto	l216
  9348  00251E                     l2745:
  9349                           
  9350                           ;dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  9351  00251E  EE20 F004          	lfsr	2,4
  9352  002522  500E               	movf	setMotorPWM@m^0,w,c
  9353  002524  26D9               	addwf	fsr2l,f,c
  9354  002526  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9355  002528  22DA               	addwfc	fsr2h,f,c
  9356  00252A  CFDE F010          	movff	postinc2,??_setMotorPWM
  9357  00252E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9358  002532  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9359  002536  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9360  00253A  EE10 F004          	lfsr	1,4
  9361  00253E  500E               	movf	setMotorPWM@m^0,w,c
  9362  002540  26E1               	addwf	fsr1l,f,c
  9363  002542  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9364  002544  22E2               	addwfc	fsr1h,f,c
  9365  002546  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9366  00254A  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9367  00254E  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9368  002552  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9369  002556  50E7               	movf	indf1,w,c
  9370  002558  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9371  00255A  EE10 F006          	lfsr	1,6
  9372  00255E  500E               	movf	setMotorPWM@m^0,w,c
  9373  002560  26E1               	addwf	fsr1l,f,c
  9374  002562  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9375  002564  22E2               	addwfc	fsr1h,f,c
  9376  002566  50E7               	movf	indf1,w,c
  9377  002568  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9378  00256A  0E01               	movlw	1
  9379  00256C  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9380  00256E  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9381  002570  EFBC  F012         	goto	u2194
  9382  002574                     u2195:
  9383  002574  90D8               	bcf	status,0,c
  9384  002576  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9385  002578                     u2194:
  9386  002578  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9387  00257A  EFBA  F012         	goto	u2195
  9388  00257E  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9389  002580  0AFF               	xorlw	255
  9390  002582  1414               	andwf	(??_setMotorPWM+4)^0,w,c
  9391  002584  6EDF               	movwf	indf2,c
  9392  002586                     l216:
  9393  002586  0012               	return		;funcret
  9394  002588                     __end_of_setMotorPWM:
  9395                           	callstack 0
  9396                           
  9397 ;; *************** function ___wmul *****************
  9398 ;; Defined at:
  9399 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  multiplier      2    0[COMRAM] unsigned int 
  9402 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;  product         2    4[COMRAM] unsigned int 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  2    0[COMRAM] unsigned int 
  9407 ;; Registers used:
  9408 ;;		wreg, status,2, status,0, prodl, prodh
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;Total ram usage:        6 bytes
  9419 ;; Hardware stack levels used: 1
  9420 ;; Hardware stack levels required when called: 1
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		_setMotorPWM
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text40
  9429  00370C                     __ptext40:
  9430                           	callstack 0
  9431  00370C                     ___wmul:
  9432                           	callstack 26
  9433  00370C  5001               	movf	___wmul@multiplier^0,w,c
  9434  00370E  0203               	mulwf	___wmul@multiplicand^0,c
  9435  003710  CFF3 F005          	movff	prodl,___wmul@product
  9436  003714  CFF4 F006          	movff	prodh,___wmul@product+1
  9437  003718  5001               	movf	___wmul@multiplier^0,w,c
  9438  00371A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9439  00371C  50F3               	movf	243,w,c
  9440  00371E  2606               	addwf	(___wmul@product+1)^0,f,c
  9441  003720  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9442  003722  0203               	mulwf	___wmul@multiplicand^0,c
  9443  003724  50F3               	movf	243,w,c
  9444  003726  2606               	addwf	(___wmul@product+1)^0,f,c
  9445  003728  C005  F001         	movff	___wmul@product,?___wmul
  9446  00372C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9447  003730  0012               	return		;funcret
  9448  003732                     __end_of___wmul:
  9449                           	callstack 0
  9450                           
  9451 ;; *************** function ___lwdiv *****************
  9452 ;; Defined at:
  9453 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  dividend        2    6[COMRAM] unsigned int 
  9456 ;;  divisor         2    8[COMRAM] unsigned int 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  quotient        2   10[COMRAM] unsigned int 
  9459 ;;  counter         1   12[COMRAM] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  2    6[COMRAM] unsigned int 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;Total ram usage:        7 bytes
  9474 ;; Hardware stack levels used: 1
  9475 ;; Hardware stack levels required when called: 1
  9476 ;; This function calls:
  9477 ;;		Nothing
  9478 ;; This function is called by:
  9479 ;;		_setMotorPWM
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text41
  9484  003266                     __ptext41:
  9485                           	callstack 0
  9486  003266                     ___lwdiv:
  9487                           	callstack 26
  9488  003266  0E00               	movlw	0
  9489  003268  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9490  00326A  0E00               	movlw	0
  9491  00326C  6E0B               	movwf	___lwdiv@quotient^0,c
  9492  00326E  5009               	movf	___lwdiv@divisor^0,w,c
  9493  003270  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9494  003272  B4D8               	btfsc	status,2,c
  9495  003274  EF3E  F019         	goto	u2131
  9496  003278  EF40  F019         	goto	u2130
  9497  00327C                     u2131:
  9498  00327C  EF68  F019         	goto	l1027
  9499  003280                     u2130:
  9500  003280  0E01               	movlw	1
  9501  003282  6E0D               	movwf	___lwdiv@counter^0,c
  9502  003284  EF48  F019         	goto	l2719
  9503  003288                     l2717:
  9504  003288  90D8               	bcf	status,0,c
  9505  00328A  3609               	rlcf	___lwdiv@divisor^0,f,c
  9506  00328C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9507  00328E  2A0D               	incf	___lwdiv@counter^0,f,c
  9508  003290                     l2719:
  9509  003290  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9510  003292  EF4D  F019         	goto	u2141
  9511  003296  EF4F  F019         	goto	u2140
  9512  00329A                     u2141:
  9513  00329A  EF44  F019         	goto	l2717
  9514  00329E                     u2140:
  9515  00329E                     l2721:
  9516  00329E  90D8               	bcf	status,0,c
  9517  0032A0  360B               	rlcf	___lwdiv@quotient^0,f,c
  9518  0032A2  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9519  0032A4  5009               	movf	___lwdiv@divisor^0,w,c
  9520  0032A6  5C07               	subwf	___lwdiv@dividend^0,w,c
  9521  0032A8  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9522  0032AA  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9523  0032AC  A0D8               	btfss	status,0,c
  9524  0032AE  EF5B  F019         	goto	u2151
  9525  0032B2  EF5D  F019         	goto	u2150
  9526  0032B6                     u2151:
  9527  0032B6  EF62  F019         	goto	l2729
  9528  0032BA                     u2150:
  9529  0032BA  5009               	movf	___lwdiv@divisor^0,w,c
  9530  0032BC  5E07               	subwf	___lwdiv@dividend^0,f,c
  9531  0032BE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9532  0032C0  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9533  0032C2  800B               	bsf	___lwdiv@quotient^0,0,c
  9534  0032C4                     l2729:
  9535  0032C4  90D8               	bcf	status,0,c
  9536  0032C6  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9537  0032C8  3209               	rrcf	___lwdiv@divisor^0,f,c
  9538  0032CA  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9539  0032CC  EF4F  F019         	goto	l2721
  9540  0032D0                     l1027:
  9541  0032D0  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9542  0032D4  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9543  0032D8  0012               	return		;funcret
  9544  0032DA                     __end_of___lwdiv:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function _Timer0_init *****************
  9548 ;; Defined at:
  9549 ;;		line 8 in file "timers.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 1
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_main
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text42
  9578  003794                     __ptext42:
  9579                           	callstack 0
  9580  003794                     _Timer0_init:
  9581                           	callstack 29
  9582  003794                     
  9583                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  9584  003794  50D6               	movf	214,w,c	;volatile
  9585  003796  0B1F               	andlw	-225
  9586  003798  0940               	iorlw	64
  9587  00379A  6ED6               	movwf	214,c	;volatile
  9588  00379C                     
  9589                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  9590  00379C  88D6               	bsf	214,4,c	;volatile
  9591                           
  9592                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1111;
  9593  00379E  0E0F               	movlw	15
  9594  0037A0  12D6               	iorwf	214,f,c	;volatile
  9595  0037A2                     
  9596                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  9597  0037A2  88D5               	bsf	213,4,c	;volatile
  9598                           
  9599                           ;timers.c: 16:     TMR0H=0;
  9600  0037A4  0E00               	movlw	0
  9601  0037A6  6ED4               	movwf	212,c	;volatile
  9602                           
  9603                           ;timers.c: 17:     TMR0L=0;
  9604  0037A8  0E00               	movlw	0
  9605  0037AA  6ED3               	movwf	211,c	;volatile
  9606  0037AC                     
  9607                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  9608  0037AC  8ED5               	bsf	213,7,c	;volatile
  9609  0037AE  0012               	return		;funcret
  9610  0037B0                     __end_of_Timer0_init:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _Interrupts_init *****************
  9614 ;; Defined at:
  9615 ;;		line 11 in file "interrupts.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;		None
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		None
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:        0 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 1
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_main
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text43
  9644  0037BC                     __ptext43:
  9645                           	callstack 0
  9646  0037BC                     _Interrupts_init:
  9647                           	callstack 29
  9648  0037BC                     
  9649                           ;interrupts.c: 15:     PIE2bits.C1IE = 1;
  9650  0037BC  010E               	movlb	14	; () banked
  9651  0037BE  812B               	bsf	43,0,b	;volatile
  9652                           
  9653                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  9654  0037C0  8B29               	bsf	41,5,b	;volatile
  9655                           
  9656                           ;interrupts.c: 17:     INTCONbits.GIEL = 1;
  9657  0037C2  8CF2               	bsf	242,6,c	;volatile
  9658                           
  9659                           ;interrupts.c: 18:     INTCONbits.GIE = 1;
  9660  0037C4  8EF2               	bsf	242,7,c	;volatile
  9661  0037C6                     
  9662                           ; BSR set to: 14
  9663  0037C6  0012               	return		;funcret
  9664  0037C8                     __end_of_Interrupts_init:
  9665                           	callstack 0
  9666                           
  9667 ;; *************** function _HighISR *****************
  9668 ;; Defined at:
  9669 ;;		line 26 in file "interrupts.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;		None
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		Interrupt level 2
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	intcode
  9697  000008                     __pintcode:
  9698                           	callstack 0
  9699  000008                     _HighISR:
  9700                           	callstack 24
  9701                           
  9702                           ; BSR set to: 14
  9703                           ;incstack = 0
  9704  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9705  00000A                     
  9706                           ;interrupts.c: 29:     if(PIR0bits.TMR0IF){
  9707  00000A  010E               	movlb	14	; () banked
  9708  00000C  AB33               	btfss	51,5,b	;volatile
  9709  00000E  EF0B  F000         	goto	i2u212_41
  9710  000012  EF0D  F000         	goto	i2u212_40
  9711  000016                     i2u212_41:
  9712  000016  EF12  F000         	goto	i2l519
  9713  00001A                     i2u212_40:
  9714  00001A                     
  9715                           ; BSR set to: 14
  9716                           ;interrupts.c: 31:         TMR0H = 0;
  9717  00001A  0E00               	movlw	0
  9718  00001C  6ED4               	movwf	212,c	;volatile
  9719                           
  9720                           ;interrupts.c: 32:         TMR0L = 0;
  9721  00001E  0E00               	movlw	0
  9722  000020  6ED3               	movwf	211,c	;volatile
  9723  000022                     
  9724                           ; BSR set to: 14
  9725                           ;interrupts.c: 34:         PIR0bits.TMR0IF = 0;
  9726  000022  9B33               	bcf	51,5,b	;volatile
  9727  000024                     i2l519:
  9728                           
  9729                           ; BSR set to: 14
  9730  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9731  000026  0011               	retfie		f
  9732  000028                     __end_of_HighISR:
  9733                           	callstack 0
  9734  0000                     
  9735                           	psect	rparam
  9736  0000                     
  9737                           	psect	temp
  9738  00005F                     btemp:
  9739                           	callstack 0
  9740  00005F                     	ds	1
  9741  0000                     int$flags	set	btemp
  9742  0000                     wtemp8	set	btemp+1
  9743  0000                     ttemp5	set	btemp+1
  9744  0000                     ttemp6	set	btemp+4
  9745  0000                     ttemp7	set	btemp+8
  9746                           
  9747                           	psect	idloc
  9748                           
  9749                           ;Config register IDLOC0 @ 0x200000
  9750                           ;	unspecified, using default values
  9751  200000                     	org	2097152
  9752  200000  0FFF               	dw	4095
  9753                           
  9754                           ;Config register IDLOC1 @ 0x200002
  9755                           ;	unspecified, using default values
  9756  200002                     	org	2097154
  9757  200002  0FFF               	dw	4095
  9758                           
  9759                           ;Config register IDLOC2 @ 0x200004
  9760                           ;	unspecified, using default values
  9761  200004                     	org	2097156
  9762  200004  0FFF               	dw	4095
  9763                           
  9764                           ;Config register IDLOC3 @ 0x200006
  9765                           ;	unspecified, using default values
  9766  200006                     	org	2097158
  9767  200006  0FFF               	dw	4095
  9768                           
  9769                           ;Config register IDLOC4 @ 0x200008
  9770                           ;	unspecified, using default values
  9771  200008                     	org	2097160
  9772  200008  0FFF               	dw	4095
  9773                           
  9774                           ;Config register IDLOC5 @ 0x20000A
  9775                           ;	unspecified, using default values
  9776  20000A                     	org	2097162
  9777  20000A  0FFF               	dw	4095
  9778                           
  9779                           ;Config register IDLOC6 @ 0x20000C
  9780                           ;	unspecified, using default values
  9781  20000C                     	org	2097164
  9782  20000C  0FFF               	dw	4095
  9783                           
  9784                           ;Config register IDLOC7 @ 0x20000E
  9785                           ;	unspecified, using default values
  9786  20000E                     	org	2097166
  9787  20000E  0FFF               	dw	4095
  9788                           
  9789                           	psect	config
  9790                           
  9791                           ;Config register CONFIG1L @ 0x300000
  9792                           ;	External Oscillator mode Selection bits
  9793                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9794                           ;	Power-up default value for COSC bits
  9795                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9796  300000                     	org	3145728
  9797  300000  AA                 	db	170
  9798                           
  9799                           ;Config register CONFIG1H @ 0x300001
  9800                           ;	unspecified, using default values
  9801                           ;	Clock Out Enable bit
  9802                           ;	CLKOUTEN = 0x1, unprogrammed default
  9803                           ;	Clock Switch Enable bit
  9804                           ;	CSWEN = 0x1, unprogrammed default
  9805                           ;	Fail-Safe Clock Monitor Enable bit
  9806                           ;	FCMEN = 0x1, unprogrammed default
  9807  300001                     	org	3145729
  9808  300001  FF                 	db	255
  9809                           
  9810                           ;Config register CONFIG2L @ 0x300002
  9811                           ;	unspecified, using default values
  9812                           ;	Master Clear Enable bit
  9813                           ;	MCLRE = 0x1, unprogrammed default
  9814                           ;	Power-up Timer Enable bit
  9815                           ;	PWRTE = 0x1, unprogrammed default
  9816                           ;	Low-power BOR enable bit
  9817                           ;	LPBOREN = 0x1, unprogrammed default
  9818                           ;	Brown-out Reset Enable bits
  9819                           ;	BOREN = 0x3, unprogrammed default
  9820  300002                     	org	3145730
  9821  300002  FF                 	db	255
  9822                           
  9823                           ;Config register CONFIG2H @ 0x300003
  9824                           ;	unspecified, using default values
  9825                           ;	Brown Out Reset Voltage selection bits
  9826                           ;	BORV = 0x3, unprogrammed default
  9827                           ;	ZCD Disable bit
  9828                           ;	ZCD = 0x1, unprogrammed default
  9829                           ;	PPSLOCK bit One-Way Set Enable bit
  9830                           ;	PPS1WAY = 0x1, unprogrammed default
  9831                           ;	Stack Full/Underflow Reset Enable bit
  9832                           ;	STVREN = 0x1, unprogrammed default
  9833                           ;	Debugger Enable bit
  9834                           ;	DEBUG = 0x1, unprogrammed default
  9835                           ;	Extended Instruction Set Enable bit
  9836                           ;	XINST = 0x1, unprogrammed default
  9837  300003                     	org	3145731
  9838  300003  FF                 	db	255
  9839                           
  9840                           ;Config register CONFIG3L @ 0x300004
  9841                           ;	WDT Period Select bits
  9842                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9843                           ;	WDT operating mode
  9844                           ;	WDTE = OFF, WDT Disabled
  9845  300004                     	org	3145732
  9846  300004  9F                 	db	159
  9847                           
  9848                           ;Config register CONFIG3H @ 0x300005
  9849                           ;	unspecified, using default values
  9850                           ;	WDT Window Select bits
  9851                           ;	WDTCWS = 0x7, unprogrammed default
  9852                           ;	WDT input clock selector
  9853                           ;	WDTCCS = 0x7, unprogrammed default
  9854  300005                     	org	3145733
  9855  300005  FF                 	db	255
  9856                           
  9857                           ;Config register CONFIG4L @ 0x300006
  9858                           ;	unspecified, using default values
  9859                           ;	Write Protection Block 0
  9860                           ;	WRT0 = 0x1, unprogrammed default
  9861                           ;	Write Protection Block 1
  9862                           ;	WRT1 = 0x1, unprogrammed default
  9863                           ;	Write Protection Block 2
  9864                           ;	WRT2 = 0x1, unprogrammed default
  9865                           ;	Write Protection Block 3
  9866                           ;	WRT3 = 0x1, unprogrammed default
  9867                           ;	Write Protection Block 3
  9868                           ;	WRT4 = 0x1, unprogrammed default
  9869                           ;	Write Protection Block 3
  9870                           ;	WRT5 = 0x1, unprogrammed default
  9871                           ;	Write Protection Block 3
  9872                           ;	WRT6 = 0x1, unprogrammed default
  9873                           ;	Write Protection Block 3
  9874                           ;	WRT7 = 0x1, unprogrammed default
  9875  300006                     	org	3145734
  9876  300006  FF                 	db	255
  9877                           
  9878                           ;Config register CONFIG4H @ 0x300007
  9879                           ;	unspecified, using default values
  9880                           ;	Configuration Register Write Protection bit
  9881                           ;	WRTC = 0x1, unprogrammed default
  9882                           ;	Boot Block Write Protection bit
  9883                           ;	WRTB = 0x1, unprogrammed default
  9884                           ;	Data EEPROM Write Protection bit
  9885                           ;	WRTD = 0x1, unprogrammed default
  9886                           ;	Scanner Enable bit
  9887                           ;	SCANE = 0x1, unprogrammed default
  9888                           ;	Low Voltage Programming Enable bit
  9889                           ;	LVP = 0x1, unprogrammed default
  9890  300007                     	org	3145735
  9891  300007  FF                 	db	255
  9892                           
  9893                           ;Config register CONFIG5L @ 0x300008
  9894                           ;	unspecified, using default values
  9895                           ;	UserNVM Program Memory Code Protection bit
  9896                           ;	CP = 0x1, unprogrammed default
  9897                           ;	DataNVM Memory Code Protection bit
  9898                           ;	CPD = 0x1, unprogrammed default
  9899  300008                     	org	3145736
  9900  300008  FF                 	db	255
  9901                           
  9902                           ;Config register CONFIG5H @ 0x300009
  9903                           ;	unspecified, using default values
  9904  300009                     	org	3145737
  9905  300009  FF                 	db	255
  9906                           
  9907                           ;Config register CONFIG6L @ 0x30000A
  9908                           ;	unspecified, using default values
  9909                           ;	Table Read Protection Block 0
  9910                           ;	EBTR0 = 0x1, unprogrammed default
  9911                           ;	Table Read Protection Block 1
  9912                           ;	EBTR1 = 0x1, unprogrammed default
  9913                           ;	Table Read Protection Block 2
  9914                           ;	EBTR2 = 0x1, unprogrammed default
  9915                           ;	Table Read Protection Block 3
  9916                           ;	EBTR3 = 0x1, unprogrammed default
  9917                           ;	Table Read Protection Block 4
  9918                           ;	EBTR4 = 0x1, unprogrammed default
  9919                           ;	Table Read Protection Block 5
  9920                           ;	EBTR5 = 0x1, unprogrammed default
  9921                           ;	Table Read Protection Block 6
  9922                           ;	EBTR6 = 0x1, unprogrammed default
  9923                           ;	Table Read Protection Block 7
  9924                           ;	EBTR7 = 0x1, unprogrammed default
  9925  30000A                     	org	3145738
  9926  30000A  FF                 	db	255
  9927                           
  9928                           ;Config register CONFIG6H @ 0x30000B
  9929                           ;	unspecified, using default values
  9930                           ;	Boot Block Table Read Protection bit
  9931                           ;	EBTRB = 0x1, unprogrammed default
  9932  30000B                     	org	3145739
  9933  30000B  FF                 	db	255
  9934                           tosu	equ	0xFFF
  9935                           tosh	equ	0xFFE
  9936                           tosl	equ	0xFFD
  9937                           stkptr	equ	0xFFC
  9938                           pclatu	equ	0xFFB
  9939                           pclath	equ	0xFFA
  9940                           pcl	equ	0xFF9
  9941                           tblptru	equ	0xFF8
  9942                           tblptrh	equ	0xFF7
  9943                           tblptrl	equ	0xFF6
  9944                           tablat	equ	0xFF5
  9945                           prodh	equ	0xFF4
  9946                           prodl	equ	0xFF3
  9947                           indf0	equ	0xFEF
  9948                           postinc0	equ	0xFEE
  9949                           postdec0	equ	0xFED
  9950                           preinc0	equ	0xFEC
  9951                           plusw0	equ	0xFEB
  9952                           fsr0h	equ	0xFEA
  9953                           fsr0l	equ	0xFE9
  9954                           wreg	equ	0xFE8
  9955                           indf1	equ	0xFE7
  9956                           postinc1	equ	0xFE6
  9957                           postdec1	equ	0xFE5
  9958                           preinc1	equ	0xFE4
  9959                           plusw1	equ	0xFE3
  9960                           fsr1h	equ	0xFE2
  9961                           fsr1l	equ	0xFE1
  9962                           bsr	equ	0xFE0
  9963                           indf2	equ	0xFDF
  9964                           postinc2	equ	0xFDE
  9965                           postdec2	equ	0xFDD
  9966                           preinc2	equ	0xFDC
  9967                           plusw2	equ	0xFDB
  9968                           fsr2h	equ	0xFDA
  9969                           fsr2l	equ	0xFD9
  9970                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     88     154
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseTurnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S73DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S73DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    updateMovementCount@movementArray	PTR unsigned int  size(2) Largest target is 20
		 -> movementArray(BANK0[20]), 

    updateMovementCount@timerArray	PTR unsigned int  size(2) Largest target is 20
		 -> timerArray(BANK0[20]), 

    White@timerArray	PTR unsigned int  size(2) Largest target is 20
		 -> timerArray(BANK0[20]), 

    White@movementArray	PTR unsigned int  size(2) Largest target is 20
		 -> movementArray(BANK0[20]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@test(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_determine_color_new
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _White->_reverseTurnLeft90
    _White->_reverseTurnRight90
    _turnRight180->_reverse
    _turnRight180->_stop
    _turnRight135->_reverse
    _turnRight135->_stop
    _turnLeft135->_reverse
    _turnLeft135->_stop
    _reverseTurnRight90->_turnRight90
    _turnRight90->_reverse
    _turnRight90->_stop
    _reverseTurnLeft90->_turnLeft90
    _turnLeft90->_reverse
    _turnLeft90->_stop
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_determine_color_new

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0  250783
                                             92 COMRAM     2     2      0
                                             34 BANK0     54    54      0
                    _Interrupts_init
                        _Timer0_init
                              _White
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                  _reverseTurnLeft90
                 _reverseTurnRight90
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
                _updateMovementCount
 ---------------------------------------------------------------------------------
 (1) _updateMovementCount                                 12     4      8     438
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   15966
                                             90 COMRAM     2     0      2
                                              0 BANK0     34    34      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             12 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1219
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     425
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2432
                                             64 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _White                                               20    10     10  119210
                                             42 COMRAM    20    10     10
                            _forward
                  _reverseTurnLeft90
                 _reverseTurnRight90
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight180                                         8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight135                                         8     4      4   12765
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft135                                          8     4      4   12765
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnRight90                                   6     2      4   22135
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight90                                          8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverseTurnLeft90                                    6     2      4   22135
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _turnLeft90                                           8     4      4   12917
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    6085
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              4     0      4    3457
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              4     0      4    3001
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2565
                                             13 COMRAM    11     9      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _White
     _forward
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _reverseTurnLeft90
       _setMotorPWM
       _stop
         _setMotorPWM
       _turnLeft90
         _reverse
           _setMotorPWM
         _setMotorPWM
         _stop
     _reverseTurnRight90
       _setMotorPWM
       _stop
       _turnRight90
         _reverse
         _setMotorPWM
         _stop
     _stop
     _turnLeft135
       _reverse
       _setMotorPWM
       _stop
     _turnLeft90
     _turnRight135
       _reverse
       _setMotorPWM
       _stop
     _turnRight180
       _reverse
       _setMotorPWM
       _stop
     _turnRight90
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _isbtw
       ___flge
   _forward
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _reverseTurnLeft90
   _reverseTurnRight90
   _turnLeft135
   _turnLeft90
   _turnRight135
   _turnRight180
   _turnRight90
   _updateMovementCount

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134       8        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 18:10:40 2021

                  _color_read_Red 3482                      ___fldiv@aexp 0027  
                    ___fldiv@bexp 0026                      ___fldiv@sign 001F  
                 _color_read_Blue 3522                                l53 36B8  
                              l62 34D0                                l71 333A  
                              l56 3792                                l65 3520  
                              l82 3600                                l75 3264  
                              l59 3480                                l68 3570  
                              l79 35BA                                l97 0D8C  
             ___wmul@multiplicand 0003                  _color_read_Clear 3432  
                _color_read_Green 34D2                 ??_Interrupts_init 0001  
                             l111 1F6A                               l121 2018  
                             l124 338C                               l118 1F92  
                             l151 36E2                               l216 2586  
                             l160 37DA                               l209 3642  
                             l226 31EA                               l234 287A  
                             l154 36E4                               l163 37E4  
                             l244 2AF6                               l260 3064  
                             l172 3684                               l229 33DE  
                             l157 370A                               l254 29B8  
                             l166 37D0                               l263 3150  
                             l239 2D6E                               l513 37C6  
                             l257 3430                               l249 2C32  
                             l169 37BA                               l530 37AE  
                             l442 3772                               l370 0E92  
                             l363 0E40                               l372 0EC6  
                             l364 0E42                               l374 0ED4  
                             l366 0E50                               l536 3730  
                             l368 0E84                               l801 2F32  
                             l385 10CE                               l397 1328  
                             l806 2F78                               l833 2E74  
                             wreg 000FE8                      ___flmul@aexp 0039  
                    ___flmul@bexp 003A                      ___flmul@sign 0034  
                    ___flmul@temp 003F                      ___flmul@prod 003B  
                    ___fltol@exp1 005A                              l1120 2212  
                            l1034 32D8                              l1027 32D0  
                            l1131 22D0                              l1123 21D6  
                            l1132 22BE                              l1205 26D2  
                            l1118 23B2                              l1150 18EC  
                            l1064 1556                              l1160 1B48  
                            l3001 307A                              l1081 1670  
                            l1073 1826                              l1065 1544  
                            l1129 2258                              l1090 1740  
                            l1066 150A                              l1154 1C50  
                            l3011 30CA                              l3003 3092  
                            l1091 172E                              l3013 30D6  
                            l3005 30A2                              l3021 2F7A  
                            l3101 2BA2                              l1157 1AE2  
                            l3015 30E2                              l3007 30B2  
                            l3031 2FD2                              l3023 2F8E  
                            l3111 2BDA                              l3103 2BB6  
                            l1167 1C12                              l1159 1B5A  
                            l1191 25DE                              l3121 3400  
                            l3017 310E                              l3009 30BE  
                            l3041 3038                              l3033 2FDE  
                            l3025 2FA6                              l3113 2BF0  
                            l3105 2BC2                              l3201 149C  
                            l4001 0E2A                              l1194 273A  
                            l3123 340C                              l3019 3124  
                            l3035 2FEA                              l3027 2FB6  
                            l3051 2CA0                              l3043 2C34  
                            l3115 2C06                              l3107 2BCE  
                            l3211 14D6                              l3203 14A0  
                            l3131 1374                              l4011 0E5E  
                            l4003 0E2C                              l3125 3418  
                            l3037 2FF6                              l3029 2FC6  
                            l3053 2CB6                              l3045 2C48  
                            l3117 2C1A                              l3109 2BD6  
                            l3301 175C                              l3221 1528  
                            l3213 14F2                              l3205 14A4  
                            l3141 13B4                              l3133 1382  
                            l4101 11D8                              l4021 0EA2  
                            l4013 0E60                              l4005 0E2E  
                            l1198 2676                              l3127 3424  
                            l3119 33E0                              l3039 3022  
                            l3071 2D12                              l3063 2CDE  
                            l3055 2CC6                              l3047 2C60  
                            l3311 17C6                              l3303 176A  
                            l3231 1574                              l3223 1536  
                            l3215 1502                              l3207 14A8  
                            l3151 13E6                              l3143 13B6  
                            l3135 1384                              l4111 1248  
                            l4103 11F0                              l4023 0EAE  
                            l4015 0E6C                              l4031 0EF6  
                            l4007 0E30                              l3073 2D16  
                            l3065 2CF2                              l3057 2CD6  
                            l3049 2C8C                              l3081 2AF8  
                            l3321 1800                              l3313 17E6  
                            l3305 17A4                              l3241 15B4  
                            l3225 1538                              l3217 1518  
                            l3209 14AC                              l3161 140E  
                            l3153 13E8                              l3137 1394  
                            l3145 13BE                              l3129 1368  
                            l3401 21B2                              l4121 12B6  
                            l4113 125C                              l4105 1206  
                            l4041 0F6E                              l4033 0F0A  
                            l4025 0EC4                              l4017 0E82  
                            l4009 0E32                              l3075 2D2C  
                            l3067 2CFE                              l3091 2B7A  
                            l3083 2B0C                              l3323 1806  
                            l3315 17EA                              l3307 17A6  
                            l3251 15DE                              l3243 15C0  
                            l3235 1588                              l3227 1542  
                            l3219 1524                              l3171 1448  
                            l3163 141E                              l3155 13EE  
                            l3147 13CE                              l3139 13A4  
                            l3411 2200                              l3403 21C6  
                            l3331 201A                              l4131 1326  
                            l4123 12CC                              l4115 1274  
                            l4107 121A                              l4051 0FD6  
                            l4043 0F82                              l4035 0F3A  
                            l4027 0EE2                              l4019 0EA0  
                            l3077 2D42                              l3069 2D0A  
                            l3093 2B8A                              l3085 2B24  
                            l3325 1814                              l3317 17F8  
                            l3309 17B6                              l3261 1650  
                            l3245 15C4                              l3237 1598  
                            l3229 1564                              l3253 15E4  
                            l3181 1474                              l3173 145A  
                            l3165 142E                              l3157 13FC  
                            l3149 13D4                              l3421 2248  
                            l3413 2210                              l3405 21D4  
                            l3341 2056                              l3333 2026  
                            l3501 18DC                              l4133 1336  
                            l4125 12E0                              l4117 128A  
                            l4109 1232                              l4061 102C  
                            l4053 0FEA                              l4045 0F96  
                            l4037 0F46                              l4029 0EE4  
                            l2711 3266                              l3079 2D56  
                            l3095 2B9A                              l3087 2B50  
                            l3327 1816                              l3319 17FE  
                            l3271 16AA                              l3255 160A  
                            l3263 1660                              l3247 15D2  
                            l3239 15A6                              l3191 1488  
                            l3183 1478                              l3175 1468  
                            l3167 1430                              l3159 13FE  
                            l3431 2288                              l3423 2256  
                            l3415 2222                              l3407 21E0  
                            l3351 2086                              l3343 2066  
                            l3335 2034                              l3511 192C  
                            l3503 18FC                              l4135 134C  
                            l4127 130C                              l4119 129E  
                            l4071 108C                              l4063 1044  
                            l4055 0FF8                              l4047 0FAC  
                            l4039 0F5A                              l2721 329E  
                            l2713 326E                              l2705 370C  
                            l3089 2B64                              l2801 3652  
                            l3281 16DA                              l3273 16B4  
                            l3265 1686                              l3257 163E  
                            l3249 15D4                              l3193 148C  
                            l3185 147C                              l3177 146C  
                            l3169 1438                              l3441 22FA  
                            l3433 22B6                              l3417 2238  
                            l3425 2268                              l3409 21FE  
                            l3361 20BC                              l3353 208C  
                            l3345 2068                              l3337 2036  
                            l3521 197C                              l3513 1936  
                            l3505 190C                              l3601 2D86  
                            l4129 1324                              l4081 1100  
                            l4073 1098                              l4065 104C  
                            l4057 0FFC                              l4049 0FC0  
                            l2731 32CA                              l2723 32A4  
                            l2715 3280                              l2707 3728  
                            l2811 273C                              l2803 365A  
                            l3291 1702                              l3283 16DE  
                            l3275 16C2                              l3267 1696  
                            l3259 1640                              l3195 1490  
                            l3187 1480                              l3179 1470  
                            l3451 2372                              l3443 2324  
                            l3427 2276                              l3419 223E  
                            l3371 20FC                              l3363 20CC  
                            l3355 209A                              l3339 2046  
                            l3347 2070                              l3531 19BE  
                            l3523 1988                              l3515 194C  
                            l3611 2DD6                              l4091 116C  
                            l4083 1114                              l4075 10AC  
                            l4067 1062                              l4059 1014  
                            l2725 32BA                              l2717 3288  
                            l2741 2498                              l2733 23B4  
                            l2821 27BE                              l2813 2750  
                            l2805 3680                              l3701 3572  
                            l3293 1710                              l3285 16EE  
                            l3277 16C4                              l3197 1494  
                            l3189 1484                              l3461 23A8  
                            l3453 238E                              l3437 22E0  
                            l3445 2328                              l3429 227A  
                            l3373 210C                              l3381 212C  
                            l3365 20CE                              l3357 209C  
                            l3349 2080                              l3541 1A20  
                            l3533 19CE                              l3525 1996  
                            l3517 1958                              l3509 1920  
                            l3621 2E00                              l3613 2DDA  
                            l3605 2D9A                              l2901 2F20  
                            l4093 1182                              l4085 112C  
                            l4077 10BE                              l4069 1086  
                            l2727 32C2                              l2719 3290  
                            l2743 24B4                              l2735 23D0  
                            l2751 316E                              l2831 27E6  
                            l2823 27CE                              l2815 2768  
                            l2807 3682                              l3703 35BC  
                            l2911 36C4                              l3295 1726  
                            l3279 16D2                              l3287 16F0  
                            l3199 1498                              l3455 2392  
                            l3447 2342                              l3439 22EC  
                            l3391 216A                              l3383 213C  
                            l3375 2114                              l3359 20AC  
                            l3367 20D6                              l3551 1AC8  
                            l3543 1A3C                              l3535 19E8  
                            l3527 19A2                              l3519 1970  
                            l3471 1834                              l3631 2E28  
                            l3623 2E0A                              l3615 2DE8  
                            l3607 2DC4                              l2903 2F70  
                            l3711 0188                              l4095 1196  
                            l4087 1140                              l4079 10EE  
                            l2729 32C4                              l2745 251E  
                            l2737 2432                              l2761 31B2  
                            l2753 3178                              l2841 281E  
                            l2833 27FA                              l2825 27DE  
                            l2817 2794                              l2913 36CA  
                            l2921 3776                              l3289 16FE  
                            l3457 23A0                              l3449 2358  
                            l3393 217A                              l3385 213C  
                            l3377 2118                              l3369 20E6  
                            l3561 1B04                              l3553 1AD2  
                            l3545 1A66                              l3537 19F8  
                            l3529 19B2                              l3481 1874  
                            l3473 1842                              l3633 2E34  
                            l3625 2E14                              l3609 2DC6  
                            l2905 2F76                              l3801 0C26  
                            l3721 04F4                              l3713 026C  
                            l3705 002C                              l4097 11AE  
                            l4089 1154                              l2739 2478  
                            l2771 338E                              l2755 3190  
                            l2763 31BA                              l2747 3152  
                            l2843 2834                              l2835 2806  
                            l2819 27A8                              l2851 29CE  
                            l2931 34C8                              l2915 36CC  
                            l3299 1750                              l3459 23A6  
                            l3395 218A                              l3571 1B76  
                            l3563 1B12                              l3555 1AE0  
                            l3547 1A9C                              l3539 1A14  
                            l3491 18A4                              l3483 187A  
                            l3475 1844                              l3635 2E44  
                            l3651 2604                              l3643 258A  
                            l3811 0D18                              l3803 0C3E  
                            l3731 058A                              l3723 054C  
                            l3715 0358                              l3707 0036  
                            l2923 3432                              l4099 11C4  
                            l2773 33AE                              l2765 31D2  
                            l2757 319A                              l2749 3156  
                            l2845 284E                              l2837 2812  
                            l2861 2A4C                              l2853 29E6  
                            l2781 37D2                              l2941 3522  
                            l2917 36CE                              l2909 36BA  
                            l3397 219A                              l3389 2150  
                            l3581 1BE0                              l3573 1B84  
                            l3565 1B40                              l3557 1AF2  
                            l3549 1AAA                              l3493 18A6  
                            l3485 188A                              l3477 1854  
                            l3469 1828                              l3637 2E54  
                            l3661 265E                              l3645 259A  
                            l3821 0D7C                              l3813 0D30  
                            l3805 0C46                              l3741 067A  
                            l3733 0598                              l3725 055C  
                            l3717 0444                              l3709 00FE  
                            l3901 3754                              l2925 3478  
                            l2775 33BA                              l2759 31A6  
                            l2847 2862                              l2839 281A  
                            l2871 2A78                              l2863 2A5C  
                            l2855 2A12                              l3831 1C92  
                            l2767 36E4                              l2783 37D6  
                            l2791 37CC                              l2943 3568  
                            l2935 34D2                              l2919 36D0  
                            l3399 21A2                              l3591 1C36  
                            l3583 1BFA                              l3575 1BAE  
                            l3559 1B00                              l3495 18B6  
                            l3487 1890                              l3479 1864  
                            l3639 2E64                              l3671 26C2  
                            l3663 2660                              l3655 2618  
                            l3647 25A8                              l2951 3250  
                            l3823 0D84                              l3807 0C8C  
                            l3815 0D38                              l3751 076C  
                            l3743 0692                              l3735 05A8  
                            l3727 056C                              l3719 049C  
                            l3911 376E                              l3903 375E  
                            l3921 37AC                              l2777 33C6  
                            l2881 2AB2                              l2873 2A84  
                            l2857 2A26                              l2849 29BA  
                            l2961 287C                              l3841 1D4E  
                            l3833 1C9E                              l2769 36F4  
                            l2793 37DC                              l2785 37B2  
                            l2937 3518                              l2929 3482  
                            l3585 1C16                              l3593 1C3C  
                            l3569 1B6A                              l3577 1BB2  
                            l3497 18C6                              l3489 1896  
                            l3681 271A                              l3673 26E0  
                            l3665 266C                              l3657 2620  
                            l3649 25EE                              l3817 0D50  
                            l3809 0CD2                              l3761 085E  
                            l3753 0784                              l3737 05EE  
                            l3745 069A                              l3729 057A  
                            l3913 3770                              l3905 3760  
                            l3923 37BC                              l3915 3794  
                            l2779 33D2                              l2883 2ACA  
                            l2875 2A90                              l2859 2A3C  
                            l2971 28FE                              l2963 2890  
                            l3851 1E44                              l3843 1D90  
                            l3835 1CDE                              l3827 1C52  
                            l2795 37E0                              l2787 37B6  
                            l3691 368A                              l3595 1C40  
                            l3587 1C26                              l3579 1BCC  
                            l3499 18D6                              l3683 2728  
                            l3675 26E2                              l3667 26A8  
                            l3659 262C                              l2891 2EB4  
                            l2947 31EC                              l3819 0D66  
                            l3771 0950                              l3763 0876  
                            l3747 06E0                              l3755 078C  
                            l3739 0634                              l3907 3762  
                            l3917 379C                              l2885 2ADE  
                            l2877 2A98                              l2869 2A64  
                            l2981 2926                              l2973 290E  
                            l2965 28A8                              l3861 1F10  
                            l3853 1E5C                              l3845 1DA8  
                            l3837 1CF6                              l3829 1C7A  
                            l2797 3646                              l2789 37C8  
                            l3693 3694                              l3589 1C34  
                            l3685 272A                              l3677 26E6  
                            l3669 26B4                              l2893 2EE2  
                            l2949 321E                              l2957 325C  
                            l3781 0A42                              l3773 0968  
                            l3757 07D2                              l3765 087E  
                            l3749 0726                              l3909 376C  
                            l3941 0D9E                              l3919 37A2  
                            l2879 2A9C                              l2991 295E  
                            l2983 293A                              l2975 291E  
                            l2967 28D4                              l3871 1FA6  
                            l3863 1F52                              l3855 1E9E  
                            l3847 1DEA                              l3839 1D36  
                            l2799 364A                              l3695 36A4  
                            l3599 2D70                              l3679 270A  
                            l2895 2EF2                              l2887 2E76  
                            l3791 0B34                              l3783 0A5A  
                            l3767 08C4                              l3775 0970  
                            l3759 0818                              l3951 0DB0  
                            l3943 0DA2                              l2993 2974  
                            l2985 2946                              l2969 28E8  
                            l3873 1FEA                              l3857 1EB6  
                            l3849 1E02                              l3865 1F6A  
                            l3697 36AE                              l3689 3686  
                            l2897 2F00                              l2889 2EA4  
                            l3793 0B4C                              l3777 09B6  
                            l3785 0A62                              l3769 090A  
                            l3881 3342                              l3961 0DD0  
                            l3953 0DB4                              l3945 0DA6  
                            l3937 0D8E                              l2995 298C  
                            l2987 2952                              l3867 1F72  
                            l3859 1EF8                              l3875 1FEE  
                            l2899 2F12                              l3787 0AA8  
                            l3795 0B54                              l3779 09FC  
                            l3891 3602                              l3699 32DA  
                            l3883 3350                              l3971 0DEC  
                            l3963 0DD4                              l3955 0DBC  
                            l3947 0DAA                              l3939 0D9A  
                            l2997 29A0                              l2989 295A  
                            l3877 2004                              l3869 1F98  
                            l3797 0B9A                              l3789 0AEE  
                            l3893 3612                              l3885 336A  
                            l3981 0E14                              l3973 0DF4  
                            l3965 0DD8                              l3957 0DC4  
                            l3949 0DAA                              l2999 3066  
                            l3799 0BE0                              l3895 362A  
                            l3887 3384                              l3879 333C  
                            l3991 0E20                              l3983 0E16  
                            l3975 0DFC                              l3967 0DE0  
                            l3959 0DC8                              l3897 363E  
                            l3889 3388                              l3993 0E22  
                            l3985 0E1A                              l3977 0E04  
                            l3969 0DE8                              l3899 3640  
                            l3995 0E24                              l3987 0E1C  
                            l3979 0E0C                              l3997 0E26  
                            l3989 0E1E                              l3999 0E28  
                            u2200 316E                              u3000 2372  
                            u2201 316A                              u3001 236E  
                            u2130 3280                              u2210 3190  
                            u3010 23A0                              u2131 327C  
                            u2211 318C                              u3011 239C  
                            u2140 329E                              u2220 31D2  
                            u3100 1A86                              u3020 1842  
                            u2300 2EA4                              u2141 329A  
                            u2221 31CE                              u3021 183E  
                            u2301 2EA0                              u2150 32BA  
                            u2230 31EA                              u3110 1AE0  
                            u3030 1854                              u2310 2EE2  
                            u2151 32B6                              u2231 31E6  
                            u3111 1ADC                              u3031 1850  
                            u2311 2EDE                              u2160 23D0  
                            u2240 36F4                              u2400 1382  
                            u3200 1C34                              u3120 1B00  
                            u3040 1864                              u2320 2F00  
                            u4000 1014                      _BAUD4CONbits 000EE9  
                            u2161 23CC                              u2241 36F0  
                            u2401 137E                              u3201 1C30  
                            u3121 1AFC                              u3105 1A7C  
                            u3041 1860                              u2321 2EFC  
                            u4001 1010                              _LATE 000F7D  
                            u2170 24B4                              u2250 370A  
                            u2410 1394                              u3130 1B12  
                            u3050 18A4                              u3210 2D86  
                            u2330 2F20                              u4010 102C  
                            u2171 24B0                              u2251 3706  
                            u2411 1390                              u3131 1B0E  
                            u3051 18A0                              u3211 2D82  
                            u2331 2F1C                              u4011 1028  
                            _LATG 000F7F                              u2260 366E  
                            u2500 14EE                              u2420 13A4  
                            u3140 1B40                              u3060 18B6  
                            u3220 2DBA                              u3300 2604  
                            u2340 2F70                              u4100 1206  
                            u4020 1044                              u2261 3666  
                            u2501 14E8                              u2421 13A0  
                            u3141 1B3C                              u3061 18B2  
                            u3301 2600                              u2341 2F6C  
                            u4101 1202                              u4021 1040  
                            u2510 14F0                              u2430 13E6  
                            u3150 1B56                              u3070 18C6  
                            u3230 2DE8                              u3310 265A  
                            u2350 321E                              u4110 1248  
                            u4030 1062                              u2431 13E2  
                            u3151 1B52                              u3071 18C2  
                            u3231 2DE4                              u3311 2656  
                            u2351 321A                              u4111 1244  
                            u4031 105E                              u2184 250E  
                            u2280 2834                              u2600 160A  
                            u2520 1518                              u2440 13FC  
                            u3160 1B6A                              u3080 18FC  
                            u3240 2DFC                              u3320 26A4  
                            u2360 3250                              u3400 0598  
                            u4120 128A                              u4040 10AC  
                            u2185 250A                              u2281 2830  
                            u2601 1606                              u2521 1514  
                            u2441 13F8                              u3161 1B66  
                            u3081 18F8                              u3241 2DF8  
                            u3225 2DB0                              u3321 26A0  
                            u2361 324C                              u3401 0594  
                            u4121 1286                              u4041 10A8  
                            u2194 2578                              u2290 2AB2  
                            u2370 2974                              u2610 1650  
                            u2530 1536                              u2450 140E  
                            u3170 1B84                              u3090 190C  
                            u3250 2E24                              u3330 26C2  
                            u3410 05EE                              u4130 12CC  
                            u4050 10BE                              _T2PR 000FBC  
                            u2195 2574                              u2291 2AAE  
                            u2371 2970                              u2611 164C  
                            u2531 1532                              u2451 140A  
                            u3171 1B80                              u3091 1908  
                            u3251 2E20                              u3331 26BE  
                            u3411 05EA                              u4131 12C8  
                            u4051 10BA                              u2380 2D2C  
                            u2700 173C                              u2620 1686  
                            u2540 1556                              u2460 141E  
                            u3180 1BCC                              u3260 2E44  
                            u3340 26D2                              u3500 0818  
                            u3420 0634                              u4140 12E0  
                            u4060 1100                              u2381 2D28  
                            u2701 1738                              u2621 1682  
                            u2541 1552                              u2461 141A  
                            u3181 1BC8                              u3261 2E40  
                            u3341 26CE                              u3501 0814  
                            u3421 0630                              u4141 12DC  
                            u4061 10FC                              u2390 2BF0  
                            u2278 3670                              u2710 1750  
                            u2630 1696                              u2550 1564  
                            u2470 145A                              u3190 1BFA  
                            u3270 2E54                              u3350 26E0  
                            u3510 085E                              u3430 067A  
                            u4150 1336                              u4070 1140  
                            u2391 2BEC                              u2711 174C  
                            u2631 1692                              u2551 1560  
                            u2471 1456                              u3191 1BF6  
                            u3271 2E50                              u3351 26DC  
                            u3511 085A                              u3431 0676  
                            u4151 1332                              u4071 113C  
                            u2720 176A                              u2640 16C2  
                            u2560 1574                              u2480 1468  
                            u2800 2046                              u3360 271A  
                            u3280 259A                              u3600 0A5A  
                            u3520 0876                              u3440 0692  
                            u4160 134C                              u4080 1182  
                            u2721 1766                              u2641 16BE  
                            u2561 1570                              u2481 1464  
                            u2801 2042                              u3361 2716  
                            u3281 2596                              u3601 0A56  
                            u3521 0872                              u3441 068E  
                            u4161 1348                              u4081 117E  
                            u2730 17A4                              u2650 16D2  
                            u2570 15A6                              u2490 14D6  
                            u2810 2056                              u3370 2728  
                            u3290 25A8                              u3610 0AA8  
                            u3530 08C4                              u3450 06E0  
                            u4090 11C4                              u2731 17A0  
                            u2651 16CE                              u2571 15A2  
                            u2491 14D2                              u2811 2052  
                            u3371 2724                              u3291 25A4  
                            u3611 0AA4                              u3531 08C0  
                            u3451 06DC                              u4307 12A8  
                            u4091 11C0                              u4227 0E76  
                            u2740 17B6                              u2660 16EE  
                            u2580 15B4                              u2900 2222  
                            u2820 209A                              u3700 0CD2  
                            u3620 0AEE                              u3540 090A  
                            u3460 0726                              u3380 055C  
                            u2741 17B2                              u2661 16EA  
                            u2581 15B0                              u2901 221E  
                            u2821 2096                              u3701 0CCE  
                            u3621 0AEA                              u3541 0906  
                            u3461 0722                              u3381 0558  
                            u4317 1316                              u4237 0EB8  
                            u2750 17C6                              u2670 16FE  
                            u2590 15D2                              u2910 2238  
                            u2830 20AC                              u3710 0D18  
                            u3630 0B34                              u3550 0950  
                            u3470 076C                              u3390 057A  
                            u4407 2B16                              u4327 369A  
                            u2751 17C2                              u2671 16FA  
                            u2591 15CE                              u2911 2234  
                            u2831 20A8                              u3711 0D14  
                            u3631 0B30                              u3551 094C  
                            u3471 0768                              u3391 0576  
                            u4247 111E                              u3800 1E44  
                            u2760 17E6                              u2680 1710  
                            u2920 2256                              u2840 20BC  
                            u3720 0D30                              u3640 0B4C  
                            u3560 0968                              u3480 0784  
                            u4417 2B42                              u3801 1E40  
                            u4337 1C84                              u2761 17E2  
                            u2681 170C                              u2921 2252  
                            u2841 20B8                              u3721 0D2C  
                            u3641 0B48                              u3561 0964  
                            u3481 0780                              u4257 115E  
                            u3810 1E9E                              u2770 17F8  
                            u2690 1726                              u2930 2276  
                            u2850 20FC                              u3730 0D50  
                            u3650 0B9A                              u3570 09B6  
                            u3490 07D2                              u4507 2D36  
                            u4427 2B6E                              u4347 289A  
                            u3811 1E9A                              u2771 17F4  
                            u2691 1722                              u2931 2272  
                            u2851 20F8                              u3731 0D4C  
                            u3651 0B96                              u3571 09B2  
                            u3491 07CE                              u4267 11A0  
                            u3820 1EF8                              u2780 1814  
                            u2940 2288                              u2860 213C  
                            u3740 0D66                              u3660 0BE0  
                            u3580 09FC                              u3900 0E5E  
                            u4517 2D60                              u4437 2BD0  
                            u4357 28C6                              u3821 1EF4  
                            u2781 1810                              u2941 2284  
                            u2861 2138                              u3741 0D62  
                            u3661 0BDC                              u3581 09F8  
                            u4277 11E2                              u3901 0E5A  
                            u3830 1F52                              u2950 22B6  
                            u2870 21B2                              u2790 2034  
                            u3750 0D7C                              u3670 0C26  
                            u3590 0A42                              u3910 0E92  
                            u4607 2ABC                              u4527 2F98  
                            u4447 2BFA                              u4367 28F2  
                            u3831 1F4E                              u2951 22B2  
                            u2871 21AE                              u2791 2030  
                            u3751 0D78                              u3671 0C22  
                            u3591 0A3E                              u4287 1224  
                            u3911 0E8E                              u3840 1FEA  
                            u3760 1CDE                              u2960 22CC  
                            u2880 21D4                              u3680 0C3E  
                            u3920 0EA0                              u4617 2AE8  
                            u4537 3000                              u4457 2C24  
                            u4377 2954                              u3841 1FE6  
                            u3761 1CDA                              u2961 22C8  
                            u2881 21D0                              u3681 0C3A  
                            u4297 1266                              u3921 0E9C  
                            u3850 2004                              u3770 1D36  
                            u2970 22E0                              u2890 21FE  
                            u3690 0C8C                              u3930 0ED4  
                            u4707 283E                              u4627 3084  
                            u4547 302C                              u4467 2C52  
                            u4387 297E                              u3851 2000  
                            u3771 1D32                              u2971 22DC  
                            u2891 21FA                              u3691 0C88  
                            u3931 0ED0                              u3780 1D90  
                            u2980 22FA                              u3940 0EE2  
                            u4717 286C                              u4637 30EC  
                            u4557 3056                              u4477 2C7E  
                            u4397 29AA                              u3781 1D8C  
                            u2981 22F6                              u3941 0EDE  
                            u3790 1DEA                              u2990 2342  
                            u3950 0F0A                              u4727 31B4  
                            u4647 3118                              u4567 29D8  
                            u4487 2CAA                              u3791 1DE6  
                            u2991 233E                              u3951 0F06  
                            u3960 0F5A                              u4657 3142  
                            u4577 2A04                              u4497 2D0C  
                            u3961 0F56                              u3970 0F82  
                            u3890 0E50                              u4667 275A  
                            u4587 2A30                              u3971 0F7E  
                            u3891 0E4C                              u3980 0FAC  
                            u4677 2786                              u4597 2A92  
                            u3981 0FA8                              u3990 0FD6  
                            u4687 27B2                              u3991 0FD2  
                            u4697 2814                              _main 0D8E  
      __end_of_reverseTurnRight90 3066                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 005F  
                            _stop 3152                              prodh 000FF4  
                            prodl 000FF3                              start 0028  
                 ___fldiv@new_exp 0020            __end_of_color_read_Red 34D2  
                 __end_of_HighISR 0028                      ___param_bank 000000  
                     _turnLeft135 2C34                       _turnRight90 29BA  
                   ___fltol@sign1 0059                   __end_of___fladd 1828  
                           ?_main 0001                   __end_of___fldiv 23B4  
                 __end_of___flmul 1C52                   __end_of___fltol 2E76  
                           ?_stop 0019          __size_of_initDCmotorsPWM 0042  
                 __end_of___lwdiv 32DA                             i2l519 0024  
                           _TMR0H 000FD4                             _TMR0L 000FD3  
    updateMovementCount@movements 0005        __end_of_I2C_2_Master_Start 37DC  
                           _White 1C52        __end_of_I2C_2_Master_Write 37BC  
                 __end_of_forward 3432                             _isbtw 31EC  
           __size_of_turnRight135 013C             __size_of_turnRight180 013E  
                 __end_of_reverse 33E0                             ttemp5 0060  
                           ttemp6 0063                             ttemp7 0067  
                           status 000FD8                             wtemp8 0060  
         __end_of_color_read_Blue 3572             _I2C_2_Master_RepStart 37DC  
                 ?_color_read_Red 0005                   __initialization 3732  
                    __end_of_main 1368                      __end_of_stop 31EC  
                          ??_main 005D                            ??_stop 001D  
                   __activetblptr 000000       __end_of_updateMovementCount 338E  
                    _turnRight135 2AF8                      _turnRight180 287C  
                          ?_White 002B                      ?_setMotorPWM 000E  
                          ?_isbtw 000D                            _RC0PPS 000E62  
                          _RC4REG 000EE3                            _RE2PPS 000E74  
                          _RD5PPS 000E6F                            _RC7PPS 000E69  
                          _RD6PPS 000E70                            i2l2693 000A  
                          i2l2695 001A                            i2l2697 0022  
                       ??_HighISR 0001          __end_of_color_click_init 36BA  
                          _RX4PPS 000E15                            _TX4REG 000EE4  
                __end_of___xxtofl 273C                     ??_Timer0_init 0001  
                   ?_read_colours 000C                            White@i 003D  
                          ___flge 2E76       __end_of_determine_color_new 0D8E  
                       ??___fladd 0049                            ___wmul 370C  
                       ??___fldiv 0017                         ??___flmul 0030  
                       ??___fltol 0055                         ??___lwdiv 000B  
                          clear_0 3738                            clear_1 3744  
                          isa$std 000001                         ??_forward 001D  
                       ??_reverse 001D                            stop@mL 0019  
                          stop@mR 001B                 ??_initDCmotorsPWM 0003  
                      ___flge@ff1 0001                        ___flge@ff2 0005  
                    ___xxtofl@arg 000B                      ___xxtofl@exp 000A  
                    ___xxtofl@val 0001                        __accesstop 0060  
         __end_of__initialization 374A          __end_of_color_read_Clear 3482  
        __end_of_color_read_Green 3522            ?_I2C_2_Master_RepStart 0001  
                   ___rparam_used 000001                        ___fltol@f1 0051  
                ?_color_read_Blue 0005                    ??_read_colours 000E  
                 _Interrupts_init 37BC                    __pcstackCOMRAM 0001  
                   __end_of_White 201A                     __end_of_isbtw 3266  
             __end_of_Timer0_init 37B0          _determine_color_new$2627 0068  
                         ??_White 0035                        _calibrateB 35BC  
                      _calibrateW 3572                           ??_isbtw 0019  
                      __pbssBANK0 00B8                        __pbssBANK1 0100  
               _color_writetoaddr 3774                      _T2CLKCONbits 000FBF  
                    ?_turnLeft135 001D              reverseTurnRight90@mL 0025  
            reverseTurnRight90@mR 0027                           ?___flge 0001  
              ?_color_writetoaddr 0003                           ?___wmul 0001  
              _reverseTurnRight90 2F7A                      ?_turnRight90 001D  
             ??_color_writetoaddr 0004                         ?___xxtofl 0001  
             ?_reverseTurnRight90 0025                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                           _PWM6DCH 000FA3  
                         _PWM7DCH 000FA0                           _SSP2ADD 000ED6  
                         _SSP2BUF 000ED5              __size_of_setMotorPWM 01D4  
         __end_of_Interrupts_init 37C8            color_writetoaddr@value 0003  
                ??_color_read_Red 0007                           _HighISR 0008  
       __end_of_color_writetoaddr 3794                _I2C_2_Master_Start 37D2  
                      _initUSART4 3754              ??_reverseTurnRight90 0029  
              _I2C_2_Master_Write 37B0                           __Hparam 0000  
                         __Lparam 0000                 color_read_Red@tmp 000A  
                     _Timer0_init 3794                           White@mL 002B  
                         White@mR 002D                   __size_of___flge 0104  
                         ___fladd 1368                           ___fldiv 201A  
                         ___flmul 1828                           ___fltol 2D70  
                 __size_of___wmul 0026               ?_I2C_2_Master_Start 0001  
                    turnLeft135@i 0023                           ___lwdiv 3266  
             ?_I2C_2_Master_Write 0001                      turnLeft90@mL 001D  
                    turnLeft90@mR 001F                           __pcinit 3732  
                         __ramtop 0E00                           __ptext0 0D8E  
                         __ptext1 333C                           __ptext2 32DA  
                         __ptext3 3432                           __ptext4 3754  
                         __ptext5 3602                           __ptext6 002C  
                         __ptext7 31EC                           __ptext8 2E76  
                         __ptext9 2588                         _T2CONbits 000FBD  
                         _forward 33E0                        ??___xxtofl 0005  
                       _T2HLTbits 000FBE              __end_of_read_colours 333C  
                         _reverse 338E                     _RxBufWriteCnt 00D1  
                     ?_calibrateB 000C                       ?_calibrateW 000C  
                         main@cal 0082              ??_I2C_2_Master_Start 0002  
            ??_I2C_2_Master_Write 0002  updateMovementCount@movementArray 0003  
            end_of_initialization 374A                setMotorPWM@PWMduty 0017  
               ?_color_click_init 0001                      turnRight90@i 0023  
              ??_color_click_init 0005                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      _timerArray 00E6                   _initDCmotorsPWM 3602  
                       _PORTFbits 000F8E                       ___fladd@grs 0050  
                   ___xxtofl@sign 0009                         _TRISAbits 000F81  
                       _TRISCbits 000F83                         _TRISDbits 000F84  
                       _TRISEbits 000F85                         _TRISFbits 000F86  
                       _TRISGbits 000F87                         _TRISHbits 000F88  
                     ___fldiv@grs 0022                       ___fldiv@rem 001B  
        color_writetoaddr@address 0004           ??_I2C_2_Master_RepStart 0002  
    __size_of_updateMovementCount 0052       determine_color_new@RedRatio 006C  
                      main@check1 0088                        main@check2 008A  
                      main@check3 008C                        main@check4 0084  
                ?_Interrupts_init 0001                       ___flmul@grs 0035  
               ?_color_read_Clear 0005        __size_of_color_writetoaddr 0020  
                    _EUSART4RXbuf 00B8                      _EUSART4TXbuf 0100  
               ?_color_read_Green 0005                       ?_initUSART4 0001  
                      main@motorL 00A6                        main@motorR 00AF  
              ??_color_read_Clear 0007                ??_color_read_Green 0007  
                      _turnLeft90 273C               __size_of_calibrateB 0046  
             __size_of_calibrateW 004A                    __end_of___flge 2F7A  
            __size_of_turnLeft135 013C                    __end_of___wmul 3732  
            __size_of_turnRight90 013E      __size_of_determine_color_new 0D62  
             color_read_Clear@tmp 000A               start_initialization 3732  
                   _TxBufWriteCnt 00CF               color_read_Green@tmp 000A  
         __end_of_initDCmotorsPWM 3644                          ??___flge 0009  
                        ??___wmul 0005          __size_of_color_read_Blue 0050  
           __size_of_read_colours 0062                         ___fladd@a 0045  
                       ___fladd@b 0041               reverseTurnLeft90@mL 0025  
             reverseTurnLeft90@mR 0027                         ___fldiv@a 0013  
                       ___fldiv@b 000F     determine_color_new@GreenRatio 006E  
                       ___flmul@a 002C                         ___flmul@b 0028  
             __size_of_initUSART4 0020                     __pcstackBANK0 0060  
               __size_of___xxtofl 01B4                          ?_HighISR 0001  
                ___lwdiv@dividend 0007                      ?_Timer0_init 0001  
               _reverseTurnLeft90 3066                       ?_turnLeft90 001D  
                    _read_colours 32DA                         __pintcode 0008  
                        ?___fladd 0041                          ?___fldiv 000F  
                        ?___flmul 0028                          ?___fltol 0051  
              ?_reverseTurnLeft90 0025                          ?___lwdiv 0007  
            I2C_2_Master_Read@ack 0003              I2C_2_Master_Read@tmp 0004  
                   ?_turnRight135 001D                     ?_turnRight180 001D  
             ??_reverseTurnLeft90 0029                          ?_forward 0019  
               _I2C_2_Master_Idle 36E4                 _I2C_2_Master_Init 36BA  
               _I2C_2_Master_Read 3644                 _I2C_2_Master_Stop 37C8  
                    _RxBufReadCnt 00D0                          ?_reverse 0019  
              ?_I2C_2_Master_Idle 0001                    __size_of_White 03C8  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
                   ??_setMotorPWM 0010                      ??_calibrateB 000E  
                    ??_calibrateW 000E                ?_I2C_2_Master_Stop 0001  
                ___lwdiv@quotient 000B                       turnLeft90@i 0023  
        initDCmotorsPWM@PWMperiod 0001                    __size_of_isbtw 007A  
             ??_I2C_2_Master_Idle 0001               ??_I2C_2_Master_Init 0001  
             ??_I2C_2_Master_Read 0002                    ___wmul@product 0005  
                        _LATAbits 000F79               ??_I2C_2_Master_Stop 0002  
                        _LATCbits 000F7B                          _LATDbits 000F7C  
                        _LATEbits 000F7D                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                          _PIE2bits 000E2B  
                        _PIE4bits 000E2D         __end_of_reverseTurnLeft90 3152  
     __size_of_reverseTurnRight90 00EC                          i2u212_40 001A  
                        i2u212_41 0016                          _PIR0bits 000E33  
                        _PIR4bits 000E37              determine_color_new@m 005B  
                       _movements 00CC                  ?_initDCmotorsPWM 0001  
                        _SSP2CON2 000EDA                   White@timerArray 0033  
                        _SSP2STAT 000ED8               _updateMovementCount 333C  
              __end_of_calibrateB 3602                __end_of_calibrateW 35BC  
       __size_of_color_click_init 0034         __end_of_I2C_2_Master_Idle 370C  
       __end_of_I2C_2_Master_Init 36E4         __end_of_I2C_2_Master_Read 3686  
               ___wmul@multiplier 0001                    ??_turnRight135 0021  
                  ??_turnRight180 0021                     _movementArray 00D2  
       __end_of_I2C_2_Master_Stop 37D2          determine_color_new@lumin 0074  
                    setMotorPWM@m 000E       I2C_2_Master_Write@data_byte 0002  
                       main@count 008E                 ??_color_read_Blue 0007  
                    _TxBufReadCnt 00CE               __size_of_turnLeft90 0140  
     __size_of_I2C_2_Master_Start 000A              ?_updateMovementCount 0001  
     __size_of_I2C_2_Master_Write 000C    __size_of_I2C_2_Master_RepStart 000A  
   __end_of_I2C_2_Master_RepStart 37E6                color_read_Blue@tmp 000A  
                     calibrateB@m 000C                       calibrateW@m 000C  
             __end_of_setMotorPWM 2588                  __size_of_HighISR 0020  
             _determine_color_new 002C                      ??_initUSART4 0001  
                        __Hrparam 0000     updateMovementCount@timerArray 0007  
                        __Lrparam 0000                         forward@mL 0019  
                       forward@mR 001B           __size_of_color_read_Red 0050  
                __size_of___fladd 04C0                  __size_of___fldiv 039A  
                __size_of___flmul 042A                  __size_of___fltol 0106  
                       isbtw@high 0015                  __size_of___lwdiv 0074  
                  turnRight135@mL 001D                    turnRight135@mR 001F  
                  turnRight180@mL 001D                    turnRight180@mR 001F  
       __size_of_color_read_Clear 0050                     turnLeft135@mL 001D  
                   turnLeft135@mR 001F         __size_of_color_read_Green 0050  
                      _ANSELDbits 000EA7                        _ANSELFbits 000EB4  
            ?_determine_color_new 005B                          ___xxtofl 2588  
                      _T0CON0bits 000FD5                        _T0CON1bits 000FD6  
                __size_of_forward 0052                   ___lwdiv@divisor 0009  
              __end_of_initUSART4 3774                   ___lwdiv@counter 000D  
                        __ptext10 2D70                          __ptext11 1828  
                        __ptext20 34D2                          __ptext12 201A  
                        __ptext21 3522                          __ptext13 1368  
                        __ptext30 2AF8                          __ptext22 37B0  
                        __ptext14 3686                          __ptext31 2C34  
                        __ptext23 37C8                          __ptext15 3774  
                        __ptext40 370C                          __ptext32 2F7A  
                        __ptext24 37D2                          __ptext16 36BA  
                        __ptext41 3266                          __ptext33 29BA  
                        __ptext25 37DC                          __ptext17 3572  
                        __ptext42 3794                          __ptext34 3066  
                        __ptext26 3644                          __ptext18 35BC  
                        __ptext43 37BC                          __ptext35 273C  
                        __ptext27 36E4                          __ptext19 3482  
                        __ptext36 3152                          __ptext28 1C52  
                        __ptext37 338E                          __ptext29 287C  
                        __ptext38 33E0                          __ptext39 23B4  
                __size_of_reverse 0052             ??_updateMovementCount 0009  
                    _SSP2CON1bits 000ED9                      _SSP2CON2bits 000EDA  
              White@movementArray 002F                     __size_of_main 05DA  
                   __size_of_stop 009A        __size_of_reverseTurnLeft90 00EC  
                       reverse@mL 0019                         reverse@mR 001B  
                 main@reset_timer 0086                     ??_turnLeft135 0021  
                  White@movements 0031                          isa$xinst 000000  
        __size_of_Interrupts_init 000C                        _RC4STAbits 000EE7  
         determine_color_new@RelB 007E           determine_color_new@RelG 007A  
         determine_color_new@RelR 0076                          int$flags 005F  
            __size_of_Timer0_init 001C                     ??_turnRight90 0021  
                        main@test 0092        __size_of_I2C_2_Master_Idle 0028  
      __size_of_I2C_2_Master_Init 002A        __size_of_I2C_2_Master_Read 0042  
           ??_determine_color_new 0060        __size_of_I2C_2_Master_Stop 000A  
                      _INTCONbits 000FF2                       _setMotorPWM 23B4  
                        isbtw@low 0011                          isbtw@num 000D  
                     _PWM6CONbits 000FA4                     turnRight135@i 0023  
                   turnRight180@i 0023                       _PWM7CONbits 000FA1  
                        intlevel2 0000                     turnRight90@mL 001D  
                   turnRight90@mR 001F                 White@tempTimerVal 003B  
 updateMovementCount@tempTimerVal 000B              __end_of_turnRight135 2C34  
            __end_of_turnRight180 29BA   updateMovementCount@movementCode 0001  
             main@detected_colour 0090                      ??_turnLeft90 0021  
          determine_color_new@out 0072                     read_colours@m 000C  
                _color_click_init 3686               __end_of_turnLeft135 2D70  
                      _SSP2DATPPS 000E1D                        _SSP2CLKPPS 000E1C  
             __end_of_turnRight90 2AF8                     ___fladd@signs 004D  
              __end_of_turnLeft90 287C                        _TX4STAbits 000EE8  
                    ___fladd@aexp 004E                      ___fladd@bexp 004F  
    determine_color_new@BlueRatio 0070  
