

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 07 17:59:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 05/05/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK1
   110  004138                     __pidataBANK1:
   111                           	callstack 0
   112                           
   113                           ;initializer for determine_color1@F14763
   114  004138  002F               	dw	47
   115  00413A  056E               	dw	1390
   116  00413C  0307               	dw	775
   117  00413E  0951               	dw	2385
   118  004140  067C               	dw	1660
   119  004142  031B               	dw	795
   120  004144  0686               	dw	1670
   121  004146  048A               	dw	1162
   122  004148  0257               	dw	599
   123  00414A  0A6F               	dw	2671
   124  00414C  05C1               	dw	1473
   125  00414E  02E1               	dw	737
   126  004150  0B25               	dw	2853
   127  004152  056F               	dw	1391
   128  004154  0313               	dw	787
   129  004156  0976               	dw	2422
   130  004158  03DF               	dw	991
   131  00415A  0234               	dw	564
   132  00415C  08B1               	dw	2225
   133  00415E  05E3               	dw	1507
   134  004160  0314               	dw	788
   135  004162  0A8E               	dw	2702
   136  004164  0676               	dw	1654
   137  004166  0378               	dw	888
   138  004168  002F               	dw	47
   139  00416A  0017               	dw	23
   140  00416C  0012               	dw	18
   141                           
   142                           	psect	idataBANK2
   143  003BDE                     __pidataBANK2:
   144                           	callstack 0
   145                           
   146                           ;initializer for determine_color3@F14801
   147  003BDE  019F               	dw	415
   148  003BE0  0385               	dw	901
   149  003BE2  0158               	dw	344
   150  003BE4  012B               	dw	299
   151  003BE6  0469               	dw	1129
   152  003BE8  01AA               	dw	426
   153  003BEA  0100               	dw	256
   154  003BEC  0453               	dw	1107
   155  003BEE  01AE               	dw	430
   156  003BF0  0203               	dw	515
   157  003BF2  0567               	dw	1383
   158  003BF4  01F5               	dw	501
   159  003BF6  01DB               	dw	475
   160  003BF8  04CA               	dw	1226
   161  003BFA  01E1               	dw	481
   162  003BFC  01BD               	dw	445
   163  003BFE  03E5               	dw	997
   164  003C00  0179               	dw	377
   165  003C02  019F               	dw	415
   166  003C04  0589               	dw	1417
   167  003C06  022F               	dw	559
   168  003C08  0217               	dw	535
   169  003C0A  062C               	dw	1580
   170  003C0C  0279               	dw	633
   171  003C0E  0499               	dw	1177
   172  003C10  00F4               	dw	244
   173  003C12  00B7               	dw	183
   174                           
   175                           ;initializer for determine_color2@F14782
   176  003C14  0991               	dw	2449
   177  003C16  009E               	dw	158
   178  003C18  012C               	dw	300
   179  003C1A  06C9               	dw	1737
   180  003C1C  00A8               	dw	168
   181  003C1E  00EB               	dw	235
   182  003C20  069C               	dw	1692
   183  003C22  0093               	dw	147
   184  003C24  00EF               	dw	239
   185  003C26  09F0               	dw	2544
   186  003C28  00FA               	dw	250
   187  003C2A  014E               	dw	334
   188  003C2C  096E               	dw	2414
   189  003C2E  00ED               	dw	237
   190  003C30  00F8               	dw	248
   191  003C32  09F9               	dw	2553
   192  003C34  00B1               	dw	177
   193  003C36  013C               	dw	316
   194  003C38  08AD               	dw	2221
   195  003C3A  00E9               	dw	233
   196  003C3C  014F               	dw	335
   197  003C3E  0A10               	dw	2576
   198  003C40  0116               	dw	278
   199  003C42  0187               	dw	391
   200  003C44  0332               	dw	818
   201  003C46  017E               	dw	382
   202  003C48  00C1               	dw	193
   203                           
   204                           	psect	smallconst
   205  000E00                     __psmallconst:
   206                           	callstack 0
   207  000E00  00                 	db	0
   208  000E01  4260               	dw	16992
   209  000E03  0DA2               	dw	3490
   210  000E05                     __end_of_tiny:
   211                           	callstack 0
   212  0000                     _PIE4bits	set	3629
   213  0000                     _TX4REG	set	3812
   214  0000                     _RC4REG	set	3811
   215  0000                     _PIR4bits	set	3639
   216  0000                     _RC4STAbits	set	3815
   217  0000                     _SP4BRGH	set	3814
   218  0000                     _SP4BRGL	set	3813
   219  0000                     _TX4STAbits	set	3816
   220  0000                     _BAUD4CONbits	set	3817
   221  0000                     _RX4PPS	set	3605
   222  0000                     _RC0PPS	set	3682
   223  0000                     _ANSELFbits	set	3764
   224  0000                     _RC7PPS	set	3689
   225  0000                     _RE2PPS	set	3700
   226  0000                     _SSP2BUF	set	3797
   227  0000                     _SSP2CON2bits	set	3802
   228  0000                     _SSP2CON2	set	3802
   229  0000                     _SSP2STAT	set	3800
   230  0000                     _RD6PPS	set	3696
   231  0000                     _RD5PPS	set	3695
   232  0000                     _SSP2CLKPPS	set	3612
   233  0000                     _SSP2DATPPS	set	3613
   234  0000                     _ANSELDbits	set	3751
   235  0000                     _SSP2ADD	set	3798
   236  0000                     _SSP2CON1bits	set	3801
   237  0000                     _INTCONbits	set	4082
   238  0000                     _PORTFbits	set	3982
   239  0000                     _LATHbits	set	3968
   240  0000                     _TRISHbits	set	3976
   241  0000                     _LATDbits	set	3964
   242  0000                     _LATFbits	set	3966
   243  0000                     _TRISAbits	set	3969
   244  0000                     _LATAbits	set	3961
   245  0000                     _TRISFbits	set	3974
   246  0000                     _PWM7CONbits	set	4001
   247  0000                     _PWM6CONbits	set	4004
   248  0000                     _T2PR	set	4028
   249  0000                     _T2CLKCONbits	set	4031
   250  0000                     _T2HLTbits	set	4030
   251  0000                     _T2CONbits	set	4029
   252  0000                     _LATGbits	set	3967
   253  0000                     _LATCbits	set	3963
   254  0000                     _LATEbits	set	3965
   255  0000                     _TRISGbits	set	3975
   256  0000                     _TRISCbits	set	3971
   257  0000                     _TRISEbits	set	3973
   258  0000                     _TRISDbits	set	3972
   259  0000                     _LATG	set	3967
   260  0000                     _LATE	set	3965
   261  0000                     _PWM7DCH	set	4000
   262  0000                     _PWM6DCH	set	4003
   263  000E05                     STR_1:
   264  000E05  20                 	db	32
   265  000E06  41                 	db	65	;'A'
   266  000E07  6D                 	db	109	;'m'
   267  000E08  62                 	db	98	;'b'
   268  000E09  52                 	db	82	;'R'
   269  000E0A  3A                 	db	58	;':'
   270  000E0B  25                 	db	37
   271  000E0C  64                 	db	100	;'d'
   272  000E0D  20                 	db	32
   273  000E0E  47                 	db	71	;'G'
   274  000E0F  3A                 	db	58	;':'
   275  000E10  25                 	db	37
   276  000E11  64                 	db	100	;'d'
   277  000E12  20                 	db	32
   278  000E13  42                 	db	66	;'B'
   279  000E14  3A                 	db	58	;':'
   280  000E15  25                 	db	37
   281  000E16  64                 	db	100	;'d'
   282  000E17  20                 	db	32
   283  000E18  0D                 	db	13
   284  000E19  0A                 	db	10
   285  000E1A  00                 	db	0
   286  000E1B                     STR_5:
   287  000E1B  20                 	db	32
   288  000E1C  43                 	db	67	;'C'
   289  000E1D  6F                 	db	111	;'o'
   290  000E1E  6C                 	db	108	;'l'
   291  000E1F  6F                 	db	111	;'o'
   292  000E20  72                 	db	114	;'r'
   293  000E21  3A                 	db	58	;':'
   294  000E22  25                 	db	37
   295  000E23  64                 	db	100	;'d'
   296  000E24  20                 	db	32
   297  000E25  0D                 	db	13
   298  000E26  0A                 	db	10
   299  000E27  00                 	db	0
   300  000E28                     STR_4:
   301  000E28  20                 	db	32
   302  000E29  42                 	db	66	;'B'
   303  000E2A  3A                 	db	58	;':'
   304  000E2B  25                 	db	37
   305  000E2C  64                 	db	100	;'d'
   306  000E2D  2E                 	db	46
   307  000E2E  25                 	db	37
   308  000E2F  30                 	db	48	;'0'
   309  000E30  33                 	db	51	;'3'
   310  000E31  64                 	db	100	;'d'
   311  000E32  20                 	db	32
   312  000E33  00                 	db	0
   313  000E34                     STR_3:
   314  000E34  20                 	db	32
   315  000E35  47                 	db	71	;'G'
   316  000E36  3A                 	db	58	;':'
   317  000E37  25                 	db	37
   318  000E38  64                 	db	100	;'d'
   319  000E39  2E                 	db	46
   320  000E3A  25                 	db	37
   321  000E3B  30                 	db	48	;'0'
   322  000E3C  33                 	db	51	;'3'
   323  000E3D  64                 	db	100	;'d'
   324  000E3E  20                 	db	32
   325  000E3F  00                 	db	0
   326  000E40                     STR_2:
   327  000E40  20                 	db	32
   328  000E41  52                 	db	82	;'R'
   329  000E42  3A                 	db	58	;':'
   330  000E43  25                 	db	37
   331  000E44  64                 	db	100	;'d'
   332  000E45  2E                 	db	46
   333  000E46  25                 	db	37
   334  000E47  30                 	db	48	;'0'
   335  000E48  33                 	db	51	;'3'
   336  000E49  64                 	db	100	;'d'
   337  000E4A  20                 	db	32
   338  000E4B  00                 	db	0
   339  000E4C  00                 	db	0	; dummy byte at the end
   340  0000                     
   341                           ; #config settings
   342                           
   343                           	psect	cinit
   344  003D12                     __pcinit:
   345                           	callstack 0
   346  003D12                     start_initialization:
   347                           	callstack 0
   348  003D12                     __initialization:
   349                           	callstack 0
   350                           
   351                           ; Initialize objects allocated to BANK2 (108 bytes)
   352                           ; load TBLPTR registers with __pidataBANK2
   353  003D12  0EDE               	movlw	low __pidataBANK2
   354  003D14  6EF6               	movwf	tblptrl,c
   355  003D16  0E3B               	movlw	high __pidataBANK2
   356  003D18  6EF7               	movwf	tblptrh,c
   357  003D1A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   358  003D1C  6EF8               	movwf	tblptru,c
   359  003D1E  EE02  F000         	lfsr	0,__pdataBANK2
   360  003D22  EE10 F06C          	lfsr	1,108
   361  003D26                     copy_data0:
   362  003D26  0009               	tblrd		*+
   363  003D28  CFF5 FFEE          	movff	tablat,postinc0
   364  003D2C  50E5               	movf	postdec1,w,c
   365  003D2E  50E1               	movf	fsr1l,w,c
   366  003D30  E1FA               	bnz	copy_data0
   367                           
   368                           ; Initialize objects allocated to BANK1 (54 bytes)
   369                           ; load TBLPTR registers with __pidataBANK1
   370  003D32  0E38               	movlw	low __pidataBANK1
   371  003D34  6EF6               	movwf	tblptrl,c
   372  003D36  0E41               	movlw	high __pidataBANK1
   373  003D38  6EF7               	movwf	tblptrh,c
   374  003D3A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   375  003D3C  6EF8               	movwf	tblptru,c
   376  003D3E  EE01  F0A2         	lfsr	0,__pdataBANK1
   377  003D42  EE10 F036          	lfsr	1,54
   378  003D46                     copy_data1:
   379  003D46  0009               	tblrd		*+
   380  003D48  CFF5 FFEE          	movff	tablat,postinc0
   381  003D4C  50E5               	movf	postdec1,w,c
   382  003D4E  50E1               	movf	fsr1l,w,c
   383  003D50  E1FA               	bnz	copy_data1
   384                           
   385                           ; Clear objects allocated to BANK0 (122 bytes)
   386  003D52  EE00  F060         	lfsr	0,__pbssBANK0
   387  003D56  0E7A               	movlw	122
   388  003D58                     clear_0:
   389  003D58  6AEE               	clrf	postinc0,c
   390  003D5A  06E8               	decf	wreg,f,c
   391  003D5C  E1FD               	bnz	clear_0
   392                           
   393                           ; Clear objects allocated to COMRAM (4 bytes)
   394  003D5E  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   395  003D60  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   396  003D62  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   397  003D64  6A52               	clrf	__pbssCOMRAM& (0+255),c
   398  003D66                     end_of_initialization:
   399                           	callstack 0
   400  003D66                     __end_of__initialization:
   401                           	callstack 0
   402  003D66  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   403  003D68  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   404  003D6A  0100               	movlb	0
   405  003D6C  EFC5  F00B         	goto	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMRAM
   408  000052                     __pbssCOMRAM:
   409                           	callstack 0
   410  000052                     _TxBufReadCnt:
   411                           	callstack 0
   412  000052                     	ds	1
   413  000053                     _TxBufWriteCnt:
   414                           	callstack 0
   415  000053                     	ds	1
   416  000054                     _RxBufReadCnt:
   417                           	callstack 0
   418  000054                     	ds	1
   419  000055                     _RxBufWriteCnt:
   420                           	callstack 0
   421  000055                     	ds	1
   422                           
   423                           	psect	bssBANK0
   424  000060                     __pbssBANK0:
   425                           	callstack 0
   426  000060                     _EUSART4TXbuf:
   427                           	callstack 0
   428  000060                     	ds	60
   429  00009C                     _EUSART4RXbuf:
   430                           	callstack 0
   431  00009C                     	ds	20
   432  0000B0                     _errno:
   433                           	callstack 0
   434  0000B0                     	ds	2
   435  0000B2                     _nout:
   436                           	callstack 0
   437  0000B2                     	ds	2
   438  0000B4                     _width:
   439                           	callstack 0
   440  0000B4                     	ds	2
   441  0000B6                     _prec:
   442                           	callstack 0
   443  0000B6                     	ds	2
   444  0000B8                     _flags:
   445                           	callstack 0
   446  0000B8                     	ds	2
   447  0000BA                     _dbuf:
   448                           	callstack 0
   449  0000BA                     	ds	32
   450                           
   451                           	psect	dataBANK1
   452  0001A2                     __pdataBANK1:
   453                           	callstack 0
   454  0001A2                     determine_color1@F14763:
   455                           	callstack 0
   456  0001A2                     	ds	54
   457                           
   458                           	psect	dataBANK2
   459  000200                     __pdataBANK2:
   460                           	callstack 0
   461  000200                     determine_color3@F14801:
   462                           	callstack 0
   463  000200                     	ds	54
   464  000236                     determine_color2@F14782:
   465                           	callstack 0
   466  000236                     	ds	54
   467                           
   468                           	psect	cstackBANK1
   469  000100                     __pcstackBANK1:
   470                           	callstack 0
   471  000100                     main@string:
   472                           	callstack 0
   473                           
   474                           ; 20 bytes @ 0x0
   475  000100                     	ds	20
   476  000114                     main@string0:
   477                           	callstack 0
   478                           
   479                           ; 20 bytes @ 0x14
   480  000114                     	ds	20
   481  000128                     main@string1:
   482                           	callstack 0
   483                           
   484                           ; 20 bytes @ 0x28
   485  000128                     	ds	20
   486  00013C                     main@string2:
   487                           	callstack 0
   488                           
   489                           ; 20 bytes @ 0x3C
   490  00013C                     	ds	20
   491  000150                     main@string3:
   492                           	callstack 0
   493                           
   494                           ; 20 bytes @ 0x50
   495  000150                     	ds	20
   496  000164                     main@output:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x64
   500  000164                     	ds	2
   501  000166                     main@frac_part1:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x66
   505  000166                     	ds	2
   506  000168                     main@frac_part2:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x68
   510  000168                     	ds	2
   511  00016A                     main@frac_part3:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x6A
   515  00016A                     	ds	2
   516  00016C                     main@cal:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x6C
   520  00016C                     	ds	2
   521  00016E                     main@RedRatio:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x6E
   525  00016E                     	ds	4
   526  000172                     main@GreenRatio:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x72
   530  000172                     	ds	4
   531  000176                     main@BlueRatio:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x76
   535  000176                     	ds	4
   536  00017A                     main@int_part1:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x7A
   540  00017A                     	ds	2
   541  00017C                     main@int_part2:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x7C
   545  00017C                     	ds	2
   546  00017E                     main@int_part3:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x7E
   550  00017E                     	ds	2
   551  000180                     main@motorL:
   552                           	callstack 0
   553                           
   554                           ; 9 bytes @ 0x80
   555  000180                     	ds	9
   556  000189                     main@motorR:
   557                           	callstack 0
   558                           
   559                           ; 9 bytes @ 0x89
   560  000189                     	ds	9
   561  000192                     main@test:
   562                           	callstack 0
   563                           
   564                           ; 16 bytes @ 0x92
   565  000192                     	ds	16
   566                           
   567                           	psect	cstackBANK0
   568  0000DA                     __pcstackBANK0:
   569                           	callstack 0
   570  0000DA                     vfpfcnvrt@ll:
   571                           	callstack 0
   572                           
   573                           ; 8 bytes @ 0x0
   574  0000DA                     	ds	8
   575  0000E2                     vfpfcnvrt@done:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x8
   579  0000E2                     	ds	2
   580  0000E4                     _vfpfcnvrt$2249:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0xA
   584  0000E4                     	ds	2
   585  0000E6                     ?_vfprintf:
   586                           	callstack 0
   587  0000E6                     vfprintf@fp:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xC
   591  0000E6                     	ds	2
   592  0000E8                     vfprintf@fmt:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0xE
   596  0000E8                     	ds	2
   597  0000EA                     vfprintf@ap:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x10
   601  0000EA                     	ds	2
   602  0000EC                     ?_sprintf:
   603                           	callstack 0
   604  0000EC                     sprintf@s:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x12
   608  0000EC                     	ds	2
   609  0000EE                     sprintf@fmt:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x14
   613  0000EE                     	ds	8
   614  0000F6                     sprintf@ap:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x1C
   618  0000F6                     	ds	2
   619  0000F8                     sprintf@f:
   620                           	callstack 0
   621                           
   622                           ; 6 bytes @ 0x1E
   623  0000F8                     	ds	6
   624                           
   625                           	psect	cstackCOMRAM
   626  000001                     __pcstackCOMRAM:
   627                           	callstack 0
   628  000001                     ??_getCharFromTxBuf:
   629  000001                     putCharToRxBuf@byte:
   630                           	callstack 0
   631  000001                     
   632                           ; 1 bytes @ 0x0
   633  000001                     	ds	2
   634  000003                     ??_HighISR:
   635                           
   636                           ; 1 bytes @ 0x2
   637  000003                     	ds	2
   638  000005                     ??_I2C_2_Master_Idle:
   639  000005                     ?_strlen:
   640                           	callstack 0
   641  000005                     ?_isdigit:
   642                           	callstack 0
   643  000005                     ?_isspace:
   644                           	callstack 0
   645  000005                     ?___wmul:
   646                           	callstack 0
   647  000005                     ?___fladd:
   648                           	callstack 0
   649  000005                     ?___flmul:
   650                           	callstack 0
   651  000005                     ?___aodiv:
   652                           	callstack 0
   653  000005                     ?___aomod:
   654                           	callstack 0
   655  000005                     putCharToTxBuf@byte:
   656                           	callstack 0
   657  000005                     initDCmotorsPWM@PWMperiod:
   658                           	callstack 0
   659  000005                     ___wmul@multiplier:
   660                           	callstack 0
   661  000005                     isdigit@c:
   662                           	callstack 0
   663  000005                     isspace@c:
   664                           	callstack 0
   665  000005                     fputc@c:
   666                           	callstack 0
   667  000005                     strlen@s:
   668                           	callstack 0
   669  000005                     ___flge@ff1:
   670                           	callstack 0
   671  000005                     ___fladd@b:
   672                           	callstack 0
   673  000005                     ___flmul@b:
   674                           	callstack 0
   675  000005                     ___aodiv@dividend:
   676                           	callstack 0
   677  000005                     ___aomod@dividend:
   678                           	callstack 0
   679                           
   680                           ; 8 bytes @ 0x4
   681  000005                     	ds	1
   682  000006                     ??_I2C_2_Master_Read:
   683  000006                     I2C_2_Master_Write@data_byte:
   684                           	callstack 0
   685  000006                     TxBufferedString@string:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x5
   689  000006                     	ds	1
   690  000007                     ??_isdigit:
   691  000007                     ??_isspace:
   692  000007                     color_writetoaddr@value:
   693                           	callstack 0
   694  000007                     I2C_2_Master_Read@ack:
   695                           	callstack 0
   696  000007                     ___wmul@multiplicand:
   697                           	callstack 0
   698  000007                     fputc@fp:
   699                           	callstack 0
   700  000007                     strlen@a:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x6
   704  000007                     	ds	1
   705  000008                     color_writetoaddr@address:
   706                           	callstack 0
   707  000008                     I2C_2_Master_Read@tmp:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x7
   711  000008                     	ds	1
   712  000009                     ??_fputc:
   713  000009                     ??_color_click_init:
   714  000009                     ?_color_read_Clear:
   715                           	callstack 0
   716  000009                     ?_color_read_Red:
   717                           	callstack 0
   718  000009                     ?_color_read_Green:
   719                           	callstack 0
   720  000009                     ?_color_read_Blue:
   721                           	callstack 0
   722  000009                     ___wmul@product:
   723                           	callstack 0
   724  000009                     ___flge@ff2:
   725                           	callstack 0
   726  000009                     ___fladd@a:
   727                           	callstack 0
   728  000009                     ___flmul@a:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x8
   732  000009                     	ds	2
   733  00000B                     ??_color_read_Clear:
   734  00000B                     ??_color_read_Red:
   735  00000B                     ??_color_read_Green:
   736  00000B                     ??_color_read_Blue:
   737  00000B                     ?___xxtofl:
   738                           	callstack 0
   739  00000B                     _isspace$2287:
   740                           	callstack 0
   741  00000B                     ___xxtofl@val:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0xA
   745  00000B                     	ds	1
   746  00000C                     ?_atoi:
   747                           	callstack 0
   748  00000C                     atoi@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0xB
   752  00000C                     	ds	1
   753  00000D                     ??___fladd:
   754  00000D                     ??___flmul:
   755  00000D                     ??___flge:
   756  00000D                     ___aodiv@divisor:
   757                           	callstack 0
   758  00000D                     ___aomod@divisor:
   759                           	callstack 0
   760                           
   761                           ; 8 bytes @ 0xC
   762  00000D                     	ds	1
   763  00000E                     ??_atoi:
   764  00000E                     color_read_Clear@tmp:
   765                           	callstack 0
   766  00000E                     color_read_Red@tmp:
   767                           	callstack 0
   768  00000E                     color_read_Green@tmp:
   769                           	callstack 0
   770  00000E                     color_read_Blue@tmp:
   771                           	callstack 0
   772  00000E                     fputs@s:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0xD
   776  00000E                     	ds	1
   777  00000F                     ??___xxtofl:
   778                           
   779                           ; 1 bytes @ 0xE
   780  00000F                     	ds	1
   781  000010                     read_colours@m:
   782                           	callstack 0
   783  000010                     calibrate@m:
   784                           	callstack 0
   785  000010                     fputs@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0xF
   789  000010                     	ds	1
   790  000011                     ?_isbtw:
   791                           	callstack 0
   792  000011                     ___fladd@signs:
   793                           	callstack 0
   794  000011                     ___flmul@sign:
   795                           	callstack 0
   796  000011                     isbtw@num:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x10
   800  000011                     	ds	1
   801  000012                     ___fladd@aexp:
   802                           	callstack 0
   803  000012                     fputs@c:
   804                           	callstack 0
   805  000012                     atoi@neg:
   806                           	callstack 0
   807  000012                     ___flmul@grs:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x11
   811  000012                     	ds	1
   812  000013                     ___fladd@bexp:
   813                           	callstack 0
   814  000013                     ___xxtofl@sign:
   815                           	callstack 0
   816  000013                     fputs@i:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x12
   820  000013                     	ds	1
   821  000014                     ___fladd@grs:
   822                           	callstack 0
   823  000014                     ___xxtofl@exp:
   824                           	callstack 0
   825  000014                     _atoi$2269:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x13
   829  000014                     	ds	1
   830  000015                     ?_pad:
   831                           	callstack 0
   832  000015                     ___aodiv@counter:
   833                           	callstack 0
   834  000015                     ___aomod@counter:
   835                           	callstack 0
   836  000015                     pad@fp:
   837                           	callstack 0
   838  000015                     isbtw@low:
   839                           	callstack 0
   840  000015                     ___xxtofl@arg:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x14
   844  000015                     	ds	1
   845  000016                     ___aodiv@sign:
   846                           	callstack 0
   847  000016                     ___aomod@sign:
   848                           	callstack 0
   849  000016                     ___flmul@aexp:
   850                           	callstack 0
   851  000016                     _atoi$2271:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x15
   855  000016                     	ds	1
   856  000017                     ?_abs:
   857                           	callstack 0
   858  000017                     ___flmul@bexp:
   859                           	callstack 0
   860  000017                     pad@buf:
   861                           	callstack 0
   862  000017                     abs@a:
   863                           	callstack 0
   864  000017                     ___aodiv@quotient:
   865                           	callstack 0
   866                           
   867                           ; 8 bytes @ 0x16
   868  000017                     	ds	1
   869  000018                     _atoi$2270:
   870                           	callstack 0
   871  000018                     ___flmul@prod:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x17
   875  000018                     	ds	1
   876  000019                     ??_abs:
   877  000019                     pad@p:
   878                           	callstack 0
   879  000019                     atoi@n:
   880                           	callstack 0
   881  000019                     isbtw@high:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x18
   885  000019                     	ds	2
   886  00001B                     ??_pad:
   887                           
   888                           ; 1 bytes @ 0x1A
   889  00001B                     	ds	1
   890  00001C                     ___flmul@temp:
   891                           	callstack 0
   892  00001C                     pad@i:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x1B
   896  00001C                     	ds	1
   897  00001D                     
   898                           ; 1 bytes @ 0x1C
   899  00001D                     	ds	1
   900  00001E                     ?___fldiv:
   901                           	callstack 0
   902  00001E                     pad@w:
   903                           	callstack 0
   904  00001E                     ___fldiv@b:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x1D
   908  00001E                     	ds	2
   909  000020                     ?_dtoa:
   910                           	callstack 0
   911  000020                     dtoa@fp:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x1F
   915  000020                     	ds	2
   916  000022                     ___fldiv@a:
   917                           	callstack 0
   918  000022                     dtoa@d:
   919                           	callstack 0
   920                           
   921                           ; 8 bytes @ 0x21
   922  000022                     	ds	4
   923  000026                     ??___fldiv:
   924                           
   925                           ; 1 bytes @ 0x25
   926  000026                     	ds	4
   927  00002A                     ??_dtoa:
   928  00002A                     ___fldiv@rem:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x29
   932  00002A                     	ds	4
   933  00002E                     ___fldiv@sign:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x2D
   937  00002E                     	ds	1
   938  00002F                     ___fldiv@new_exp:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x2E
   942  00002F                     	ds	2
   943  000031                     ___fldiv@grs:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x30
   947  000031                     	ds	1
   948  000032                     _dtoa$2234:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x31
   952  000032                     	ds	2
   953  000034                     dtoa@p:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x33
   957  000034                     	ds	1
   958  000035                     ___fldiv@bexp:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x34
   962  000035                     	ds	1
   963  000036                     ___fldiv@aexp:
   964                           	callstack 0
   965  000036                     dtoa@w:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x35
   969  000036                     	ds	1
   970  000037                     ?_determine_color_new:
   971                           	callstack 0
   972  000037                     ?___flsub:
   973                           	callstack 0
   974  000037                     determine_color_new@m:
   975                           	callstack 0
   976  000037                     ___flsub@b:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x36
   980  000037                     	ds	1
   981  000038                     dtoa@s:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x37
   985  000038                     	ds	1
   986  000039                     ??_determine_color_new:
   987                           
   988                           ; 1 bytes @ 0x38
   989  000039                     	ds	1
   990  00003A                     dtoa@n:
   991                           	callstack 0
   992                           
   993                           ; 8 bytes @ 0x39
   994  00003A                     	ds	1
   995  00003B                     ___flsub@a:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x3A
   999  00003B                     	ds	2
  1000  00003D                     determine_color_new@out:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x3C
  1004  00003D                     	ds	2
  1005  00003F                     ?___fltol:
  1006                           	callstack 0
  1007  00003F                     determine_color_new@RedRatio:
  1008                           	callstack 0
  1009  00003F                     ___fltol@f1:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x3E
  1013  00003F                     	ds	3
  1014  000042                     dtoa@i:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x41
  1018  000042                     	ds	1
  1019  000043                     ??___fltol:
  1020  000043                     determine_color_new@GreenRatio:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x42
  1024  000043                     	ds	1
  1025  000044                     ?_vfpfcnvrt:
  1026                           	callstack 0
  1027  000044                     vfpfcnvrt@fp:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x43
  1031  000044                     	ds	2
  1032  000046                     vfpfcnvrt@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x45
  1036  000046                     	ds	1
  1037  000047                     ___fltol@sign1:
  1038                           	callstack 0
  1039  000047                     determine_color_new@BlueRatio:
  1040                           	callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x46
  1043  000047                     	ds	1
  1044  000048                     ___fltol@exp1:
  1045                           	callstack 0
  1046  000048                     vfpfcnvrt@ap:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x47
  1050  000048                     	ds	2
  1051  00004A                     ??_vfpfcnvrt:
  1052                           
  1053                           ; 1 bytes @ 0x49
  1054  00004A                     	ds	4
  1055  00004E                     vfprintf@cfmt:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x4D
  1059  00004E                     	ds	2
  1060  000050                     ??_main:
  1061                           
  1062                           ; 1 bytes @ 0x4F
  1063  000050                     	ds	2
  1064                           
  1065 ;;
  1066 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1067 ;;
  1068 ;; *************** function _main *****************
  1069 ;; Defined at:
  1070 ;;		line 19 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  int_part3       2  126[BANK1 ] unsigned int 
  1075 ;;  int_part2       2  124[BANK1 ] unsigned int 
  1076 ;;  int_part1       2  122[BANK1 ] unsigned int 
  1077 ;;  frac_part3      2  106[BANK1 ] unsigned int 
  1078 ;;  frac_part2      2  104[BANK1 ] unsigned int 
  1079 ;;  frac_part1      2  102[BANK1 ] unsigned int 
  1080 ;;  output          2  100[BANK1 ] unsigned int 
  1081 ;;  string3        20   80[BANK1 ] unsigned char [20]
  1082 ;;  string2        20   60[BANK1 ] unsigned char [20]
  1083 ;;  string1        20   40[BANK1 ] unsigned char [20]
  1084 ;;  string0        20   20[BANK1 ] unsigned char [20]
  1085 ;;  string         20    0[BANK1 ] unsigned char [20]
  1086 ;;  test           16  146[BANK1 ] struct RGB_val
  1087 ;;  motorR          9  137[BANK1 ] struct DC_motor
  1088 ;;  motorL          9  128[BANK1 ] struct DC_motor
  1089 ;;  BlueRatio       4  118[BANK1 ] float 
  1090 ;;  GreenRatio      4  114[BANK1 ] float 
  1091 ;;  RedRatio        4  110[BANK1 ] float 
  1092 ;;  PWMcycle        2    0        unsigned int 
  1093 ;;  cal             2  108[BANK1 ] unsigned int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Locals:         0       0     162       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Totals:         2       0     162       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;Total ram usage:      164 bytes
  1108 ;; Hardware stack levels required when called: 10
  1109 ;; This function calls:
  1110 ;;		_Interrupts_init
  1111 ;;		_TxBufferedString
  1112 ;;		___fldiv
  1113 ;;		___flmul
  1114 ;;		___flsub
  1115 ;;		___fltol
  1116 ;;		___wmul
  1117 ;;		___xxtofl
  1118 ;;		_calibrate
  1119 ;;		_color_click_init
  1120 ;;		_determine_color_new
  1121 ;;		_initDCmotorsPWM
  1122 ;;		_initUSART4
  1123 ;;		_read_colours
  1124 ;;		_sendTxBuf
  1125 ;;		_sprintf
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text0
  1132  00178A                     __ptext0:
  1133                           	callstack 0
  1134  00178A                     _main:
  1135                           	callstack 21
  1136  00178A                     
  1137                           ;main.c: 21:     initDCmotorsPWM(99);
  1138  00178A  0E00               	movlw	0
  1139  00178C  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1140  00178E  0E63               	movlw	99
  1141  001790  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1142  001792  EC1E  F020         	call	_initDCmotorsPWM	;wreg free
  1143  001796                     
  1144                           ;main.c: 22:     color_click_init();
  1145  001796  ECD2  F020         	call	_color_click_init	;wreg free
  1146  00179A                     
  1147                           ;main.c: 23:     initUSART4();
  1148  00179A  EC80  F021         	call	_initUSART4	;wreg free
  1149  00179E                     
  1150                           ;main.c: 24:     Interrupts_init();
  1151  00179E  ECCB  F021         	call	_Interrupts_init	;wreg free
  1152  0017A2                     
  1153                           ;main.c: 27:     TRISFbits.TRISF2=1;
  1154  0017A2  8486               	bsf	134,2,c	;volatile
  1155  0017A4                     
  1156                           ;main.c: 28:     ANSELFbits.ANSELF2=0;
  1157  0017A4  010E               	movlb	14	; () banked
  1158  0017A6  95B4               	bcf	180,2,b	;volatile
  1159  0017A8                     
  1160                           ; BSR set to: 14
  1161                           ;main.c: 29:     TRISFbits.TRISF3=1;
  1162  0017A8  8686               	bsf	134,3,c	;volatile
  1163  0017AA                     
  1164                           ; BSR set to: 14
  1165                           ;main.c: 30:     ANSELFbits.ANSELF3=0;
  1166  0017AA  97B4               	bcf	180,3,b	;volatile
  1167  0017AC                     
  1168                           ; BSR set to: 14
  1169                           ;main.c: 34:     motorL.power=0;
  1170  0017AC  0E00               	movlw	0
  1171  0017AE  0101               	movlb	1	; () banked
  1172  0017B0  6F80               	movwf	main@motorL& (0+255),b
  1173  0017B2                     
  1174                           ; BSR set to: 1
  1175                           ;main.c: 35:     motorL.direction=1;
  1176  0017B2  0E01               	movlw	1
  1177  0017B4  6F81               	movwf	(main@motorL+1)& (0+255),b
  1178  0017B6                     
  1179                           ; BSR set to: 1
  1180                           ;main.c: 36:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1181  0017B6  0EA3               	movlw	163
  1182  0017B8  6F82               	movwf	(main@motorL+2)& (0+255),b
  1183  0017BA  0E0F               	movlw	15
  1184  0017BC  6F83               	movwf	(main@motorL+3)& (0+255),b
  1185  0017BE                     
  1186                           ; BSR set to: 1
  1187                           ;main.c: 37:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1188  0017BE  0E7D               	movlw	125
  1189  0017C0  6F84               	movwf	(main@motorL+4)& (0+255),b
  1190  0017C2  0E0F               	movlw	15
  1191  0017C4  6F85               	movwf	(main@motorL+5)& (0+255),b
  1192  0017C6                     
  1193                           ; BSR set to: 1
  1194                           ;main.c: 38:     motorL.dir_pin=4;
  1195  0017C6  0E04               	movlw	4
  1196  0017C8  6F86               	movwf	(main@motorL+6)& (0+255),b
  1197  0017CA                     
  1198                           ; BSR set to: 1
  1199                           ;main.c: 39:     motorL.PWMperiod=PWMcycle;
  1200  0017CA  0E00               	movlw	0
  1201  0017CC  6F88               	movwf	(main@motorL+8)& (0+255),b
  1202  0017CE  0E63               	movlw	99
  1203  0017D0  6F87               	movwf	(main@motorL+7)& (0+255),b
  1204  0017D2                     
  1205                           ; BSR set to: 1
  1206                           ;main.c: 41:     motorR.power=0;
  1207  0017D2  0E00               	movlw	0
  1208  0017D4  6F89               	movwf	main@motorR& (0+255),b
  1209  0017D6                     
  1210                           ; BSR set to: 1
  1211                           ;main.c: 42:     motorR.direction=1;
  1212  0017D6  0E01               	movlw	1
  1213  0017D8  6F8A               	movwf	(main@motorR+1)& (0+255),b
  1214                           
  1215                           ;main.c: 43:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1216  0017DA  0EA0               	movlw	160
  1217  0017DC  6F8B               	movwf	(main@motorR+2)& (0+255),b
  1218  0017DE  0E0F               	movlw	15
  1219  0017E0  6F8C               	movwf	(main@motorR+3)& (0+255),b
  1220                           
  1221                           ;main.c: 44:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1222  0017E2  0E7F               	movlw	127
  1223  0017E4  6F8D               	movwf	(main@motorR+4)& (0+255),b
  1224  0017E6  0E0F               	movlw	15
  1225  0017E8  6F8E               	movwf	(main@motorR+5)& (0+255),b
  1226  0017EA                     
  1227                           ; BSR set to: 1
  1228                           ;main.c: 45:     motorR.dir_pin=6;
  1229  0017EA  0E06               	movlw	6
  1230  0017EC  6F8F               	movwf	(main@motorR+6)& (0+255),b
  1231  0017EE                     
  1232                           ; BSR set to: 1
  1233                           ;main.c: 46:     motorR.PWMperiod=PWMcycle;
  1234  0017EE  0E00               	movlw	0
  1235  0017F0  6F91               	movwf	(main@motorR+8)& (0+255),b
  1236  0017F2  0E63               	movlw	99
  1237  0017F4  6F90               	movwf	(main@motorR+7)& (0+255),b
  1238  0017F6                     
  1239                           ; BSR set to: 1
  1240                           ;main.c: 49:     struct RGB_val test;;main.c: 50:     test.C = 0;
  1241  0017F6  0E00               	movlw	0
  1242  0017F8  6F9B               	movwf	(main@test+9)& (0+255),b
  1243  0017FA  0E00               	movlw	0
  1244  0017FC  6F9A               	movwf	(main@test+8)& (0+255),b
  1245  0017FE                     
  1246                           ; BSR set to: 1
  1247                           ;main.c: 51:     test.R = 0;
  1248  0017FE  0E00               	movlw	0
  1249  001800  6F9D               	movwf	(main@test+11)& (0+255),b
  1250  001802  0E00               	movlw	0
  1251  001804  6F9C               	movwf	(main@test+10)& (0+255),b
  1252  001806                     
  1253                           ; BSR set to: 1
  1254                           ;main.c: 52:     test.G = 0;
  1255  001806  0E00               	movlw	0
  1256  001808  6F9F               	movwf	(main@test+13)& (0+255),b
  1257  00180A  0E00               	movlw	0
  1258  00180C  6F9E               	movwf	(main@test+12)& (0+255),b
  1259  00180E                     
  1260                           ; BSR set to: 1
  1261                           ;main.c: 53:     test.B = 0;
  1262  00180E  0E00               	movlw	0
  1263  001810  6FA1               	movwf	(main@test+15)& (0+255),b
  1264  001812  0E00               	movlw	0
  1265  001814  6FA0               	movwf	(main@test+14)& (0+255),b
  1266  001816                     
  1267                           ; BSR set to: 1
  1268                           ;main.c: 56:     LATGbits.LATG1=0;
  1269  001816  927F               	bcf	127,1,c	;volatile
  1270  001818                     
  1271                           ; BSR set to: 1
  1272                           ;main.c: 57:     TRISGbits.TRISG1=0;
  1273  001818  9287               	bcf	135,1,c	;volatile
  1274  00181A                     
  1275                           ; BSR set to: 1
  1276                           ;main.c: 58:     LATAbits.LATA4=0;
  1277  00181A  9879               	bcf	121,4,c	;volatile
  1278  00181C                     
  1279                           ; BSR set to: 1
  1280                           ;main.c: 59:     TRISAbits.TRISA4=0;
  1281  00181C  9881               	bcf	129,4,c	;volatile
  1282  00181E                     
  1283                           ; BSR set to: 1
  1284                           ;main.c: 60:     LATFbits.LATF7=0;
  1285  00181E  9E7E               	bcf	126,7,c	;volatile
  1286  001820                     
  1287                           ; BSR set to: 1
  1288                           ;main.c: 61:     TRISFbits.TRISF7=0;
  1289  001820  9E86               	bcf	134,7,c	;volatile
  1290  001822                     
  1291                           ; BSR set to: 1
  1292                           ;main.c: 64:     TRISDbits.TRISD7 = 0;
  1293  001822  9E84               	bcf	132,7,c	;volatile
  1294  001824                     
  1295                           ; BSR set to: 1
  1296                           ;main.c: 65:     LATDbits.LATD7 = 0;
  1297  001824  9E7C               	bcf	124,7,c	;volatile
  1298  001826                     
  1299                           ; BSR set to: 1
  1300                           ;main.c: 68:     TRISHbits.TRISH3 = 0;
  1301  001826  9688               	bcf	136,3,c	;volatile
  1302  001828                     
  1303                           ; BSR set to: 1
  1304                           ;main.c: 69:     LATHbits.LATH3 = 0;
  1305  001828  9680               	bcf	128,3,c	;volatile
  1306  00182A                     
  1307                           ; BSR set to: 1
  1308                           ;main.c: 71:     char string[20];;main.c: 72:     char string0[20];;main.c: 73:     char
      +                           string1[20];;main.c: 74:     char string2[20];;main.c: 75:     char string3[20];;main.c
      +                          : 76:     float RedRatio, GreenRatio, BlueRatio;;main.c: 78:     unsigned int cal = 0;
  1309  00182A  0E00               	movlw	0
  1310  00182C  6F6D               	movwf	(main@cal+1)& (0+255),b
  1311  00182E  0E00               	movlw	0
  1312  001830  6F6C               	movwf	main@cal& (0+255),b
  1313                           
  1314                           ;main.c: 81:     while(cal==0){
  1315  001832  EF8D  F00C         	goto	l5550
  1316  001836                     l311:
  1317                           
  1318                           ; BSR set to: 1
  1319                           ;main.c: 82:         LATDbits.LATD7 = 1;
  1320  001836  8E7C               	bsf	124,7,c	;volatile
  1321  001838                     l312:
  1322  001838  B48E               	btfsc	142,2,c	;volatile
  1323  00183A  EF21  F00C         	goto	u5771
  1324  00183E  EF23  F00C         	goto	u5770
  1325  001842                     u5771:
  1326  001842  EF1C  F00C         	goto	l312
  1327  001846                     u5770:
  1328  001846                     
  1329                           ;main.c: 84:         if (!PORTFbits.RF2){
  1330  001846  B48E               	btfsc	142,2,c	;volatile
  1331  001848  EF28  F00C         	goto	u5781
  1332  00184C  EF2A  F00C         	goto	u5780
  1333  001850                     u5781:
  1334  001850  EF4D  F00C         	goto	l5536
  1335  001854                     u5780:
  1336  001854                     
  1337                           ;main.c: 85:             LATDbits.LATD7 = 0;
  1338  001854  9E7C               	bcf	124,7,c	;volatile
  1339                           
  1340                           ;main.c: 86:             LATGbits.LATG1=1;
  1341  001856  827F               	bsf	127,1,c	;volatile
  1342                           
  1343                           ;main.c: 87:             LATAbits.LATA4=1;
  1344  001858  8879               	bsf	121,4,c	;volatile
  1345                           
  1346                           ;main.c: 88:             LATFbits.LATF7=0;
  1347  00185A  9E7E               	bcf	126,7,c	;volatile
  1348  00185C                     
  1349                           ;main.c: 89:             calibrate(&test);
  1350  00185C  0E92               	movlw	low main@test
  1351  00185E  6E10               	movwf	calibrate@m^0,c
  1352  001860  0E01               	movlw	high main@test
  1353  001862  6E11               	movwf	(calibrate@m+1)^0,c
  1354  001864  ECB8  F01E         	call	_calibrate	;wreg free
  1355  001868                     
  1356                           ;main.c: 90:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1357  001868  0E19               	movlw	25
  1358  00186A  6E51               	movwf	(??_main+1)^0,c
  1359  00186C  0E5A               	movlw	90
  1360  00186E  6E50               	movwf	??_main^0,c
  1361  001870  0EB2               	movlw	178
  1362  001872                     u5827:
  1363  001872  2EE8               	decfsz	wreg,f,c
  1364  001874  D7FE               	bra	u5827
  1365  001876  2E50               	decfsz	??_main^0,f,c
  1366  001878  D7FC               	bra	u5827
  1367  00187A  2E51               	decfsz	(??_main+1)^0,f,c
  1368  00187C  D7FA               	bra	u5827
  1369  00187E                     
  1370                           ;main.c: 91:             LATGbits.LATG1=0;
  1371  00187E  927F               	bcf	127,1,c	;volatile
  1372  001880                     
  1373                           ;main.c: 92:             LATAbits.LATA4=0;
  1374  001880  9879               	bcf	121,4,c	;volatile
  1375  001882                     
  1376                           ;main.c: 93:             LATFbits.LATF7=0;
  1377  001882  9E7E               	bcf	126,7,c	;volatile
  1378  001884                     
  1379                           ;main.c: 94:              _delay((unsigned long)((300)*(64000000/4000.0)));
  1380  001884  0E19               	movlw	25
  1381  001886  6E51               	movwf	(??_main+1)^0,c
  1382  001888  0E5A               	movlw	90
  1383  00188A  6E50               	movwf	??_main^0,c
  1384  00188C  0EB2               	movlw	178
  1385  00188E                     u5837:
  1386  00188E  2EE8               	decfsz	wreg,f,c
  1387  001890  D7FE               	bra	u5837
  1388  001892  2E50               	decfsz	??_main^0,f,c
  1389  001894  D7FC               	bra	u5837
  1390  001896  2E51               	decfsz	(??_main+1)^0,f,c
  1391  001898  D7FA               	bra	u5837
  1392  00189A                     l5536:
  1393                           
  1394                           ;main.c: 97:         sprintf(string0," AmbR:%d G:%d B:%d \r\n",test.ambientR,test.ambien
      +                          tG,test.ambientB);
  1395  00189A  0E14               	movlw	low main@string0
  1396  00189C  0100               	movlb	0	; () banked
  1397  00189E  6FEC               	movwf	sprintf@s& (0+255),b
  1398  0018A0  0E01               	movlw	high main@string0
  1399  0018A2  6FED               	movwf	(sprintf@s+1)& (0+255),b
  1400  0018A4  0E05               	movlw	low STR_1
  1401  0018A6  6FEE               	movwf	sprintf@fmt& (0+255),b
  1402  0018A8  0E0E               	movlw	high STR_1
  1403  0018AA  6FEF               	movwf	(sprintf@fmt+1)& (0+255),b
  1404  0018AC  C194  F0F0         	movff	main@test+2,?_sprintf+4
  1405  0018B0  C195  F0F1         	movff	main@test+3,?_sprintf+5
  1406  0018B4  C196  F0F2         	movff	main@test+4,?_sprintf+6
  1407  0018B8  C197  F0F3         	movff	main@test+5,?_sprintf+7
  1408  0018BC  C198  F0F4         	movff	main@test+6,?_sprintf+8
  1409  0018C0  C199  F0F5         	movff	main@test+7,?_sprintf+9
  1410  0018C4  ECE7  F01E         	call	_sprintf	;wreg free
  1411  0018C8                     
  1412                           ;main.c: 98:         TxBufferedString(string0);
  1413  0018C8  0E14               	movlw	low main@string0
  1414  0018CA  6E06               	movwf	TxBufferedString@string^0,c
  1415  0018CC  0E01               	movlw	high main@string0
  1416  0018CE  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1417  0018D0  ECEC  F020         	call	_TxBufferedString	;wreg free
  1418  0018D4                     
  1419                           ;main.c: 99:         sendTxBuf();
  1420  0018D4  ECA0  F021         	call	_sendTxBuf	;wreg free
  1421  0018D8                     
  1422                           ;main.c: 100:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1423  0018D8  0E05               	movlw	5
  1424  0018DA  6E51               	movwf	(??_main+1)^0,c
  1425  0018DC  0E0F               	movlw	15
  1426  0018DE  6E50               	movwf	??_main^0,c
  1427  0018E0  0EF1               	movlw	241
  1428  0018E2                     u5847:
  1429  0018E2  2EE8               	decfsz	wreg,f,c
  1430  0018E4  D7FE               	bra	u5847
  1431  0018E6  2E50               	decfsz	??_main^0,f,c
  1432  0018E8  D7FC               	bra	u5847
  1433  0018EA  2E51               	decfsz	(??_main+1)^0,f,c
  1434  0018EC  D7FA               	bra	u5847
  1435  0018EE  F000               	nop	
  1436  0018F0                     
  1437                           ;main.c: 102:         LATHbits.LATH3 = 1;
  1438  0018F0  8680               	bsf	128,3,c	;volatile
  1439  0018F2                     l316:
  1440  0018F2  B68E               	btfsc	142,3,c	;volatile
  1441  0018F4  EF7E  F00C         	goto	u5791
  1442  0018F8  EF80  F00C         	goto	u5790
  1443  0018FC                     u5791:
  1444  0018FC  EF79  F00C         	goto	l316
  1445  001900                     u5790:
  1446  001900                     
  1447                           ;main.c: 104:         if (!PORTFbits.RF3){
  1448  001900  B68E               	btfsc	142,3,c	;volatile
  1449  001902  EF85  F00C         	goto	u5801
  1450  001906  EF87  F00C         	goto	u5800
  1451  00190A                     u5801:
  1452  00190A  EF8D  F00C         	goto	l5550
  1453  00190E                     u5800:
  1454  00190E                     
  1455                           ;main.c: 105:             LATHbits.LATH3 = 0;
  1456  00190E  9680               	bcf	128,3,c	;volatile
  1457  001910                     
  1458                           ;main.c: 106:             cal = 1;
  1459  001910  0E00               	movlw	0
  1460  001912  0101               	movlb	1	; () banked
  1461  001914  6F6D               	movwf	(main@cal+1)& (0+255),b
  1462  001916  0E01               	movlw	1
  1463  001918  6F6C               	movwf	main@cal& (0+255),b
  1464  00191A                     l5550:
  1465                           
  1466                           ;main.c: 81:     while(cal==0){
  1467  00191A  0101               	movlb	1	; () banked
  1468  00191C  516C               	movf	main@cal& (0+255),w,b
  1469  00191E  116D               	iorwf	(main@cal+1)& (0+255),w,b
  1470  001920  B4D8               	btfsc	status,2,c
  1471  001922  EF95  F00C         	goto	u5811
  1472  001926  EF97  F00C         	goto	u5810
  1473  00192A                     u5811:
  1474  00192A  EF1B  F00C         	goto	l311
  1475  00192E                     u5810:
  1476  00192E                     l321:
  1477                           
  1478                           ;main.c: 111:         unsigned int output;;main.c: 112:         LATGbits.LATG1=1;
  1479  00192E  827F               	bsf	127,1,c	;volatile
  1480                           
  1481                           ;main.c: 113:         LATAbits.LATA4=1;
  1482  001930  8879               	bsf	121,4,c	;volatile
  1483                           
  1484                           ;main.c: 114:         LATFbits.LATF7=0;
  1485  001932  9E7E               	bcf	126,7,c	;volatile
  1486  001934                     
  1487                           ;main.c: 115:         read_colours(&test);
  1488  001934  0E92               	movlw	low main@test
  1489  001936  6E10               	movwf	read_colours@m^0,c
  1490  001938  0E01               	movlw	high main@test
  1491  00193A  6E11               	movwf	(read_colours@m+1)^0,c
  1492  00193C  EC58  F01E         	call	_read_colours	;wreg free
  1493                           
  1494                           ;main.c: 116:         output = determine_color_new(&test);
  1495  001940  0E92               	movlw	low main@test
  1496  001942  6E37               	movwf	determine_color_new@m^0,c
  1497  001944  0E01               	movlw	high main@test
  1498  001946  6E38               	movwf	(determine_color_new@m+1)^0,c
  1499  001948  EC27  F007         	call	_determine_color_new	;wreg free
  1500  00194C  C037  F164         	movff	?_determine_color_new,main@output
  1501  001950  C038  F165         	movff	?_determine_color_new+1,main@output+1
  1502  001954                     
  1503                           ;main.c: 117:         RedRatio = ((float)test.R) / ((float)test.C);
  1504  001954  C19C  F00B         	movff	main@test+10,___xxtofl@val
  1505  001958  C19D  F00C         	movff	main@test+11,___xxtofl@val+1
  1506  00195C  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1507  00195E  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1508  001960  0E00               	movlw	0
  1509  001962  ECC3  F018         	call	___xxtofl
  1510  001966  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  1511  00196A  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  1512  00196E  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  1513  001972  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  1514  001976  C19A  F00B         	movff	main@test+8,___xxtofl@val
  1515  00197A  C19B  F00C         	movff	main@test+9,___xxtofl@val+1
  1516  00197E  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1517  001980  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1518  001982  0E00               	movlw	0
  1519  001984  ECC3  F018         	call	___xxtofl
  1520  001988  C00B  F022         	movff	?___xxtofl,___fldiv@a
  1521  00198C  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  1522  001990  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  1523  001994  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  1524  001998  ECBF  F013         	call	___fldiv	;wreg free
  1525  00199C  C01E  F16E         	movff	?___fldiv,main@RedRatio
  1526  0019A0  C01F  F16F         	movff	?___fldiv+1,main@RedRatio+1
  1527  0019A4  C020  F170         	movff	?___fldiv+2,main@RedRatio+2
  1528  0019A8  C021  F171         	movff	?___fldiv+3,main@RedRatio+3
  1529  0019AC                     
  1530                           ;main.c: 118:         GreenRatio = ((float)test.G) / ((float)test.C);
  1531  0019AC  C19E  F00B         	movff	main@test+12,___xxtofl@val
  1532  0019B0  C19F  F00C         	movff	main@test+13,___xxtofl@val+1
  1533  0019B4  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1534  0019B6  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1535  0019B8  0E00               	movlw	0
  1536  0019BA  ECC3  F018         	call	___xxtofl
  1537  0019BE  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  1538  0019C2  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  1539  0019C6  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  1540  0019CA  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  1541  0019CE  C19A  F00B         	movff	main@test+8,___xxtofl@val
  1542  0019D2  C19B  F00C         	movff	main@test+9,___xxtofl@val+1
  1543  0019D6  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1544  0019D8  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1545  0019DA  0E00               	movlw	0
  1546  0019DC  ECC3  F018         	call	___xxtofl
  1547  0019E0  C00B  F022         	movff	?___xxtofl,___fldiv@a
  1548  0019E4  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  1549  0019E8  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  1550  0019EC  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  1551  0019F0  ECBF  F013         	call	___fldiv	;wreg free
  1552  0019F4  C01E  F172         	movff	?___fldiv,main@GreenRatio
  1553  0019F8  C01F  F173         	movff	?___fldiv+1,main@GreenRatio+1
  1554  0019FC  C020  F174         	movff	?___fldiv+2,main@GreenRatio+2
  1555  001A00  C021  F175         	movff	?___fldiv+3,main@GreenRatio+3
  1556  001A04                     
  1557                           ;main.c: 119:         BlueRatio = ((float)test.B) / ((float)test.C);
  1558  001A04  C1A0  F00B         	movff	main@test+14,___xxtofl@val
  1559  001A08  C1A1  F00C         	movff	main@test+15,___xxtofl@val+1
  1560  001A0C  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1561  001A0E  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1562  001A10  0E00               	movlw	0
  1563  001A12  ECC3  F018         	call	___xxtofl
  1564  001A16  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  1565  001A1A  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  1566  001A1E  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  1567  001A22  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  1568  001A26  C19A  F00B         	movff	main@test+8,___xxtofl@val
  1569  001A2A  C19B  F00C         	movff	main@test+9,___xxtofl@val+1
  1570  001A2E  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1571  001A30  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1572  001A32  0E00               	movlw	0
  1573  001A34  ECC3  F018         	call	___xxtofl
  1574  001A38  C00B  F022         	movff	?___xxtofl,___fldiv@a
  1575  001A3C  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  1576  001A40  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  1577  001A44  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  1578  001A48  ECBF  F013         	call	___fldiv	;wreg free
  1579  001A4C  C01E  F176         	movff	?___fldiv,main@BlueRatio
  1580  001A50  C01F  F177         	movff	?___fldiv+1,main@BlueRatio+1
  1581  001A54  C020  F178         	movff	?___fldiv+2,main@BlueRatio+2
  1582  001A58  C021  F179         	movff	?___fldiv+3,main@BlueRatio+3
  1583  001A5C                     
  1584                           ;main.c: 120:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1585  001A5C  0E05               	movlw	5
  1586  001A5E  6E51               	movwf	(??_main+1)^0,c
  1587  001A60  0E0F               	movlw	15
  1588  001A62  6E50               	movwf	??_main^0,c
  1589  001A64  0EF1               	movlw	241
  1590  001A66                     u5857:
  1591  001A66  2EE8               	decfsz	wreg,f,c
  1592  001A68  D7FE               	bra	u5857
  1593  001A6A  2E50               	decfsz	??_main^0,f,c
  1594  001A6C  D7FC               	bra	u5857
  1595  001A6E  2E51               	decfsz	(??_main+1)^0,f,c
  1596  001A70  D7FA               	bra	u5857
  1597  001A72  F000               	nop	
  1598  001A74                     
  1599                           ;main.c: 121:         LATGbits.LATG1=0;
  1600  001A74  927F               	bcf	127,1,c	;volatile
  1601  001A76                     
  1602                           ;main.c: 122:         LATAbits.LATA4=0;
  1603  001A76  9879               	bcf	121,4,c	;volatile
  1604  001A78                     
  1605                           ;main.c: 123:         LATFbits.LATF7=0;
  1606  001A78  9E7E               	bcf	126,7,c	;volatile
  1607  001A7A                     
  1608                           ;main.c: 124:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1609  001A7A  0E05               	movlw	5
  1610  001A7C  6E51               	movwf	(??_main+1)^0,c
  1611  001A7E  0E0F               	movlw	15
  1612  001A80  6E50               	movwf	??_main^0,c
  1613  001A82  0EF1               	movlw	241
  1614  001A84                     u5867:
  1615  001A84  2EE8               	decfsz	wreg,f,c
  1616  001A86  D7FE               	bra	u5867
  1617  001A88  2E50               	decfsz	??_main^0,f,c
  1618  001A8A  D7FC               	bra	u5867
  1619  001A8C  2E51               	decfsz	(??_main+1)^0,f,c
  1620  001A8E  D7FA               	bra	u5867
  1621  001A90  F000               	nop	
  1622  001A92                     
  1623                           ;main.c: 126:         unsigned int int_part1 = RedRatio/1;
  1624  001A92  0E00               	movlw	0
  1625  001A94  6E22               	movwf	___fldiv@a^0,c
  1626  001A96  0E00               	movlw	0
  1627  001A98  6E23               	movwf	(___fldiv@a+1)^0,c
  1628  001A9A  0E80               	movlw	128
  1629  001A9C  6E24               	movwf	(___fldiv@a+2)^0,c
  1630  001A9E  0E3F               	movlw	63
  1631  001AA0  6E25               	movwf	(___fldiv@a+3)^0,c
  1632  001AA2  C16E  F01E         	movff	main@RedRatio,___fldiv@b
  1633  001AA6  C16F  F01F         	movff	main@RedRatio+1,___fldiv@b+1
  1634  001AAA  C170  F020         	movff	main@RedRatio+2,___fldiv@b+2
  1635  001AAE  C171  F021         	movff	main@RedRatio+3,___fldiv@b+3
  1636  001AB2  ECBF  F013         	call	___fldiv	;wreg free
  1637  001AB6  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1638  001ABA  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1639  001ABE  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1640  001AC2  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1641  001AC6  ECE5  F01B         	call	___fltol	;wreg free
  1642  001ACA  C03F  F17A         	movff	?___fltol,main@int_part1
  1643  001ACE  C040  F17B         	movff	?___fltol+1,main@int_part1+1
  1644  001AD2                     
  1645                           ;main.c: 127:         unsigned int frac_part1 =(RedRatio*1000)/1 - int_part1*1000;
  1646  001AD2  0E03               	movlw	3
  1647  001AD4  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1648  001AD6  0EE8               	movlw	232
  1649  001AD8  6E07               	movwf	___wmul@multiplicand^0,c
  1650  001ADA  C17A  F005         	movff	main@int_part1,___wmul@multiplier
  1651  001ADE  C17B  F006         	movff	main@int_part1+1,___wmul@multiplier+1
  1652  001AE2  EC6D  F021         	call	___wmul	;wreg free
  1653  001AE6  C005  F00B         	movff	?___wmul,___xxtofl@val
  1654  001AEA  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1655  001AEE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1656  001AF0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1657  001AF2  0E00               	movlw	0
  1658  001AF4  ECC3  F018         	call	___xxtofl
  1659  001AF8  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1660  001AFC  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1661  001B00  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1662  001B04  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1663  001B08  0E00               	movlw	0
  1664  001B0A  6E22               	movwf	___fldiv@a^0,c
  1665  001B0C  0E00               	movlw	0
  1666  001B0E  6E23               	movwf	(___fldiv@a+1)^0,c
  1667  001B10  0E80               	movlw	128
  1668  001B12  6E24               	movwf	(___fldiv@a+2)^0,c
  1669  001B14  0E3F               	movlw	63
  1670  001B16  6E25               	movwf	(___fldiv@a+3)^0,c
  1671  001B18  0E00               	movlw	0
  1672  001B1A  6E09               	movwf	___flmul@a^0,c
  1673  001B1C  0E00               	movlw	0
  1674  001B1E  6E0A               	movwf	(___flmul@a+1)^0,c
  1675  001B20  0E7A               	movlw	122
  1676  001B22  6E0B               	movwf	(___flmul@a+2)^0,c
  1677  001B24  0E44               	movlw	68
  1678  001B26  6E0C               	movwf	(___flmul@a+3)^0,c
  1679  001B28  C16E  F005         	movff	main@RedRatio,___flmul@b
  1680  001B2C  C16F  F006         	movff	main@RedRatio+1,___flmul@b+1
  1681  001B30  C170  F007         	movff	main@RedRatio+2,___flmul@b+2
  1682  001B34  C171  F008         	movff	main@RedRatio+3,___flmul@b+3
  1683  001B38  ECAA  F011         	call	___flmul	;wreg free
  1684  001B3C  C005  F01E         	movff	?___flmul,___fldiv@b
  1685  001B40  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1686  001B44  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1687  001B48  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1688  001B4C  ECBF  F013         	call	___fldiv	;wreg free
  1689  001B50  C01E  F037         	movff	?___fldiv,___flsub@b
  1690  001B54  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1691  001B58  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1692  001B5C  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1693  001B60  ECD9  F01F         	call	___flsub	;wreg free
  1694  001B64  C037  F03F         	movff	?___flsub,___fltol@f1
  1695  001B68  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1696  001B6C  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1697  001B70  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1698  001B74  ECE5  F01B         	call	___fltol	;wreg free
  1699  001B78  C03F  F166         	movff	?___fltol,main@frac_part1
  1700  001B7C  C040  F167         	movff	?___fltol+1,main@frac_part1+1
  1701  001B80                     
  1702                           ;main.c: 128:         sprintf(string1," R:%d.%03d ",int_part1, frac_part1);
  1703  001B80  0E28               	movlw	low main@string1
  1704  001B82  0100               	movlb	0	; () banked
  1705  001B84  6FEC               	movwf	sprintf@s& (0+255),b
  1706  001B86  0E01               	movlw	high main@string1
  1707  001B88  6FED               	movwf	(sprintf@s+1)& (0+255),b
  1708  001B8A  0E40               	movlw	low STR_2
  1709  001B8C  6FEE               	movwf	sprintf@fmt& (0+255),b
  1710  001B8E  0E0E               	movlw	high STR_2
  1711  001B90  6FEF               	movwf	(sprintf@fmt+1)& (0+255),b
  1712  001B92  C17A  F0F0         	movff	main@int_part1,?_sprintf+4
  1713  001B96  C17B  F0F1         	movff	main@int_part1+1,?_sprintf+5
  1714  001B9A  C166  F0F2         	movff	main@frac_part1,?_sprintf+6
  1715  001B9E  C167  F0F3         	movff	main@frac_part1+1,?_sprintf+7
  1716  001BA2  ECE7  F01E         	call	_sprintf	;wreg free
  1717  001BA6                     
  1718                           ;main.c: 129:         TxBufferedString(string1);
  1719  001BA6  0E28               	movlw	low main@string1
  1720  001BA8  6E06               	movwf	TxBufferedString@string^0,c
  1721  001BAA  0E01               	movlw	high main@string1
  1722  001BAC  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1723  001BAE  ECEC  F020         	call	_TxBufferedString	;wreg free
  1724  001BB2                     
  1725                           ;main.c: 130:         sendTxBuf();
  1726  001BB2  ECA0  F021         	call	_sendTxBuf	;wreg free
  1727  001BB6                     
  1728                           ;main.c: 131:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1729  001BB6  0E05               	movlw	5
  1730  001BB8  6E51               	movwf	(??_main+1)^0,c
  1731  001BBA  0E0F               	movlw	15
  1732  001BBC  6E50               	movwf	??_main^0,c
  1733  001BBE  0EF1               	movlw	241
  1734  001BC0                     u5877:
  1735  001BC0  2EE8               	decfsz	wreg,f,c
  1736  001BC2  D7FE               	bra	u5877
  1737  001BC4  2E50               	decfsz	??_main^0,f,c
  1738  001BC6  D7FC               	bra	u5877
  1739  001BC8  2E51               	decfsz	(??_main+1)^0,f,c
  1740  001BCA  D7FA               	bra	u5877
  1741  001BCC  F000               	nop	
  1742  001BCE                     
  1743                           ;main.c: 133:         unsigned int int_part2 = GreenRatio/1;
  1744  001BCE  0E00               	movlw	0
  1745  001BD0  6E22               	movwf	___fldiv@a^0,c
  1746  001BD2  0E00               	movlw	0
  1747  001BD4  6E23               	movwf	(___fldiv@a+1)^0,c
  1748  001BD6  0E80               	movlw	128
  1749  001BD8  6E24               	movwf	(___fldiv@a+2)^0,c
  1750  001BDA  0E3F               	movlw	63
  1751  001BDC  6E25               	movwf	(___fldiv@a+3)^0,c
  1752  001BDE  C172  F01E         	movff	main@GreenRatio,___fldiv@b
  1753  001BE2  C173  F01F         	movff	main@GreenRatio+1,___fldiv@b+1
  1754  001BE6  C174  F020         	movff	main@GreenRatio+2,___fldiv@b+2
  1755  001BEA  C175  F021         	movff	main@GreenRatio+3,___fldiv@b+3
  1756  001BEE  ECBF  F013         	call	___fldiv	;wreg free
  1757  001BF2  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1758  001BF6  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1759  001BFA  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1760  001BFE  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1761  001C02  ECE5  F01B         	call	___fltol	;wreg free
  1762  001C06  C03F  F17C         	movff	?___fltol,main@int_part2
  1763  001C0A  C040  F17D         	movff	?___fltol+1,main@int_part2+1
  1764  001C0E                     
  1765                           ;main.c: 134:         unsigned int frac_part2 =(GreenRatio*1000)/1 - int_part2*1000;
  1766  001C0E  0E03               	movlw	3
  1767  001C10  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1768  001C12  0EE8               	movlw	232
  1769  001C14  6E07               	movwf	___wmul@multiplicand^0,c
  1770  001C16  C17C  F005         	movff	main@int_part2,___wmul@multiplier
  1771  001C1A  C17D  F006         	movff	main@int_part2+1,___wmul@multiplier+1
  1772  001C1E  EC6D  F021         	call	___wmul	;wreg free
  1773  001C22  C005  F00B         	movff	?___wmul,___xxtofl@val
  1774  001C26  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1775  001C2A  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1776  001C2C  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1777  001C2E  0E00               	movlw	0
  1778  001C30  ECC3  F018         	call	___xxtofl
  1779  001C34  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1780  001C38  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1781  001C3C  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1782  001C40  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1783  001C44  0E00               	movlw	0
  1784  001C46  6E22               	movwf	___fldiv@a^0,c
  1785  001C48  0E00               	movlw	0
  1786  001C4A  6E23               	movwf	(___fldiv@a+1)^0,c
  1787  001C4C  0E80               	movlw	128
  1788  001C4E  6E24               	movwf	(___fldiv@a+2)^0,c
  1789  001C50  0E3F               	movlw	63
  1790  001C52  6E25               	movwf	(___fldiv@a+3)^0,c
  1791  001C54  0E00               	movlw	0
  1792  001C56  6E09               	movwf	___flmul@a^0,c
  1793  001C58  0E00               	movlw	0
  1794  001C5A  6E0A               	movwf	(___flmul@a+1)^0,c
  1795  001C5C  0E7A               	movlw	122
  1796  001C5E  6E0B               	movwf	(___flmul@a+2)^0,c
  1797  001C60  0E44               	movlw	68
  1798  001C62  6E0C               	movwf	(___flmul@a+3)^0,c
  1799  001C64  C172  F005         	movff	main@GreenRatio,___flmul@b
  1800  001C68  C173  F006         	movff	main@GreenRatio+1,___flmul@b+1
  1801  001C6C  C174  F007         	movff	main@GreenRatio+2,___flmul@b+2
  1802  001C70  C175  F008         	movff	main@GreenRatio+3,___flmul@b+3
  1803  001C74  ECAA  F011         	call	___flmul	;wreg free
  1804  001C78  C005  F01E         	movff	?___flmul,___fldiv@b
  1805  001C7C  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1806  001C80  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1807  001C84  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1808  001C88  ECBF  F013         	call	___fldiv	;wreg free
  1809  001C8C  C01E  F037         	movff	?___fldiv,___flsub@b
  1810  001C90  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1811  001C94  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1812  001C98  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1813  001C9C  ECD9  F01F         	call	___flsub	;wreg free
  1814  001CA0  C037  F03F         	movff	?___flsub,___fltol@f1
  1815  001CA4  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1816  001CA8  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1817  001CAC  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1818  001CB0  ECE5  F01B         	call	___fltol	;wreg free
  1819  001CB4  C03F  F168         	movff	?___fltol,main@frac_part2
  1820  001CB8  C040  F169         	movff	?___fltol+1,main@frac_part2+1
  1821  001CBC                     
  1822                           ;main.c: 135:         sprintf(string2," G:%d.%03d ",int_part2, frac_part2);
  1823  001CBC  0E3C               	movlw	low main@string2
  1824  001CBE  0100               	movlb	0	; () banked
  1825  001CC0  6FEC               	movwf	sprintf@s& (0+255),b
  1826  001CC2  0E01               	movlw	high main@string2
  1827  001CC4  6FED               	movwf	(sprintf@s+1)& (0+255),b
  1828  001CC6  0E34               	movlw	low STR_3
  1829  001CC8  6FEE               	movwf	sprintf@fmt& (0+255),b
  1830  001CCA  0E0E               	movlw	high STR_3
  1831  001CCC  6FEF               	movwf	(sprintf@fmt+1)& (0+255),b
  1832  001CCE  C17C  F0F0         	movff	main@int_part2,?_sprintf+4
  1833  001CD2  C17D  F0F1         	movff	main@int_part2+1,?_sprintf+5
  1834  001CD6  C168  F0F2         	movff	main@frac_part2,?_sprintf+6
  1835  001CDA  C169  F0F3         	movff	main@frac_part2+1,?_sprintf+7
  1836  001CDE  ECE7  F01E         	call	_sprintf	;wreg free
  1837  001CE2                     
  1838                           ;main.c: 136:         TxBufferedString(string2);
  1839  001CE2  0E3C               	movlw	low main@string2
  1840  001CE4  6E06               	movwf	TxBufferedString@string^0,c
  1841  001CE6  0E01               	movlw	high main@string2
  1842  001CE8  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1843  001CEA  ECEC  F020         	call	_TxBufferedString	;wreg free
  1844  001CEE                     
  1845                           ;main.c: 137:         sendTxBuf();
  1846  001CEE  ECA0  F021         	call	_sendTxBuf	;wreg free
  1847  001CF2                     
  1848                           ;main.c: 138:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1849  001CF2  0E05               	movlw	5
  1850  001CF4  6E51               	movwf	(??_main+1)^0,c
  1851  001CF6  0E0F               	movlw	15
  1852  001CF8  6E50               	movwf	??_main^0,c
  1853  001CFA  0EF1               	movlw	241
  1854  001CFC                     u5887:
  1855  001CFC  2EE8               	decfsz	wreg,f,c
  1856  001CFE  D7FE               	bra	u5887
  1857  001D00  2E50               	decfsz	??_main^0,f,c
  1858  001D02  D7FC               	bra	u5887
  1859  001D04  2E51               	decfsz	(??_main+1)^0,f,c
  1860  001D06  D7FA               	bra	u5887
  1861  001D08  F000               	nop	
  1862  001D0A                     
  1863                           ;main.c: 140:         unsigned int int_part3 = BlueRatio/1;
  1864  001D0A  0E00               	movlw	0
  1865  001D0C  6E22               	movwf	___fldiv@a^0,c
  1866  001D0E  0E00               	movlw	0
  1867  001D10  6E23               	movwf	(___fldiv@a+1)^0,c
  1868  001D12  0E80               	movlw	128
  1869  001D14  6E24               	movwf	(___fldiv@a+2)^0,c
  1870  001D16  0E3F               	movlw	63
  1871  001D18  6E25               	movwf	(___fldiv@a+3)^0,c
  1872  001D1A  C176  F01E         	movff	main@BlueRatio,___fldiv@b
  1873  001D1E  C177  F01F         	movff	main@BlueRatio+1,___fldiv@b+1
  1874  001D22  C178  F020         	movff	main@BlueRatio+2,___fldiv@b+2
  1875  001D26  C179  F021         	movff	main@BlueRatio+3,___fldiv@b+3
  1876  001D2A  ECBF  F013         	call	___fldiv	;wreg free
  1877  001D2E  C01E  F03F         	movff	?___fldiv,___fltol@f1
  1878  001D32  C01F  F040         	movff	?___fldiv+1,___fltol@f1+1
  1879  001D36  C020  F041         	movff	?___fldiv+2,___fltol@f1+2
  1880  001D3A  C021  F042         	movff	?___fldiv+3,___fltol@f1+3
  1881  001D3E  ECE5  F01B         	call	___fltol	;wreg free
  1882  001D42  C03F  F17E         	movff	?___fltol,main@int_part3
  1883  001D46  C040  F17F         	movff	?___fltol+1,main@int_part3+1
  1884  001D4A                     
  1885                           ;main.c: 141:         unsigned int frac_part3 =(BlueRatio*1000)/1 - int_part3*1000;
  1886  001D4A  0E03               	movlw	3
  1887  001D4C  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1888  001D4E  0EE8               	movlw	232
  1889  001D50  6E07               	movwf	___wmul@multiplicand^0,c
  1890  001D52  C17E  F005         	movff	main@int_part3,___wmul@multiplier
  1891  001D56  C17F  F006         	movff	main@int_part3+1,___wmul@multiplier+1
  1892  001D5A  EC6D  F021         	call	___wmul	;wreg free
  1893  001D5E  C005  F00B         	movff	?___wmul,___xxtofl@val
  1894  001D62  C006  F00C         	movff	?___wmul+1,___xxtofl@val+1
  1895  001D66  6A0D               	clrf	(___xxtofl@val+2)^0,c
  1896  001D68  6A0E               	clrf	(___xxtofl@val+3)^0,c
  1897  001D6A  0E00               	movlw	0
  1898  001D6C  ECC3  F018         	call	___xxtofl
  1899  001D70  C00B  F03B         	movff	?___xxtofl,___flsub@a
  1900  001D74  C00C  F03C         	movff	?___xxtofl+1,___flsub@a+1
  1901  001D78  C00D  F03D         	movff	?___xxtofl+2,___flsub@a+2
  1902  001D7C  C00E  F03E         	movff	?___xxtofl+3,___flsub@a+3
  1903  001D80  0E00               	movlw	0
  1904  001D82  6E22               	movwf	___fldiv@a^0,c
  1905  001D84  0E00               	movlw	0
  1906  001D86  6E23               	movwf	(___fldiv@a+1)^0,c
  1907  001D88  0E80               	movlw	128
  1908  001D8A  6E24               	movwf	(___fldiv@a+2)^0,c
  1909  001D8C  0E3F               	movlw	63
  1910  001D8E  6E25               	movwf	(___fldiv@a+3)^0,c
  1911  001D90  0E00               	movlw	0
  1912  001D92  6E09               	movwf	___flmul@a^0,c
  1913  001D94  0E00               	movlw	0
  1914  001D96  6E0A               	movwf	(___flmul@a+1)^0,c
  1915  001D98  0E7A               	movlw	122
  1916  001D9A  6E0B               	movwf	(___flmul@a+2)^0,c
  1917  001D9C  0E44               	movlw	68
  1918  001D9E  6E0C               	movwf	(___flmul@a+3)^0,c
  1919  001DA0  C176  F005         	movff	main@BlueRatio,___flmul@b
  1920  001DA4  C177  F006         	movff	main@BlueRatio+1,___flmul@b+1
  1921  001DA8  C178  F007         	movff	main@BlueRatio+2,___flmul@b+2
  1922  001DAC  C179  F008         	movff	main@BlueRatio+3,___flmul@b+3
  1923  001DB0  ECAA  F011         	call	___flmul	;wreg free
  1924  001DB4  C005  F01E         	movff	?___flmul,___fldiv@b
  1925  001DB8  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  1926  001DBC  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  1927  001DC0  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  1928  001DC4  ECBF  F013         	call	___fldiv	;wreg free
  1929  001DC8  C01E  F037         	movff	?___fldiv,___flsub@b
  1930  001DCC  C01F  F038         	movff	?___fldiv+1,___flsub@b+1
  1931  001DD0  C020  F039         	movff	?___fldiv+2,___flsub@b+2
  1932  001DD4  C021  F03A         	movff	?___fldiv+3,___flsub@b+3
  1933  001DD8  ECD9  F01F         	call	___flsub	;wreg free
  1934  001DDC  C037  F03F         	movff	?___flsub,___fltol@f1
  1935  001DE0  C038  F040         	movff	?___flsub+1,___fltol@f1+1
  1936  001DE4  C039  F041         	movff	?___flsub+2,___fltol@f1+2
  1937  001DE8  C03A  F042         	movff	?___flsub+3,___fltol@f1+3
  1938  001DEC  ECE5  F01B         	call	___fltol	;wreg free
  1939  001DF0  C03F  F16A         	movff	?___fltol,main@frac_part3
  1940  001DF4  C040  F16B         	movff	?___fltol+1,main@frac_part3+1
  1941  001DF8                     
  1942                           ;main.c: 142:         sprintf(string3," B:%d.%03d ",int_part3, frac_part3);
  1943  001DF8  0E50               	movlw	low main@string3
  1944  001DFA  0100               	movlb	0	; () banked
  1945  001DFC  6FEC               	movwf	sprintf@s& (0+255),b
  1946  001DFE  0E01               	movlw	high main@string3
  1947  001E00  6FED               	movwf	(sprintf@s+1)& (0+255),b
  1948  001E02  0E28               	movlw	low STR_4
  1949  001E04  6FEE               	movwf	sprintf@fmt& (0+255),b
  1950  001E06  0E0E               	movlw	high STR_4
  1951  001E08  6FEF               	movwf	(sprintf@fmt+1)& (0+255),b
  1952  001E0A  C17E  F0F0         	movff	main@int_part3,?_sprintf+4
  1953  001E0E  C17F  F0F1         	movff	main@int_part3+1,?_sprintf+5
  1954  001E12  C16A  F0F2         	movff	main@frac_part3,?_sprintf+6
  1955  001E16  C16B  F0F3         	movff	main@frac_part3+1,?_sprintf+7
  1956  001E1A  ECE7  F01E         	call	_sprintf	;wreg free
  1957  001E1E                     
  1958                           ;main.c: 143:         TxBufferedString(string3);
  1959  001E1E  0E50               	movlw	low main@string3
  1960  001E20  6E06               	movwf	TxBufferedString@string^0,c
  1961  001E22  0E01               	movlw	high main@string3
  1962  001E24  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1963  001E26  ECEC  F020         	call	_TxBufferedString	;wreg free
  1964  001E2A                     
  1965                           ;main.c: 144:         sendTxBuf();
  1966  001E2A  ECA0  F021         	call	_sendTxBuf	;wreg free
  1967  001E2E                     
  1968                           ;main.c: 145:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1969  001E2E  0E05               	movlw	5
  1970  001E30  6E51               	movwf	(??_main+1)^0,c
  1971  001E32  0E0F               	movlw	15
  1972  001E34  6E50               	movwf	??_main^0,c
  1973  001E36  0EF1               	movlw	241
  1974  001E38                     u5897:
  1975  001E38  2EE8               	decfsz	wreg,f,c
  1976  001E3A  D7FE               	bra	u5897
  1977  001E3C  2E50               	decfsz	??_main^0,f,c
  1978  001E3E  D7FC               	bra	u5897
  1979  001E40  2E51               	decfsz	(??_main+1)^0,f,c
  1980  001E42  D7FA               	bra	u5897
  1981  001E44  F000               	nop	
  1982  001E46                     
  1983                           ;main.c: 147:         sprintf(string," Color:%d \r\n",output);
  1984  001E46  0E00               	movlw	low main@string
  1985  001E48  0100               	movlb	0	; () banked
  1986  001E4A  6FEC               	movwf	sprintf@s& (0+255),b
  1987  001E4C  0E01               	movlw	high main@string
  1988  001E4E  6FED               	movwf	(sprintf@s+1)& (0+255),b
  1989  001E50  0E1B               	movlw	low STR_5
  1990  001E52  6FEE               	movwf	sprintf@fmt& (0+255),b
  1991  001E54  0E0E               	movlw	high STR_5
  1992  001E56  6FEF               	movwf	(sprintf@fmt+1)& (0+255),b
  1993  001E58  C164  F0F0         	movff	main@output,?_sprintf+4
  1994  001E5C  C165  F0F1         	movff	main@output+1,?_sprintf+5
  1995  001E60  ECE7  F01E         	call	_sprintf	;wreg free
  1996  001E64                     
  1997                           ;main.c: 148:         TxBufferedString(string);
  1998  001E64  0E00               	movlw	low main@string
  1999  001E66  6E06               	movwf	TxBufferedString@string^0,c
  2000  001E68  0E01               	movlw	high main@string
  2001  001E6A  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2002  001E6C  ECEC  F020         	call	_TxBufferedString	;wreg free
  2003  001E70                     
  2004                           ;main.c: 149:         sendTxBuf();
  2005  001E70  ECA0  F021         	call	_sendTxBuf	;wreg free
  2006  001E74                     
  2007                           ;main.c: 150:         _delay((unsigned long)((50)*(64000000/4000.0)));
  2008  001E74  0E05               	movlw	5
  2009  001E76  6E51               	movwf	(??_main+1)^0,c
  2010  001E78  0E0F               	movlw	15
  2011  001E7A  6E50               	movwf	??_main^0,c
  2012  001E7C  0EF1               	movlw	241
  2013  001E7E                     u5907:
  2014  001E7E  2EE8               	decfsz	wreg,f,c
  2015  001E80  D7FE               	bra	u5907
  2016  001E82  2E50               	decfsz	??_main^0,f,c
  2017  001E84  D7FC               	bra	u5907
  2018  001E86  2E51               	decfsz	(??_main+1)^0,f,c
  2019  001E88  D7FA               	bra	u5907
  2020  001E8A  F000               	nop	
  2021  001E8C  EF97  F00C         	goto	l321
  2022  001E90  EF3B  F000         	goto	start
  2023  001E94                     __end_of_main:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _sprintf *****************
  2027 ;; Defined at:
  2028 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2031 ;;		 -> main@string(20), main@string3(20), main@string2(20), main@string1(20), 
  2032 ;;		 -> main@string0(20), 
  2033 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2034 ;;		 -> STR_5(13), STR_4(12), STR_3(12), STR_2(12), 
  2035 ;;		 -> STR_1(22), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  f               6   30[BANK0 ] struct _IO_FILE
  2038 ;;  ap              2   28[BANK0 ] PTR void [1]
  2039 ;;		 -> ?_sprintf(2), 
  2040 ;;  ret             2    0        int 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2   18[BANK0 ] int 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2050 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2054 ;;Total ram usage:       18 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 9
  2057 ;; This function calls:
  2058 ;;		_vfprintf
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text1
  2065  003DCE                     __ptext1:
  2066                           	callstack 0
  2067  003DCE                     _sprintf:
  2068                           	callstack 21
  2069  003DCE  0EF0               	movlw	low (?_sprintf+4)
  2070  003DD0  0100               	movlb	0	; () banked
  2071  003DD2  6FF6               	movwf	sprintf@ap& (0+255),b
  2072  003DD4  0E00               	movlw	high (?_sprintf+4)
  2073  003DD6  6FF7               	movwf	(sprintf@ap+1)& (0+255),b
  2074  003DD8  C0EC  F0F8         	movff	sprintf@s,sprintf@f
  2075  003DDC  C0ED  F0F9         	movff	sprintf@s+1,sprintf@f+1
  2076  003DE0                     
  2077                           ; BSR set to: 0
  2078  003DE0  0E00               	movlw	0
  2079  003DE2  6FFB               	movwf	(sprintf@f+3)& (0+255),b
  2080  003DE4  0E00               	movlw	0
  2081  003DE6  6FFA               	movwf	(sprintf@f+2)& (0+255),b
  2082  003DE8                     
  2083                           ; BSR set to: 0
  2084  003DE8  0E00               	movlw	0
  2085  003DEA  6FFD               	movwf	(sprintf@f+5)& (0+255),b
  2086  003DEC  0E00               	movlw	0
  2087  003DEE  6FFC               	movwf	(sprintf@f+4)& (0+255),b
  2088  003DF0                     
  2089                           ; BSR set to: 0
  2090  003DF0  0EF8               	movlw	low sprintf@f
  2091  003DF2  6FE6               	movwf	vfprintf@fp& (0+255),b
  2092  003DF4  0E00               	movlw	high sprintf@f
  2093  003DF6  6FE7               	movwf	(vfprintf@fp+1)& (0+255),b
  2094  003DF8  C0EE  F0E8         	movff	sprintf@fmt,vfprintf@fmt
  2095  003DFC  C0EF  F0E9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2096  003E00  0EF6               	movlw	low sprintf@ap
  2097  003E02  6FEA               	movwf	vfprintf@ap& (0+255),b
  2098  003E04  0E00               	movlw	high sprintf@ap
  2099  003E06  6FEB               	movwf	(vfprintf@ap+1)& (0+255),b
  2100  003E08  EC25  F01E         	call	_vfprintf	;wreg free
  2101  003E0C  0100               	movlb	0	; () banked
  2102  003E0E  51FA               	movf	(sprintf@f+2)& (0+255),w,b
  2103  003E10  25EC               	addwf	sprintf@s& (0+255),w,b
  2104  003E12  6ED9               	movwf	fsr2l,c
  2105  003E14  51FB               	movf	(sprintf@f+3)& (0+255),w,b
  2106  003E16  21ED               	addwfc	(sprintf@s+1)& (0+255),w,b
  2107  003E18  6EDA               	movwf	fsr2h,c
  2108  003E1A  0E00               	movlw	0
  2109  003E1C  6EDF               	movwf	indf2,c
  2110  003E1E                     
  2111                           ; BSR set to: 0
  2112  003E1E  0012               	return		;funcret
  2113  003E20                     __end_of_sprintf:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _vfprintf *****************
  2117 ;; Defined at:
  2118 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2121 ;;		 -> sprintf@f(6), 
  2122 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2123 ;;		 -> STR_5(13), STR_4(12), STR_3(12), STR_2(12), 
  2124 ;;		 -> STR_1(22), 
  2125 ;;  ap              2   16[BANK0 ] PTR PTR void 
  2126 ;;		 -> sprintf@ap(2), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  2129 ;;		 -> STR_5(13), STR_4(12), STR_3(12), STR_2(12), 
  2130 ;;		 -> STR_1(22), 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  2   12[BANK0 ] int 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2140 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;Total ram usage:        8 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 8
  2147 ;; This function calls:
  2148 ;;		_vfpfcnvrt
  2149 ;; This function is called by:
  2150 ;;		_sprintf
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text2
  2155  003C4A                     __ptext2:
  2156                           	callstack 0
  2157  003C4A                     _vfprintf:
  2158                           	callstack 21
  2159  003C4A                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2161  003C4A  C0E8  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  2162  003C4E  C0E9  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2163  003C52                     
  2164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2165  003C52  0E00               	movlw	0
  2166  003C54  0100               	movlb	0	; () banked
  2167  003C56  6FB3               	movwf	(_nout+1)& (0+255),b
  2168  003C58  0E00               	movlw	0
  2169  003C5A  6FB2               	movwf	_nout& (0+255),b
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2172  003C5C  EF43  F01E         	goto	l5250
  2173  003C60                     l5248:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2177  003C60  C0E6  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  2178  003C64  C0E7  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2179  003C68  0E4E               	movlw	low vfprintf@cfmt
  2180  003C6A  6E46               	movwf	vfpfcnvrt@fmt^0,c
  2181  003C6C  0E00               	movlw	high vfprintf@cfmt
  2182  003C6E  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2183  003C70  C0EA  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  2184  003C74  C0EB  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2185  003C78  EC8C  F015         	call	_vfpfcnvrt	;wreg free
  2186  003C7C  5044               	movf	?_vfpfcnvrt^0,w,c
  2187  003C7E  0100               	movlb	0	; () banked
  2188  003C80  27B2               	addwf	_nout& (0+255),f,b
  2189  003C82  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  2190  003C84  23B3               	addwfc	(_nout+1)& (0+255),f,b
  2191  003C86                     l5250:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2195  003C86  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2196  003C8A  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2197  003C8E                     	if	0	;tblptru may be non-zero
  2198  003C8E                     	endif
  2199  003C8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2200  003C8E  0E00               	movlw	low (__mediumconst shr (0+16))
  2201  003C90  6EF8               	movwf	tblptru,c
  2202  003C92                     	endif
  2203  003C92  0008               	tblrd		*
  2204  003C94  50F5               	movf	tablat,w,c
  2205  003C96  0900               	iorlw	0
  2206  003C98  A4D8               	btfss	status,2,c
  2207  003C9A  EF51  F01E         	goto	u5591
  2208  003C9E  EF53  F01E         	goto	u5590
  2209  003CA2                     u5591:
  2210  003CA2  EF30  F01E         	goto	l5248
  2211  003CA6                     u5590:
  2212  003CA6                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2215  003CA6  C0B2  F0E6         	movff	_nout,?_vfprintf
  2216  003CAA  C0B3  F0E7         	movff	_nout+1,?_vfprintf+1
  2217  003CAE                     
  2218                           ; BSR set to: 0
  2219  003CAE  0012               	return		;funcret
  2220  003CB0                     __end_of_vfprintf:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _vfpfcnvrt *****************
  2224 ;; Defined at:
  2225 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2228 ;;		 -> sprintf@f(6), 
  2229 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  2230 ;;		 -> vfprintf@cfmt(2), 
  2231 ;;  ap              2   71[COMRAM] PTR PTR void 
  2232 ;;		 -> sprintf@ap(2), 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  ll              8    0[BANK0 ] long long 
  2235 ;;  llu             8    0        unsigned long long 
  2236 ;;  f               4    0        unsigned long long 
  2237 ;;  vp              3    0        PTR void 
  2238 ;;  ct              3    0        unsigned char [3]
  2239 ;;  cp              3    0        PTR unsigned char 
  2240 ;;  done            2    8[BANK0 ] int 
  2241 ;;  i               2    0        int 
  2242 ;;  c               1    0        unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2   67[COMRAM] int 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2252 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;      Totals:        10      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;Total ram usage:       22 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 7
  2259 ;; This function calls:
  2260 ;;		_atoi
  2261 ;;		_dtoa
  2262 ;;		_fputc
  2263 ;;		_isdigit
  2264 ;; This function is called by:
  2265 ;;		_vfprintf
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text3
  2270  002B18                     __ptext3:
  2271                           	callstack 0
  2272  002B18                     _vfpfcnvrt:
  2273                           	callstack 21
  2274  002B18                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2276  002B18  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2277  002B1C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  002B20  CFDE FFF6          	movff	postinc2,tblptrl
  2279  002B24  CFDD FFF7          	movff	postdec2,tblptrh
  2280  002B28                     	if	0	;tblptru may be non-zero
  2281  002B28                     	endif
  2282  002B28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2283  002B28  0E00               	movlw	low (__mediumconst shr (0+16))
  2284  002B2A  6EF8               	movwf	tblptru,c
  2285  002B2C                     	endif
  2286  002B2C  0008               	tblrd		*
  2287  002B2E  50F5               	movf	tablat,w,c
  2288  002B30  0A25               	xorlw	37
  2289  002B32  A4D8               	btfss	status,2,c
  2290  002B34  EF9E  F015         	goto	u5441
  2291  002B38  EFA0  F015         	goto	u5440
  2292  002B3C                     u5441:
  2293  002B3C  EF34  F017         	goto	l5184
  2294  002B40                     u5440:
  2295  002B40                     
  2296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2297  002B40  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2298  002B44  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2299  002B48  2ADE               	incf	postinc2,f,c
  2300  002B4A  0E00               	movlw	0
  2301  002B4C  22DD               	addwfc	postdec2,f,c
  2302  002B4E                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2304  002B4E  0E00               	movlw	0
  2305  002B50  0100               	movlb	0	; () banked
  2306  002B52  6FB5               	movwf	(_width+1)& (0+255),b
  2307  002B54  0E00               	movlw	0
  2308  002B56  6FB4               	movwf	_width& (0+255),b
  2309  002B58  C0B4  F0B8         	movff	_width,_flags
  2310  002B5C  C0B5  F0B9         	movff	_width+1,_flags+1
  2311  002B60                     
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2314  002B60  69B6               	setf	_prec& (0+255),b
  2315  002B62  69B7               	setf	(_prec+1)& (0+255),b
  2316  002B64                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2319  002B64  0E00               	movlw	0
  2320  002B66  6FE3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2321  002B68  0E00               	movlw	0
  2322  002B6A  6FE2               	movwf	vfpfcnvrt@done& (0+255),b
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2325  002B6C  EF00  F016         	goto	l5136
  2326  002B70                     l5110:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2330  002B70  81B8               	bsf	_flags& (0+255),0,b
  2331  002B72                     l5112:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2335  002B72  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2336  002B76  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2337  002B7A  2ADE               	incf	postinc2,f,c
  2338  002B7C  0E00               	movlw	0
  2339  002B7E  22DD               	addwfc	postdec2,f,c
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2342  002B80  EF00  F016         	goto	l5136
  2343  002B84                     l5114:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2347  002B84  83B8               	bsf	_flags& (0+255),1,b
  2348  002B86  EFB9  F015         	goto	l5112
  2349  002B8A                     l5118:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2353  002B8A  85B8               	bsf	_flags& (0+255),2,b
  2354  002B8C  EFB9  F015         	goto	l5112
  2355  002B90                     l5122:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2359  002B90  87B8               	bsf	_flags& (0+255),3,b
  2360  002B92  EFB9  F015         	goto	l5112
  2361  002B96                     l5126:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2365  002B96  89B8               	bsf	_flags& (0+255),4,b
  2366  002B98  EFB9  F015         	goto	l5112
  2367  002B9C                     l5130:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2371  002B9C  0E00               	movlw	0
  2372  002B9E  6FE3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2373  002BA0  0E01               	movlw	1
  2374  002BA2  6FE2               	movwf	vfpfcnvrt@done& (0+255),b
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2377  002BA4  EF00  F016         	goto	l5136
  2378  002BA8                     l5134:
  2379                           
  2380                           ; BSR set to: 0
  2381  002BA8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382  002BAC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383  002BB0  CFDE FFF6          	movff	postinc2,tblptrl
  2384  002BB4  CFDD FFF7          	movff	postdec2,tblptrh
  2385  002BB8                     	if	0	;tblptru may be non-zero
  2386  002BB8                     	endif
  2387  002BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2388  002BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  2389  002BBA  6EF8               	movwf	tblptru,c
  2390  002BBC                     	endif
  2391  002BBC  0008               	tblrd		*
  2392  002BBE  50F5               	movf	tablat,w,c
  2393  002BC0  6E4A               	movwf	??_vfpfcnvrt^0,c
  2394  002BC2  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  2395                           
  2396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 1, Range of values is 0 to 0
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte            4     3 (average)
  2402                           ;	Chosen strategy is simple_byte
  2403  002BC4  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2404  002BC6  0A00               	xorlw	0	; case 0
  2405  002BC8  B4D8               	btfsc	status,2,c
  2406  002BCA  EFE9  F015         	goto	l5664
  2407  002BCE  EFCE  F015         	goto	l5130
  2408  002BD2                     l5664:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ; Switch size 1, requested type "simple"
  2412                           ; Number of cases is 5, Range of values is 32 to 48
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte           16     9 (average)
  2416                           ;	Chosen strategy is simple_byte
  2417  002BD2  504A               	movf	??_vfpfcnvrt^0,w,c
  2418  002BD4  0A20               	xorlw	32	; case 32
  2419  002BD6  B4D8               	btfsc	status,2,c
  2420  002BD8  EFC8  F015         	goto	l5122
  2421  002BDC  0A03               	xorlw	3	; case 35
  2422  002BDE  B4D8               	btfsc	status,2,c
  2423  002BE0  EFCB  F015         	goto	l5126
  2424  002BE4  0A08               	xorlw	8	; case 43
  2425  002BE6  B4D8               	btfsc	status,2,c
  2426  002BE8  EFC5  F015         	goto	l5118
  2427  002BEC  0A06               	xorlw	6	; case 45
  2428  002BEE  B4D8               	btfsc	status,2,c
  2429  002BF0  EFB8  F015         	goto	l5110
  2430  002BF4  0A1D               	xorlw	29	; case 48
  2431  002BF6  B4D8               	btfsc	status,2,c
  2432  002BF8  EFC2  F015         	goto	l5114
  2433  002BFC  EFCE  F015         	goto	l5130
  2434  002C00                     l5136:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2438  002C00  51E2               	movf	vfpfcnvrt@done& (0+255),w,b
  2439  002C02  11E3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2440  002C04  B4D8               	btfsc	status,2,c
  2441  002C06  EF07  F016         	goto	u5451
  2442  002C0A  EF09  F016         	goto	u5450
  2443  002C0E                     u5451:
  2444  002C0E  EFD4  F015         	goto	l5134
  2445  002C12                     u5450:
  2446  002C12                     
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2449  002C12  A1B8               	btfss	_flags& (0+255),0,b
  2450  002C14  EF0E  F016         	goto	u5461
  2451  002C18  EF10  F016         	goto	u5460
  2452  002C1C                     u5461:
  2453  002C1C  EF11  F016         	goto	l5140
  2454  002C20                     u5460:
  2455  002C20                     
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2458  002C20  93B8               	bcf	_flags& (0+255),1,b
  2459  002C22                     l5140:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2463  002C22  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  002C26  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  002C2A  CFDE FFF6          	movff	postinc2,tblptrl
  2466  002C2E  CFDD FFF7          	movff	postdec2,tblptrh
  2467  002C32                     	if	0	;tblptru may be non-zero
  2468  002C32                     	endif
  2469  002C32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2470  002C32  0E00               	movlw	low (__mediumconst shr (0+16))
  2471  002C34  6EF8               	movwf	tblptru,c
  2472  002C36                     	endif
  2473  002C36  0008               	tblrd		*
  2474  002C38  50F5               	movf	tablat,w,c
  2475  002C3A  0A2A               	xorlw	42
  2476  002C3C  A4D8               	btfss	status,2,c
  2477  002C3E  EF23  F016         	goto	u5471
  2478  002C42  EF25  F016         	goto	u5470
  2479  002C46                     u5471:
  2480  002C46  EF4E  F016         	goto	l5148
  2481  002C4A                     u5470:
  2482  002C4A                     
  2483                           ; BSR set to: 0
  2484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2485  002C4A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2486  002C4E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2487  002C52  2ADE               	incf	postinc2,f,c
  2488  002C54  0E00               	movlw	0
  2489  002C56  22DD               	addwfc	postdec2,f,c
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2492  002C58  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2493  002C5C  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2494  002C60  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2495  002C64  0E02               	movlw	2
  2496  002C66  26DE               	addwf	postinc2,f,c
  2497  002C68  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2498  002C6C  0E00               	movlw	0
  2499  002C6E  22DD               	addwfc	postdec2,f,c
  2500  002C70  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2501  002C74  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2502  002C78  CFDE F0B4          	movff	postinc2,_width
  2503  002C7C  CFDD F0B5          	movff	postdec2,_width+1
  2504  002C80                     
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2507  002C80  BFB5               	btfsc	(_width+1)& (0+255),7,b
  2508  002C82  EF47  F016         	goto	u5480
  2509  002C86  EF45  F016         	goto	u5481
  2510  002C8A                     u5481:
  2511  002C8A  EF94  F016         	goto	l5158
  2512  002C8E                     u5480:
  2513  002C8E                     
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2516  002C8E  81B8               	bsf	_flags& (0+255),0,b
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2519  002C90  6DB4               	negf	_width& (0+255),b
  2520  002C92  1FB5               	comf	(_width+1)& (0+255),f,b
  2521  002C94  B0D8               	btfsc	status,0,c
  2522  002C96  2BB5               	incf	(_width+1)& (0+255),f,b
  2523  002C98  EF94  F016         	goto	l5158
  2524  002C9C                     l5148:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2528  002C9C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2529  002CA0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2530  002CA4  CFDE F00C          	movff	postinc2,atoi@s
  2531  002CA8  CFDD F00D          	movff	postdec2,atoi@s+1
  2532  002CAC  EC9D  F019         	call	_atoi	;wreg free
  2533  002CB0  C00C  F0B4         	movff	?_atoi,_width
  2534  002CB4  C00D  F0B5         	movff	?_atoi+1,_width+1
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2537  002CB8  EF65  F016         	goto	l5152
  2538  002CBC                     l5150:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2542  002CBC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  002CC0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  002CC4  2ADE               	incf	postinc2,f,c
  2545  002CC6  0E00               	movlw	0
  2546  002CC8  22DD               	addwfc	postdec2,f,c
  2547  002CCA                     l5152:
  2548  002CCA  0ED0               	movlw	208
  2549  002CCC  6E4A               	movwf	??_vfpfcnvrt^0,c
  2550  002CCE  0EFF               	movlw	255
  2551  002CD0  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2552  002CD2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2553  002CD6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2554  002CDA  CFDE FFF6          	movff	postinc2,tblptrl
  2555  002CDE  CFDD FFF7          	movff	postdec2,tblptrh
  2556  002CE2                     	if	0	;tblptru may be non-zero
  2557  002CE2                     	endif
  2558  002CE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2559  002CE2  0E00               	movlw	low (__mediumconst shr (0+16))
  2560  002CE4  6EF8               	movwf	tblptru,c
  2561  002CE6                     	endif
  2562  002CE6  0008               	tblrd		*
  2563  002CE8  50F5               	movf	tablat,w,c
  2564  002CEA  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  2565  002CEC  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  2566  002CEE  504A               	movf	??_vfpfcnvrt^0,w,c
  2567  002CF0  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2568  002CF2  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2569  002CF4  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2570  002CF6  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2571  002CF8  E10A               	bnz	u5490
  2572  002CFA  0E0A               	movlw	10
  2573  002CFC  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2574  002CFE  A0D8               	btfss	status,0,c
  2575  002D00  EF84  F016         	goto	u5491
  2576  002D04  EF87  F016         	goto	u5490
  2577  002D08                     u5491:
  2578  002D08  0E01               	movlw	1
  2579  002D0A  EF88  F016         	goto	u5500
  2580  002D0E                     u5490:
  2581  002D0E  0E00               	movlw	0
  2582  002D10                     u5500:
  2583  002D10  0100               	movlb	0	; () banked
  2584  002D12  6FE4               	movwf	_vfpfcnvrt$2249& (0+255),b
  2585  002D14  6BE5               	clrf	(_vfpfcnvrt$2249+1)& (0+255),b
  2586  002D16                     
  2587                           ; BSR set to: 0
  2588  002D16  51E4               	movf	_vfpfcnvrt$2249& (0+255),w,b
  2589  002D18  11E5               	iorwf	(_vfpfcnvrt$2249+1)& (0+255),w,b
  2590  002D1A  A4D8               	btfss	status,2,c
  2591  002D1C  EF92  F016         	goto	u5511
  2592  002D20  EF94  F016         	goto	u5510
  2593  002D24                     u5511:
  2594  002D24  EF5E  F016         	goto	l5150
  2595  002D28                     u5510:
  2596  002D28                     l5158:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2600  002D28  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2601  002D2C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2602  002D30  CFDE FFF6          	movff	postinc2,tblptrl
  2603  002D34  CFDD FFF7          	movff	postdec2,tblptrh
  2604  002D38                     	if	0	;tblptru may be non-zero
  2605  002D38                     	endif
  2606  002D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2607  002D38  0E00               	movlw	low (__mediumconst shr (0+16))
  2608  002D3A  6EF8               	movwf	tblptru,c
  2609  002D3C                     	endif
  2610  002D3C  0008               	tblrd		*
  2611  002D3E  50F5               	movf	tablat,w,c
  2612  002D40  0A64               	xorlw	100
  2613  002D42  B4D8               	btfsc	status,2,c
  2614  002D44  EFA6  F016         	goto	u5521
  2615  002D48  EFA8  F016         	goto	u5520
  2616  002D4C                     u5521:
  2617  002D4C  EFBC  F016         	goto	l5162
  2618  002D50                     u5520:
  2619  002D50                     
  2620                           ; BSR set to: 0
  2621  002D50  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  002D54  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  002D58  CFDE FFF6          	movff	postinc2,tblptrl
  2624  002D5C  CFDD FFF7          	movff	postdec2,tblptrh
  2625  002D60                     	if	0	;tblptru may be non-zero
  2626  002D60                     	endif
  2627  002D60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2628  002D60  0E00               	movlw	low (__mediumconst shr (0+16))
  2629  002D62  6EF8               	movwf	tblptru,c
  2630  002D64                     	endif
  2631  002D64  0008               	tblrd		*
  2632  002D66  50F5               	movf	tablat,w,c
  2633  002D68  0A69               	xorlw	105
  2634  002D6A  A4D8               	btfss	status,2,c
  2635  002D6C  EFBA  F016         	goto	u5531
  2636  002D70  EFBC  F016         	goto	u5530
  2637  002D74                     u5531:
  2638  002D74  EFFC  F016         	goto	l5168
  2639  002D78                     u5530:
  2640  002D78                     l5162:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2644  002D78  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2645  002D7C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2646  002D80  2ADE               	incf	postinc2,f,c
  2647  002D82  0E00               	movlw	0
  2648  002D84  22DD               	addwfc	postdec2,f,c
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2651  002D86  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2652  002D8A  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2653  002D8E  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2654  002D92  0E02               	movlw	2
  2655  002D94  26DE               	addwf	postinc2,f,c
  2656  002D96  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2657  002D9A  0E00               	movlw	0
  2658  002D9C  22DD               	addwfc	postdec2,f,c
  2659  002D9E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2660  002DA2  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2661  002DA6  CFDE F0DA          	movff	postinc2,vfpfcnvrt@ll
  2662  002DAA  CFDD F0DB          	movff	postdec2,vfpfcnvrt@ll+1
  2663  002DAE  0E00               	movlw	0
  2664  002DB0  BFDB               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2665  002DB2  0EFF               	movlw	-1
  2666  002DB4  6FDC               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2667  002DB6  6FDD               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2668  002DB8  6FDE               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2669  002DBA  6FDF               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2670  002DBC  6FE0               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2671  002DBE  6FE1               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2672  002DC0                     
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2675  002DC0  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2676  002DC4  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2677  002DC8  C0DA  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2678  002DCC  C0DB  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2679  002DD0  C0DC  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2680  002DD4  C0DD  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2681  002DD8  C0DE  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2682  002DDC  C0DF  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2683  002DE0  C0E0  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2684  002DE4  C0E1  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2685  002DE8  EC52  F017         	call	_dtoa	;wreg free
  2686  002DEC  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2687  002DF0  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2688  002DF4  EF51  F017         	goto	l1219
  2689  002DF8                     l5168:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2693  002DF8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2694  002DFC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2695  002E00  CFDE FFF6          	movff	postinc2,tblptrl
  2696  002E04  CFDD FFF7          	movff	postdec2,tblptrh
  2697  002E08                     	if	0	;tblptru may be non-zero
  2698  002E08                     	endif
  2699  002E08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2700  002E08  0E00               	movlw	low (__mediumconst shr (0+16))
  2701  002E0A  6EF8               	movwf	tblptru,c
  2702  002E0C                     	endif
  2703  002E0C  0008               	tblrd		*
  2704  002E0E  50F5               	movf	tablat,w,c
  2705  002E10  0A25               	xorlw	37
  2706  002E12  A4D8               	btfss	status,2,c
  2707  002E14  EF0E  F017         	goto	u5541
  2708  002E18  EF10  F017         	goto	u5540
  2709  002E1C                     u5541:
  2710  002E1C  EF27  F017         	goto	l5178
  2711  002E20                     u5540:
  2712  002E20                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2715  002E20  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716  002E24  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717  002E28  2ADE               	incf	postinc2,f,c
  2718  002E2A  0E00               	movlw	0
  2719  002E2C  22DD               	addwfc	postdec2,f,c
  2720  002E2E                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2723  002E2E  0E00               	movlw	0
  2724  002E30  6E06               	movwf	(fputc@c+1)^0,c
  2725  002E32  0E25               	movlw	37
  2726  002E34  6E05               	movwf	fputc@c^0,c
  2727  002E36  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2728  002E3A  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2729  002E3E  ECEA  F01C         	call	_fputc	;wreg free
  2730  002E42                     l5174:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2733  002E42  0E00               	movlw	0
  2734  002E44  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2735  002E46  0E01               	movlw	1
  2736  002E48  6E44               	movwf	?_vfpfcnvrt^0,c
  2737  002E4A  EF51  F017         	goto	l1219
  2738  002E4E                     l5178:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2742  002E4E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2743  002E52  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2744  002E56  2ADE               	incf	postinc2,f,c
  2745  002E58  0E00               	movlw	0
  2746  002E5A  22DD               	addwfc	postdec2,f,c
  2747  002E5C                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2750  002E5C  0E00               	movlw	0
  2751  002E5E  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2752  002E60  0E00               	movlw	0
  2753  002E62  6E44               	movwf	?_vfpfcnvrt^0,c
  2754  002E64  EF51  F017         	goto	l1219
  2755  002E68                     l5184:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2758  002E68  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2759  002E6C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2760  002E70  CFDE FFF6          	movff	postinc2,tblptrl
  2761  002E74  CFDD FFF7          	movff	postdec2,tblptrh
  2762  002E78                     	if	0	;tblptru may be non-zero
  2763  002E78                     	endif
  2764  002E78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2765  002E78  0E00               	movlw	low (__mediumconst shr (0+16))
  2766  002E7A  6EF8               	movwf	tblptru,c
  2767  002E7C                     	endif
  2768  002E7C  0008               	tblrd		*
  2769  002E7E  50F5               	movf	tablat,w,c
  2770  002E80  6E05               	movwf	fputc@c^0,c
  2771  002E82  6A06               	clrf	(fputc@c+1)^0,c
  2772  002E84  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2773  002E88  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2774  002E8C  ECEA  F01C         	call	_fputc	;wreg free
  2775  002E90                     
  2776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2777  002E90  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2778  002E94  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2779  002E98  2ADE               	incf	postinc2,f,c
  2780  002E9A  0E00               	movlw	0
  2781  002E9C  22DD               	addwfc	postdec2,f,c
  2782  002E9E  EF21  F017         	goto	l5174
  2783  002EA2                     l1219:
  2784  002EA2  0012               	return		;funcret
  2785  002EA4                     __end_of_vfpfcnvrt:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _dtoa *****************
  2789 ;; Defined at:
  2790 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2793 ;;		 -> sprintf@f(6), 
  2794 ;;  d               8   33[COMRAM] long long 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  n               8   57[COMRAM] long long 
  2797 ;;  i               2   65[COMRAM] int 
  2798 ;;  s               2   55[COMRAM] int 
  2799 ;;  w               2   53[COMRAM] int 
  2800 ;;  p               2   51[COMRAM] int 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  2   31[COMRAM] int 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2810 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;Total ram usage:       36 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 6
  2817 ;; This function calls:
  2818 ;;		___aodiv
  2819 ;;		___aomod
  2820 ;;		_abs
  2821 ;;		_pad
  2822 ;; This function is called by:
  2823 ;;		_vfpfcnvrt
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text4
  2828  002EA4                     __ptext4:
  2829                           	callstack 0
  2830  002EA4                     _dtoa:
  2831                           	callstack 21
  2832  002EA4                     
  2833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2834  002EA4  C022  F03A         	movff	dtoa@d,dtoa@n
  2835  002EA8  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2836  002EAC  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2837  002EB0  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2838  002EB4  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2839  002EB8  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2840  002EBC  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2841  002EC0  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2842  002EC4                     
  2843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2844  002EC4  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2845  002EC6  EF67  F017         	goto	u5211
  2846  002ECA  EF6A  F017         	goto	u5210
  2847  002ECE                     u5211:
  2848  002ECE  0E01               	movlw	1
  2849  002ED0  EF6B  F017         	goto	u5220
  2850  002ED4                     u5210:
  2851  002ED4  0E00               	movlw	0
  2852  002ED6                     u5220:
  2853  002ED6  6E38               	movwf	dtoa@s^0,c
  2854  002ED8  6A39               	clrf	(dtoa@s+1)^0,c
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2857  002EDA  5038               	movf	dtoa@s^0,w,c
  2858  002EDC  1039               	iorwf	(dtoa@s+1)^0,w,c
  2859  002EDE  B4D8               	btfsc	status,2,c
  2860  002EE0  EF74  F017         	goto	u5231
  2861  002EE4  EF76  F017         	goto	u5230
  2862  002EE8                     u5231:
  2863  002EE8  EF86  F017         	goto	l4992
  2864  002EEC                     u5230:
  2865  002EEC                     
  2866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2867  002EEC  1E41               	comf	(dtoa@n+7)^0,f,c
  2868  002EEE  1E40               	comf	(dtoa@n+6)^0,f,c
  2869  002EF0  1E3F               	comf	(dtoa@n+5)^0,f,c
  2870  002EF2  1E3E               	comf	(dtoa@n+4)^0,f,c
  2871  002EF4  1E3D               	comf	(dtoa@n+3)^0,f,c
  2872  002EF6  1E3C               	comf	(dtoa@n+2)^0,f,c
  2873  002EF8  1E3B               	comf	(dtoa@n+1)^0,f,c
  2874  002EFA  6C3A               	negf	dtoa@n^0,c
  2875  002EFC  0E00               	movlw	0
  2876  002EFE  223B               	addwfc	(dtoa@n+1)^0,f,c
  2877  002F00  223C               	addwfc	(dtoa@n+2)^0,f,c
  2878  002F02  223D               	addwfc	(dtoa@n+3)^0,f,c
  2879  002F04  223E               	addwfc	(dtoa@n+4)^0,f,c
  2880  002F06  223F               	addwfc	(dtoa@n+5)^0,f,c
  2881  002F08  2240               	addwfc	(dtoa@n+6)^0,f,c
  2882  002F0A  2241               	addwfc	(dtoa@n+7)^0,f,c
  2883  002F0C                     l4992:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2886  002F0C  0100               	movlb	0	; () banked
  2887  002F0E  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  2888  002F10  EF8C  F017         	goto	u5241
  2889  002F14  EF8E  F017         	goto	u5240
  2890  002F18                     u5241:
  2891  002F18  EF8F  F017         	goto	l4996
  2892  002F1C                     u5240:
  2893  002F1C                     
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2896  002F1C  93B8               	bcf	_flags& (0+255),1,b
  2897  002F1E                     l4996:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2901  002F1E  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  2902  002F20  EF9C  F017         	goto	u5250
  2903  002F24  51B7               	movf	(_prec+1)& (0+255),w,b
  2904  002F26  E106               	bnz	u5251
  2905  002F28  05B6               	decf	_prec& (0+255),w,b
  2906  002F2A  B0D8               	btfsc	status,0,c
  2907  002F2C  EF9A  F017         	goto	u5251
  2908  002F30  EF9C  F017         	goto	u5250
  2909  002F34                     u5251:
  2910  002F34  EFA2  F017         	goto	l1170
  2911  002F38                     u5250:
  2912  002F38                     
  2913                           ; BSR set to: 0
  2914  002F38  0E00               	movlw	0
  2915  002F3A  6E35               	movwf	(dtoa@p+1)^0,c
  2916  002F3C  0E01               	movlw	1
  2917  002F3E  6E34               	movwf	dtoa@p^0,c
  2918  002F40  EFA6  F017         	goto	l1172
  2919  002F44                     l1170:
  2920                           
  2921                           ; BSR set to: 0
  2922  002F44  C0B6  F034         	movff	_prec,dtoa@p
  2923  002F48  C0B7  F035         	movff	_prec+1,dtoa@p+1
  2924  002F4C                     l1172:
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2928  002F4C  C0B4  F036         	movff	_width,dtoa@w
  2929  002F50  C0B5  F037         	movff	_width+1,dtoa@w+1
  2930  002F54                     
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2933  002F54  5038               	movf	dtoa@s^0,w,c
  2934  002F56  1039               	iorwf	(dtoa@s+1)^0,w,c
  2935  002F58  A4D8               	btfss	status,2,c
  2936  002F5A  EFB1  F017         	goto	u5261
  2937  002F5E  EFB3  F017         	goto	u5260
  2938  002F62                     u5261:
  2939  002F62  EFBA  F017         	goto	l5004
  2940  002F66                     u5260:
  2941  002F66                     
  2942                           ; BSR set to: 0
  2943  002F66  A5B8               	btfss	_flags& (0+255),2,b
  2944  002F68  EFB8  F017         	goto	u5271
  2945  002F6C  EFBA  F017         	goto	u5270
  2946  002F70                     u5271:
  2947  002F70  EFBD  F017         	goto	l5006
  2948  002F74                     u5270:
  2949  002F74                     l5004:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2953  002F74  0636               	decf	dtoa@w^0,f,c
  2954  002F76  A0D8               	btfss	status,0,c
  2955  002F78  0637               	decf	(dtoa@w+1)^0,f,c
  2956  002F7A                     l5006:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2960  002F7A  0E00               	movlw	0
  2961  002F7C  6E43               	movwf	(dtoa@i+1)^0,c
  2962  002F7E  0E1F               	movlw	31
  2963  002F80  6E42               	movwf	dtoa@i^0,c
  2964  002F82                     
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2967  002F82  0E00               	movlw	0
  2968  002F84  6FD9               	movwf	(_dbuf+31)& (0+255),b
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2971  002F86  EF41  F018         	goto	l5020
  2972  002F8A                     l5010:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2975  002F8A  0642               	decf	dtoa@i^0,f,c
  2976  002F8C  A0D8               	btfss	status,0,c
  2977  002F8E  0643               	decf	(dtoa@i+1)^0,f,c
  2978  002F90                     
  2979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2980  002F90  0EBA               	movlw	low _dbuf
  2981  002F92  2442               	addwf	dtoa@i^0,w,c
  2982  002F94  6ED9               	movwf	fsr2l,c
  2983  002F96  0E00               	movlw	high _dbuf
  2984  002F98  2043               	addwfc	(dtoa@i+1)^0,w,c
  2985  002F9A  6EDA               	movwf	fsr2h,c
  2986  002F9C  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2987  002FA0  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2988  002FA4  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2989  002FA8  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2990  002FAC  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2991  002FB0  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2992  002FB4  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2993  002FB8  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2994  002FBC  0E0A               	movlw	10
  2995  002FBE  6E0D               	movwf	___aomod@divisor^0,c
  2996  002FC0  0E00               	movlw	0
  2997  002FC2  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2998  002FC4  0E00               	movlw	0
  2999  002FC6  6E0F               	movwf	(___aomod@divisor+2)^0,c
  3000  002FC8  0E00               	movlw	0
  3001  002FCA  6E10               	movwf	(___aomod@divisor+3)^0,c
  3002  002FCC  0E00               	movlw	0
  3003  002FCE  6E11               	movwf	(___aomod@divisor+4)^0,c
  3004  002FD0  0E00               	movlw	0
  3005  002FD2  6E12               	movwf	(___aomod@divisor+5)^0,c
  3006  002FD4  0E00               	movlw	0
  3007  002FD6  6E13               	movwf	(___aomod@divisor+6)^0,c
  3008  002FD8  0E00               	movlw	0
  3009  002FDA  6E14               	movwf	(___aomod@divisor+7)^0,c
  3010  002FDC  EC33  F01B         	call	___aomod	;wreg free
  3011  002FE0  C005  F02A         	movff	?___aomod,??_dtoa
  3012  002FE4  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  3013  002FE8  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  3014  002FEC  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  3015  002FF0  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  3016  002FF4  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  3017  002FF8  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  3018  002FFC  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  3019  003000  C02A  F017         	movff	??_dtoa,abs@a
  3020  003004  C02C  F018         	movff	??_dtoa+2,abs@a+1
  3021  003008  EC60  F020         	call	_abs	;wreg free
  3022  00300C  5017               	movf	?_abs^0,w,c
  3023  00300E  0F30               	addlw	48
  3024  003010  6EDF               	movwf	indf2,c
  3025  003012                     
  3026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3027  003012  0634               	decf	dtoa@p^0,f,c
  3028  003014  A0D8               	btfss	status,0,c
  3029  003016  0635               	decf	(dtoa@p+1)^0,f,c
  3030  003018                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3032  003018  0636               	decf	dtoa@w^0,f,c
  3033  00301A  A0D8               	btfss	status,0,c
  3034  00301C  0637               	decf	(dtoa@w+1)^0,f,c
  3035  00301E                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3037  00301E  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  3038  003022  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3039  003026  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3040  00302A  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3041  00302E  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3042  003032  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3043  003036  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3044  00303A  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3045  00303E  0E0A               	movlw	10
  3046  003040  6E0D               	movwf	___aodiv@divisor^0,c
  3047  003042  0E00               	movlw	0
  3048  003044  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  3049  003046  0E00               	movlw	0
  3050  003048  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  3051  00304A  0E00               	movlw	0
  3052  00304C  6E10               	movwf	(___aodiv@divisor+3)^0,c
  3053  00304E  0E00               	movlw	0
  3054  003050  6E11               	movwf	(___aodiv@divisor+4)^0,c
  3055  003052  0E00               	movlw	0
  3056  003054  6E12               	movwf	(___aodiv@divisor+5)^0,c
  3057  003056  0E00               	movlw	0
  3058  003058  6E13               	movwf	(___aodiv@divisor+6)^0,c
  3059  00305A  0E00               	movlw	0
  3060  00305C  6E14               	movwf	(___aodiv@divisor+7)^0,c
  3061  00305E  EC6F  F01A         	call	___aodiv	;wreg free
  3062  003062  C005  F03A         	movff	?___aodiv,dtoa@n
  3063  003066  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  3064  00306A  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  3065  00306E  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  3066  003072  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  3067  003076  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  3068  00307A  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  3069  00307E  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  3070  003082                     l5020:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3073  003082  BE43               	btfsc	(dtoa@i+1)^0,7,c
  3074  003084  EF4C  F018         	goto	u5281
  3075  003088  5043               	movf	(dtoa@i+1)^0,w,c
  3076  00308A  E108               	bnz	u5280
  3077  00308C  0442               	decf	dtoa@i^0,w,c
  3078  00308E  A0D8               	btfss	status,0,c
  3079  003090  EF4C  F018         	goto	u5281
  3080  003094  EF4E  F018         	goto	u5280
  3081  003098                     u5281:
  3082  003098  EF7F  F018         	goto	l5030
  3083  00309C                     u5280:
  3084  00309C  503A               	movf	dtoa@n^0,w,c
  3085  00309E  103B               	iorwf	(dtoa@n+1)^0,w,c
  3086  0030A0  103C               	iorwf	(dtoa@n+2)^0,w,c
  3087  0030A2  103D               	iorwf	(dtoa@n+3)^0,w,c
  3088  0030A4  103E               	iorwf	(dtoa@n+4)^0,w,c
  3089  0030A6  103F               	iorwf	(dtoa@n+5)^0,w,c
  3090  0030A8  1040               	iorwf	(dtoa@n+6)^0,w,c
  3091  0030AA  1041               	iorwf	(dtoa@n+7)^0,w,c
  3092  0030AC  A4D8               	btfss	status,2,c
  3093  0030AE  EF5B  F018         	goto	u5291
  3094  0030B2  EF5D  F018         	goto	u5290
  3095  0030B6                     u5291:
  3096  0030B6  EFC5  F017         	goto	l5010
  3097  0030BA                     u5290:
  3098  0030BA  BE35               	btfsc	(dtoa@p+1)^0,7,c
  3099  0030BC  EF6A  F018         	goto	u5300
  3100  0030C0  5035               	movf	(dtoa@p+1)^0,w,c
  3101  0030C2  E106               	bnz	u5301
  3102  0030C4  0434               	decf	dtoa@p^0,w,c
  3103  0030C6  B0D8               	btfsc	status,0,c
  3104  0030C8  EF68  F018         	goto	u5301
  3105  0030CC  EF6A  F018         	goto	u5300
  3106  0030D0                     u5301:
  3107  0030D0  EFC5  F017         	goto	l5010
  3108  0030D4                     u5300:
  3109  0030D4  BE37               	btfsc	(dtoa@w+1)^0,7,c
  3110  0030D6  EF75  F018         	goto	u5311
  3111  0030DA  5037               	movf	(dtoa@w+1)^0,w,c
  3112  0030DC  E108               	bnz	u5310
  3113  0030DE  0436               	decf	dtoa@w^0,w,c
  3114  0030E0  A0D8               	btfss	status,0,c
  3115  0030E2  EF75  F018         	goto	u5311
  3116  0030E6  EF77  F018         	goto	u5310
  3117  0030EA                     u5311:
  3118  0030EA  EF7F  F018         	goto	l5030
  3119  0030EE                     u5310:
  3120  0030EE  0100               	movlb	0	; () banked
  3121  0030F0  B3B8               	btfsc	_flags& (0+255),1,b
  3122  0030F2  EF7D  F018         	goto	u5321
  3123  0030F6  EF7F  F018         	goto	u5320
  3124  0030FA                     u5321:
  3125  0030FA  EFC5  F017         	goto	l5010
  3126  0030FE                     u5320:
  3127  0030FE                     l5030:
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3130  0030FE  5038               	movf	dtoa@s^0,w,c
  3131  003100  1039               	iorwf	(dtoa@s+1)^0,w,c
  3132  003102  A4D8               	btfss	status,2,c
  3133  003104  EF86  F018         	goto	u5331
  3134  003108  EF88  F018         	goto	u5330
  3135  00310C                     u5331:
  3136  00310C  EF90  F018         	goto	l5034
  3137  003110                     u5330:
  3138  003110  0100               	movlb	0	; () banked
  3139  003112  A5B8               	btfss	_flags& (0+255),2,b
  3140  003114  EF8E  F018         	goto	u5341
  3141  003118  EF90  F018         	goto	u5340
  3142  00311C                     u5341:
  3143  00311C  EFAE  F018         	goto	l5044
  3144  003120                     u5340:
  3145  003120                     l5034:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  3148  003120  0642               	decf	dtoa@i^0,f,c
  3149  003122  A0D8               	btfss	status,0,c
  3150  003124  0643               	decf	(dtoa@i+1)^0,f,c
  3151  003126                     
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3153  003126  5038               	movf	dtoa@s^0,w,c
  3154  003128  1039               	iorwf	(dtoa@s+1)^0,w,c
  3155  00312A  A4D8               	btfss	status,2,c
  3156  00312C  EF9A  F018         	goto	u5351
  3157  003130  EF9C  F018         	goto	u5350
  3158  003134                     u5351:
  3159  003134  EFA2  F018         	goto	l5040
  3160  003138                     u5350:
  3161  003138  0E00               	movlw	0
  3162  00313A  6E33               	movwf	(_dtoa$2234+1)^0,c
  3163  00313C  0E2B               	movlw	43
  3164  00313E  6E32               	movwf	_dtoa$2234^0,c
  3165  003140  EFA6  F018         	goto	l5042
  3166  003144                     l5040:
  3167  003144  0E00               	movlw	0
  3168  003146  6E33               	movwf	(_dtoa$2234+1)^0,c
  3169  003148  0E2D               	movlw	45
  3170  00314A  6E32               	movwf	_dtoa$2234^0,c
  3171  00314C                     l5042:
  3172  00314C  0EBA               	movlw	low _dbuf
  3173  00314E  2442               	addwf	dtoa@i^0,w,c
  3174  003150  6ED9               	movwf	fsr2l,c
  3175  003152  0E00               	movlw	high _dbuf
  3176  003154  2043               	addwfc	(dtoa@i+1)^0,w,c
  3177  003156  6EDA               	movwf	fsr2h,c
  3178  003158  C032  FFDF         	movff	_dtoa$2234,indf2
  3179  00315C                     l5044:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3182  00315C  C020  F015         	movff	dtoa@fp,pad@fp
  3183  003160  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  3184  003164  0EBA               	movlw	low _dbuf
  3185  003166  2442               	addwf	dtoa@i^0,w,c
  3186  003168  6E17               	movwf	pad@buf^0,c
  3187  00316A  0E00               	movlw	high _dbuf
  3188  00316C  2043               	addwfc	(dtoa@i+1)^0,w,c
  3189  00316E  6E18               	movwf	(pad@buf+1)^0,c
  3190  003170  C036  F019         	movff	dtoa@w,pad@p
  3191  003174  C037  F01A         	movff	dtoa@w+1,pad@p+1
  3192  003178  EC4F  F01D         	call	_pad	;wreg free
  3193  00317C  C015  F020         	movff	?_pad,?_dtoa
  3194  003180  C016  F021         	movff	?_pad+1,?_dtoa+1
  3195  003184  0012               	return		;funcret
  3196  003186                     __end_of_dtoa:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _pad *****************
  3200 ;; Defined at:
  3201 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  3204 ;;		 -> sprintf@f(6), 
  3205 ;;  buf             2   22[COMRAM] PTR unsigned char 
  3206 ;;		 -> dbuf(32), 
  3207 ;;  p               2   24[COMRAM] int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  w               2   29[COMRAM] int 
  3210 ;;  i               2   27[COMRAM] int 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2   20[COMRAM] int 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3220 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;Total ram usage:       11 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 5
  3227 ;; This function calls:
  3228 ;;		_fputc
  3229 ;;		_fputs
  3230 ;;		_strlen
  3231 ;; This function is called by:
  3232 ;;		_dtoa
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text5
  3237  003A9E                     __ptext5:
  3238                           	callstack 0
  3239  003A9E                     _pad:
  3240                           	callstack 21
  3241  003A9E                     
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3243  003A9E  0100               	movlb	0	; () banked
  3244  003AA0  A1B8               	btfss	_flags& (0+255),0,b
  3245  003AA2  EF55  F01D         	goto	u5121
  3246  003AA6  EF57  F01D         	goto	u5120
  3247  003AAA                     u5121:
  3248  003AAA  EF61  F01D         	goto	l4948
  3249  003AAE                     u5120:
  3250  003AAE                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3253  003AAE  C017  F00E         	movff	pad@buf,fputs@s
  3254  003AB2  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3255  003AB6  C015  F010         	movff	pad@fp,fputs@fp
  3256  003ABA  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3257  003ABE  ECFC  F01F         	call	_fputs	;wreg free
  3258  003AC2                     l4948:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3261  003AC2  BE1A               	btfsc	(pad@p+1)^0,7,c
  3262  003AC4  EF66  F01D         	goto	u5131
  3263  003AC8  EF68  F01D         	goto	u5130
  3264  003ACC                     u5131:
  3265  003ACC  EF6E  F01D         	goto	l4952
  3266  003AD0                     u5130:
  3267  003AD0  C019  F01E         	movff	pad@p,pad@w
  3268  003AD4  C01A  F01F         	movff	pad@p+1,pad@w+1
  3269  003AD8  EF72  F01D         	goto	l1159
  3270  003ADC                     l4952:
  3271  003ADC  0E00               	movlw	0
  3272  003ADE  6E1F               	movwf	(pad@w+1)^0,c
  3273  003AE0  0E00               	movlw	0
  3274  003AE2  6E1E               	movwf	pad@w^0,c
  3275  003AE4                     l1159:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3278  003AE4  0E00               	movlw	0
  3279  003AE6  6E1D               	movwf	(pad@i+1)^0,c
  3280  003AE8  0E00               	movlw	0
  3281  003AEA  6E1C               	movwf	pad@i^0,c
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3284  003AEC  EF84  F01D         	goto	l4958
  3285  003AF0                     l4954:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3288  003AF0  0E00               	movlw	0
  3289  003AF2  6E06               	movwf	(fputc@c+1)^0,c
  3290  003AF4  0E20               	movlw	32
  3291  003AF6  6E05               	movwf	fputc@c^0,c
  3292  003AF8  C015  F007         	movff	pad@fp,fputc@fp
  3293  003AFC  C016  F008         	movff	pad@fp+1,fputc@fp+1
  3294  003B00  ECEA  F01C         	call	_fputc	;wreg free
  3295  003B04                     
  3296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3297  003B04  4A1C               	infsnz	pad@i^0,f,c
  3298  003B06  2A1D               	incf	(pad@i+1)^0,f,c
  3299  003B08                     l4958:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3302  003B08  501E               	movf	pad@w^0,w,c
  3303  003B0A  5C1C               	subwf	pad@i^0,w,c
  3304  003B0C  501D               	movf	(pad@i+1)^0,w,c
  3305  003B0E  0A80               	xorlw	128
  3306  003B10  6E1B               	movwf	??_pad^0,c
  3307  003B12  501F               	movf	(pad@w+1)^0,w,c
  3308  003B14  0A80               	xorlw	128
  3309  003B16  581B               	subwfb	??_pad^0,w,c
  3310  003B18  A0D8               	btfss	status,0,c
  3311  003B1A  EF91  F01D         	goto	u5141
  3312  003B1E  EF93  F01D         	goto	u5140
  3313  003B22                     u5141:
  3314  003B22  EF78  F01D         	goto	l4954
  3315  003B26                     u5140:
  3316  003B26                     
  3317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3318  003B26  0100               	movlb	0	; () banked
  3319  003B28  B1B8               	btfsc	_flags& (0+255),0,b
  3320  003B2A  EF99  F01D         	goto	u5151
  3321  003B2E  EF9B  F01D         	goto	u5150
  3322  003B32                     u5151:
  3323  003B32  EFA5  F01D         	goto	l4962
  3324  003B36                     u5150:
  3325  003B36                     
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3328  003B36  C017  F00E         	movff	pad@buf,fputs@s
  3329  003B3A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3330  003B3E  C015  F010         	movff	pad@fp,fputs@fp
  3331  003B42  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3332  003B46  ECFC  F01F         	call	_fputs	;wreg free
  3333  003B4A                     l4962:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3336  003B4A  C017  F005         	movff	pad@buf,strlen@s
  3337  003B4E  C018  F006         	movff	pad@buf+1,strlen@s+1
  3338  003B52  ECB7  F020         	call	_strlen	;wreg free
  3339  003B56  501E               	movf	pad@w^0,w,c
  3340  003B58  2405               	addwf	?_strlen^0,w,c
  3341  003B5A  6E15               	movwf	?_pad^0,c
  3342  003B5C  501F               	movf	(pad@w+1)^0,w,c
  3343  003B5E  2006               	addwfc	(?_strlen+1)^0,w,c
  3344  003B60  6E16               	movwf	(?_pad+1)^0,c
  3345  003B62  0012               	return		;funcret
  3346  003B64                     __end_of_pad:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _strlen *****************
  3350 ;; Defined at:
  3351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3354 ;;		 -> dbuf(32), 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3357 ;;		 -> dbuf(32), 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2    4[COMRAM] unsigned int 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;Total ram usage:        4 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 2
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_pad
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text6
  3382  00416E                     __ptext6:
  3383                           	callstack 0
  3384  00416E                     _strlen:
  3385                           	callstack 23
  3386  00416E  C005  F007         	movff	strlen@s,strlen@a
  3387  004172  C006  F008         	movff	strlen@s+1,strlen@a+1
  3388  004176  EFBF  F020         	goto	l4852
  3389  00417A                     l4850:
  3390  00417A  4A05               	infsnz	strlen@s^0,f,c
  3391  00417C  2A06               	incf	(strlen@s+1)^0,f,c
  3392  00417E                     l4852:
  3393  00417E  C005  FFD9         	movff	strlen@s,fsr2l
  3394  004182  C006  FFDA         	movff	strlen@s+1,fsr2h
  3395  004186  50DF               	movf	indf2,w,c
  3396  004188  A4D8               	btfss	status,2,c
  3397  00418A  EFC9  F020         	goto	u4981
  3398  00418E  EFCB  F020         	goto	u4980
  3399  004192                     u4981:
  3400  004192  EFBD  F020         	goto	l4850
  3401  004196                     u4980:
  3402  004196  5007               	movf	strlen@a^0,w,c
  3403  004198  5C05               	subwf	strlen@s^0,w,c
  3404  00419A  6E05               	movwf	?_strlen^0,c
  3405  00419C  5008               	movf	(strlen@a+1)^0,w,c
  3406  00419E  5806               	subwfb	(strlen@s+1)^0,w,c
  3407  0041A0  6E06               	movwf	(?_strlen+1)^0,c
  3408  0041A2  0012               	return		;funcret
  3409  0041A4                     __end_of_strlen:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _fputs *****************
  3413 ;; Defined at:
  3414 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3417 ;;		 -> dbuf(32), 
  3418 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3419 ;;		 -> sprintf@f(6), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  i               2   18[COMRAM] int 
  3422 ;;  c               1   17[COMRAM] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2   13[COMRAM] int 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;Total ram usage:        7 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 4
  3439 ;; This function calls:
  3440 ;;		_fputc
  3441 ;; This function is called by:
  3442 ;;		_pad
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text7
  3447  003FF8                     __ptext7:
  3448                           	callstack 0
  3449  003FF8                     _fputs:
  3450                           	callstack 21
  3451  003FF8  0E00               	movlw	0
  3452  003FFA  6E14               	movwf	(fputs@i+1)^0,c
  3453  003FFC  0E00               	movlw	0
  3454  003FFE  6E13               	movwf	fputs@i^0,c
  3455  004000  EF0D  F020         	goto	l4846
  3456  004004                     l4842:
  3457  004004  C012  F005         	movff	fputs@c,fputc@c
  3458  004008  6A06               	clrf	(fputc@c+1)^0,c
  3459  00400A  C010  F007         	movff	fputs@fp,fputc@fp
  3460  00400E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3461  004012  ECEA  F01C         	call	_fputc	;wreg free
  3462  004016  4A13               	infsnz	fputs@i^0,f,c
  3463  004018  2A14               	incf	(fputs@i+1)^0,f,c
  3464  00401A                     l4846:
  3465  00401A  5013               	movf	fputs@i^0,w,c
  3466  00401C  240E               	addwf	fputs@s^0,w,c
  3467  00401E  6ED9               	movwf	fsr2l,c
  3468  004020  5014               	movf	(fputs@i+1)^0,w,c
  3469  004022  200F               	addwfc	(fputs@s+1)^0,w,c
  3470  004024  6EDA               	movwf	fsr2h,c
  3471  004026  50DF               	movf	indf2,w,c
  3472  004028  6E12               	movwf	fputs@c^0,c
  3473  00402A  5012               	movf	fputs@c^0,w,c
  3474  00402C  A4D8               	btfss	status,2,c
  3475  00402E  EF1B  F020         	goto	u4971
  3476  004032  EF1D  F020         	goto	u4970
  3477  004036                     u4971:
  3478  004036  EF02  F020         	goto	l4842
  3479  00403A                     u4970:
  3480  00403A  0012               	return		;funcret
  3481  00403C                     __end_of_fputs:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _fputc *****************
  3485 ;; Defined at:
  3486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  c               2    4[COMRAM] int 
  3489 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3490 ;;		 -> sprintf@f(6), 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  2    4[COMRAM] int 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;Total ram usage:        9 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 3
  3509 ;; This function calls:
  3510 ;;		_putch
  3511 ;; This function is called by:
  3512 ;;		_pad
  3513 ;;		_vfpfcnvrt
  3514 ;;		_fputs
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text8
  3519  0039D4                     __ptext8:
  3520                           	callstack 0
  3521  0039D4                     _fputc:
  3522                           	callstack 24
  3523  0039D4  5007               	movf	fputc@fp^0,w,c
  3524  0039D6  1008               	iorwf	(fputc@fp+1)^0,w,c
  3525  0039D8  B4D8               	btfsc	status,2,c
  3526  0039DA  EFF1  F01C         	goto	u4931
  3527  0039DE  EFF3  F01C         	goto	u4930
  3528  0039E2                     u4931:
  3529  0039E2  EFFC  F01C         	goto	l4830
  3530  0039E6                     u4930:
  3531  0039E6  5007               	movf	fputc@fp^0,w,c
  3532  0039E8  1008               	iorwf	(fputc@fp+1)^0,w,c
  3533  0039EA  A4D8               	btfss	status,2,c
  3534  0039EC  EFFA  F01C         	goto	u4941
  3535  0039F0  EFFC  F01C         	goto	u4940
  3536  0039F4                     u4941:
  3537  0039F4  EF01  F01D         	goto	l4832
  3538  0039F8                     u4940:
  3539  0039F8                     l4830:
  3540  0039F8  5005               	movf	fputc@c^0,w,c
  3541  0039FA  ECE0  F021         	call	_putch
  3542  0039FE  EF4E  F01D         	goto	l1290
  3543  003A02                     l4832:
  3544  003A02  EE20 F004          	lfsr	2,4
  3545  003A06  5007               	movf	fputc@fp^0,w,c
  3546  003A08  26D9               	addwf	fsr2l,f,c
  3547  003A0A  5008               	movf	(fputc@fp+1)^0,w,c
  3548  003A0C  22DA               	addwfc	fsr2h,f,c
  3549  003A0E  50DE               	movf	postinc2,w,c
  3550  003A10  10DE               	iorwf	postinc2,w,c
  3551  003A12  B4D8               	btfsc	status,2,c
  3552  003A14  EF0E  F01D         	goto	u4951
  3553  003A18  EF10  F01D         	goto	u4950
  3554  003A1C                     u4951:
  3555  003A1C  EF2B  F01D         	goto	l4836
  3556  003A20                     u4950:
  3557  003A20  EE20 F004          	lfsr	2,4
  3558  003A24  5007               	movf	fputc@fp^0,w,c
  3559  003A26  26D9               	addwf	fsr2l,f,c
  3560  003A28  5008               	movf	(fputc@fp+1)^0,w,c
  3561  003A2A  22DA               	addwfc	fsr2h,f,c
  3562  003A2C  EE10 F002          	lfsr	1,2
  3563  003A30  5007               	movf	fputc@fp^0,w,c
  3564  003A32  26E1               	addwf	fsr1l,f,c
  3565  003A34  5008               	movf	(fputc@fp+1)^0,w,c
  3566  003A36  22E2               	addwfc	fsr1h,f,c
  3567  003A38  50DE               	movf	postinc2,w,c
  3568  003A3A  5CE6               	subwf	postinc1,w,c
  3569  003A3C  50E6               	movf	postinc1,w,c
  3570  003A3E  0A80               	xorlw	128
  3571  003A40  6E0D               	movwf	(??_fputc+4)^0,c
  3572  003A42  50DE               	movf	postinc2,w,c
  3573  003A44  0A80               	xorlw	128
  3574  003A46  580D               	subwfb	(??_fputc+4)^0,w,c
  3575  003A48  B0D8               	btfsc	status,0,c
  3576  003A4A  EF29  F01D         	goto	u4961
  3577  003A4E  EF2B  F01D         	goto	u4960
  3578  003A52                     u4961:
  3579  003A52  EF4E  F01D         	goto	l1290
  3580  003A56                     u4960:
  3581  003A56                     l4836:
  3582  003A56  EE20 F002          	lfsr	2,2
  3583  003A5A  5007               	movf	fputc@fp^0,w,c
  3584  003A5C  26D9               	addwf	fsr2l,f,c
  3585  003A5E  5008               	movf	(fputc@fp+1)^0,w,c
  3586  003A60  22DA               	addwfc	fsr2h,f,c
  3587  003A62  CFDE F009          	movff	postinc2,??_fputc
  3588  003A66  CFDD F00A          	movff	postdec2,??_fputc+1
  3589  003A6A  C007  FFD9         	movff	fputc@fp,fsr2l
  3590  003A6E  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3591  003A72  CFDE F00B          	movff	postinc2,??_fputc+2
  3592  003A76  CFDD F00C          	movff	postdec2,??_fputc+3
  3593  003A7A  5009               	movf	??_fputc^0,w,c
  3594  003A7C  240B               	addwf	(??_fputc+2)^0,w,c
  3595  003A7E  6ED9               	movwf	fsr2l,c
  3596  003A80  500A               	movf	(??_fputc+1)^0,w,c
  3597  003A82  200C               	addwfc	(??_fputc+3)^0,w,c
  3598  003A84  6EDA               	movwf	fsr2h,c
  3599  003A86  C005  FFDF         	movff	fputc@c,indf2
  3600  003A8A  EE20 F002          	lfsr	2,2
  3601  003A8E  5007               	movf	fputc@fp^0,w,c
  3602  003A90  26D9               	addwf	fsr2l,f,c
  3603  003A92  5008               	movf	(fputc@fp+1)^0,w,c
  3604  003A94  22DA               	addwfc	fsr2h,f,c
  3605  003A96  2ADE               	incf	postinc2,f,c
  3606  003A98  0E00               	movlw	0
  3607  003A9A  22DD               	addwfc	postdec2,f,c
  3608  003A9C                     l1290:
  3609  003A9C  0012               	return		;funcret
  3610  003A9E                     __end_of_fputc:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function _putch *****************
  3614 ;; Defined at:
  3615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  c               1    wreg     unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  c               1    0[COMRAM] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 2
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_fputc
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text9
  3644  0043C0                     __ptext9:
  3645                           	callstack 0
  3646  0043C0                     _putch:
  3647                           	callstack 24
  3648  0043C0  0012               	return		;funcret
  3649  0043C2                     __end_of_putch:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _abs *****************
  3653 ;; Defined at:
  3654 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  a               2   22[COMRAM] int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  2   22[COMRAM] int 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;Total ram usage:        4 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 2
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_dtoa
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text10
  3683  0040C0                     __ptext10:
  3684                           	callstack 0
  3685  0040C0                     _abs:
  3686                           	callstack 24
  3687  0040C0  BE18               	btfsc	(abs@a+1)^0,7,c
  3688  0040C2  EF6D  F020         	goto	u5160
  3689  0040C6  5018               	movf	(abs@a+1)^0,w,c
  3690  0040C8  E106               	bnz	u5161
  3691  0040CA  0417               	decf	abs@a^0,w,c
  3692  0040CC  B0D8               	btfsc	status,0,c
  3693  0040CE  EF6B  F020         	goto	u5161
  3694  0040D2  EF6D  F020         	goto	u5160
  3695  0040D6                     u5161:
  3696  0040D6  EF7B  F020         	goto	l1230
  3697  0040DA                     u5160:
  3698  0040DA  C017  F019         	movff	abs@a,??_abs
  3699  0040DE  C018  F01A         	movff	abs@a+1,??_abs+1
  3700  0040E2  1E19               	comf	??_abs^0,f,c
  3701  0040E4  1E1A               	comf	(??_abs+1)^0,f,c
  3702  0040E6  4A19               	infsnz	??_abs^0,f,c
  3703  0040E8  2A1A               	incf	(??_abs+1)^0,f,c
  3704  0040EA  C019  F017         	movff	??_abs,?_abs
  3705  0040EE  C01A  F018         	movff	??_abs+1,?_abs+1
  3706  0040F2  EF7F  F020         	goto	l1233
  3707  0040F6                     l1230:
  3708  0040F6  C017  F017         	movff	abs@a,?_abs
  3709  0040FA  C018  F018         	movff	abs@a+1,?_abs+1
  3710  0040FE                     l1233:
  3711  0040FE  0012               	return		;funcret
  3712  004100                     __end_of_abs:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function ___aomod *****************
  3716 ;; Defined at:
  3717 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  dividend        8    4[COMRAM] long long 
  3720 ;;  divisor         8   12[COMRAM] long long 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  sign            1   21[COMRAM] unsigned char 
  3723 ;;  counter         1   20[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  8    4[COMRAM] long long 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3733 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3736 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;Total ram usage:       18 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 2
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_dtoa
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text11
  3748  003666                     __ptext11:
  3749                           	callstack 0
  3750  003666                     ___aomod:
  3751                           	callstack 24
  3752  003666  0E00               	movlw	0
  3753  003668  6E16               	movwf	___aomod@sign^0,c
  3754  00366A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3755  00366C  EF3C  F01B         	goto	u5060
  3756  003670  EF3A  F01B         	goto	u5061
  3757  003674                     u5061:
  3758  003674  EF4E  F01B         	goto	l4916
  3759  003678                     u5060:
  3760  003678  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3761  00367A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3762  00367C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3763  00367E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3764  003680  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3765  003682  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3766  003684  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3767  003686  6C05               	negf	___aomod@dividend^0,c
  3768  003688  0E00               	movlw	0
  3769  00368A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3770  00368C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3771  00368E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3772  003690  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3773  003692  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3774  003694  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3775  003696  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3776  003698  0E01               	movlw	1
  3777  00369A  6E16               	movwf	___aomod@sign^0,c
  3778  00369C                     l4916:
  3779  00369C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3780  00369E  EF55  F01B         	goto	u5070
  3781  0036A2  EF53  F01B         	goto	u5071
  3782  0036A6                     u5071:
  3783  0036A6  EF65  F01B         	goto	l4920
  3784  0036AA                     u5070:
  3785  0036AA  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3786  0036AC  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3787  0036AE  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3788  0036B0  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3789  0036B2  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3790  0036B4  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3791  0036B6  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3792  0036B8  6C0D               	negf	___aomod@divisor^0,c
  3793  0036BA  0E00               	movlw	0
  3794  0036BC  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3795  0036BE  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3796  0036C0  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3797  0036C2  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3798  0036C4  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3799  0036C6  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3800  0036C8  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3801  0036CA                     l4920:
  3802  0036CA  500D               	movf	___aomod@divisor^0,w,c
  3803  0036CC  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3804  0036CE  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3805  0036D0  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3806  0036D2  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3807  0036D4  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3808  0036D6  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3809  0036D8  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3810  0036DA  B4D8               	btfsc	status,2,c
  3811  0036DC  EF72  F01B         	goto	u5081
  3812  0036E0  EF74  F01B         	goto	u5080
  3813  0036E4                     u5081:
  3814  0036E4  EFBC  F01B         	goto	l4936
  3815  0036E8                     u5080:
  3816  0036E8  0E01               	movlw	1
  3817  0036EA  6E15               	movwf	___aomod@counter^0,c
  3818  0036EC  EF82  F01B         	goto	l4926
  3819  0036F0                     l4924:
  3820  0036F0  90D8               	bcf	status,0,c
  3821  0036F2  360D               	rlcf	___aomod@divisor^0,f,c
  3822  0036F4  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3823  0036F6  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3824  0036F8  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3825  0036FA  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3826  0036FC  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3827  0036FE  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3828  003700  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3829  003702  2A15               	incf	___aomod@counter^0,f,c
  3830  003704                     l4926:
  3831  003704  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3832  003706  EF87  F01B         	goto	u5091
  3833  00370A  EF89  F01B         	goto	u5090
  3834  00370E                     u5091:
  3835  00370E  EF78  F01B         	goto	l4924
  3836  003712                     u5090:
  3837  003712                     l4928:
  3838  003712  500D               	movf	___aomod@divisor^0,w,c
  3839  003714  5C05               	subwf	___aomod@dividend^0,w,c
  3840  003716  500E               	movf	(___aomod@divisor+1)^0,w,c
  3841  003718  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3842  00371A  500F               	movf	(___aomod@divisor+2)^0,w,c
  3843  00371C  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3844  00371E  5010               	movf	(___aomod@divisor+3)^0,w,c
  3845  003720  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3846  003722  5011               	movf	(___aomod@divisor+4)^0,w,c
  3847  003724  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3848  003726  5012               	movf	(___aomod@divisor+5)^0,w,c
  3849  003728  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3850  00372A  5013               	movf	(___aomod@divisor+6)^0,w,c
  3851  00372C  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3852  00372E  5014               	movf	(___aomod@divisor+7)^0,w,c
  3853  003730  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3854  003732  A0D8               	btfss	status,0,c
  3855  003734  EF9E  F01B         	goto	u5101
  3856  003738  EFA0  F01B         	goto	u5100
  3857  00373C                     u5101:
  3858  00373C  EFB0  F01B         	goto	l4932
  3859  003740                     u5100:
  3860  003740  500D               	movf	___aomod@divisor^0,w,c
  3861  003742  5E05               	subwf	___aomod@dividend^0,f,c
  3862  003744  500E               	movf	(___aomod@divisor+1)^0,w,c
  3863  003746  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3864  003748  500F               	movf	(___aomod@divisor+2)^0,w,c
  3865  00374A  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3866  00374C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3867  00374E  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3868  003750  5011               	movf	(___aomod@divisor+4)^0,w,c
  3869  003752  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3870  003754  5012               	movf	(___aomod@divisor+5)^0,w,c
  3871  003756  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3872  003758  5013               	movf	(___aomod@divisor+6)^0,w,c
  3873  00375A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3874  00375C  5014               	movf	(___aomod@divisor+7)^0,w,c
  3875  00375E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3876  003760                     l4932:
  3877  003760  90D8               	bcf	status,0,c
  3878  003762  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3879  003764  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3880  003766  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3881  003768  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3882  00376A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3883  00376C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3884  00376E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3885  003770  320D               	rrcf	___aomod@divisor^0,f,c
  3886  003772  2E15               	decfsz	___aomod@counter^0,f,c
  3887  003774  EF89  F01B         	goto	l4928
  3888  003778                     l4936:
  3889  003778  5016               	movf	___aomod@sign^0,w,c
  3890  00377A  B4D8               	btfsc	status,2,c
  3891  00377C  EFC2  F01B         	goto	u5111
  3892  003780  EFC4  F01B         	goto	u5110
  3893  003784                     u5111:
  3894  003784  EFD4  F01B         	goto	l4940
  3895  003788                     u5110:
  3896  003788  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3897  00378A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3898  00378C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3899  00378E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3900  003790  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3901  003792  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3902  003794  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3903  003796  6C05               	negf	___aomod@dividend^0,c
  3904  003798  0E00               	movlw	0
  3905  00379A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3906  00379C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3907  00379E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3908  0037A0  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3909  0037A2  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3910  0037A4  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3911  0037A6  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3912  0037A8                     l4940:
  3913  0037A8  C005  F005         	movff	___aomod@dividend,?___aomod
  3914  0037AC  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3915  0037B0  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3916  0037B4  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3917  0037B8  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3918  0037BC  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3919  0037C0  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3920  0037C4  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3921  0037C8  0012               	return		;funcret
  3922  0037CA                     __end_of___aomod:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function ___aodiv *****************
  3926 ;; Defined at:
  3927 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  dividend        8    4[COMRAM] long long 
  3930 ;;  divisor         8   12[COMRAM] long long 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  quotient        8   22[COMRAM] long long 
  3933 ;;  sign            1   21[COMRAM] unsigned char 
  3934 ;;  counter         1   20[COMRAM] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  8    4[COMRAM] long long 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3944 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;Total ram usage:       26 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_dtoa
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text12
  3959  0034DE                     __ptext12:
  3960                           	callstack 0
  3961  0034DE                     ___aodiv:
  3962                           	callstack 24
  3963  0034DE  0E00               	movlw	0
  3964  0034E0  6E16               	movwf	___aodiv@sign^0,c
  3965  0034E2  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3966  0034E4  EF78  F01A         	goto	u4990
  3967  0034E8  EF76  F01A         	goto	u4991
  3968  0034EC                     u4991:
  3969  0034EC  EF8A  F01A         	goto	l4872
  3970  0034F0                     u4990:
  3971  0034F0  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3972  0034F2  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3973  0034F4  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3974  0034F6  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3975  0034F8  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3976  0034FA  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3977  0034FC  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3978  0034FE  6C0D               	negf	___aodiv@divisor^0,c
  3979  003500  0E00               	movlw	0
  3980  003502  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3981  003504  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3982  003506  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3983  003508  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3984  00350A  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3985  00350C  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3986  00350E  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3987  003510  0E01               	movlw	1
  3988  003512  6E16               	movwf	___aodiv@sign^0,c
  3989  003514                     l4872:
  3990  003514  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3991  003516  EF91  F01A         	goto	u5000
  3992  00351A  EF8F  F01A         	goto	u5001
  3993  00351E                     u5001:
  3994  00351E  EFA3  F01A         	goto	l4878
  3995  003522                     u5000:
  3996  003522  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3997  003524  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3998  003526  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3999  003528  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  4000  00352A  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  4001  00352C  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  4002  00352E  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  4003  003530  6C05               	negf	___aodiv@dividend^0,c
  4004  003532  0E00               	movlw	0
  4005  003534  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  4006  003536  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  4007  003538  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  4008  00353A  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  4009  00353C  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  4010  00353E  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  4011  003540  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  4012  003542  0E01               	movlw	1
  4013  003544  1A16               	xorwf	___aodiv@sign^0,f,c
  4014  003546                     l4878:
  4015  003546  EE20  F017         	lfsr	2,___aodiv@quotient
  4016  00354A  0E07               	movlw	7
  4017  00354C                     u5011:
  4018  00354C  6ADE               	clrf	postinc2,c
  4019  00354E  06E8               	decf	wreg,f,c
  4020  003550  E2FD               	bc	u5011
  4021  003552  500D               	movf	___aodiv@divisor^0,w,c
  4022  003554  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  4023  003556  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  4024  003558  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  4025  00355A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  4026  00355C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  4027  00355E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  4028  003560  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  4029  003562  B4D8               	btfsc	status,2,c
  4030  003564  EFB6  F01A         	goto	u5021
  4031  003568  EFB8  F01A         	goto	u5020
  4032  00356C                     u5021:
  4033  00356C  EF0A  F01B         	goto	l4900
  4034  003570                     u5020:
  4035  003570  0E01               	movlw	1
  4036  003572  6E15               	movwf	___aodiv@counter^0,c
  4037  003574  EFC6  F01A         	goto	l4886
  4038  003578                     l4884:
  4039  003578  90D8               	bcf	status,0,c
  4040  00357A  360D               	rlcf	___aodiv@divisor^0,f,c
  4041  00357C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  4042  00357E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  4043  003580  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  4044  003582  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  4045  003584  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  4046  003586  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  4047  003588  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  4048  00358A  2A15               	incf	___aodiv@counter^0,f,c
  4049  00358C                     l4886:
  4050  00358C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  4051  00358E  EFCB  F01A         	goto	u5031
  4052  003592  EFCD  F01A         	goto	u5030
  4053  003596                     u5031:
  4054  003596  EFBC  F01A         	goto	l4884
  4055  00359A                     u5030:
  4056  00359A                     l4888:
  4057  00359A  90D8               	bcf	status,0,c
  4058  00359C  3617               	rlcf	___aodiv@quotient^0,f,c
  4059  00359E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  4060  0035A0  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  4061  0035A2  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  4062  0035A4  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  4063  0035A6  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  4064  0035A8  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  4065  0035AA  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  4066  0035AC  500D               	movf	___aodiv@divisor^0,w,c
  4067  0035AE  5C05               	subwf	___aodiv@dividend^0,w,c
  4068  0035B0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4069  0035B2  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  4070  0035B4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4071  0035B6  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  4072  0035B8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4073  0035BA  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  4074  0035BC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4075  0035BE  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  4076  0035C0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4077  0035C2  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  4078  0035C4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4079  0035C6  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  4080  0035C8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4081  0035CA  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  4082  0035CC  A0D8               	btfss	status,0,c
  4083  0035CE  EFEB  F01A         	goto	u5041
  4084  0035D2  EFED  F01A         	goto	u5040
  4085  0035D6                     u5041:
  4086  0035D6  EFFE  F01A         	goto	l4896
  4087  0035DA                     u5040:
  4088  0035DA  500D               	movf	___aodiv@divisor^0,w,c
  4089  0035DC  5E05               	subwf	___aodiv@dividend^0,f,c
  4090  0035DE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  4091  0035E0  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  4092  0035E2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  4093  0035E4  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  4094  0035E6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  4095  0035E8  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  4096  0035EA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  4097  0035EC  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  4098  0035EE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  4099  0035F0  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  4100  0035F2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  4101  0035F4  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  4102  0035F6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  4103  0035F8  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  4104  0035FA  8017               	bsf	___aodiv@quotient^0,0,c
  4105  0035FC                     l4896:
  4106  0035FC  90D8               	bcf	status,0,c
  4107  0035FE  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  4108  003600  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  4109  003602  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  4110  003604  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  4111  003606  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  4112  003608  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  4113  00360A  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  4114  00360C  320D               	rrcf	___aodiv@divisor^0,f,c
  4115  00360E  2E15               	decfsz	___aodiv@counter^0,f,c
  4116  003610  EFCD  F01A         	goto	l4888
  4117  003614                     l4900:
  4118  003614  5016               	movf	___aodiv@sign^0,w,c
  4119  003616  B4D8               	btfsc	status,2,c
  4120  003618  EF10  F01B         	goto	u5051
  4121  00361C  EF12  F01B         	goto	u5050
  4122  003620                     u5051:
  4123  003620  EF22  F01B         	goto	l4904
  4124  003624                     u5050:
  4125  003624  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  4126  003626  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  4127  003628  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  4128  00362A  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  4129  00362C  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  4130  00362E  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  4131  003630  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  4132  003632  6C17               	negf	___aodiv@quotient^0,c
  4133  003634  0E00               	movlw	0
  4134  003636  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  4135  003638  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  4136  00363A  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  4137  00363C  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  4138  00363E  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  4139  003640  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  4140  003642  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  4141  003644                     l4904:
  4142  003644  C017  F005         	movff	___aodiv@quotient,?___aodiv
  4143  003648  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  4144  00364C  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  4145  003650  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  4146  003654  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  4147  003658  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  4148  00365C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  4149  003660  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  4150  003664  0012               	return		;funcret
  4151  003666                     __end_of___aodiv:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _atoi *****************
  4155 ;; Defined at:
  4156 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4159 ;;		 -> STR_5(13), STR_4(12), STR_3(12), STR_2(12), 
  4160 ;;		 -> STR_1(22), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  n               2   24[COMRAM] int 
  4163 ;;  neg             2   17[COMRAM] int 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2   11[COMRAM] int 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:       15 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 3
  4180 ;; This function calls:
  4181 ;;		___wmul
  4182 ;;		_isdigit
  4183 ;;		_isspace
  4184 ;; This function is called by:
  4185 ;;		_vfpfcnvrt
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text13
  4190  00333A                     __ptext13:
  4191                           	callstack 0
  4192  00333A                     _atoi:
  4193                           	callstack 24
  4194  00333A  0E00               	movlw	0
  4195  00333C  6E1A               	movwf	(atoi@n+1)^0,c
  4196  00333E  0E00               	movlw	0
  4197  003340  6E19               	movwf	atoi@n^0,c
  4198  003342  0E00               	movlw	0
  4199  003344  6E13               	movwf	(atoi@neg+1)^0,c
  4200  003346  0E00               	movlw	0
  4201  003348  6E12               	movwf	atoi@neg^0,c
  4202  00334A  EFA9  F019         	goto	l5052
  4203  00334E                     l5050:
  4204  00334E  4A0C               	infsnz	atoi@s^0,f,c
  4205  003350  2A0D               	incf	(atoi@s+1)^0,f,c
  4206  003352                     l5052:
  4207  003352  0E01               	movlw	1
  4208  003354  6E18               	movwf	_atoi$2270^0,c
  4209  003356  C00C  FFF6         	movff	atoi@s,tblptrl
  4210  00335A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4211  00335E                     	if	0	;tblptru may be non-zero
  4212  00335E                     	endif
  4213  00335E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4214  00335E  0E00               	movlw	low (__mediumconst shr (0+16))
  4215  003360  6EF8               	movwf	tblptru,c
  4216  003362                     	endif
  4217  003362  0008               	tblrd		*
  4218  003364  50F5               	movf	tablat,w,c
  4219  003366  0A20               	xorlw	32
  4220  003368  B4D8               	btfsc	status,2,c
  4221  00336A  EFB9  F019         	goto	u5361
  4222  00336E  EFBB  F019         	goto	u5360
  4223  003372                     u5361:
  4224  003372  EFDA  F019         	goto	l5060
  4225  003376                     u5360:
  4226  003376  0EF7               	movlw	247
  4227  003378  6E0E               	movwf	??_atoi^0,c
  4228  00337A  0EFF               	movlw	255
  4229  00337C  6E0F               	movwf	(??_atoi+1)^0,c
  4230  00337E  C00C  FFF6         	movff	atoi@s,tblptrl
  4231  003382  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4232  003386                     	if	0	;tblptru may be non-zero
  4233  003386                     	endif
  4234  003386                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4235  003386  0E00               	movlw	low (__mediumconst shr (0+16))
  4236  003388  6EF8               	movwf	tblptru,c
  4237  00338A                     	endif
  4238  00338A  0008               	tblrd		*
  4239  00338C  50F5               	movf	tablat,w,c
  4240  00338E  6E10               	movwf	(??_atoi+2)^0,c
  4241  003390  6A11               	clrf	(??_atoi+3)^0,c
  4242  003392  500E               	movf	??_atoi^0,w,c
  4243  003394  2610               	addwf	(??_atoi+2)^0,f,c
  4244  003396  500F               	movf	(??_atoi+1)^0,w,c
  4245  003398  2211               	addwfc	(??_atoi+3)^0,f,c
  4246  00339A  5011               	movf	(??_atoi+3)^0,w,c
  4247  00339C  E109               	bnz	u5370
  4248  00339E  0E05               	movlw	5
  4249  0033A0  5C10               	subwf	(??_atoi+2)^0,w,c
  4250  0033A2  A0D8               	btfss	status,0,c
  4251  0033A4  EFD6  F019         	goto	u5371
  4252  0033A8  EFD8  F019         	goto	u5370
  4253  0033AC                     u5371:
  4254  0033AC  EFDA  F019         	goto	l5060
  4255  0033B0                     u5370:
  4256  0033B0  0E00               	movlw	0
  4257  0033B2  6E18               	movwf	_atoi$2270^0,c
  4258  0033B4                     l5060:
  4259  0033B4  C018  F014         	movff	_atoi$2270,_atoi$2269
  4260  0033B8  6A15               	clrf	(_atoi$2269+1)^0,c
  4261  0033BA  5014               	movf	_atoi$2269^0,w,c
  4262  0033BC  1015               	iorwf	(_atoi$2269+1)^0,w,c
  4263  0033BE  A4D8               	btfss	status,2,c
  4264  0033C0  EFE4  F019         	goto	u5381
  4265  0033C4  EFE6  F019         	goto	u5380
  4266  0033C8                     u5381:
  4267  0033C8  EFA7  F019         	goto	l5050
  4268  0033CC                     u5380:
  4269  0033CC  EFF0  F019         	goto	l5070
  4270  0033D0                     l5066:
  4271  0033D0  0E00               	movlw	0
  4272  0033D2  6E13               	movwf	(atoi@neg+1)^0,c
  4273  0033D4  0E01               	movlw	1
  4274  0033D6  6E12               	movwf	atoi@neg^0,c
  4275  0033D8                     l5068:
  4276  0033D8  4A0C               	infsnz	atoi@s^0,f,c
  4277  0033DA  2A0D               	incf	(atoi@s+1)^0,f,c
  4278  0033DC  EF29  F01A         	goto	l5076
  4279  0033E0                     l5070:
  4280  0033E0  C00C  FFF6         	movff	atoi@s,tblptrl
  4281  0033E4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4282  0033E8                     	if	0	;tblptru may be non-zero
  4283  0033E8                     	endif
  4284  0033E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4285  0033E8  0E00               	movlw	low (__mediumconst shr (0+16))
  4286  0033EA  6EF8               	movwf	tblptru,c
  4287  0033EC                     	endif
  4288  0033EC  0008               	tblrd		*
  4289  0033EE  50F5               	movf	tablat,w,c
  4290  0033F0  6E0E               	movwf	??_atoi^0,c
  4291  0033F2  6A0F               	clrf	(??_atoi+1)^0,c
  4292                           
  4293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4294                           ; Switch size 1, requested type "simple"
  4295                           ; Number of cases is 1, Range of values is 0 to 0
  4296                           ; switch strategies available:
  4297                           ; Name         Instructions Cycles
  4298                           ; simple_byte            4     3 (average)
  4299                           ;	Chosen strategy is simple_byte
  4300  0033F4  500F               	movf	(??_atoi+1)^0,w,c
  4301  0033F6  0A00               	xorlw	0	; case 0
  4302  0033F8  B4D8               	btfsc	status,2,c
  4303  0033FA  EF01  F01A         	goto	l5666
  4304  0033FE  EF29  F01A         	goto	l5076
  4305  003402                     l5666:
  4306                           
  4307                           ; Switch size 1, requested type "simple"
  4308                           ; Number of cases is 2, Range of values is 43 to 45
  4309                           ; switch strategies available:
  4310                           ; Name         Instructions Cycles
  4311                           ; simple_byte            7     4 (average)
  4312                           ;	Chosen strategy is simple_byte
  4313  003402  500E               	movf	??_atoi^0,w,c
  4314  003404  0A2B               	xorlw	43	; case 43
  4315  003406  B4D8               	btfsc	status,2,c
  4316  003408  EFEC  F019         	goto	l5068
  4317  00340C  0A06               	xorlw	6	; case 45
  4318  00340E  B4D8               	btfsc	status,2,c
  4319  003410  EFE8  F019         	goto	l5066
  4320  003414  EF29  F01A         	goto	l5076
  4321  003418                     l5072:
  4322  003418  C019  F005         	movff	atoi@n,___wmul@multiplier
  4323  00341C  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4324  003420  0E00               	movlw	0
  4325  003422  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4326  003424  0E0A               	movlw	10
  4327  003426  6E07               	movwf	___wmul@multiplicand^0,c
  4328  003428  EC6D  F021         	call	___wmul	;wreg free
  4329  00342C  C00C  FFF6         	movff	atoi@s,tblptrl
  4330  003430  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4331  003434                     	if	0	;tblptru may be non-zero
  4332  003434                     	endif
  4333  003434                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4334  003434  0E00               	movlw	low (__mediumconst shr (0+16))
  4335  003436  6EF8               	movwf	tblptru,c
  4336  003438                     	endif
  4337  003438  0008               	tblrd		*
  4338  00343A  50F5               	movf	tablat,w,c
  4339  00343C  5E05               	subwf	?___wmul^0,f,c
  4340  00343E  0E00               	movlw	0
  4341  003440  5A06               	subwfb	(?___wmul+1)^0,f,c
  4342  003442  0E30               	movlw	48
  4343  003444  2405               	addwf	?___wmul^0,w,c
  4344  003446  6E19               	movwf	atoi@n^0,c
  4345  003448  0E00               	movlw	0
  4346  00344A  2006               	addwfc	(?___wmul+1)^0,w,c
  4347  00344C  6E1A               	movwf	(atoi@n+1)^0,c
  4348  00344E  EFEC  F019         	goto	l5068
  4349  003452                     l5076:
  4350  003452  0ED0               	movlw	208
  4351  003454  6E0E               	movwf	??_atoi^0,c
  4352  003456  0EFF               	movlw	255
  4353  003458  6E0F               	movwf	(??_atoi+1)^0,c
  4354  00345A  C00C  FFF6         	movff	atoi@s,tblptrl
  4355  00345E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4356  003462                     	if	0	;tblptru may be non-zero
  4357  003462                     	endif
  4358  003462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4359  003462  0E00               	movlw	low (__mediumconst shr (0+16))
  4360  003464  6EF8               	movwf	tblptru,c
  4361  003466                     	endif
  4362  003466  0008               	tblrd		*
  4363  003468  50F5               	movf	tablat,w,c
  4364  00346A  6E10               	movwf	(??_atoi+2)^0,c
  4365  00346C  6A11               	clrf	(??_atoi+3)^0,c
  4366  00346E  500E               	movf	??_atoi^0,w,c
  4367  003470  2610               	addwf	(??_atoi+2)^0,f,c
  4368  003472  500F               	movf	(??_atoi+1)^0,w,c
  4369  003474  2211               	addwfc	(??_atoi+3)^0,f,c
  4370  003476  5011               	movf	(??_atoi+3)^0,w,c
  4371  003478  E10A               	bnz	u5390
  4372  00347A  0E0A               	movlw	10
  4373  00347C  5C10               	subwf	(??_atoi+2)^0,w,c
  4374  00347E  A0D8               	btfss	status,0,c
  4375  003480  EF44  F01A         	goto	u5391
  4376  003484  EF47  F01A         	goto	u5390
  4377  003488                     u5391:
  4378  003488  0E01               	movlw	1
  4379  00348A  EF48  F01A         	goto	u5400
  4380  00348E                     u5390:
  4381  00348E  0E00               	movlw	0
  4382  003490                     u5400:
  4383  003490  6E16               	movwf	_atoi$2271^0,c
  4384  003492  6A17               	clrf	(_atoi$2271+1)^0,c
  4385  003494  5016               	movf	_atoi$2271^0,w,c
  4386  003496  1017               	iorwf	(_atoi$2271+1)^0,w,c
  4387  003498  A4D8               	btfss	status,2,c
  4388  00349A  EF51  F01A         	goto	u5411
  4389  00349E  EF53  F01A         	goto	u5410
  4390  0034A2                     u5411:
  4391  0034A2  EF0C  F01A         	goto	l5072
  4392  0034A6                     u5410:
  4393  0034A6  5012               	movf	atoi@neg^0,w,c
  4394  0034A8  1013               	iorwf	(atoi@neg+1)^0,w,c
  4395  0034AA  A4D8               	btfss	status,2,c
  4396  0034AC  EF5A  F01A         	goto	u5421
  4397  0034B0  EF5C  F01A         	goto	u5420
  4398  0034B4                     u5421:
  4399  0034B4  EF6A  F01A         	goto	l1261
  4400  0034B8                     u5420:
  4401  0034B8  C019  F00E         	movff	atoi@n,??_atoi
  4402  0034BC  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  4403  0034C0  1E0E               	comf	??_atoi^0,f,c
  4404  0034C2  1E0F               	comf	(??_atoi+1)^0,f,c
  4405  0034C4  4A0E               	infsnz	??_atoi^0,f,c
  4406  0034C6  2A0F               	incf	(??_atoi+1)^0,f,c
  4407  0034C8  C00E  F00C         	movff	??_atoi,?_atoi
  4408  0034CC  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4409  0034D0  EF6E  F01A         	goto	l1264
  4410  0034D4                     l1261:
  4411  0034D4  C019  F00C         	movff	atoi@n,?_atoi
  4412  0034D8  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  4413  0034DC                     l1264:
  4414  0034DC  0012               	return		;funcret
  4415  0034DE                     __end_of_atoi:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _isspace *****************
  4419 ;; Defined at:
  4420 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  c               2    4[COMRAM] int 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  2    4[COMRAM] int 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4436 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;Total ram usage:        7 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 2
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_atoi
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text14
  4449  003E20                     __ptext14:
  4450                           	callstack 0
  4451  003E20                     _isspace:
  4452                           	callstack 24
  4453  003E20  0E01               	movlw	1
  4454  003E22  6E0B               	movwf	_isspace$2287^0,c
  4455  003E24  0E20               	movlw	32
  4456  003E26  1805               	xorwf	isspace@c^0,w,c
  4457  003E28  1006               	iorwf	(isspace@c+1)^0,w,c
  4458  003E2A  B4D8               	btfsc	status,2,c
  4459  003E2C  EF1A  F01F         	goto	u5191
  4460  003E30  EF1C  F01F         	goto	u5190
  4461  003E34                     u5191:
  4462  003E34  EF35  F01F         	goto	l4982
  4463  003E38                     u5190:
  4464  003E38  0EF7               	movlw	247
  4465  003E3A  6E07               	movwf	??_isspace^0,c
  4466  003E3C  0EFF               	movlw	255
  4467  003E3E  6E08               	movwf	(??_isspace+1)^0,c
  4468  003E40  C005  F009         	movff	isspace@c,??_isspace+2
  4469  003E44  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4470  003E48  5007               	movf	??_isspace^0,w,c
  4471  003E4A  2609               	addwf	(??_isspace+2)^0,f,c
  4472  003E4C  5008               	movf	(??_isspace+1)^0,w,c
  4473  003E4E  220A               	addwfc	(??_isspace+3)^0,f,c
  4474  003E50  500A               	movf	(??_isspace+3)^0,w,c
  4475  003E52  E109               	bnz	u5200
  4476  003E54  0E05               	movlw	5
  4477  003E56  5C09               	subwf	(??_isspace+2)^0,w,c
  4478  003E58  A0D8               	btfss	status,0,c
  4479  003E5A  EF31  F01F         	goto	u5201
  4480  003E5E  EF33  F01F         	goto	u5200
  4481  003E62                     u5201:
  4482  003E62  EF35  F01F         	goto	l4982
  4483  003E66                     u5200:
  4484  003E66  0E00               	movlw	0
  4485  003E68  6E0B               	movwf	_isspace$2287^0,c
  4486  003E6A                     l4982:
  4487  003E6A  C00B  F005         	movff	_isspace$2287,?_isspace
  4488  003E6E  6A06               	clrf	(?_isspace+1)^0,c
  4489  003E70  0012               	return		;funcret
  4490  003E72                     __end_of_isspace:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _isdigit *****************
  4494 ;; Defined at:
  4495 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  c               2    4[COMRAM] int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2    4[COMRAM] int 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;Total ram usage:        6 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 2
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_vfpfcnvrt
  4520 ;;		_atoi
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text15
  4525  004100                     __ptext15:
  4526                           	callstack 0
  4527  004100                     _isdigit:
  4528                           	callstack 25
  4529  004100  0ED0               	movlw	208
  4530  004102  6E07               	movwf	??_isdigit^0,c
  4531  004104  0EFF               	movlw	255
  4532  004106  6E08               	movwf	(??_isdigit+1)^0,c
  4533  004108  C005  F009         	movff	isdigit@c,??_isdigit+2
  4534  00410C  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4535  004110  5007               	movf	??_isdigit^0,w,c
  4536  004112  2609               	addwf	(??_isdigit+2)^0,f,c
  4537  004114  5008               	movf	(??_isdigit+1)^0,w,c
  4538  004116  220A               	addwfc	(??_isdigit+3)^0,f,c
  4539  004118  500A               	movf	(??_isdigit+3)^0,w,c
  4540  00411A  E10A               	bnz	u5170
  4541  00411C  0E0A               	movlw	10
  4542  00411E  5C09               	subwf	(??_isdigit+2)^0,w,c
  4543  004120  A0D8               	btfss	status,0,c
  4544  004122  EF95  F020         	goto	u5171
  4545  004126  EF98  F020         	goto	u5170
  4546  00412A                     u5171:
  4547  00412A  0E01               	movlw	1
  4548  00412C  EF99  F020         	goto	u5180
  4549  004130                     u5170:
  4550  004130  0E00               	movlw	0
  4551  004132                     u5180:
  4552  004132  6E05               	movwf	?_isdigit^0,c
  4553  004134  6A06               	clrf	(?_isdigit+1)^0,c
  4554  004136  0012               	return		;funcret
  4555  004138                     __end_of_isdigit:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function ___wmul *****************
  4559 ;; Defined at:
  4560 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  multiplier      2    4[COMRAM] unsigned int 
  4563 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  product         2    8[COMRAM] unsigned int 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2    4[COMRAM] unsigned int 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0, prodl, prodh
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;Total ram usage:        6 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 2
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;;		_atoi
  4587 ;;		_determine_color1
  4588 ;;		_determine_color2
  4589 ;;		_determine_color3
  4590 ;;		_setMotorPWM
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text16
  4595  0042DA                     __ptext16:
  4596                           	callstack 0
  4597  0042DA                     ___wmul:
  4598                           	callstack 24
  4599  0042DA  5005               	movf	___wmul@multiplier^0,w,c
  4600  0042DC  0207               	mulwf	___wmul@multiplicand^0,c
  4601  0042DE  CFF3 F009          	movff	prodl,___wmul@product
  4602  0042E2  CFF4 F00A          	movff	prodh,___wmul@product+1
  4603  0042E6  5005               	movf	___wmul@multiplier^0,w,c
  4604  0042E8  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4605  0042EA  50F3               	movf	243,w,c
  4606  0042EC  260A               	addwf	(___wmul@product+1)^0,f,c
  4607  0042EE  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4608  0042F0  0207               	mulwf	___wmul@multiplicand^0,c
  4609  0042F2  50F3               	movf	243,w,c
  4610  0042F4  260A               	addwf	(___wmul@product+1)^0,f,c
  4611  0042F6  C009  F005         	movff	___wmul@product,?___wmul
  4612  0042FA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4613  0042FE  0012               	return		;funcret
  4614  004300                     __end_of___wmul:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _sendTxBuf *****************
  4618 ;; Defined at:
  4619 ;;		line 106 in file "serial.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 3
  4640 ;; This function calls:
  4641 ;;		_isDataInTxBuf
  4642 ;; This function is called by:
  4643 ;;		_main
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text17
  4648  004340                     __ptext17:
  4649                           	callstack 0
  4650  004340                     _sendTxBuf:
  4651                           	callstack 27
  4652  004340                     
  4653                           ;serial.c: 107:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  4654  004340  ECAD  F021         	call	_isDataInTxBuf	;wreg free
  4655  004344  0900               	iorlw	0
  4656  004346  B4D8               	btfsc	status,2,c
  4657  004348  EFA8  F021         	goto	u4241
  4658  00434C  EFAA  F021         	goto	u4240
  4659  004350                     u4241:
  4660  004350  EFAC  F021         	goto	l407
  4661  004354                     u4240:
  4662  004354  010E               	movlb	14	; () banked
  4663  004356  852D               	bsf	45,2,b	;volatile
  4664  004358                     l407:
  4665  004358  0012               	return		;funcret
  4666  00435A                     __end_of_sendTxBuf:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _isDataInTxBuf *****************
  4670 ;; Defined at:
  4671 ;;		line 93 in file "serial.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      unsigned char 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 2
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_sendTxBuf
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text18
  4700  00435A                     __ptext18:
  4701                           	callstack 0
  4702  00435A                     _isDataInTxBuf:
  4703                           	callstack 27
  4704  00435A                     
  4705                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  4706  00435A  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  4707  00435C  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4708  00435E  A4D8               	btfss	status,2,c
  4709  004360  EFB4  F021         	goto	u3201
  4710  004364  EFB7  F021         	goto	u3200
  4711  004368                     u3201:
  4712  004368  0E01               	movlw	1
  4713  00436A  EFB8  F021         	goto	u3210
  4714  00436E                     u3200:
  4715  00436E  0E00               	movlw	0
  4716  004370                     u3210:
  4717  004370  0012               	return		;funcret
  4718  004372                     __end_of_isDataInTxBuf:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _read_colours *****************
  4722 ;; Defined at:
  4723 ;;		line 85 in file "color.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  m               2   15[COMRAM] PTR struct RGB_val
  4726 ;;		 -> main@test(16), 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;Total ram usage:        2 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 5
  4745 ;; This function calls:
  4746 ;;		_color_read_Blue
  4747 ;;		_color_read_Clear
  4748 ;;		_color_read_Green
  4749 ;;		_color_read_Red
  4750 ;; This function is called by:
  4751 ;;		_main
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text19
  4756  003CB0                     __ptext19:
  4757                           	callstack 0
  4758  003CB0                     _read_colours:
  4759                           	callstack 25
  4760  003CB0                     
  4761                           ;color.c: 86:     (m->C) = color_read_Clear();
  4762  003CB0  EC89  F01F         	call	_color_read_Clear	;wreg free
  4763  003CB4  EE20 F008          	lfsr	2,8
  4764  003CB8  5010               	movf	read_colours@m^0,w,c
  4765  003CBA  26D9               	addwf	fsr2l,f,c
  4766  003CBC  5011               	movf	(read_colours@m+1)^0,w,c
  4767  003CBE  22DA               	addwfc	fsr2h,f,c
  4768  003CC0  C009  FFDE         	movff	?_color_read_Clear,postinc2
  4769  003CC4  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  4770                           
  4771                           ;color.c: 87:     (m->R) = color_read_Red();
  4772  003CC8  EC39  F01F         	call	_color_read_Red	;wreg free
  4773  003CCC  EE20 F00A          	lfsr	2,10
  4774  003CD0  5010               	movf	read_colours@m^0,w,c
  4775  003CD2  26D9               	addwf	fsr2l,f,c
  4776  003CD4  5011               	movf	(read_colours@m+1)^0,w,c
  4777  003CD6  22DA               	addwfc	fsr2h,f,c
  4778  003CD8  C009  FFDE         	movff	?_color_read_Red,postinc2
  4779  003CDC  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  4780                           
  4781                           ;color.c: 88:     (m->G) = color_read_Green();
  4782  003CE0  EC61  F01F         	call	_color_read_Green	;wreg free
  4783  003CE4  EE20 F00C          	lfsr	2,12
  4784  003CE8  5010               	movf	read_colours@m^0,w,c
  4785  003CEA  26D9               	addwf	fsr2l,f,c
  4786  003CEC  5011               	movf	(read_colours@m+1)^0,w,c
  4787  003CEE  22DA               	addwfc	fsr2h,f,c
  4788  003CF0  C009  FFDE         	movff	?_color_read_Green,postinc2
  4789  003CF4  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  4790                           
  4791                           ;color.c: 89:     (m->B) = color_read_Blue();
  4792  003CF8  ECB1  F01F         	call	_color_read_Blue	;wreg free
  4793  003CFC  EE20 F00E          	lfsr	2,14
  4794  003D00  5010               	movf	read_colours@m^0,w,c
  4795  003D02  26D9               	addwf	fsr2l,f,c
  4796  003D04  5011               	movf	(read_colours@m+1)^0,w,c
  4797  003D06  22DA               	addwfc	fsr2h,f,c
  4798  003D08  C009  FFDE         	movff	?_color_read_Blue,postinc2
  4799  003D0C  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  4800  003D10  0012               	return		;funcret
  4801  003D12                     __end_of_read_colours:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _initUSART4 *****************
  4805 ;; Defined at:
  4806 ;;		line 4 in file "serial.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 2
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text20
  4835  004300                     __ptext20:
  4836                           	callstack 0
  4837  004300                     _initUSART4:
  4838                           	callstack 28
  4839  004300                     
  4840                           ;serial.c: 8:     RC0PPS = 0x12;
  4841  004300  0E12               	movlw	18
  4842  004302  010E               	movlb	14	; () banked
  4843  004304  6F62               	movwf	98,b	;volatile
  4844                           
  4845                           ;serial.c: 9:     RX4PPS = 0x11;
  4846  004306  0E11               	movlw	17
  4847  004308  6F15               	movwf	21,b	;volatile
  4848  00430A                     
  4849                           ; BSR set to: 14
  4850                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  4851  00430A  8283               	bsf	131,1,c	;volatile
  4852  00430C                     
  4853                           ; BSR set to: 14
  4854                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4855  00430C  97E9               	bcf	233,3,b	;volatile
  4856  00430E                     
  4857                           ; BSR set to: 14
  4858                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4859  00430E  95E8               	bcf	232,2,b	;volatile
  4860                           
  4861                           ;serial.c: 14:     SP4BRGL = 51;
  4862  004310  0E33               	movlw	51
  4863  004312  6FE5               	movwf	229,b	;volatile
  4864                           
  4865                           ;serial.c: 15:     SP4BRGH = 0;
  4866  004314  0E00               	movlw	0
  4867  004316  6FE6               	movwf	230,b	;volatile
  4868  004318                     
  4869                           ; BSR set to: 14
  4870                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  4871  004318  89E7               	bsf	231,4,b	;volatile
  4872  00431A                     
  4873                           ; BSR set to: 14
  4874                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  4875  00431A  8BE8               	bsf	232,5,b	;volatile
  4876  00431C                     
  4877                           ; BSR set to: 14
  4878                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  4879  00431C  8FE7               	bsf	231,7,b	;volatile
  4880  00431E                     
  4881                           ; BSR set to: 14
  4882  00431E  0012               	return		;funcret
  4883  004320                     __end_of_initUSART4:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _initDCmotorsPWM *****************
  4887 ;; Defined at:
  4888 ;;		line 5 in file "dc_motor.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  PWMperiod       2    4[COMRAM] int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;Total ram usage:        2 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 2
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_main
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text21
  4917  00403C                     __ptext21:
  4918                           	callstack 0
  4919  00403C                     _initDCmotorsPWM:
  4920                           	callstack 28
  4921  00403C                     
  4922                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4923  00403C  9485               	bcf	133,2,c	;volatile
  4924                           
  4925                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4926  00403E  9E83               	bcf	131,7,c	;volatile
  4927                           
  4928                           ;dc_motor.c: 9:     TRISGbits.TRISG6=0;
  4929  004040  9C87               	bcf	135,6,c	;volatile
  4930                           
  4931                           ;dc_motor.c: 10:     TRISEbits.TRISE4=0;
  4932  004042  9885               	bcf	133,4,c	;volatile
  4933                           
  4934                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  4935  004044  947D               	bcf	125,2,c	;volatile
  4936                           
  4937                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  4938  004046  9E7B               	bcf	123,7,c	;volatile
  4939                           
  4940                           ;dc_motor.c: 13:     LATGbits.LATG6=0;
  4941  004048  9C7F               	bcf	127,6,c	;volatile
  4942                           
  4943                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4944  00404A  987D               	bcf	125,4,c	;volatile
  4945  00404C                     
  4946                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b100;
  4947  00404C  50BD               	movf	189,w,c	;volatile
  4948  00404E  0B8F               	andlw	-113
  4949  004050  0940               	iorlw	64
  4950  004052  6EBD               	movwf	189,c	;volatile
  4951                           
  4952                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  4953  004054  0EE0               	movlw	-32
  4954  004056  16BE               	andwf	190,f,c	;volatile
  4955                           
  4956                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  4957  004058  50BF               	movf	191,w,c	;volatile
  4958  00405A  0BF0               	andlw	-16
  4959  00405C  0901               	iorlw	1
  4960  00405E  6EBF               	movwf	191,c	;volatile
  4961                           
  4962                           ;dc_motor.c: 22:     T2PR=99;
  4963  004060  0E63               	movlw	99
  4964  004062  6EBC               	movwf	188,c	;volatile
  4965  004064                     
  4966                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  4967  004064  8EBD               	bsf	189,7,c	;volatile
  4968                           
  4969                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  4970  004066  0E0A               	movlw	10
  4971  004068  010E               	movlb	14	; () banked
  4972  00406A  6F74               	movwf	116,b	;volatile
  4973                           
  4974                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  4975  00406C  0E0B               	movlw	11
  4976  00406E  6F69               	movwf	105,b	;volatile
  4977                           
  4978                           ;dc_motor.c: 28:     PWM6DCH=0;
  4979  004070  0E00               	movlw	0
  4980  004072  6EA3               	movwf	163,c	;volatile
  4981                           
  4982                           ;dc_motor.c: 29:     PWM7DCH=0;
  4983  004074  0E00               	movlw	0
  4984  004076  6EA0               	movwf	160,c	;volatile
  4985  004078                     
  4986                           ; BSR set to: 14
  4987                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  4988  004078  8EA4               	bsf	164,7,c	;volatile
  4989  00407A                     
  4990                           ; BSR set to: 14
  4991                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  4992  00407A  8EA1               	bsf	161,7,c	;volatile
  4993  00407C                     
  4994                           ; BSR set to: 14
  4995  00407C  0012               	return		;funcret
  4996  00407E                     __end_of_initDCmotorsPWM:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function _determine_color_new *****************
  5000 ;; Defined at:
  5001 ;;		line 194 in file "color.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  m               2   54[COMRAM] PTR struct RGB_val
  5004 ;;		 -> main@test(16), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  BlueRatio       4   70[COMRAM] float 
  5007 ;;  GreenRatio      4   66[COMRAM] float 
  5008 ;;  RedRatio        4   62[COMRAM] float 
  5009 ;;  out             2   60[COMRAM] unsigned int 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  2   54[COMRAM] unsigned int 
  5012 ;; Registers used:
  5013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;Total ram usage:       20 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 4
  5026 ;; This function calls:
  5027 ;;		___fldiv
  5028 ;;		___xxtofl
  5029 ;;		_isbtw
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text22
  5036  000E4E                     __ptext22:
  5037                           	callstack 0
  5038  000E4E                     _determine_color_new:
  5039                           	callstack 26
  5040  000E4E                     
  5041                           ;color.c: 195:     float RedRatio, GreenRatio, BlueRatio;;color.c: 196:     unsigned int
      +                           out = 9;
  5042  000E4E  0E00               	movlw	0
  5043  000E50  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5044  000E52  0E09               	movlw	9
  5045  000E54  6E3D               	movwf	determine_color_new@out^0,c
  5046  000E56                     
  5047                           ;color.c: 199:     RedRatio = (float)m->R / (float)m->C;
  5048  000E56  EE20 F00A          	lfsr	2,10
  5049  000E5A  5037               	movf	determine_color_new@m^0,w,c
  5050  000E5C  26D9               	addwf	fsr2l,f,c
  5051  000E5E  5038               	movf	(determine_color_new@m+1)^0,w,c
  5052  000E60  22DA               	addwfc	fsr2h,f,c
  5053  000E62  CFDE F039          	movff	postinc2,??_determine_color_new
  5054  000E66  CFDD F03A          	movff	postdec2,??_determine_color_new+1
  5055  000E6A  C039  F00B         	movff	??_determine_color_new,___xxtofl@val
  5056  000E6E  C03A  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5057  000E72  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5058  000E74  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5059  000E76  0E00               	movlw	0
  5060  000E78  ECC3  F018         	call	___xxtofl
  5061  000E7C  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5062  000E80  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5063  000E84  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5064  000E88  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5065  000E8C  EE20 F008          	lfsr	2,8
  5066  000E90  5037               	movf	determine_color_new@m^0,w,c
  5067  000E92  26D9               	addwf	fsr2l,f,c
  5068  000E94  5038               	movf	(determine_color_new@m+1)^0,w,c
  5069  000E96  22DA               	addwfc	fsr2h,f,c
  5070  000E98  CFDE F03B          	movff	postinc2,??_determine_color_new+2
  5071  000E9C  CFDD F03C          	movff	postdec2,??_determine_color_new+3
  5072  000EA0  C03B  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5073  000EA4  C03C  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5074  000EA8  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5075  000EAA  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5076  000EAC  0E00               	movlw	0
  5077  000EAE  ECC3  F018         	call	___xxtofl
  5078  000EB2  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5079  000EB6  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5080  000EBA  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5081  000EBE  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5082  000EC2  ECBF  F013         	call	___fldiv	;wreg free
  5083  000EC6  C01E  F03F         	movff	?___fldiv,determine_color_new@RedRatio
  5084  000ECA  C01F  F040         	movff	?___fldiv+1,determine_color_new@RedRatio+1
  5085  000ECE  C020  F041         	movff	?___fldiv+2,determine_color_new@RedRatio+2
  5086  000ED2  C021  F042         	movff	?___fldiv+3,determine_color_new@RedRatio+3
  5087  000ED6                     
  5088                           ;color.c: 200:     GreenRatio = (float)m->G / (float)m->C;
  5089  000ED6  EE20 F00C          	lfsr	2,12
  5090  000EDA  5037               	movf	determine_color_new@m^0,w,c
  5091  000EDC  26D9               	addwf	fsr2l,f,c
  5092  000EDE  5038               	movf	(determine_color_new@m+1)^0,w,c
  5093  000EE0  22DA               	addwfc	fsr2h,f,c
  5094  000EE2  CFDE F039          	movff	postinc2,??_determine_color_new
  5095  000EE6  CFDD F03A          	movff	postdec2,??_determine_color_new+1
  5096  000EEA  C039  F00B         	movff	??_determine_color_new,___xxtofl@val
  5097  000EEE  C03A  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5098  000EF2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5099  000EF4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5100  000EF6  0E00               	movlw	0
  5101  000EF8  ECC3  F018         	call	___xxtofl
  5102  000EFC  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5103  000F00  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5104  000F04  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5105  000F08  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5106  000F0C  EE20 F008          	lfsr	2,8
  5107  000F10  5037               	movf	determine_color_new@m^0,w,c
  5108  000F12  26D9               	addwf	fsr2l,f,c
  5109  000F14  5038               	movf	(determine_color_new@m+1)^0,w,c
  5110  000F16  22DA               	addwfc	fsr2h,f,c
  5111  000F18  CFDE F03B          	movff	postinc2,??_determine_color_new+2
  5112  000F1C  CFDD F03C          	movff	postdec2,??_determine_color_new+3
  5113  000F20  C03B  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5114  000F24  C03C  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5115  000F28  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5116  000F2A  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5117  000F2C  0E00               	movlw	0
  5118  000F2E  ECC3  F018         	call	___xxtofl
  5119  000F32  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5120  000F36  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5121  000F3A  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5122  000F3E  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5123  000F42  ECBF  F013         	call	___fldiv	;wreg free
  5124  000F46  C01E  F043         	movff	?___fldiv,determine_color_new@GreenRatio
  5125  000F4A  C01F  F044         	movff	?___fldiv+1,determine_color_new@GreenRatio+1
  5126  000F4E  C020  F045         	movff	?___fldiv+2,determine_color_new@GreenRatio+2
  5127  000F52  C021  F046         	movff	?___fldiv+3,determine_color_new@GreenRatio+3
  5128  000F56                     
  5129                           ;color.c: 201:     BlueRatio = (float)m->B / (float)m->C;
  5130  000F56  EE20 F00E          	lfsr	2,14
  5131  000F5A  5037               	movf	determine_color_new@m^0,w,c
  5132  000F5C  26D9               	addwf	fsr2l,f,c
  5133  000F5E  5038               	movf	(determine_color_new@m+1)^0,w,c
  5134  000F60  22DA               	addwfc	fsr2h,f,c
  5135  000F62  CFDE F039          	movff	postinc2,??_determine_color_new
  5136  000F66  CFDD F03A          	movff	postdec2,??_determine_color_new+1
  5137  000F6A  C039  F00B         	movff	??_determine_color_new,___xxtofl@val
  5138  000F6E  C03A  F00C         	movff	??_determine_color_new+1,___xxtofl@val+1
  5139  000F72  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5140  000F74  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5141  000F76  0E00               	movlw	0
  5142  000F78  ECC3  F018         	call	___xxtofl
  5143  000F7C  C00B  F01E         	movff	?___xxtofl,___fldiv@b
  5144  000F80  C00C  F01F         	movff	?___xxtofl+1,___fldiv@b+1
  5145  000F84  C00D  F020         	movff	?___xxtofl+2,___fldiv@b+2
  5146  000F88  C00E  F021         	movff	?___xxtofl+3,___fldiv@b+3
  5147  000F8C  EE20 F008          	lfsr	2,8
  5148  000F90  5037               	movf	determine_color_new@m^0,w,c
  5149  000F92  26D9               	addwf	fsr2l,f,c
  5150  000F94  5038               	movf	(determine_color_new@m+1)^0,w,c
  5151  000F96  22DA               	addwfc	fsr2h,f,c
  5152  000F98  CFDE F03B          	movff	postinc2,??_determine_color_new+2
  5153  000F9C  CFDD F03C          	movff	postdec2,??_determine_color_new+3
  5154  000FA0  C03B  F00B         	movff	??_determine_color_new+2,___xxtofl@val
  5155  000FA4  C03C  F00C         	movff	??_determine_color_new+3,___xxtofl@val+1
  5156  000FA8  6A0D               	clrf	(___xxtofl@val+2)^0,c
  5157  000FAA  6A0E               	clrf	(___xxtofl@val+3)^0,c
  5158  000FAC  0E00               	movlw	0
  5159  000FAE  ECC3  F018         	call	___xxtofl
  5160  000FB2  C00B  F022         	movff	?___xxtofl,___fldiv@a
  5161  000FB6  C00C  F023         	movff	?___xxtofl+1,___fldiv@a+1
  5162  000FBA  C00D  F024         	movff	?___xxtofl+2,___fldiv@a+2
  5163  000FBE  C00E  F025         	movff	?___xxtofl+3,___fldiv@a+3
  5164  000FC2  ECBF  F013         	call	___fldiv	;wreg free
  5165  000FC6  C01E  F047         	movff	?___fldiv,determine_color_new@BlueRatio
  5166  000FCA  C01F  F048         	movff	?___fldiv+1,determine_color_new@BlueRatio+1
  5167  000FCE  C020  F049         	movff	?___fldiv+2,determine_color_new@BlueRatio+2
  5168  000FD2  C021  F04A         	movff	?___fldiv+3,determine_color_new@BlueRatio+3
  5169  000FD6                     
  5170                           ;color.c: 205:     if (isbtw(RedRatio,0.795,0.870)==1 && isbtw(GreenRatio,0.140,0.169)==
      +                          1 && isbtw(BlueRatio,0.185,0.210)==1)
  5171  000FD6  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5172  000FDA  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5173  000FDE  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5174  000FE2  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5175  000FE6  0E1F               	movlw	31
  5176  000FE8  6E15               	movwf	isbtw@low^0,c
  5177  000FEA  0E85               	movlw	133
  5178  000FEC  6E16               	movwf	(isbtw@low+1)^0,c
  5179  000FEE  0E4B               	movlw	75
  5180  000FF0  6E17               	movwf	(isbtw@low+2)^0,c
  5181  000FF2  0E3F               	movlw	63
  5182  000FF4  6E18               	movwf	(isbtw@low+3)^0,c
  5183  000FF6  0E52               	movlw	82
  5184  000FF8  6E19               	movwf	isbtw@high^0,c
  5185  000FFA  0EB8               	movlw	184
  5186  000FFC  6E1A               	movwf	(isbtw@high+1)^0,c
  5187  000FFE  0E5E               	movlw	94
  5188  001000  6E1B               	movwf	(isbtw@high+2)^0,c
  5189  001002  0E3F               	movlw	63
  5190  001004  6E1C               	movwf	(isbtw@high+3)^0,c
  5191  001006  ECB2  F01D         	call	_isbtw	;wreg free
  5192  00100A  0411               	decf	?_isbtw^0,w,c
  5193  00100C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5194  00100E  A4D8               	btfss	status,2,c
  5195  001010  EF0C  F008         	goto	u3951
  5196  001014  EF0E  F008         	goto	u3950
  5197  001018                     u3951:
  5198  001018  EF58  F008         	goto	l4008
  5199  00101C                     u3950:
  5200  00101C  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5201  001020  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5202  001024  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5203  001028  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5204  00102C  0E29               	movlw	41
  5205  00102E  6E15               	movwf	isbtw@low^0,c
  5206  001030  0E5C               	movlw	92
  5207  001032  6E16               	movwf	(isbtw@low+1)^0,c
  5208  001034  0E0F               	movlw	15
  5209  001036  6E17               	movwf	(isbtw@low+2)^0,c
  5210  001038  0E3E               	movlw	62
  5211  00103A  6E18               	movwf	(isbtw@low+3)^0,c
  5212  00103C  0E56               	movlw	86
  5213  00103E  6E19               	movwf	isbtw@high^0,c
  5214  001040  0E0E               	movlw	14
  5215  001042  6E1A               	movwf	(isbtw@high+1)^0,c
  5216  001044  0E2D               	movlw	45
  5217  001046  6E1B               	movwf	(isbtw@high+2)^0,c
  5218  001048  0E3E               	movlw	62
  5219  00104A  6E1C               	movwf	(isbtw@high+3)^0,c
  5220  00104C  ECB2  F01D         	call	_isbtw	;wreg free
  5221  001050  0411               	decf	?_isbtw^0,w,c
  5222  001052  1012               	iorwf	(?_isbtw+1)^0,w,c
  5223  001054  A4D8               	btfss	status,2,c
  5224  001056  EF2F  F008         	goto	u3961
  5225  00105A  EF31  F008         	goto	u3960
  5226  00105E                     u3961:
  5227  00105E  EF58  F008         	goto	l4008
  5228  001062                     u3960:
  5229  001062  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5230  001066  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5231  00106A  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5232  00106E  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5233  001072  0EA4               	movlw	164
  5234  001074  6E15               	movwf	isbtw@low^0,c
  5235  001076  0E70               	movlw	112
  5236  001078  6E16               	movwf	(isbtw@low+1)^0,c
  5237  00107A  0E3D               	movlw	61
  5238  00107C  6E17               	movwf	(isbtw@low+2)^0,c
  5239  00107E  0E3E               	movlw	62
  5240  001080  6E18               	movwf	(isbtw@low+3)^0,c
  5241  001082  0E3D               	movlw	61
  5242  001084  6E19               	movwf	isbtw@high^0,c
  5243  001086  0E0A               	movlw	10
  5244  001088  6E1A               	movwf	(isbtw@high+1)^0,c
  5245  00108A  0E57               	movlw	87
  5246  00108C  6E1B               	movwf	(isbtw@high+2)^0,c
  5247  00108E  0E3E               	movlw	62
  5248  001090  6E1C               	movwf	(isbtw@high+3)^0,c
  5249  001092  ECB2  F01D         	call	_isbtw	;wreg free
  5250  001096  0411               	decf	?_isbtw^0,w,c
  5251  001098  1012               	iorwf	(?_isbtw+1)^0,w,c
  5252  00109A  A4D8               	btfss	status,2,c
  5253  00109C  EF52  F008         	goto	u3971
  5254  0010A0  EF54  F008         	goto	u3970
  5255  0010A4                     u3971:
  5256  0010A4  EF58  F008         	goto	l4008
  5257  0010A8                     u3970:
  5258  0010A8                     
  5259                           ;color.c: 206:     {out = 0;}
  5260  0010A8  0E00               	movlw	0
  5261  0010AA  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5262  0010AC  0E00               	movlw	0
  5263  0010AE  6E3D               	movwf	determine_color_new@out^0,c
  5264  0010B0                     l4008:
  5265                           
  5266                           ;color.c: 209:     if (isbtw(RedRatio,0.450,0.525)==1 && isbtw(GreenRatio,0.325,0.380)==
      +                          1 && isbtw(BlueRatio,0.240,0.270)==1)
  5267  0010B0  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5268  0010B4  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5269  0010B8  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5270  0010BC  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5271  0010C0  0E66               	movlw	102
  5272  0010C2  6E15               	movwf	isbtw@low^0,c
  5273  0010C4  0E66               	movlw	102
  5274  0010C6  6E16               	movwf	(isbtw@low+1)^0,c
  5275  0010C8  0EE6               	movlw	230
  5276  0010CA  6E17               	movwf	(isbtw@low+2)^0,c
  5277  0010CC  0E3E               	movlw	62
  5278  0010CE  6E18               	movwf	(isbtw@low+3)^0,c
  5279  0010D0  0E66               	movlw	102
  5280  0010D2  6E19               	movwf	isbtw@high^0,c
  5281  0010D4  0E66               	movlw	102
  5282  0010D6  6E1A               	movwf	(isbtw@high+1)^0,c
  5283  0010D8  0E06               	movlw	6
  5284  0010DA  6E1B               	movwf	(isbtw@high+2)^0,c
  5285  0010DC  0E3F               	movlw	63
  5286  0010DE  6E1C               	movwf	(isbtw@high+3)^0,c
  5287  0010E0  ECB2  F01D         	call	_isbtw	;wreg free
  5288  0010E4  0411               	decf	?_isbtw^0,w,c
  5289  0010E6  1012               	iorwf	(?_isbtw+1)^0,w,c
  5290  0010E8  A4D8               	btfss	status,2,c
  5291  0010EA  EF79  F008         	goto	u3981
  5292  0010EE  EF7B  F008         	goto	u3980
  5293  0010F2                     u3981:
  5294  0010F2  EFC5  F008         	goto	l4016
  5295  0010F6                     u3980:
  5296  0010F6  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5297  0010FA  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5298  0010FE  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5299  001102  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5300  001106  0E66               	movlw	102
  5301  001108  6E15               	movwf	isbtw@low^0,c
  5302  00110A  0E66               	movlw	102
  5303  00110C  6E16               	movwf	(isbtw@low+1)^0,c
  5304  00110E  0EA6               	movlw	166
  5305  001110  6E17               	movwf	(isbtw@low+2)^0,c
  5306  001112  0E3E               	movlw	62
  5307  001114  6E18               	movwf	(isbtw@low+3)^0,c
  5308  001116  0E5C               	movlw	92
  5309  001118  6E19               	movwf	isbtw@high^0,c
  5310  00111A  0E8F               	movlw	143
  5311  00111C  6E1A               	movwf	(isbtw@high+1)^0,c
  5312  00111E  0EC2               	movlw	194
  5313  001120  6E1B               	movwf	(isbtw@high+2)^0,c
  5314  001122  0E3E               	movlw	62
  5315  001124  6E1C               	movwf	(isbtw@high+3)^0,c
  5316  001126  ECB2  F01D         	call	_isbtw	;wreg free
  5317  00112A  0411               	decf	?_isbtw^0,w,c
  5318  00112C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5319  00112E  A4D8               	btfss	status,2,c
  5320  001130  EF9C  F008         	goto	u3991
  5321  001134  EF9E  F008         	goto	u3990
  5322  001138                     u3991:
  5323  001138  EFC5  F008         	goto	l4016
  5324  00113C                     u3990:
  5325  00113C  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5326  001140  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5327  001144  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5328  001148  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5329  00114C  0E8F               	movlw	143
  5330  00114E  6E15               	movwf	isbtw@low^0,c
  5331  001150  0EC2               	movlw	194
  5332  001152  6E16               	movwf	(isbtw@low+1)^0,c
  5333  001154  0E75               	movlw	117
  5334  001156  6E17               	movwf	(isbtw@low+2)^0,c
  5335  001158  0E3E               	movlw	62
  5336  00115A  6E18               	movwf	(isbtw@low+3)^0,c
  5337  00115C  0E71               	movlw	113
  5338  00115E  6E19               	movwf	isbtw@high^0,c
  5339  001160  0E3D               	movlw	61
  5340  001162  6E1A               	movwf	(isbtw@high+1)^0,c
  5341  001164  0E8A               	movlw	138
  5342  001166  6E1B               	movwf	(isbtw@high+2)^0,c
  5343  001168  0E3E               	movlw	62
  5344  00116A  6E1C               	movwf	(isbtw@high+3)^0,c
  5345  00116C  ECB2  F01D         	call	_isbtw	;wreg free
  5346  001170  0411               	decf	?_isbtw^0,w,c
  5347  001172  1012               	iorwf	(?_isbtw+1)^0,w,c
  5348  001174  A4D8               	btfss	status,2,c
  5349  001176  EFBF  F008         	goto	u4001
  5350  00117A  EFC1  F008         	goto	u4000
  5351  00117E                     u4001:
  5352  00117E  EFC5  F008         	goto	l4016
  5353  001182                     u4000:
  5354  001182                     
  5355                           ;color.c: 210:     {out = 1;}
  5356  001182  0E00               	movlw	0
  5357  001184  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5358  001186  0E01               	movlw	1
  5359  001188  6E3D               	movwf	determine_color_new@out^0,c
  5360  00118A                     l4016:
  5361                           
  5362                           ;color.c: 213:     if (isbtw(RedRatio,0.400,0.479)==1 && isbtw(GreenRatio,0.305,0.340)==
      +                          1 && isbtw(BlueRatio,0.305,0.345)==1)
  5363  00118A  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5364  00118E  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5365  001192  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5366  001196  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5367  00119A  0ECD               	movlw	205
  5368  00119C  6E15               	movwf	isbtw@low^0,c
  5369  00119E  0ECC               	movlw	204
  5370  0011A0  6E16               	movwf	(isbtw@low+1)^0,c
  5371  0011A2  0ECC               	movlw	204
  5372  0011A4  6E17               	movwf	(isbtw@low+2)^0,c
  5373  0011A6  0E3E               	movlw	62
  5374  0011A8  6E18               	movwf	(isbtw@low+3)^0,c
  5375  0011AA  0E7D               	movlw	125
  5376  0011AC  6E19               	movwf	isbtw@high^0,c
  5377  0011AE  0E3F               	movlw	63
  5378  0011B0  6E1A               	movwf	(isbtw@high+1)^0,c
  5379  0011B2  0EF5               	movlw	245
  5380  0011B4  6E1B               	movwf	(isbtw@high+2)^0,c
  5381  0011B6  0E3E               	movlw	62
  5382  0011B8  6E1C               	movwf	(isbtw@high+3)^0,c
  5383  0011BA  ECB2  F01D         	call	_isbtw	;wreg free
  5384  0011BE  0411               	decf	?_isbtw^0,w,c
  5385  0011C0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5386  0011C2  A4D8               	btfss	status,2,c
  5387  0011C4  EFE6  F008         	goto	u4011
  5388  0011C8  EFE8  F008         	goto	u4010
  5389  0011CC                     u4011:
  5390  0011CC  EF32  F009         	goto	l4024
  5391  0011D0                     u4010:
  5392  0011D0  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5393  0011D4  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5394  0011D8  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5395  0011DC  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5396  0011E0  0EF6               	movlw	246
  5397  0011E2  6E15               	movwf	isbtw@low^0,c
  5398  0011E4  0E28               	movlw	40
  5399  0011E6  6E16               	movwf	(isbtw@low+1)^0,c
  5400  0011E8  0E9C               	movlw	156
  5401  0011EA  6E17               	movwf	(isbtw@low+2)^0,c
  5402  0011EC  0E3E               	movlw	62
  5403  0011EE  6E18               	movwf	(isbtw@low+3)^0,c
  5404  0011F0  0E7B               	movlw	123
  5405  0011F2  6E19               	movwf	isbtw@high^0,c
  5406  0011F4  0E14               	movlw	20
  5407  0011F6  6E1A               	movwf	(isbtw@high+1)^0,c
  5408  0011F8  0EAE               	movlw	174
  5409  0011FA  6E1B               	movwf	(isbtw@high+2)^0,c
  5410  0011FC  0E3E               	movlw	62
  5411  0011FE  6E1C               	movwf	(isbtw@high+3)^0,c
  5412  001200  ECB2  F01D         	call	_isbtw	;wreg free
  5413  001204  0411               	decf	?_isbtw^0,w,c
  5414  001206  1012               	iorwf	(?_isbtw+1)^0,w,c
  5415  001208  A4D8               	btfss	status,2,c
  5416  00120A  EF09  F009         	goto	u4021
  5417  00120E  EF0B  F009         	goto	u4020
  5418  001212                     u4021:
  5419  001212  EF32  F009         	goto	l4024
  5420  001216                     u4020:
  5421  001216  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5422  00121A  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5423  00121E  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5424  001222  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5425  001226  0EF6               	movlw	246
  5426  001228  6E15               	movwf	isbtw@low^0,c
  5427  00122A  0E28               	movlw	40
  5428  00122C  6E16               	movwf	(isbtw@low+1)^0,c
  5429  00122E  0E9C               	movlw	156
  5430  001230  6E17               	movwf	(isbtw@low+2)^0,c
  5431  001232  0E3E               	movlw	62
  5432  001234  6E18               	movwf	(isbtw@low+3)^0,c
  5433  001236  0ED7               	movlw	215
  5434  001238  6E19               	movwf	isbtw@high^0,c
  5435  00123A  0EA3               	movlw	163
  5436  00123C  6E1A               	movwf	(isbtw@high+1)^0,c
  5437  00123E  0EB0               	movlw	176
  5438  001240  6E1B               	movwf	(isbtw@high+2)^0,c
  5439  001242  0E3E               	movlw	62
  5440  001244  6E1C               	movwf	(isbtw@high+3)^0,c
  5441  001246  ECB2  F01D         	call	_isbtw	;wreg free
  5442  00124A  0411               	decf	?_isbtw^0,w,c
  5443  00124C  1012               	iorwf	(?_isbtw+1)^0,w,c
  5444  00124E  A4D8               	btfss	status,2,c
  5445  001250  EF2C  F009         	goto	u4031
  5446  001254  EF2E  F009         	goto	u4030
  5447  001258                     u4031:
  5448  001258  EF32  F009         	goto	l4024
  5449  00125C                     u4030:
  5450  00125C                     
  5451                           ;color.c: 214:     {out = 2;}
  5452  00125C  0E00               	movlw	0
  5453  00125E  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5454  001260  0E02               	movlw	2
  5455  001262  6E3D               	movwf	determine_color_new@out^0,c
  5456  001264                     l4024:
  5457                           
  5458                           ;color.c: 217:     if (isbtw(RedRatio,0.645,0.680)==1 && isbtw(GreenRatio,0.250,0.275)==
      +                          1 && isbtw(BlueRatio,0.175,0.190)==1)
  5459  001264  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5460  001268  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5461  00126C  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5462  001270  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5463  001274  0EB8               	movlw	184
  5464  001276  6E15               	movwf	isbtw@low^0,c
  5465  001278  0E1E               	movlw	30
  5466  00127A  6E16               	movwf	(isbtw@low+1)^0,c
  5467  00127C  0E25               	movlw	37
  5468  00127E  6E17               	movwf	(isbtw@low+2)^0,c
  5469  001280  0E3F               	movlw	63
  5470  001282  6E18               	movwf	(isbtw@low+3)^0,c
  5471  001284  0E7B               	movlw	123
  5472  001286  6E19               	movwf	isbtw@high^0,c
  5473  001288  0E14               	movlw	20
  5474  00128A  6E1A               	movwf	(isbtw@high+1)^0,c
  5475  00128C  0E2E               	movlw	46
  5476  00128E  6E1B               	movwf	(isbtw@high+2)^0,c
  5477  001290  0E3F               	movlw	63
  5478  001292  6E1C               	movwf	(isbtw@high+3)^0,c
  5479  001294  ECB2  F01D         	call	_isbtw	;wreg free
  5480  001298  0411               	decf	?_isbtw^0,w,c
  5481  00129A  1012               	iorwf	(?_isbtw+1)^0,w,c
  5482  00129C  A4D8               	btfss	status,2,c
  5483  00129E  EF53  F009         	goto	u4041
  5484  0012A2  EF55  F009         	goto	u4040
  5485  0012A6                     u4041:
  5486  0012A6  EF9F  F009         	goto	l4032
  5487  0012AA                     u4040:
  5488  0012AA  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5489  0012AE  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5490  0012B2  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5491  0012B6  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5492  0012BA  0E00               	movlw	0
  5493  0012BC  6E15               	movwf	isbtw@low^0,c
  5494  0012BE  0E00               	movlw	0
  5495  0012C0  6E16               	movwf	(isbtw@low+1)^0,c
  5496  0012C2  0E80               	movlw	128
  5497  0012C4  6E17               	movwf	(isbtw@low+2)^0,c
  5498  0012C6  0E3E               	movlw	62
  5499  0012C8  6E18               	movwf	(isbtw@low+3)^0,c
  5500  0012CA  0ECD               	movlw	205
  5501  0012CC  6E19               	movwf	isbtw@high^0,c
  5502  0012CE  0ECC               	movlw	204
  5503  0012D0  6E1A               	movwf	(isbtw@high+1)^0,c
  5504  0012D2  0E8C               	movlw	140
  5505  0012D4  6E1B               	movwf	(isbtw@high+2)^0,c
  5506  0012D6  0E3E               	movlw	62
  5507  0012D8  6E1C               	movwf	(isbtw@high+3)^0,c
  5508  0012DA  ECB2  F01D         	call	_isbtw	;wreg free
  5509  0012DE  0411               	decf	?_isbtw^0,w,c
  5510  0012E0  1012               	iorwf	(?_isbtw+1)^0,w,c
  5511  0012E2  A4D8               	btfss	status,2,c
  5512  0012E4  EF76  F009         	goto	u4051
  5513  0012E8  EF78  F009         	goto	u4050
  5514  0012EC                     u4051:
  5515  0012EC  EF9F  F009         	goto	l4032
  5516  0012F0                     u4050:
  5517  0012F0  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5518  0012F4  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5519  0012F8  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5520  0012FC  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5521  001300  0E33               	movlw	51
  5522  001302  6E15               	movwf	isbtw@low^0,c
  5523  001304  0E33               	movlw	51
  5524  001306  6E16               	movwf	(isbtw@low+1)^0,c
  5525  001308  0E33               	movlw	51
  5526  00130A  6E17               	movwf	(isbtw@low+2)^0,c
  5527  00130C  0E3E               	movlw	62
  5528  00130E  6E18               	movwf	(isbtw@low+3)^0,c
  5529  001310  0E5C               	movlw	92
  5530  001312  6E19               	movwf	isbtw@high^0,c
  5531  001314  0E8F               	movlw	143
  5532  001316  6E1A               	movwf	(isbtw@high+1)^0,c
  5533  001318  0E42               	movlw	66
  5534  00131A  6E1B               	movwf	(isbtw@high+2)^0,c
  5535  00131C  0E3E               	movlw	62
  5536  00131E  6E1C               	movwf	(isbtw@high+3)^0,c
  5537  001320  ECB2  F01D         	call	_isbtw	;wreg free
  5538  001324  0411               	decf	?_isbtw^0,w,c
  5539  001326  1012               	iorwf	(?_isbtw+1)^0,w,c
  5540  001328  A4D8               	btfss	status,2,c
  5541  00132A  EF99  F009         	goto	u4061
  5542  00132E  EF9B  F009         	goto	u4060
  5543  001332                     u4061:
  5544  001332  EF9F  F009         	goto	l4032
  5545  001336                     u4060:
  5546  001336                     
  5547                           ;color.c: 218:     {out = 3;}
  5548  001336  0E00               	movlw	0
  5549  001338  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5550  00133A  0E03               	movlw	3
  5551  00133C  6E3D               	movwf	determine_color_new@out^0,c
  5552  00133E                     l4032:
  5553                           
  5554                           ;color.c: 221:     if (isbtw(RedRatio,0.650,0.679)==1 && isbtw(GreenRatio,0.220,0.235)==
      +                          1 && isbtw(BlueRatio,0.215,0.235)==1)
  5555  00133E  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5556  001342  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5557  001346  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5558  00134A  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5559  00134E  0E66               	movlw	102
  5560  001350  6E15               	movwf	isbtw@low^0,c
  5561  001352  0E66               	movlw	102
  5562  001354  6E16               	movwf	(isbtw@low+1)^0,c
  5563  001356  0E26               	movlw	38
  5564  001358  6E17               	movwf	(isbtw@low+2)^0,c
  5565  00135A  0E3F               	movlw	63
  5566  00135C  6E18               	movwf	(isbtw@low+3)^0,c
  5567  00135E  0EF2               	movlw	242
  5568  001360  6E19               	movwf	isbtw@high^0,c
  5569  001362  0ED2               	movlw	210
  5570  001364  6E1A               	movwf	(isbtw@high+1)^0,c
  5571  001366  0E2D               	movlw	45
  5572  001368  6E1B               	movwf	(isbtw@high+2)^0,c
  5573  00136A  0E3F               	movlw	63
  5574  00136C  6E1C               	movwf	(isbtw@high+3)^0,c
  5575  00136E  ECB2  F01D         	call	_isbtw	;wreg free
  5576  001372  0411               	decf	?_isbtw^0,w,c
  5577  001374  1012               	iorwf	(?_isbtw+1)^0,w,c
  5578  001376  A4D8               	btfss	status,2,c
  5579  001378  EFC0  F009         	goto	u4071
  5580  00137C  EFC2  F009         	goto	u4070
  5581  001380                     u4071:
  5582  001380  EF0C  F00A         	goto	l4040
  5583  001384                     u4070:
  5584  001384  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5585  001388  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5586  00138C  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5587  001390  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5588  001394  0EAE               	movlw	174
  5589  001396  6E15               	movwf	isbtw@low^0,c
  5590  001398  0E47               	movlw	71
  5591  00139A  6E16               	movwf	(isbtw@low+1)^0,c
  5592  00139C  0E61               	movlw	97
  5593  00139E  6E17               	movwf	(isbtw@low+2)^0,c
  5594  0013A0  0E3E               	movlw	62
  5595  0013A2  6E18               	movwf	(isbtw@low+3)^0,c
  5596  0013A4  0ED7               	movlw	215
  5597  0013A6  6E19               	movwf	isbtw@high^0,c
  5598  0013A8  0EA3               	movlw	163
  5599  0013AA  6E1A               	movwf	(isbtw@high+1)^0,c
  5600  0013AC  0E70               	movlw	112
  5601  0013AE  6E1B               	movwf	(isbtw@high+2)^0,c
  5602  0013B0  0E3E               	movlw	62
  5603  0013B2  6E1C               	movwf	(isbtw@high+3)^0,c
  5604  0013B4  ECB2  F01D         	call	_isbtw	;wreg free
  5605  0013B8  0411               	decf	?_isbtw^0,w,c
  5606  0013BA  1012               	iorwf	(?_isbtw+1)^0,w,c
  5607  0013BC  A4D8               	btfss	status,2,c
  5608  0013BE  EFE3  F009         	goto	u4081
  5609  0013C2  EFE5  F009         	goto	u4080
  5610  0013C6                     u4081:
  5611  0013C6  EF0C  F00A         	goto	l4040
  5612  0013CA                     u4080:
  5613  0013CA  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5614  0013CE  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5615  0013D2  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5616  0013D6  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5617  0013DA  0EF6               	movlw	246
  5618  0013DC  6E15               	movwf	isbtw@low^0,c
  5619  0013DE  0E28               	movlw	40
  5620  0013E0  6E16               	movwf	(isbtw@low+1)^0,c
  5621  0013E2  0E5C               	movlw	92
  5622  0013E4  6E17               	movwf	(isbtw@low+2)^0,c
  5623  0013E6  0E3E               	movlw	62
  5624  0013E8  6E18               	movwf	(isbtw@low+3)^0,c
  5625  0013EA  0ED7               	movlw	215
  5626  0013EC  6E19               	movwf	isbtw@high^0,c
  5627  0013EE  0EA3               	movlw	163
  5628  0013F0  6E1A               	movwf	(isbtw@high+1)^0,c
  5629  0013F2  0E70               	movlw	112
  5630  0013F4  6E1B               	movwf	(isbtw@high+2)^0,c
  5631  0013F6  0E3E               	movlw	62
  5632  0013F8  6E1C               	movwf	(isbtw@high+3)^0,c
  5633  0013FA  ECB2  F01D         	call	_isbtw	;wreg free
  5634  0013FE  0411               	decf	?_isbtw^0,w,c
  5635  001400  1012               	iorwf	(?_isbtw+1)^0,w,c
  5636  001402  A4D8               	btfss	status,2,c
  5637  001404  EF06  F00A         	goto	u4091
  5638  001408  EF08  F00A         	goto	u4090
  5639  00140C                     u4091:
  5640  00140C  EF0C  F00A         	goto	l4040
  5641  001410                     u4090:
  5642  001410                     
  5643                           ;color.c: 222:     {out = 4;}
  5644  001410  0E00               	movlw	0
  5645  001412  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5646  001414  0E04               	movlw	4
  5647  001416  6E3D               	movwf	determine_color_new@out^0,c
  5648  001418                     l4040:
  5649                           
  5650                           ;color.c: 225:     if (isbtw(RedRatio,0.795,0.820)==1 && isbtw(GreenRatio,0.165,0.183)==
      +                          1 && isbtw(BlueRatio,0.175,0.191)==1)
  5651  001418  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5652  00141C  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5653  001420  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5654  001424  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5655  001428  0E1F               	movlw	31
  5656  00142A  6E15               	movwf	isbtw@low^0,c
  5657  00142C  0E85               	movlw	133
  5658  00142E  6E16               	movwf	(isbtw@low+1)^0,c
  5659  001430  0E4B               	movlw	75
  5660  001432  6E17               	movwf	(isbtw@low+2)^0,c
  5661  001434  0E3F               	movlw	63
  5662  001436  6E18               	movwf	(isbtw@low+3)^0,c
  5663  001438  0E85               	movlw	133
  5664  00143A  6E19               	movwf	isbtw@high^0,c
  5665  00143C  0EEB               	movlw	235
  5666  00143E  6E1A               	movwf	(isbtw@high+1)^0,c
  5667  001440  0E51               	movlw	81
  5668  001442  6E1B               	movwf	(isbtw@high+2)^0,c
  5669  001444  0E3F               	movlw	63
  5670  001446  6E1C               	movwf	(isbtw@high+3)^0,c
  5671  001448  ECB2  F01D         	call	_isbtw	;wreg free
  5672  00144C  0411               	decf	?_isbtw^0,w,c
  5673  00144E  1012               	iorwf	(?_isbtw+1)^0,w,c
  5674  001450  A4D8               	btfss	status,2,c
  5675  001452  EF2D  F00A         	goto	u4101
  5676  001456  EF2F  F00A         	goto	u4100
  5677  00145A                     u4101:
  5678  00145A  EF79  F00A         	goto	l4048
  5679  00145E                     u4100:
  5680  00145E  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5681  001462  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5682  001466  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5683  00146A  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5684  00146E  0EC3               	movlw	195
  5685  001470  6E15               	movwf	isbtw@low^0,c
  5686  001472  0EF5               	movlw	245
  5687  001474  6E16               	movwf	(isbtw@low+1)^0,c
  5688  001476  0E28               	movlw	40
  5689  001478  6E17               	movwf	(isbtw@low+2)^0,c
  5690  00147A  0E3E               	movlw	62
  5691  00147C  6E18               	movwf	(isbtw@low+3)^0,c
  5692  00147E  0E5A               	movlw	90
  5693  001480  6E19               	movwf	isbtw@high^0,c
  5694  001482  0E64               	movlw	100
  5695  001484  6E1A               	movwf	(isbtw@high+1)^0,c
  5696  001486  0E3B               	movlw	59
  5697  001488  6E1B               	movwf	(isbtw@high+2)^0,c
  5698  00148A  0E3E               	movlw	62
  5699  00148C  6E1C               	movwf	(isbtw@high+3)^0,c
  5700  00148E  ECB2  F01D         	call	_isbtw	;wreg free
  5701  001492  0411               	decf	?_isbtw^0,w,c
  5702  001494  1012               	iorwf	(?_isbtw+1)^0,w,c
  5703  001496  A4D8               	btfss	status,2,c
  5704  001498  EF50  F00A         	goto	u4111
  5705  00149C  EF52  F00A         	goto	u4110
  5706  0014A0                     u4111:
  5707  0014A0  EF79  F00A         	goto	l4048
  5708  0014A4                     u4110:
  5709  0014A4  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5710  0014A8  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5711  0014AC  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5712  0014B0  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5713  0014B4  0E33               	movlw	51
  5714  0014B6  6E15               	movwf	isbtw@low^0,c
  5715  0014B8  0E33               	movlw	51
  5716  0014BA  6E16               	movwf	(isbtw@low+1)^0,c
  5717  0014BC  0E33               	movlw	51
  5718  0014BE  6E17               	movwf	(isbtw@low+2)^0,c
  5719  0014C0  0E3E               	movlw	62
  5720  0014C2  6E18               	movwf	(isbtw@low+3)^0,c
  5721  0014C4  0E81               	movlw	129
  5722  0014C6  6E19               	movwf	isbtw@high^0,c
  5723  0014C8  0E95               	movlw	149
  5724  0014CA  6E1A               	movwf	(isbtw@high+1)^0,c
  5725  0014CC  0E43               	movlw	67
  5726  0014CE  6E1B               	movwf	(isbtw@high+2)^0,c
  5727  0014D0  0E3E               	movlw	62
  5728  0014D2  6E1C               	movwf	(isbtw@high+3)^0,c
  5729  0014D4  ECB2  F01D         	call	_isbtw	;wreg free
  5730  0014D8  0411               	decf	?_isbtw^0,w,c
  5731  0014DA  1012               	iorwf	(?_isbtw+1)^0,w,c
  5732  0014DC  A4D8               	btfss	status,2,c
  5733  0014DE  EF73  F00A         	goto	u4121
  5734  0014E2  EF75  F00A         	goto	u4120
  5735  0014E6                     u4121:
  5736  0014E6  EF79  F00A         	goto	l4048
  5737  0014EA                     u4120:
  5738  0014EA                     
  5739                           ;color.c: 226:     {out = 5;}
  5740  0014EA  0E00               	movlw	0
  5741  0014EC  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5742  0014EE  0E05               	movlw	5
  5743  0014F0  6E3D               	movwf	determine_color_new@out^0,c
  5744  0014F2                     l4048:
  5745                           
  5746                           ;color.c: 229:     if (isbtw(RedRatio,0.500,0.550)==1 && isbtw(GreenRatio,0.285,0.310)==
      +                          1 && isbtw(BlueRatio,0.259,0.280)==1)
  5747  0014F2  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5748  0014F6  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5749  0014FA  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5750  0014FE  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5751  001502  0E00               	movlw	0
  5752  001504  6E15               	movwf	isbtw@low^0,c
  5753  001506  0E00               	movlw	0
  5754  001508  6E16               	movwf	(isbtw@low+1)^0,c
  5755  00150A  0E00               	movlw	0
  5756  00150C  6E17               	movwf	(isbtw@low+2)^0,c
  5757  00150E  0E3F               	movlw	63
  5758  001510  6E18               	movwf	(isbtw@low+3)^0,c
  5759  001512  0ECD               	movlw	205
  5760  001514  6E19               	movwf	isbtw@high^0,c
  5761  001516  0ECC               	movlw	204
  5762  001518  6E1A               	movwf	(isbtw@high+1)^0,c
  5763  00151A  0E0C               	movlw	12
  5764  00151C  6E1B               	movwf	(isbtw@high+2)^0,c
  5765  00151E  0E3F               	movlw	63
  5766  001520  6E1C               	movwf	(isbtw@high+3)^0,c
  5767  001522  ECB2  F01D         	call	_isbtw	;wreg free
  5768  001526  0411               	decf	?_isbtw^0,w,c
  5769  001528  1012               	iorwf	(?_isbtw+1)^0,w,c
  5770  00152A  A4D8               	btfss	status,2,c
  5771  00152C  EF9A  F00A         	goto	u4131
  5772  001530  EF9C  F00A         	goto	u4130
  5773  001534                     u4131:
  5774  001534  EFE6  F00A         	goto	l4056
  5775  001538                     u4130:
  5776  001538  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5777  00153C  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5778  001540  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5779  001544  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5780  001548  0E85               	movlw	133
  5781  00154A  6E15               	movwf	isbtw@low^0,c
  5782  00154C  0EEB               	movlw	235
  5783  00154E  6E16               	movwf	(isbtw@low+1)^0,c
  5784  001550  0E91               	movlw	145
  5785  001552  6E17               	movwf	(isbtw@low+2)^0,c
  5786  001554  0E3E               	movlw	62
  5787  001556  6E18               	movwf	(isbtw@low+3)^0,c
  5788  001558  0E52               	movlw	82
  5789  00155A  6E19               	movwf	isbtw@high^0,c
  5790  00155C  0EB8               	movlw	184
  5791  00155E  6E1A               	movwf	(isbtw@high+1)^0,c
  5792  001560  0E9E               	movlw	158
  5793  001562  6E1B               	movwf	(isbtw@high+2)^0,c
  5794  001564  0E3E               	movlw	62
  5795  001566  6E1C               	movwf	(isbtw@high+3)^0,c
  5796  001568  ECB2  F01D         	call	_isbtw	;wreg free
  5797  00156C  0411               	decf	?_isbtw^0,w,c
  5798  00156E  1012               	iorwf	(?_isbtw+1)^0,w,c
  5799  001570  A4D8               	btfss	status,2,c
  5800  001572  EFBD  F00A         	goto	u4141
  5801  001576  EFBF  F00A         	goto	u4140
  5802  00157A                     u4141:
  5803  00157A  EFE6  F00A         	goto	l4056
  5804  00157E                     u4140:
  5805  00157E  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5806  001582  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5807  001586  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5808  00158A  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5809  00158E  0EA6               	movlw	166
  5810  001590  6E15               	movwf	isbtw@low^0,c
  5811  001592  0E9B               	movlw	155
  5812  001594  6E16               	movwf	(isbtw@low+1)^0,c
  5813  001596  0E84               	movlw	132
  5814  001598  6E17               	movwf	(isbtw@low+2)^0,c
  5815  00159A  0E3E               	movlw	62
  5816  00159C  6E18               	movwf	(isbtw@low+3)^0,c
  5817  00159E  0E29               	movlw	41
  5818  0015A0  6E19               	movwf	isbtw@high^0,c
  5819  0015A2  0E5C               	movlw	92
  5820  0015A4  6E1A               	movwf	(isbtw@high+1)^0,c
  5821  0015A6  0E8F               	movlw	143
  5822  0015A8  6E1B               	movwf	(isbtw@high+2)^0,c
  5823  0015AA  0E3E               	movlw	62
  5824  0015AC  6E1C               	movwf	(isbtw@high+3)^0,c
  5825  0015AE  ECB2  F01D         	call	_isbtw	;wreg free
  5826  0015B2  0411               	decf	?_isbtw^0,w,c
  5827  0015B4  1012               	iorwf	(?_isbtw+1)^0,w,c
  5828  0015B6  A4D8               	btfss	status,2,c
  5829  0015B8  EFE0  F00A         	goto	u4151
  5830  0015BC  EFE2  F00A         	goto	u4150
  5831  0015C0                     u4151:
  5832  0015C0  EFE6  F00A         	goto	l4056
  5833  0015C4                     u4150:
  5834  0015C4                     
  5835                           ;color.c: 230:     {out = 6;}
  5836  0015C4  0E00               	movlw	0
  5837  0015C6  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5838  0015C8  0E06               	movlw	6
  5839  0015CA  6E3D               	movwf	determine_color_new@out^0,c
  5840  0015CC                     l4056:
  5841                           
  5842                           ;color.c: 233:     if (isbtw(RedRatio,0.565,0.605)==1 && isbtw(GreenRatio,0.259,0.285)==
      +                          1 && isbtw(BlueRatio,0.238,0.255)==1)
  5843  0015CC  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5844  0015D0  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5845  0015D4  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5846  0015D8  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5847  0015DC  0ED7               	movlw	215
  5848  0015DE  6E15               	movwf	isbtw@low^0,c
  5849  0015E0  0EA3               	movlw	163
  5850  0015E2  6E16               	movwf	(isbtw@low+1)^0,c
  5851  0015E4  0E10               	movlw	16
  5852  0015E6  6E17               	movwf	(isbtw@low+2)^0,c
  5853  0015E8  0E3F               	movlw	63
  5854  0015EA  6E18               	movwf	(isbtw@low+3)^0,c
  5855  0015EC  0E48               	movlw	72
  5856  0015EE  6E19               	movwf	isbtw@high^0,c
  5857  0015F0  0EE1               	movlw	225
  5858  0015F2  6E1A               	movwf	(isbtw@high+1)^0,c
  5859  0015F4  0E1A               	movlw	26
  5860  0015F6  6E1B               	movwf	(isbtw@high+2)^0,c
  5861  0015F8  0E3F               	movlw	63
  5862  0015FA  6E1C               	movwf	(isbtw@high+3)^0,c
  5863  0015FC  ECB2  F01D         	call	_isbtw	;wreg free
  5864  001600  0411               	decf	?_isbtw^0,w,c
  5865  001602  1012               	iorwf	(?_isbtw+1)^0,w,c
  5866  001604  A4D8               	btfss	status,2,c
  5867  001606  EF07  F00B         	goto	u4161
  5868  00160A  EF09  F00B         	goto	u4160
  5869  00160E                     u4161:
  5870  00160E  EF53  F00B         	goto	l4064
  5871  001612                     u4160:
  5872  001612  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5873  001616  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5874  00161A  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5875  00161E  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5876  001622  0EA6               	movlw	166
  5877  001624  6E15               	movwf	isbtw@low^0,c
  5878  001626  0E9B               	movlw	155
  5879  001628  6E16               	movwf	(isbtw@low+1)^0,c
  5880  00162A  0E84               	movlw	132
  5881  00162C  6E17               	movwf	(isbtw@low+2)^0,c
  5882  00162E  0E3E               	movlw	62
  5883  001630  6E18               	movwf	(isbtw@low+3)^0,c
  5884  001632  0E85               	movlw	133
  5885  001634  6E19               	movwf	isbtw@high^0,c
  5886  001636  0EEB               	movlw	235
  5887  001638  6E1A               	movwf	(isbtw@high+1)^0,c
  5888  00163A  0E91               	movlw	145
  5889  00163C  6E1B               	movwf	(isbtw@high+2)^0,c
  5890  00163E  0E3E               	movlw	62
  5891  001640  6E1C               	movwf	(isbtw@high+3)^0,c
  5892  001642  ECB2  F01D         	call	_isbtw	;wreg free
  5893  001646  0411               	decf	?_isbtw^0,w,c
  5894  001648  1012               	iorwf	(?_isbtw+1)^0,w,c
  5895  00164A  A4D8               	btfss	status,2,c
  5896  00164C  EF2A  F00B         	goto	u4171
  5897  001650  EF2C  F00B         	goto	u4170
  5898  001654                     u4171:
  5899  001654  EF53  F00B         	goto	l4064
  5900  001658                     u4170:
  5901  001658  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5902  00165C  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5903  001660  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  5904  001664  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  5905  001668  0E46               	movlw	70
  5906  00166A  6E15               	movwf	isbtw@low^0,c
  5907  00166C  0EB6               	movlw	182
  5908  00166E  6E16               	movwf	(isbtw@low+1)^0,c
  5909  001670  0E73               	movlw	115
  5910  001672  6E17               	movwf	(isbtw@low+2)^0,c
  5911  001674  0E3E               	movlw	62
  5912  001676  6E18               	movwf	(isbtw@low+3)^0,c
  5913  001678  0E5C               	movlw	92
  5914  00167A  6E19               	movwf	isbtw@high^0,c
  5915  00167C  0E8F               	movlw	143
  5916  00167E  6E1A               	movwf	(isbtw@high+1)^0,c
  5917  001680  0E82               	movlw	130
  5918  001682  6E1B               	movwf	(isbtw@high+2)^0,c
  5919  001684  0E3E               	movlw	62
  5920  001686  6E1C               	movwf	(isbtw@high+3)^0,c
  5921  001688  ECB2  F01D         	call	_isbtw	;wreg free
  5922  00168C  0411               	decf	?_isbtw^0,w,c
  5923  00168E  1012               	iorwf	(?_isbtw+1)^0,w,c
  5924  001690  A4D8               	btfss	status,2,c
  5925  001692  EF4D  F00B         	goto	u4181
  5926  001696  EF4F  F00B         	goto	u4180
  5927  00169A                     u4181:
  5928  00169A  EF53  F00B         	goto	l4064
  5929  00169E                     u4180:
  5930  00169E                     
  5931                           ;color.c: 234:     {out = 7;}
  5932  00169E  0E00               	movlw	0
  5933  0016A0  6E3E               	movwf	(determine_color_new@out+1)^0,c
  5934  0016A2  0E07               	movlw	7
  5935  0016A4  6E3D               	movwf	determine_color_new@out^0,c
  5936  0016A6                     l4064:
  5937                           
  5938                           ;color.c: 237:     if (isbtw(RedRatio,0.581,0.606)==1 && isbtw(GreenRatio,0.240,0.276)==
      +                          1 && isbtw(BlueRatio,0.200,0.245)==1)
  5939  0016A6  C03F  F011         	movff	determine_color_new@RedRatio,isbtw@num
  5940  0016AA  C040  F012         	movff	determine_color_new@RedRatio+1,isbtw@num+1
  5941  0016AE  C041  F013         	movff	determine_color_new@RedRatio+2,isbtw@num+2
  5942  0016B2  C042  F014         	movff	determine_color_new@RedRatio+3,isbtw@num+3
  5943  0016B6  0E6A               	movlw	106
  5944  0016B8  6E15               	movwf	isbtw@low^0,c
  5945  0016BA  0EBC               	movlw	188
  5946  0016BC  6E16               	movwf	(isbtw@low+1)^0,c
  5947  0016BE  0E14               	movlw	20
  5948  0016C0  6E17               	movwf	(isbtw@low+2)^0,c
  5949  0016C2  0E3F               	movlw	63
  5950  0016C4  6E18               	movwf	(isbtw@low+3)^0,c
  5951  0016C6  0ED1               	movlw	209
  5952  0016C8  6E19               	movwf	isbtw@high^0,c
  5953  0016CA  0E22               	movlw	34
  5954  0016CC  6E1A               	movwf	(isbtw@high+1)^0,c
  5955  0016CE  0E1B               	movlw	27
  5956  0016D0  6E1B               	movwf	(isbtw@high+2)^0,c
  5957  0016D2  0E3F               	movlw	63
  5958  0016D4  6E1C               	movwf	(isbtw@high+3)^0,c
  5959  0016D6  ECB2  F01D         	call	_isbtw	;wreg free
  5960  0016DA  0411               	decf	?_isbtw^0,w,c
  5961  0016DC  1012               	iorwf	(?_isbtw+1)^0,w,c
  5962  0016DE  A4D8               	btfss	status,2,c
  5963  0016E0  EF74  F00B         	goto	u4191
  5964  0016E4  EF76  F00B         	goto	u4190
  5965  0016E8                     u4191:
  5966  0016E8  EFC0  F00B         	goto	l4072
  5967  0016EC                     u4190:
  5968  0016EC  C043  F011         	movff	determine_color_new@GreenRatio,isbtw@num
  5969  0016F0  C044  F012         	movff	determine_color_new@GreenRatio+1,isbtw@num+1
  5970  0016F4  C045  F013         	movff	determine_color_new@GreenRatio+2,isbtw@num+2
  5971  0016F8  C046  F014         	movff	determine_color_new@GreenRatio+3,isbtw@num+3
  5972  0016FC  0E8F               	movlw	143
  5973  0016FE  6E15               	movwf	isbtw@low^0,c
  5974  001700  0EC2               	movlw	194
  5975  001702  6E16               	movwf	(isbtw@low+1)^0,c
  5976  001704  0E75               	movlw	117
  5977  001706  6E17               	movwf	(isbtw@low+2)^0,c
  5978  001708  0E3E               	movlw	62
  5979  00170A  6E18               	movwf	(isbtw@low+3)^0,c
  5980  00170C  0EDF               	movlw	223
  5981  00170E  6E19               	movwf	isbtw@high^0,c
  5982  001710  0E4F               	movlw	79
  5983  001712  6E1A               	movwf	(isbtw@high+1)^0,c
  5984  001714  0E8D               	movlw	141
  5985  001716  6E1B               	movwf	(isbtw@high+2)^0,c
  5986  001718  0E3E               	movlw	62
  5987  00171A  6E1C               	movwf	(isbtw@high+3)^0,c
  5988  00171C  ECB2  F01D         	call	_isbtw	;wreg free
  5989  001720  0411               	decf	?_isbtw^0,w,c
  5990  001722  1012               	iorwf	(?_isbtw+1)^0,w,c
  5991  001724  A4D8               	btfss	status,2,c
  5992  001726  EF97  F00B         	goto	u4201
  5993  00172A  EF99  F00B         	goto	u4200
  5994  00172E                     u4201:
  5995  00172E  EFC0  F00B         	goto	l4072
  5996  001732                     u4200:
  5997  001732  C047  F011         	movff	determine_color_new@BlueRatio,isbtw@num
  5998  001736  C048  F012         	movff	determine_color_new@BlueRatio+1,isbtw@num+1
  5999  00173A  C049  F013         	movff	determine_color_new@BlueRatio+2,isbtw@num+2
  6000  00173E  C04A  F014         	movff	determine_color_new@BlueRatio+3,isbtw@num+3
  6001  001742  0ECD               	movlw	205
  6002  001744  6E15               	movwf	isbtw@low^0,c
  6003  001746  0ECC               	movlw	204
  6004  001748  6E16               	movwf	(isbtw@low+1)^0,c
  6005  00174A  0E4C               	movlw	76
  6006  00174C  6E17               	movwf	(isbtw@low+2)^0,c
  6007  00174E  0E3E               	movlw	62
  6008  001750  6E18               	movwf	(isbtw@low+3)^0,c
  6009  001752  0E48               	movlw	72
  6010  001754  6E19               	movwf	isbtw@high^0,c
  6011  001756  0EE1               	movlw	225
  6012  001758  6E1A               	movwf	(isbtw@high+1)^0,c
  6013  00175A  0E7A               	movlw	122
  6014  00175C  6E1B               	movwf	(isbtw@high+2)^0,c
  6015  00175E  0E3E               	movlw	62
  6016  001760  6E1C               	movwf	(isbtw@high+3)^0,c
  6017  001762  ECB2  F01D         	call	_isbtw	;wreg free
  6018  001766  0411               	decf	?_isbtw^0,w,c
  6019  001768  1012               	iorwf	(?_isbtw+1)^0,w,c
  6020  00176A  A4D8               	btfss	status,2,c
  6021  00176C  EFBA  F00B         	goto	u4211
  6022  001770  EFBC  F00B         	goto	u4210
  6023  001774                     u4211:
  6024  001774  EFC0  F00B         	goto	l4072
  6025  001778                     u4210:
  6026  001778                     
  6027                           ;color.c: 238:     {out = 8;}
  6028  001778  0E00               	movlw	0
  6029  00177A  6E3E               	movwf	(determine_color_new@out+1)^0,c
  6030  00177C  0E08               	movlw	8
  6031  00177E  6E3D               	movwf	determine_color_new@out^0,c
  6032  001780                     l4072:
  6033                           
  6034                           ;color.c: 245:     return out;
  6035  001780  C03D  F037         	movff	determine_color_new@out,?_determine_color_new
  6036  001784  C03E  F038         	movff	determine_color_new@out+1,?_determine_color_new+1
  6037  001788  0012               	return		;funcret
  6038  00178A                     __end_of_determine_color_new:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function _isbtw *****************
  6042 ;; Defined at:
  6043 ;;		line 182 in file "color.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  num             4   16[COMRAM] float 
  6046 ;;  low             4   20[COMRAM] float 
  6047 ;;  high            4   24[COMRAM] float 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2   16[COMRAM] unsigned int 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6059 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;Total ram usage:       12 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 3
  6066 ;; This function calls:
  6067 ;;		___flge
  6068 ;; This function is called by:
  6069 ;;		_determine_color_new
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text23
  6074  003B64                     __ptext23:
  6075                           	callstack 0
  6076  003B64                     _isbtw:
  6077                           	callstack 26
  6078  003B64                     
  6079                           ;color.c: 183:     if (num>=low && num<=high){return 1;}
  6080  003B64  C011  F005         	movff	isbtw@num,___flge@ff1
  6081  003B68  C012  F006         	movff	isbtw@num+1,___flge@ff1+1
  6082  003B6C  C013  F007         	movff	isbtw@num+2,___flge@ff1+2
  6083  003B70  C014  F008         	movff	isbtw@num+3,___flge@ff1+3
  6084  003B74  C015  F009         	movff	isbtw@low,___flge@ff2
  6085  003B78  C016  F00A         	movff	isbtw@low+1,___flge@ff2+1
  6086  003B7C  C017  F00B         	movff	isbtw@low+2,___flge@ff2+2
  6087  003B80  C018  F00C         	movff	isbtw@low+3,___flge@ff2+3
  6088  003B84  EC68  F01C         	call	___flge	;wreg free
  6089  003B88  A0D8               	btfss	status,0,c
  6090  003B8A  EFC9  F01D         	goto	u3131
  6091  003B8E  EFCB  F01D         	goto	u3130
  6092  003B92                     u3131:
  6093  003B92  EFEA  F01D         	goto	l3522
  6094  003B96                     u3130:
  6095  003B96  C019  F005         	movff	isbtw@high,___flge@ff1
  6096  003B9A  C01A  F006         	movff	isbtw@high+1,___flge@ff1+1
  6097  003B9E  C01B  F007         	movff	isbtw@high+2,___flge@ff1+2
  6098  003BA2  C01C  F008         	movff	isbtw@high+3,___flge@ff1+3
  6099  003BA6  C011  F009         	movff	isbtw@num,___flge@ff2
  6100  003BAA  C012  F00A         	movff	isbtw@num+1,___flge@ff2+1
  6101  003BAE  C013  F00B         	movff	isbtw@num+2,___flge@ff2+2
  6102  003BB2  C014  F00C         	movff	isbtw@num+3,___flge@ff2+3
  6103  003BB6  EC68  F01C         	call	___flge	;wreg free
  6104  003BBA  A0D8               	btfss	status,0,c
  6105  003BBC  EFE2  F01D         	goto	u3141
  6106  003BC0  EFE4  F01D         	goto	u3140
  6107  003BC4                     u3141:
  6108  003BC4  EFEA  F01D         	goto	l3522
  6109  003BC8                     u3140:
  6110  003BC8  0E00               	movlw	0
  6111  003BCA  6E12               	movwf	(?_isbtw+1)^0,c
  6112  003BCC  0E01               	movlw	1
  6113  003BCE  6E11               	movwf	?_isbtw^0,c
  6114  003BD0  EFEE  F01D         	goto	l85
  6115  003BD4                     l3522:
  6116  003BD4  0E00               	movlw	0
  6117  003BD6  6E12               	movwf	(?_isbtw+1)^0,c
  6118  003BD8  0E00               	movlw	0
  6119  003BDA  6E11               	movwf	?_isbtw^0,c
  6120  003BDC                     l85:
  6121  003BDC  0012               	return		;funcret
  6122  003BDE                     __end_of_isbtw:
  6123                           	callstack 0
  6124                           
  6125 ;; *************** function ___flge *****************
  6126 ;; Defined at:
  6127 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  ff1             4    4[COMRAM] unsigned int 
  6130 ;;  ff2             4    8[COMRAM] unsigned int 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;		None               void
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6142 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;Total ram usage:       12 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 2
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_isbtw
  6153 ;;		_sqrtf
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text24
  6158  0038D0                     __ptext24:
  6159                           	callstack 0
  6160  0038D0                     ___flge:
  6161                           	callstack 26
  6162  0038D0  0E00               	movlw	0
  6163  0038D2  1405               	andwf	___flge@ff1^0,w,c
  6164  0038D4  6E0D               	movwf	??___flge^0,c
  6165  0038D6  0E00               	movlw	0
  6166  0038D8  1406               	andwf	(___flge@ff1+1)^0,w,c
  6167  0038DA  6E0E               	movwf	(??___flge+1)^0,c
  6168  0038DC  0E80               	movlw	128
  6169  0038DE  1407               	andwf	(___flge@ff1+2)^0,w,c
  6170  0038E0  6E0F               	movwf	(??___flge+2)^0,c
  6171  0038E2  0E7F               	movlw	127
  6172  0038E4  1408               	andwf	(___flge@ff1+3)^0,w,c
  6173  0038E6  6E10               	movwf	(??___flge+3)^0,c
  6174  0038E8  500D               	movf	??___flge^0,w,c
  6175  0038EA  100E               	iorwf	(??___flge+1)^0,w,c
  6176  0038EC  100F               	iorwf	(??___flge+2)^0,w,c
  6177  0038EE  1010               	iorwf	(??___flge+3)^0,w,c
  6178  0038F0  A4D8               	btfss	status,2,c
  6179  0038F2  EF7D  F01C         	goto	u2971
  6180  0038F6  EF7F  F01C         	goto	u2970
  6181  0038FA                     u2971:
  6182  0038FA  EF87  F01C         	goto	l3358
  6183  0038FE                     u2970:
  6184  0038FE  0E00               	movlw	0
  6185  003900  6E05               	movwf	___flge@ff1^0,c
  6186  003902  0E00               	movlw	0
  6187  003904  6E06               	movwf	(___flge@ff1+1)^0,c
  6188  003906  0E00               	movlw	0
  6189  003908  6E07               	movwf	(___flge@ff1+2)^0,c
  6190  00390A  0E00               	movlw	0
  6191  00390C  6E08               	movwf	(___flge@ff1+3)^0,c
  6192  00390E                     l3358:
  6193  00390E  0E00               	movlw	0
  6194  003910  1409               	andwf	___flge@ff2^0,w,c
  6195  003912  6E0D               	movwf	??___flge^0,c
  6196  003914  0E00               	movlw	0
  6197  003916  140A               	andwf	(___flge@ff2+1)^0,w,c
  6198  003918  6E0E               	movwf	(??___flge+1)^0,c
  6199  00391A  0E80               	movlw	128
  6200  00391C  140B               	andwf	(___flge@ff2+2)^0,w,c
  6201  00391E  6E0F               	movwf	(??___flge+2)^0,c
  6202  003920  0E7F               	movlw	127
  6203  003922  140C               	andwf	(___flge@ff2+3)^0,w,c
  6204  003924  6E10               	movwf	(??___flge+3)^0,c
  6205  003926  500D               	movf	??___flge^0,w,c
  6206  003928  100E               	iorwf	(??___flge+1)^0,w,c
  6207  00392A  100F               	iorwf	(??___flge+2)^0,w,c
  6208  00392C  1010               	iorwf	(??___flge+3)^0,w,c
  6209  00392E  A4D8               	btfss	status,2,c
  6210  003930  EF9C  F01C         	goto	u2981
  6211  003934  EF9E  F01C         	goto	u2980
  6212  003938                     u2981:
  6213  003938  EFA6  F01C         	goto	l3362
  6214  00393C                     u2980:
  6215  00393C  0E00               	movlw	0
  6216  00393E  6E09               	movwf	___flge@ff2^0,c
  6217  003940  0E00               	movlw	0
  6218  003942  6E0A               	movwf	(___flge@ff2+1)^0,c
  6219  003944  0E00               	movlw	0
  6220  003946  6E0B               	movwf	(___flge@ff2+2)^0,c
  6221  003948  0E00               	movlw	0
  6222  00394A  6E0C               	movwf	(___flge@ff2+3)^0,c
  6223  00394C                     l3362:
  6224  00394C  AE08               	btfss	(___flge@ff1+3)^0,7,c
  6225  00394E  EFAB  F01C         	goto	u2991
  6226  003952  EFAD  F01C         	goto	u2990
  6227  003956                     u2991:
  6228  003956  EFB6  F01C         	goto	l3366
  6229  00395A                     u2990:
  6230  00395A  6C05               	negf	___flge@ff1^0,c
  6231  00395C  1E06               	comf	(___flge@ff1+1)^0,f,c
  6232  00395E  B0D8               	btfsc	status,0,c
  6233  003960  2A06               	incf	(___flge@ff1+1)^0,f,c
  6234  003962  1E07               	comf	(___flge@ff1+2)^0,f,c
  6235  003964  B0D8               	btfsc	status,0,c
  6236  003966  2A07               	incf	(___flge@ff1+2)^0,f,c
  6237  003968  0E80               	movlw	128
  6238  00396A  5608               	subfwb	(___flge@ff1+3)^0,f,c
  6239  00396C                     l3366:
  6240  00396C  AE0C               	btfss	(___flge@ff2+3)^0,7,c
  6241  00396E  EFBB  F01C         	goto	u3001
  6242  003972  EFBD  F01C         	goto	u3000
  6243  003976                     u3001:
  6244  003976  EFC6  F01C         	goto	l715
  6245  00397A                     u3000:
  6246  00397A  6C09               	negf	___flge@ff2^0,c
  6247  00397C  1E0A               	comf	(___flge@ff2+1)^0,f,c
  6248  00397E  B0D8               	btfsc	status,0,c
  6249  003980  2A0A               	incf	(___flge@ff2+1)^0,f,c
  6250  003982  1E0B               	comf	(___flge@ff2+2)^0,f,c
  6251  003984  B0D8               	btfsc	status,0,c
  6252  003986  2A0B               	incf	(___flge@ff2+2)^0,f,c
  6253  003988  0E80               	movlw	128
  6254  00398A  560C               	subfwb	(___flge@ff2+3)^0,f,c
  6255  00398C                     l715:
  6256  00398C  0E00               	movlw	0
  6257  00398E  1A05               	xorwf	___flge@ff1^0,f,c
  6258  003990  0E00               	movlw	0
  6259  003992  1A06               	xorwf	(___flge@ff1+1)^0,f,c
  6260  003994  0E00               	movlw	0
  6261  003996  1A07               	xorwf	(___flge@ff1+2)^0,f,c
  6262  003998  0E80               	movlw	128
  6263  00399A  1A08               	xorwf	(___flge@ff1+3)^0,f,c
  6264  00399C  0E00               	movlw	0
  6265  00399E  1A09               	xorwf	___flge@ff2^0,f,c
  6266  0039A0  0E00               	movlw	0
  6267  0039A2  1A0A               	xorwf	(___flge@ff2+1)^0,f,c
  6268  0039A4  0E00               	movlw	0
  6269  0039A6  1A0B               	xorwf	(___flge@ff2+2)^0,f,c
  6270  0039A8  0E80               	movlw	128
  6271  0039AA  1A0C               	xorwf	(___flge@ff2+3)^0,f,c
  6272  0039AC  5009               	movf	___flge@ff2^0,w,c
  6273  0039AE  5C05               	subwf	___flge@ff1^0,w,c
  6274  0039B0  500A               	movf	(___flge@ff2+1)^0,w,c
  6275  0039B2  5806               	subwfb	(___flge@ff1+1)^0,w,c
  6276  0039B4  500B               	movf	(___flge@ff2+2)^0,w,c
  6277  0039B6  5807               	subwfb	(___flge@ff1+2)^0,w,c
  6278  0039B8  500C               	movf	(___flge@ff2+3)^0,w,c
  6279  0039BA  5808               	subwfb	(___flge@ff1+3)^0,w,c
  6280  0039BC  B0D8               	btfsc	status,0,c
  6281  0039BE  EFE3  F01C         	goto	u3011
  6282  0039C2  EFE5  F01C         	goto	u3010
  6283  0039C6                     u3011:
  6284  0039C6  EFE8  F01C         	goto	l3372
  6285  0039CA                     u3010:
  6286  0039CA  90D8               	bcf	status,0,c
  6287  0039CC  EFE9  F01C         	goto	l720
  6288  0039D0                     l3372:
  6289  0039D0  80D8               	bsf	status,0,c
  6290  0039D2                     l720:
  6291  0039D2  0012               	return		;funcret
  6292  0039D4                     __end_of___flge:
  6293                           	callstack 0
  6294                           
  6295 ;; *************** function ___xxtofl *****************
  6296 ;; Defined at:
  6297 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  sign            1    wreg     unsigned char 
  6300 ;;  val             4   10[COMRAM] long 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  sign            1   18[COMRAM] unsigned char 
  6303 ;;  arg             4   20[COMRAM] unsigned long 
  6304 ;;  exp             1   19[COMRAM] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  4   10[COMRAM] unsigned char 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;Total ram usage:       14 bytes
  6319 ;; Hardware stack levels used: 1
  6320 ;; Hardware stack levels required when called: 2
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_determine_color_new
  6325 ;;		_main
  6326 ;;		_determine_color1
  6327 ;;		_determine_color2
  6328 ;;		_determine_color3
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	text25
  6333  003186                     __ptext25:
  6334                           	callstack 0
  6335  003186                     ___xxtofl:
  6336                           	callstack 27
  6337                           
  6338                           ;incstack = 0
  6339                           ;___xxtofl@sign stored from wreg
  6340  003186  6E13               	movwf	___xxtofl@sign^0,c
  6341  003188  5013               	movf	___xxtofl@sign^0,w,c
  6342  00318A  B4D8               	btfsc	status,2,c
  6343  00318C  EFCA  F018         	goto	u3841
  6344  003190  EFCC  F018         	goto	u3840
  6345  003194                     u3841:
  6346  003194  EFEE  F018         	goto	l1105
  6347  003198                     u3840:
  6348  003198  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  6349  00319A  EFD3  F018         	goto	u3850
  6350  00319E  EFD1  F018         	goto	u3851
  6351  0031A2                     u3851:
  6352  0031A2  EFEE  F018         	goto	l1105
  6353  0031A6                     u3850:
  6354  0031A6  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  6355  0031AA  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  6356  0031AE  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  6357  0031B2  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  6358  0031B6  1E0F               	comf	??___xxtofl^0,f,c
  6359  0031B8  1E10               	comf	(??___xxtofl+1)^0,f,c
  6360  0031BA  1E11               	comf	(??___xxtofl+2)^0,f,c
  6361  0031BC  1E12               	comf	(??___xxtofl+3)^0,f,c
  6362  0031BE  2A0F               	incf	??___xxtofl^0,f,c
  6363  0031C0  0E00               	movlw	0
  6364  0031C2  2210               	addwfc	(??___xxtofl+1)^0,f,c
  6365  0031C4  2211               	addwfc	(??___xxtofl+2)^0,f,c
  6366  0031C6  2212               	addwfc	(??___xxtofl+3)^0,f,c
  6367  0031C8  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  6368  0031CC  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  6369  0031D0  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  6370  0031D4  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  6371  0031D8  EFF6  F018         	goto	l3930
  6372  0031DC                     l1105:
  6373  0031DC  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  6374  0031E0  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6375  0031E4  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6376  0031E8  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6377  0031EC                     l3930:
  6378  0031EC  500B               	movf	___xxtofl@val^0,w,c
  6379  0031EE  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  6380  0031F0  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  6381  0031F2  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  6382  0031F4  A4D8               	btfss	status,2,c
  6383  0031F6  EFFF  F018         	goto	u3861
  6384  0031FA  EF01  F019         	goto	u3860
  6385  0031FE                     u3861:
  6386  0031FE  EF0B  F019         	goto	l3936
  6387  003202                     u3860:
  6388  003202  0E00               	movlw	0
  6389  003204  6E0B               	movwf	?___xxtofl^0,c
  6390  003206  0E00               	movlw	0
  6391  003208  6E0C               	movwf	(?___xxtofl+1)^0,c
  6392  00320A  0E00               	movlw	0
  6393  00320C  6E0D               	movwf	(?___xxtofl+2)^0,c
  6394  00320E  0E00               	movlw	0
  6395  003210  6E0E               	movwf	(?___xxtofl+3)^0,c
  6396  003212  EF9C  F019         	goto	l1108
  6397  003216                     l3936:
  6398  003216  0E96               	movlw	150
  6399  003218  6E14               	movwf	___xxtofl@exp^0,c
  6400  00321A  EF15  F019         	goto	l3940
  6401  00321E                     l3938:
  6402  00321E  2A14               	incf	___xxtofl@exp^0,f,c
  6403  003220  90D8               	bcf	status,0,c
  6404  003222  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  6405  003224  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  6406  003226  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  6407  003228  3215               	rrcf	___xxtofl@arg^0,f,c
  6408  00322A                     l3940:
  6409  00322A  0E00               	movlw	0
  6410  00322C  1415               	andwf	___xxtofl@arg^0,w,c
  6411  00322E  6E0F               	movwf	??___xxtofl^0,c
  6412  003230  0E00               	movlw	0
  6413  003232  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  6414  003234  6E10               	movwf	(??___xxtofl+1)^0,c
  6415  003236  0E00               	movlw	0
  6416  003238  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  6417  00323A  6E11               	movwf	(??___xxtofl+2)^0,c
  6418  00323C  0EFE               	movlw	254
  6419  00323E  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  6420  003240  6E12               	movwf	(??___xxtofl+3)^0,c
  6421  003242  500F               	movf	??___xxtofl^0,w,c
  6422  003244  1010               	iorwf	(??___xxtofl+1)^0,w,c
  6423  003246  1011               	iorwf	(??___xxtofl+2)^0,w,c
  6424  003248  1012               	iorwf	(??___xxtofl+3)^0,w,c
  6425  00324A  A4D8               	btfss	status,2,c
  6426  00324C  EF2A  F019         	goto	u3871
  6427  003250  EF2C  F019         	goto	u3870
  6428  003254                     u3871:
  6429  003254  EF0F  F019         	goto	l3938
  6430  003258                     u3870:
  6431  003258  EF3A  F019         	goto	l1112
  6432  00325C                     l3942:
  6433  00325C  2A14               	incf	___xxtofl@exp^0,f,c
  6434  00325E  0E01               	movlw	1
  6435  003260  2615               	addwf	___xxtofl@arg^0,f,c
  6436  003262  0E00               	movlw	0
  6437  003264  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  6438  003266  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  6439  003268  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  6440  00326A  90D8               	bcf	status,0,c
  6441  00326C  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  6442  00326E  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  6443  003270  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  6444  003272  3215               	rrcf	___xxtofl@arg^0,f,c
  6445  003274                     l1112:
  6446  003274  0E00               	movlw	0
  6447  003276  1415               	andwf	___xxtofl@arg^0,w,c
  6448  003278  6E0F               	movwf	??___xxtofl^0,c
  6449  00327A  0E00               	movlw	0
  6450  00327C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  6451  00327E  6E10               	movwf	(??___xxtofl+1)^0,c
  6452  003280  0E00               	movlw	0
  6453  003282  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  6454  003284  6E11               	movwf	(??___xxtofl+2)^0,c
  6455  003286  0EFF               	movlw	255
  6456  003288  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  6457  00328A  6E12               	movwf	(??___xxtofl+3)^0,c
  6458  00328C  500F               	movf	??___xxtofl^0,w,c
  6459  00328E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  6460  003290  1011               	iorwf	(??___xxtofl+2)^0,w,c
  6461  003292  1012               	iorwf	(??___xxtofl+3)^0,w,c
  6462  003294  A4D8               	btfss	status,2,c
  6463  003296  EF4F  F019         	goto	u3881
  6464  00329A  EF51  F019         	goto	u3880
  6465  00329E                     u3881:
  6466  00329E  EF2E  F019         	goto	l3942
  6467  0032A2                     u3880:
  6468  0032A2  EF59  F019         	goto	l3950
  6469  0032A6                     l3948:
  6470  0032A6  0614               	decf	___xxtofl@exp^0,f,c
  6471  0032A8  90D8               	bcf	status,0,c
  6472  0032AA  3615               	rlcf	___xxtofl@arg^0,f,c
  6473  0032AC  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  6474  0032AE  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  6475  0032B0  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  6476  0032B2                     l3950:
  6477  0032B2  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  6478  0032B4  EF5E  F019         	goto	u3891
  6479  0032B8  EF60  F019         	goto	u3890
  6480  0032BC                     u3891:
  6481  0032BC  EF68  F019         	goto	l1119
  6482  0032C0                     u3890:
  6483  0032C0  0E02               	movlw	2
  6484  0032C2  6014               	cpfslt	___xxtofl@exp^0,c
  6485  0032C4  EF66  F019         	goto	u3901
  6486  0032C8  EF68  F019         	goto	u3900
  6487  0032CC                     u3901:
  6488  0032CC  EF53  F019         	goto	l3948
  6489  0032D0                     u3900:
  6490  0032D0                     l1119:
  6491  0032D0  B014               	btfsc	___xxtofl@exp^0,0,c
  6492  0032D2  EF6D  F019         	goto	u3911
  6493  0032D6  EF6F  F019         	goto	u3910
  6494  0032DA                     u3911:
  6495  0032DA  EF70  F019         	goto	l3956
  6496  0032DE                     u3910:
  6497  0032DE  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  6498  0032E0                     l3956:
  6499  0032E0  90D8               	bcf	status,0,c
  6500  0032E2  3214               	rrcf	___xxtofl@exp^0,f,c
  6501  0032E4  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  6502  0032E8  6A10               	clrf	(??___xxtofl+1)^0,c
  6503  0032EA  6A11               	clrf	(??___xxtofl+2)^0,c
  6504  0032EC  6A12               	clrf	(??___xxtofl+3)^0,c
  6505  0032EE  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  6506  0032F2  6A11               	clrf	(??___xxtofl+2)^0,c
  6507  0032F4  6A10               	clrf	(??___xxtofl+1)^0,c
  6508  0032F6  6A0F               	clrf	??___xxtofl^0,c
  6509  0032F8  500F               	movf	??___xxtofl^0,w,c
  6510  0032FA  1215               	iorwf	___xxtofl@arg^0,f,c
  6511  0032FC  5010               	movf	(??___xxtofl+1)^0,w,c
  6512  0032FE  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  6513  003300  5011               	movf	(??___xxtofl+2)^0,w,c
  6514  003302  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  6515  003304  5012               	movf	(??___xxtofl+3)^0,w,c
  6516  003306  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  6517  003308  5013               	movf	___xxtofl@sign^0,w,c
  6518  00330A  B4D8               	btfsc	status,2,c
  6519  00330C  EF8A  F019         	goto	u3921
  6520  003310  EF8C  F019         	goto	u3920
  6521  003314                     u3921:
  6522  003314  EF94  F019         	goto	l3966
  6523  003318                     u3920:
  6524  003318  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  6525  00331A  EF93  F019         	goto	u3930
  6526  00331E  EF91  F019         	goto	u3931
  6527  003322                     u3931:
  6528  003322  EF94  F019         	goto	l3966
  6529  003326                     u3930:
  6530  003326  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  6531  003328                     l3966:
  6532  003328  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  6533  00332C  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  6534  003330  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  6535  003334  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  6536  003338                     l1108:
  6537  003338  0012               	return		;funcret
  6538  00333A                     __end_of___xxtofl:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function ___fldiv *****************
  6542 ;; Defined at:
  6543 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  b               4   29[COMRAM] unsigned char 
  6546 ;;  a               4   33[COMRAM] unsigned char 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  grs             4   48[COMRAM] unsigned long 
  6549 ;;  rem             4   41[COMRAM] unsigned long 
  6550 ;;  new_exp         2   46[COMRAM] short 
  6551 ;;  aexp            1   53[COMRAM] unsigned char 
  6552 ;;  bexp            1   52[COMRAM] unsigned char 
  6553 ;;  sign            1   45[COMRAM] unsigned char 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  4   29[COMRAM] unsigned char 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6563 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;Total ram usage:       25 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; Hardware stack levels required when called: 2
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_determine_color_new
  6574 ;;		_main
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text26
  6579  00277E                     __ptext26:
  6580                           	callstack 0
  6581  00277E                     ___fldiv:
  6582                           	callstack 27
  6583  00277E  5021               	movf	(___fldiv@b+3)^0,w,c
  6584  002780  0B80               	andlw	128
  6585  002782  6E2E               	movwf	___fldiv@sign^0,c
  6586  002784  5021               	movf	(___fldiv@b+3)^0,w,c
  6587  002786  2421               	addwf	(___fldiv@b+3)^0,w,c
  6588  002788  6E35               	movwf	___fldiv@bexp^0,c
  6589  00278A  AE20               	btfss	(___fldiv@b+2)^0,7,c
  6590  00278C  EFCA  F013         	goto	u3611
  6591  002790  EFCC  F013         	goto	u3610
  6592  002794                     u3611:
  6593  002794  EFCD  F013         	goto	l3792
  6594  002798                     u3610:
  6595  002798  8035               	bsf	___fldiv@bexp^0,0,c
  6596  00279A                     l3792:
  6597  00279A  5035               	movf	___fldiv@bexp^0,w,c
  6598  00279C  B4D8               	btfsc	status,2,c
  6599  00279E  EFD3  F013         	goto	u3621
  6600  0027A2  EFD5  F013         	goto	u3620
  6601  0027A6                     u3621:
  6602  0027A6  EFEA  F013         	goto	l3802
  6603  0027AA                     u3620:
  6604  0027AA  2835               	incf	___fldiv@bexp^0,w,c
  6605  0027AC  A4D8               	btfss	status,2,c
  6606  0027AE  EFDB  F013         	goto	u3631
  6607  0027B2  EFDD  F013         	goto	u3630
  6608  0027B6                     u3631:
  6609  0027B6  EFE5  F013         	goto	l3798
  6610  0027BA                     u3630:
  6611  0027BA  0E00               	movlw	0
  6612  0027BC  6E1E               	movwf	___fldiv@b^0,c
  6613  0027BE  0E00               	movlw	0
  6614  0027C0  6E1F               	movwf	(___fldiv@b+1)^0,c
  6615  0027C2  0E00               	movlw	0
  6616  0027C4  6E20               	movwf	(___fldiv@b+2)^0,c
  6617  0027C6  0E00               	movlw	0
  6618  0027C8  6E21               	movwf	(___fldiv@b+3)^0,c
  6619  0027CA                     l3798:
  6620  0027CA  8E20               	bsf	(___fldiv@b+2)^0,7,c
  6621  0027CC  0E00               	movlw	0
  6622  0027CE  6E21               	movwf	(___fldiv@b+3)^0,c
  6623  0027D0  EFF2  F013         	goto	l3804
  6624  0027D4                     l3802:
  6625  0027D4  0E00               	movlw	0
  6626  0027D6  6E1E               	movwf	___fldiv@b^0,c
  6627  0027D8  0E00               	movlw	0
  6628  0027DA  6E1F               	movwf	(___fldiv@b+1)^0,c
  6629  0027DC  0E00               	movlw	0
  6630  0027DE  6E20               	movwf	(___fldiv@b+2)^0,c
  6631  0027E0  0E00               	movlw	0
  6632  0027E2  6E21               	movwf	(___fldiv@b+3)^0,c
  6633  0027E4                     l3804:
  6634  0027E4  5025               	movf	(___fldiv@a+3)^0,w,c
  6635  0027E6  0B80               	andlw	128
  6636  0027E8  1A2E               	xorwf	___fldiv@sign^0,f,c
  6637  0027EA  5025               	movf	(___fldiv@a+3)^0,w,c
  6638  0027EC  2425               	addwf	(___fldiv@a+3)^0,w,c
  6639  0027EE  6E36               	movwf	___fldiv@aexp^0,c
  6640  0027F0  AE24               	btfss	(___fldiv@a+2)^0,7,c
  6641  0027F2  EFFD  F013         	goto	u3641
  6642  0027F6  EFFF  F013         	goto	u3640
  6643  0027FA                     u3641:
  6644  0027FA  EF00  F014         	goto	l3812
  6645  0027FE                     u3640:
  6646  0027FE  8036               	bsf	___fldiv@aexp^0,0,c
  6647  002800                     l3812:
  6648  002800  5036               	movf	___fldiv@aexp^0,w,c
  6649  002802  B4D8               	btfsc	status,2,c
  6650  002804  EF06  F014         	goto	u3651
  6651  002808  EF08  F014         	goto	u3650
  6652  00280C                     u3651:
  6653  00280C  EF1D  F014         	goto	l3822
  6654  002810                     u3650:
  6655  002810  2836               	incf	___fldiv@aexp^0,w,c
  6656  002812  A4D8               	btfss	status,2,c
  6657  002814  EF0E  F014         	goto	u3661
  6658  002818  EF10  F014         	goto	u3660
  6659  00281C                     u3661:
  6660  00281C  EF18  F014         	goto	l3818
  6661  002820                     u3660:
  6662  002820  0E00               	movlw	0
  6663  002822  6E22               	movwf	___fldiv@a^0,c
  6664  002824  0E00               	movlw	0
  6665  002826  6E23               	movwf	(___fldiv@a+1)^0,c
  6666  002828  0E00               	movlw	0
  6667  00282A  6E24               	movwf	(___fldiv@a+2)^0,c
  6668  00282C  0E00               	movlw	0
  6669  00282E  6E25               	movwf	(___fldiv@a+3)^0,c
  6670  002830                     l3818:
  6671  002830  8E24               	bsf	(___fldiv@a+2)^0,7,c
  6672  002832  0E00               	movlw	0
  6673  002834  6E25               	movwf	(___fldiv@a+3)^0,c
  6674  002836  EF25  F014         	goto	l3824
  6675  00283A                     l3822:
  6676  00283A  0E00               	movlw	0
  6677  00283C  6E22               	movwf	___fldiv@a^0,c
  6678  00283E  0E00               	movlw	0
  6679  002840  6E23               	movwf	(___fldiv@a+1)^0,c
  6680  002842  0E00               	movlw	0
  6681  002844  6E24               	movwf	(___fldiv@a+2)^0,c
  6682  002846  0E00               	movlw	0
  6683  002848  6E25               	movwf	(___fldiv@a+3)^0,c
  6684  00284A                     l3824:
  6685  00284A  5022               	movf	___fldiv@a^0,w,c
  6686  00284C  1023               	iorwf	(___fldiv@a+1)^0,w,c
  6687  00284E  1024               	iorwf	(___fldiv@a+2)^0,w,c
  6688  002850  1025               	iorwf	(___fldiv@a+3)^0,w,c
  6689  002852  A4D8               	btfss	status,2,c
  6690  002854  EF2E  F014         	goto	u3671
  6691  002858  EF30  F014         	goto	u3670
  6692  00285C                     u3671:
  6693  00285C  EF48  F014         	goto	l3836
  6694  002860                     u3670:
  6695  002860  0E00               	movlw	0
  6696  002862  6E1E               	movwf	___fldiv@b^0,c
  6697  002864  0E00               	movlw	0
  6698  002866  6E1F               	movwf	(___fldiv@b+1)^0,c
  6699  002868  0E00               	movlw	0
  6700  00286A  6E20               	movwf	(___fldiv@b+2)^0,c
  6701  00286C  0E00               	movlw	0
  6702  00286E  6E21               	movwf	(___fldiv@b+3)^0,c
  6703  002870  0E80               	movlw	128
  6704  002872  1220               	iorwf	(___fldiv@b+2)^0,f,c
  6705  002874  0E7F               	movlw	127
  6706  002876  1221               	iorwf	(___fldiv@b+3)^0,f,c
  6707  002878                     l3830:
  6708  002878  502E               	movf	___fldiv@sign^0,w,c
  6709  00287A  1221               	iorwf	(___fldiv@b+3)^0,f,c
  6710  00287C  C01E  F01E         	movff	___fldiv@b,?___fldiv
  6711  002880  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
  6712  002884  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
  6713  002888  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
  6714  00288C  EF8B  F015         	goto	l1032
  6715  002890                     l3836:
  6716  002890  5035               	movf	___fldiv@bexp^0,w,c
  6717  002892  A4D8               	btfss	status,2,c
  6718  002894  EF4E  F014         	goto	u3681
  6719  002898  EF50  F014         	goto	u3680
  6720  00289C                     u3681:
  6721  00289C  EF5A  F014         	goto	l3844
  6722  0028A0                     u3680:
  6723  0028A0  0E00               	movlw	0
  6724  0028A2  6E1E               	movwf	?___fldiv^0,c
  6725  0028A4  0E00               	movlw	0
  6726  0028A6  6E1F               	movwf	(?___fldiv+1)^0,c
  6727  0028A8  0E00               	movlw	0
  6728  0028AA  6E20               	movwf	(?___fldiv+2)^0,c
  6729  0028AC  0E00               	movlw	0
  6730  0028AE  6E21               	movwf	(?___fldiv+3)^0,c
  6731  0028B0  EF8B  F015         	goto	l1032
  6732  0028B4                     l3844:
  6733  0028B4  5036               	movf	___fldiv@aexp^0,w,c
  6734  0028B6  C035  F026         	movff	___fldiv@bexp,??___fldiv
  6735  0028BA  6A27               	clrf	(??___fldiv+1)^0,c
  6736  0028BC  5E26               	subwf	??___fldiv^0,f,c
  6737  0028BE  0E00               	movlw	0
  6738  0028C0  5A27               	subwfb	(??___fldiv+1)^0,f,c
  6739  0028C2  0E7F               	movlw	127
  6740  0028C4  2426               	addwf	??___fldiv^0,w,c
  6741  0028C6  6E2F               	movwf	___fldiv@new_exp^0,c
  6742  0028C8  0E00               	movlw	0
  6743  0028CA  2027               	addwfc	(??___fldiv+1)^0,w,c
  6744  0028CC  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  6745  0028CE  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
  6746  0028D2  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
  6747  0028D6  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
  6748  0028DA  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
  6749  0028DE  0E00               	movlw	0
  6750  0028E0  6E1E               	movwf	___fldiv@b^0,c
  6751  0028E2  0E00               	movlw	0
  6752  0028E4  6E1F               	movwf	(___fldiv@b+1)^0,c
  6753  0028E6  0E00               	movlw	0
  6754  0028E8  6E20               	movwf	(___fldiv@b+2)^0,c
  6755  0028EA  0E00               	movlw	0
  6756  0028EC  6E21               	movwf	(___fldiv@b+3)^0,c
  6757  0028EE  0E00               	movlw	0
  6758  0028F0  6E31               	movwf	___fldiv@grs^0,c
  6759  0028F2  0E00               	movlw	0
  6760  0028F4  6E32               	movwf	(___fldiv@grs+1)^0,c
  6761  0028F6  0E00               	movlw	0
  6762  0028F8  6E33               	movwf	(___fldiv@grs+2)^0,c
  6763  0028FA  0E00               	movlw	0
  6764  0028FC  6E34               	movwf	(___fldiv@grs+3)^0,c
  6765  0028FE  0E00               	movlw	0
  6766  002900  6E36               	movwf	___fldiv@aexp^0,c
  6767  002902  EFBB  F014         	goto	l1034
  6768  002906                     l3854:
  6769  002906  5036               	movf	___fldiv@aexp^0,w,c
  6770  002908  B4D8               	btfsc	status,2,c
  6771  00290A  EF89  F014         	goto	u3691
  6772  00290E  EF8B  F014         	goto	u3690
  6773  002912                     u3691:
  6774  002912  EFA2  F014         	goto	l3862
  6775  002916                     u3690:
  6776  002916  90D8               	bcf	status,0,c
  6777  002918  362A               	rlcf	___fldiv@rem^0,f,c
  6778  00291A  362B               	rlcf	(___fldiv@rem+1)^0,f,c
  6779  00291C  362C               	rlcf	(___fldiv@rem+2)^0,f,c
  6780  00291E  362D               	rlcf	(___fldiv@rem+3)^0,f,c
  6781  002920  90D8               	bcf	status,0,c
  6782  002922  361E               	rlcf	___fldiv@b^0,f,c
  6783  002924  361F               	rlcf	(___fldiv@b+1)^0,f,c
  6784  002926  3620               	rlcf	(___fldiv@b+2)^0,f,c
  6785  002928  3621               	rlcf	(___fldiv@b+3)^0,f,c
  6786  00292A  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  6787  00292C  EF9A  F014         	goto	u3701
  6788  002930  EF9C  F014         	goto	u3700
  6789  002934                     u3701:
  6790  002934  EF9D  F014         	goto	l1037
  6791  002938                     u3700:
  6792  002938  801E               	bsf	___fldiv@b^0,0,c
  6793  00293A                     l1037:
  6794  00293A  90D8               	bcf	status,0,c
  6795  00293C  3631               	rlcf	___fldiv@grs^0,f,c
  6796  00293E  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  6797  002940  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  6798  002942  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  6799  002944                     l3862:
  6800  002944  5022               	movf	___fldiv@a^0,w,c
  6801  002946  5C2A               	subwf	___fldiv@rem^0,w,c
  6802  002948  5023               	movf	(___fldiv@a+1)^0,w,c
  6803  00294A  582B               	subwfb	(___fldiv@rem+1)^0,w,c
  6804  00294C  5024               	movf	(___fldiv@a+2)^0,w,c
  6805  00294E  582C               	subwfb	(___fldiv@rem+2)^0,w,c
  6806  002950  5025               	movf	(___fldiv@a+3)^0,w,c
  6807  002952  582D               	subwfb	(___fldiv@rem+3)^0,w,c
  6808  002954  A0D8               	btfss	status,0,c
  6809  002956  EFAF  F014         	goto	u3711
  6810  00295A  EFB1  F014         	goto	u3710
  6811  00295E                     u3711:
  6812  00295E  EFBA  F014         	goto	l3868
  6813  002962                     u3710:
  6814  002962  8C34               	bsf	(___fldiv@grs+3)^0,6,c
  6815  002964  5022               	movf	___fldiv@a^0,w,c
  6816  002966  5E2A               	subwf	___fldiv@rem^0,f,c
  6817  002968  5023               	movf	(___fldiv@a+1)^0,w,c
  6818  00296A  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
  6819  00296C  5024               	movf	(___fldiv@a+2)^0,w,c
  6820  00296E  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
  6821  002970  5025               	movf	(___fldiv@a+3)^0,w,c
  6822  002972  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
  6823  002974                     l3868:
  6824  002974  2A36               	incf	___fldiv@aexp^0,f,c
  6825  002976                     l1034:
  6826  002976  0E19               	movlw	25
  6827  002978  6436               	cpfsgt	___fldiv@aexp^0,c
  6828  00297A  EFC1  F014         	goto	u3721
  6829  00297E  EFC3  F014         	goto	u3720
  6830  002982                     u3721:
  6831  002982  EF83  F014         	goto	l3854
  6832  002986                     u3720:
  6833  002986  502A               	movf	___fldiv@rem^0,w,c
  6834  002988  102B               	iorwf	(___fldiv@rem+1)^0,w,c
  6835  00298A  102C               	iorwf	(___fldiv@rem+2)^0,w,c
  6836  00298C  102D               	iorwf	(___fldiv@rem+3)^0,w,c
  6837  00298E  B4D8               	btfsc	status,2,c
  6838  002990  EFCC  F014         	goto	u3731
  6839  002994  EFCE  F014         	goto	u3730
  6840  002998                     u3731:
  6841  002998  EFE6  F014         	goto	l3880
  6842  00299C                     u3730:
  6843  00299C  8031               	bsf	___fldiv@grs^0,0,c
  6844  00299E  EFE6  F014         	goto	l3880
  6845  0029A2                     l3874:
  6846  0029A2  90D8               	bcf	status,0,c
  6847  0029A4  361E               	rlcf	___fldiv@b^0,f,c
  6848  0029A6  361F               	rlcf	(___fldiv@b+1)^0,f,c
  6849  0029A8  3620               	rlcf	(___fldiv@b+2)^0,f,c
  6850  0029AA  3621               	rlcf	(___fldiv@b+3)^0,f,c
  6851  0029AC  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  6852  0029AE  EFDB  F014         	goto	u3741
  6853  0029B2  EFDD  F014         	goto	u3740
  6854  0029B6                     u3741:
  6855  0029B6  EFDE  F014         	goto	l1043
  6856  0029BA                     u3740:
  6857  0029BA  801E               	bsf	___fldiv@b^0,0,c
  6858  0029BC                     l1043:
  6859  0029BC  90D8               	bcf	status,0,c
  6860  0029BE  3631               	rlcf	___fldiv@grs^0,f,c
  6861  0029C0  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  6862  0029C2  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  6863  0029C4  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  6864  0029C6  062F               	decf	___fldiv@new_exp^0,f,c
  6865  0029C8  A0D8               	btfss	status,0,c
  6866  0029CA  0630               	decf	(___fldiv@new_exp+1)^0,f,c
  6867  0029CC                     l3880:
  6868  0029CC  AE20               	btfss	(___fldiv@b+2)^0,7,c
  6869  0029CE  EFEB  F014         	goto	u3751
  6870  0029D2  EFED  F014         	goto	u3750
  6871  0029D6                     u3751:
  6872  0029D6  EFD1  F014         	goto	l3874
  6873  0029DA                     u3750:
  6874  0029DA  0E00               	movlw	0
  6875  0029DC  6E36               	movwf	___fldiv@aexp^0,c
  6876  0029DE  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  6877  0029E0  EFF4  F014         	goto	u3761
  6878  0029E4  EFF6  F014         	goto	u3760
  6879  0029E8                     u3761:
  6880  0029E8  EF1A  F015         	goto	l1045
  6881  0029EC                     u3760:
  6882  0029EC  0EFF               	movlw	255
  6883  0029EE  1431               	andwf	___fldiv@grs^0,w,c
  6884  0029F0  6E26               	movwf	??___fldiv^0,c
  6885  0029F2  0EFF               	movlw	255
  6886  0029F4  1432               	andwf	(___fldiv@grs+1)^0,w,c
  6887  0029F6  6E27               	movwf	(??___fldiv+1)^0,c
  6888  0029F8  0EFF               	movlw	255
  6889  0029FA  1433               	andwf	(___fldiv@grs+2)^0,w,c
  6890  0029FC  6E28               	movwf	(??___fldiv+2)^0,c
  6891  0029FE  0E7F               	movlw	127
  6892  002A00  1434               	andwf	(___fldiv@grs+3)^0,w,c
  6893  002A02  6E29               	movwf	(??___fldiv+3)^0,c
  6894  002A04  5026               	movf	??___fldiv^0,w,c
  6895  002A06  1027               	iorwf	(??___fldiv+1)^0,w,c
  6896  002A08  1028               	iorwf	(??___fldiv+2)^0,w,c
  6897  002A0A  1029               	iorwf	(??___fldiv+3)^0,w,c
  6898  002A0C  B4D8               	btfsc	status,2,c
  6899  002A0E  EF0B  F015         	goto	u3771
  6900  002A12  EF0D  F015         	goto	u3770
  6901  002A16                     u3771:
  6902  002A16  EF11  F015         	goto	l1046
  6903  002A1A                     u3770:
  6904  002A1A                     l3888:
  6905  002A1A  0E01               	movlw	1
  6906  002A1C  6E36               	movwf	___fldiv@aexp^0,c
  6907  002A1E  EF1A  F015         	goto	l1045
  6908  002A22                     l1046:
  6909  002A22  A01E               	btfss	___fldiv@b^0,0,c
  6910  002A24  EF16  F015         	goto	u3781
  6911  002A28  EF18  F015         	goto	u3780
  6912  002A2C                     u3781:
  6913  002A2C  EF1A  F015         	goto	l1045
  6914  002A30                     u3780:
  6915  002A30  EF0D  F015         	goto	l3888
  6916  002A34                     l1045:
  6917  002A34  5036               	movf	___fldiv@aexp^0,w,c
  6918  002A36  B4D8               	btfsc	status,2,c
  6919  002A38  EF20  F015         	goto	u3791
  6920  002A3C  EF22  F015         	goto	u3790
  6921  002A40                     u3791:
  6922  002A40  EF46  F015         	goto	l3900
  6923  002A44                     u3790:
  6924  002A44  0E01               	movlw	1
  6925  002A46  261E               	addwf	___fldiv@b^0,f,c
  6926  002A48  0E00               	movlw	0
  6927  002A4A  221F               	addwfc	(___fldiv@b+1)^0,f,c
  6928  002A4C  2220               	addwfc	(___fldiv@b+2)^0,f,c
  6929  002A4E  2221               	addwfc	(___fldiv@b+3)^0,f,c
  6930  002A50  A021               	btfss	(___fldiv@b+3)^0,0,c
  6931  002A52  EF2D  F015         	goto	u3801
  6932  002A56  EF2F  F015         	goto	u3800
  6933  002A5A                     u3801:
  6934  002A5A  EF46  F015         	goto	l3900
  6935  002A5E                     u3800:
  6936  002A5E  C01E  F026         	movff	___fldiv@b,??___fldiv
  6937  002A62  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
  6938  002A66  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
  6939  002A6A  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
  6940  002A6E  3429               	rlcf	(??___fldiv+3)^0,w,c
  6941  002A70  3229               	rrcf	(??___fldiv+3)^0,f,c
  6942  002A72  3228               	rrcf	(??___fldiv+2)^0,f,c
  6943  002A74  3227               	rrcf	(??___fldiv+1)^0,f,c
  6944  002A76  3226               	rrcf	??___fldiv^0,f,c
  6945  002A78  C026  F01E         	movff	??___fldiv,___fldiv@b
  6946  002A7C  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
  6947  002A80  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
  6948  002A84  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
  6949  002A88  4A2F               	infsnz	___fldiv@new_exp^0,f,c
  6950  002A8A  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
  6951  002A8C                     l3900:
  6952  002A8C  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6953  002A8E  EF51  F015         	goto	u3811
  6954  002A92  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  6955  002A94  E108               	bnz	u3810
  6956  002A96  282F               	incf	___fldiv@new_exp^0,w,c
  6957  002A98  A0D8               	btfss	status,0,c
  6958  002A9A  EF51  F015         	goto	u3811
  6959  002A9E  EF53  F015         	goto	u3810
  6960  002AA2                     u3811:
  6961  002AA2  EF5E  F015         	goto	l3904
  6962  002AA6                     u3810:
  6963  002AA6  0E00               	movlw	0
  6964  002AA8  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  6965  002AAA  682F               	setf	___fldiv@new_exp^0,c
  6966  002AAC  0E00               	movlw	0
  6967  002AAE  6E1E               	movwf	___fldiv@b^0,c
  6968  002AB0  0E00               	movlw	0
  6969  002AB2  6E1F               	movwf	(___fldiv@b+1)^0,c
  6970  002AB4  0E00               	movlw	0
  6971  002AB6  6E20               	movwf	(___fldiv@b+2)^0,c
  6972  002AB8  0E00               	movlw	0
  6973  002ABA  6E21               	movwf	(___fldiv@b+3)^0,c
  6974  002ABC                     l3904:
  6975  002ABC  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6976  002ABE  EF6B  F015         	goto	u3820
  6977  002AC2  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  6978  002AC4  E106               	bnz	u3821
  6979  002AC6  042F               	decf	___fldiv@new_exp^0,w,c
  6980  002AC8  B0D8               	btfsc	status,0,c
  6981  002ACA  EF69  F015         	goto	u3821
  6982  002ACE  EF6B  F015         	goto	u3820
  6983  002AD2                     u3821:
  6984  002AD2  EF79  F015         	goto	l3908
  6985  002AD6                     u3820:
  6986  002AD6  0E00               	movlw	0
  6987  002AD8  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  6988  002ADA  0E00               	movlw	0
  6989  002ADC  6E2F               	movwf	___fldiv@new_exp^0,c
  6990  002ADE  0E00               	movlw	0
  6991  002AE0  6E1E               	movwf	___fldiv@b^0,c
  6992  002AE2  0E00               	movlw	0
  6993  002AE4  6E1F               	movwf	(___fldiv@b+1)^0,c
  6994  002AE6  0E00               	movlw	0
  6995  002AE8  6E20               	movwf	(___fldiv@b+2)^0,c
  6996  002AEA  0E00               	movlw	0
  6997  002AEC  6E21               	movwf	(___fldiv@b+3)^0,c
  6998  002AEE  0E00               	movlw	0
  6999  002AF0  6E2E               	movwf	___fldiv@sign^0,c
  7000  002AF2                     l3908:
  7001  002AF2  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
  7002  002AF6  A035               	btfss	___fldiv@bexp^0,0,c
  7003  002AF8  EF80  F015         	goto	u3831
  7004  002AFC  EF82  F015         	goto	u3830
  7005  002B00                     u3831:
  7006  002B00  EF85  F015         	goto	l3914
  7007  002B04                     u3830:
  7008  002B04  8E20               	bsf	(___fldiv@b+2)^0,7,c
  7009  002B06  EF86  F015         	goto	l3916
  7010  002B0A                     l3914:
  7011  002B0A  9E20               	bcf	(___fldiv@b+2)^0,7,c
  7012  002B0C                     l3916:
  7013  002B0C  90D8               	bcf	status,0,c
  7014  002B0E  3035               	rrcf	___fldiv@bexp^0,w,c
  7015  002B10  6E21               	movwf	(___fldiv@b+3)^0,c
  7016  002B12  EF3C  F014         	goto	l3830
  7017  002B16                     l1032:
  7018  002B16  0012               	return		;funcret
  7019  002B18                     __end_of___fldiv:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _color_click_init *****************
  7023 ;; Defined at:
  7024 ;;		line 8 in file "color.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7042 ;;Total ram usage:        1 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 5
  7045 ;; This function calls:
  7046 ;;		_I2C_2_Master_Init
  7047 ;;		_color_writetoaddr
  7048 ;; This function is called by:
  7049 ;;		_main
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text27
  7054  0041A4                     __ptext27:
  7055                           	callstack 0
  7056  0041A4                     _color_click_init:
  7057                           	callstack 25
  7058  0041A4                     
  7059                           ;color.c: 11:     I2C_2_Master_Init();
  7060  0041A4  EC1A  F021         	call	_I2C_2_Master_Init	;wreg free
  7061  0041A8                     
  7062                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  7063  0041A8  0E01               	movlw	1
  7064  0041AA  6E07               	movwf	color_writetoaddr@value^0,c
  7065  0041AC  0E00               	movlw	0
  7066  0041AE  EC90  F021         	call	_color_writetoaddr
  7067  0041B2                     
  7068                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7069  0041B2  0E3F               	movlw	63
  7070  0041B4  6E09               	movwf	??_color_click_init^0,c
  7071  0041B6  0E55               	movlw	85
  7072  0041B8                     u5917:
  7073  0041B8  2EE8               	decfsz	wreg,f,c
  7074  0041BA  D7FE               	bra	u5917
  7075  0041BC  2E09               	decfsz	??_color_click_init^0,f,c
  7076  0041BE  D7FC               	bra	u5917
  7077  0041C0  F000               	nop	
  7078  0041C2                     
  7079                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  7080  0041C2  0E03               	movlw	3
  7081  0041C4  6E07               	movwf	color_writetoaddr@value^0,c
  7082  0041C6  0E00               	movlw	0
  7083  0041C8  EC90  F021         	call	_color_writetoaddr
  7084  0041CC                     
  7085                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  7086  0041CC  0ED5               	movlw	213
  7087  0041CE  6E07               	movwf	color_writetoaddr@value^0,c
  7088  0041D0  0E01               	movlw	1
  7089  0041D2  EC90  F021         	call	_color_writetoaddr
  7090  0041D6  0012               	return		;funcret
  7091  0041D8                     __end_of_color_click_init:
  7092                           	callstack 0
  7093                           
  7094 ;; *************** function _color_writetoaddr *****************
  7095 ;; Defined at:
  7096 ;;		line 24 in file "color.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  address         1    wreg     unsigned char 
  7099 ;;  value           1    6[COMRAM] unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  address         1    7[COMRAM] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7111 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;Total ram usage:        2 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 4
  7118 ;; This function calls:
  7119 ;;		_I2C_2_Master_Start
  7120 ;;		_I2C_2_Master_Stop
  7121 ;;		_I2C_2_Master_Write
  7122 ;; This function is called by:
  7123 ;;		_color_click_init
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text28
  7128  004320                     __ptext28:
  7129                           	callstack 0
  7130  004320                     _color_writetoaddr:
  7131                           	callstack 25
  7132                           
  7133                           ;incstack = 0
  7134                           ;color_writetoaddr@address stored from wreg
  7135  004320  6E08               	movwf	color_writetoaddr@address^0,c
  7136  004322                     
  7137                           ;color.c: 25:     I2C_2_Master_Start();
  7138  004322  ECD6  F021         	call	_I2C_2_Master_Start	;wreg free
  7139                           
  7140                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7141  004326  0E52               	movlw	82
  7142  004328  ECC5  F021         	call	_I2C_2_Master_Write
  7143                           
  7144                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7145  00432C  5008               	movf	color_writetoaddr@address^0,w,c
  7146  00432E  0980               	iorlw	128
  7147  004330  ECC5  F021         	call	_I2C_2_Master_Write
  7148                           
  7149                           ;color.c: 28:     I2C_2_Master_Write(value);
  7150  004334  5007               	movf	color_writetoaddr@value^0,w,c
  7151  004336  ECC5  F021         	call	_I2C_2_Master_Write
  7152                           
  7153                           ;color.c: 29:     I2C_2_Master_Stop();
  7154  00433A  ECD1  F021         	call	_I2C_2_Master_Stop	;wreg free
  7155  00433E  0012               	return		;funcret
  7156  004340                     __end_of_color_writetoaddr:
  7157                           	callstack 0
  7158                           
  7159 ;; *************** function _I2C_2_Master_Init *****************
  7160 ;; Defined at:
  7161 ;;		line 4 in file "i2c.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;Total ram usage:        0 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 2
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_color_click_init
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text29
  7190  004234                     __ptext29:
  7191                           	callstack 0
  7192  004234                     _I2C_2_Master_Init:
  7193                           	callstack 27
  7194  004234                     
  7195                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7196  004234  010E               	movlb	14	; () banked
  7197  004236  51D9               	movf	217,w,b	;volatile
  7198  004238  0BF0               	andlw	-16
  7199  00423A  0908               	iorlw	8
  7200  00423C  6FD9               	movwf	217,b	;volatile
  7201  00423E                     
  7202                           ; BSR set to: 14
  7203                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7204  00423E  8BD9               	bsf	217,5,b	;volatile
  7205                           
  7206                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7207  004240  0E9F               	movlw	159
  7208  004242  6FD6               	movwf	214,b	;volatile
  7209  004244                     
  7210                           ; BSR set to: 14
  7211                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7212  004244  8A84               	bsf	132,5,c	;volatile
  7213  004246                     
  7214                           ; BSR set to: 14
  7215                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7216  004246  8C84               	bsf	132,6,c	;volatile
  7217  004248                     
  7218                           ; BSR set to: 14
  7219                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7220  004248  9BA7               	bcf	167,5,b	;volatile
  7221  00424A                     
  7222                           ; BSR set to: 14
  7223                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7224  00424A  9DA7               	bcf	167,6,b	;volatile
  7225                           
  7226                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7227  00424C  0E1D               	movlw	29
  7228  00424E  6F1D               	movwf	29,b	;volatile
  7229                           
  7230                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7231  004250  0E1E               	movlw	30
  7232  004252  6F1C               	movwf	28,b	;volatile
  7233                           
  7234                           ;i2c.c: 18:   RD5PPS=0x1C;
  7235  004254  0E1C               	movlw	28
  7236  004256  6F6F               	movwf	111,b	;volatile
  7237                           
  7238                           ;i2c.c: 19:   RD6PPS=0x1B;
  7239  004258  0E1B               	movlw	27
  7240  00425A  6F70               	movwf	112,b	;volatile
  7241  00425C                     
  7242                           ; BSR set to: 14
  7243  00425C  0012               	return		;funcret
  7244  00425E                     __end_of_I2C_2_Master_Init:
  7245                           	callstack 0
  7246                           
  7247 ;; *************** function _calibrate *****************
  7248 ;; Defined at:
  7249 ;;		line 187 in file "color.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  m               2   15[COMRAM] PTR struct RGB_val
  7252 ;;		 -> main@test(16), 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;Total ram usage:        2 bytes
  7269 ;; Hardware stack levels used: 1
  7270 ;; Hardware stack levels required when called: 5
  7271 ;; This function calls:
  7272 ;;		_color_read_Blue
  7273 ;;		_color_read_Clear
  7274 ;;		_color_read_Green
  7275 ;;		_color_read_Red
  7276 ;; This function is called by:
  7277 ;;		_main
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text30
  7282  003D70                     __ptext30:
  7283                           	callstack 0
  7284  003D70                     _calibrate:
  7285                           	callstack 25
  7286  003D70                     
  7287                           ;color.c: 188:     (m->ambientC) = color_read_Clear();
  7288  003D70  EC89  F01F         	call	_color_read_Clear	;wreg free
  7289  003D74  C010  FFD9         	movff	calibrate@m,fsr2l
  7290  003D78  C011  FFDA         	movff	calibrate@m+1,fsr2h
  7291  003D7C  C009  FFDE         	movff	?_color_read_Clear,postinc2
  7292  003D80  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  7293                           
  7294                           ;color.c: 189:     (m->ambientR) = color_read_Red();
  7295  003D84  EC39  F01F         	call	_color_read_Red	;wreg free
  7296  003D88  EE20 F002          	lfsr	2,2
  7297  003D8C  5010               	movf	calibrate@m^0,w,c
  7298  003D8E  26D9               	addwf	fsr2l,f,c
  7299  003D90  5011               	movf	(calibrate@m+1)^0,w,c
  7300  003D92  22DA               	addwfc	fsr2h,f,c
  7301  003D94  C009  FFDE         	movff	?_color_read_Red,postinc2
  7302  003D98  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  7303                           
  7304                           ;color.c: 190:     (m->ambientG) = color_read_Green();
  7305  003D9C  EC61  F01F         	call	_color_read_Green	;wreg free
  7306  003DA0  EE20 F004          	lfsr	2,4
  7307  003DA4  5010               	movf	calibrate@m^0,w,c
  7308  003DA6  26D9               	addwf	fsr2l,f,c
  7309  003DA8  5011               	movf	(calibrate@m+1)^0,w,c
  7310  003DAA  22DA               	addwfc	fsr2h,f,c
  7311  003DAC  C009  FFDE         	movff	?_color_read_Green,postinc2
  7312  003DB0  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  7313                           
  7314                           ;color.c: 191:     (m->ambientB) = color_read_Blue();
  7315  003DB4  ECB1  F01F         	call	_color_read_Blue	;wreg free
  7316  003DB8  EE20 F006          	lfsr	2,6
  7317  003DBC  5010               	movf	calibrate@m^0,w,c
  7318  003DBE  26D9               	addwf	fsr2l,f,c
  7319  003DC0  5011               	movf	(calibrate@m+1)^0,w,c
  7320  003DC2  22DA               	addwfc	fsr2h,f,c
  7321  003DC4  C009  FFDE         	movff	?_color_read_Blue,postinc2
  7322  003DC8  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  7323  003DCC  0012               	return		;funcret
  7324  003DCE                     __end_of_calibrate:
  7325                           	callstack 0
  7326                           
  7327 ;; *************** function _color_read_Red *****************
  7328 ;; Defined at:
  7329 ;;		line 45 in file "color.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  tmp             2   13[COMRAM] unsigned int 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  2    8[COMRAM] unsigned int 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7347 ;;Total ram usage:        7 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; Hardware stack levels required when called: 4
  7350 ;; This function calls:
  7351 ;;		_I2C_2_Master_Read
  7352 ;;		_I2C_2_Master_RepStart
  7353 ;;		_I2C_2_Master_Start
  7354 ;;		_I2C_2_Master_Stop
  7355 ;;		_I2C_2_Master_Write
  7356 ;; This function is called by:
  7357 ;;		_read_colours
  7358 ;;		_calibrate
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text31
  7363  003E72                     __ptext31:
  7364                           	callstack 0
  7365  003E72                     _color_read_Red:
  7366                           	callstack 25
  7367  003E72                     
  7368                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  7369  003E72  ECD6  F021         	call	_I2C_2_Master_Start	;wreg free
  7370                           
  7371                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  7372  003E76  0E52               	movlw	82
  7373  003E78  ECC5  F021         	call	_I2C_2_Master_Write
  7374                           
  7375                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  7376  003E7C  0EB6               	movlw	182
  7377  003E7E  ECC5  F021         	call	_I2C_2_Master_Write
  7378                           
  7379                           ;color.c: 51:  I2C_2_Master_RepStart();
  7380  003E82  ECDB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  7381                           
  7382                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7383  003E86  0E53               	movlw	83
  7384  003E88  ECC5  F021         	call	_I2C_2_Master_Write
  7385                           
  7386                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7387  003E8C  0E01               	movlw	1
  7388  003E8E  EC3F  F020         	call	_I2C_2_Master_Read
  7389  003E92  6E0B               	movwf	??_color_read_Red^0,c
  7390  003E94  500B               	movf	??_color_read_Red^0,w,c
  7391  003E96  6E0E               	movwf	color_read_Red@tmp^0,c
  7392  003E98  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  7393                           
  7394                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7395  003E9A  0E00               	movlw	0
  7396  003E9C  EC3F  F020         	call	_I2C_2_Master_Read
  7397  003EA0  6E0B               	movwf	??_color_read_Red^0,c
  7398  003EA2  500B               	movf	??_color_read_Red^0,w,c
  7399  003EA4  6E0D               	movwf	(??_color_read_Red+2)^0,c
  7400  003EA6  6A0C               	clrf	(??_color_read_Red+1)^0,c
  7401  003EA8  500E               	movf	color_read_Red@tmp^0,w,c
  7402  003EAA  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  7403  003EAC  6E0E               	movwf	color_read_Red@tmp^0,c
  7404  003EAE  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  7405  003EB0  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  7406  003EB2  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  7407                           
  7408                           ;color.c: 55:  I2C_2_Master_Stop();
  7409  003EB4  ECD1  F021         	call	_I2C_2_Master_Stop	;wreg free
  7410  003EB8                     
  7411                           ;color.c: 56:  return tmp;
  7412  003EB8  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  7413  003EBC  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7414  003EC0  0012               	return		;funcret
  7415  003EC2                     __end_of_color_read_Red:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _color_read_Green *****************
  7419 ;; Defined at:
  7420 ;;		line 59 in file "color.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  tmp             2   13[COMRAM] unsigned int 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  2    8[COMRAM] unsigned int 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;Total ram usage:        7 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 4
  7441 ;; This function calls:
  7442 ;;		_I2C_2_Master_Read
  7443 ;;		_I2C_2_Master_RepStart
  7444 ;;		_I2C_2_Master_Start
  7445 ;;		_I2C_2_Master_Stop
  7446 ;;		_I2C_2_Master_Write
  7447 ;; This function is called by:
  7448 ;;		_read_colours
  7449 ;;		_calibrate
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text32
  7454  003EC2                     __ptext32:
  7455                           	callstack 0
  7456  003EC2                     _color_read_Green:
  7457                           	callstack 25
  7458  003EC2                     
  7459                           ;color.c: 60:     unsigned int tmp;;color.c: 61:     I2C_2_Master_Start();
  7460  003EC2  ECD6  F021         	call	_I2C_2_Master_Start	;wreg free
  7461                           
  7462                           ;color.c: 62:     I2C_2_Master_Write(0x52 | 0x00);
  7463  003EC6  0E52               	movlw	82
  7464  003EC8  ECC5  F021         	call	_I2C_2_Master_Write
  7465                           
  7466                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  7467  003ECC  0EB8               	movlw	184
  7468  003ECE  ECC5  F021         	call	_I2C_2_Master_Write
  7469                           
  7470                           ;color.c: 64:  I2C_2_Master_RepStart();
  7471  003ED2  ECDB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  7472                           
  7473                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7474  003ED6  0E53               	movlw	83
  7475  003ED8  ECC5  F021         	call	_I2C_2_Master_Write
  7476                           
  7477                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7478  003EDC  0E01               	movlw	1
  7479  003EDE  EC3F  F020         	call	_I2C_2_Master_Read
  7480  003EE2  6E0B               	movwf	??_color_read_Green^0,c
  7481  003EE4  500B               	movf	??_color_read_Green^0,w,c
  7482  003EE6  6E0E               	movwf	color_read_Green@tmp^0,c
  7483  003EE8  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7484                           
  7485                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7486  003EEA  0E00               	movlw	0
  7487  003EEC  EC3F  F020         	call	_I2C_2_Master_Read
  7488  003EF0  6E0B               	movwf	??_color_read_Green^0,c
  7489  003EF2  500B               	movf	??_color_read_Green^0,w,c
  7490  003EF4  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7491  003EF6  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7492  003EF8  500E               	movf	color_read_Green@tmp^0,w,c
  7493  003EFA  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7494  003EFC  6E0E               	movwf	color_read_Green@tmp^0,c
  7495  003EFE  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7496  003F00  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7497  003F02  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7498                           
  7499                           ;color.c: 68:     I2C_2_Master_Stop();
  7500  003F04  ECD1  F021         	call	_I2C_2_Master_Stop	;wreg free
  7501  003F08                     
  7502                           ;color.c: 69:     return tmp;
  7503  003F08  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7504  003F0C  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7505  003F10  0012               	return		;funcret
  7506  003F12                     __end_of_color_read_Green:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _color_read_Clear *****************
  7510 ;; Defined at:
  7511 ;;		line 32 in file "color.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  tmp             2   13[COMRAM] unsigned int 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2    8[COMRAM] unsigned int 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;Total ram usage:        7 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; Hardware stack levels required when called: 4
  7532 ;; This function calls:
  7533 ;;		_I2C_2_Master_Read
  7534 ;;		_I2C_2_Master_RepStart
  7535 ;;		_I2C_2_Master_Start
  7536 ;;		_I2C_2_Master_Stop
  7537 ;;		_I2C_2_Master_Write
  7538 ;; This function is called by:
  7539 ;;		_read_colours
  7540 ;;		_calibrate
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text33
  7545  003F12                     __ptext33:
  7546                           	callstack 0
  7547  003F12                     _color_read_Clear:
  7548                           	callstack 25
  7549  003F12                     
  7550                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  7551  003F12  ECD6  F021         	call	_I2C_2_Master_Start	;wreg free
  7552                           
  7553                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  7554  003F16  0E52               	movlw	82
  7555  003F18  ECC5  F021         	call	_I2C_2_Master_Write
  7556                           
  7557                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  7558  003F1C  0EB4               	movlw	180
  7559  003F1E  ECC5  F021         	call	_I2C_2_Master_Write
  7560                           
  7561                           ;color.c: 37:  I2C_2_Master_RepStart();
  7562  003F22  ECDB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  7563                           
  7564                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  7565  003F26  0E53               	movlw	83
  7566  003F28  ECC5  F021         	call	_I2C_2_Master_Write
  7567                           
  7568                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  7569  003F2C  0E01               	movlw	1
  7570  003F2E  EC3F  F020         	call	_I2C_2_Master_Read
  7571  003F32  6E0B               	movwf	??_color_read_Clear^0,c
  7572  003F34  500B               	movf	??_color_read_Clear^0,w,c
  7573  003F36  6E0E               	movwf	color_read_Clear@tmp^0,c
  7574  003F38  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  7575                           
  7576                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7577  003F3A  0E00               	movlw	0
  7578  003F3C  EC3F  F020         	call	_I2C_2_Master_Read
  7579  003F40  6E0B               	movwf	??_color_read_Clear^0,c
  7580  003F42  500B               	movf	??_color_read_Clear^0,w,c
  7581  003F44  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  7582  003F46  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  7583  003F48  500E               	movf	color_read_Clear@tmp^0,w,c
  7584  003F4A  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  7585  003F4C  6E0E               	movwf	color_read_Clear@tmp^0,c
  7586  003F4E  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  7587  003F50  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  7588  003F52  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  7589                           
  7590                           ;color.c: 41:     I2C_2_Master_Stop();
  7591  003F54  ECD1  F021         	call	_I2C_2_Master_Stop	;wreg free
  7592  003F58                     
  7593                           ;color.c: 42:     return tmp;
  7594  003F58  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  7595  003F5C  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7596  003F60  0012               	return		;funcret
  7597  003F62                     __end_of_color_read_Clear:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function _color_read_Blue *****************
  7601 ;; Defined at:
  7602 ;;		line 72 in file "color.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  tmp             2   13[COMRAM] unsigned int 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  2    8[COMRAM] unsigned int 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;Total ram usage:        7 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; Hardware stack levels required when called: 4
  7623 ;; This function calls:
  7624 ;;		_I2C_2_Master_Read
  7625 ;;		_I2C_2_Master_RepStart
  7626 ;;		_I2C_2_Master_Start
  7627 ;;		_I2C_2_Master_Stop
  7628 ;;		_I2C_2_Master_Write
  7629 ;; This function is called by:
  7630 ;;		_read_colours
  7631 ;;		_calibrate
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text34
  7636  003F62                     __ptext34:
  7637                           	callstack 0
  7638  003F62                     _color_read_Blue:
  7639                           	callstack 25
  7640  003F62                     
  7641                           ;color.c: 73:     unsigned int tmp;;color.c: 74:     I2C_2_Master_Start();
  7642  003F62  ECD6  F021         	call	_I2C_2_Master_Start	;wreg free
  7643                           
  7644                           ;color.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  7645  003F66  0E52               	movlw	82
  7646  003F68  ECC5  F021         	call	_I2C_2_Master_Write
  7647                           
  7648                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x1A);
  7649  003F6C  0EBA               	movlw	186
  7650  003F6E  ECC5  F021         	call	_I2C_2_Master_Write
  7651                           
  7652                           ;color.c: 77:  I2C_2_Master_RepStart();
  7653  003F72  ECDB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  7654                           
  7655                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  7656  003F76  0E53               	movlw	83
  7657  003F78  ECC5  F021         	call	_I2C_2_Master_Write
  7658                           
  7659                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  7660  003F7C  0E01               	movlw	1
  7661  003F7E  EC3F  F020         	call	_I2C_2_Master_Read
  7662  003F82  6E0B               	movwf	??_color_read_Blue^0,c
  7663  003F84  500B               	movf	??_color_read_Blue^0,w,c
  7664  003F86  6E0E               	movwf	color_read_Blue@tmp^0,c
  7665  003F88  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7666                           
  7667                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7668  003F8A  0E00               	movlw	0
  7669  003F8C  EC3F  F020         	call	_I2C_2_Master_Read
  7670  003F90  6E0B               	movwf	??_color_read_Blue^0,c
  7671  003F92  500B               	movf	??_color_read_Blue^0,w,c
  7672  003F94  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7673  003F96  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7674  003F98  500E               	movf	color_read_Blue@tmp^0,w,c
  7675  003F9A  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7676  003F9C  6E0E               	movwf	color_read_Blue@tmp^0,c
  7677  003F9E  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7678  003FA0  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7679  003FA2  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7680                           
  7681                           ;color.c: 81:     I2C_2_Master_Stop();
  7682  003FA4  ECD1  F021         	call	_I2C_2_Master_Stop	;wreg free
  7683  003FA8                     
  7684                           ;color.c: 82:     return tmp;
  7685  003FA8  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7686  003FAC  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7687  003FB0  0012               	return		;funcret
  7688  003FB2                     __end_of_color_read_Blue:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _I2C_2_Master_Write *****************
  7692 ;; Defined at:
  7693 ;;		line 45 in file "i2c.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  data_byte       1    wreg     unsigned char 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  data_byte       1    5[COMRAM] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;Total ram usage:        1 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; Hardware stack levels required when called: 3
  7714 ;; This function calls:
  7715 ;;		_I2C_2_Master_Idle
  7716 ;; This function is called by:
  7717 ;;		_color_writetoaddr
  7718 ;;		_color_read_Clear
  7719 ;;		_color_read_Red
  7720 ;;		_color_read_Green
  7721 ;;		_color_read_Blue
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text35
  7726  00438A                     __ptext35:
  7727                           	callstack 0
  7728  00438A                     _I2C_2_Master_Write:
  7729                           	callstack 25
  7730                           
  7731                           ;incstack = 0
  7732                           ;I2C_2_Master_Write@data_byte stored from wreg
  7733  00438A  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  7734  00438C                     
  7735                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7736  00438C  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7737  004390                     
  7738                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7739  004390  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7740  004394  0012               	return		;funcret
  7741  004396                     __end_of_I2C_2_Master_Write:
  7742                           	callstack 0
  7743                           
  7744 ;; *************** function _I2C_2_Master_Stop *****************
  7745 ;; Defined at:
  7746 ;;		line 39 in file "i2c.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, status,2, status,0, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;Total ram usage:        0 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; Hardware stack levels required when called: 3
  7767 ;; This function calls:
  7768 ;;		_I2C_2_Master_Idle
  7769 ;; This function is called by:
  7770 ;;		_color_writetoaddr
  7771 ;;		_color_read_Clear
  7772 ;;		_color_read_Red
  7773 ;;		_color_read_Green
  7774 ;;		_color_read_Blue
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text36
  7779  0043A2                     __ptext36:
  7780                           	callstack 0
  7781  0043A2                     _I2C_2_Master_Stop:
  7782                           	callstack 25
  7783  0043A2                     
  7784                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7785  0043A2  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7786  0043A6                     
  7787                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7788  0043A6  010E               	movlb	14	; () banked
  7789  0043A8  85DA               	bsf	218,2,b	;volatile
  7790  0043AA                     
  7791                           ; BSR set to: 14
  7792  0043AA  0012               	return		;funcret
  7793  0043AC                     __end_of_I2C_2_Master_Stop:
  7794                           	callstack 0
  7795                           
  7796 ;; *************** function _I2C_2_Master_Start *****************
  7797 ;; Defined at:
  7798 ;;		line 27 in file "i2c.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0, cstack
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; Hardware stack levels required when called: 3
  7819 ;; This function calls:
  7820 ;;		_I2C_2_Master_Idle
  7821 ;; This function is called by:
  7822 ;;		_color_writetoaddr
  7823 ;;		_color_read_Clear
  7824 ;;		_color_read_Red
  7825 ;;		_color_read_Green
  7826 ;;		_color_read_Blue
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text37
  7831  0043AC                     __ptext37:
  7832                           	callstack 0
  7833  0043AC                     _I2C_2_Master_Start:
  7834                           	callstack 25
  7835  0043AC                     
  7836                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7837  0043AC  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7838  0043B0                     
  7839                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7840  0043B0  010E               	movlb	14	; () banked
  7841  0043B2  81DA               	bsf	218,0,b	;volatile
  7842  0043B4                     
  7843                           ; BSR set to: 14
  7844  0043B4  0012               	return		;funcret
  7845  0043B6                     __end_of_I2C_2_Master_Start:
  7846                           	callstack 0
  7847                           
  7848 ;; *************** function _I2C_2_Master_RepStart *****************
  7849 ;; Defined at:
  7850 ;;		line 33 in file "i2c.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7868 ;;Total ram usage:        0 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 3
  7871 ;; This function calls:
  7872 ;;		_I2C_2_Master_Idle
  7873 ;; This function is called by:
  7874 ;;		_color_read_Clear
  7875 ;;		_color_read_Red
  7876 ;;		_color_read_Green
  7877 ;;		_color_read_Blue
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text38
  7882  0043B6                     __ptext38:
  7883                           	callstack 0
  7884  0043B6                     _I2C_2_Master_RepStart:
  7885                           	callstack 25
  7886  0043B6                     
  7887                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7888  0043B6  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7889  0043BA                     
  7890                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7891  0043BA  010E               	movlb	14	; () banked
  7892  0043BC  83DA               	bsf	218,1,b	;volatile
  7893  0043BE                     
  7894                           ; BSR set to: 14
  7895  0043BE  0012               	return		;funcret
  7896  0043C0                     __end_of_I2C_2_Master_RepStart:
  7897                           	callstack 0
  7898                           
  7899 ;; *************** function _I2C_2_Master_Read *****************
  7900 ;; Defined at:
  7901 ;;		line 51 in file "i2c.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  ack             1    wreg     unsigned char 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  ack             1    6[COMRAM] unsigned char 
  7906 ;;  tmp             1    7[COMRAM] unsigned char 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      unsigned char 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7917 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7919 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;Total ram usage:        3 bytes
  7921 ;; Hardware stack levels used: 1
  7922 ;; Hardware stack levels required when called: 3
  7923 ;; This function calls:
  7924 ;;		_I2C_2_Master_Idle
  7925 ;; This function is called by:
  7926 ;;		_color_read_Clear
  7927 ;;		_color_read_Red
  7928 ;;		_color_read_Green
  7929 ;;		_color_read_Blue
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text39
  7934  00407E                     __ptext39:
  7935                           	callstack 0
  7936  00407E                     _I2C_2_Master_Read:
  7937                           	callstack 25
  7938                           
  7939                           ; BSR set to: 14
  7940                           ;incstack = 0
  7941                           ;I2C_2_Master_Read@ack stored from wreg
  7942  00407E  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7943  004080                     
  7944                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7945  004080  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7946  004084                     
  7947                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7948  004084  010E               	movlb	14	; () banked
  7949  004086  87DA               	bsf	218,3,b	;volatile
  7950                           
  7951                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7952  004088  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7953  00408C                     
  7954                           ;i2c.c: 57:   tmp = SSP2BUF;
  7955  00408C  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7956                           
  7957                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7958  004090  EC59  F021         	call	_I2C_2_Master_Idle	;wreg free
  7959  004094                     
  7960                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7961  004094  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7962  004096  B4D8               	btfsc	status,2,c
  7963  004098  EF50  F020         	goto	u2941
  7964  00409C  EF54  F020         	goto	u2940
  7965  0040A0                     u2941:
  7966  0040A0  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7967  0040A2  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7968  0040A4  EF55  F020         	goto	u2958
  7969  0040A8                     u2940:
  7970  0040A8  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7971  0040AA                     u2958:
  7972  0040AA  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7973  0040AC  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7974  0040AE  010E               	movlb	14	; () banked
  7975  0040B0  51DA               	movf	218,w,b	;volatile
  7976  0040B2  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7977  0040B4  0BDF               	andlw	-33
  7978  0040B6  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7979  0040B8  6FDA               	movwf	218,b	;volatile
  7980  0040BA                     
  7981                           ; BSR set to: 14
  7982                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7983  0040BA  89DA               	bsf	218,4,b	;volatile
  7984  0040BC                     
  7985                           ; BSR set to: 14
  7986                           ;i2c.c: 61:   return tmp;
  7987  0040BC  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7988  0040BE                     
  7989                           ; BSR set to: 14
  7990  0040BE  0012               	return		;funcret
  7991  0040C0                     __end_of_I2C_2_Master_Read:
  7992                           	callstack 0
  7993                           
  7994 ;; *************** function _I2C_2_Master_Idle *****************
  7995 ;; Defined at:
  7996 ;;		line 22 in file "i2c.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;		None
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;		None
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      void 
  8003 ;; Registers used:
  8004 ;;		wreg, status,2, status,0
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8014 ;;Total ram usage:        1 bytes
  8015 ;; Hardware stack levels used: 1
  8016 ;; Hardware stack levels required when called: 2
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_I2C_2_Master_Start
  8021 ;;		_I2C_2_Master_RepStart
  8022 ;;		_I2C_2_Master_Stop
  8023 ;;		_I2C_2_Master_Write
  8024 ;;		_I2C_2_Master_Read
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text40
  8029  0042B2                     __ptext40:
  8030                           	callstack 0
  8031  0042B2                     _I2C_2_Master_Idle:
  8032                           	callstack 25
  8033  0042B2                     l131:
  8034  0042B2  010E               	movlb	14	; () banked
  8035  0042B4  B5D8               	btfsc	216,2,b	;volatile
  8036  0042B6  EF5F  F021         	goto	u2701
  8037  0042BA  EF61  F021         	goto	u2700
  8038  0042BE                     u2701:
  8039  0042BE  EF59  F021         	goto	l131
  8040  0042C2                     u2700:
  8041  0042C2                     
  8042                           ; BSR set to: 14
  8043  0042C2  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8044  0042C6  0E1F               	movlw	31
  8045  0042C8  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  8046  0042CA  A4D8               	btfss	status,2,c
  8047  0042CC  EF6A  F021         	goto	u2711
  8048  0042D0  EF6C  F021         	goto	u2710
  8049  0042D4                     u2711:
  8050  0042D4  EF59  F021         	goto	l131
  8051  0042D8                     u2710:
  8052  0042D8                     
  8053                           ; BSR set to: 14
  8054  0042D8  0012               	return		;funcret
  8055  0042DA                     __end_of_I2C_2_Master_Idle:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function ___fltol *****************
  8059 ;; Defined at:
  8060 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  f1              4   62[COMRAM] void 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  exp1            1   71[COMRAM] unsigned char 
  8065 ;;  sign1           1   70[COMRAM] unsigned char 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  4   62[COMRAM] long 
  8068 ;; Registers used:
  8069 ;;		wreg, status,2, status,0
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;Total ram usage:       10 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 2
  8082 ;; This function calls:
  8083 ;;		Nothing
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;;		_determine_color1
  8087 ;;		_determine_color2
  8088 ;;		_determine_color3
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text41
  8093  0037CA                     __ptext41:
  8094                           	callstack 0
  8095  0037CA                     ___fltol:
  8096                           	callstack 28
  8097  0037CA  3441               	rlcf	(___fltol@f1+2)^0,w,c
  8098  0037CC  3442               	rlcf	(___fltol@f1+3)^0,w,c
  8099  0037CE  6E48               	movwf	___fltol@exp1^0,c
  8100  0037D0  5048               	movf	___fltol@exp1^0,w,c
  8101  0037D2  A4D8               	btfss	status,2,c
  8102  0037D4  EFEE  F01B         	goto	u4461
  8103  0037D8  EFF0  F01B         	goto	u4460
  8104  0037DC                     u4461:
  8105  0037DC  EFFA  F01B         	goto	l4310
  8106  0037E0                     u4460:
  8107  0037E0                     l4306:
  8108  0037E0  0E00               	movlw	0
  8109  0037E2  6E3F               	movwf	?___fltol^0,c
  8110  0037E4  0E00               	movlw	0
  8111  0037E6  6E40               	movwf	(?___fltol+1)^0,c
  8112  0037E8  0E00               	movlw	0
  8113  0037EA  6E41               	movwf	(?___fltol+2)^0,c
  8114  0037EC  0E00               	movlw	0
  8115  0037EE  6E42               	movwf	(?___fltol+3)^0,c
  8116  0037F0  EF67  F01C         	goto	l747
  8117  0037F4                     l4310:
  8118  0037F4  C03F  F043         	movff	___fltol@f1,??___fltol
  8119  0037F8  C040  F044         	movff	___fltol@f1+1,??___fltol+1
  8120  0037FC  C041  F045         	movff	___fltol@f1+2,??___fltol+2
  8121  003800  C042  F046         	movff	___fltol@f1+3,??___fltol+3
  8122  003804  0E20               	movlw	32
  8123  003806  EF0A  F01C         	goto	u4470
  8124  00380A                     u4475:
  8125  00380A  90D8               	bcf	status,0,c
  8126  00380C  3246               	rrcf	(??___fltol+3)^0,f,c
  8127  00380E  3245               	rrcf	(??___fltol+2)^0,f,c
  8128  003810  3244               	rrcf	(??___fltol+1)^0,f,c
  8129  003812  3243               	rrcf	??___fltol^0,f,c
  8130  003814                     u4470:
  8131  003814  2EE8               	decfsz	wreg,f,c
  8132  003816  EF05  F01C         	goto	u4475
  8133  00381A  5043               	movf	??___fltol^0,w,c
  8134  00381C  6E47               	movwf	___fltol@sign1^0,c
  8135  00381E  8E41               	bsf	(___fltol@f1+2)^0,7,c
  8136  003820  0EFF               	movlw	255
  8137  003822  163F               	andwf	___fltol@f1^0,f,c
  8138  003824  0EFF               	movlw	255
  8139  003826  1640               	andwf	(___fltol@f1+1)^0,f,c
  8140  003828  0EFF               	movlw	255
  8141  00382A  1641               	andwf	(___fltol@f1+2)^0,f,c
  8142  00382C  0E00               	movlw	0
  8143  00382E  1642               	andwf	(___fltol@f1+3)^0,f,c
  8144  003830  0E96               	movlw	150
  8145  003832  5E48               	subwf	___fltol@exp1^0,f,c
  8146  003834  BE48               	btfsc	___fltol@exp1^0,7,c
  8147  003836  EF21  F01C         	goto	u4480
  8148  00383A  EF1F  F01C         	goto	u4481
  8149  00383E                     u4481:
  8150  00383E  EF37  F01C         	goto	l4330
  8151  003842                     u4480:
  8152  003842  5048               	movf	___fltol@exp1^0,w,c
  8153  003844  0A80               	xorlw	128
  8154  003846  0F97               	addlw	151
  8155  003848  B0D8               	btfsc	status,0,c
  8156  00384A  EF29  F01C         	goto	u4491
  8157  00384E  EF2B  F01C         	goto	u4490
  8158  003852                     u4491:
  8159  003852  EF2D  F01C         	goto	l4326
  8160  003856                     u4490:
  8161  003856  EFF0  F01B         	goto	l4306
  8162  00385A                     l4326:
  8163  00385A  90D8               	bcf	status,0,c
  8164  00385C  3242               	rrcf	(___fltol@f1+3)^0,f,c
  8165  00385E  3241               	rrcf	(___fltol@f1+2)^0,f,c
  8166  003860  3240               	rrcf	(___fltol@f1+1)^0,f,c
  8167  003862  323F               	rrcf	___fltol@f1^0,f,c
  8168  003864  3E48               	incfsz	___fltol@exp1^0,f,c
  8169  003866  EF2D  F01C         	goto	l4326
  8170  00386A  EF4F  F01C         	goto	l4340
  8171  00386E                     l4330:
  8172  00386E  0E1F               	movlw	31
  8173  003870  6448               	cpfsgt	___fltol@exp1^0,c
  8174  003872  EF3D  F01C         	goto	u4501
  8175  003876  EF3F  F01C         	goto	u4500
  8176  00387A                     u4501:
  8177  00387A  EF47  F01C         	goto	l4338
  8178  00387E                     u4500:
  8179  00387E  EFF0  F01B         	goto	l4306
  8180  003882                     l4336:
  8181  003882  90D8               	bcf	status,0,c
  8182  003884  363F               	rlcf	___fltol@f1^0,f,c
  8183  003886  3640               	rlcf	(___fltol@f1+1)^0,f,c
  8184  003888  3641               	rlcf	(___fltol@f1+2)^0,f,c
  8185  00388A  3642               	rlcf	(___fltol@f1+3)^0,f,c
  8186  00388C  0648               	decf	___fltol@exp1^0,f,c
  8187  00388E                     l4338:
  8188  00388E  5048               	movf	___fltol@exp1^0,w,c
  8189  003890  A4D8               	btfss	status,2,c
  8190  003892  EF4D  F01C         	goto	u4511
  8191  003896  EF4F  F01C         	goto	u4510
  8192  00389A                     u4511:
  8193  00389A  EF41  F01C         	goto	l4336
  8194  00389E                     u4510:
  8195  00389E                     l4340:
  8196  00389E  5047               	movf	___fltol@sign1^0,w,c
  8197  0038A0  B4D8               	btfsc	status,2,c
  8198  0038A2  EF55  F01C         	goto	u4521
  8199  0038A6  EF57  F01C         	goto	u4520
  8200  0038AA                     u4521:
  8201  0038AA  EF5F  F01C         	goto	l4344
  8202  0038AE                     u4520:
  8203  0038AE  1E42               	comf	(___fltol@f1+3)^0,f,c
  8204  0038B0  1E41               	comf	(___fltol@f1+2)^0,f,c
  8205  0038B2  1E40               	comf	(___fltol@f1+1)^0,f,c
  8206  0038B4  6C3F               	negf	___fltol@f1^0,c
  8207  0038B6  0E00               	movlw	0
  8208  0038B8  2240               	addwfc	(___fltol@f1+1)^0,f,c
  8209  0038BA  2241               	addwfc	(___fltol@f1+2)^0,f,c
  8210  0038BC  2242               	addwfc	(___fltol@f1+3)^0,f,c
  8211  0038BE                     l4344:
  8212  0038BE  C03F  F03F         	movff	___fltol@f1,?___fltol
  8213  0038C2  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  8214  0038C6  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  8215  0038CA  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  8216  0038CE                     l747:
  8217  0038CE  0012               	return		;funcret
  8218  0038D0                     __end_of___fltol:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function ___flsub *****************
  8222 ;; Defined at:
  8223 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  b               4   54[COMRAM] long 
  8226 ;;  a               4   58[COMRAM] long 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  4   54[COMRAM] long 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8238 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;Total ram usage:        8 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 3
  8245 ;; This function calls:
  8246 ;;		___fladd
  8247 ;; This function is called by:
  8248 ;;		_main
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text42
  8253  003FB2                     __ptext42:
  8254                           	callstack 0
  8255  003FB2                     ___flsub:
  8256                           	callstack 27
  8257  003FB2  0E00               	movlw	0
  8258  003FB4  1A3B               	xorwf	___flsub@a^0,f,c
  8259  003FB6  0E00               	movlw	0
  8260  003FB8  1A3C               	xorwf	(___flsub@a+1)^0,f,c
  8261  003FBA  0E00               	movlw	0
  8262  003FBC  1A3D               	xorwf	(___flsub@a+2)^0,f,c
  8263  003FBE  0E80               	movlw	128
  8264  003FC0  1A3E               	xorwf	(___flsub@a+3)^0,f,c
  8265  003FC2  C037  F005         	movff	___flsub@b,___fladd@b
  8266  003FC6  C038  F006         	movff	___flsub@b+1,___fladd@b+1
  8267  003FCA  C039  F007         	movff	___flsub@b+2,___fladd@b+2
  8268  003FCE  C03A  F008         	movff	___flsub@b+3,___fladd@b+3
  8269  003FD2  C03B  F009         	movff	___flsub@a,___fladd@a
  8270  003FD6  C03C  F00A         	movff	___flsub@a+1,___fladd@a+1
  8271  003FDA  C03D  F00B         	movff	___flsub@a+2,___fladd@a+2
  8272  003FDE  C03E  F00C         	movff	___flsub@a+3,___fladd@a+3
  8273  003FE2  EC4A  F00F         	call	___fladd	;wreg free
  8274  003FE6  C005  F037         	movff	?___fladd,?___flsub
  8275  003FEA  C006  F038         	movff	?___fladd+1,?___flsub+1
  8276  003FEE  C007  F039         	movff	?___fladd+2,?___flsub+2
  8277  003FF2  C008  F03A         	movff	?___fladd+3,?___flsub+3
  8278  003FF6  0012               	return		;funcret
  8279  003FF8                     __end_of___flsub:
  8280                           	callstack 0
  8281                           
  8282 ;; *************** function ___fladd *****************
  8283 ;; Defined at:
  8284 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  b               4    4[COMRAM] long 
  8287 ;;  a               4    8[COMRAM] long 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  grs             1   19[COMRAM] unsigned char 
  8290 ;;  bexp            1   18[COMRAM] unsigned char 
  8291 ;;  aexp            1   17[COMRAM] unsigned char 
  8292 ;;  signs           1   16[COMRAM] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  4    4[COMRAM] unsigned char 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8305 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;Total ram usage:       16 bytes
  8307 ;; Hardware stack levels used: 1
  8308 ;; Hardware stack levels required when called: 2
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		___flsub
  8313 ;;		_sqrtf
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text43
  8318  001E94                     __ptext43:
  8319                           	callstack 0
  8320  001E94                     ___fladd:
  8321                           	callstack 27
  8322  001E94  5008               	movf	(___fladd@b+3)^0,w,c
  8323  001E96  0B80               	andlw	128
  8324  001E98  6E11               	movwf	___fladd@signs^0,c
  8325  001E9A  5008               	movf	(___fladd@b+3)^0,w,c
  8326  001E9C  2408               	addwf	(___fladd@b+3)^0,w,c
  8327  001E9E  6E13               	movwf	___fladd@bexp^0,c
  8328  001EA0  AE07               	btfss	(___fladd@b+2)^0,7,c
  8329  001EA2  EF55  F00F         	goto	u3221
  8330  001EA6  EF57  F00F         	goto	u3220
  8331  001EAA                     u3221:
  8332  001EAA  EF58  F00F         	goto	l3590
  8333  001EAE                     u3220:
  8334  001EAE  8013               	bsf	___fladd@bexp^0,0,c
  8335  001EB0                     l3590:
  8336  001EB0  5013               	movf	___fladd@bexp^0,w,c
  8337  001EB2  B4D8               	btfsc	status,2,c
  8338  001EB4  EF5E  F00F         	goto	u3231
  8339  001EB8  EF60  F00F         	goto	u3230
  8340  001EBC                     u3231:
  8341  001EBC  EF75  F00F         	goto	l3600
  8342  001EC0                     u3230:
  8343  001EC0  2813               	incf	___fladd@bexp^0,w,c
  8344  001EC2  A4D8               	btfss	status,2,c
  8345  001EC4  EF66  F00F         	goto	u3241
  8346  001EC8  EF68  F00F         	goto	u3240
  8347  001ECC                     u3241:
  8348  001ECC  EF70  F00F         	goto	l3596
  8349  001ED0                     u3240:
  8350  001ED0  0E00               	movlw	0
  8351  001ED2  6E05               	movwf	___fladd@b^0,c
  8352  001ED4  0E00               	movlw	0
  8353  001ED6  6E06               	movwf	(___fladd@b+1)^0,c
  8354  001ED8  0E00               	movlw	0
  8355  001EDA  6E07               	movwf	(___fladd@b+2)^0,c
  8356  001EDC  0E00               	movlw	0
  8357  001EDE  6E08               	movwf	(___fladd@b+3)^0,c
  8358  001EE0                     l3596:
  8359  001EE0  8E07               	bsf	(___fladd@b+2)^0,7,c
  8360  001EE2  0E00               	movlw	0
  8361  001EE4  6E08               	movwf	(___fladd@b+3)^0,c
  8362  001EE6  EF7D  F00F         	goto	l3602
  8363  001EEA                     l3600:
  8364  001EEA  0E00               	movlw	0
  8365  001EEC  6E05               	movwf	___fladd@b^0,c
  8366  001EEE  0E00               	movlw	0
  8367  001EF0  6E06               	movwf	(___fladd@b+1)^0,c
  8368  001EF2  0E00               	movlw	0
  8369  001EF4  6E07               	movwf	(___fladd@b+2)^0,c
  8370  001EF6  0E00               	movlw	0
  8371  001EF8  6E08               	movwf	(___fladd@b+3)^0,c
  8372  001EFA                     l3602:
  8373  001EFA  500C               	movf	(___fladd@a+3)^0,w,c
  8374  001EFC  0B80               	andlw	128
  8375  001EFE  6E12               	movwf	___fladd@aexp^0,c
  8376  001F00  5011               	movf	___fladd@signs^0,w,c
  8377  001F02  1812               	xorwf	___fladd@aexp^0,w,c
  8378  001F04  B4D8               	btfsc	status,2,c
  8379  001F06  EF87  F00F         	goto	u3251
  8380  001F0A  EF89  F00F         	goto	u3250
  8381  001F0E                     u3251:
  8382  001F0E  EF8A  F00F         	goto	l3608
  8383  001F12                     u3250:
  8384  001F12  8C11               	bsf	___fladd@signs^0,6,c
  8385  001F14                     l3608:
  8386  001F14  500C               	movf	(___fladd@a+3)^0,w,c
  8387  001F16  240C               	addwf	(___fladd@a+3)^0,w,c
  8388  001F18  6E12               	movwf	___fladd@aexp^0,c
  8389  001F1A  AE0B               	btfss	(___fladd@a+2)^0,7,c
  8390  001F1C  EF92  F00F         	goto	u3261
  8391  001F20  EF94  F00F         	goto	u3260
  8392  001F24                     u3261:
  8393  001F24  EF95  F00F         	goto	l3614
  8394  001F28                     u3260:
  8395  001F28  8012               	bsf	___fladd@aexp^0,0,c
  8396  001F2A                     l3614:
  8397  001F2A  5012               	movf	___fladd@aexp^0,w,c
  8398  001F2C  B4D8               	btfsc	status,2,c
  8399  001F2E  EF9B  F00F         	goto	u3271
  8400  001F32  EF9D  F00F         	goto	u3270
  8401  001F36                     u3271:
  8402  001F36  EFB2  F00F         	goto	l3624
  8403  001F3A                     u3270:
  8404  001F3A  2812               	incf	___fladd@aexp^0,w,c
  8405  001F3C  A4D8               	btfss	status,2,c
  8406  001F3E  EFA3  F00F         	goto	u3281
  8407  001F42  EFA5  F00F         	goto	u3280
  8408  001F46                     u3281:
  8409  001F46  EFAD  F00F         	goto	l3620
  8410  001F4A                     u3280:
  8411  001F4A  0E00               	movlw	0
  8412  001F4C  6E09               	movwf	___fladd@a^0,c
  8413  001F4E  0E00               	movlw	0
  8414  001F50  6E0A               	movwf	(___fladd@a+1)^0,c
  8415  001F52  0E00               	movlw	0
  8416  001F54  6E0B               	movwf	(___fladd@a+2)^0,c
  8417  001F56  0E00               	movlw	0
  8418  001F58  6E0C               	movwf	(___fladd@a+3)^0,c
  8419  001F5A                     l3620:
  8420  001F5A  8E0B               	bsf	(___fladd@a+2)^0,7,c
  8421  001F5C  0E00               	movlw	0
  8422  001F5E  6E0C               	movwf	(___fladd@a+3)^0,c
  8423  001F60  EFBA  F00F         	goto	l3626
  8424  001F64                     l3624:
  8425  001F64  0E00               	movlw	0
  8426  001F66  6E09               	movwf	___fladd@a^0,c
  8427  001F68  0E00               	movlw	0
  8428  001F6A  6E0A               	movwf	(___fladd@a+1)^0,c
  8429  001F6C  0E00               	movlw	0
  8430  001F6E  6E0B               	movwf	(___fladd@a+2)^0,c
  8431  001F70  0E00               	movlw	0
  8432  001F72  6E0C               	movwf	(___fladd@a+3)^0,c
  8433  001F74                     l3626:
  8434  001F74  5013               	movf	___fladd@bexp^0,w,c
  8435  001F76  5C12               	subwf	___fladd@aexp^0,w,c
  8436  001F78  B0D8               	btfsc	status,0,c
  8437  001F7A  EFC1  F00F         	goto	u3291
  8438  001F7E  EFC3  F00F         	goto	u3290
  8439  001F82                     u3291:
  8440  001F82  EFEA  F00F         	goto	l3662
  8441  001F86                     u3290:
  8442  001F86  AC11               	btfss	___fladd@signs^0,6,c
  8443  001F88  EFC8  F00F         	goto	u3301
  8444  001F8C  EFCA  F00F         	goto	u3300
  8445  001F90                     u3301:
  8446  001F90  EFCC  F00F         	goto	l3632
  8447  001F94                     u3300:
  8448  001F94  0E80               	movlw	128
  8449  001F96  1A11               	xorwf	___fladd@signs^0,f,c
  8450  001F98                     l3632:
  8451  001F98  C013  F014         	movff	___fladd@bexp,___fladd@grs
  8452  001F9C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8453  001FA0  C014  F012         	movff	___fladd@grs,___fladd@aexp
  8454  001FA4  C005  F014         	movff	___fladd@b,___fladd@grs
  8455  001FA8  C009  F005         	movff	___fladd@a,___fladd@b
  8456  001FAC  C014  F009         	movff	___fladd@grs,___fladd@a
  8457  001FB0  C006  F014         	movff	___fladd@b+1,___fladd@grs
  8458  001FB4  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  8459  001FB8  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  8460  001FBC  C007  F014         	movff	___fladd@b+2,___fladd@grs
  8461  001FC0  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  8462  001FC4  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  8463  001FC8  C008  F014         	movff	___fladd@b+3,___fladd@grs
  8464  001FCC  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  8465  001FD0  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  8466  001FD4                     l3662:
  8467  001FD4  0E00               	movlw	0
  8468  001FD6  6E14               	movwf	___fladd@grs^0,c
  8469  001FD8  5013               	movf	___fladd@bexp^0,w,c
  8470  001FDA  C012  F00D         	movff	___fladd@aexp,??___fladd
  8471  001FDE  6A0E               	clrf	(??___fladd+1)^0,c
  8472  001FE0  5E0D               	subwf	??___fladd^0,f,c
  8473  001FE2  0E00               	movlw	0
  8474  001FE4  5A0E               	subwfb	(??___fladd+1)^0,f,c
  8475  001FE6  BE0E               	btfsc	(??___fladd+1)^0,7,c
  8476  001FE8  EFFF  F00F         	goto	u3311
  8477  001FEC  500E               	movf	(??___fladd+1)^0,w,c
  8478  001FEE  E109               	bnz	u3310
  8479  001FF0  0E1A               	movlw	26
  8480  001FF2  5C0D               	subwf	??___fladd^0,w,c
  8481  001FF4  A0D8               	btfss	status,0,c
  8482  001FF6  EFFF  F00F         	goto	u3311
  8483  001FFA  EF01  F010         	goto	u3310
  8484  001FFE                     u3311:
  8485  001FFE  EF38  F010         	goto	l979
  8486  002002                     u3310:
  8487  002002  5005               	movf	___fladd@b^0,w,c
  8488  002004  1006               	iorwf	(___fladd@b+1)^0,w,c
  8489  002006  1007               	iorwf	(___fladd@b+2)^0,w,c
  8490  002008  1008               	iorwf	(___fladd@b+3)^0,w,c
  8491  00200A  A4D8               	btfss	status,2,c
  8492  00200C  EF0A  F010         	goto	u3321
  8493  002010  EF0D  F010         	goto	u3320
  8494  002014                     u3321:
  8495  002014  0E01               	movlw	1
  8496  002016  EF0E  F010         	goto	u3330
  8497  00201A                     u3320:
  8498  00201A  0E00               	movlw	0
  8499  00201C                     u3330:
  8500  00201C  6E14               	movwf	___fladd@grs^0,c
  8501  00201E  0E00               	movlw	0
  8502  002020  6E05               	movwf	___fladd@b^0,c
  8503  002022  0E00               	movlw	0
  8504  002024  6E06               	movwf	(___fladd@b+1)^0,c
  8505  002026  0E00               	movlw	0
  8506  002028  6E07               	movwf	(___fladd@b+2)^0,c
  8507  00202A  0E00               	movlw	0
  8508  00202C  6E08               	movwf	(___fladd@b+3)^0,c
  8509  00202E  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8510  002032  EF41  F010         	goto	l978
  8511  002036                     l980:
  8512  002036  A014               	btfss	___fladd@grs^0,0,c
  8513  002038  EF20  F010         	goto	u3341
  8514  00203C  EF22  F010         	goto	u3340
  8515  002040                     u3341:
  8516  002040  EF28  F010         	goto	l3674
  8517  002044                     u3340:
  8518  002044  90D8               	bcf	status,0,c
  8519  002046  3014               	rrcf	___fladd@grs^0,w,c
  8520  002048  0901               	iorlw	1
  8521  00204A  6E14               	movwf	___fladd@grs^0,c
  8522  00204C  EF2A  F010         	goto	l3676
  8523  002050                     l3674:
  8524  002050  90D8               	bcf	status,0,c
  8525  002052  3214               	rrcf	___fladd@grs^0,f,c
  8526  002054                     l3676:
  8527  002054  A005               	btfss	___fladd@b^0,0,c
  8528  002056  EF2F  F010         	goto	u3351
  8529  00205A  EF31  F010         	goto	u3350
  8530  00205E                     u3351:
  8531  00205E  EF32  F010         	goto	l3680
  8532  002062                     u3350:
  8533  002062  8E14               	bsf	___fladd@grs^0,7,c
  8534  002064                     l3680:
  8535  002064  3408               	rlcf	(___fladd@b+3)^0,w,c
  8536  002066  3208               	rrcf	(___fladd@b+3)^0,f,c
  8537  002068  3207               	rrcf	(___fladd@b+2)^0,f,c
  8538  00206A  3206               	rrcf	(___fladd@b+1)^0,f,c
  8539  00206C  3205               	rrcf	___fladd@b^0,f,c
  8540  00206E  2A13               	incf	___fladd@bexp^0,f,c
  8541  002070                     l979:
  8542  002070  5012               	movf	___fladd@aexp^0,w,c
  8543  002072  5C13               	subwf	___fladd@bexp^0,w,c
  8544  002074  A0D8               	btfss	status,0,c
  8545  002076  EF3F  F010         	goto	u3361
  8546  00207A  EF41  F010         	goto	u3360
  8547  00207E                     u3361:
  8548  00207E  EF1B  F010         	goto	l980
  8549  002082                     u3360:
  8550  002082                     l978:
  8551  002082  BC11               	btfsc	___fladd@signs^0,6,c
  8552  002084  EF46  F010         	goto	u3371
  8553  002088  EF48  F010         	goto	u3370
  8554  00208C                     u3371:
  8555  00208C  EF88  F010         	goto	l3708
  8556  002090                     u3370:
  8557  002090  5013               	movf	___fladd@bexp^0,w,c
  8558  002092  A4D8               	btfss	status,2,c
  8559  002094  EF4E  F010         	goto	u3381
  8560  002098  EF50  F010         	goto	u3380
  8561  00209C                     u3381:
  8562  00209C  EF5A  F010         	goto	l3690
  8563  0020A0                     u3380:
  8564  0020A0  0E00               	movlw	0
  8565  0020A2  6E05               	movwf	?___fladd^0,c
  8566  0020A4  0E00               	movlw	0
  8567  0020A6  6E06               	movwf	(?___fladd+1)^0,c
  8568  0020A8  0E00               	movlw	0
  8569  0020AA  6E07               	movwf	(?___fladd+2)^0,c
  8570  0020AC  0E00               	movlw	0
  8571  0020AE  6E08               	movwf	(?___fladd+3)^0,c
  8572  0020B0  EFA9  F011         	goto	l987
  8573  0020B4                     l3690:
  8574  0020B4  5009               	movf	___fladd@a^0,w,c
  8575  0020B6  2605               	addwf	___fladd@b^0,f,c
  8576  0020B8  500A               	movf	(___fladd@a+1)^0,w,c
  8577  0020BA  2206               	addwfc	(___fladd@b+1)^0,f,c
  8578  0020BC  500B               	movf	(___fladd@a+2)^0,w,c
  8579  0020BE  2207               	addwfc	(___fladd@b+2)^0,f,c
  8580  0020C0  500C               	movf	(___fladd@a+3)^0,w,c
  8581  0020C2  2208               	addwfc	(___fladd@b+3)^0,f,c
  8582  0020C4  A008               	btfss	(___fladd@b+3)^0,0,c
  8583  0020C6  EF67  F010         	goto	u3391
  8584  0020CA  EF69  F010         	goto	u3390
  8585  0020CE                     u3391:
  8586  0020CE  EF15  F011         	goto	l3744
  8587  0020D2                     u3390:
  8588  0020D2  A014               	btfss	___fladd@grs^0,0,c
  8589  0020D4  EF6E  F010         	goto	u3401
  8590  0020D8  EF70  F010         	goto	u3400
  8591  0020DC                     u3401:
  8592  0020DC  EF76  F010         	goto	l3698
  8593  0020E0                     u3400:
  8594  0020E0  90D8               	bcf	status,0,c
  8595  0020E2  3014               	rrcf	___fladd@grs^0,w,c
  8596  0020E4  0901               	iorlw	1
  8597  0020E6  6E14               	movwf	___fladd@grs^0,c
  8598  0020E8  EF78  F010         	goto	l3700
  8599  0020EC                     l3698:
  8600  0020EC  90D8               	bcf	status,0,c
  8601  0020EE  3214               	rrcf	___fladd@grs^0,f,c
  8602  0020F0                     l3700:
  8603  0020F0  A005               	btfss	___fladd@b^0,0,c
  8604  0020F2  EF7D  F010         	goto	u3411
  8605  0020F6  EF7F  F010         	goto	u3410
  8606  0020FA                     u3411:
  8607  0020FA  EF80  F010         	goto	l3704
  8608  0020FE                     u3410:
  8609  0020FE  8E14               	bsf	___fladd@grs^0,7,c
  8610  002100                     l3704:
  8611  002100  3408               	rlcf	(___fladd@b+3)^0,w,c
  8612  002102  3208               	rrcf	(___fladd@b+3)^0,f,c
  8613  002104  3207               	rrcf	(___fladd@b+2)^0,f,c
  8614  002106  3206               	rrcf	(___fladd@b+1)^0,f,c
  8615  002108  3205               	rrcf	___fladd@b^0,f,c
  8616  00210A  2A13               	incf	___fladd@bexp^0,f,c
  8617  00210C  EF15  F011         	goto	l3744
  8618  002110                     l3708:
  8619  002110  5009               	movf	___fladd@a^0,w,c
  8620  002112  5C05               	subwf	___fladd@b^0,w,c
  8621  002114  500A               	movf	(___fladd@a+1)^0,w,c
  8622  002116  5806               	subwfb	(___fladd@b+1)^0,w,c
  8623  002118  500B               	movf	(___fladd@a+2)^0,w,c
  8624  00211A  5807               	subwfb	(___fladd@b+2)^0,w,c
  8625  00211C  5008               	movf	(___fladd@b+3)^0,w,c
  8626  00211E  0A80               	xorlw	128
  8627  002120  6E0D               	movwf	??___fladd^0,c
  8628  002122  500C               	movf	(___fladd@a+3)^0,w,c
  8629  002124  0A80               	xorlw	128
  8630  002126  580D               	subwfb	??___fladd^0,w,c
  8631  002128  B0D8               	btfsc	status,0,c
  8632  00212A  EF99  F010         	goto	u3421
  8633  00212E  EF9B  F010         	goto	u3420
  8634  002132                     u3421:
  8635  002132  EFC6  F010         	goto	l3718
  8636  002136                     u3420:
  8637  002136  5005               	movf	___fladd@b^0,w,c
  8638  002138  5C09               	subwf	___fladd@a^0,w,c
  8639  00213A  6E0D               	movwf	??___fladd^0,c
  8640  00213C  5006               	movf	(___fladd@b+1)^0,w,c
  8641  00213E  580A               	subwfb	(___fladd@a+1)^0,w,c
  8642  002140  6E0E               	movwf	(??___fladd+1)^0,c
  8643  002142  5007               	movf	(___fladd@b+2)^0,w,c
  8644  002144  580B               	subwfb	(___fladd@a+2)^0,w,c
  8645  002146  6E0F               	movwf	(??___fladd+2)^0,c
  8646  002148  5008               	movf	(___fladd@b+3)^0,w,c
  8647  00214A  580C               	subwfb	(___fladd@a+3)^0,w,c
  8648  00214C  6E10               	movwf	(??___fladd+3)^0,c
  8649  00214E  0EFF               	movlw	255
  8650  002150  240D               	addwf	??___fladd^0,w,c
  8651  002152  6E05               	movwf	___fladd@b^0,c
  8652  002154  0EFF               	movlw	255
  8653  002156  200E               	addwfc	(??___fladd+1)^0,w,c
  8654  002158  6E06               	movwf	(___fladd@b+1)^0,c
  8655  00215A  0EFF               	movlw	255
  8656  00215C  200F               	addwfc	(??___fladd+2)^0,w,c
  8657  00215E  6E07               	movwf	(___fladd@b+2)^0,c
  8658  002160  0EFF               	movlw	255
  8659  002162  2010               	addwfc	(??___fladd+3)^0,w,c
  8660  002164  6E08               	movwf	(___fladd@b+3)^0,c
  8661  002166  0E80               	movlw	128
  8662  002168  1A11               	xorwf	___fladd@signs^0,f,c
  8663  00216A  6C14               	negf	___fladd@grs^0,c
  8664  00216C  5014               	movf	___fladd@grs^0,w,c
  8665  00216E  A4D8               	btfss	status,2,c
  8666  002170  EFBC  F010         	goto	u3431
  8667  002174  EFBE  F010         	goto	u3430
  8668  002178                     u3431:
  8669  002178  EFCE  F010         	goto	l995
  8670  00217C                     u3430:
  8671  00217C  0E01               	movlw	1
  8672  00217E  2605               	addwf	___fladd@b^0,f,c
  8673  002180  0E00               	movlw	0
  8674  002182  2206               	addwfc	(___fladd@b+1)^0,f,c
  8675  002184  2207               	addwfc	(___fladd@b+2)^0,f,c
  8676  002186  2208               	addwfc	(___fladd@b+3)^0,f,c
  8677  002188  EFCE  F010         	goto	l995
  8678  00218C                     l3718:
  8679  00218C  5009               	movf	___fladd@a^0,w,c
  8680  00218E  5E05               	subwf	___fladd@b^0,f,c
  8681  002190  500A               	movf	(___fladd@a+1)^0,w,c
  8682  002192  5A06               	subwfb	(___fladd@b+1)^0,f,c
  8683  002194  500B               	movf	(___fladd@a+2)^0,w,c
  8684  002196  5A07               	subwfb	(___fladd@b+2)^0,f,c
  8685  002198  500C               	movf	(___fladd@a+3)^0,w,c
  8686  00219A  5A08               	subwfb	(___fladd@b+3)^0,f,c
  8687  00219C                     l995:
  8688  00219C  5005               	movf	___fladd@b^0,w,c
  8689  00219E  1006               	iorwf	(___fladd@b+1)^0,w,c
  8690  0021A0  1007               	iorwf	(___fladd@b+2)^0,w,c
  8691  0021A2  1008               	iorwf	(___fladd@b+3)^0,w,c
  8692  0021A4  A4D8               	btfss	status,2,c
  8693  0021A6  EFD7  F010         	goto	u3441
  8694  0021AA  EFD9  F010         	goto	u3440
  8695  0021AE                     u3441:
  8696  0021AE  EF0E  F011         	goto	l3742
  8697  0021B2                     u3440:
  8698  0021B2  5014               	movf	___fladd@grs^0,w,c
  8699  0021B4  A4D8               	btfss	status,2,c
  8700  0021B6  EFDF  F010         	goto	u3451
  8701  0021BA  EFE1  F010         	goto	u3450
  8702  0021BE                     u3451:
  8703  0021BE  EF0E  F011         	goto	l3742
  8704  0021C2                     u3450:
  8705  0021C2  0E00               	movlw	0
  8706  0021C4  6E05               	movwf	?___fladd^0,c
  8707  0021C6  0E00               	movlw	0
  8708  0021C8  6E06               	movwf	(?___fladd+1)^0,c
  8709  0021CA  0E00               	movlw	0
  8710  0021CC  6E07               	movwf	(?___fladd+2)^0,c
  8711  0021CE  0E00               	movlw	0
  8712  0021D0  6E08               	movwf	(?___fladd+3)^0,c
  8713  0021D2  EFA9  F011         	goto	l987
  8714  0021D6                     l3726:
  8715  0021D6  90D8               	bcf	status,0,c
  8716  0021D8  3605               	rlcf	___fladd@b^0,f,c
  8717  0021DA  3606               	rlcf	(___fladd@b+1)^0,f,c
  8718  0021DC  3607               	rlcf	(___fladd@b+2)^0,f,c
  8719  0021DE  3608               	rlcf	(___fladd@b+3)^0,f,c
  8720  0021E0  AE14               	btfss	___fladd@grs^0,7,c
  8721  0021E2  EFF5  F010         	goto	u3461
  8722  0021E6  EFF7  F010         	goto	u3460
  8723  0021EA                     u3461:
  8724  0021EA  EFF8  F010         	goto	l3732
  8725  0021EE                     u3460:
  8726  0021EE  8005               	bsf	___fladd@b^0,0,c
  8727  0021F0                     l3732:
  8728  0021F0  A014               	btfss	___fladd@grs^0,0,c
  8729  0021F2  EFFD  F010         	goto	u3471
  8730  0021F6  EFFF  F010         	goto	u3470
  8731  0021FA                     u3471:
  8732  0021FA  EF03  F011         	goto	l3736
  8733  0021FE                     u3470:
  8734  0021FE  80D8               	bsf	status,0,c
  8735  002200  3614               	rlcf	___fladd@grs^0,f,c
  8736  002202  EF05  F011         	goto	l3738
  8737  002206                     l3736:
  8738  002206  90D8               	bcf	status,0,c
  8739  002208  3614               	rlcf	___fladd@grs^0,f,c
  8740  00220A                     l3738:
  8741  00220A  5013               	movf	___fladd@bexp^0,w,c
  8742  00220C  B4D8               	btfsc	status,2,c
  8743  00220E  EF0B  F011         	goto	u3481
  8744  002212  EF0D  F011         	goto	u3480
  8745  002216                     u3481:
  8746  002216  EF0E  F011         	goto	l3742
  8747  00221A                     u3480:
  8748  00221A  0613               	decf	___fladd@bexp^0,f,c
  8749  00221C                     l3742:
  8750  00221C  AE07               	btfss	(___fladd@b+2)^0,7,c
  8751  00221E  EF13  F011         	goto	u3491
  8752  002222  EF15  F011         	goto	u3490
  8753  002226                     u3491:
  8754  002226  EFEB  F010         	goto	l3726
  8755  00222A                     u3490:
  8756  00222A                     l3744:
  8757  00222A  0E00               	movlw	0
  8758  00222C  6E12               	movwf	___fladd@aexp^0,c
  8759  00222E  AE14               	btfss	___fladd@grs^0,7,c
  8760  002230  EF1C  F011         	goto	u3501
  8761  002234  EF1E  F011         	goto	u3500
  8762  002238                     u3501:
  8763  002238  EF36  F011         	goto	l1004
  8764  00223C                     u3500:
  8765  00223C  C014  F00D         	movff	___fladd@grs,??___fladd
  8766  002240  0E7F               	movlw	127
  8767  002242  160D               	andwf	??___fladd^0,f,c
  8768  002244  B4D8               	btfsc	status,2,c
  8769  002246  EF27  F011         	goto	u3511
  8770  00224A  EF29  F011         	goto	u3510
  8771  00224E                     u3511:
  8772  00224E  EF2D  F011         	goto	l1005
  8773  002252                     u3510:
  8774  002252                     l3750:
  8775  002252  0E01               	movlw	1
  8776  002254  6E12               	movwf	___fladd@aexp^0,c
  8777  002256  EF36  F011         	goto	l1004
  8778  00225A                     l1005:
  8779  00225A  A005               	btfss	___fladd@b^0,0,c
  8780  00225C  EF32  F011         	goto	u3521
  8781  002260  EF34  F011         	goto	u3520
  8782  002264                     u3521:
  8783  002264  EF36  F011         	goto	l1004
  8784  002268                     u3520:
  8785  002268  EF29  F011         	goto	l3750
  8786  00226C                     l1004:
  8787  00226C  5012               	movf	___fladd@aexp^0,w,c
  8788  00226E  B4D8               	btfsc	status,2,c
  8789  002270  EF3C  F011         	goto	u3531
  8790  002274  EF3E  F011         	goto	u3530
  8791  002278                     u3531:
  8792  002278  EF69  F011         	goto	l3762
  8793  00227C                     u3530:
  8794  00227C  0E01               	movlw	1
  8795  00227E  2605               	addwf	___fladd@b^0,f,c
  8796  002280  0E00               	movlw	0
  8797  002282  2206               	addwfc	(___fladd@b+1)^0,f,c
  8798  002284  2207               	addwfc	(___fladd@b+2)^0,f,c
  8799  002286  2208               	addwfc	(___fladd@b+3)^0,f,c
  8800  002288  A008               	btfss	(___fladd@b+3)^0,0,c
  8801  00228A  EF49  F011         	goto	u3541
  8802  00228E  EF4B  F011         	goto	u3540
  8803  002292                     u3541:
  8804  002292  EF69  F011         	goto	l3762
  8805  002296                     u3540:
  8806  002296  C005  F00D         	movff	___fladd@b,??___fladd
  8807  00229A  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  8808  00229E  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  8809  0022A2  C008  F010         	movff	___fladd@b+3,??___fladd+3
  8810  0022A6  3410               	rlcf	(??___fladd+3)^0,w,c
  8811  0022A8  3210               	rrcf	(??___fladd+3)^0,f,c
  8812  0022AA  320F               	rrcf	(??___fladd+2)^0,f,c
  8813  0022AC  320E               	rrcf	(??___fladd+1)^0,f,c
  8814  0022AE  320D               	rrcf	??___fladd^0,f,c
  8815  0022B0  C00D  F005         	movff	??___fladd,___fladd@b
  8816  0022B4  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  8817  0022B8  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  8818  0022BC  C010  F008         	movff	??___fladd+3,___fladd@b+3
  8819  0022C0  2813               	incf	___fladd@bexp^0,w,c
  8820  0022C2  B4D8               	btfsc	status,2,c
  8821  0022C4  EF66  F011         	goto	u3551
  8822  0022C8  EF68  F011         	goto	u3550
  8823  0022CC                     u3551:
  8824  0022CC  EF69  F011         	goto	l3762
  8825  0022D0                     u3550:
  8826  0022D0  2A13               	incf	___fladd@bexp^0,f,c
  8827  0022D2                     l3762:
  8828  0022D2  2813               	incf	___fladd@bexp^0,w,c
  8829  0022D4  B4D8               	btfsc	status,2,c
  8830  0022D6  EF6F  F011         	goto	u3561
  8831  0022DA  EF71  F011         	goto	u3560
  8832  0022DE                     u3561:
  8833  0022DE  EF79  F011         	goto	l3766
  8834  0022E2                     u3560:
  8835  0022E2  5013               	movf	___fladd@bexp^0,w,c
  8836  0022E4  A4D8               	btfss	status,2,c
  8837  0022E6  EF77  F011         	goto	u3571
  8838  0022EA  EF79  F011         	goto	u3570
  8839  0022EE                     u3571:
  8840  0022EE  EF8B  F011         	goto	l3770
  8841  0022F2                     u3570:
  8842  0022F2                     l3766:
  8843  0022F2  0E00               	movlw	0
  8844  0022F4  6E05               	movwf	___fladd@b^0,c
  8845  0022F6  0E00               	movlw	0
  8846  0022F8  6E06               	movwf	(___fladd@b+1)^0,c
  8847  0022FA  0E00               	movlw	0
  8848  0022FC  6E07               	movwf	(___fladd@b+2)^0,c
  8849  0022FE  0E00               	movlw	0
  8850  002300  6E08               	movwf	(___fladd@b+3)^0,c
  8851  002302  5013               	movf	___fladd@bexp^0,w,c
  8852  002304  A4D8               	btfss	status,2,c
  8853  002306  EF87  F011         	goto	u3581
  8854  00230A  EF89  F011         	goto	u3580
  8855  00230E                     u3581:
  8856  00230E  EF8B  F011         	goto	l3770
  8857  002312                     u3580:
  8858  002312  0E00               	movlw	0
  8859  002314  6E11               	movwf	___fladd@signs^0,c
  8860  002316                     l3770:
  8861  002316  A013               	btfss	___fladd@bexp^0,0,c
  8862  002318  EF90  F011         	goto	u3591
  8863  00231C  EF92  F011         	goto	u3590
  8864  002320                     u3591:
  8865  002320  EF95  F011         	goto	l3774
  8866  002324                     u3590:
  8867  002324  8E07               	bsf	(___fladd@b+2)^0,7,c
  8868  002326  EF96  F011         	goto	l3776
  8869  00232A                     l3774:
  8870  00232A  9E07               	bcf	(___fladd@b+2)^0,7,c
  8871  00232C                     l3776:
  8872  00232C  90D8               	bcf	status,0,c
  8873  00232E  3013               	rrcf	___fladd@bexp^0,w,c
  8874  002330  6E08               	movwf	(___fladd@b+3)^0,c
  8875  002332  AE11               	btfss	___fladd@signs^0,7,c
  8876  002334  EF9E  F011         	goto	u3601
  8877  002338  EFA0  F011         	goto	u3600
  8878  00233C                     u3601:
  8879  00233C  EFA1  F011         	goto	l3782
  8880  002340                     u3600:
  8881  002340  8E08               	bsf	(___fladd@b+3)^0,7,c
  8882  002342                     l3782:
  8883  002342  C005  F005         	movff	___fladd@b,?___fladd
  8884  002346  C006  F006         	movff	___fladd@b+1,?___fladd+1
  8885  00234A  C007  F007         	movff	___fladd@b+2,?___fladd+2
  8886  00234E  C008  F008         	movff	___fladd@b+3,?___fladd+3
  8887  002352                     l987:
  8888  002352  0012               	return		;funcret
  8889  002354                     __end_of___fladd:
  8890                           	callstack 0
  8891                           
  8892 ;; *************** function ___flmul *****************
  8893 ;; Defined at:
  8894 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  b               4    4[COMRAM] unsigned char 
  8897 ;;  a               4    8[COMRAM] unsigned char 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  prod            4   23[COMRAM] struct .
  8900 ;;  grs             4   17[COMRAM] unsigned long 
  8901 ;;  temp            2   27[COMRAM] struct .
  8902 ;;  bexp            1   22[COMRAM] unsigned char 
  8903 ;;  aexp            1   21[COMRAM] unsigned char 
  8904 ;;  sign            1   16[COMRAM] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  4    4[COMRAM] unsigned char 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0, prodl, prodh
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8914 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;Total ram usage:       25 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 2
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_main
  8925 ;;		_sqrtf
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text44
  8930  002354                     __ptext44:
  8931                           	callstack 0
  8932  002354                     ___flmul:
  8933                           	callstack 28
  8934  002354  5008               	movf	(___flmul@b+3)^0,w,c
  8935  002356  0B80               	andlw	128
  8936  002358  6E11               	movwf	___flmul@sign^0,c
  8937  00235A  5008               	movf	(___flmul@b+3)^0,w,c
  8938  00235C  2408               	addwf	(___flmul@b+3)^0,w,c
  8939  00235E  6E17               	movwf	___flmul@bexp^0,c
  8940  002360  AE07               	btfss	(___flmul@b+2)^0,7,c
  8941  002362  EFB5  F011         	goto	u4271
  8942  002366  EFB7  F011         	goto	u4270
  8943  00236A                     u4271:
  8944  00236A  EFB8  F011         	goto	l4174
  8945  00236E                     u4270:
  8946  00236E  8017               	bsf	___flmul@bexp^0,0,c
  8947  002370                     l4174:
  8948  002370  5017               	movf	___flmul@bexp^0,w,c
  8949  002372  B4D8               	btfsc	status,2,c
  8950  002374  EFBE  F011         	goto	u4281
  8951  002378  EFC0  F011         	goto	u4280
  8952  00237C                     u4281:
  8953  00237C  EFD3  F011         	goto	l4182
  8954  002380                     u4280:
  8955  002380  2817               	incf	___flmul@bexp^0,w,c
  8956  002382  A4D8               	btfss	status,2,c
  8957  002384  EFC6  F011         	goto	u4291
  8958  002388  EFC8  F011         	goto	u4290
  8959  00238C                     u4291:
  8960  00238C  EFD0  F011         	goto	l4180
  8961  002390                     u4290:
  8962  002390  0E00               	movlw	0
  8963  002392  6E05               	movwf	___flmul@b^0,c
  8964  002394  0E00               	movlw	0
  8965  002396  6E06               	movwf	(___flmul@b+1)^0,c
  8966  002398  0E00               	movlw	0
  8967  00239A  6E07               	movwf	(___flmul@b+2)^0,c
  8968  00239C  0E00               	movlw	0
  8969  00239E  6E08               	movwf	(___flmul@b+3)^0,c
  8970  0023A0                     l4180:
  8971  0023A0  8E07               	bsf	(___flmul@b+2)^0,7,c
  8972  0023A2  EFDB  F011         	goto	l4184
  8973  0023A6                     l4182:
  8974  0023A6  0E00               	movlw	0
  8975  0023A8  6E05               	movwf	___flmul@b^0,c
  8976  0023AA  0E00               	movlw	0
  8977  0023AC  6E06               	movwf	(___flmul@b+1)^0,c
  8978  0023AE  0E00               	movlw	0
  8979  0023B0  6E07               	movwf	(___flmul@b+2)^0,c
  8980  0023B2  0E00               	movlw	0
  8981  0023B4  6E08               	movwf	(___flmul@b+3)^0,c
  8982  0023B6                     l4184:
  8983  0023B6  500C               	movf	(___flmul@a+3)^0,w,c
  8984  0023B8  0B80               	andlw	128
  8985  0023BA  1A11               	xorwf	___flmul@sign^0,f,c
  8986  0023BC  500C               	movf	(___flmul@a+3)^0,w,c
  8987  0023BE  240C               	addwf	(___flmul@a+3)^0,w,c
  8988  0023C0  6E16               	movwf	___flmul@aexp^0,c
  8989  0023C2  AE0B               	btfss	(___flmul@a+2)^0,7,c
  8990  0023C4  EFE6  F011         	goto	u4301
  8991  0023C8  EFE8  F011         	goto	u4300
  8992  0023CC                     u4301:
  8993  0023CC  EFE9  F011         	goto	l4192
  8994  0023D0                     u4300:
  8995  0023D0  8016               	bsf	___flmul@aexp^0,0,c
  8996  0023D2                     l4192:
  8997  0023D2  5016               	movf	___flmul@aexp^0,w,c
  8998  0023D4  B4D8               	btfsc	status,2,c
  8999  0023D6  EFEF  F011         	goto	u4311
  9000  0023DA  EFF1  F011         	goto	u4310
  9001  0023DE                     u4311:
  9002  0023DE  EF04  F012         	goto	l4200
  9003  0023E2                     u4310:
  9004  0023E2  2816               	incf	___flmul@aexp^0,w,c
  9005  0023E4  A4D8               	btfss	status,2,c
  9006  0023E6  EFF7  F011         	goto	u4321
  9007  0023EA  EFF9  F011         	goto	u4320
  9008  0023EE                     u4321:
  9009  0023EE  EF01  F012         	goto	l4198
  9010  0023F2                     u4320:
  9011  0023F2  0E00               	movlw	0
  9012  0023F4  6E09               	movwf	___flmul@a^0,c
  9013  0023F6  0E00               	movlw	0
  9014  0023F8  6E0A               	movwf	(___flmul@a+1)^0,c
  9015  0023FA  0E00               	movlw	0
  9016  0023FC  6E0B               	movwf	(___flmul@a+2)^0,c
  9017  0023FE  0E00               	movlw	0
  9018  002400  6E0C               	movwf	(___flmul@a+3)^0,c
  9019  002402                     l4198:
  9020  002402  8E0B               	bsf	(___flmul@a+2)^0,7,c
  9021  002404  EF0C  F012         	goto	l1064
  9022  002408                     l4200:
  9023  002408  0E00               	movlw	0
  9024  00240A  6E09               	movwf	___flmul@a^0,c
  9025  00240C  0E00               	movlw	0
  9026  00240E  6E0A               	movwf	(___flmul@a+1)^0,c
  9027  002410  0E00               	movlw	0
  9028  002412  6E0B               	movwf	(___flmul@a+2)^0,c
  9029  002414  0E00               	movlw	0
  9030  002416  6E0C               	movwf	(___flmul@a+3)^0,c
  9031  002418                     l1064:
  9032  002418  5016               	movf	___flmul@aexp^0,w,c
  9033  00241A  B4D8               	btfsc	status,2,c
  9034  00241C  EF12  F012         	goto	u4331
  9035  002420  EF14  F012         	goto	u4330
  9036  002424                     u4331:
  9037  002424  EF1C  F012         	goto	l4204
  9038  002428                     u4330:
  9039  002428  5017               	movf	___flmul@bexp^0,w,c
  9040  00242A  A4D8               	btfss	status,2,c
  9041  00242C  EF1A  F012         	goto	u4341
  9042  002430  EF1C  F012         	goto	u4340
  9043  002434                     u4341:
  9044  002434  EF26  F012         	goto	l4208
  9045  002438                     u4340:
  9046  002438                     l4204:
  9047  002438  0E00               	movlw	0
  9048  00243A  6E05               	movwf	?___flmul^0,c
  9049  00243C  0E00               	movlw	0
  9050  00243E  6E06               	movwf	(?___flmul+1)^0,c
  9051  002440  0E00               	movlw	0
  9052  002442  6E07               	movwf	(?___flmul+2)^0,c
  9053  002444  0E00               	movlw	0
  9054  002446  6E08               	movwf	(?___flmul+3)^0,c
  9055  002448  EFBE  F013         	goto	l1068
  9056  00244C                     l4208:
  9057  00244C  500B               	movf	(___flmul@a+2)^0,w,c
  9058  00244E  0205               	mulwf	___flmul@b^0,c
  9059  002450  CFF3 F01C          	movff	prodl,___flmul@temp
  9060  002454  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9061  002458  501C               	movf	___flmul@temp^0,w,c
  9062  00245A  6E12               	movwf	___flmul@grs^0,c
  9063  00245C  6A13               	clrf	(___flmul@grs+1)^0,c
  9064  00245E  6A14               	clrf	(___flmul@grs+2)^0,c
  9065  002460  6A15               	clrf	(___flmul@grs+3)^0,c
  9066  002462  501D               	movf	(___flmul@temp+1)^0,w,c
  9067  002464  6E18               	movwf	___flmul@prod^0,c
  9068  002466  6A19               	clrf	(___flmul@prod+1)^0,c
  9069  002468  6A1A               	clrf	(___flmul@prod+2)^0,c
  9070  00246A  6A1B               	clrf	(___flmul@prod+3)^0,c
  9071  00246C  500A               	movf	(___flmul@a+1)^0,w,c
  9072  00246E  0206               	mulwf	(___flmul@b+1)^0,c
  9073  002470  CFF3 F01C          	movff	prodl,___flmul@temp
  9074  002474  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9075  002478  501C               	movf	___flmul@temp^0,w,c
  9076  00247A  2612               	addwf	___flmul@grs^0,f,c
  9077  00247C  0E00               	movlw	0
  9078  00247E  2213               	addwfc	(___flmul@grs+1)^0,f,c
  9079  002480  2214               	addwfc	(___flmul@grs+2)^0,f,c
  9080  002482  2215               	addwfc	(___flmul@grs+3)^0,f,c
  9081  002484  501D               	movf	(___flmul@temp+1)^0,w,c
  9082  002486  2618               	addwf	___flmul@prod^0,f,c
  9083  002488  0E00               	movlw	0
  9084  00248A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9085  00248C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9086  00248E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9087  002490  5009               	movf	___flmul@a^0,w,c
  9088  002492  0207               	mulwf	(___flmul@b+2)^0,c
  9089  002494  CFF3 F01C          	movff	prodl,___flmul@temp
  9090  002498  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9091  00249C  501C               	movf	___flmul@temp^0,w,c
  9092  00249E  2612               	addwf	___flmul@grs^0,f,c
  9093  0024A0  0E00               	movlw	0
  9094  0024A2  2213               	addwfc	(___flmul@grs+1)^0,f,c
  9095  0024A4  2214               	addwfc	(___flmul@grs+2)^0,f,c
  9096  0024A6  2215               	addwfc	(___flmul@grs+3)^0,f,c
  9097  0024A8  501D               	movf	(___flmul@temp+1)^0,w,c
  9098  0024AA  2618               	addwf	___flmul@prod^0,f,c
  9099  0024AC  0E00               	movlw	0
  9100  0024AE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9101  0024B0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9102  0024B2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9103  0024B4  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  9104  0024B8  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  9105  0024BC  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  9106  0024C0  6A12               	clrf	___flmul@grs^0,c
  9107  0024C2  5009               	movf	___flmul@a^0,w,c
  9108  0024C4  0206               	mulwf	(___flmul@b+1)^0,c
  9109  0024C6  CFF3 F01C          	movff	prodl,___flmul@temp
  9110  0024CA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9111  0024CE  501C               	movf	___flmul@temp^0,w,c
  9112  0024D0  2612               	addwf	___flmul@grs^0,f,c
  9113  0024D2  501D               	movf	(___flmul@temp+1)^0,w,c
  9114  0024D4  2213               	addwfc	(___flmul@grs+1)^0,f,c
  9115  0024D6  0E00               	movlw	0
  9116  0024D8  2214               	addwfc	(___flmul@grs+2)^0,f,c
  9117  0024DA  0E00               	movlw	0
  9118  0024DC  2215               	addwfc	(___flmul@grs+3)^0,f,c
  9119  0024DE  500A               	movf	(___flmul@a+1)^0,w,c
  9120  0024E0  0205               	mulwf	___flmul@b^0,c
  9121  0024E2  CFF3 F01C          	movff	prodl,___flmul@temp
  9122  0024E6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9123  0024EA  501C               	movf	___flmul@temp^0,w,c
  9124  0024EC  2612               	addwf	___flmul@grs^0,f,c
  9125  0024EE  501D               	movf	(___flmul@temp+1)^0,w,c
  9126  0024F0  2213               	addwfc	(___flmul@grs+1)^0,f,c
  9127  0024F2  0E00               	movlw	0
  9128  0024F4  2214               	addwfc	(___flmul@grs+2)^0,f,c
  9129  0024F6  0E00               	movlw	0
  9130  0024F8  2215               	addwfc	(___flmul@grs+3)^0,f,c
  9131  0024FA  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  9132  0024FE  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  9133  002502  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  9134  002506  6A12               	clrf	___flmul@grs^0,c
  9135  002508  5009               	movf	___flmul@a^0,w,c
  9136  00250A  0205               	mulwf	___flmul@b^0,c
  9137  00250C  CFF3 F01C          	movff	prodl,___flmul@temp
  9138  002510  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9139  002514  501C               	movf	___flmul@temp^0,w,c
  9140  002516  2612               	addwf	___flmul@grs^0,f,c
  9141  002518  501D               	movf	(___flmul@temp+1)^0,w,c
  9142  00251A  2213               	addwfc	(___flmul@grs+1)^0,f,c
  9143  00251C  0E00               	movlw	0
  9144  00251E  2214               	addwfc	(___flmul@grs+2)^0,f,c
  9145  002520  0E00               	movlw	0
  9146  002522  2215               	addwfc	(___flmul@grs+3)^0,f,c
  9147  002524  500B               	movf	(___flmul@a+2)^0,w,c
  9148  002526  0206               	mulwf	(___flmul@b+1)^0,c
  9149  002528  CFF3 F01C          	movff	prodl,___flmul@temp
  9150  00252C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9151  002530  501C               	movf	___flmul@temp^0,w,c
  9152  002532  2618               	addwf	___flmul@prod^0,f,c
  9153  002534  501D               	movf	(___flmul@temp+1)^0,w,c
  9154  002536  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9155  002538  0E00               	movlw	0
  9156  00253A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9157  00253C  0E00               	movlw	0
  9158  00253E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9159  002540  500A               	movf	(___flmul@a+1)^0,w,c
  9160  002542  0207               	mulwf	(___flmul@b+2)^0,c
  9161  002544  CFF3 F01C          	movff	prodl,___flmul@temp
  9162  002548  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9163  00254C  501C               	movf	___flmul@temp^0,w,c
  9164  00254E  2618               	addwf	___flmul@prod^0,f,c
  9165  002550  501D               	movf	(___flmul@temp+1)^0,w,c
  9166  002552  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9167  002554  0E00               	movlw	0
  9168  002556  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9169  002558  0E00               	movlw	0
  9170  00255A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9171  00255C  500B               	movf	(___flmul@a+2)^0,w,c
  9172  00255E  0207               	mulwf	(___flmul@b+2)^0,c
  9173  002560  CFF3 F01C          	movff	prodl,___flmul@temp
  9174  002564  CFF4 F01D          	movff	prodh,___flmul@temp+1
  9175  002568  501C               	movf	___flmul@temp^0,w,c
  9176  00256A  6E0D               	movwf	??___flmul^0,c
  9177  00256C  501D               	movf	(___flmul@temp+1)^0,w,c
  9178  00256E  6E0E               	movwf	(??___flmul+1)^0,c
  9179  002570  6A0F               	clrf	(??___flmul+2)^0,c
  9180  002572  6A10               	clrf	(??___flmul+3)^0,c
  9181  002574  C00F  F010         	movff	??___flmul+2,??___flmul+3
  9182  002578  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  9183  00257C  C00D  F00E         	movff	??___flmul,??___flmul+1
  9184  002580  6A0D               	clrf	??___flmul^0,c
  9185  002582  500D               	movf	??___flmul^0,w,c
  9186  002584  2618               	addwf	___flmul@prod^0,f,c
  9187  002586  500E               	movf	(??___flmul+1)^0,w,c
  9188  002588  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9189  00258A  500F               	movf	(??___flmul+2)^0,w,c
  9190  00258C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9191  00258E  5010               	movf	(??___flmul+3)^0,w,c
  9192  002590  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9193  002592  C012  F00D         	movff	___flmul@grs,??___flmul
  9194  002596  C013  F00E         	movff	___flmul@grs+1,??___flmul+1
  9195  00259A  C014  F00F         	movff	___flmul@grs+2,??___flmul+2
  9196  00259E  C015  F010         	movff	___flmul@grs+3,??___flmul+3
  9197  0025A2  0E19               	movlw	25
  9198  0025A4  EFD9  F012         	goto	u4350
  9199  0025A8                     u4355:
  9200  0025A8  90D8               	bcf	status,0,c
  9201  0025AA  3210               	rrcf	(??___flmul+3)^0,f,c
  9202  0025AC  320F               	rrcf	(??___flmul+2)^0,f,c
  9203  0025AE  320E               	rrcf	(??___flmul+1)^0,f,c
  9204  0025B0  320D               	rrcf	??___flmul^0,f,c
  9205  0025B2                     u4350:
  9206  0025B2  2EE8               	decfsz	wreg,f,c
  9207  0025B4  EFD4  F012         	goto	u4355
  9208  0025B8  500D               	movf	??___flmul^0,w,c
  9209  0025BA  2618               	addwf	___flmul@prod^0,f,c
  9210  0025BC  500E               	movf	(??___flmul+1)^0,w,c
  9211  0025BE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9212  0025C0  500F               	movf	(??___flmul+2)^0,w,c
  9213  0025C2  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9214  0025C4  5010               	movf	(??___flmul+3)^0,w,c
  9215  0025C6  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9216  0025C8  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  9217  0025CC  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  9218  0025D0  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  9219  0025D4  6A12               	clrf	___flmul@grs^0,c
  9220  0025D6  5016               	movf	___flmul@aexp^0,w,c
  9221  0025D8  C017  F00D         	movff	___flmul@bexp,??___flmul
  9222  0025DC  6A0E               	clrf	(??___flmul+1)^0,c
  9223  0025DE  260D               	addwf	??___flmul^0,f,c
  9224  0025E0  0E00               	movlw	0
  9225  0025E2  220E               	addwfc	(??___flmul+1)^0,f,c
  9226  0025E4  0E82               	movlw	130
  9227  0025E6  240D               	addwf	??___flmul^0,w,c
  9228  0025E8  6E1C               	movwf	___flmul@temp^0,c
  9229  0025EA  0EFF               	movlw	255
  9230  0025EC  200E               	addwfc	(??___flmul+1)^0,w,c
  9231  0025EE  6E1D               	movwf	(___flmul@temp+1)^0,c
  9232  0025F0  EF0F  F013         	goto	l4256
  9233  0025F4                     l4250:
  9234  0025F4  90D8               	bcf	status,0,c
  9235  0025F6  3618               	rlcf	___flmul@prod^0,f,c
  9236  0025F8  3619               	rlcf	(___flmul@prod+1)^0,f,c
  9237  0025FA  361A               	rlcf	(___flmul@prod+2)^0,f,c
  9238  0025FC  361B               	rlcf	(___flmul@prod+3)^0,f,c
  9239  0025FE  AE15               	btfss	(___flmul@grs+3)^0,7,c
  9240  002600  EF04  F013         	goto	u4361
  9241  002604  EF06  F013         	goto	u4360
  9242  002608                     u4361:
  9243  002608  EF07  F013         	goto	l1071
  9244  00260C                     u4360:
  9245  00260C  8018               	bsf	___flmul@prod^0,0,c
  9246  00260E                     l1071:
  9247  00260E  90D8               	bcf	status,0,c
  9248  002610  3612               	rlcf	___flmul@grs^0,f,c
  9249  002612  3613               	rlcf	(___flmul@grs+1)^0,f,c
  9250  002614  3614               	rlcf	(___flmul@grs+2)^0,f,c
  9251  002616  3615               	rlcf	(___flmul@grs+3)^0,f,c
  9252  002618  061C               	decf	___flmul@temp^0,f,c
  9253  00261A  A0D8               	btfss	status,0,c
  9254  00261C  061D               	decf	(___flmul@temp+1)^0,f,c
  9255  00261E                     l4256:
  9256  00261E  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  9257  002620  EF14  F013         	goto	u4371
  9258  002624  EF16  F013         	goto	u4370
  9259  002628                     u4371:
  9260  002628  EFFA  F012         	goto	l4250
  9261  00262C                     u4370:
  9262  00262C  0E00               	movlw	0
  9263  00262E  6E16               	movwf	___flmul@aexp^0,c
  9264  002630  AE15               	btfss	(___flmul@grs+3)^0,7,c
  9265  002632  EF1D  F013         	goto	u4381
  9266  002636  EF1F  F013         	goto	u4380
  9267  00263A                     u4381:
  9268  00263A  EF43  F013         	goto	l1073
  9269  00263E                     u4380:
  9270  00263E  0EFF               	movlw	255
  9271  002640  1412               	andwf	___flmul@grs^0,w,c
  9272  002642  6E0D               	movwf	??___flmul^0,c
  9273  002644  0EFF               	movlw	255
  9274  002646  1413               	andwf	(___flmul@grs+1)^0,w,c
  9275  002648  6E0E               	movwf	(??___flmul+1)^0,c
  9276  00264A  0EFF               	movlw	255
  9277  00264C  1414               	andwf	(___flmul@grs+2)^0,w,c
  9278  00264E  6E0F               	movwf	(??___flmul+2)^0,c
  9279  002650  0E7F               	movlw	127
  9280  002652  1415               	andwf	(___flmul@grs+3)^0,w,c
  9281  002654  6E10               	movwf	(??___flmul+3)^0,c
  9282  002656  500D               	movf	??___flmul^0,w,c
  9283  002658  100E               	iorwf	(??___flmul+1)^0,w,c
  9284  00265A  100F               	iorwf	(??___flmul+2)^0,w,c
  9285  00265C  1010               	iorwf	(??___flmul+3)^0,w,c
  9286  00265E  B4D8               	btfsc	status,2,c
  9287  002660  EF34  F013         	goto	u4391
  9288  002664  EF36  F013         	goto	u4390
  9289  002668                     u4391:
  9290  002668  EF3A  F013         	goto	l1074
  9291  00266C                     u4390:
  9292  00266C                     l4264:
  9293  00266C  0E01               	movlw	1
  9294  00266E  6E16               	movwf	___flmul@aexp^0,c
  9295  002670  EF43  F013         	goto	l1073
  9296  002674                     l1074:
  9297  002674  A018               	btfss	___flmul@prod^0,0,c
  9298  002676  EF3F  F013         	goto	u4401
  9299  00267A  EF41  F013         	goto	u4400
  9300  00267E                     u4401:
  9301  00267E  EF43  F013         	goto	l1073
  9302  002682                     u4400:
  9303  002682  EF36  F013         	goto	l4264
  9304  002686                     l1073:
  9305  002686  5016               	movf	___flmul@aexp^0,w,c
  9306  002688  B4D8               	btfsc	status,2,c
  9307  00268A  EF49  F013         	goto	u4411
  9308  00268E  EF4B  F013         	goto	u4410
  9309  002692                     u4411:
  9310  002692  EF6F  F013         	goto	l4276
  9311  002696                     u4410:
  9312  002696  0E01               	movlw	1
  9313  002698  2618               	addwf	___flmul@prod^0,f,c
  9314  00269A  0E00               	movlw	0
  9315  00269C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  9316  00269E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  9317  0026A0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  9318  0026A2  A01B               	btfss	(___flmul@prod+3)^0,0,c
  9319  0026A4  EF56  F013         	goto	u4421
  9320  0026A8  EF58  F013         	goto	u4420
  9321  0026AC                     u4421:
  9322  0026AC  EF6F  F013         	goto	l4276
  9323  0026B0                     u4420:
  9324  0026B0  C018  F00D         	movff	___flmul@prod,??___flmul
  9325  0026B4  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  9326  0026B8  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  9327  0026BC  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  9328  0026C0  3410               	rlcf	(??___flmul+3)^0,w,c
  9329  0026C2  3210               	rrcf	(??___flmul+3)^0,f,c
  9330  0026C4  320F               	rrcf	(??___flmul+2)^0,f,c
  9331  0026C6  320E               	rrcf	(??___flmul+1)^0,f,c
  9332  0026C8  320D               	rrcf	??___flmul^0,f,c
  9333  0026CA  C00D  F018         	movff	??___flmul,___flmul@prod
  9334  0026CE  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  9335  0026D2  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  9336  0026D6  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  9337  0026DA  4A1C               	infsnz	___flmul@temp^0,f,c
  9338  0026DC  2A1D               	incf	(___flmul@temp+1)^0,f,c
  9339  0026DE                     l4276:
  9340  0026DE  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  9341  0026E0  EF7A  F013         	goto	u4431
  9342  0026E4  501D               	movf	(___flmul@temp+1)^0,w,c
  9343  0026E6  E108               	bnz	u4430
  9344  0026E8  281C               	incf	___flmul@temp^0,w,c
  9345  0026EA  A0D8               	btfss	status,0,c
  9346  0026EC  EF7A  F013         	goto	u4431
  9347  0026F0  EF7C  F013         	goto	u4430
  9348  0026F4                     u4431:
  9349  0026F4  EF86  F013         	goto	l4280
  9350  0026F8                     u4430:
  9351  0026F8  0E00               	movlw	0
  9352  0026FA  6E18               	movwf	___flmul@prod^0,c
  9353  0026FC  0E00               	movlw	0
  9354  0026FE  6E19               	movwf	(___flmul@prod+1)^0,c
  9355  002700  0E80               	movlw	128
  9356  002702  6E1A               	movwf	(___flmul@prod+2)^0,c
  9357  002704  0E7F               	movlw	127
  9358  002706  6E1B               	movwf	(___flmul@prod+3)^0,c
  9359  002708  EFB4  F013         	goto	l4292
  9360  00270C                     l4280:
  9361  00270C  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  9362  00270E  EF93  F013         	goto	u4440
  9363  002712  501D               	movf	(___flmul@temp+1)^0,w,c
  9364  002714  E106               	bnz	u4441
  9365  002716  041C               	decf	___flmul@temp^0,w,c
  9366  002718  B0D8               	btfsc	status,0,c
  9367  00271A  EF91  F013         	goto	u4441
  9368  00271E  EF93  F013         	goto	u4440
  9369  002722                     u4441:
  9370  002722  EF9F  F013         	goto	l1081
  9371  002726                     u4440:
  9372  002726  0E00               	movlw	0
  9373  002728  6E18               	movwf	___flmul@prod^0,c
  9374  00272A  0E00               	movlw	0
  9375  00272C  6E19               	movwf	(___flmul@prod+1)^0,c
  9376  00272E  0E00               	movlw	0
  9377  002730  6E1A               	movwf	(___flmul@prod+2)^0,c
  9378  002732  0E00               	movlw	0
  9379  002734  6E1B               	movwf	(___flmul@prod+3)^0,c
  9380  002736  0E00               	movlw	0
  9381  002738  6E11               	movwf	___flmul@sign^0,c
  9382  00273A  EFB4  F013         	goto	l4292
  9383  00273E                     l1081:
  9384  00273E  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  9385  002742  0EFF               	movlw	255
  9386  002744  1618               	andwf	___flmul@prod^0,f,c
  9387  002746  0EFF               	movlw	255
  9388  002748  1619               	andwf	(___flmul@prod+1)^0,f,c
  9389  00274A  0E7F               	movlw	127
  9390  00274C  161A               	andwf	(___flmul@prod+2)^0,f,c
  9391  00274E  0E00               	movlw	0
  9392  002750  161B               	andwf	(___flmul@prod+3)^0,f,c
  9393  002752  A017               	btfss	___flmul@bexp^0,0,c
  9394  002754  EFAE  F013         	goto	u4451
  9395  002758  EFB0  F013         	goto	u4450
  9396  00275C                     u4451:
  9397  00275C  EFB1  F013         	goto	l4290
  9398  002760                     u4450:
  9399  002760  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  9400  002762                     l4290:
  9401  002762  90D8               	bcf	status,0,c
  9402  002764  3017               	rrcf	___flmul@bexp^0,w,c
  9403  002766  6E1B               	movwf	(___flmul@prod+3)^0,c
  9404  002768                     l4292:
  9405  002768  5011               	movf	___flmul@sign^0,w,c
  9406  00276A  121B               	iorwf	(___flmul@prod+3)^0,f,c
  9407  00276C  C018  F005         	movff	___flmul@prod,?___flmul
  9408  002770  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  9409  002774  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  9410  002778  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  9411  00277C                     l1068:
  9412  00277C  0012               	return		;funcret
  9413  00277E                     __end_of___flmul:
  9414                           	callstack 0
  9415                           
  9416 ;; *************** function _TxBufferedString *****************
  9417 ;; Defined at:
  9418 ;;		line 98 in file "serial.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  string          2    5[COMRAM] PTR unsigned char 
  9421 ;;		 -> main@string(20), main@string3(20), main@string2(20), main@string1(20), 
  9422 ;;		 -> main@string0(20), 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;Total ram usage:        2 bytes
  9439 ;; Hardware stack levels used: 1
  9440 ;; Hardware stack levels required when called: 3
  9441 ;; This function calls:
  9442 ;;		_putCharToTxBuf
  9443 ;; This function is called by:
  9444 ;;		_main
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text45
  9449  0041D8                     __ptext45:
  9450                           	callstack 0
  9451  0041D8                     _TxBufferedString:
  9452                           	callstack 27
  9453  0041D8                     
  9454                           ;serial.c: 100:     while(*string != 0){
  9455  0041D8  EFF7  F020         	goto	l4146
  9456  0041DC                     l4142:
  9457                           
  9458                           ;serial.c: 101:   putCharToTxBuf(*string++);}
  9459  0041DC  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9460  0041E0  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9461  0041E4  50DF               	movf	indf2,w,c
  9462  0041E6  EC2F  F021         	call	_putCharToTxBuf
  9463  0041EA  4A06               	infsnz	TxBufferedString@string^0,f,c
  9464  0041EC  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  9465  0041EE                     l4146:
  9466                           
  9467                           ;serial.c: 100:     while(*string != 0){
  9468  0041EE  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9469  0041F2  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9470  0041F6  50DF               	movf	indf2,w,c
  9471  0041F8  A4D8               	btfss	status,2,c
  9472  0041FA  EF01  F021         	goto	u4231
  9473  0041FE  EF03  F021         	goto	u4230
  9474  004202                     u4231:
  9475  004202  EFEE  F020         	goto	l4142
  9476  004206                     u4230:
  9477  004206  0012               	return		;funcret
  9478  004208                     __end_of_TxBufferedString:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _putCharToTxBuf *****************
  9482 ;; Defined at:
  9483 ;;		line 85 in file "serial.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  byte            1    wreg     unsigned char 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  byte            1    4[COMRAM] unsigned char 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;Total ram usage:        1 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 2
  9504 ;; This function calls:
  9505 ;;		Nothing
  9506 ;; This function is called by:
  9507 ;;		_TxBufferedString
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text46
  9512  00425E                     __ptext46:
  9513                           	callstack 0
  9514  00425E                     _putCharToTxBuf:
  9515                           	callstack 27
  9516                           
  9517                           ;incstack = 0
  9518                           ;putCharToTxBuf@byte stored from wreg
  9519  00425E  6E05               	movwf	putCharToTxBuf@byte^0,c
  9520  004260                     
  9521                           ;serial.c: 86:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  9522  004260  0E3B               	movlw	59
  9523  004262  6453               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  9524  004264  EF36  F021         	goto	u3191
  9525  004268  EF38  F021         	goto	u3190
  9526  00426C                     u3191:
  9527  00426C  EF3A  F021         	goto	l3576
  9528  004270                     u3190:
  9529  004270  0E00               	movlw	0
  9530  004272  6E53               	movwf	_TxBufWriteCnt^0,c	;volatile
  9531  004274                     l3576:
  9532                           
  9533                           ;serial.c: 87:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  9534  004274  0E60               	movlw	low _EUSART4TXbuf
  9535  004276  2453               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  9536  004278  6ED9               	movwf	fsr2l,c
  9537  00427A  6ADA               	clrf	fsr2h,c
  9538  00427C  0E00               	movlw	high _EUSART4TXbuf
  9539  00427E  22DA               	addwfc	fsr2h,f,c
  9540  004280  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  9541  004284  2A53               	incf	_TxBufWriteCnt^0,f,c	;volatile
  9542  004286  0012               	return		;funcret
  9543  004288                     __end_of_putCharToTxBuf:
  9544                           	callstack 0
  9545                           
  9546 ;; *************** function _Interrupts_init *****************
  9547 ;; Defined at:
  9548 ;;		line 10 in file "interrupts.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		None
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;Total ram usage:        0 bytes
  9567 ;; Hardware stack levels used: 1
  9568 ;; Hardware stack levels required when called: 2
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_main
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text47
  9577  004396                     __ptext47:
  9578                           	callstack 0
  9579  004396                     _Interrupts_init:
  9580                           	callstack 28
  9581  004396                     
  9582                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  9583  004396  8CF2               	bsf	242,6,c	;volatile
  9584                           
  9585                           ;interrupts.c: 15:     PIE4bits.RC4IE=1;
  9586  004398  010E               	movlb	14	; () banked
  9587  00439A  872D               	bsf	45,3,b	;volatile
  9588                           
  9589                           ;interrupts.c: 16:     PIE4bits.TX4IE=0;
  9590  00439C  952D               	bcf	45,2,b	;volatile
  9591                           
  9592                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  9593  00439E  8EF2               	bsf	242,7,c	;volatile
  9594  0043A0                     
  9595                           ; BSR set to: 14
  9596  0043A0  0012               	return		;funcret
  9597  0043A2                     __end_of_Interrupts_init:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _HighISR *****************
  9601 ;; Defined at:
  9602 ;;		line 24 in file "interrupts.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;Total ram usage:        2 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; Hardware stack levels required when called: 1
  9623 ;; This function calls:
  9624 ;;		_getCharFromTxBuf
  9625 ;;		_putCharToRxBuf
  9626 ;;		i2_isDataInTxBuf
  9627 ;; This function is called by:
  9628 ;;		Interrupt level 2
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	intcode
  9633  000008                     __pintcode:
  9634                           	callstack 0
  9635  000008                     _HighISR:
  9636                           	callstack 21
  9637                           
  9638                           ; BSR set to: 14
  9639                           ;incstack = 0
  9640  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9641  00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  9642  00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  9643  000012                     
  9644                           ;interrupts.c: 26:     if (PIR4bits.RC4IF == 1){
  9645  000012  010E               	movlb	14	; () banked
  9646  000014  A737               	btfss	55,3,b	;volatile
  9647  000016  EF0F  F000         	goto	i2u489_41
  9648  00001A  EF11  F000         	goto	i2u489_40
  9649  00001E                     i2u489_41:
  9650  00001E  EF14  F000         	goto	i2l4762
  9651  000022                     i2u489_40:
  9652  000022                     
  9653                           ; BSR set to: 14
  9654                           ;interrupts.c: 27:         putCharToRxBuf(RC4REG);
  9655  000022  51E3               	movf	227,w,b	;volatile
  9656  000024  EC44  F021         	call	_putCharToRxBuf
  9657  000028                     i2l4762:
  9658                           
  9659                           ;interrupts.c: 29:     if (PIR4bits.TX4IF == 1 && PIE4bits.TX4IE==1){
  9660  000028  010E               	movlb	14	; () banked
  9661  00002A  A537               	btfss	55,2,b	;volatile
  9662  00002C  EF1A  F000         	goto	i2u490_41
  9663  000030  EF1C  F000         	goto	i2u490_40
  9664  000034                     i2u490_41:
  9665  000034  EF35  F000         	goto	i2l447
  9666  000038                     i2u490_40:
  9667  000038                     
  9668                           ; BSR set to: 14
  9669  000038  A52D               	btfss	45,2,b	;volatile
  9670  00003A  EF21  F000         	goto	i2u491_41
  9671  00003E  EF23  F000         	goto	i2u491_40
  9672  000042                     i2u491_41:
  9673  000042  EF35  F000         	goto	i2l447
  9674  000046                     i2u491_40:
  9675  000046                     
  9676                           ; BSR set to: 14
  9677                           ;interrupts.c: 30:         if (isDataInTxBuf()==1 ) {TX4REG = getCharFromTxBuf();}
  9678  000046  ECB9  F021         	call	i2_isDataInTxBuf	;wreg free
  9679  00004A  06E8               	decf	wreg,f,c
  9680  00004C  A4D8               	btfss	status,2,c
  9681  00004E  EF2B  F000         	goto	i2u492_41
  9682  000052  EF2D  F000         	goto	i2u492_40
  9683  000056                     i2u492_41:
  9684  000056  EF33  F000         	goto	i2l445
  9685  00005A                     i2u492_40:
  9686  00005A  EC04  F021         	call	_getCharFromTxBuf	;wreg free
  9687  00005E  010E               	movlb	14	; () banked
  9688  000060  6FE4               	movwf	228,b	;volatile
  9689  000062  EF35  F000         	goto	i2l447
  9690  000066                     i2l445:
  9691  000066  010E               	movlb	14	; () banked
  9692  000068  952D               	bcf	45,2,b	;volatile
  9693  00006A                     i2l447:
  9694                           
  9695                           ; BSR set to: 14
  9696  00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9697  00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  9698  000072  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9699  000074  0011               	retfie		f
  9700  000076                     __end_of_HighISR:
  9701                           	callstack 0
  9702                           
  9703 ;; *************** function i2_isDataInTxBuf *****************
  9704 ;; Defined at:
  9705 ;;		line 93 in file "serial.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;		None
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;		None
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      unsigned char 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9723 ;;Total ram usage:        0 bytes
  9724 ;; Hardware stack levels used: 1
  9725 ;; This function calls:
  9726 ;;		Nothing
  9727 ;; This function is called by:
  9728 ;;		_HighISR
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text49
  9733  004372                     __ptext49:
  9734                           	callstack 0
  9735  004372                     i2_isDataInTxBuf:
  9736                           	callstack 21
  9737  004372                     
  9738                           ;serial.c: 94:     return (TxBufWriteCnt!=TxBufReadCnt);
  9739  004372  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  9740  004374  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9741  004376  A4D8               	btfss	status,2,c
  9742  004378  EFC0  F021         	goto	i2u212_41
  9743  00437C  EFC3  F021         	goto	i2u212_40
  9744  004380                     i2u212_41:
  9745  004380  0E01               	movlw	1
  9746  004382  EFC4  F021         	goto	i2u213_40
  9747  004386                     i2u212_40:
  9748  004386  0E00               	movlw	0
  9749  004388                     i2u213_40:
  9750  004388  0012               	return		;funcret
  9751  00438A                     __end_ofi2_isDataInTxBuf:
  9752                           	callstack 0
  9753                           
  9754 ;; *************** function _putCharToRxBuf *****************
  9755 ;; Defined at:
  9756 ;;		line 63 in file "serial.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  byte            1    wreg     unsigned char 
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  byte            1    0[COMRAM] unsigned char 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      void 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9774 ;;Total ram usage:        1 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; This function calls:
  9777 ;;		Nothing
  9778 ;; This function is called by:
  9779 ;;		_HighISR
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text50
  9784  004288                     __ptext50:
  9785                           	callstack 0
  9786  004288                     _putCharToRxBuf:
  9787                           	callstack 21
  9788                           
  9789                           ;incstack = 0
  9790                           ;putCharToRxBuf@byte stored from wreg
  9791  004288  6E01               	movwf	putCharToRxBuf@byte^0,c
  9792  00428A                     
  9793                           ;serial.c: 64:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9794  00428A  0E13               	movlw	19
  9795  00428C  6455               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9796  00428E  EF4B  F021         	goto	i2u425_41
  9797  004292  EF4D  F021         	goto	i2u425_40
  9798  004296                     i2u425_41:
  9799  004296  EF4F  F021         	goto	i2l4156
  9800  00429A                     i2u425_40:
  9801  00429A  0E00               	movlw	0
  9802  00429C  6E55               	movwf	_RxBufWriteCnt^0,c	;volatile
  9803  00429E                     i2l4156:
  9804                           
  9805                           ;serial.c: 65:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9806  00429E  0E9C               	movlw	low _EUSART4RXbuf
  9807  0042A0  2455               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9808  0042A2  6ED9               	movwf	fsr2l,c
  9809  0042A4  6ADA               	clrf	fsr2h,c
  9810  0042A6  0E00               	movlw	high _EUSART4RXbuf
  9811  0042A8  22DA               	addwfc	fsr2h,f,c
  9812  0042AA  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9813  0042AE  2A55               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9814  0042B0  0012               	return		;funcret
  9815  0042B2                     __end_of_putCharToRxBuf:
  9816                           	callstack 0
  9817                           
  9818 ;; *************** function _getCharFromTxBuf *****************
  9819 ;; Defined at:
  9820 ;;		line 79 in file "serial.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;		None
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;		None
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      unsigned char 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9838 ;;Total ram usage:        2 bytes
  9839 ;; Hardware stack levels used: 1
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_HighISR
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text51
  9848  004208                     __ptext51:
  9849                           	callstack 0
  9850  004208                     _getCharFromTxBuf:
  9851                           	callstack 21
  9852  004208                     
  9853                           ;serial.c: 80:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9854  004208  0E3B               	movlw	59
  9855  00420A  6452               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9856  00420C  EF0A  F021         	goto	i2u426_41
  9857  004210  EF0C  F021         	goto	i2u426_40
  9858  004214                     i2u426_41:
  9859  004214  EF0E  F021         	goto	i2l4164
  9860  004218                     i2u426_40:
  9861  004218  0E00               	movlw	0
  9862  00421A  6E52               	movwf	_TxBufReadCnt^0,c	;volatile
  9863  00421C                     i2l4164:
  9864                           
  9865                           ;serial.c: 81:     return EUSART4TXbuf[TxBufReadCnt++];
  9866  00421C  2A52               	incf	_TxBufReadCnt^0,f,c	;volatile
  9867  00421E  0452               	decf	_TxBufReadCnt^0,w,c	;volatile
  9868  004220  6E01               	movwf	??_getCharFromTxBuf^0,c
  9869  004222  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9870  004224  0E60               	movlw	low _EUSART4TXbuf
  9871  004226  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9872  004228  6ED9               	movwf	fsr2l,c
  9873  00422A  0E00               	movlw	high _EUSART4TXbuf
  9874  00422C  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9875  00422E  6EDA               	movwf	fsr2h,c
  9876  004230  50DF               	movf	indf2,w,c
  9877  004232  0012               	return		;funcret
  9878  004234                     __end_of_getCharFromTxBuf:
  9879                           	callstack 0
  9880                           
  9881                           	psect	rparam
  9882  0000                     
  9883                           	psect	temp
  9884  000056                     btemp:
  9885                           	callstack 0
  9886  000056                     	ds	1
  9887  0000                     int$flags	set	btemp
  9888  0000                     wtemp8	set	btemp+1
  9889  0000                     ttemp5	set	btemp+1
  9890  0000                     ttemp6	set	btemp+4
  9891  0000                     ttemp7	set	btemp+8
  9892                           
  9893                           	psect	idloc
  9894                           
  9895                           ;Config register IDLOC0 @ 0x200000
  9896                           ;	unspecified, using default values
  9897  200000                     	org	2097152
  9898  200000  0FFF               	dw	4095
  9899                           
  9900                           ;Config register IDLOC1 @ 0x200002
  9901                           ;	unspecified, using default values
  9902  200002                     	org	2097154
  9903  200002  0FFF               	dw	4095
  9904                           
  9905                           ;Config register IDLOC2 @ 0x200004
  9906                           ;	unspecified, using default values
  9907  200004                     	org	2097156
  9908  200004  0FFF               	dw	4095
  9909                           
  9910                           ;Config register IDLOC3 @ 0x200006
  9911                           ;	unspecified, using default values
  9912  200006                     	org	2097158
  9913  200006  0FFF               	dw	4095
  9914                           
  9915                           ;Config register IDLOC4 @ 0x200008
  9916                           ;	unspecified, using default values
  9917  200008                     	org	2097160
  9918  200008  0FFF               	dw	4095
  9919                           
  9920                           ;Config register IDLOC5 @ 0x20000A
  9921                           ;	unspecified, using default values
  9922  20000A                     	org	2097162
  9923  20000A  0FFF               	dw	4095
  9924                           
  9925                           ;Config register IDLOC6 @ 0x20000C
  9926                           ;	unspecified, using default values
  9927  20000C                     	org	2097164
  9928  20000C  0FFF               	dw	4095
  9929                           
  9930                           ;Config register IDLOC7 @ 0x20000E
  9931                           ;	unspecified, using default values
  9932  20000E                     	org	2097166
  9933  20000E  0FFF               	dw	4095
  9934                           
  9935                           	psect	config
  9936                           
  9937                           ;Config register CONFIG1L @ 0x300000
  9938                           ;	External Oscillator mode Selection bits
  9939                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9940                           ;	Power-up default value for COSC bits
  9941                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9942  300000                     	org	3145728
  9943  300000  AA                 	db	170
  9944                           
  9945                           ;Config register CONFIG1H @ 0x300001
  9946                           ;	unspecified, using default values
  9947                           ;	Clock Out Enable bit
  9948                           ;	CLKOUTEN = 0x1, unprogrammed default
  9949                           ;	Clock Switch Enable bit
  9950                           ;	CSWEN = 0x1, unprogrammed default
  9951                           ;	Fail-Safe Clock Monitor Enable bit
  9952                           ;	FCMEN = 0x1, unprogrammed default
  9953  300001                     	org	3145729
  9954  300001  FF                 	db	255
  9955                           
  9956                           ;Config register CONFIG2L @ 0x300002
  9957                           ;	unspecified, using default values
  9958                           ;	Master Clear Enable bit
  9959                           ;	MCLRE = 0x1, unprogrammed default
  9960                           ;	Power-up Timer Enable bit
  9961                           ;	PWRTE = 0x1, unprogrammed default
  9962                           ;	Low-power BOR enable bit
  9963                           ;	LPBOREN = 0x1, unprogrammed default
  9964                           ;	Brown-out Reset Enable bits
  9965                           ;	BOREN = 0x3, unprogrammed default
  9966  300002                     	org	3145730
  9967  300002  FF                 	db	255
  9968                           
  9969                           ;Config register CONFIG2H @ 0x300003
  9970                           ;	unspecified, using default values
  9971                           ;	Brown Out Reset Voltage selection bits
  9972                           ;	BORV = 0x3, unprogrammed default
  9973                           ;	ZCD Disable bit
  9974                           ;	ZCD = 0x1, unprogrammed default
  9975                           ;	PPSLOCK bit One-Way Set Enable bit
  9976                           ;	PPS1WAY = 0x1, unprogrammed default
  9977                           ;	Stack Full/Underflow Reset Enable bit
  9978                           ;	STVREN = 0x1, unprogrammed default
  9979                           ;	Debugger Enable bit
  9980                           ;	DEBUG = 0x1, unprogrammed default
  9981                           ;	Extended Instruction Set Enable bit
  9982                           ;	XINST = 0x1, unprogrammed default
  9983  300003                     	org	3145731
  9984  300003  FF                 	db	255
  9985                           
  9986                           ;Config register CONFIG3L @ 0x300004
  9987                           ;	WDT Period Select bits
  9988                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9989                           ;	WDT operating mode
  9990                           ;	WDTE = OFF, WDT Disabled
  9991  300004                     	org	3145732
  9992  300004  9F                 	db	159
  9993                           
  9994                           ;Config register CONFIG3H @ 0x300005
  9995                           ;	unspecified, using default values
  9996                           ;	WDT Window Select bits
  9997                           ;	WDTCWS = 0x7, unprogrammed default
  9998                           ;	WDT input clock selector
  9999                           ;	WDTCCS = 0x7, unprogrammed default
 10000  300005                     	org	3145733
 10001  300005  FF                 	db	255
 10002                           
 10003                           ;Config register CONFIG4L @ 0x300006
 10004                           ;	unspecified, using default values
 10005                           ;	Write Protection Block 0
 10006                           ;	WRT0 = 0x1, unprogrammed default
 10007                           ;	Write Protection Block 1
 10008                           ;	WRT1 = 0x1, unprogrammed default
 10009                           ;	Write Protection Block 2
 10010                           ;	WRT2 = 0x1, unprogrammed default
 10011                           ;	Write Protection Block 3
 10012                           ;	WRT3 = 0x1, unprogrammed default
 10013                           ;	Write Protection Block 3
 10014                           ;	WRT4 = 0x1, unprogrammed default
 10015                           ;	Write Protection Block 3
 10016                           ;	WRT5 = 0x1, unprogrammed default
 10017                           ;	Write Protection Block 3
 10018                           ;	WRT6 = 0x1, unprogrammed default
 10019                           ;	Write Protection Block 3
 10020                           ;	WRT7 = 0x1, unprogrammed default
 10021  300006                     	org	3145734
 10022  300006  FF                 	db	255
 10023                           
 10024                           ;Config register CONFIG4H @ 0x300007
 10025                           ;	unspecified, using default values
 10026                           ;	Configuration Register Write Protection bit
 10027                           ;	WRTC = 0x1, unprogrammed default
 10028                           ;	Boot Block Write Protection bit
 10029                           ;	WRTB = 0x1, unprogrammed default
 10030                           ;	Data EEPROM Write Protection bit
 10031                           ;	WRTD = 0x1, unprogrammed default
 10032                           ;	Scanner Enable bit
 10033                           ;	SCANE = 0x1, unprogrammed default
 10034                           ;	Low Voltage Programming Enable bit
 10035                           ;	LVP = 0x1, unprogrammed default
 10036  300007                     	org	3145735
 10037  300007  FF                 	db	255
 10038                           
 10039                           ;Config register CONFIG5L @ 0x300008
 10040                           ;	unspecified, using default values
 10041                           ;	UserNVM Program Memory Code Protection bit
 10042                           ;	CP = 0x1, unprogrammed default
 10043                           ;	DataNVM Memory Code Protection bit
 10044                           ;	CPD = 0x1, unprogrammed default
 10045  300008                     	org	3145736
 10046  300008  FF                 	db	255
 10047                           
 10048                           ;Config register CONFIG5H @ 0x300009
 10049                           ;	unspecified, using default values
 10050  300009                     	org	3145737
 10051  300009  FF                 	db	255
 10052                           
 10053                           ;Config register CONFIG6L @ 0x30000A
 10054                           ;	unspecified, using default values
 10055                           ;	Table Read Protection Block 0
 10056                           ;	EBTR0 = 0x1, unprogrammed default
 10057                           ;	Table Read Protection Block 1
 10058                           ;	EBTR1 = 0x1, unprogrammed default
 10059                           ;	Table Read Protection Block 2
 10060                           ;	EBTR2 = 0x1, unprogrammed default
 10061                           ;	Table Read Protection Block 3
 10062                           ;	EBTR3 = 0x1, unprogrammed default
 10063                           ;	Table Read Protection Block 4
 10064                           ;	EBTR4 = 0x1, unprogrammed default
 10065                           ;	Table Read Protection Block 5
 10066                           ;	EBTR5 = 0x1, unprogrammed default
 10067                           ;	Table Read Protection Block 6
 10068                           ;	EBTR6 = 0x1, unprogrammed default
 10069                           ;	Table Read Protection Block 7
 10070                           ;	EBTR7 = 0x1, unprogrammed default
 10071  30000A                     	org	3145738
 10072  30000A  FF                 	db	255
 10073                           
 10074                           ;Config register CONFIG6H @ 0x30000B
 10075                           ;	unspecified, using default values
 10076                           ;	Boot Block Table Read Protection bit
 10077                           ;	EBTRB = 0x1, unprogrammed default
 10078  30000B                     	org	3145739
 10079  30000B  FF                 	db	255
 10080                           tosu	equ	0xFFF
 10081                           tosh	equ	0xFFE
 10082                           tosl	equ	0xFFD
 10083                           stkptr	equ	0xFFC
 10084                           pclatu	equ	0xFFB
 10085                           pclath	equ	0xFFA
 10086                           pcl	equ	0xFF9
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           prodh	equ	0xFF4
 10092                           prodl	equ	0xFF3
 10093                           indf0	equ	0xFEF
 10094                           postinc0	equ	0xFEE
 10095                           postdec0	equ	0xFED
 10096                           preinc0	equ	0xFEC
 10097                           plusw0	equ	0xFEB
 10098                           fsr0h	equ	0xFEA
 10099                           fsr0l	equ	0xFE9
 10100                           wreg	equ	0xFE8
 10101                           indf1	equ	0xFE7
 10102                           postinc1	equ	0xFE6
 10103                           postdec1	equ	0xFE5
 10104                           preinc1	equ	0xFE4
 10105                           plusw1	equ	0xFE3
 10106                           fsr1h	equ	0xFE2
 10107                           fsr1l	equ	0xFE1
 10108                           bsr	equ	0xFE0
 10109                           indf2	equ	0xFDF
 10110                           postinc2	equ	0xFDE
 10111                           postdec2	equ	0xFDD
 10112                           preinc2	equ	0xFDC
 10113                           plusw2	equ	0xFDB
 10114                           fsr2h	equ	0xFDA
 10115                           fsr2l	equ	0xFD9
 10116                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    4
    Data        162
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160     36     158
    BANK1           256    162     216
    BANK2           256      0     108
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK1[20]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string0(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[13]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK1[20]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string0(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2151_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK1[20]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string0(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK1[20]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string0(BANK1[20]), 

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK1[20]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string0(BANK1[20]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S790DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S790DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 16
		 -> main@test(BANK1[16]), 

    calibrate@m	PTR struct RGB_val size(2) Largest target is 16
		 -> main@test(BANK1[16]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 16
		 -> main@test(BANK1[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _determine_color_new->___fldiv
    _isbtw->___flge
    ___xxtofl->___wmul
    ___fldiv->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate->_color_read_Blue
    _calibrate->_color_read_Clear
    _calibrate->_color_read_Green
    _calibrate->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fltol->___flsub
    ___flsub->___fldiv
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               166   166      0   50474
                                             79 COMRAM     2     2      0
                                              0 BANK1    162   162      0
                    _Interrupts_init
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                          _calibrate
                   _color_click_init
                _determine_color_new
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   17333
                                             18 BANK0     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   16121
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   15591
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    7375
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    6272
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 20    18      2   12260
                                             54 COMRAM    20    18      2
                            ___fldiv
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6986
                                             16 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     742
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1528
                                             10 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2909
                                             29 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     913
                                             62 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3017
                                             54 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2390
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2176
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     447
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___flmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___fldiv (ARG)
     ___flmul (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _calibrate
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fldiv
     ___xxtofl
     _isbtw
       ___flge
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      6C      10       42.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A2      D8       7       84.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     237       8        0.0%
DATA                 0      0     237       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 07 17:59:12 2021

     __size_of_getCharFromTxBuf 002C                  _color_read_Red 3E72                    ___fldiv@aexp 0036  
                  ___fldiv@bexp 0035                    ___fldiv@sign 002E                 _color_read_Blue 3F62  
                            l33 41D6                              l42 3EC0                              l51 3D10  
                            l36 433E                              l45 3F10                              l39 3F60  
                            l48 3FB0                              l85 3BDC                              l89 3DCC  
           ___wmul@multiplicand 0007                _color_read_Clear 3F12                _color_read_Green 3EC2  
             ??_Interrupts_init 0005                   main@BlueRatio 0176                             l101 1788  
                           l131 42B2                             l140 43BE                             l134 42D8  
                           l143 43AA                             l311 1836                             l128 425C  
                           l312 1838                             l137 43B4                             l321 192E  
                           l146 4394                             l314 1846                             l403 4206  
                           l316 18F2                             l149 40BE                             l318 1900  
                           l407 4358                             l186 407C                             l450 42FE  
                           l363 431E                             l438 43A0                             l720 39D2  
                           l394 4286                             l715 398C                             l564 3664  
                           l397 4370                             l577 37C8                             l747 38CE  
                           l980 2036                             l978 2082                             l995 219C  
                           l987 2352                             l979 2070                             _abs 40C0  
                  main@RedRatio 016E                             _pad 3A9E                             wreg 000FE8  
                  ___flmul@aexp 0016                    ___flmul@bexp 0017                    ___flmul@sign 0011  
                  ___flmul@temp 001C                    ___flmul@prod 0018                    ___fltol@exp1 0048  
                          l1004 226C                            l1020 3FF6                            l1005 225A  
                          l1032 2B16                            l1112 3274                            l1105 31DC  
                          l1034 2976                            l1043 29BC                            ?_abs 0017  
                          l1108 3338                            l1204 2C12                            l1045 2A34  
                          l1037 293A                            l1301 43C0                            l1046 2A22  
                          l1230 40F6                            l1071 260E                            l1119 32D0  
                          l1064 2418                            l1128 3E1E                            l1081 273E  
                          l1073 2686                            l1233 40FE                            l1225 3CA6  
                          l1074 2674                            l1162 3B26                            l1170 2F44  
                          l1226 3CAE                            l1219 2EA2                            l1068 277C  
                          l1164 3B62                            l1172 2F4C                            l1261 34D4  
                          l1342 41A2                            l1190 3184                            l1159 3AE4  
                          l4000 0FD6                            l1264 34DC                            l4010 10F6  
                          l4002 101C                            l1290 3A9C                            l1267 4136  
                          l1275 3E70                            l4020 1216                            l4012 113C  
                          l4004 1062                            l3206 42B2                            l4030 1336  
                          l4022 125C                            l4014 1182                            l4006 10A8  
                          l4200 2408                            l3208 42C2                            l3320 4390  
                          l4040 1418                            l4032 133E                            l4024 1264  
                          l4016 118A                            l4008 10B0                            l4120 4318  
                          l4112 4300                            l5000 2F54                            l4210 2458  
                          l4202 2428                            l3330 4080                            l3314 43AC  
                          l3322 43A2                            l4050 1538                            l4042 145E  
                          l4034 1384                            l4026 12AA                            l4018 11D0  
                          l4122 431A                            l4114 430A                            l1298 403A  
                          l5010 2F8A                            l5002 2F66                            l4140 41D8  
                          l4220 24A8                            l4212 2462                            l4204 2438  
                          l4300 3FC2                            l3340 40BC                            l3332 4084  
                          l3316 43B0                            l3324 43A6                            l3500 3EC2  
                          l4060 1658                            l4052 157E                            l4044 14A4  
                          l4036 13CA                            l4028 12F0                            l4124 431C  
                          l4116 430C                            l5012 2F90                            l5020 3082  
                          l5004 2F74                            l5100 2B18                            l4126 4396  
                          l4142 41DC                            l4230 24EA                            l4222 24B4  
                          l4214 2478                            l4310 37F4                            l3334 408C  
                          l3326 43B6                            l3318 438C                            l3502 3F08  
                          l4070 1778                            l4062 169E                            l4054 15C4  
                          l4046 14EA                            l4038 1410                            l4118 430E  
                          l4150 4354                            l5022 309C                            l5030 30FE  
                          l5014 3012                            l5006 2F7A                            l5110 2B70  
                          l5102 2B40                            l4144 41EA                            l4240 254C  
                          l4232 24FA                            l4224 24C2                            l4216 2484  
                          l4208 244C                            l3600 1EEA                            l4320 3842  
                          l4312 381E                            l4304 37CA                            l3336 4094  
                          l3328 43BA                            l3360 393C                            l3512 3B64  
                          l4072 1780                            l4064 16A6                            l4056 15CC  
                          l4048 14F2                            l4080 4064                            l5040 3144  
                          l5032 3110                            l5024 30BA                            l5016 3018  
                          l5008 2F82                            l5112 2B72                            l5104 2B4E  
                          l4146 41EE                            l4250 25F4                            l4242 2568  
                          l4234 2514                            l4226 24CE                            l4218 249C  
                          l4170 2360                            l3610 1F1A                            l3602 1EFA  
                          l4330 386E                            l4314 3820                            l4306 37E0  
                          l3338 40BA                            l3506 3F62                            l3370 39CA  
                          l3362 394C                            l3354 38D0                            l3514 3B96  
                          l3522 3BD4                            l4066 16EC                            l4058 1612  
                          l4082 4078                            l5050 334E                            l5042 314C  
                          l5034 3120                            l5026 30D4                            l5018 301E  
                          l5130 2B9C                            l5122 2B90                            l5114 2B84  
                          l5106 2B60                            l4260 2630                            l4252 25FE  
                          l4244 2592                            l4236 2524                            l4228 24DE  
                          l4180 23A0                            l4172 236E                            l3700 20F0  
                          l3620 1F5A                            l3612 1F28                            l3604 1F00  
                          l4340 389E                            l4316 3830                            l3508 3FA8  
                          l3372 39D0                            l3364 395A                            l3356 38FE  
                          l3516 3BC8                            l4068 1732                            l4084 407A  
                          l4076 403C                            l4148 4340                            l5060 33B4  
                          l5052 3352                            l5036 3126                            l5044 315C  
                          l5028 30EE                            l5140 2C22                            l5108 2B64  
                          l4270 26A2                            l4262 263E                            l4254 260C  
                          l4246 25C8                            l4238 2540                            l4190 23D0  
                          l4182 23A6                            l4174 2370                            l3710 2136  
                          l3702 20FE                            l3630 1F94                            l3622 1F5C  
                          l3614 1F2A                            l3606 1F12                            l4342 38AE  
                          l4326 385A                            l4318 3834                            l3366 396C  
                          l3358 390E                            l4078 404C                            l5070 33E0  
                          l5054 3356                            l5038 3138                            l5150 2CBC  
                          l5142 2C4A                            l5134 2BA8                            l5126 2B96  
                          l5118 2B8A                            l4280 270C                            l4272 26B0  
                          l4264 266C                            l4256 261E                            l4248 25D6  
                          l4192 23D2                            l4184 23B6                            l4176 2380  
                          l4168 2354                            l3720 21B2                            l3712 216A  
                          l3704 2100                            l3640 1FA8                            l3632 1F98  
                          l3616 1F3A                            l3624 1F64                            l3608 1F14  
                          l4344 38BE                            l4336 3882                            l4328 3864  
                          l3480 4246                            l3800 27CC                            l3368 397A  
                          l5080 3494                            l5072 3418                            l5064 33BA  
                          l5056 3376                            l5048 333A                            l5160 2D50  
                          l5152 2CCA                            l5144 2C80                            l5136 2C00  
                          l4290 2762                            l4282 2726                            l4274 26DA  
                          l4258 262C                            l4194 23E2                            l4186 23BC  
                          l4178 2390                            l3730 21EE                            l3722 21C2  
                          l3714 216C                            l3706 210A                            l3650 1FBC  
                          l3642 1FAC                            l3634 1F9C                            l3626 1F74  
                          l3618 1F4A                            l4338 388E                            l3490 3F58  
                          l3482 4248                            l3474 4234                            l3810 27FE  
                          l3802 27D4                            l5082 34A6                            l5066 33D0  
                          l5058 33B0                            l5170 2E20                            l5162 2D78  
                          l5146 2C8E                            l5138 2C20                            l5250 3C86  
                          l3572 4260                            l4284 2742                            l4292 2768  
                          l4268 2696                            l4276 26DE                            l4196 23F2  
                          l4188 23C2                            l3740 221A                            l3732 21F0  
                          l3716 217C                            l3708 2110                            l3660 1FD0  
                          l3652 1FC0                            l3644 1FB0                            l3636 1FA0  
                          l3628 1F86                            l3484 424A                            l3476 423E  
                          l3900 2A8C                            l3820 2832                            l3812 2800  
                          l3804 27E4                            l3580 435A                            l5084 34B8  
                          l5076 3452                            l5068 33D8                            l5180 2E5C  
                          l5172 2E2E                            l5164 2DC0                            l5156 2D16  
                          l5148 2C9C                            l5244 3C4A                            l5500 1816  
                          l3574 4270                            l4294 276C                            l4286 2752  
                          l4278 26F8                            l4198 2402                            l3750 2252  
                          l3734 21FE                            l3726 21D6                            l3742 221C  
                          l3718 218C                            l3670 202E                            l3654 1FC4  
                          l3646 1FB4                            l3638 1FA4                            l3662 1FD4  
                          l3590 1EB0                            l3494 3E72                            l3478 4244  
                          l3486 4322                            l3910 2AF6                            l3902 2AA6  
                          l3830 2878                            l3814 2810                            l3822 283A  
                          l3806 27EA                            l5174 2E42                            l5158 2D28  
                          l5246 3C52                            l5510 1820                            l5502 1818  
                          ?_pad 0015                            l3576 4274                            l4288 2760  
                          l3760 22D0                            l3736 2206                            l3728 21E0  
                          l3744 222A                            l3680 2064                            l3672 2044  
                          l3664 1FD8                            l3656 1FC8                            l3648 1FB8  
                          l3592 1EC0                            l3584 1E94                            l3488 3F12  
                          l3496 3EB8                            l3912 2B04                            l3904 2ABC  
                          l3840 28A0                            l3832 287C                            l3824 284A  
                          l3816 2820                            l3808 27F0                            l5168 2DF8  
                          l5184 2E68                            l5248 3C60                            l5280 3DE0  
                          l5600 1E1E                            l5520 182A                            l5512 1822  
                          l5504 181A                            l3578 4284                            l3770 2316  
                          l3754 227C                            l3762 22D2                            l3746 222E  
                          l3738 220A                            l3690 20B4                            l3682 206E  
                          l3674 2050                            l3666 2002                            l3658 1FCC  
                          l3594 1ED0                            l3586 1EA0                            l4298 3FB2  
                          l3914 2B0A                            l3906 2AD6                            l3850 28EE  
                          l3826 2860                            l3818 2830                            l3930 31EC  
                          l5186 2E90                            l5178 2E4E                            l5282 3DE8  
                          l5610 1E70                            l5602 1E2A                            l5530 1880  
                          l5522 1854                            l5514 1824                            l5506 181C  
                          l3780 2340                            l3772 2324                            l3764 22E2  
                          l3756 2288                            l3748 223C                            l3692 20C4  
                          l3684 2090                            l3676 2054                            l3668 201E  
                          l3596 1EE0                            l3588 1EAE                            l3916 2B0C  
                          l3908 2AF2                            l3860 2938                            l3852 28FE  
                          l3844 28B4                            l3828 2870                            l3836 2890  
                          l3940 322A                            l3932 3202                            l3924 3188  
                          l4900 3614                            l5284 3DF0                            l5612 1E74  
                          l5604 1E2E                            l5540 18D4                            l5532 1882  
                          l5524 185C                            l5516 1826                            l5508 181E  
                          l5460 179E                            l3782 2342                            l3774 232A  
                          l3766 22F2                            l3758 2296                            l3694 20D2  
                          l3686 20A0                            l3678 2062                            l3598 1EE2  
                          l3870 2986                            l3862 2944                            l3854 2906  
                          l3846 28CE                            l3838 28A0                            l3790 2798  
                          l3950 32B2                            l3942 325C                            l3926 3198  
                          l4902 3624                            l4910 366A                            l4830 39F8  
                          l5286 3E0C                            l5278 3DCE                            l5606 1E46  
                          l5542 18D8                            l5534 1884                            l5526 1868  
                          l5550 191A                            l5518 1828                            l5470 17AC  
                          l5462 17A2                            l5454 178A                            l3776 232C  
                          l3768 2312                            l3696 20E0                            l3872 299C  
                          l3880 29CC                            l3864 2962                            l3856 2916  
                          l3848 28DE                            l3792 279A                            l3960 3308  
                          l3952 32C0                            l3944 325E                            l3936 3216  
                          l3928 31A6                            l4904 3644                            l4920 36CA  
                          l4912 3678                            l4832 3A02                            l4840 3FF8  
                          l5608 1E64                            l5560 1A5C                            l5552 1934  
                          l5544 18F0                            l5528 187E                            l5536 189A  
                          l5480 17C6                            l5472 17AC                            l5464 17A4  
                          l5456 1796                            l3778 2332                            l3698 20EC  
                          l3882 29DA                            l3874 29A2                            l3866 2964  
                          l3858 292A                            l3794 27AA                            l3786 277E  
                          l3962 3318                            l3954 32DE                            l3946 326A  
                          l3938 321E                            l4930 3740                            l4922 36E8  
                          l4914 3698                            l4834 3A20                            l4826 39D4  
                          l4842 4004                            l4850 417A                            l5570 1A92  
                          l5562 1A74                            l5554 1954                            l5546 190E  
                          l5538 18C8                            l5490 17EE                            l5482 17CA  
                          l5474 17B2                            l5466 17A8                            l5458 179A  
                          l3980 41A8                            l3892 2A44                            l3884 29DE  
                          l3876 29AC                            l3868 2974                            l3796 27BA  
                          l3788 278A                            l3964 3326                            l3956 32E0  
                          l3948 32A6                            l4860 42F6                            l4940 37A8  
                          l4932 3760                            l4924 36F0                            l4916 369C  
                          l4908 3666                            l4836 3A56                            l4828 39E6  
                          l4844 4016                            l4852 417E                            l5580 1BB6  
                          l5572 1AD2                            l5564 1A76                            l5556 19AC  
                          l5548 1910                            l5492 17F6                            l5484 17D2  
                          l5476 17B6                            l5468 17AA                            l3990 3D70  
                          l3982 41B2                            l3894 2A50                            l3886 29EC  
                          l3878 29BA                            l3798 27CA                            l3966 3328  
                          l3958 32E4                            l4870 3510                            l4934 3772  
                          l4926 3704                            l4918 36AA                            l4846 401A  
                          l4854 4196                            l4950 3AD0                            l5590 1CEE  
                          l5582 1BCE                            l5574 1B80                            l5566 1A78  
                          l5558 1A04                            l5494 17FE                            l5486 17D6  
                          l5478 17BE                            l3984 41C2                            l3896 2A5E  
                          l3888 2A1A                            l3992 0E4E                            l4880 3552  
                          l4872 3514                            l4864 34DE                            l4928 3712  
                          l4936 3778                            l4848 416E                            l4960 3B36  
                          l4952 3ADC                            l4944 3A9E                            l5664 2BD2  
                          l5592 1CF2                            l5584 1C0E                            l5576 1BA6  
                          l5568 1A7A                            l5496 1806                            l5488 17EA  
                          l3986 41CC                            l3978 41A4                            l3898 2A88  
                          l3994 0E56                            l4858 42DA                            l4970 4100  
                          l5666 3402                            l4890 35AC                            l4882 3570  
                          l4874 3522                            l4866 34E2                            l4938 3788  
                          l4962 3B4A                            l4954 3AF0                            l4946 3AAE  
                          l5594 1D0A                            l5586 1CBC                            l5578 1BB2  
                          l5498 180E                            l3996 0ED6                            l3988 3CB0  
                          l4980 3E66                            l4892 35DA                            l4884 3578  
                          l4876 3542                            l4868 34F0                            l4956 3B04  
                          l4948 3AC2                            l5596 1D4A                            l5588 1CE2  
                          l3998 0F56                            l4982 3E6A                            l4974 3E20  
                          l4894 35FA                            l4886 358C                            l4878 3546  
                          l4966 40C0                            l4958 3B08                            l4990 2EEC  
                          l5598 1DF8                            l4976 3E24                            l4896 35FC  
                          l4888 359A                            l4968 40DA                            l4992 2F0C  
                          l4978 3E38                            l4898 360E                            l4994 2F1C  
                          l4986 2EA4                            l4996 2F1E                            l4988 2EC4  
                          l4998 2F38                            STR_1 0E05                            STR_2 0E40  
                          STR_3 0E34                            STR_4 0E28                            STR_5 0E1B  
                          u3000 397A                            u3001 3976                            u3010 39CA  
                          u3011 39C6                            u4000 1182                            u3200 436E  
                  _BAUD4CONbits 000EE9                            u4001 117E                            u3201 4368  
                          _LATE 000F7D                            u3130 3B96                            u4010 11D0  
                          u3210 4370                            u3131 3B92                            u4011 11CC  
                          _LATG 000F7F                            u3300 1F94                            u3220 1EAE  
                          u3140 3BC8                            u4100 145E                            u4020 1216  
                          u3301 1F90                            u3221 1EAA                            u3141 3BC4  
                          u4101 145A                            u4021 1212                            u3310 2002  
                          u3230 1EC0                            u4110 14A4                            u4030 125C  
                          u3311 1FFE                            u3231 1EBC                            u4111 14A0  
                          u4031 1258                            u3400 20E0                            u3320 201A  
                          u3240 1ED0                            u4200 1732                            u4120 14EA  
                          u4040 12AA                            u5000 3522                            u3401 20DC  
                          u3321 2014                            u3241 1ECC                            u4201 172E  
                          u4121 14E6                            u4041 12A6                            u5001 351E  
                          u3410 20FE                            u3330 201C                            u3250 1F12  
                          u4210 1778                            u4130 1538                            u4050 12F0  
                          _T2PR 000FBC                            u3411 20FA                            u3251 1F0E  
                          u4211 1774                            u4131 1534                            u4051 12EC  
                          u5011 354C                            u4300 23D0                            u3500 223C  
                          u3420 2136                            u3340 2044                            u3260 1F28  
                          u2700 42C2                            u4140 157E                            u4060 1336  
                          u5020 3570                            u5100 3740                            u4301 23CC  
                          u3501 2238                            u3421 2132                            u3341 2040  
                          u3261 1F24                            u2701 42BE                            u4141 157A  
                          u4061 1332                            u5021 356C                            u5101 373C  
                          u3190 4270                            u4230 4206                            u4310 23E2  
                          u3510 2252                            u3430 217C                            u3350 2062  
                          u3270 1F3A                            u2710 42D8                            u4150 15C4  
                          u4070 1384                            u5030 359A                            u5110 3788  
                          u3191 426C                            u4231 4202                            u4311 23DE  
                          u3511 224E                            u3431 2178                            u3351 205E  
                          u3271 1F36                            u2711 42D4                            u4151 15C0  
                          u4071 1380                            u5031 3596                            u5111 3784  
                          u4400 2682                            u4320 23F2                            u3600 2340  
                          u3520 2268                            u3440 21B2                            u3360 2082  
                          u3280 1F4A                            u4160 1612                            u4080 13CA  
                          u4240 4354                            u5200 3E66                            u5040 35DA  
                          u5120 3AAE                            u4401 267E                            u4321 23EE  
                          u3601 233C                            u3521 2264                            u3441 21AE  
                          u3361 207E                            u3281 1F46                            u4161 160E  
                          u4081 13C6                            u4241 4350                            u5201 3E62  
                          u5041 35D6                            u5121 3AAA                            u4410 2696  
                          u4330 2428                            u3530 227C                            u3450 21C2  
                          u3370 2090                            u3290 1F86                            u3610 2798  
                          u4170 1658                            u4090 1410                            u5050 3624  
                          u5130 3AD0                            u5210 2ED4                            u4411 2692  
                          u4331 2424                            u3531 2278                            u3451 21BE  
                          u3371 208C                            u3291 1F82                            u3611 2794  
                          u4171 1654                            u4091 140C                            u5051 3620  
                          u5131 3ACC                            u5211 2ECE                            u4420 26B0  
                          u4340 2438                            u3540 2296                            u3460 21EE  
                          u3380 20A0                            u4500 387E                            u3700 2938  
                          u3620 27AA                            u4180 169E                            u5060 3678  
                          u5140 3B26                            u5300 30D4                            u5220 2ED6  
                          u4421 26AC                            u4341 2434                            u3541 2292  
                          u3461 21EA                            u3381 209C                            u4501 387A  
                          u3701 2934                            u3621 27A6                            u4181 169A  
                          u5061 3674                            u5141 3B22                            u5301 30D0  
                          u4430 26F8                            u4350 25B2                            u4270 236E  
                          u3550 22D0                            u3470 21FE                            u3390 20D2  
                          u4510 389E                            u3710 2962                            u3630 27BA  
                          u4190 16EC                            u5070 36AA                            u5150 3B36  
                          u5310 30EE                            u5230 2EEC                            u4431 26F4  
                          u4271 236A                            u3551 22CC                            u3471 21FA  
                          u3391 20CE                            u4511 389A                            u3711 295E  
                          u3631 27B6                            u4191 16E8                            u5071 36A6  
                          u5151 3B32                            u5311 30EA                            u5231 2EE8  
                          u4440 2726                            u4360 260C                            u4280 2380  
                          u3560 22E2                            u3480 221A                            u4520 38AE  
                          u3800 2A5E                            u3720 2986                            u3640 27FE  
                          u5400 3490                            u5080 36E8                            u5160 40DA  
                          u5320 30FE                            u5240 2F1C                            u4441 2722  
                          u4361 2608                            u4281 237C                            u3561 22DE  
                          u3481 2216                            u4521 38AA                            u3801 2A5A  
                          u3721 2982                            u3641 27FA                            u5081 36E4  
                          u5161 40D6                            u5321 30FA                            u5241 2F18  
                          u4450 2760                            u4370 262C                            u4290 2390  
                          u3570 22F2                            u3490 222A                            u3810 2AA6  
                          u3730 299C                            u3650 2810                            u5170 4130  
                          u5410 34A6                            u5090 3712                            u5330 3110  
                          u5250 2F38                            u4451 275C                            u4371 2628  
                          u4355 25A8                            u4291 238C                            u3571 22EE  
                          u3491 2226                            u3811 2AA2                            u3731 2998  
                          u3651 280C                            u5171 412A                            u5411 34A2  
                          u5091 370E                            u5331 310C                            u5251 2F34  
                          u4380 263E                            u3580 2312                            u4460 37E0  
                          u2940 40A8                            u3820 2AD6                            u3740 29BA  
                          u3660 2820                            u3900 32D0                            u5180 4132  
                          u5420 34B8                            u5340 3120                            u5260 2F66  
                          u5500 2D10                            u4381 263A                            u3581 230E  
                          u4461 37DC                            u2941 40A0                            u3821 2AD2  
                          u3741 29B6                            u3661 281C                            u3901 32CC  
                          u5421 34B4                            u5341 311C                            u5261 2F62  
                          u4390 266C                            u3590 2324                            u4470 3814  
                          u3830 2B04                            u3750 29DA                            u3670 2860  
                          u3910 32DE                            u5190 3E38                            u5350 3138  
                          u5270 2F74                            u5510 2D28                            u4391 2668  
                          u3591 2320                            u3831 2B00                            u3751 29D6  
                          u3671 285C                            u3911 32DA                            u5191 3E34  
                          u5351 3134                            u5271 2F70                            u5511 2D24  
                          u4480 3842                            u3760 29EC                            u3680 28A0  
                          u3920 3318                            u3840 3198                            u5360 3376  
                          u5280 309C                            u5520 2D50                            u5440 2B40  
                          u4481 383E                            u3761 29E8                            u3681 289C  
                          u3921 3314                            u3841 3194                            u5361 3372  
                          u5281 3098                            u5521 2D4C                            u5441 2B3C  
                          u4490 3856                            u3770 2A1A                            u3690 2916  
                          u3930 3326                            u3850 31A6                            u2970 38FE  
                          u5370 33B0                            u5290 30BA                            u5530 2D78  
                          u5450 2C12                            u4491 3852                            u4475 380A  
                          u3771 2A16                            u3691 2912                            u3931 3322  
                          u3851 31A2                            u2971 38FA                            u5371 33AC  
                          u5291 30B6                            u5531 2D74                            u5451 2C0E  
                          u3780 2A30                            u3860 3202                            u2980 393C  
                          u5380 33CC                            u5540 2E20                            u5460 2C20  
                          u3781 2A2C                            u3861 31FE                            u2981 3938  
                          u5381 33C8                            u5541 2E1C                            u5461 2C1C  
                          u2958 40AA                            u3790 2A44                            u3870 3258  
                          u2990 395A                            u3950 101C                            u5390 348E  
                          u5470 2C4A                            u3791 2A40                            u3871 3254  
                          u2991 3956                            u3951 1018                            u5391 3488  
                          u5471 2C46                            u3880 32A2                            u3960 1062  
                          u5480 2C8E                            u5800 190E                            u3881 329E  
                          u3961 105E                            u5481 2C8A                            u5801 190A  
                          u3890 32C0                            u3970 10A8                            u4930 39E6  
                          u5490 2D0E                            u5810 192E                            u3891 32BC  
                          u3971 10A4                            u4931 39E2                            u5491 2D08  
                          u5811 192A                            u3980 10F6                            u4940 39F8  
                          u3981 10F2                            u4941 39F4                            u3990 113C  
                          u4950 3A20                            u5590 3CA6                            u3991 1138  
                          u4951 3A1C                            u5591 3CA2                            u4960 3A56  
                          u4961 3A52                            u4970 403A                            u5770 1846  
                          u4971 4036                            u5907 1E7E                            u5827 1872  
                          u5771 1842                            u4980 4196                            u5780 1854  
                          u5917 41B8                            u4981 4192                            u5837 188E  
                          u5781 1850                            u4990 34F0                            u5790 1900  
                          u4991 34EC                            u5791 18FC                            u5847 18E2  
                          u5857 1A66                            u5867 1A84                            u5877 1BC0  
                          u5887 1CFC                            u5897 1E38                            abs@a 0017  
                          _dbuf 00BA                            _atoi 333A                            _main 178A  
                          _dtoa 2EA4                            _prec 00B6                            _nout 00B2  
                          pad@i 001C                            pad@p 0019                            _tiny 0E01  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001E                            fsr2l 000FD9  
                          btemp 0056                            prodh 000FF4                            prodl 000FF3  
                          start 0076                 ___fldiv@new_exp 002F                     main@string0 0114  
                   main@string1 0128                     main@string2 013C                     main@string3 0150  
        __end_of_color_read_Red 3EC2                 __end_of_HighISR 0076                    ___param_bank 000000  
                         ??_abs 0019                           ??_pad 001B                   ___fltol@sign1 0047  
                main@GreenRatio 0172                 __end_of___aodiv 3666                           ?_atoi 000C  
               __end_of___fladd 2354                           ?_main 0001                           ?_dtoa 0020  
               __end_of___aomod 37CA                 __end_of___fldiv 2B18                 __end_of___flmul 277E  
               __end_of___flsub 3FF8                 __end_of___fltol 38D0        __size_of_initDCmotorsPWM 0042  
                         i2l445 0066                           i2l390 4232                           i2l383 42B0  
                         i2l447 006A                           i2l397 4388                    vfpfcnvrt@fmt 0046  
    __end_of_I2C_2_Master_Start 43B6      __end_of_I2C_2_Master_Write 4396                           _flags 00B8  
                         _errno 00B0                           _fputc 39D4                           _isbtw 3B64  
                         _fputs 3FF8                 __end_of_isdigit 4138                           atoi@n 0019  
                         pad@fp 0015                           atoi@s 000C                           _width 00B4  
                         _putch 43C0                           dtoa@d 0022                           dtoa@i 0042  
                         dtoa@n 003A                           dtoa@p 0034                           dtoa@s 0038  
                         dtoa@w 0036                 __end_of_isspace 3E72                           tablat 000FF5  
                         ttemp5 0057                           ttemp6 005A                           ttemp7 005E  
                         status 000FD8                           wtemp8 0057                 __end_of_sprintf 3E20  
       __end_of_color_read_Blue 3FB2           _I2C_2_Master_RepStart 43B6              putCharToRxBuf@byte 0001  
               ?_color_read_Red 0009                 __initialization 3D12                    __end_of_atoi 34DE  
                  __end_of_main 1E94                    __end_of_dtoa 3186                    __end_of_tiny 0E05  
               i2_isDataInTxBuf 4372              putCharToTxBuf@byte 0005                          ??_atoi 000E  
                        ??_main 0050                          ??_dtoa 002A                   __activetblptr 000003  
                        ?_fputc 0005                          ?_isbtw 0011                          ?_fputs 000E  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l4160 4208                          i2l4152 428A  
                        i2l4162 4218                          i2l4154 429A                          i2l4164 421C  
                        i2l4156 429E                          i2l2644 4372                          i2l4158 42AE  
                        i2l4760 0022                          i2l4762 0028                          i2l4764 0038  
                        i2l4766 0046                          i2l4758 0012                          i2l4768 005A  
                 vfpfcnvrt@done 00E2                       ??_HighISR 0003        __end_of_color_click_init 41D8  
                        _RX4PPS 000E15                          _TX4REG 000EE4                __end_of___xxtofl 333A  
                 main@int_part1 017A                   main@int_part2 017C                   main@int_part3 017E  
                 ?_read_colours 0010                    vfprintf@cfmt 004E                          ___flge 38D0  
              _getCharFromTxBuf 4208                       ??___aodiv 0015     __end_of_determine_color_new 178A  
                     ??___fladd 000D                       ??___aomod 0015                          ___wmul 42DA  
                     ??___fldiv 0026                       ??___flmul 000D                       ??___flsub 003F  
                     ??___fltol 0043                          clear_0 3D58                          isa$std 000001  
                        pad@buf 0017                          dtoa@fp 0020                          _strlen 416E  
                        fputc@c 0005               ?_TxBufferedString 0006                          fputs@c 0012  
                        fputs@i 0013                          fputs@s 000E                       ??_isdigit 0007  
                  __mediumconst 0000                       ??_isspace 0007                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8              ??_TxBufferedString 0008  
                        putch@c 0001                __end_of_vfprintf 3CB0               ??_initDCmotorsPWM 0007  
                     ??_sprintf 0050                      ___flge@ff1 0005                      ___flge@ff2 0009  
                  ___xxtofl@arg 0015                    ___xxtofl@exp 0014                    ___xxtofl@val 000B  
         __end_of_isDataInTxBuf 4372                      __accesstop 0060         __end_of__initialization 3D66  
      __end_of_color_read_Clear 3F62        __end_of_color_read_Green 3F12          ?_I2C_2_Master_RepStart 0001  
       __end_ofi2_isDataInTxBuf 438A                   ___rparam_used 000001                      ___fltol@f1 003F  
              ?_color_read_Blue 0009                  ??_read_colours 0012                 _Interrupts_init 4396  
                __pcstackCOMRAM 0001              __size_of_calibrate 005E                    __pidataBANK1 4138  
                  __pidataBANK2 3BDE                   __end_of_fputc 3A9E                   __end_of_isbtw 3BDE  
                 __end_of_fputs 403C                   __end_of_putch 43C2                         ??_fputc 0009  
                       ??_isbtw 001D                         ??_fputs 0012                         ??_putch 0005  
                    __pbssBANK0 0060               _color_writetoaddr 4320                    _T2CLKCONbits 000FBF  
                       ?___flge 0005                  main@frac_part1 0166                  main@frac_part2 0168  
                main@frac_part3 016A              ?_color_writetoaddr 0007                         ?___wmul 0005  
            __size_of_sendTxBuf 001A             ??_color_writetoaddr 0008                         ?_strlen 0005  
                     ?___xxtofl 000B                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
            __size_of_vfpfcnvrt 038C                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5               __end_of_calibrate 3DCE  
       __end_of_Interrupts_init 43A2          color_writetoaddr@value 0007                ??_color_read_Red 000B  
                       _HighISR 0008       __end_of_color_writetoaddr 4340                ?i2_isDataInTxBuf 0001  
            _I2C_2_Master_Start 43AC                      calibrate@m 0010                      _initUSART4 4300  
            _I2C_2_Master_Write 438A                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000E                 __size_of___flge 0104                         ___aodiv 34DE  
                       ___fladd 1E94                         ___aomod 3666                         ___fldiv 277E  
                       ___flmul 2354                         ___flsub 3FB2                         ___fltol 37CA  
               __size_of___wmul 0026             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 00E6                    __psmallconst 0E00         __size_of_putCharToRxBuf 002A  
       __size_of_putCharToTxBuf 002A                         __pcinit 3D12                         __ramtop 0E00  
                       __ptext0 178A                         __ptext1 3DCE                         __ptext2 3C4A  
                       __ptext3 2B18                         __ptext4 2EA4                         __ptext5 3A9E  
                       __ptext6 416E                         __ptext7 3FF8                         __ptext8 39D4  
                       __ptext9 43C0                 __size_of_strlen 0036                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                         _isdigit 4100  
                    ??___xxtofl 000F                         _isspace 3E20                       _T2HLTbits 000FBE  
          __end_of_read_colours 3D12                   _RxBufWriteCnt 0055                         atoi@neg 0012  
      __end_of_getCharFromTxBuf 4234                         main@cal 016C                         _sprintf 3DCE  
          ??_I2C_2_Master_Start 0006            ??_I2C_2_Master_Write 0006            end_of_initialization 3D66  
             __end_of_sendTxBuf 435A                         fputc@fp 0007                         fputs@fp 0010  
             ?_color_click_init 0001              ??_color_click_init 0009               __end_of_vfpfcnvrt 2EA4  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 004E  
                       strlen@a 0007                         strlen@s 0005                 _initDCmotorsPWM 403C  
                     _PORTFbits 000F8E                     ___fladd@grs 0014                   ___xxtofl@sign 0013  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0031                     ___fldiv@rem 002A  
      color_writetoaddr@address 0008         ??_I2C_2_Master_RepStart 0006     determine_color_new@RedRatio 003F  
              ?_Interrupts_init 0001                     ___flmul@grs 0012               ?_color_read_Clear 0009  
    __size_of_color_writetoaddr 0020                    _EUSART4RXbuf 009C                    _EUSART4TXbuf 0060  
     __size_of_TxBufferedString 0030               ?_color_read_Green 0009                     ?_initUSART4 0001  
                    main@motorL 0180                      main@motorR 0189              ??_color_read_Clear 000B  
                    main@output 0164              ??_color_read_Green 000B                      main@string 0100  
                __end_of___flge 39D4                     vfpfcnvrt@ap 0048                     vfpfcnvrt@fp 0044  
                   vfpfcnvrt@ll 00DA                  __end_of___wmul 4300    __size_of_determine_color_new 093C  
                __end_of_strlen 41A4             color_read_Clear@tmp 000E             start_initialization 3D12  
                   __end_of_abs 4100                     __end_of_pad 3B64                   _TxBufWriteCnt 0053  
           color_read_Green@tmp 000E         __end_of_initDCmotorsPWM 407E                     vfprintf@fmt 00E8  
                      ??___flge 000D                        ??___wmul 0009                  _putCharToRxBuf 4288  
                _putCharToTxBuf 425E                     __pdataBANK1 01A2                     __pdataBANK2 0200  
      __size_of_color_read_Blue 0050           __size_of_read_colours 0062                        ??_strlen 0007  
        __size_of_isDataInTxBuf 0018                       ___fladd@a 0009                       ___fladd@b 0005  
                     ___fldiv@a 0022                       ___fldiv@b 001E   determine_color_new@GreenRatio 0043  
                     ___flmul@a 0009                       ___flmul@b 0005                     __pbssCOMRAM 0052  
                     ___flsub@a 003B                       ___flsub@b 0037             __size_of_initUSART4 0020  
                 __pcstackBANK0 00DA                   __pcstackBANK1 0100                ___aodiv@dividend 0005  
             __size_of___xxtofl 01B4                        ?_HighISR 0001                       _calibrate 3D70  
                     _atoi$2270 0018                       _atoi$2271 0016                       _atoi$2269 0014  
                     _dtoa$2234 0032          __end_of_putCharToRxBuf 42B2          __end_of_putCharToTxBuf 4288  
                  _read_colours 3CB0                       __pintcode 0008                        ?___aodiv 0005  
                      ?___fladd 0005                        ?___aomod 0005                        ?___fldiv 001E  
              ___aodiv@quotient 0017                        ?___flmul 0005                        ?___flsub 0037  
                      ?___fltol 003F          TxBufferedString@string 0006            I2C_2_Master_Read@ack 0007  
             __size_of_vfprintf 0066            I2C_2_Master_Read@tmp 0008                     __smallconst 0E00  
                      ?_isdigit 0005               _I2C_2_Master_Idle 42B2               _I2C_2_Master_Init 4234  
             _I2C_2_Master_Read 407E               _I2C_2_Master_Stop 43A2                        ?_isspace 0005  
                  _RxBufReadCnt 0054              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0005  
                      ?_sprintf 00EC               ?_getCharFromTxBuf 0001                  __size_of_fputc 00CA  
                __size_of_isbtw 007A                  __size_of_fputs 0044                  __size_of_putch 0002  
            ??_getCharFromTxBuf 0001             ??_I2C_2_Master_Idle 0005             ??_I2C_2_Master_Init 0005  
           ??_I2C_2_Master_Read 0006                      ?_calibrate 0010                  ___wmul@product 0009  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0006                        _LATCbits 000F7B  
                 _isDataInTxBuf 435A                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                _TxBufferedString 41D8                        _LATGbits 000F7F  
                      _LATHbits 000F80                       _sendTxBuf 4340                        _PIE4bits 000E2D  
                      i2u212_40 4386                        i2u212_41 4380                        i2u213_40 4388  
                      i2u425_40 429A                        i2u425_41 4296                        i2u426_40 4218  
                      i2u426_41 4214                        _PIR4bits 000E37                        i2u490_40 0038  
                      i2u490_41 0034                        i2u491_40 0046                        i2u491_41 0042  
                      i2u492_40 005A                        i2u492_41 0056                        i2u489_40 0022  
                      i2u489_41 001E            determine_color_new@m 0037                 ?_putCharToRxBuf 0001  
              ?_initDCmotorsPWM 0005                 ?_putCharToTxBuf 0001                        _SSP2CON2 000EDA  
                      _SSP2STAT 000ED8        __size_ofi2_isDataInTxBuf 0018                       _vfpfcnvrt 2B18  
        determine_color1@F14763 01A2       __size_of_color_click_init 0034          determine_color2@F14782 0236  
     __end_of_I2C_2_Master_Idle 42DA       __end_of_I2C_2_Master_Init 425E       __end_of_I2C_2_Master_Read 40C0  
             ___wmul@multiplier 0005          determine_color3@F14801 0200       __end_of_I2C_2_Master_Stop 43AC  
   I2C_2_Master_Write@data_byte 0006               ??_color_read_Blue 000B                    _TxBufReadCnt 0052  
                  _isspace$2287 000B                       copy_data0 3D26                       copy_data1 3D46  
   __size_of_I2C_2_Master_Start 000A     __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A  
                ?_isDataInTxBuf 0001   __end_of_I2C_2_Master_RepStart 43C0              color_read_Blue@tmp 000E  
              __size_of_HighISR 006E                      ?_sendTxBuf 0001             _determine_color_new 0E4E  
                  ??_initUSART4 0005                        __Hrparam 0000                      vfprintf@ap 00EA  
                      __Lrparam 0000                      vfprintf@fp 00E6         __size_of_color_read_Red 0050  
              __size_of___aodiv 0188                __size_of___fladd 04C0                __size_of___aomod 0164  
              __size_of___fldiv 039A                __size_of___flmul 042A                __size_of___flsub 0046  
              __size_of___fltol 0106                       isbtw@high 0019                      ?_vfpfcnvrt 0044  
               ___aodiv@divisor 000D       __size_of_color_read_Clear 0050       __size_of_color_read_Green 0050  
               ___aodiv@counter 0015                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
          ?_determine_color_new 0037                      sprintf@fmt 00EE                        ___xxtofl 3186  
              __size_of_isdigit 0038              __end_of_initUSART4 4320                __size_of_isspace 0052  
                      __ptext10 40C0                        __ptext11 3666                        __ptext20 4300  
                      __ptext12 34DE                        __ptext21 403C                        __ptext13 333A  
                      __ptext30 3D70                        __ptext22 0E4E                        __ptext14 3E20  
                      __ptext31 3E72                        __ptext23 3B64                        __ptext15 4100  
                      __ptext40 42B2                        __ptext32 3EC2                        __ptext24 38D0  
                      __ptext16 42DA                        __ptext41 37CA                        __ptext33 3F12  
                      __ptext25 3186                        __ptext17 4340                        __ptext50 4288  
                      __ptext42 3FB2                        __ptext34 3F62                        __ptext26 277E  
                      __ptext18 435A                        __ptext51 4208                        __ptext43 1E94  
                      __ptext35 438A                        __ptext27 41A4                        __ptext19 3CB0  
                      __ptext44 2354                        __ptext36 43A2                        __ptext28 4320  
                      __ptext45 41D8                        __ptext37 43AC                        __ptext29 4234  
                      __ptext46 425E                        __ptext38 43B6                        __ptext47 4396  
                      __ptext39 407E                        __ptext49 4372                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA                __size_of_sprintf 0052                     ??_calibrate 0012  
                 __size_of_atoi 01A4                   __size_of_main 070A                   __size_of_dtoa 02E2  
                      isa$xinst 000000        __size_of_Interrupts_init 000C                      _RC4STAbits 000EE7  
                      int$flags 0056                        _vfprintf 3C4A                        main@test 0192  
    __size_of_I2C_2_Master_Idle 0028      __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042  
         ??_determine_color_new 0039                ___aomod@dividend 0005      __size_of_I2C_2_Master_Stop 000A  
                _vfpfcnvrt$2249 00E4                      _INTCONbits 000FF2               ??i2_isDataInTxBuf 0001  
                      isdigit@c 0005                        isbtw@low 0015                        isbtw@num 0011  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                 ??_isDataInTxBuf 0005  
                      intlevel2 0000                       sprintf@ap 00F6                        isspace@c 0005  
                   ??_sendTxBuf 0005          determine_color_new@out 003D                   read_colours@m 0010  
               ___aomod@divisor 000D                     ??_vfpfcnvrt 004A                 ___aomod@counter 0015  
              _color_click_init 41A4        __end_of_TxBufferedString 4208                        sprintf@f 00F8  
                      sprintf@s 00EC                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                 ___fladd@signs 0011                      _TX4STAbits 000EE8                    ___aodiv@sign 0016  
                  ___fladd@aexp 0012                    ___fladd@bexp 0013                ??_putCharToRxBuf 0001  
              ??_putCharToTxBuf 0005                    ___aomod@sign 0016    determine_color_new@BlueRatio 0047  
